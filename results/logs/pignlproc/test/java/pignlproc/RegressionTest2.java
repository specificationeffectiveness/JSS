package pignlproc;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader0 = new pignlproc.storage.UriUriNTriplesLoader();
        org.apache.hadoop.mapreduce.Job job2 = null;
        java.lang.String[] strArray3 = uriUriNTriplesLoader0.getPartitionKeys("title", job2);
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader0.getSchema("http://.wikipedia.org/wiki/hi%21", job5);
        org.apache.hadoop.mapreduce.RecordReader recordReader7 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit8 = null;
        uriUriNTriplesLoader0.prepareToRead(recordReader7, pigSplit8);
        org.apache.hadoop.mapreduce.Job job11 = null;
        java.lang.String[] strArray12 = uriUriNTriplesLoader0.getPartitionKeys("hi !", job11);
        org.apache.hadoop.mapreduce.Job job14 = null;
        org.apache.pig.ResourceSchema resourceSchema15 = uriUriNTriplesLoader0.getSchema("\"\"\" opennlp / en - sent . bin \"\"\"", job14);
        org.junit.Assert.assertNull(strArray3);
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNull(strArray12);
        org.junit.Assert.assertNotNull(resourceSchema15);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = parsingWikipediaLoader1.getSchema("\"hi!\"", job6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        org.apache.pig.ResourceSchema resourceSchema10 = parsingWikipediaLoader1.getSchema("\"hi!\"\n", job9);
        org.apache.hadoop.mapreduce.Job job12 = null;
        org.apache.pig.ResourceSchema resourceSchema13 = parsingWikipediaLoader1.getSchema("http://.wikipedia.org/wiki/hi%21\n", job12);
        parsingWikipediaLoader1.setUDFContextSignature("http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21");
        org.apache.hadoop.mapreduce.Job job17 = null;
        java.lang.String[] strArray18 = parsingWikipediaLoader1.getPartitionKeys("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22", job17);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple19 = parsingWikipediaLoader1.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNotNull(resourceSchema7);
        org.junit.Assert.assertNotNull(resourceSchema10);
        org.junit.Assert.assertNotNull(resourceSchema13);
        org.junit.Assert.assertNull(strArray18);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        org.apache.commons.logging.Log log4 = sentencesWithLink0.getLogger();
        java.lang.reflect.Type type5 = sentencesWithLink0.getReturnType();
        java.lang.Enum enum7 = null;
        sentencesWithLink0.warn("\"title\"\n", enum7);
        org.apache.pig.data.Tuple tuple9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.DataBag dataBag10 = sentencesWithLink0.exec(tuple9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(type5);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        java.lang.Enum enum5 = null;
        checkAbstract0.warn("opennlp / en - sent . bin", enum5);
        pignlproc.evaluation.SafeTsvText safeTsvText7 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = null;
        safeTsvText7.setPigLogger(pigLogger8);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText10 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable11 = mergeAsOpenNLPAnnotatedText10.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract12 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = checkAbstract12.outputSchema(schema13);
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = mergeAsOpenNLPAnnotatedText10.outputSchema(schema13);
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = safeTsvText7.outputSchema(schema15);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText17 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray19 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList20 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList20, spanArray19);
        java.lang.String str22 = mergeAsOpenNLPAnnotatedText17.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList20);
        pignlproc.evaluation.ConcatTextBag concatTextBag24 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract25 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum27 = null;
        checkAbstract25.warn("http://.wikipedia.org/wiki/hi%21", enum27);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger29 = null;
        checkAbstract25.setPigLogger(pigLogger29);
        checkAbstract25.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText32 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger33 = null;
        safeTsvText32.setPigLogger(pigLogger33);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText35 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable36 = mergeAsOpenNLPAnnotatedText35.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract37 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = checkAbstract37.outputSchema(schema38);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = mergeAsOpenNLPAnnotatedText35.outputSchema(schema38);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = safeTsvText32.outputSchema(schema40);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = checkAbstract25.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = concatTextBag24.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = mergeAsOpenNLPAnnotatedText17.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = safeTsvText7.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = checkAbstract0.outputSchema(schema42);
        org.apache.commons.logging.Log log47 = checkAbstract0.getLogger();
        org.junit.Assert.assertNull(pigProgressable11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(spanArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "href" + "'", str22, "href");
        org.junit.Assert.assertNull(pigProgressable36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(log47);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://.wikipedia.org/wiki/hi%21");
        org.apache.hadoop.mapreduce.RecordWriter recordWriter2 = null;
        uriStringLiteralNTriplesStorer1.prepareToWrite(recordWriter2);
        org.apache.pig.data.Tuple tuple4 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.putNext(tuple4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        pignlproc.markup.Annotation annotation8 = new pignlproc.markup.Annotation(10, 10, "title", "hi !");
        pignlproc.markup.Annotation annotation13 = new pignlproc.markup.Annotation((int) (byte) 1, (-1), "wikiobject", "href");
        pignlproc.markup.Annotation annotation18 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation23 = new pignlproc.markup.Annotation(10, 10, "title", "hi !");
        pignlproc.markup.Annotation annotation28 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        java.lang.String str29 = annotation28.label;
        java.lang.String str30 = annotation28.label;
        pignlproc.markup.Annotation annotation35 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        java.lang.String str36 = annotation35.label;
        java.lang.String str37 = annotation35.label;
        java.lang.String str38 = annotation35.value;
        pignlproc.markup.Annotation[] annotationArray39 = new pignlproc.markup.Annotation[] { annotation8, annotation13, annotation18, annotation23, annotation28, annotation35 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList40 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList40, annotationArray39);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser42 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList43 = annotatingMarkupParser42.getHeaders();
        java.util.List<java.lang.String> strList44 = annotatingMarkupParser42.getHeaders();
        java.lang.Appendable appendable45 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable46 = annotatingMarkupParser42.new CountingAppendable(appendable45);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser47 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList48 = annotatingMarkupParser47.getHeaderAnnotations();
        java.lang.String str49 = annotatingMarkupParser47.getRedirect();
        pignlproc.markup.Annotation annotation54 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation59 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int60 = annotation59.end;
        int int61 = annotation59.begin;
        pignlproc.markup.Annotation[] annotationArray62 = new pignlproc.markup.Annotation[] { annotation54, annotation59 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList63 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList63, annotationArray62);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser65 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList66 = annotatingMarkupParser65.getHeaders();
        java.util.List<java.lang.String> strList67 = annotatingMarkupParser65.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList68 = annotatingMarkupParser65.getHeaderAnnotations();
        java.lang.String str69 = annotatingMarkupParser65.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser70 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList71 = annotatingMarkupParser70.getHeaders();
        java.util.List<java.lang.String> strList72 = annotatingMarkupParser70.getHeaders();
        java.lang.Appendable appendable73 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable74 = annotatingMarkupParser70.new CountingAppendable(appendable73);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable75 = annotatingMarkupParser65.new CountingAppendable((java.lang.Appendable) countingAppendable74);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser76 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList77 = annotatingMarkupParser76.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel79 = annotatingMarkupParser76.makeWikiModel("title");
        annotatingMarkupParser47.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList63, (java.lang.Appendable) countingAppendable74, (info.bliki.wiki.model.IWikiModel) wikiModel79);
        annotatingMarkupParser0.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList40, appendable45, (info.bliki.wiki.model.IWikiModel) wikiModel79);
        java.util.List<pignlproc.markup.Annotation> annotationList82 = annotatingMarkupParser0.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser83 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList84 = annotatingMarkupParser83.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList85 = annotatingMarkupParser83.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList86 = annotatingMarkupParser83.getParagraphAnnotations();
        java.util.List<java.lang.String> strList87 = annotatingMarkupParser83.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList88 = annotatingMarkupParser83.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser89 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList90 = annotatingMarkupParser89.getHeaderAnnotations();
        java.util.List<java.lang.String> strList91 = annotatingMarkupParser89.getParagraphs();
        java.lang.Appendable appendable92 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable93 = annotatingMarkupParser89.new CountingAppendable(appendable92);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable94 = annotatingMarkupParser83.new CountingAppendable((java.lang.Appendable) countingAppendable93);
        countingAppendable93.currentPosition = 35;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable97 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable93);
        countingAppendable97.currentPosition = (byte) 10;
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "title" + "'", str29, "title");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "title" + "'", str30, "title");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "title" + "'", str36, "title");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "title" + "'", str37, "title");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(annotationList48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertNotNull(annotationArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNotNull(annotationList68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(annotationList77);
        org.junit.Assert.assertNotNull(wikiModel79);
        org.junit.Assert.assertNotNull(annotationList82);
        org.junit.Assert.assertNotNull(strList84);
        org.junit.Assert.assertNotNull(annotationList85);
        org.junit.Assert.assertNotNull(annotationList86);
        org.junit.Assert.assertNotNull(strList87);
        org.junit.Assert.assertNotNull(annotationList88);
        org.junit.Assert.assertNotNull(annotationList90);
        org.junit.Assert.assertNotNull(strList91);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("href");
        org.apache.hadoop.mapreduce.RecordWriter recordWriter2 = null;
        uriStringLiteralNTriplesStorer1.prepareToWrite(recordWriter2);
        org.apache.hadoop.fs.Path path5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = uriStringLiteralNTriplesStorer1.relToAbsPathForStoreLocation("\"http://.wikipedia.org/wiki/hi%21\"\n", path5);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"http://.wikipedia.org/wiki/hi%21\"? curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("http://\" title \".wikipedia.org/wiki/");
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("http://.wikipedia.org/wiki/hi%21", "hi!", "");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader7 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.InputFormat inputFormat8 = uriUriNTriplesLoader7.getInputFormat();
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceStatistics resourceStatistics11 = uriUriNTriplesLoader7.getStatistics("http://.wikipedia.org/wiki/hi%21\n", job10);
        org.apache.hadoop.mapreduce.InputFormat inputFormat12 = uriUriNTriplesLoader7.getInputFormat();
        org.apache.hadoop.mapreduce.Job job14 = null;
        java.lang.String[] strArray15 = uriUriNTriplesLoader7.getPartitionKeys("http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522", job14);
        org.apache.hadoop.mapreduce.Job job17 = null;
        org.apache.pig.ResourceSchema resourceSchema18 = uriUriNTriplesLoader7.getSchema("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", job17);
        uriUriNTriplesStorer3.checkSchema(resourceSchema18);
        org.apache.hadoop.mapreduce.Job job21 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer3.cleanupOnFailure("\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"", job21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Illegal character in scheme name at index 0: \"\"\"http://hi%20!%20.wikipedia.org/wiki/http%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputFormat8);
        org.junit.Assert.assertNull(resourceStatistics11);
        org.junit.Assert.assertNotNull(inputFormat12);
        org.junit.Assert.assertNull(strArray15);
        org.junit.Assert.assertNotNull(resourceSchema18);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((-1), false);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = null;
        aggregateTextBag2.setReporter(pigProgressable3);
        org.apache.commons.logging.Log log5 = aggregateTextBag2.getLogger();
        org.apache.pig.data.Tuple tuple6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = aggregateTextBag2.exec(tuple6);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in AggregateTextBag");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(log5);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        org.apache.hadoop.mapreduce.Job job1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.StoreFunc.cleanupOnFailureImpl("\"\"\" opennlp / en - sent . bin \"\"\"", job1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("\"hi!\"", "http://hi!\n.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin", "opennlp / en - sent . bin");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat4 = uriUriNTriplesStorer3.getOutputFormat();
        org.apache.pig.data.Tuple tuple5 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer3.putNext(tuple5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat4);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("titlehref", "http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href\n");
        org.apache.hadoop.fs.Path path4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = uriStringLiteralNTriplesLoader2.relativeToAbsolutePath("\"\"\"hi!\"\" \"", path4);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"\"\"hi!\"\" \" curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        org.apache.hadoop.fs.Path path1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.apache.pig.LoadFunc.getAbsolutePath("hi !\n\nhref", path1);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: hi !??href curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("title", job3);
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader1.getLoadCaster();
        parsingWikipediaLoader1.setUDFContextSignature("hi !");
        org.apache.pig.Expression expression8 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression8);
        org.apache.hadoop.mapreduce.Job job11 = null;
        org.apache.pig.ResourceSchema resourceSchema12 = parsingWikipediaLoader1.getSchema("http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin", job11);
        org.apache.hadoop.mapreduce.Job job14 = null;
        org.apache.pig.ResourceSchema resourceSchema15 = parsingWikipediaLoader1.getSchema("\"opennlp / en - sent . bin\"", job14);
        org.apache.pig.LoadCaster loadCaster16 = parsingWikipediaLoader1.getLoadCaster();
        org.apache.hadoop.mapreduce.InputFormat inputFormat17 = parsingWikipediaLoader1.getInputFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple18 = parsingWikipediaLoader1.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(loadCaster5);
        org.junit.Assert.assertNotNull(resourceSchema12);
        org.junit.Assert.assertNotNull(resourceSchema15);
        org.junit.Assert.assertNotNull(loadCaster16);
        org.junit.Assert.assertNotNull(inputFormat17);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser11 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser11.getHeaders();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser11.getHeaders();
        java.lang.Appendable appendable14 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable15 = annotatingMarkupParser11.new CountingAppendable(appendable14);
        countingAppendable15.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable18 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable22 = countingAppendable15.append((java.lang.CharSequence) "\"hi!\"\n\n", (int) (short) -1, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        org.apache.hadoop.fs.Path path1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.apache.pig.LoadFunc.getAbsolutePath("\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/%22title%22href\"", path1);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/%22title%22href\" curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser11 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser11.getHeaders();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser11.getHeaders();
        java.lang.Appendable appendable14 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable15 = annotatingMarkupParser11.new CountingAppendable(appendable14);
        countingAppendable15.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable18 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable15);
        int int19 = countingAppendable15.currentPosition;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable21 = countingAppendable15.append('4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 35 + "'", int19 == 35);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("\" title \"");
        org.apache.hadoop.mapreduce.Job job3 = null;
        // The following exception was thrown during execution in test generation
        try {
            parsingWikipediaLoader1.setLocation("http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin", job3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Relative path in absolute URI: http :%20/%20hi%20!%20.%20wikipedia%20.%20org%20/%20wiki%20/%20opennlp%20_%20%25%202%20F%20_%20en%20_%20-%20_%20sent%20_%20.%20_%20bin");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("hi !\n", "http://.wikipedia.org/wiki/hi%21", "\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/%22title%22href\"");
        org.apache.hadoop.mapreduce.Job job5 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer3.cleanupOnFailure("http://hi!\n.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin", job5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        checkAbstract0.finish();
        checkAbstract0.finish();
        org.junit.Assert.assertNotNull(schema2);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) '#', (int) (short) 100, "hi !\n\nhref", "\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\"");
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        pignlproc.markup.Annotation annotation8 = new pignlproc.markup.Annotation(10, 10, "title", "hi !");
        pignlproc.markup.Annotation annotation13 = new pignlproc.markup.Annotation((int) (byte) 1, (-1), "wikiobject", "href");
        pignlproc.markup.Annotation annotation18 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation23 = new pignlproc.markup.Annotation(10, 10, "title", "hi !");
        pignlproc.markup.Annotation annotation28 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        java.lang.String str29 = annotation28.label;
        java.lang.String str30 = annotation28.label;
        pignlproc.markup.Annotation annotation35 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        java.lang.String str36 = annotation35.label;
        java.lang.String str37 = annotation35.label;
        java.lang.String str38 = annotation35.value;
        pignlproc.markup.Annotation[] annotationArray39 = new pignlproc.markup.Annotation[] { annotation8, annotation13, annotation18, annotation23, annotation28, annotation35 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList40 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList40, annotationArray39);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser42 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList43 = annotatingMarkupParser42.getHeaders();
        java.util.List<java.lang.String> strList44 = annotatingMarkupParser42.getHeaders();
        java.lang.Appendable appendable45 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable46 = annotatingMarkupParser42.new CountingAppendable(appendable45);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser47 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList48 = annotatingMarkupParser47.getHeaderAnnotations();
        java.lang.String str49 = annotatingMarkupParser47.getRedirect();
        pignlproc.markup.Annotation annotation54 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation59 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int60 = annotation59.end;
        int int61 = annotation59.begin;
        pignlproc.markup.Annotation[] annotationArray62 = new pignlproc.markup.Annotation[] { annotation54, annotation59 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList63 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList63, annotationArray62);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser65 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList66 = annotatingMarkupParser65.getHeaders();
        java.util.List<java.lang.String> strList67 = annotatingMarkupParser65.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList68 = annotatingMarkupParser65.getHeaderAnnotations();
        java.lang.String str69 = annotatingMarkupParser65.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser70 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList71 = annotatingMarkupParser70.getHeaders();
        java.util.List<java.lang.String> strList72 = annotatingMarkupParser70.getHeaders();
        java.lang.Appendable appendable73 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable74 = annotatingMarkupParser70.new CountingAppendable(appendable73);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable75 = annotatingMarkupParser65.new CountingAppendable((java.lang.Appendable) countingAppendable74);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser76 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList77 = annotatingMarkupParser76.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel79 = annotatingMarkupParser76.makeWikiModel("title");
        annotatingMarkupParser47.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList63, (java.lang.Appendable) countingAppendable74, (info.bliki.wiki.model.IWikiModel) wikiModel79);
        annotatingMarkupParser0.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList40, appendable45, (info.bliki.wiki.model.IWikiModel) wikiModel79);
        java.util.List<pignlproc.markup.Annotation> annotationList82 = annotatingMarkupParser0.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser83 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList84 = annotatingMarkupParser83.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList85 = annotatingMarkupParser83.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList86 = annotatingMarkupParser83.getParagraphAnnotations();
        java.util.List<java.lang.String> strList87 = annotatingMarkupParser83.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList88 = annotatingMarkupParser83.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser89 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList90 = annotatingMarkupParser89.getHeaderAnnotations();
        java.util.List<java.lang.String> strList91 = annotatingMarkupParser89.getParagraphs();
        java.lang.Appendable appendable92 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable93 = annotatingMarkupParser89.new CountingAppendable(appendable92);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable94 = annotatingMarkupParser83.new CountingAppendable((java.lang.Appendable) countingAppendable93);
        countingAppendable93.currentPosition = 35;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable97 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable93);
        countingAppendable93.currentPosition = (byte) 1;
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "title" + "'", str29, "title");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "title" + "'", str30, "title");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "title" + "'", str36, "title");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "title" + "'", str37, "title");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(annotationList48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertNotNull(annotationArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNotNull(annotationList68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(annotationList77);
        org.junit.Assert.assertNotNull(wikiModel79);
        org.junit.Assert.assertNotNull(annotationList82);
        org.junit.Assert.assertNotNull(strList84);
        org.junit.Assert.assertNotNull(annotationList85);
        org.junit.Assert.assertNotNull(annotationList86);
        org.junit.Assert.assertNotNull(strList87);
        org.junit.Assert.assertNotNull(annotationList88);
        org.junit.Assert.assertNotNull(annotationList90);
        org.junit.Assert.assertNotNull(strList91);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        org.apache.hadoop.fs.Path path1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.apache.pig.LoadFunc.getAbsolutePath("\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"", path1);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\" curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("title", job3);
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader1.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceStatistics resourceStatistics8 = parsingWikipediaLoader1.getStatistics("\"hi!\"", job7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        java.lang.String[] strArray11 = parsingWikipediaLoader1.getPartitionKeys("\"hi! \"", job10);
        org.apache.hadoop.mapreduce.Job job13 = null;
        java.lang.String[] strArray14 = parsingWikipediaLoader1.getPartitionKeys("\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"", job13);
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(loadCaster5);
        org.junit.Assert.assertNull(resourceStatistics8);
        org.junit.Assert.assertNull(strArray11);
        org.junit.Assert.assertNull(strArray14);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        org.apache.pig.data.Tuple tuple3 = null;
        java.lang.Boolean boolean4 = checkAbstract0.exec(tuple3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = null;
        checkAbstract0.setPigLogger(pigLogger5);
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract0.outputSchema(schema7);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + false + "'", boolean4, false);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        info.bliki.wiki.model.WikiModel wikiModel12 = annotatingMarkupParser0.makeWikiModel("\"hi!\"\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser13 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList14 = annotatingMarkupParser13.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser15 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser15.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList17 = annotatingMarkupParser15.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser15.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser19.getHeaders();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser19.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList22 = annotatingMarkupParser19.getHeaderAnnotations();
        java.lang.String str23 = annotatingMarkupParser19.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser24 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser24.getHeaders();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser24.getHeaders();
        java.lang.Appendable appendable27 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable28 = annotatingMarkupParser24.new CountingAppendable(appendable27);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable29 = annotatingMarkupParser19.new CountingAppendable((java.lang.Appendable) countingAppendable28);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser30 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList31 = annotatingMarkupParser30.getHeaderAnnotations();
        java.lang.String str32 = annotatingMarkupParser30.getRedirect();
        pignlproc.markup.Annotation annotation37 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation42 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int43 = annotation42.end;
        int int44 = annotation42.begin;
        pignlproc.markup.Annotation[] annotationArray45 = new pignlproc.markup.Annotation[] { annotation37, annotation42 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList46 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList46, annotationArray45);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser48 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList49 = annotatingMarkupParser48.getHeaders();
        java.util.List<java.lang.String> strList50 = annotatingMarkupParser48.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList51 = annotatingMarkupParser48.getHeaderAnnotations();
        java.lang.String str52 = annotatingMarkupParser48.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser53 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList54 = annotatingMarkupParser53.getHeaders();
        java.util.List<java.lang.String> strList55 = annotatingMarkupParser53.getHeaders();
        java.lang.Appendable appendable56 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable57 = annotatingMarkupParser53.new CountingAppendable(appendable56);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable58 = annotatingMarkupParser48.new CountingAppendable((java.lang.Appendable) countingAppendable57);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser59 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList60 = annotatingMarkupParser59.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel62 = annotatingMarkupParser59.makeWikiModel("title");
        annotatingMarkupParser30.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList46, (java.lang.Appendable) countingAppendable57, (info.bliki.wiki.model.IWikiModel) wikiModel62);
        annotatingMarkupParser13.nodesToText(annotationList18, (java.lang.Appendable) countingAppendable29, (info.bliki.wiki.model.IWikiModel) wikiModel62);
        int int65 = countingAppendable29.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable66 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable29);
        countingAppendable29.currentPosition = (byte) 10;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable72 = countingAppendable29.append((java.lang.CharSequence) "hi!\n", 100, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(wikiModel12);
        org.junit.Assert.assertNotNull(annotationList14);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(annotationList17);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(annotationList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNotNull(annotationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(annotationList51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(annotationList60);
        org.junit.Assert.assertNotNull(wikiModel62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21", "http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21");
        org.apache.hadoop.mapreduce.Job job4 = null;
        java.lang.String[] strArray5 = uriStringLiteralNTriplesLoader2.getPartitionKeys("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521", job4);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple6 = uriStringLiteralNTriplesLoader2.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strArray5);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.lang.Appendable appendable3 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable4 = annotatingMarkupParser0.new CountingAppendable(appendable3);
        java.lang.String str6 = annotatingMarkupParser0.parse("");
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser0.getParagraphAnnotations();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList9 = annotatingMarkupParser0.getHeaderAnnotations();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(annotationList9);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        java.lang.String str2 = pignlproc.markup.AnnotatingMarkupParser.titleToUri("http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21", "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521" + "'", str2, "http://.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521");
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag0 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = aggregateTextBag0.outputSchema(schema9);
        java.lang.Enum enum13 = null;
        aggregateTextBag0.warn("\"hi!\"\n", enum13);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable15 = null;
        aggregateTextBag0.setReporter(pigProgressable15);
        java.lang.reflect.Type type17 = aggregateTextBag0.getReturnType();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList18 = aggregateTextBag0.getArgToFuncMapping();
        org.apache.pig.data.Tuple tuple19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = aggregateTextBag0.exec(tuple19);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in AggregateTextBag");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNull(funcSpecList18);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (byte) -1, (int) (short) 100, "http://\"title\"\n.wikipedia.org/wiki/", "http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22");
        java.lang.String str5 = annotation4.value;
        java.lang.String str6 = annotation4.label;
        int int7 = annotation4.end;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22" + "'", str5, "http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://\"title\"\n.wikipedia.org/wiki/" + "'", str6, "http://\"title\"\n.wikipedia.org/wiki/");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        concatTextBag1.setPigLogger(pigLogger2);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("href");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("opennlp/en-sent.bin", job3);
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader1.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job7 = null;
        java.lang.String[] strArray8 = parsingWikipediaLoader1.getPartitionKeys("http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522", job7);
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(loadCaster5);
        org.junit.Assert.assertNull(strArray8);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.InputFormat inputFormat4 = uriUriNTriplesLoader3.getInputFormat();
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceStatistics resourceStatistics7 = uriUriNTriplesLoader3.getStatistics("\"hi! \"", job6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        java.lang.String[] strArray10 = uriUriNTriplesLoader3.getPartitionKeys("http://hi!\n.wikipedia.org/wiki/%22_title_%22", job9);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple11 = uriUriNTriplesLoader3.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputFormat4);
        org.junit.Assert.assertNull(resourceStatistics7);
        org.junit.Assert.assertNull(strArray10);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("titlehref");
        org.apache.hadoop.mapreduce.Job job3 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer1.cleanupOnFailure("hi!", job3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = null;
        checkAbstract0.setPigLogger(pigLogger4);
        checkAbstract0.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText7 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = null;
        safeTsvText7.setPigLogger(pigLogger8);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText10 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable11 = mergeAsOpenNLPAnnotatedText10.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract12 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = checkAbstract12.outputSchema(schema13);
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = mergeAsOpenNLPAnnotatedText10.outputSchema(schema13);
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = safeTsvText7.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract0.outputSchema(schema16);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger18 = null;
        checkAbstract0.setPigLogger(pigLogger18);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable20 = null;
        checkAbstract0.setReporter(pigProgressable20);
        checkAbstract0.finish();
        org.junit.Assert.assertNull(pigProgressable11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        java.lang.String str2 = pignlproc.markup.AnnotatingMarkupParser.titleToUri("http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22", "http://.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://http://.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org/wiki/http%3A%2F%2F%22hi%21%22%0A.wikipedia.org%2Fwiki%2F%2522hi%2521_%2522" + "'", str2, "http://http://.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org/wiki/http%3A%2F%2F%22hi%21%22%0A.wikipedia.org%2Fwiki%2F%2522hi%2521_%2522");
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        org.apache.pig.data.Tuple tuple3 = null;
        java.lang.Boolean boolean4 = checkAbstract0.exec(tuple3);
        java.lang.Enum enum6 = null;
        checkAbstract0.warn("href", enum6);
        org.apache.pig.data.Tuple tuple8 = null;
        java.lang.Boolean boolean9 = checkAbstract0.exec(tuple8);
        pignlproc.evaluation.SafeTsvText safeTsvText10 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        safeTsvText10.setPigLogger(pigLogger11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = mergeAsOpenNLPAnnotatedText13.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract15.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = safeTsvText10.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract0.outputSchema(schema19);
        org.apache.commons.logging.Log log21 = checkAbstract0.getLogger();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + false + "'", boolean4, false);
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + false + "'", boolean9, false);
        org.junit.Assert.assertNull(pigProgressable14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(log21);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable1 = mergeAsOpenNLPAnnotatedText0.getReporter();
        java.lang.Enum enum3 = null;
        mergeAsOpenNLPAnnotatedText0.warn("title", enum3);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText6 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray8 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList9 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList9, spanArray8);
        java.lang.String str11 = mergeAsOpenNLPAnnotatedText6.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList9);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger12 = null;
        mergeAsOpenNLPAnnotatedText6.setPigLogger(pigLogger12);
        boolean boolean14 = mergeAsOpenNLPAnnotatedText6.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray18 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList19 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList19, spanArray18);
        java.lang.String str21 = mergeAsOpenNLPAnnotatedText16.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList19);
        java.lang.String str22 = mergeAsOpenNLPAnnotatedText6.merge("opennlp/en-sent.bin", (java.util.List<opennlp.tools.util.Span>) spanList19);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText24 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable25 = mergeAsOpenNLPAnnotatedText24.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract26 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = checkAbstract26.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = mergeAsOpenNLPAnnotatedText24.outputSchema(schema27);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText31 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray33 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList34 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList34, spanArray33);
        java.lang.String str36 = mergeAsOpenNLPAnnotatedText31.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList34);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText38 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray40 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList41 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList41, spanArray40);
        java.lang.String str43 = mergeAsOpenNLPAnnotatedText38.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList41);
        java.lang.String str44 = mergeAsOpenNLPAnnotatedText31.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList41);
        java.lang.String str45 = mergeAsOpenNLPAnnotatedText24.merge("title", (java.util.List<opennlp.tools.util.Span>) spanList41);
        java.lang.String str46 = mergeAsOpenNLPAnnotatedText6.merge("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", (java.util.List<opennlp.tools.util.Span>) spanList41);
        java.lang.String str47 = mergeAsOpenNLPAnnotatedText0.merge("", (java.util.List<opennlp.tools.util.Span>) spanList41);
        boolean boolean48 = mergeAsOpenNLPAnnotatedText0.isAsynchronous();
        org.apache.pig.data.Tuple tuple49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str50 = mergeAsOpenNLPAnnotatedText0.exec(tuple49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigProgressable1);
        org.junit.Assert.assertNotNull(spanArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi !" + "'", str11, "hi !");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(spanArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "href" + "'", str21, "href");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "opennlp / en - sent . bin" + "'", str22, "opennlp / en - sent . bin");
        org.junit.Assert.assertNull(pigProgressable25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(spanArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi !" + "'", str36, "hi !");
        org.junit.Assert.assertNotNull(spanArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "href" + "'", str43, "href");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi !" + "'", str44, "hi !");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "title" + "'", str45, "title");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21" + "'", str46, "http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser14.getHeaders();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser14.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList17 = annotatingMarkupParser14.getHeaderAnnotations();
        java.lang.String str18 = annotatingMarkupParser14.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser19.getHeaders();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser19.getHeaders();
        java.lang.Appendable appendable22 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable23 = annotatingMarkupParser19.new CountingAppendable(appendable22);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable24 = annotatingMarkupParser14.new CountingAppendable((java.lang.Appendable) countingAppendable23);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser25 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser25.getHeaders();
        java.util.List<java.lang.String> strList27 = annotatingMarkupParser25.getHeaders();
        java.lang.Appendable appendable28 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable29 = annotatingMarkupParser25.new CountingAppendable(appendable28);
        countingAppendable29.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable32 = annotatingMarkupParser14.new CountingAppendable((java.lang.Appendable) countingAppendable29);
        countingAppendable32.currentPosition = (byte) -1;
        countingAppendable32.currentPosition = 100;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable37 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable32);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable39 = countingAppendable32.append((java.lang.CharSequence) "http://.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(annotationList17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strList27);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser0.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel4 = annotatingMarkupParser0.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel6 = annotatingMarkupParser0.makeWikiModel("hi!\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser7 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser7.getHeaders();
        java.util.List<java.lang.String> strList9 = annotatingMarkupParser7.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList10 = annotatingMarkupParser7.getHeaderAnnotations();
        java.lang.String str11 = annotatingMarkupParser7.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser12 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser12.getHeaders();
        java.util.List<java.lang.String> strList14 = annotatingMarkupParser12.getHeaders();
        java.lang.Appendable appendable15 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable16 = annotatingMarkupParser12.new CountingAppendable(appendable15);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable17 = annotatingMarkupParser7.new CountingAppendable((java.lang.Appendable) countingAppendable16);
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser7.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList20 = annotatingMarkupParser19.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser21 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList22 = annotatingMarkupParser21.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList23 = annotatingMarkupParser21.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList24 = annotatingMarkupParser21.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser25 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser25.getHeaders();
        java.util.List<java.lang.String> strList27 = annotatingMarkupParser25.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList28 = annotatingMarkupParser25.getHeaderAnnotations();
        java.lang.String str29 = annotatingMarkupParser25.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser30 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList31 = annotatingMarkupParser30.getHeaders();
        java.util.List<java.lang.String> strList32 = annotatingMarkupParser30.getHeaders();
        java.lang.Appendable appendable33 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable34 = annotatingMarkupParser30.new CountingAppendable(appendable33);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable35 = annotatingMarkupParser25.new CountingAppendable((java.lang.Appendable) countingAppendable34);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser36 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList37 = annotatingMarkupParser36.getHeaderAnnotations();
        java.lang.String str38 = annotatingMarkupParser36.getRedirect();
        pignlproc.markup.Annotation annotation43 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation48 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int49 = annotation48.end;
        int int50 = annotation48.begin;
        pignlproc.markup.Annotation[] annotationArray51 = new pignlproc.markup.Annotation[] { annotation43, annotation48 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList52 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList52, annotationArray51);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser54 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList55 = annotatingMarkupParser54.getHeaders();
        java.util.List<java.lang.String> strList56 = annotatingMarkupParser54.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList57 = annotatingMarkupParser54.getHeaderAnnotations();
        java.lang.String str58 = annotatingMarkupParser54.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser59 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList60 = annotatingMarkupParser59.getHeaders();
        java.util.List<java.lang.String> strList61 = annotatingMarkupParser59.getHeaders();
        java.lang.Appendable appendable62 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable63 = annotatingMarkupParser59.new CountingAppendable(appendable62);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable64 = annotatingMarkupParser54.new CountingAppendable((java.lang.Appendable) countingAppendable63);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser65 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList66 = annotatingMarkupParser65.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel68 = annotatingMarkupParser65.makeWikiModel("title");
        annotatingMarkupParser36.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList52, (java.lang.Appendable) countingAppendable63, (info.bliki.wiki.model.IWikiModel) wikiModel68);
        annotatingMarkupParser19.nodesToText(annotationList24, (java.lang.Appendable) countingAppendable35, (info.bliki.wiki.model.IWikiModel) wikiModel68);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser71 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList72 = annotatingMarkupParser71.getHeaders();
        java.util.List<java.lang.String> strList73 = annotatingMarkupParser71.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList74 = annotatingMarkupParser71.getHeaderAnnotations();
        java.lang.String str75 = annotatingMarkupParser71.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser76 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList77 = annotatingMarkupParser76.getHeaders();
        java.util.List<java.lang.String> strList78 = annotatingMarkupParser76.getHeaders();
        java.lang.Appendable appendable79 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable80 = annotatingMarkupParser76.new CountingAppendable(appendable79);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable81 = annotatingMarkupParser71.new CountingAppendable((java.lang.Appendable) countingAppendable80);
        java.util.List<java.lang.String> strList82 = annotatingMarkupParser71.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel84 = annotatingMarkupParser71.makeWikiModel("opennlp / en - sent . bin");
        annotatingMarkupParser0.nodesToText(annotationList18, (java.lang.Appendable) countingAppendable35, (info.bliki.wiki.model.IWikiModel) wikiModel84);
        boolean boolean86 = annotatingMarkupParser0.noLinks();
        java.util.List<pignlproc.markup.Annotation> annotationList87 = annotatingMarkupParser0.getHeaderAnnotations();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertNotNull(wikiModel4);
        org.junit.Assert.assertNotNull(wikiModel6);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(annotationList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNotNull(annotationList20);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(annotationList23);
        org.junit.Assert.assertNotNull(annotationList24);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(annotationList28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(annotationList37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertNotNull(annotationArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(annotationList57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(annotationList66);
        org.junit.Assert.assertNotNull(wikiModel68);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNotNull(annotationList74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNotNull(wikiModel84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(annotationList87);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        java.lang.String str2 = pignlproc.markup.AnnotatingMarkupParser.titleToUri("\"http://.wikipedia.org/wiki/hi%21\"", "\"http://.wikipedia.org/wiki/hi%21\"\n\n");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://\"http://.wikipedia.org/wiki/hi%21\"\n\n.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22" + "'", str2, "http://\"http://.wikipedia.org/wiki/hi%21\"\n\n.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22");
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        java.net.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader wikipediaRecordReader3 = new pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader(uRL0, (long) (-1), (long) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        info.bliki.htmlcleaner.TagNode tagNode3 = null;
        info.bliki.wiki.model.ImageFormat imageFormat4 = null;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        java.lang.String str11 = annotatingMarkupParser5.parse("\"hi!\"\n");
        java.lang.Appendable appendable12 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable13 = annotatingMarkupParser5.new CountingAppendable(appendable12);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser14.getHeaders();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser14.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList17 = annotatingMarkupParser14.getHeaderAnnotations();
        java.lang.String str18 = annotatingMarkupParser14.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser19.getHeaders();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser19.getHeaders();
        java.lang.Appendable appendable22 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable23 = annotatingMarkupParser19.new CountingAppendable(appendable22);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable24 = annotatingMarkupParser14.new CountingAppendable((java.lang.Appendable) countingAppendable23);
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser14.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel27 = annotatingMarkupParser14.makeWikiModel("opennlp / en - sent . bin");
        java.lang.String str29 = annotatingMarkupParser14.parse("hi !\n");
        info.bliki.wiki.model.WikiModel wikiModel31 = annotatingMarkupParser14.makeWikiModel("http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21");
        java.util.List<pignlproc.markup.Annotation> annotationList32 = annotatingMarkupParser14.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList33 = annotatingMarkupParser14.getParagraphAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel35 = annotatingMarkupParser14.makeWikiModel("http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522");
        // The following exception was thrown during execution in test generation
        try {
            annotatingMarkupParser0.imageNodeToText(tagNode3, imageFormat4, appendable12, (info.bliki.wiki.model.IWikiModel) wikiModel35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"hi!\"\n\n" + "'", str11, "\"hi!\"\n\n");
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(annotationList17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(wikiModel27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi !\n\n" + "'", str29, "hi !\n\n");
        org.junit.Assert.assertNotNull(wikiModel31);
        org.junit.Assert.assertNotNull(annotationList32);
        org.junit.Assert.assertNotNull(annotationList33);
        org.junit.Assert.assertNotNull(wikiModel35);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("\n", "\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\"", "http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21\n");
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract("\"http://.wikipedia.org/wiki/hi%21\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"\"http://.wikipedia.org/wiki/hi%21\"\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        java.lang.String str2 = pignlproc.markup.AnnotatingMarkupParser.titleToUri("href", "\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\"");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\".wikipedia.org/wiki/href" + "'", str2, "http://\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\".wikipedia.org/wiki/href");
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader3.getSchema("", job5);
        org.apache.pig.Expression expression7 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceSchema resourceSchema11 = uriUriNTriplesLoader3.getSchema("\"hi! \"\n", job10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple12 = uriUriNTriplesLoader3.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNotNull(resourceSchema11);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("");
        java.lang.reflect.Type type2 = noLoopInPath1.getReturnType();
        java.lang.Enum enum4 = null;
        noLoopInPath1.warn("", enum4);
        org.junit.Assert.assertNotNull(type2);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        java.lang.reflect.Type type1 = safeTsvText0.getReturnType();
        pignlproc.evaluation.CheckAbstract checkAbstract2 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema3 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema4 = checkAbstract2.outputSchema(schema3);
        org.apache.pig.impl.logicalLayer.schema.Schema schema5 = safeTsvText0.outputSchema(schema4);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText6 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray8 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList9 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList9, spanArray8);
        java.lang.String str11 = mergeAsOpenNLPAnnotatedText6.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList9);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList12 = mergeAsOpenNLPAnnotatedText6.getArgToFuncMapping();
        org.apache.commons.logging.Log log13 = mergeAsOpenNLPAnnotatedText6.getLogger();
        pignlproc.evaluation.CheckAbstract checkAbstract14 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum16 = null;
        checkAbstract14.warn("http://.wikipedia.org/wiki/hi%21", enum16);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable18 = null;
        checkAbstract14.setReporter(pigProgressable18);
        java.lang.reflect.Type type20 = checkAbstract14.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath21 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText22 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = null;
        safeTsvText22.setPigLogger(pigLogger23);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText25 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable26 = mergeAsOpenNLPAnnotatedText25.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract27 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = checkAbstract27.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = mergeAsOpenNLPAnnotatedText25.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = safeTsvText22.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = noLoopInPath21.outputSchema(schema30);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag33 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText34 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger35 = null;
        safeTsvText34.setPigLogger(pigLogger35);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText37 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable38 = mergeAsOpenNLPAnnotatedText37.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract39 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = checkAbstract39.outputSchema(schema40);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = mergeAsOpenNLPAnnotatedText37.outputSchema(schema40);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = safeTsvText34.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = aggregateTextBag33.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = noLoopInPath21.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = checkAbstract14.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = mergeAsOpenNLPAnnotatedText6.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = safeTsvText0.outputSchema(schema46);
        org.apache.pig.data.Tuple tuple49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str50 = safeTsvText0.exec(tuple49);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in SafeTsvText");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(spanArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi !" + "'", str11, "hi !");
        org.junit.Assert.assertNull(funcSpecList12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNull(pigProgressable26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(pigProgressable38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        java.lang.String str2 = pignlproc.markup.AnnotatingMarkupParser.titleToUri("http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21", "http://\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\".wikipedia.org/wiki/%22%22%22opennlp_%2F_en_-_sent_._bin%22%22%22");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://http://\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\".wikipedia.org/wiki/%22%22%22opennlp_%2F_en_-_sent_._bin%22%22%22.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org%2Fwiki%2Fhi_%2521" + "'", str2, "http://http://\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\".wikipedia.org/wiki/%22%22%22opennlp_%2F_en_-_sent_._bin%22%22%22.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org%2Fwiki%2Fhi_%2521");
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract((int) '#');
        org.apache.pig.data.Tuple tuple2 = null;
        java.lang.Boolean boolean3 = checkAbstract1.exec(tuple2);
        org.apache.pig.data.Tuple tuple4 = null;
        java.lang.Boolean boolean5 = checkAbstract1.exec(tuple4);
        org.junit.Assert.assertEquals("'" + boolean3 + "' != '" + false + "'", boolean3, false);
        org.junit.Assert.assertEquals("'" + boolean5 + "' != '" + false + "'", boolean5, false);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser0.getWikiLinkAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser3 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser3.getHeaders();
        java.util.List<java.lang.String> strList5 = annotatingMarkupParser3.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList6 = annotatingMarkupParser3.getHeaderAnnotations();
        java.lang.String str7 = annotatingMarkupParser3.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser8 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList9 = annotatingMarkupParser8.getHeaders();
        java.util.List<java.lang.String> strList10 = annotatingMarkupParser8.getHeaders();
        java.lang.Appendable appendable11 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable12 = annotatingMarkupParser8.new CountingAppendable(appendable11);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable13 = annotatingMarkupParser3.new CountingAppendable((java.lang.Appendable) countingAppendable12);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable14 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable16 = countingAppendable13.append((java.lang.CharSequence) "\"\"\" opennlp / en - sent . bin \"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(annotationList6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("\"title\"\n\n");
        org.apache.hadoop.mapreduce.Job job3 = null;
        // The following exception was thrown during execution in test generation
        try {
            parsingWikipediaLoader1.setLocation("\"hi!\"\n\n", job3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("href");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("opennlp/en-sent.bin", job3);
        org.apache.hadoop.mapreduce.InputFormat inputFormat5 = parsingWikipediaLoader1.getInputFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple6 = parsingWikipediaLoader1.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(inputFormat5);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        parsingWikipediaLoader1.setUDFContextSignature("hi !");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceStatistics resourceStatistics6 = parsingWikipediaLoader1.getStatistics("hi !\n\n", job5);
        org.apache.hadoop.mapreduce.Job job8 = null;
        // The following exception was thrown during execution in test generation
        try {
            parsingWikipediaLoader1.setLocation("\"opennlp/en-sent.bin\"", job8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics6);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", "hi !", "http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21");
        org.apache.pig.data.Tuple tuple4 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer3.putNext(tuple4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel3 = annotatingMarkupParser0.makeWikiModel("title");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser4 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList5 = annotatingMarkupParser4.getHeaders();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser4.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser4.getHeaderAnnotations();
        java.lang.String str8 = annotatingMarkupParser4.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser9 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList10 = annotatingMarkupParser9.getHeaders();
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser9.getHeaders();
        java.lang.Appendable appendable12 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable13 = annotatingMarkupParser9.new CountingAppendable(appendable12);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable14 = annotatingMarkupParser4.new CountingAppendable((java.lang.Appendable) countingAppendable13);
        int int15 = countingAppendable13.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable16 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable13);
        java.lang.String str17 = annotatingMarkupParser0.getRedirect();
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(wikiModel3);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getParagraphs();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser0.getHeaders();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation(0, (int) (byte) 1, "hi !\n", "http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21href");
        int int5 = annotation4.end;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getParagraphs();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("http://.wikipedia.org/wiki/hi%21");
        java.util.List<pignlproc.markup.Annotation> annotationList14 = annotatingMarkupParser0.getWikiLinkAnnotations();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertNotNull(annotationList14);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList3);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = mergeAsOpenNLPAnnotatedText0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = mergeAsOpenNLPAnnotatedText0.getReporter();
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi !" + "'", str5, "hi !");
        org.junit.Assert.assertNull(funcSpecList6);
        org.junit.Assert.assertNull(pigProgressable7);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://\"title\".wikipedia.org/wiki/%22hi%21%22", true);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink3 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList4 = sentencesWithLink3.getArgToFuncMapping();
        pignlproc.evaluation.CheckAbstract checkAbstract5 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum7 = null;
        checkAbstract5.warn("http://.wikipedia.org/wiki/hi%21", enum7);
        java.lang.Enum enum10 = null;
        checkAbstract5.warn("hi !", enum10);
        pignlproc.evaluation.NoLoopInPath noLoopInPath12 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText13 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        safeTsvText13.setPigLogger(pigLogger14);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText16.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = safeTsvText13.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = noLoopInPath12.outputSchema(schema21);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag24 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText25 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger26 = null;
        safeTsvText25.setPigLogger(pigLogger26);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText28 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable29 = mergeAsOpenNLPAnnotatedText28.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract30 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = checkAbstract30.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = mergeAsOpenNLPAnnotatedText28.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = safeTsvText25.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = aggregateTextBag24.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = noLoopInPath12.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = checkAbstract5.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = sentencesWithLink3.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = concatTextBag2.outputSchema(schema37);
        boolean boolean40 = concatTextBag2.isAsynchronous();
        org.junit.Assert.assertNull(funcSpecList4);
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(pigProgressable29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.mapreduce.RecordReader recordReader5 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit6 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader5, pigSplit6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        java.lang.String[] strArray10 = parsingWikipediaLoader1.getPartitionKeys("http://.wikipedia.org/wiki/hi%21", job9);
        org.apache.pig.Expression expression11 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression11);
        org.apache.hadoop.mapreduce.Job job14 = null;
        org.apache.pig.ResourceStatistics resourceStatistics15 = parsingWikipediaLoader1.getStatistics("\"hi!\"\n\n", job14);
        org.apache.hadoop.mapreduce.Job job17 = null;
        org.apache.pig.ResourceSchema resourceSchema18 = parsingWikipediaLoader1.getSchema("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21", job17);
        org.apache.hadoop.mapreduce.Job job20 = null;
        org.apache.pig.ResourceSchema resourceSchema21 = parsingWikipediaLoader1.getSchema("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", job20);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple22 = parsingWikipediaLoader1.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNull(strArray10);
        org.junit.Assert.assertNull(resourceStatistics15);
        org.junit.Assert.assertNotNull(resourceSchema18);
        org.junit.Assert.assertNotNull(resourceSchema21);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = parsingWikipediaLoader1.getSchema("\"hi!\"", job6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        org.apache.pig.ResourceSchema resourceSchema10 = parsingWikipediaLoader1.getSchema("\"hi!\"\n", job9);
        org.apache.hadoop.mapreduce.Job job12 = null;
        org.apache.pig.ResourceSchema resourceSchema13 = parsingWikipediaLoader1.getSchema("http://.wikipedia.org/wiki/hi%21\n", job12);
        parsingWikipediaLoader1.setUDFContextSignature("http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21");
        org.apache.hadoop.mapreduce.Job job17 = null;
        java.lang.String[] strArray18 = parsingWikipediaLoader1.getPartitionKeys("\"http://.wikipedia.org/wiki/hi%21\"\n\n", job17);
        org.apache.hadoop.mapreduce.Job job20 = null;
        java.lang.String[] strArray21 = parsingWikipediaLoader1.getPartitionKeys("hi!", job20);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple22 = parsingWikipediaLoader1.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNotNull(resourceSchema7);
        org.junit.Assert.assertNotNull(resourceSchema10);
        org.junit.Assert.assertNotNull(resourceSchema13);
        org.junit.Assert.assertNull(strArray18);
        org.junit.Assert.assertNull(strArray21);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = null;
        checkAbstract0.setPigLogger(pigLogger4);
        checkAbstract0.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText7 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = null;
        safeTsvText7.setPigLogger(pigLogger8);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText10 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable11 = mergeAsOpenNLPAnnotatedText10.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract12 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = checkAbstract12.outputSchema(schema13);
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = mergeAsOpenNLPAnnotatedText10.outputSchema(schema13);
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = safeTsvText7.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract0.outputSchema(schema16);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger18 = null;
        checkAbstract0.setPigLogger(pigLogger18);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable20 = null;
        checkAbstract0.setReporter(pigProgressable20);
        org.apache.pig.data.Tuple tuple22 = null;
        java.lang.Boolean boolean23 = checkAbstract0.exec(tuple22);
        org.apache.pig.data.Tuple tuple24 = null;
        java.lang.Boolean boolean25 = checkAbstract0.exec(tuple24);
        java.lang.reflect.Type type26 = checkAbstract0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger27 = checkAbstract0.getPigLogger();
        org.junit.Assert.assertNull(pigProgressable11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + boolean23 + "' != '" + false + "'", boolean23, false);
        org.junit.Assert.assertEquals("'" + boolean25 + "' != '" + false + "'", boolean25, false);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNull(pigLogger27);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum2 = null;
        safeTsvText0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = safeTsvText0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        safeTsvText0.setReporter(pigProgressable5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = null;
        safeTsvText0.setReporter(pigProgressable7);
        safeTsvText0.finish();
        org.apache.pig.data.Tuple tuple10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = safeTsvText0.exec(tuple10);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in SafeTsvText");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigProgressable4);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521", "http://.wikipedia.org/wiki/hi%21\n", "http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22");
        org.apache.hadoop.mapreduce.RecordWriter recordWriter4 = null;
        uriUriNTriplesStorer3.prepareToWrite(recordWriter4);
        org.apache.pig.data.Tuple tuple6 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer3.putNext(tuple6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("", "opennlp / en - sent . bin", "http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceStatistics resourceStatistics6 = uriUriNTriplesLoader3.getStatistics("\" http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 \"", job5);
        org.junit.Assert.assertNull(resourceStatistics6);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("", "http://.wikipedia.org/wiki/hi%21\n", "http://.wikipedia.org/wiki/hi%21");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat4 = uriStringLiteralNTriplesStorer3.getOutputFormat();
        org.apache.hadoop.mapreduce.OutputFormat outputFormat5 = uriStringLiteralNTriplesStorer3.getOutputFormat();
        org.apache.hadoop.fs.Path path7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = uriStringLiteralNTriplesStorer3.relToAbsPathForStoreLocation("title\n\n", path7);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: title?? curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat4);
        org.junit.Assert.assertNotNull(outputFormat5);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("\"title\"\n", "hi !", "");
        org.apache.hadoop.mapreduce.Job job5 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer3.cleanupOnFailure("\"http : // \"\" opennlp / en - sent . bin \"\" . wikipedia . org / wiki / href\"", job5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Relative path in absolute URI: \"http :%20/%20%22%22%20opennlp%20/%20en%20-%20sent%20.%20bin%20%22%22%20.%20wikipedia%20.%20org%20/%20wiki%20/%20href%22");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("hi!");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        noLoopInPath1.setPigLogger(pigLogger2);
        boolean boolean4 = noLoopInPath1.isAsynchronous();
        org.apache.pig.data.Tuple tuple5 = null;
        java.lang.Boolean boolean6 = noLoopInPath1.exec(tuple5);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + true + "'", boolean6, true);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum2 = null;
        safeTsvText0.warn("opennlp/en-sent.bin", enum2);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList4 = safeTsvText0.getArgToFuncMapping();
        pignlproc.evaluation.AggregateTextBag aggregateTextBag6 = new pignlproc.evaluation.AggregateTextBag((int) (short) 10);
        pignlproc.evaluation.ConcatTextBag concatTextBag8 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract9 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum11 = null;
        checkAbstract9.warn("http://.wikipedia.org/wiki/hi%21", enum11);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger13 = null;
        checkAbstract9.setPigLogger(pigLogger13);
        checkAbstract9.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText16 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger17 = null;
        safeTsvText16.setPigLogger(pigLogger17);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText19 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable20 = mergeAsOpenNLPAnnotatedText19.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract21 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = checkAbstract21.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = mergeAsOpenNLPAnnotatedText19.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = safeTsvText16.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = checkAbstract9.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = concatTextBag8.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = aggregateTextBag6.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = safeTsvText0.outputSchema(schema26);
        org.apache.pig.data.Tuple tuple30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str31 = safeTsvText0.exec(tuple30);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in SafeTsvText");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(funcSpecList4);
        org.junit.Assert.assertNull(pigProgressable20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        java.lang.String str1 = pignlproc.evaluation.SafeTsvText.escape("\"opennlp / en - sent . bin\"\n");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"\"\"opennlp / en - sent . bin\"\" \"" + "'", str1, "\"\"\"opennlp / en - sent . bin\"\" \"");
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int5 = annotation4.end;
        int int6 = annotation4.begin;
        java.lang.String str7 = annotation4.label;
        java.lang.String str8 = annotation4.label;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://.wikipedia.org/wiki/hi%21" + "'", str7, "http://.wikipedia.org/wiki/hi%21");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://.wikipedia.org/wiki/hi%21" + "'", str8, "http://.wikipedia.org/wiki/hi%21");
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        org.apache.commons.logging.Log log6 = sentencesWithLink0.getLogger();
        org.apache.commons.logging.Log log7 = sentencesWithLink0.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger9 = sentencesWithLink0.getPigLogger();
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(log7);
        org.junit.Assert.assertNull(pigProgressable8);
        org.junit.Assert.assertNull(pigLogger9);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("http://wikiobject.wikipedia.org/wiki/opennlp%2Fen-sent.bin");
        org.apache.pig.data.Tuple tuple2 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer1.putNext(tuple2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        sentencesWithLink0.setReporter(pigProgressable4);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = sentencesWithLink0.getReporter();
        java.lang.Enum enum8 = null;
        sentencesWithLink0.warn("http://\"title\".wikipedia.org/wiki/%22hi%21%22", enum8);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = null;
        sentencesWithLink0.setPigLogger(pigLogger10);
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNull(pigProgressable6);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag1 = new pignlproc.evaluation.AggregateTextBag((int) '4');
        java.lang.reflect.Type type2 = aggregateTextBag1.getReturnType();
        boolean boolean3 = aggregateTextBag1.isAsynchronous();
        pignlproc.evaluation.NoLoopInPath noLoopInPath5 = new pignlproc.evaluation.NoLoopInPath("href");
        org.apache.commons.logging.Log log6 = noLoopInPath5.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = null;
        noLoopInPath5.setReporter(pigProgressable7);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag11 = new pignlproc.evaluation.AggregateTextBag((int) '#', false);
        java.lang.reflect.Type type12 = aggregateTextBag11.getReturnType();
        pignlproc.evaluation.CheckAbstract checkAbstract13 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum15 = null;
        checkAbstract13.warn("http://.wikipedia.org/wiki/hi%21", enum15);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = null;
        checkAbstract13.setReporter(pigProgressable17);
        java.lang.reflect.Type type19 = checkAbstract13.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath20 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText21 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger22 = null;
        safeTsvText21.setPigLogger(pigLogger22);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText24 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable25 = mergeAsOpenNLPAnnotatedText24.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract26 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = checkAbstract26.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = mergeAsOpenNLPAnnotatedText24.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = safeTsvText21.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = noLoopInPath20.outputSchema(schema29);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag32 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText33 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger34 = null;
        safeTsvText33.setPigLogger(pigLogger34);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText36 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable37 = mergeAsOpenNLPAnnotatedText36.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract38 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = checkAbstract38.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = mergeAsOpenNLPAnnotatedText36.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = safeTsvText33.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = aggregateTextBag32.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = noLoopInPath20.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = checkAbstract13.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = aggregateTextBag11.outputSchema(schema45);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = noLoopInPath5.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = aggregateTextBag1.outputSchema(schema46);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNull(pigProgressable25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(pigProgressable37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        java.lang.String str15 = annotatingMarkupParser0.parse("hi !\n");
        info.bliki.wiki.model.WikiModel wikiModel17 = annotatingMarkupParser0.makeWikiModel("http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21");
        java.util.List<java.lang.String> strList18 = annotatingMarkupParser0.getParagraphs();
        boolean boolean19 = annotatingMarkupParser0.noLinks();
        java.lang.String str20 = annotatingMarkupParser0.getRedirect();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi !\n\n" + "'", str15, "hi !\n\n");
        org.junit.Assert.assertNotNull(wikiModel17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("title");
        org.apache.hadoop.mapreduce.RecordWriter recordWriter2 = null;
        uriStringLiteralNTriplesStorer1.prepareToWrite(recordWriter2);
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer5 = new pignlproc.storage.UriStringLiteralNTriplesStorer("title");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader7 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job9 = null;
        org.apache.pig.ResourceStatistics resourceStatistics10 = parsingWikipediaLoader7.getStatistics("hi!", job9);
        org.apache.hadoop.mapreduce.Job job12 = null;
        org.apache.pig.ResourceSchema resourceSchema13 = parsingWikipediaLoader7.getSchema("hi!", job12);
        uriStringLiteralNTriplesStorer5.checkSchema(resourceSchema13);
        uriStringLiteralNTriplesStorer1.checkSchema(resourceSchema13);
        org.apache.pig.data.Tuple tuple16 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.putNext(tuple16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics10);
        org.junit.Assert.assertNotNull(resourceSchema13);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        java.lang.String[] strArray1 = new java.lang.String[] { "opennlp/en-sent.bin" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String str5 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "");
        java.lang.String str7 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "http://.wikipedia.org/wiki/hi%21");
        java.lang.String str9 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "opennlp/en-sent.bin");
        java.lang.String str11 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "http://http://hi!\n.wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin");
        java.lang.String str13 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "opennlp/en-sent.bin" + "'", str5, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "opennlp/en-sent.bin" + "'", str7, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "opennlp/en-sent.bin" + "'", str9, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "opennlp/en-sent.bin" + "'", str11, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "opennlp/en-sent.bin" + "'", str13, "opennlp/en-sent.bin");
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        java.lang.String[] strArray1 = new java.lang.String[] { "opennlp/en-sent.bin" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String str5 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "");
        java.lang.String str7 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "http://.wikipedia.org/wiki/hi%21");
        java.lang.String str9 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "opennlp/en-sent.bin");
        java.lang.String str11 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "http://http://hi!\n.wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin");
        java.lang.String str13 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21");
        java.lang.String str15 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "http://\" title \".wikipedia.org/wiki/");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "opennlp/en-sent.bin" + "'", str5, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "opennlp/en-sent.bin" + "'", str7, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "opennlp/en-sent.bin" + "'", str9, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "opennlp/en-sent.bin" + "'", str11, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "opennlp/en-sent.bin" + "'", str13, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "opennlp/en-sent.bin" + "'", str15, "opennlp/en-sent.bin");
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("hi !");
        org.apache.pig.Expression expression2 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression2);
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceStatistics resourceStatistics6 = parsingWikipediaLoader1.getStatistics("hi!\n", job5);
        org.apache.hadoop.mapreduce.InputFormat inputFormat7 = parsingWikipediaLoader1.getInputFormat();
        org.apache.hadoop.mapreduce.RecordReader recordReader8 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit9 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader8, pigSplit9);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple11 = parsingWikipediaLoader1.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics6);
        org.junit.Assert.assertNotNull(inputFormat7);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("\"\"\"hi!\"\" \"");
        pignlproc.evaluation.ConcatTextBag concatTextBag3 = new pignlproc.evaluation.ConcatTextBag("\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"");
        pignlproc.evaluation.NoLoopInPath noLoopInPath5 = new pignlproc.evaluation.NoLoopInPath("wikiobject");
        boolean boolean6 = noLoopInPath5.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = noLoopInPath5.getPigLogger();
        org.apache.commons.logging.Log log8 = noLoopInPath5.getLogger();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<opennlp.tools.util.Span> spanList9 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) "\"\"\"hi!\"\" \"", (java.lang.Object) concatTextBag3, (java.lang.Object) noLoopInPath5);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to java.lang.Integer");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(pigLogger7);
        org.junit.Assert.assertNotNull(log8);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        java.lang.String str15 = annotatingMarkupParser0.parse("hi !\n");
        info.bliki.wiki.model.WikiModel wikiModel17 = annotatingMarkupParser0.makeWikiModel("http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21");
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList19 = annotatingMarkupParser0.getParagraphAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel21 = annotatingMarkupParser0.makeWikiModel("opennlp/en-sent.bin");
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi !\n\n" + "'", str15, "hi !\n\n");
        org.junit.Assert.assertNotNull(wikiModel17);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNotNull(annotationList19);
        org.junit.Assert.assertNotNull(wikiModel21);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str2 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.Annotation annotation7 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation12 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int13 = annotation12.end;
        int int14 = annotation12.begin;
        pignlproc.markup.Annotation[] annotationArray15 = new pignlproc.markup.Annotation[] { annotation7, annotation12 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList16 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList16, annotationArray15);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser18 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList19 = annotatingMarkupParser18.getHeaders();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser18.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser18.getHeaderAnnotations();
        java.lang.String str22 = annotatingMarkupParser18.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser23 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList24 = annotatingMarkupParser23.getHeaders();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser23.getHeaders();
        java.lang.Appendable appendable26 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable27 = annotatingMarkupParser23.new CountingAppendable(appendable26);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable28 = annotatingMarkupParser18.new CountingAppendable((java.lang.Appendable) countingAppendable27);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser29 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList30 = annotatingMarkupParser29.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel32 = annotatingMarkupParser29.makeWikiModel("title");
        annotatingMarkupParser0.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList16, (java.lang.Appendable) countingAppendable27, (info.bliki.wiki.model.IWikiModel) wikiModel32);
        java.util.List<pignlproc.markup.Annotation> annotationList34 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList35 = annotatingMarkupParser0.getParagraphAnnotations();
        java.lang.Class<?> wildcardClass36 = annotatingMarkupParser0.getClass();
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(annotationArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(annotationList30);
        org.junit.Assert.assertNotNull(wikiModel32);
        org.junit.Assert.assertNotNull(annotationList34);
        org.junit.Assert.assertNotNull(annotationList35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("\"title\"");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser2 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser2.getHeaders();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser2.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser2.getHeaderAnnotations();
        java.lang.String str6 = annotatingMarkupParser2.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser7 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser7.getHeaders();
        java.util.List<java.lang.String> strList9 = annotatingMarkupParser7.getHeaders();
        java.lang.Appendable appendable10 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable11 = annotatingMarkupParser7.new CountingAppendable(appendable10);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable12 = annotatingMarkupParser2.new CountingAppendable((java.lang.Appendable) countingAppendable11);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser13 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList14 = annotatingMarkupParser13.getHeaders();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser13.getHeaders();
        java.lang.Appendable appendable16 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable17 = annotatingMarkupParser13.new CountingAppendable(appendable16);
        countingAppendable17.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable20 = annotatingMarkupParser2.new CountingAppendable((java.lang.Appendable) countingAppendable17);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable21 = annotatingMarkupParser1.new CountingAppendable((java.lang.Appendable) countingAppendable20);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable25 = countingAppendable21.append((java.lang.CharSequence) "\"\"\"http://.wikipedia.org/wiki/hi%21\"\"  \"", 1, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(strList15);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("\" hi ! \"");
        org.apache.pig.data.Tuple tuple2 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.putNext(tuple2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://.wikipedia.org/wiki/hi%21", job4);
        org.apache.hadoop.mapreduce.InputFormat inputFormat6 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.apache.pig.Expression expression7 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceSchema resourceSchema11 = uriStringLiteralNTriplesLoader2.getSchema("http://hi!\n.wikipedia.org/wiki/%22_title_%22", job10);
        org.apache.hadoop.mapreduce.Job job13 = null;
        org.apache.pig.ResourceStatistics resourceStatistics14 = uriStringLiteralNTriplesLoader2.getStatistics("", job13);
        org.apache.hadoop.mapreduce.Job job16 = null;
        org.apache.pig.ResourceSchema resourceSchema17 = uriStringLiteralNTriplesLoader2.getSchema("\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"", job16);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple18 = uriStringLiteralNTriplesLoader2.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(inputFormat6);
        org.junit.Assert.assertNotNull(resourceSchema11);
        org.junit.Assert.assertNull(resourceStatistics14);
        org.junit.Assert.assertNotNull(resourceSchema17);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("\"title\"", "http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A", "http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21");
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((-1), false);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = null;
        aggregateTextBag2.setReporter(pigProgressable3);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText5 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray7 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList8 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList8, spanArray7);
        java.lang.String str10 = mergeAsOpenNLPAnnotatedText5.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList8);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList11 = mergeAsOpenNLPAnnotatedText5.getArgToFuncMapping();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText12 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray14 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList15 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList15, spanArray14);
        java.lang.String str17 = mergeAsOpenNLPAnnotatedText12.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList15);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger18 = null;
        mergeAsOpenNLPAnnotatedText12.setPigLogger(pigLogger18);
        boolean boolean20 = mergeAsOpenNLPAnnotatedText12.isAsynchronous();
        pignlproc.evaluation.CheckAbstract checkAbstract21 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum23 = null;
        checkAbstract21.warn("http://.wikipedia.org/wiki/hi%21", enum23);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable25 = null;
        checkAbstract21.setReporter(pigProgressable25);
        java.lang.reflect.Type type27 = checkAbstract21.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath28 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText29 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = null;
        safeTsvText29.setPigLogger(pigLogger30);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText32 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable33 = mergeAsOpenNLPAnnotatedText32.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract34 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = checkAbstract34.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = mergeAsOpenNLPAnnotatedText32.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = safeTsvText29.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = noLoopInPath28.outputSchema(schema37);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag40 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText41 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger42 = null;
        safeTsvText41.setPigLogger(pigLogger42);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText44 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable45 = mergeAsOpenNLPAnnotatedText44.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract46 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = checkAbstract46.outputSchema(schema47);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = mergeAsOpenNLPAnnotatedText44.outputSchema(schema47);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = safeTsvText41.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = aggregateTextBag40.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = noLoopInPath28.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = checkAbstract21.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = mergeAsOpenNLPAnnotatedText12.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = mergeAsOpenNLPAnnotatedText5.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = aggregateTextBag2.outputSchema(schema49);
        pignlproc.evaluation.CheckAbstract checkAbstract57 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum59 = null;
        checkAbstract57.warn("http://.wikipedia.org/wiki/hi%21", enum59);
        java.lang.Enum enum62 = null;
        checkAbstract57.warn("hi !", enum62);
        pignlproc.evaluation.NoLoopInPath noLoopInPath64 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText65 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger66 = null;
        safeTsvText65.setPigLogger(pigLogger66);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText68 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable69 = mergeAsOpenNLPAnnotatedText68.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract70 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema71 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = checkAbstract70.outputSchema(schema71);
        org.apache.pig.impl.logicalLayer.schema.Schema schema73 = mergeAsOpenNLPAnnotatedText68.outputSchema(schema71);
        org.apache.pig.impl.logicalLayer.schema.Schema schema74 = safeTsvText65.outputSchema(schema73);
        org.apache.pig.impl.logicalLayer.schema.Schema schema75 = noLoopInPath64.outputSchema(schema73);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag76 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText77 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger78 = null;
        safeTsvText77.setPigLogger(pigLogger78);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText80 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable81 = mergeAsOpenNLPAnnotatedText80.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract82 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema83 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema84 = checkAbstract82.outputSchema(schema83);
        org.apache.pig.impl.logicalLayer.schema.Schema schema85 = mergeAsOpenNLPAnnotatedText80.outputSchema(schema83);
        org.apache.pig.impl.logicalLayer.schema.Schema schema86 = safeTsvText77.outputSchema(schema85);
        org.apache.pig.impl.logicalLayer.schema.Schema schema87 = aggregateTextBag76.outputSchema(schema85);
        org.apache.pig.impl.logicalLayer.schema.Schema schema88 = noLoopInPath64.outputSchema(schema85);
        org.apache.pig.impl.logicalLayer.schema.Schema schema89 = checkAbstract57.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema90 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema91 = checkAbstract57.outputSchema(schema90);
        org.apache.pig.impl.logicalLayer.schema.Schema schema92 = aggregateTextBag2.outputSchema(schema90);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList93 = aggregateTextBag2.getArgToFuncMapping();
        java.lang.reflect.Type type94 = aggregateTextBag2.getReturnType();
        org.apache.pig.data.Tuple tuple95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str96 = aggregateTextBag2.exec(tuple95);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in AggregateTextBag");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(spanArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi !" + "'", str10, "hi !");
        org.junit.Assert.assertNull(funcSpecList11);
        org.junit.Assert.assertNotNull(spanArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi !" + "'", str17, "hi !");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNull(pigProgressable33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(pigProgressable45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(pigProgressable69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(pigProgressable81);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNull(funcSpecList93);
        org.junit.Assert.assertNotNull(type94);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://hi!\n.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin");
        org.apache.hadoop.mapreduce.Job job3 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.setStoreLocation("\"hi! \"\n", job3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = null;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser1.getHeaders();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser1.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList4 = annotatingMarkupParser1.getHeaderAnnotations();
        java.lang.String str5 = annotatingMarkupParser1.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser6 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser6.getHeaders();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser6.getHeaders();
        java.lang.Appendable appendable9 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser6.new CountingAppendable(appendable9);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable11 = annotatingMarkupParser1.new CountingAppendable((java.lang.Appendable) countingAppendable10);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser12 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser12.getHeaders();
        java.util.List<java.lang.String> strList14 = annotatingMarkupParser12.getHeaders();
        java.lang.Appendable appendable15 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable16 = annotatingMarkupParser12.new CountingAppendable(appendable15);
        countingAppendable16.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable19 = annotatingMarkupParser1.new CountingAppendable((java.lang.Appendable) countingAppendable16);
        countingAppendable19.currentPosition = (byte) -1;
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable22 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: reflection call to pignlproc.markup.AnnotatingMarkupParser$CountingAppendable with null for superclass argument");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(annotationList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("\"hi!\"\n");
        org.apache.hadoop.mapreduce.Job job3 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.cleanupOnFailure("", job3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Can not create a Path from an empty string");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        java.lang.String str2 = pignlproc.markup.AnnotatingMarkupParser.titleToUri("\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/%22title%22href\"", "http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21.wikipedia.org/wiki/%22http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521_.wikipedia.org%2Fwiki%2F%2522title%2522href%22" + "'", str2, "http://http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21.wikipedia.org/wiki/%22http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521_.wikipedia.org%2Fwiki%2F%2522title%2522href%22");
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag1 = new pignlproc.evaluation.AggregateTextBag((int) (short) 0);
        aggregateTextBag1.progress();
        org.apache.commons.logging.Log log3 = aggregateTextBag1.getLogger();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink4 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = null;
        sentencesWithLink4.setPigLogger(pigLogger5);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList7 = sentencesWithLink4.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = sentencesWithLink4.getPigLogger();
        boolean boolean9 = sentencesWithLink4.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText10 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable11 = mergeAsOpenNLPAnnotatedText10.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract12 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = checkAbstract12.outputSchema(schema13);
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = mergeAsOpenNLPAnnotatedText10.outputSchema(schema13);
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = sentencesWithLink4.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = aggregateTextBag1.outputSchema(schema16);
        org.apache.pig.data.Tuple tuple18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = aggregateTextBag1.exec(tuple18);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in AggregateTextBag");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(log3);
        org.junit.Assert.assertNull(funcSpecList7);
        org.junit.Assert.assertNull(pigLogger8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(pigProgressable11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("\" opennlp / en - sent . bin \"", "\"hi!\"\n");
        org.apache.pig.Expression expression3 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression3);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        org.apache.hadoop.fs.Path path1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.apache.pig.LoadFunc.getAbsolutePath("opennlp/en-sent.bin", path1);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: opennlp/en-sent.bin curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader3.getSchema("", job5);
        org.apache.pig.Expression expression7 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression7);
        org.apache.hadoop.mapreduce.InputFormat inputFormat9 = uriUriNTriplesLoader3.getInputFormat();
        org.apache.hadoop.mapreduce.Job job11 = null;
        org.apache.pig.ResourceSchema resourceSchema12 = uriUriNTriplesLoader3.getSchema("wikiobject", job11);
        org.apache.hadoop.mapreduce.Job job14 = null;
        org.apache.pig.ResourceSchema resourceSchema15 = uriUriNTriplesLoader3.getSchema("\"opennlp/en-sent.bin\"", job14);
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNotNull(inputFormat9);
        org.junit.Assert.assertNotNull(resourceSchema12);
        org.junit.Assert.assertNotNull(resourceSchema15);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22", "hi !", "http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21");
        org.apache.hadoop.mapreduce.RecordWriter recordWriter4 = null;
        uriStringLiteralNTriplesStorer3.prepareToWrite(recordWriter4);
        org.apache.hadoop.fs.Path path7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = uriStringLiteralNTriplesStorer3.relToAbsPathForStoreLocation("http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522", path7);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: http://hi !?.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522 curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.mapreduce.RecordReader recordReader5 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit6 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader5, pigSplit6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        java.lang.String[] strArray10 = parsingWikipediaLoader1.getPartitionKeys("http://.wikipedia.org/wiki/hi%21", job9);
        org.apache.hadoop.mapreduce.Job job12 = null;
        org.apache.pig.ResourceSchema resourceSchema13 = parsingWikipediaLoader1.getSchema("\"\"", job12);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple14 = parsingWikipediaLoader1.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNull(strArray10);
        org.junit.Assert.assertNotNull(resourceSchema13);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum2 = null;
        safeTsvText0.warn("opennlp/en-sent.bin", enum2);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList4 = safeTsvText0.getArgToFuncMapping();
        pignlproc.evaluation.NoLoopInPath noLoopInPath5 = new pignlproc.evaluation.NoLoopInPath();
        noLoopInPath5.progress();
        pignlproc.evaluation.NoLoopInPath noLoopInPath7 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText8 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger9 = null;
        safeTsvText8.setPigLogger(pigLogger9);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText11 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable12 = mergeAsOpenNLPAnnotatedText11.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract13 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = checkAbstract13.outputSchema(schema14);
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = mergeAsOpenNLPAnnotatedText11.outputSchema(schema14);
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = safeTsvText8.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = noLoopInPath7.outputSchema(schema16);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag19 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText20 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger21 = null;
        safeTsvText20.setPigLogger(pigLogger21);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText23 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable24 = mergeAsOpenNLPAnnotatedText23.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract25 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = checkAbstract25.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = mergeAsOpenNLPAnnotatedText23.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = safeTsvText20.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = aggregateTextBag19.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = noLoopInPath7.outputSchema(schema28);
        pignlproc.evaluation.CheckAbstract checkAbstract32 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum34 = null;
        checkAbstract32.warn("http://.wikipedia.org/wiki/hi%21", enum34);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger36 = null;
        checkAbstract32.setPigLogger(pigLogger36);
        checkAbstract32.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText39 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger40 = null;
        safeTsvText39.setPigLogger(pigLogger40);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText42 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable43 = mergeAsOpenNLPAnnotatedText42.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract44 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = checkAbstract44.outputSchema(schema45);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = mergeAsOpenNLPAnnotatedText42.outputSchema(schema45);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = safeTsvText39.outputSchema(schema47);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = checkAbstract32.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = noLoopInPath7.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = noLoopInPath5.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = safeTsvText0.outputSchema(schema49);
        org.apache.pig.data.Tuple tuple53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str54 = safeTsvText0.exec(tuple53);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in SafeTsvText");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(funcSpecList4);
        org.junit.Assert.assertNull(pigProgressable12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(pigProgressable24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(pigProgressable43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"http://http://http://.wikipedia.org/wiki/hi%21?.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"http://\"title\".wikipedia.org/wiki/%22hi%21%22\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel3 = annotatingMarkupParser0.makeWikiModel("title");
        java.util.List<pignlproc.markup.Annotation> annotationList4 = annotatingMarkupParser0.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser0.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser6 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser6.getHeaders();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser6.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList9 = annotatingMarkupParser6.getHeaderAnnotations();
        java.lang.String str10 = annotatingMarkupParser6.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser11 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser11.getHeaders();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser11.getHeaders();
        java.lang.Appendable appendable14 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable15 = annotatingMarkupParser11.new CountingAppendable(appendable14);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable16 = annotatingMarkupParser6.new CountingAppendable((java.lang.Appendable) countingAppendable15);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser17 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList18 = annotatingMarkupParser17.getHeaders();
        java.util.List<java.lang.String> strList19 = annotatingMarkupParser17.getHeaders();
        java.lang.Appendable appendable20 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable21 = annotatingMarkupParser17.new CountingAppendable(appendable20);
        countingAppendable21.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable24 = annotatingMarkupParser6.new CountingAppendable((java.lang.Appendable) countingAppendable21);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser25 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser25.getHeaders();
        java.util.List<java.lang.String> strList27 = annotatingMarkupParser25.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList28 = annotatingMarkupParser25.getHeaderAnnotations();
        java.lang.String str29 = annotatingMarkupParser25.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser30 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList31 = annotatingMarkupParser30.getHeaders();
        java.util.List<java.lang.String> strList32 = annotatingMarkupParser30.getHeaders();
        java.lang.Appendable appendable33 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable34 = annotatingMarkupParser30.new CountingAppendable(appendable33);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable35 = annotatingMarkupParser25.new CountingAppendable((java.lang.Appendable) countingAppendable34);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable36 = annotatingMarkupParser6.new CountingAppendable((java.lang.Appendable) countingAppendable34);
        countingAppendable34.currentPosition = 0;
        countingAppendable34.currentPosition = (short) 100;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable41 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable34);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable45 = countingAppendable41.append((java.lang.CharSequence) "http://.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521", (int) '4', (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(wikiModel3);
        org.junit.Assert.assertNotNull(annotationList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(annotationList9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(annotationList28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        info.bliki.wiki.model.WikiModel wikiModel12 = annotatingMarkupParser0.makeWikiModel("\"hi!\"\n");
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList14 = annotatingMarkupParser0.getHeaderAnnotations();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(wikiModel12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(annotationList14);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("");
        java.lang.reflect.Type type2 = noLoopInPath1.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger3 = null;
        noLoopInPath1.setPigLogger(pigLogger3);
        org.junit.Assert.assertNotNull(type2);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        sentencesWithLink0.setReporter(pigProgressable4);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = sentencesWithLink0.getReporter();
        java.lang.Enum enum8 = null;
        sentencesWithLink0.warn("http://\"title\".wikipedia.org/wiki/%22hi%21%22", enum8);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList10 = sentencesWithLink0.getArgToFuncMapping();
        boolean boolean11 = sentencesWithLink0.isAsynchronous();
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNull(pigProgressable6);
        org.junit.Assert.assertNull(funcSpecList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        java.net.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader wikipediaRecordReader3 = new pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader(uRL0, (long) (byte) -1, 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("", "title", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job5 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer3.setStoreLocation("\"opennlp/en-sent.bin\"", job5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = sentencesWithLink0.getPigLogger();
        sentencesWithLink0.finish();
        java.lang.Enum enum4 = null;
        sentencesWithLink0.warn("titlehref", enum4);
        sentencesWithLink0.finish();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList7 = sentencesWithLink0.getArgToFuncMapping();
        org.junit.Assert.assertNull(pigLogger1);
        org.junit.Assert.assertNull(funcSpecList7);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        org.apache.hadoop.fs.Path path1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.apache.pig.LoadFunc.getAbsolutePath("\n", path1);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: ? curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.InputFormat inputFormat4 = uriUriNTriplesLoader3.getInputFormat();
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceStatistics resourceStatistics7 = uriUriNTriplesLoader3.getStatistics("\"hi! \"", job6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        java.lang.String[] strArray10 = uriUriNTriplesLoader3.getPartitionKeys("http://hi!\n.wikipedia.org/wiki/%22_title_%22", job9);
        org.apache.hadoop.mapreduce.Job job12 = null;
        java.lang.String[] strArray13 = uriUriNTriplesLoader3.getPartitionKeys("\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/hi%21\"", job12);
        org.apache.hadoop.mapreduce.Job job15 = null;
        org.apache.pig.ResourceSchema resourceSchema16 = uriUriNTriplesLoader3.getSchema("http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin", job15);
        org.apache.hadoop.mapreduce.RecordReader recordReader17 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit18 = null;
        uriUriNTriplesLoader3.prepareToRead(recordReader17, pigSplit18);
        org.junit.Assert.assertNotNull(inputFormat4);
        org.junit.Assert.assertNull(resourceStatistics7);
        org.junit.Assert.assertNull(strArray10);
        org.junit.Assert.assertNull(strArray13);
        org.junit.Assert.assertNotNull(resourceSchema16);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel3 = annotatingMarkupParser0.makeWikiModel("title");
        java.util.List<pignlproc.markup.Annotation> annotationList4 = annotatingMarkupParser0.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = null;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser7 = new pignlproc.markup.AnnotatingMarkupParser("\"title\"");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser8 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList9 = annotatingMarkupParser8.getHeaders();
        java.util.List<java.lang.String> strList10 = annotatingMarkupParser8.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList11 = annotatingMarkupParser8.getHeaderAnnotations();
        java.lang.String str12 = annotatingMarkupParser8.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser13 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList14 = annotatingMarkupParser13.getHeaders();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser13.getHeaders();
        java.lang.Appendable appendable16 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable17 = annotatingMarkupParser13.new CountingAppendable(appendable16);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable18 = annotatingMarkupParser8.new CountingAppendable((java.lang.Appendable) countingAppendable17);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser19.getHeaders();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser19.getHeaders();
        java.lang.Appendable appendable22 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable23 = annotatingMarkupParser19.new CountingAppendable(appendable22);
        countingAppendable23.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable26 = annotatingMarkupParser8.new CountingAppendable((java.lang.Appendable) countingAppendable23);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable27 = annotatingMarkupParser7.new CountingAppendable((java.lang.Appendable) countingAppendable26);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser28 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList29 = annotatingMarkupParser28.getHeaders();
        java.util.List<java.lang.String> strList30 = annotatingMarkupParser28.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList31 = annotatingMarkupParser28.getHeaderAnnotations();
        java.lang.String str32 = annotatingMarkupParser28.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser33 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList34 = annotatingMarkupParser33.getHeaders();
        java.util.List<java.lang.String> strList35 = annotatingMarkupParser33.getHeaders();
        java.lang.Appendable appendable36 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable37 = annotatingMarkupParser33.new CountingAppendable(appendable36);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable38 = annotatingMarkupParser28.new CountingAppendable((java.lang.Appendable) countingAppendable37);
        java.util.List<java.lang.String> strList39 = annotatingMarkupParser28.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel41 = annotatingMarkupParser28.makeWikiModel("opennlp / en - sent . bin");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser42 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList43 = annotatingMarkupParser42.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList44 = annotatingMarkupParser42.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel46 = annotatingMarkupParser42.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel48 = annotatingMarkupParser42.makeWikiModel("hi!\n");
        java.util.List<pignlproc.markup.Annotation> annotationList49 = annotatingMarkupParser42.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser50 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList51 = annotatingMarkupParser50.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList52 = annotatingMarkupParser50.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList53 = annotatingMarkupParser50.getParagraphAnnotations();
        java.util.List<java.lang.String> strList54 = annotatingMarkupParser50.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList55 = annotatingMarkupParser50.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser56 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList57 = annotatingMarkupParser56.getHeaderAnnotations();
        java.util.List<java.lang.String> strList58 = annotatingMarkupParser56.getParagraphs();
        java.lang.Appendable appendable59 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable60 = annotatingMarkupParser56.new CountingAppendable(appendable59);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable61 = annotatingMarkupParser50.new CountingAppendable((java.lang.Appendable) countingAppendable60);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser62 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList63 = annotatingMarkupParser62.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList64 = annotatingMarkupParser62.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel66 = annotatingMarkupParser62.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel68 = annotatingMarkupParser62.makeWikiModel("hi!\n");
        annotatingMarkupParser28.nodesToText(annotationList49, (java.lang.Appendable) countingAppendable61, (info.bliki.wiki.model.IWikiModel) wikiModel68);
        annotatingMarkupParser0.nodesToText(annotationList5, (java.lang.Appendable) countingAppendable26, (info.bliki.wiki.model.IWikiModel) wikiModel68);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable74 = countingAppendable26.append((java.lang.CharSequence) "http://.wikipedia.org/wiki/hi%21\n", (int) (short) 1, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(wikiModel3);
        org.junit.Assert.assertNotNull(annotationList4);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(annotationList11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(annotationList31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(wikiModel41);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(annotationList44);
        org.junit.Assert.assertNotNull(wikiModel46);
        org.junit.Assert.assertNotNull(wikiModel48);
        org.junit.Assert.assertNotNull(annotationList49);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(annotationList52);
        org.junit.Assert.assertNotNull(annotationList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(annotationList55);
        org.junit.Assert.assertNotNull(annotationList57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNotNull(annotationList64);
        org.junit.Assert.assertNotNull(wikiModel66);
        org.junit.Assert.assertNotNull(wikiModel68);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        mergeAsOpenNLPAnnotatedText0.setPigLogger(pigLogger6);
        pignlproc.evaluation.NoLoopInPath noLoopInPath8 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText9 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = null;
        safeTsvText9.setPigLogger(pigLogger10);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText12 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable13 = mergeAsOpenNLPAnnotatedText12.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract14 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = checkAbstract14.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = mergeAsOpenNLPAnnotatedText12.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = safeTsvText9.outputSchema(schema17);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = noLoopInPath8.outputSchema(schema17);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag22 = new pignlproc.evaluation.AggregateTextBag((int) 'a', false);
        pignlproc.evaluation.NoLoopInPath noLoopInPath23 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText24 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        safeTsvText24.setPigLogger(pigLogger25);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText27 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable28 = mergeAsOpenNLPAnnotatedText27.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract29 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = checkAbstract29.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = mergeAsOpenNLPAnnotatedText27.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = safeTsvText24.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = noLoopInPath23.outputSchema(schema32);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag35 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText36 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger37 = null;
        safeTsvText36.setPigLogger(pigLogger37);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText39 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable40 = mergeAsOpenNLPAnnotatedText39.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract41 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = checkAbstract41.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = mergeAsOpenNLPAnnotatedText39.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = safeTsvText36.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = aggregateTextBag35.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = noLoopInPath23.outputSchema(schema44);
        pignlproc.evaluation.CheckAbstract checkAbstract48 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum50 = null;
        checkAbstract48.warn("http://.wikipedia.org/wiki/hi%21", enum50);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger52 = null;
        checkAbstract48.setPigLogger(pigLogger52);
        checkAbstract48.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText55 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger56 = null;
        safeTsvText55.setPigLogger(pigLogger56);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText58 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable59 = mergeAsOpenNLPAnnotatedText58.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract60 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = checkAbstract60.outputSchema(schema61);
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = mergeAsOpenNLPAnnotatedText58.outputSchema(schema61);
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = safeTsvText55.outputSchema(schema63);
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = checkAbstract48.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = noLoopInPath23.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = aggregateTextBag22.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = noLoopInPath8.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = mergeAsOpenNLPAnnotatedText0.outputSchema(schema68);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList70 = mergeAsOpenNLPAnnotatedText0.getArgToFuncMapping();
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi !" + "'", str5, "hi !");
        org.junit.Assert.assertNull(pigProgressable13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(pigProgressable28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(pigProgressable40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(pigProgressable59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(funcSpecList70);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag0 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = aggregateTextBag0.outputSchema(schema9);
        java.lang.Enum enum13 = null;
        aggregateTextBag0.warn("\"hi!\"\n", enum13);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable15 = null;
        aggregateTextBag0.setReporter(pigProgressable15);
        org.apache.pig.data.Tuple tuple17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = aggregateTextBag0.exec(tuple17);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in AggregateTextBag");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        java.lang.String str1 = pignlproc.evaluation.SafeTsvText.escape("http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/hrefwikiobject\"\"\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"\"\"wikiobject\"hi!\"\nwikiobject\nwikiobjectopennlp/en-sent.binwikiobjecthttp://hi!\n.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._binwikiobjecthttp://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21wikiobjecthttp://\"http://.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22wikiobject\"opennlp / en - sent . bin\"wikiobject\"\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/hrefwikiobject\"\"\"\"\"\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"\"\"\"\"\"wikiobject\"\"hi!\"\" wikiobject wikiobjectopennlp/en-sent.binwikiobjecthttp://hi! .wikipedia.org/wiki/opennlp_%2F_en_-_sent_._binwikiobjecthttp://http://\"\"title\"\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21wikiobjecthttp://\"\"http://.wikipedia.org/wiki/hi%21\"\".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22wikiobject\"\"opennlp / en - sent . bin\"\"wikiobject\"\"\"\"\"" + "'", str1, "\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/hrefwikiobject\"\"\"\"\"\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"\"\"\"\"\"wikiobject\"\"hi!\"\" wikiobject wikiobjectopennlp/en-sent.binwikiobjecthttp://hi! .wikipedia.org/wiki/opennlp_%2F_en_-_sent_._binwikiobjecthttp://http://\"\"title\"\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21wikiobjecthttp://\"\"http://.wikipedia.org/wiki/hi%21\"\".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22wikiobject\"\"opennlp / en - sent . bin\"\"wikiobject\"\"\"\"\"");
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("href");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("opennlp/en-sent.bin", job3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = parsingWikipediaLoader1.getSchema("\"title\"\n", job6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        java.lang.String[] strArray10 = parsingWikipediaLoader1.getPartitionKeys("\" title \"", job9);
        org.apache.hadoop.mapreduce.RecordReader recordReader11 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit12 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader11, pigSplit12);
        org.apache.pig.Expression expression14 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression14);
        org.apache.hadoop.mapreduce.Job job17 = null;
        org.apache.pig.ResourceSchema resourceSchema18 = parsingWikipediaLoader1.getSchema("http://\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\".wikipedia.org/wiki/%22%22%22opennlp_%2F_en_-_sent_._bin%22%22%22", job17);
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(resourceSchema7);
        org.junit.Assert.assertNull(strArray10);
        org.junit.Assert.assertNotNull(resourceSchema18);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = parsingWikipediaLoader1.getSchema("\"hi!\"", job6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        org.apache.pig.ResourceSchema resourceSchema10 = parsingWikipediaLoader1.getSchema("\"hi!\"\n", job9);
        org.apache.hadoop.mapreduce.Job job12 = null;
        org.apache.pig.ResourceSchema resourceSchema13 = parsingWikipediaLoader1.getSchema("http://.wikipedia.org/wiki/hi%21\n", job12);
        org.apache.pig.Expression expression14 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression14);
        org.apache.hadoop.mapreduce.Job job17 = null;
        org.apache.pig.ResourceStatistics resourceStatistics18 = parsingWikipediaLoader1.getStatistics("\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/hi%21\"", job17);
        org.apache.hadoop.fs.Path path20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = parsingWikipediaLoader1.relativeToAbsolutePath("title\n\n", path20);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: title?? curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNotNull(resourceSchema7);
        org.junit.Assert.assertNotNull(resourceSchema10);
        org.junit.Assert.assertNotNull(resourceSchema13);
        org.junit.Assert.assertNull(resourceStatistics18);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable1 = mergeAsOpenNLPAnnotatedText0.getReporter();
        org.apache.pig.data.Tuple tuple2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = mergeAsOpenNLPAnnotatedText0.exec(tuple2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigProgressable1);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        java.lang.String str2 = pignlproc.markup.AnnotatingMarkupParser.titleToUri("\"\"\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"\"\"", "\"\"\"http://.wikipedia.org/wiki/hi%21\"\" \"");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://\"\"\"http://.wikipedia.org/wiki/hi%21\"\" \".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi%21.wikipedia.org%2Fwiki%2F%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22" + "'", str2, "http://\"\"\"http://.wikipedia.org/wiki/hi%21\"\" \".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi%21.wikipedia.org%2Fwiki%2F%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22");
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        java.net.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader wikipediaRecordReader3 = new pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader(uRL0, (long) (short) 0, (long) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", "http://wikiobject.wikipedia.org/wiki/opennlp%2Fen-sent.bin", "hi !\n");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceStatistics resourceStatistics6 = uriUriNTriplesLoader3.getStatistics("http://.wikipedia.org/wiki/%22_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_%22", job5);
        org.junit.Assert.assertNull(resourceStatistics6);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList3);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = mergeAsOpenNLPAnnotatedText0.getArgToFuncMapping();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText7 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray9 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList10 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList10, spanArray9);
        java.lang.String str12 = mergeAsOpenNLPAnnotatedText7.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList10);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger13 = null;
        mergeAsOpenNLPAnnotatedText7.setPigLogger(pigLogger13);
        boolean boolean15 = mergeAsOpenNLPAnnotatedText7.isAsynchronous();
        pignlproc.evaluation.CheckAbstract checkAbstract16 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum18 = null;
        checkAbstract16.warn("http://.wikipedia.org/wiki/hi%21", enum18);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable20 = null;
        checkAbstract16.setReporter(pigProgressable20);
        java.lang.reflect.Type type22 = checkAbstract16.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath23 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText24 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        safeTsvText24.setPigLogger(pigLogger25);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText27 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable28 = mergeAsOpenNLPAnnotatedText27.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract29 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = checkAbstract29.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = mergeAsOpenNLPAnnotatedText27.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = safeTsvText24.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = noLoopInPath23.outputSchema(schema32);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag35 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText36 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger37 = null;
        safeTsvText36.setPigLogger(pigLogger37);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText39 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable40 = mergeAsOpenNLPAnnotatedText39.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract41 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = checkAbstract41.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = mergeAsOpenNLPAnnotatedText39.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = safeTsvText36.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = aggregateTextBag35.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = noLoopInPath23.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = checkAbstract16.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = mergeAsOpenNLPAnnotatedText7.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = mergeAsOpenNLPAnnotatedText0.outputSchema(schema44);
        pignlproc.evaluation.CheckAbstract checkAbstract51 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum53 = null;
        checkAbstract51.warn("http://.wikipedia.org/wiki/hi%21", enum53);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger55 = null;
        checkAbstract51.setPigLogger(pigLogger55);
        checkAbstract51.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText58 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger59 = null;
        safeTsvText58.setPigLogger(pigLogger59);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText61 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable62 = mergeAsOpenNLPAnnotatedText61.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract63 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = checkAbstract63.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = mergeAsOpenNLPAnnotatedText61.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = safeTsvText58.outputSchema(schema66);
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = checkAbstract51.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = mergeAsOpenNLPAnnotatedText0.outputSchema(schema68);
        mergeAsOpenNLPAnnotatedText0.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger71 = mergeAsOpenNLPAnnotatedText0.getPigLogger();
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi !" + "'", str5, "hi !");
        org.junit.Assert.assertNull(funcSpecList6);
        org.junit.Assert.assertNotNull(spanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi !" + "'", str12, "hi !");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNull(pigProgressable28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(pigProgressable40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(pigProgressable62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(pigLogger71);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract((int) (byte) 10);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList2 = checkAbstract1.getArgToFuncMapping();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText3 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray5 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList6 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList6, spanArray5);
        java.lang.String str8 = mergeAsOpenNLPAnnotatedText3.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList6);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList9 = mergeAsOpenNLPAnnotatedText3.getArgToFuncMapping();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText10 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray12 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList13 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList13, spanArray12);
        java.lang.String str15 = mergeAsOpenNLPAnnotatedText10.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList13);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = null;
        mergeAsOpenNLPAnnotatedText10.setPigLogger(pigLogger16);
        boolean boolean18 = mergeAsOpenNLPAnnotatedText10.isAsynchronous();
        pignlproc.evaluation.CheckAbstract checkAbstract19 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum21 = null;
        checkAbstract19.warn("http://.wikipedia.org/wiki/hi%21", enum21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable23 = null;
        checkAbstract19.setReporter(pigProgressable23);
        java.lang.reflect.Type type25 = checkAbstract19.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath26 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText27 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger28 = null;
        safeTsvText27.setPigLogger(pigLogger28);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText30 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable31 = mergeAsOpenNLPAnnotatedText30.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract32 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = checkAbstract32.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = mergeAsOpenNLPAnnotatedText30.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = safeTsvText27.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = noLoopInPath26.outputSchema(schema35);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag38 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText39 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger40 = null;
        safeTsvText39.setPigLogger(pigLogger40);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText42 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable43 = mergeAsOpenNLPAnnotatedText42.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract44 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = checkAbstract44.outputSchema(schema45);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = mergeAsOpenNLPAnnotatedText42.outputSchema(schema45);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = safeTsvText39.outputSchema(schema47);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = aggregateTextBag38.outputSchema(schema47);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = noLoopInPath26.outputSchema(schema47);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = checkAbstract19.outputSchema(schema47);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = mergeAsOpenNLPAnnotatedText10.outputSchema(schema47);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = mergeAsOpenNLPAnnotatedText3.outputSchema(schema47);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = checkAbstract1.outputSchema(schema47);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger55 = null;
        checkAbstract1.setPigLogger(pigLogger55);
        org.junit.Assert.assertNull(funcSpecList2);
        org.junit.Assert.assertNotNull(spanArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi !" + "'", str8, "hi !");
        org.junit.Assert.assertNull(funcSpecList9);
        org.junit.Assert.assertNotNull(spanArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi !" + "'", str15, "hi !");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNull(pigProgressable31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(pigProgressable43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = parsingWikipediaLoader1.getSchema("hi!", job6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        // The following exception was thrown during execution in test generation
        try {
            parsingWikipediaLoader1.setLocation("\n", job9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNotNull(resourceSchema7);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        org.apache.hadoop.mapreduce.Job job1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.StoreFunc.cleanupOnFailureImpl("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22", job1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        java.net.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader wikipediaRecordReader3 = new pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader(uRL0, (long) 10, (long) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader3.getSchema("", job5);
        org.apache.pig.Expression expression7 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression7);
        org.apache.hadoop.mapreduce.InputFormat inputFormat9 = uriUriNTriplesLoader3.getInputFormat();
        org.apache.pig.Expression expression10 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression10);
        org.apache.hadoop.mapreduce.Job job13 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesLoader3.setLocation("\"hi! \"", job13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNotNull(inputFormat9);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        info.bliki.wiki.model.WikiModel wikiModel12 = annotatingMarkupParser0.makeWikiModel("\"hi!\"\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser13 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList14 = annotatingMarkupParser13.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser15 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser15.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList17 = annotatingMarkupParser15.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser15.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser19.getHeaders();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser19.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList22 = annotatingMarkupParser19.getHeaderAnnotations();
        java.lang.String str23 = annotatingMarkupParser19.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser24 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser24.getHeaders();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser24.getHeaders();
        java.lang.Appendable appendable27 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable28 = annotatingMarkupParser24.new CountingAppendable(appendable27);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable29 = annotatingMarkupParser19.new CountingAppendable((java.lang.Appendable) countingAppendable28);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser30 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList31 = annotatingMarkupParser30.getHeaderAnnotations();
        java.lang.String str32 = annotatingMarkupParser30.getRedirect();
        pignlproc.markup.Annotation annotation37 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation42 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int43 = annotation42.end;
        int int44 = annotation42.begin;
        pignlproc.markup.Annotation[] annotationArray45 = new pignlproc.markup.Annotation[] { annotation37, annotation42 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList46 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList46, annotationArray45);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser48 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList49 = annotatingMarkupParser48.getHeaders();
        java.util.List<java.lang.String> strList50 = annotatingMarkupParser48.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList51 = annotatingMarkupParser48.getHeaderAnnotations();
        java.lang.String str52 = annotatingMarkupParser48.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser53 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList54 = annotatingMarkupParser53.getHeaders();
        java.util.List<java.lang.String> strList55 = annotatingMarkupParser53.getHeaders();
        java.lang.Appendable appendable56 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable57 = annotatingMarkupParser53.new CountingAppendable(appendable56);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable58 = annotatingMarkupParser48.new CountingAppendable((java.lang.Appendable) countingAppendable57);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser59 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList60 = annotatingMarkupParser59.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel62 = annotatingMarkupParser59.makeWikiModel("title");
        annotatingMarkupParser30.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList46, (java.lang.Appendable) countingAppendable57, (info.bliki.wiki.model.IWikiModel) wikiModel62);
        annotatingMarkupParser13.nodesToText(annotationList18, (java.lang.Appendable) countingAppendable29, (info.bliki.wiki.model.IWikiModel) wikiModel62);
        int int65 = countingAppendable29.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable66 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable29);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser67 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList68 = annotatingMarkupParser67.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList69 = annotatingMarkupParser67.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList70 = annotatingMarkupParser67.getParagraphAnnotations();
        java.util.List<java.lang.String> strList71 = annotatingMarkupParser67.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList72 = annotatingMarkupParser67.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser73 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList74 = annotatingMarkupParser73.getHeaderAnnotations();
        java.util.List<java.lang.String> strList75 = annotatingMarkupParser73.getParagraphs();
        java.lang.Appendable appendable76 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable77 = annotatingMarkupParser73.new CountingAppendable(appendable76);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable78 = annotatingMarkupParser67.new CountingAppendable((java.lang.Appendable) countingAppendable77);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable79 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable77);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable83 = countingAppendable79.append((java.lang.CharSequence) "http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href", (int) (short) -1, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(wikiModel12);
        org.junit.Assert.assertNotNull(annotationList14);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(annotationList17);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(annotationList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNotNull(annotationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(annotationList51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(annotationList60);
        org.junit.Assert.assertNotNull(wikiModel62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNotNull(annotationList69);
        org.junit.Assert.assertNotNull(annotationList70);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNotNull(annotationList72);
        org.junit.Assert.assertNotNull(annotationList74);
        org.junit.Assert.assertNotNull(strList75);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://http://hi!\n.wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin");
        org.apache.hadoop.mapreduce.Job job3 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.setStoreLocation("http://hi!\n.wikipedia.org/wiki/%22_title_%22", job3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("href");
        org.apache.hadoop.mapreduce.RecordWriter recordWriter2 = null;
        uriUriNTriplesStorer1.prepareToWrite(recordWriter2);
        org.apache.hadoop.mapreduce.RecordWriter recordWriter4 = null;
        uriUriNTriplesStorer1.prepareToWrite(recordWriter4);
        org.apache.pig.data.Tuple tuple6 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer1.putNext(tuple6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = checkAbstract0.getReporter();
        boolean boolean4 = checkAbstract0.isAsynchronous();
        checkAbstract0.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = null;
        checkAbstract0.setReporter(pigProgressable6);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = checkAbstract0.getReporter();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(pigProgressable8);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPaths(job0, "\" opennlp / en - sent . bin \"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        java.lang.String[] strArray5 = uriStringLiteralNTriplesLoader2.getPartitionKeys("\"title\"", job4);
        org.apache.hadoop.mapreduce.RecordReader recordReader6 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit7 = null;
        uriStringLiteralNTriplesLoader2.prepareToRead(recordReader6, pigSplit7);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple9 = uriStringLiteralNTriplesLoader2.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strArray5);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.lang.String str4 = annotatingMarkupParser0.parse("\"title\"");
        java.util.List<java.lang.String> strList5 = annotatingMarkupParser0.getParagraphs();
        java.lang.String str7 = annotatingMarkupParser0.parse("title");
        boolean boolean8 = annotatingMarkupParser0.noLinks();
        java.util.List<pignlproc.markup.Annotation> annotationList9 = annotatingMarkupParser0.getHeaderAnnotations();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"title\"\n" + "'", str4, "\"title\"\n");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "title\n" + "'", str7, "title\n");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(annotationList9);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        java.net.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader wikipediaRecordReader3 = new pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader(uRL0, (long) (short) 1, 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("\" http : // . wikipedia . org / wiki / hi % 21 \"");
        org.apache.commons.logging.Log log2 = mergeAsOpenNLPAnnotatedText1.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger3 = null;
        mergeAsOpenNLPAnnotatedText1.setPigLogger(pigLogger3);
        org.junit.Assert.assertNotNull(log2);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("http://.wikipedia.org/wiki/hi%21");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriUriNTriplesStorer1.getOutputFormat();
        uriUriNTriplesStorer1.setStoreFuncUDFContextSignature("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader5 = new pignlproc.storage.UriStringLiteralNTriplesLoader();
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = uriStringLiteralNTriplesLoader5.getSchema("", job7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceStatistics resourceStatistics11 = uriStringLiteralNTriplesLoader5.getStatistics("opennlp/en-sent.bin", job10);
        org.apache.hadoop.mapreduce.Job job13 = null;
        org.apache.pig.ResourceSchema resourceSchema14 = uriStringLiteralNTriplesLoader5.getSchema("", job13);
        uriUriNTriplesStorer1.checkSchema(resourceSchema14);
        org.apache.hadoop.mapreduce.OutputFormat outputFormat16 = uriUriNTriplesStorer1.getOutputFormat();
        org.junit.Assert.assertNotNull(outputFormat2);
        org.junit.Assert.assertNotNull(resourceSchema8);
        org.junit.Assert.assertNull(resourceStatistics11);
        org.junit.Assert.assertNotNull(resourceSchema14);
        org.junit.Assert.assertNotNull(outputFormat16);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        java.lang.reflect.Type type1 = safeTsvText0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable2 = null;
        safeTsvText0.setReporter(pigProgressable2);
        pignlproc.evaluation.CheckAbstract checkAbstract4 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema5 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema6 = checkAbstract4.outputSchema(schema5);
        checkAbstract4.finish();
        java.lang.Enum enum9 = null;
        checkAbstract4.warn("href", enum9);
        pignlproc.evaluation.CheckAbstract checkAbstract11 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum13 = null;
        checkAbstract11.warn("http://.wikipedia.org/wiki/hi%21", enum13);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable15 = null;
        checkAbstract11.setReporter(pigProgressable15);
        java.lang.reflect.Type type17 = checkAbstract11.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath18 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText19 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger20 = null;
        safeTsvText19.setPigLogger(pigLogger20);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText22 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable23 = mergeAsOpenNLPAnnotatedText22.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract24 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = checkAbstract24.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = mergeAsOpenNLPAnnotatedText22.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = safeTsvText19.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = noLoopInPath18.outputSchema(schema27);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag30 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText31 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger32 = null;
        safeTsvText31.setPigLogger(pigLogger32);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText34 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable35 = mergeAsOpenNLPAnnotatedText34.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract36 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = checkAbstract36.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = mergeAsOpenNLPAnnotatedText34.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = safeTsvText31.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = aggregateTextBag30.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = noLoopInPath18.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = checkAbstract11.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = checkAbstract4.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = safeTsvText0.outputSchema(schema44);
        org.apache.pig.data.Tuple tuple46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str47 = safeTsvText0.exec(tuple46);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in SafeTsvText");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNull(pigProgressable23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(pigProgressable35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        sentencesWithLink0.setPigLogger(pigLogger2);
        java.lang.reflect.Type type4 = sentencesWithLink0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = sentencesWithLink0.getPigLogger();
        sentencesWithLink0.progress();
        boolean boolean7 = sentencesWithLink0.isAsynchronous();
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNull(pigLogger5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink12 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.NoLoopInPath noLoopInPath13 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText14 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger15 = null;
        safeTsvText14.setPigLogger(pigLogger15);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText17 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable18 = mergeAsOpenNLPAnnotatedText17.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract19 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = checkAbstract19.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = mergeAsOpenNLPAnnotatedText17.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = safeTsvText14.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = noLoopInPath13.outputSchema(schema22);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag25 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText26 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger27 = null;
        safeTsvText26.setPigLogger(pigLogger27);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText29 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable30 = mergeAsOpenNLPAnnotatedText29.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract31 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = checkAbstract31.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = mergeAsOpenNLPAnnotatedText29.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = safeTsvText26.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = aggregateTextBag25.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = noLoopInPath13.outputSchema(schema34);
        pignlproc.evaluation.CheckAbstract checkAbstract38 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum40 = null;
        checkAbstract38.warn("http://.wikipedia.org/wiki/hi%21", enum40);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger42 = null;
        checkAbstract38.setPigLogger(pigLogger42);
        checkAbstract38.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText45 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger46 = null;
        safeTsvText45.setPigLogger(pigLogger46);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText48 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable49 = mergeAsOpenNLPAnnotatedText48.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract50 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = checkAbstract50.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = mergeAsOpenNLPAnnotatedText48.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = safeTsvText45.outputSchema(schema53);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = checkAbstract38.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = noLoopInPath13.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = sentencesWithLink12.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = noLoopInPath0.outputSchema(schema56);
        java.lang.Enum enum60 = null;
        noLoopInPath0.warn("", enum60);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger62 = noLoopInPath0.getPigLogger();
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigProgressable18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(pigProgressable30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(pigProgressable49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(pigLogger62);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("opennlp / en - sent . bin");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("title\n", job3);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple5 = parsingWikipediaLoader1.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics4);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) '#', (int) (byte) 1, "", "title");
        java.lang.String str5 = annotation4.label;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("\"hi!\"");
        org.apache.pig.data.Tuple tuple2 = null;
        java.lang.String str3 = concatTextBag1.exec(tuple2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPaths(job0, "http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((int) '#', false);
        java.lang.reflect.Type type3 = aggregateTextBag2.getReturnType();
        pignlproc.evaluation.CheckAbstract checkAbstract4 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum6 = null;
        checkAbstract4.warn("http://.wikipedia.org/wiki/hi%21", enum6);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = null;
        checkAbstract4.setReporter(pigProgressable8);
        java.lang.reflect.Type type10 = checkAbstract4.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath11 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText12 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger13 = null;
        safeTsvText12.setPigLogger(pigLogger13);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText15 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable16 = mergeAsOpenNLPAnnotatedText15.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract17 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = checkAbstract17.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = mergeAsOpenNLPAnnotatedText15.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = safeTsvText12.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = noLoopInPath11.outputSchema(schema20);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag23 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText24 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        safeTsvText24.setPigLogger(pigLogger25);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText27 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable28 = mergeAsOpenNLPAnnotatedText27.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract29 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = checkAbstract29.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = mergeAsOpenNLPAnnotatedText27.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = safeTsvText24.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = aggregateTextBag23.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = noLoopInPath11.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = checkAbstract4.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = aggregateTextBag2.outputSchema(schema36);
        org.apache.pig.data.Tuple tuple38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str39 = aggregateTextBag2.exec(tuple38);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in AggregateTextBag");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNull(pigProgressable16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(pigProgressable28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser14.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList16 = annotatingMarkupParser14.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel18 = annotatingMarkupParser14.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel20 = annotatingMarkupParser14.makeWikiModel("hi!\n");
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser14.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser22 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser22.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList24 = annotatingMarkupParser22.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList25 = annotatingMarkupParser22.getParagraphAnnotations();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser22.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList27 = annotatingMarkupParser22.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser28 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList29 = annotatingMarkupParser28.getHeaderAnnotations();
        java.util.List<java.lang.String> strList30 = annotatingMarkupParser28.getParagraphs();
        java.lang.Appendable appendable31 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable32 = annotatingMarkupParser28.new CountingAppendable(appendable31);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable33 = annotatingMarkupParser22.new CountingAppendable((java.lang.Appendable) countingAppendable32);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser34 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList35 = annotatingMarkupParser34.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList36 = annotatingMarkupParser34.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel38 = annotatingMarkupParser34.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel40 = annotatingMarkupParser34.makeWikiModel("hi!\n");
        annotatingMarkupParser0.nodesToText(annotationList21, (java.lang.Appendable) countingAppendable33, (info.bliki.wiki.model.IWikiModel) wikiModel40);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable43 = countingAppendable33.append((java.lang.CharSequence) "\"\"\"http://.wikipedia.org/wiki/hi%21\"\"  \"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(annotationList16);
        org.junit.Assert.assertNotNull(wikiModel18);
        org.junit.Assert.assertNotNull(wikiModel20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(annotationList24);
        org.junit.Assert.assertNotNull(annotationList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList27);
        org.junit.Assert.assertNotNull(annotationList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(annotationList36);
        org.junit.Assert.assertNotNull(wikiModel38);
        org.junit.Assert.assertNotNull(wikiModel40);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.finish();
        org.apache.commons.logging.Log log3 = sentencesWithLink0.getLogger();
        java.lang.reflect.Type type4 = sentencesWithLink0.getReturnType();
        org.apache.pig.data.Tuple tuple5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.DataBag dataBag6 = sentencesWithLink0.exec(tuple5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNotNull(log3);
        org.junit.Assert.assertNotNull(type4);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.setInputPaths(job0, "http://\"http://http://\"\"title\"\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/http_%3A_%2F%2F_hi_%21_._wikipedia_._org_%2F_wiki_%2F_opennlp___%25_2_F___en___-___sent___.___bin");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("href");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriStringLiteralNTriplesStorer1.getOutputFormat();
        org.apache.hadoop.mapreduce.RecordWriter recordWriter3 = null;
        uriStringLiteralNTriplesStorer1.prepareToWrite(recordWriter3);
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer6 = new pignlproc.storage.UriStringLiteralNTriplesStorer("title");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader8 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceStatistics resourceStatistics11 = parsingWikipediaLoader8.getStatistics("hi!", job10);
        org.apache.hadoop.mapreduce.Job job13 = null;
        org.apache.pig.ResourceSchema resourceSchema14 = parsingWikipediaLoader8.getSchema("hi!", job13);
        uriStringLiteralNTriplesStorer6.checkSchema(resourceSchema14);
        uriStringLiteralNTriplesStorer1.checkSchema(resourceSchema14);
        org.apache.hadoop.fs.Path path18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = uriStringLiteralNTriplesStorer1.relToAbsPathForStoreLocation("", path18);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location:  curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat2);
        org.junit.Assert.assertNull(resourceStatistics11);
        org.junit.Assert.assertNotNull(resourceSchema14);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.lang.reflect.Type type3 = sentencesWithLink0.getReturnType();
        pignlproc.evaluation.ConcatTextBag concatTextBag4 = new pignlproc.evaluation.ConcatTextBag();
        org.apache.pig.data.Tuple tuple5 = null;
        java.lang.String str6 = concatTextBag4.exec(tuple5);
        concatTextBag4.progress();
        boolean boolean8 = concatTextBag4.isAsynchronous();
        boolean boolean9 = concatTextBag4.isAsynchronous();
        pignlproc.evaluation.ConcatTextBag concatTextBag11 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        org.apache.pig.data.Tuple tuple12 = null;
        java.lang.String str13 = concatTextBag11.exec(tuple12);
        pignlproc.evaluation.NoLoopInPath noLoopInPath14 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText15 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = null;
        safeTsvText15.setPigLogger(pigLogger16);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText18 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = mergeAsOpenNLPAnnotatedText18.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = checkAbstract20.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = mergeAsOpenNLPAnnotatedText18.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = safeTsvText15.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = noLoopInPath14.outputSchema(schema23);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag26 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText27 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger28 = null;
        safeTsvText27.setPigLogger(pigLogger28);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText30 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable31 = mergeAsOpenNLPAnnotatedText30.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract32 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = checkAbstract32.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = mergeAsOpenNLPAnnotatedText30.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = safeTsvText27.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = aggregateTextBag26.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = noLoopInPath14.outputSchema(schema35);
        pignlproc.evaluation.CheckAbstract checkAbstract39 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum41 = null;
        checkAbstract39.warn("http://.wikipedia.org/wiki/hi%21", enum41);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger43 = null;
        checkAbstract39.setPigLogger(pigLogger43);
        checkAbstract39.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText46 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger47 = null;
        safeTsvText46.setPigLogger(pigLogger47);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText49 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable50 = mergeAsOpenNLPAnnotatedText49.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract51 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = checkAbstract51.outputSchema(schema52);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = mergeAsOpenNLPAnnotatedText49.outputSchema(schema52);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = safeTsvText46.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = checkAbstract39.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = noLoopInPath14.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = concatTextBag11.outputSchema(schema57);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = concatTextBag4.outputSchema(schema57);
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = sentencesWithLink0.outputSchema(schema59);
        org.apache.pig.data.Tuple tuple61 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.DataBag dataBag62 = sentencesWithLink0.exec(tuple61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(pigProgressable19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(pigProgressable31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(pigProgressable50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        java.lang.String str1 = pignlproc.evaluation.SafeTsvText.escape("\" http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 \"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"\"\" http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 \"\"\"" + "'", str1, "\"\"\" http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 \"\"\"");
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("http://.wikipedia.org/wiki/hi%21");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriUriNTriplesStorer1.getOutputFormat();
        uriUriNTriplesStorer1.setStoreFuncUDFContextSignature("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21");
        uriUriNTriplesStorer1.setStoreFuncUDFContextSignature("\" title \"");
        org.apache.hadoop.mapreduce.Job job8 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer1.cleanupOnFailure("http://http://hi!\n.wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin", job8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat2);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"");
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.lang.String str4 = annotatingMarkupParser0.parse("\"\"");
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser0.getParagraphAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel7 = annotatingMarkupParser0.makeWikiModel("\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\"");
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"\n" + "'", str4, "\"\"\n");
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(wikiModel7);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.finish();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList8 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = null;
        sentencesWithLink0.setReporter(pigProgressable9);
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(funcSpecList6);
        org.junit.Assert.assertNull(funcSpecList8);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        org.apache.hadoop.mapreduce.Job job1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.StoreFunc.cleanupOnFailureImpl("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21", job1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("\"title\"");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser2 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser2.getHeaders();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser2.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser2.getHeaderAnnotations();
        java.lang.String str6 = annotatingMarkupParser2.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser7 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser7.getHeaders();
        java.util.List<java.lang.String> strList9 = annotatingMarkupParser7.getHeaders();
        java.lang.Appendable appendable10 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable11 = annotatingMarkupParser7.new CountingAppendable(appendable10);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable12 = annotatingMarkupParser2.new CountingAppendable((java.lang.Appendable) countingAppendable11);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser13 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList14 = annotatingMarkupParser13.getHeaders();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser13.getHeaders();
        java.lang.Appendable appendable16 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable17 = annotatingMarkupParser13.new CountingAppendable(appendable16);
        countingAppendable17.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable20 = annotatingMarkupParser2.new CountingAppendable((java.lang.Appendable) countingAppendable17);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable21 = annotatingMarkupParser1.new CountingAppendable((java.lang.Appendable) countingAppendable20);
        countingAppendable21.currentPosition = ' ';
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable27 = countingAppendable21.append((java.lang.CharSequence) "http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21", (int) 'a', (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(strList15);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("\" hi ! \"");
        org.apache.hadoop.fs.Path path3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = uriStringLiteralNTriplesStorer1.relToAbsPathForStoreLocation("http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21", path3);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPaths(job0, "http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Relative path in absolute URI: http :%20/%20http%20:%20/%20.%20wikipedia%20.%20org%20/%20wiki%20/%20hi%20%25%2021%20.%20wikipedia%20.%20org%20/%20wiki%20/%20hi%20%25%2021");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        java.lang.String str2 = pignlproc.markup.AnnotatingMarkupParser.titleToUri("http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/hrefwikiobject\"\"\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"\"\"wikiobject\"hi!\"\nwikiobject\nwikiobjectopennlp/en-sent.binwikiobjecthttp://hi!\n.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._binwikiobjecthttp://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21wikiobjecthttp://\"http://.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22wikiobject\"opennlp / en - sent . bin\"wikiobject\"\"", "http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href.wikipedia.org/wiki/http%3A%2F%2F%22opennlp_%2F_en_-_sent_._bin%22.wikipedia.org%2Fwiki%2Fhrefwikiobject%22%22%22http%3A%2F%2Fhi%21.wikipedia.org%2Fwiki%2F%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22wikiobject%22hi%21%22%0Awikiobject%0Awikiobjectopennlp%2Fen-sent.binwikiobjecthttp%3A%2F%2Fhi%21%0A.wikipedia.org%2Fwiki%2Fopennlp_%252F_en_-_sent_._binwikiobjecthttp%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521wikiobjecthttp%3A%2F%2F%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22.wikipedia.org%2Fwiki%2F%2522%2522%2522http%253A%252F%252Fhi_%2521_.wikipedia.org%252Fwiki%252Fhttp%25253A%25252F%25252Fhttp%25253A%25252F%25252F.wikipedia.org%25252Fwiki%25252Fhi%25252521%25250A.wikipedia.org%25252Fwiki%25252F%25252522title%25252522%2522%2522%2522wikiobject%22opennlp_%2F_en_-_sent_._bin%22wikiobject%22%22" + "'", str2, "http://http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href.wikipedia.org/wiki/http%3A%2F%2F%22opennlp_%2F_en_-_sent_._bin%22.wikipedia.org%2Fwiki%2Fhrefwikiobject%22%22%22http%3A%2F%2Fhi%21.wikipedia.org%2Fwiki%2F%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22wikiobject%22hi%21%22%0Awikiobject%0Awikiobjectopennlp%2Fen-sent.binwikiobjecthttp%3A%2F%2Fhi%21%0A.wikipedia.org%2Fwiki%2Fopennlp_%252F_en_-_sent_._binwikiobjecthttp%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521wikiobjecthttp%3A%2F%2F%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22.wikipedia.org%2Fwiki%2F%2522%2522%2522http%253A%252F%252Fhi_%2521_.wikipedia.org%252Fwiki%252Fhttp%25253A%25252F%25252Fhttp%25253A%25252F%25252F.wikipedia.org%25252Fwiki%25252Fhi%25252521%25250A.wikipedia.org%25252Fwiki%25252F%25252522title%25252522%2522%2522%2522wikiobject%22opennlp_%2F_en_-_sent_._bin%22wikiobject%22%22");
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.setMinInputSplitSize(job0, (long) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("\"\"", "\"hi!\"\n\n", "\"title\"");
        org.apache.pig.Expression expression4 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression4);
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = uriUriNTriplesLoader3.getSchema("\"hi!\"\n", job7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceStatistics resourceStatistics11 = uriUriNTriplesLoader3.getStatistics("opennlp/en-sent.bin", job10);
        org.apache.pig.Expression expression12 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression12);
        org.apache.pig.Expression expression14 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression14);
        org.junit.Assert.assertNotNull(resourceSchema8);
        org.junit.Assert.assertNull(resourceStatistics11);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink2 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger3 = null;
        sentencesWithLink2.setPigLogger(pigLogger3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = sentencesWithLink2.getReporter();
        java.lang.reflect.Type type6 = sentencesWithLink2.getReturnType();
        pignlproc.evaluation.SafeTsvText safeTsvText7 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = null;
        safeTsvText7.setPigLogger(pigLogger8);
        safeTsvText7.finish();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink11 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.NoLoopInPath noLoopInPath12 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText13 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        safeTsvText13.setPigLogger(pigLogger14);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText16.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = safeTsvText13.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = noLoopInPath12.outputSchema(schema21);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag24 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText25 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger26 = null;
        safeTsvText25.setPigLogger(pigLogger26);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText28 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable29 = mergeAsOpenNLPAnnotatedText28.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract30 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = checkAbstract30.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = mergeAsOpenNLPAnnotatedText28.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = safeTsvText25.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = aggregateTextBag24.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = noLoopInPath12.outputSchema(schema33);
        pignlproc.evaluation.CheckAbstract checkAbstract37 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum39 = null;
        checkAbstract37.warn("http://.wikipedia.org/wiki/hi%21", enum39);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger41 = null;
        checkAbstract37.setPigLogger(pigLogger41);
        checkAbstract37.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText44 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger45 = null;
        safeTsvText44.setPigLogger(pigLogger45);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText47 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable48 = mergeAsOpenNLPAnnotatedText47.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract49 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = checkAbstract49.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = mergeAsOpenNLPAnnotatedText47.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = safeTsvText44.outputSchema(schema52);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = checkAbstract37.outputSchema(schema53);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = noLoopInPath12.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = sentencesWithLink11.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = safeTsvText7.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = sentencesWithLink2.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = mergeAsOpenNLPAnnotatedText1.outputSchema(schema55);
        java.lang.Class<?> wildcardClass60 = mergeAsOpenNLPAnnotatedText1.getClass();
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(pigProgressable29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(pigProgressable48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        java.lang.String[] strArray1 = new java.lang.String[] { "opennlp/en-sent.bin" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String str5 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "");
        java.lang.String str7 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "http://.wikipedia.org/wiki/hi%21");
        java.lang.String str9 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "hi!\n");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "opennlp/en-sent.bin" + "'", str5, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "opennlp/en-sent.bin" + "'", str7, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "opennlp/en-sent.bin" + "'", str9, "opennlp/en-sent.bin");
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("\" http : // . wikipedia . org / wiki / hi % 21 \"");
        org.apache.pig.data.Tuple tuple2 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer1.putNext(tuple2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag0 = new pignlproc.evaluation.AggregateTextBag();
        org.apache.commons.logging.Log log1 = aggregateTextBag0.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable2 = aggregateTextBag0.getReporter();
        aggregateTextBag0.finish();
        org.apache.pig.data.Tuple tuple4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = aggregateTextBag0.exec(tuple4);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in AggregateTextBag");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNull(pigProgressable2);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList3);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = mergeAsOpenNLPAnnotatedText0.getArgToFuncMapping();
        org.apache.commons.logging.Log log7 = mergeAsOpenNLPAnnotatedText0.getLogger();
        pignlproc.evaluation.CheckAbstract checkAbstract8 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum10 = null;
        checkAbstract8.warn("http://.wikipedia.org/wiki/hi%21", enum10);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable12 = null;
        checkAbstract8.setReporter(pigProgressable12);
        java.lang.reflect.Type type14 = checkAbstract8.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath15 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText16 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger17 = null;
        safeTsvText16.setPigLogger(pigLogger17);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText19 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable20 = mergeAsOpenNLPAnnotatedText19.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract21 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = checkAbstract21.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = mergeAsOpenNLPAnnotatedText19.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = safeTsvText16.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = noLoopInPath15.outputSchema(schema24);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag27 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText28 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger29 = null;
        safeTsvText28.setPigLogger(pigLogger29);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText31 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable32 = mergeAsOpenNLPAnnotatedText31.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract33 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = checkAbstract33.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = mergeAsOpenNLPAnnotatedText31.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = safeTsvText28.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = aggregateTextBag27.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = noLoopInPath15.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = checkAbstract8.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = mergeAsOpenNLPAnnotatedText0.outputSchema(schema40);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger42 = null;
        mergeAsOpenNLPAnnotatedText0.setPigLogger(pigLogger42);
        org.apache.pig.data.Tuple tuple44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str45 = mergeAsOpenNLPAnnotatedText0.exec(tuple44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi !" + "'", str5, "hi !");
        org.junit.Assert.assertNull(funcSpecList6);
        org.junit.Assert.assertNotNull(log7);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNull(pigProgressable20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(pigProgressable32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getParagraphAnnotations();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser0.getParagraphs();
        java.util.List<java.lang.String> strList5 = annotatingMarkupParser0.getParagraphs();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser0.getParagraphs();
        boolean boolean7 = annotatingMarkupParser0.noLinks();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        java.util.List<java.lang.String> strList5 = annotatingMarkupParser0.getParagraphs();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser6 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser6.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList8 = annotatingMarkupParser6.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel10 = annotatingMarkupParser6.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel12 = annotatingMarkupParser6.makeWikiModel("hi!\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser13 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList14 = annotatingMarkupParser13.getHeaders();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser13.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList16 = annotatingMarkupParser13.getHeaderAnnotations();
        java.lang.String str17 = annotatingMarkupParser13.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser18 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList19 = annotatingMarkupParser18.getHeaders();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser18.getHeaders();
        java.lang.Appendable appendable21 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable22 = annotatingMarkupParser18.new CountingAppendable(appendable21);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable23 = annotatingMarkupParser13.new CountingAppendable((java.lang.Appendable) countingAppendable22);
        java.util.List<pignlproc.markup.Annotation> annotationList24 = annotatingMarkupParser13.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser25 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList26 = annotatingMarkupParser25.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser27 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList28 = annotatingMarkupParser27.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList29 = annotatingMarkupParser27.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList30 = annotatingMarkupParser27.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser31 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList32 = annotatingMarkupParser31.getHeaders();
        java.util.List<java.lang.String> strList33 = annotatingMarkupParser31.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList34 = annotatingMarkupParser31.getHeaderAnnotations();
        java.lang.String str35 = annotatingMarkupParser31.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser36 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList37 = annotatingMarkupParser36.getHeaders();
        java.util.List<java.lang.String> strList38 = annotatingMarkupParser36.getHeaders();
        java.lang.Appendable appendable39 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable40 = annotatingMarkupParser36.new CountingAppendable(appendable39);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable41 = annotatingMarkupParser31.new CountingAppendable((java.lang.Appendable) countingAppendable40);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser42 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList43 = annotatingMarkupParser42.getHeaderAnnotations();
        java.lang.String str44 = annotatingMarkupParser42.getRedirect();
        pignlproc.markup.Annotation annotation49 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation54 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int55 = annotation54.end;
        int int56 = annotation54.begin;
        pignlproc.markup.Annotation[] annotationArray57 = new pignlproc.markup.Annotation[] { annotation49, annotation54 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList58 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList58, annotationArray57);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser60 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList61 = annotatingMarkupParser60.getHeaders();
        java.util.List<java.lang.String> strList62 = annotatingMarkupParser60.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList63 = annotatingMarkupParser60.getHeaderAnnotations();
        java.lang.String str64 = annotatingMarkupParser60.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser65 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList66 = annotatingMarkupParser65.getHeaders();
        java.util.List<java.lang.String> strList67 = annotatingMarkupParser65.getHeaders();
        java.lang.Appendable appendable68 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable69 = annotatingMarkupParser65.new CountingAppendable(appendable68);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable70 = annotatingMarkupParser60.new CountingAppendable((java.lang.Appendable) countingAppendable69);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser71 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList72 = annotatingMarkupParser71.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel74 = annotatingMarkupParser71.makeWikiModel("title");
        annotatingMarkupParser42.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList58, (java.lang.Appendable) countingAppendable69, (info.bliki.wiki.model.IWikiModel) wikiModel74);
        annotatingMarkupParser25.nodesToText(annotationList30, (java.lang.Appendable) countingAppendable41, (info.bliki.wiki.model.IWikiModel) wikiModel74);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser77 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList78 = annotatingMarkupParser77.getHeaders();
        java.util.List<java.lang.String> strList79 = annotatingMarkupParser77.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList80 = annotatingMarkupParser77.getHeaderAnnotations();
        java.lang.String str81 = annotatingMarkupParser77.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser82 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList83 = annotatingMarkupParser82.getHeaders();
        java.util.List<java.lang.String> strList84 = annotatingMarkupParser82.getHeaders();
        java.lang.Appendable appendable85 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable86 = annotatingMarkupParser82.new CountingAppendable(appendable85);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable87 = annotatingMarkupParser77.new CountingAppendable((java.lang.Appendable) countingAppendable86);
        java.util.List<java.lang.String> strList88 = annotatingMarkupParser77.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel90 = annotatingMarkupParser77.makeWikiModel("opennlp / en - sent . bin");
        annotatingMarkupParser6.nodesToText(annotationList24, (java.lang.Appendable) countingAppendable41, (info.bliki.wiki.model.IWikiModel) wikiModel90);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable92 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable41);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable94 = countingAppendable41.append((java.lang.CharSequence) "hi!\n\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(annotationList8);
        org.junit.Assert.assertNotNull(wikiModel10);
        org.junit.Assert.assertNotNull(wikiModel12);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(annotationList16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(annotationList24);
        org.junit.Assert.assertNotNull(annotationList26);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(annotationList29);
        org.junit.Assert.assertNotNull(annotationList30);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(annotationList34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(annotationList43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertNotNull(annotationArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNotNull(annotationList63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNotNull(annotationList72);
        org.junit.Assert.assertNotNull(wikiModel74);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNotNull(annotationList80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNotNull(strList84);
        org.junit.Assert.assertNotNull(strList88);
        org.junit.Assert.assertNotNull(wikiModel90);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("hi!\n");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag4 = new pignlproc.evaluation.AggregateTextBag((int) '#', false);
        pignlproc.evaluation.SafeTsvText safeTsvText5 = new pignlproc.evaluation.SafeTsvText();
        java.lang.reflect.Type type6 = safeTsvText5.getReturnType();
        pignlproc.evaluation.CheckAbstract checkAbstract7 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = checkAbstract7.outputSchema(schema8);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText5.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = aggregateTextBag4.outputSchema(schema9);
        pignlproc.evaluation.NoLoopInPath noLoopInPath12 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText13 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        safeTsvText13.setPigLogger(pigLogger14);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText16.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = safeTsvText13.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = noLoopInPath12.outputSchema(schema21);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag24 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText25 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger26 = null;
        safeTsvText25.setPigLogger(pigLogger26);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText28 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable29 = mergeAsOpenNLPAnnotatedText28.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract30 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = checkAbstract30.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = mergeAsOpenNLPAnnotatedText28.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = safeTsvText25.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = aggregateTextBag24.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = noLoopInPath12.outputSchema(schema33);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger37 = null;
        noLoopInPath12.setPigLogger(pigLogger37);
        org.apache.pig.data.Tuple tuple39 = null;
        java.lang.Boolean boolean40 = noLoopInPath12.exec(tuple39);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable41 = null;
        noLoopInPath12.setReporter(pigProgressable41);
        java.lang.reflect.Type type43 = noLoopInPath12.getReturnType();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink44 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger45 = null;
        sentencesWithLink44.setPigLogger(pigLogger45);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList47 = sentencesWithLink44.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger48 = sentencesWithLink44.getPigLogger();
        boolean boolean49 = sentencesWithLink44.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText50 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable51 = mergeAsOpenNLPAnnotatedText50.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract52 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = checkAbstract52.outputSchema(schema53);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = mergeAsOpenNLPAnnotatedText50.outputSchema(schema53);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = sentencesWithLink44.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = noLoopInPath12.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = aggregateTextBag4.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = mergeAsOpenNLPAnnotatedText1.outputSchema(schema56);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable60 = mergeAsOpenNLPAnnotatedText1.getReporter();
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(pigProgressable29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertEquals("'" + boolean40 + "' != '" + true + "'", boolean40, true);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNull(funcSpecList47);
        org.junit.Assert.assertNull(pigLogger48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(pigProgressable51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(pigProgressable60);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.setInputPaths(job0, "http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        sentencesWithLink0.setPigLogger(pigLogger2);
        java.lang.reflect.Type type4 = sentencesWithLink0.getReturnType();
        java.lang.Enum enum6 = null;
        sentencesWithLink0.warn("\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/hi%21\"", enum6);
        pignlproc.evaluation.CheckAbstract checkAbstract8 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum10 = null;
        checkAbstract8.warn("http://.wikipedia.org/wiki/hi%21", enum10);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable12 = null;
        checkAbstract8.setReporter(pigProgressable12);
        java.lang.reflect.Type type14 = checkAbstract8.getReturnType();
        boolean boolean15 = checkAbstract8.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList16 = checkAbstract8.getArgToFuncMapping();
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = checkAbstract8.outputSchema(schema17);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = sentencesWithLink0.outputSchema(schema18);
        sentencesWithLink0.progress();
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(funcSpecList16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        java.lang.String str5 = annotation4.label;
        java.lang.String str6 = annotation4.label;
        java.lang.String str7 = annotation4.value;
        int int8 = annotation4.begin;
        java.lang.String str9 = annotation4.value;
        java.lang.String str10 = annotation4.value;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "title" + "'", str5, "title");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "title" + "'", str6, "title");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.setMinInputSplitSize(job0, 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        java.lang.String[] strArray5 = uriStringLiteralNTriplesLoader2.getPartitionKeys("http://.wikipedia.org/wiki/hi%21\n", job4);
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = uriStringLiteralNTriplesLoader2.getSchema("http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href", job7);
        org.junit.Assert.assertNull(strArray5);
        org.junit.Assert.assertNotNull(resourceSchema8);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        java.lang.String str2 = pignlproc.markup.AnnotatingMarkupParser.titleToUri("\"\"\" http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 \"\"\"", "http://hi!\n.wikipedia.org/wiki/%22_title_%22");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://http://hi!\n.wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/%22%22%22_http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_%22%22%22" + "'", str2, "http://http://hi!\n.wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/%22%22%22_http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_%22%22%22");
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("", "http://\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\".wikipedia.org/wiki/%22%22%22opennlp_%2F_en_-_sent_._bin%22%22%22", "\"\"\"http://.wikipedia.org/wiki/hi%21\"\"  \"");
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag0 = new pignlproc.evaluation.AggregateTextBag();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        aggregateTextBag0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger3 = aggregateTextBag0.getPigLogger();
        aggregateTextBag0.progress();
        pignlproc.evaluation.CheckAbstract checkAbstract5 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum7 = null;
        checkAbstract5.warn("http://.wikipedia.org/wiki/hi%21", enum7);
        java.lang.Enum enum10 = null;
        checkAbstract5.warn("hi !", enum10);
        pignlproc.evaluation.NoLoopInPath noLoopInPath12 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText13 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        safeTsvText13.setPigLogger(pigLogger14);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText16.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = safeTsvText13.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = noLoopInPath12.outputSchema(schema21);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag24 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText25 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger26 = null;
        safeTsvText25.setPigLogger(pigLogger26);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText28 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable29 = mergeAsOpenNLPAnnotatedText28.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract30 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = checkAbstract30.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = mergeAsOpenNLPAnnotatedText28.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = safeTsvText25.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = aggregateTextBag24.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = noLoopInPath12.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = checkAbstract5.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = aggregateTextBag0.outputSchema(schema37);
        org.junit.Assert.assertNull(pigLogger3);
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(pigProgressable29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        mergeAsOpenNLPAnnotatedText0.setPigLogger(pigLogger6);
        boolean boolean8 = mergeAsOpenNLPAnnotatedText0.isAsynchronous();
        pignlproc.evaluation.CheckAbstract checkAbstract9 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum11 = null;
        checkAbstract9.warn("http://.wikipedia.org/wiki/hi%21", enum11);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable13 = null;
        checkAbstract9.setReporter(pigProgressable13);
        java.lang.reflect.Type type15 = checkAbstract9.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath16 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText17 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger18 = null;
        safeTsvText17.setPigLogger(pigLogger18);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText20 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable21 = mergeAsOpenNLPAnnotatedText20.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract22 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = checkAbstract22.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = mergeAsOpenNLPAnnotatedText20.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = safeTsvText17.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = noLoopInPath16.outputSchema(schema25);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag28 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText29 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = null;
        safeTsvText29.setPigLogger(pigLogger30);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText32 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable33 = mergeAsOpenNLPAnnotatedText32.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract34 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = checkAbstract34.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = mergeAsOpenNLPAnnotatedText32.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = safeTsvText29.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = aggregateTextBag28.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = noLoopInPath16.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = checkAbstract9.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = mergeAsOpenNLPAnnotatedText0.outputSchema(schema37);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable43 = null;
        mergeAsOpenNLPAnnotatedText0.setReporter(pigProgressable43);
        java.lang.Enum enum46 = null;
        mergeAsOpenNLPAnnotatedText0.warn("http://\"title\"\n.wikipedia.org/wiki/", enum46);
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi !" + "'", str5, "hi !");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNull(pigProgressable21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(pigProgressable33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable1 = mergeAsOpenNLPAnnotatedText0.getReporter();
        java.lang.Enum enum3 = null;
        mergeAsOpenNLPAnnotatedText0.warn("title", enum3);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList5 = mergeAsOpenNLPAnnotatedText0.getArgToFuncMapping();
        org.apache.commons.logging.Log log6 = mergeAsOpenNLPAnnotatedText0.getLogger();
        mergeAsOpenNLPAnnotatedText0.finish();
        org.apache.pig.data.Tuple tuple8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = mergeAsOpenNLPAnnotatedText0.exec(tuple8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigProgressable1);
        org.junit.Assert.assertNull(funcSpecList5);
        org.junit.Assert.assertNotNull(log6);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader0 = new pignlproc.storage.UriUriNTriplesLoader();
        org.apache.hadoop.mapreduce.Job job2 = null;
        org.apache.pig.ResourceStatistics resourceStatistics3 = uriUriNTriplesLoader0.getStatistics("wikiobject", job2);
        org.apache.hadoop.mapreduce.Job job5 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesLoader0.setLocation("", job5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Can not create a Path from an empty string");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics3);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("opennlp/en-sent.bin", "\"title\"\n", "\"hi!\"\n");
        org.apache.hadoop.mapreduce.Job job5 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer3.cleanupOnFailure("\"\"\n", job5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getHeaderAnnotations();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getParagraphs();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser3 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser3.getHeaders();
        java.util.List<java.lang.String> strList5 = annotatingMarkupParser3.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList6 = annotatingMarkupParser3.getHeaderAnnotations();
        pignlproc.markup.Annotation annotation11 = new pignlproc.markup.Annotation(10, 10, "title", "hi !");
        pignlproc.markup.Annotation annotation16 = new pignlproc.markup.Annotation((int) (byte) 1, (-1), "wikiobject", "href");
        pignlproc.markup.Annotation annotation21 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation26 = new pignlproc.markup.Annotation(10, 10, "title", "hi !");
        pignlproc.markup.Annotation annotation31 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        java.lang.String str32 = annotation31.label;
        java.lang.String str33 = annotation31.label;
        pignlproc.markup.Annotation annotation38 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        java.lang.String str39 = annotation38.label;
        java.lang.String str40 = annotation38.label;
        java.lang.String str41 = annotation38.value;
        pignlproc.markup.Annotation[] annotationArray42 = new pignlproc.markup.Annotation[] { annotation11, annotation16, annotation21, annotation26, annotation31, annotation38 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList43 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList43, annotationArray42);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser45 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList46 = annotatingMarkupParser45.getHeaders();
        java.util.List<java.lang.String> strList47 = annotatingMarkupParser45.getHeaders();
        java.lang.Appendable appendable48 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable49 = annotatingMarkupParser45.new CountingAppendable(appendable48);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser50 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList51 = annotatingMarkupParser50.getHeaderAnnotations();
        java.lang.String str52 = annotatingMarkupParser50.getRedirect();
        pignlproc.markup.Annotation annotation57 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation62 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int63 = annotation62.end;
        int int64 = annotation62.begin;
        pignlproc.markup.Annotation[] annotationArray65 = new pignlproc.markup.Annotation[] { annotation57, annotation62 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList66 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList66, annotationArray65);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser68 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList69 = annotatingMarkupParser68.getHeaders();
        java.util.List<java.lang.String> strList70 = annotatingMarkupParser68.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList71 = annotatingMarkupParser68.getHeaderAnnotations();
        java.lang.String str72 = annotatingMarkupParser68.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser73 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList74 = annotatingMarkupParser73.getHeaders();
        java.util.List<java.lang.String> strList75 = annotatingMarkupParser73.getHeaders();
        java.lang.Appendable appendable76 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable77 = annotatingMarkupParser73.new CountingAppendable(appendable76);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable78 = annotatingMarkupParser68.new CountingAppendable((java.lang.Appendable) countingAppendable77);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser79 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList80 = annotatingMarkupParser79.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel82 = annotatingMarkupParser79.makeWikiModel("title");
        annotatingMarkupParser50.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList66, (java.lang.Appendable) countingAppendable77, (info.bliki.wiki.model.IWikiModel) wikiModel82);
        annotatingMarkupParser3.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList43, appendable48, (info.bliki.wiki.model.IWikiModel) wikiModel82);
        java.util.List<pignlproc.markup.Annotation> annotationList85 = annotatingMarkupParser3.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser86 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList87 = annotatingMarkupParser86.getHeaders();
        java.util.List<java.lang.String> strList88 = annotatingMarkupParser86.getHeaders();
        java.lang.Appendable appendable89 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable90 = annotatingMarkupParser86.new CountingAppendable(appendable89);
        int int91 = countingAppendable90.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable92 = annotatingMarkupParser3.new CountingAppendable((java.lang.Appendable) countingAppendable90);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable93 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable92);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable97 = countingAppendable92.append((java.lang.CharSequence) "hi !", 52, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(annotationList6);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "title" + "'", str32, "title");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "title" + "'", str33, "title");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "title" + "'", str39, "title");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "title" + "'", str40, "title");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(annotationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNotNull(annotationList51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertNotNull(annotationArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNotNull(annotationList71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNotNull(annotationList80);
        org.junit.Assert.assertNotNull(wikiModel82);
        org.junit.Assert.assertNotNull(annotationList85);
        org.junit.Assert.assertNotNull(strList87);
        org.junit.Assert.assertNotNull(strList88);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract3 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum5 = null;
        checkAbstract3.warn("http://.wikipedia.org/wiki/hi%21", enum5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        checkAbstract3.setPigLogger(pigLogger7);
        checkAbstract3.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText10 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        safeTsvText10.setPigLogger(pigLogger11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = mergeAsOpenNLPAnnotatedText13.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract15.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = safeTsvText10.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract3.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = concatTextBag2.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = sentencesWithLink0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = sentencesWithLink0.getPigLogger();
        java.lang.Enum enum25 = null;
        sentencesWithLink0.warn("title", enum25);
        sentencesWithLink0.finish();
        java.lang.reflect.Type type28 = sentencesWithLink0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable29 = null;
        sentencesWithLink0.setReporter(pigProgressable29);
        org.junit.Assert.assertNull(pigProgressable14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(pigLogger23);
        org.junit.Assert.assertNotNull(type28);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser2 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser2.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList4 = annotatingMarkupParser2.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser2.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser6 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser6.getHeaders();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser6.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList9 = annotatingMarkupParser6.getHeaderAnnotations();
        java.lang.String str10 = annotatingMarkupParser6.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser11 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser11.getHeaders();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser11.getHeaders();
        java.lang.Appendable appendable14 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable15 = annotatingMarkupParser11.new CountingAppendable(appendable14);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable16 = annotatingMarkupParser6.new CountingAppendable((java.lang.Appendable) countingAppendable15);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser17 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser17.getHeaderAnnotations();
        java.lang.String str19 = annotatingMarkupParser17.getRedirect();
        pignlproc.markup.Annotation annotation24 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation29 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int30 = annotation29.end;
        int int31 = annotation29.begin;
        pignlproc.markup.Annotation[] annotationArray32 = new pignlproc.markup.Annotation[] { annotation24, annotation29 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList33 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList33, annotationArray32);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser35 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList36 = annotatingMarkupParser35.getHeaders();
        java.util.List<java.lang.String> strList37 = annotatingMarkupParser35.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList38 = annotatingMarkupParser35.getHeaderAnnotations();
        java.lang.String str39 = annotatingMarkupParser35.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser40 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList41 = annotatingMarkupParser40.getHeaders();
        java.util.List<java.lang.String> strList42 = annotatingMarkupParser40.getHeaders();
        java.lang.Appendable appendable43 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable44 = annotatingMarkupParser40.new CountingAppendable(appendable43);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable45 = annotatingMarkupParser35.new CountingAppendable((java.lang.Appendable) countingAppendable44);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser46 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList47 = annotatingMarkupParser46.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel49 = annotatingMarkupParser46.makeWikiModel("title");
        annotatingMarkupParser17.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList33, (java.lang.Appendable) countingAppendable44, (info.bliki.wiki.model.IWikiModel) wikiModel49);
        annotatingMarkupParser0.nodesToText(annotationList5, (java.lang.Appendable) countingAppendable16, (info.bliki.wiki.model.IWikiModel) wikiModel49);
        int int52 = countingAppendable16.currentPosition;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable54 = countingAppendable16.append('a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(annotationList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(annotationList9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNotNull(annotationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(annotationList38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(annotationList47);
        org.junit.Assert.assertNotNull(wikiModel49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader3.getSchema("", job5);
        org.apache.hadoop.mapreduce.Job job8 = null;
        org.apache.pig.ResourceStatistics resourceStatistics9 = uriUriNTriplesLoader3.getStatistics("opennlp/en-sent.bin", job8);
        org.apache.hadoop.mapreduce.Job job11 = null;
        org.apache.pig.ResourceSchema resourceSchema12 = uriUriNTriplesLoader3.getSchema("wikiobject", job11);
        org.apache.hadoop.fs.Path path14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = uriUriNTriplesLoader3.relativeToAbsolutePath("http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href", path14);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNull(resourceStatistics9);
        org.junit.Assert.assertNotNull(resourceSchema12);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("\"title\"\n");
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        org.apache.hadoop.fs.Path path1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.apache.pig.LoadFunc.getAbsolutePath("http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21", path1);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21", true);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink2 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger3 = null;
        sentencesWithLink2.setPigLogger(pigLogger3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = sentencesWithLink2.getReporter();
        java.lang.reflect.Type type6 = sentencesWithLink2.getReturnType();
        pignlproc.evaluation.SafeTsvText safeTsvText7 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = null;
        safeTsvText7.setPigLogger(pigLogger8);
        safeTsvText7.finish();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink11 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.NoLoopInPath noLoopInPath12 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText13 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        safeTsvText13.setPigLogger(pigLogger14);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText16.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = safeTsvText13.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = noLoopInPath12.outputSchema(schema21);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag24 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText25 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger26 = null;
        safeTsvText25.setPigLogger(pigLogger26);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText28 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable29 = mergeAsOpenNLPAnnotatedText28.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract30 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = checkAbstract30.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = mergeAsOpenNLPAnnotatedText28.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = safeTsvText25.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = aggregateTextBag24.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = noLoopInPath12.outputSchema(schema33);
        pignlproc.evaluation.CheckAbstract checkAbstract37 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum39 = null;
        checkAbstract37.warn("http://.wikipedia.org/wiki/hi%21", enum39);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger41 = null;
        checkAbstract37.setPigLogger(pigLogger41);
        checkAbstract37.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText44 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger45 = null;
        safeTsvText44.setPigLogger(pigLogger45);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText47 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable48 = mergeAsOpenNLPAnnotatedText47.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract49 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = checkAbstract49.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = mergeAsOpenNLPAnnotatedText47.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = safeTsvText44.outputSchema(schema52);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = checkAbstract37.outputSchema(schema53);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = noLoopInPath12.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = sentencesWithLink11.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = safeTsvText7.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = sentencesWithLink2.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = mergeAsOpenNLPAnnotatedText1.outputSchema(schema55);
        org.apache.pig.data.Tuple tuple60 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str61 = mergeAsOpenNLPAnnotatedText1.exec(tuple60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(pigProgressable29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(pigProgressable48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getParagraphAnnotations();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser0.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser0.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser6 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser6.getHeaderAnnotations();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser6.getParagraphs();
        java.lang.Appendable appendable9 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser6.new CountingAppendable(appendable9);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable11 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable13 = countingAppendable11.append('a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNotNull(strList8);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("opennlp / en - sent . bin", false);
        java.lang.reflect.Type type3 = concatTextBag2.getReturnType();
        concatTextBag2.finish();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = null;
        concatTextBag2.setPigLogger(pigLogger5);
        org.apache.commons.logging.Log log7 = concatTextBag2.getLogger();
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = concatTextBag2.outputSchema(schema8);
        boolean boolean10 = concatTextBag2.isAsynchronous();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(log7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        safeTsvText0.setPigLogger(pigLogger1);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText3 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = mergeAsOpenNLPAnnotatedText3.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract5 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema6 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = checkAbstract5.outputSchema(schema6);
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = mergeAsOpenNLPAnnotatedText3.outputSchema(schema6);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = safeTsvText0.outputSchema(schema8);
        org.apache.pig.data.Tuple tuple10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = safeTsvText0.exec(tuple10);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in SafeTsvText");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = null;
        checkAbstract0.setPigLogger(pigLogger4);
        checkAbstract0.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText7 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = null;
        safeTsvText7.setPigLogger(pigLogger8);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText10 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable11 = mergeAsOpenNLPAnnotatedText10.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract12 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = checkAbstract12.outputSchema(schema13);
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = mergeAsOpenNLPAnnotatedText10.outputSchema(schema13);
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = safeTsvText7.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract0.outputSchema(schema16);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger18 = null;
        checkAbstract0.setPigLogger(pigLogger18);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable20 = null;
        checkAbstract0.setReporter(pigProgressable20);
        org.apache.pig.data.Tuple tuple22 = null;
        java.lang.Boolean boolean23 = checkAbstract0.exec(tuple22);
        java.lang.Enum enum25 = null;
        checkAbstract0.warn("http://hi!\n.wikipedia.org/wiki/%22_title_%22", enum25);
        org.junit.Assert.assertNull(pigProgressable11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + boolean23 + "' != '" + false + "'", boolean23, false);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getParagraphAnnotations();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser0.getParagraphs();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable(appendable8);
        countingAppendable10.currentPosition = 10;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable14 = countingAppendable10.append((java.lang.CharSequence) "http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.lang.String str4 = annotatingMarkupParser0.parse("\"title\"");
        java.util.List<java.lang.String> strList5 = annotatingMarkupParser0.getParagraphs();
        java.lang.String str7 = annotatingMarkupParser0.parse("title");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader9 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job11 = null;
        org.apache.pig.ResourceSchema resourceSchema12 = parsingWikipediaLoader9.getSchema("title", job11);
        org.apache.hadoop.mapreduce.Job job14 = null;
        java.lang.String[] strArray15 = parsingWikipediaLoader9.getPartitionKeys("wikiobject", job14);
        parsingWikipediaLoader9.setUDFContextSignature("http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22");
        org.apache.hadoop.mapreduce.InputFormat inputFormat18 = parsingWikipediaLoader9.getInputFormat();
        org.apache.hadoop.mapreduce.Job job20 = null;
        org.apache.pig.ResourceSchema resourceSchema21 = parsingWikipediaLoader9.getSchema("hi !", job20);
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader24 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job26 = null;
        org.apache.pig.ResourceSchema resourceSchema27 = uriStringLiteralNTriplesLoader24.getSchema("http://.wikipedia.org/wiki/hi%21", job26);
        org.apache.hadoop.mapreduce.InputFormat inputFormat28 = uriStringLiteralNTriplesLoader24.getInputFormat();
        org.apache.hadoop.mapreduce.Job job30 = null;
        org.apache.pig.ResourceSchema resourceSchema31 = uriStringLiteralNTriplesLoader24.getSchema("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21", job30);
        org.apache.hadoop.mapreduce.Job job33 = null;
        org.apache.pig.ResourceSchema resourceSchema34 = uriStringLiteralNTriplesLoader24.getSchema("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", job33);
        java.lang.Class<?> wildcardClass35 = resourceSchema34.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<opennlp.tools.util.Span> spanList36 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) "title", (java.lang.Object) "hi !", (java.lang.Object) resourceSchema34);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to java.lang.Integer");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"title\"\n" + "'", str4, "\"title\"\n");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "title\n" + "'", str7, "title\n");
        org.junit.Assert.assertNotNull(resourceSchema12);
        org.junit.Assert.assertNull(strArray15);
        org.junit.Assert.assertNotNull(inputFormat18);
        org.junit.Assert.assertNotNull(resourceSchema21);
        org.junit.Assert.assertNotNull(resourceSchema27);
        org.junit.Assert.assertNotNull(inputFormat28);
        org.junit.Assert.assertNotNull(resourceSchema31);
        org.junit.Assert.assertNotNull(resourceSchema34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        java.lang.String[] strArray1 = new java.lang.String[] { "opennlp/en-sent.bin" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String str5 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "");
        java.lang.String str7 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        java.lang.String str9 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "hi !");
        java.lang.String str11 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "http : // \"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\" . wikipedia . org / wiki / href");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "opennlp/en-sent.bin" + "'", str5, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "opennlp/en-sent.bin" + "'", str7, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "opennlp/en-sent.bin" + "'", str9, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "opennlp/en-sent.bin" + "'", str11, "opennlp/en-sent.bin");
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("href");
        uriStringLiteralNTriplesStorer1.setStoreFuncUDFContextSignature("\"title\"\n");
        org.apache.pig.data.Tuple tuple4 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.putNext(tuple4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.mapreduce.RecordReader recordReader5 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit6 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader5, pigSplit6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        java.lang.String[] strArray10 = parsingWikipediaLoader1.getPartitionKeys("http://.wikipedia.org/wiki/hi%21", job9);
        org.apache.pig.Expression expression11 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression11);
        org.apache.hadoop.mapreduce.Job job14 = null;
        org.apache.pig.ResourceSchema resourceSchema15 = parsingWikipediaLoader1.getSchema("http://.wikipedia.org/wiki/hi%21\n", job14);
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNull(strArray10);
        org.junit.Assert.assertNotNull(resourceSchema15);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("href");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("opennlp/en-sent.bin", job3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        java.lang.String[] strArray7 = parsingWikipediaLoader1.getPartitionKeys("\"title\"\n", job6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        org.apache.pig.ResourceStatistics resourceStatistics10 = parsingWikipediaLoader1.getStatistics("\"\"\" http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 \"\"\"", job9);
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNull(strArray7);
        org.junit.Assert.assertNull(resourceStatistics10);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum2 = null;
        safeTsvText0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = safeTsvText0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        safeTsvText0.setReporter(pigProgressable5);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink7 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList8 = sentencesWithLink7.getArgToFuncMapping();
        pignlproc.evaluation.CheckAbstract checkAbstract9 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum11 = null;
        checkAbstract9.warn("http://.wikipedia.org/wiki/hi%21", enum11);
        java.lang.Enum enum14 = null;
        checkAbstract9.warn("hi !", enum14);
        pignlproc.evaluation.NoLoopInPath noLoopInPath16 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText17 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger18 = null;
        safeTsvText17.setPigLogger(pigLogger18);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText20 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable21 = mergeAsOpenNLPAnnotatedText20.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract22 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = checkAbstract22.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = mergeAsOpenNLPAnnotatedText20.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = safeTsvText17.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = noLoopInPath16.outputSchema(schema25);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag28 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText29 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = null;
        safeTsvText29.setPigLogger(pigLogger30);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText32 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable33 = mergeAsOpenNLPAnnotatedText32.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract34 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = checkAbstract34.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = mergeAsOpenNLPAnnotatedText32.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = safeTsvText29.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = aggregateTextBag28.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = noLoopInPath16.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = checkAbstract9.outputSchema(schema40);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = sentencesWithLink7.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = safeTsvText0.outputSchema(schema41);
        pignlproc.evaluation.CheckAbstract checkAbstract44 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = checkAbstract44.outputSchema(schema45);
        org.apache.pig.data.Tuple tuple47 = null;
        java.lang.Boolean boolean48 = checkAbstract44.exec(tuple47);
        java.lang.Enum enum50 = null;
        checkAbstract44.warn("href", enum50);
        checkAbstract44.finish();
        pignlproc.evaluation.SafeTsvText safeTsvText53 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger54 = null;
        safeTsvText53.setPigLogger(pigLogger54);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText56 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable57 = mergeAsOpenNLPAnnotatedText56.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract58 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = checkAbstract58.outputSchema(schema59);
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = mergeAsOpenNLPAnnotatedText56.outputSchema(schema59);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = safeTsvText53.outputSchema(schema61);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText63 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray65 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList66 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList66, spanArray65);
        java.lang.String str68 = mergeAsOpenNLPAnnotatedText63.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList66);
        pignlproc.evaluation.ConcatTextBag concatTextBag70 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract71 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum73 = null;
        checkAbstract71.warn("http://.wikipedia.org/wiki/hi%21", enum73);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger75 = null;
        checkAbstract71.setPigLogger(pigLogger75);
        checkAbstract71.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText78 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger79 = null;
        safeTsvText78.setPigLogger(pigLogger79);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText81 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable82 = mergeAsOpenNLPAnnotatedText81.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract83 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema84 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema85 = checkAbstract83.outputSchema(schema84);
        org.apache.pig.impl.logicalLayer.schema.Schema schema86 = mergeAsOpenNLPAnnotatedText81.outputSchema(schema84);
        org.apache.pig.impl.logicalLayer.schema.Schema schema87 = safeTsvText78.outputSchema(schema86);
        org.apache.pig.impl.logicalLayer.schema.Schema schema88 = checkAbstract71.outputSchema(schema87);
        org.apache.pig.impl.logicalLayer.schema.Schema schema89 = concatTextBag70.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema90 = mergeAsOpenNLPAnnotatedText63.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema91 = safeTsvText53.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema92 = checkAbstract44.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema93 = safeTsvText0.outputSchema(schema92);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList94 = safeTsvText0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger95 = null;
        safeTsvText0.setPigLogger(pigLogger95);
        org.apache.pig.data.Tuple tuple97 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str98 = safeTsvText0.exec(tuple97);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in SafeTsvText");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNull(funcSpecList8);
        org.junit.Assert.assertNull(pigProgressable21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(pigProgressable33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertEquals("'" + boolean48 + "' != '" + false + "'", boolean48, false);
        org.junit.Assert.assertNull(pigProgressable57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(spanArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "href" + "'", str68, "href");
        org.junit.Assert.assertNull(pigProgressable82);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNull(funcSpecList94);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        java.net.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader wikipediaRecordReader3 = new pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader(uRL0, 100L, (long) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList3);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = mergeAsOpenNLPAnnotatedText0.getArgToFuncMapping();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText7 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray9 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList10 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList10, spanArray9);
        java.lang.String str12 = mergeAsOpenNLPAnnotatedText7.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList10);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger13 = null;
        mergeAsOpenNLPAnnotatedText7.setPigLogger(pigLogger13);
        boolean boolean15 = mergeAsOpenNLPAnnotatedText7.isAsynchronous();
        pignlproc.evaluation.CheckAbstract checkAbstract16 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum18 = null;
        checkAbstract16.warn("http://.wikipedia.org/wiki/hi%21", enum18);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable20 = null;
        checkAbstract16.setReporter(pigProgressable20);
        java.lang.reflect.Type type22 = checkAbstract16.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath23 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText24 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        safeTsvText24.setPigLogger(pigLogger25);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText27 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable28 = mergeAsOpenNLPAnnotatedText27.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract29 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = checkAbstract29.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = mergeAsOpenNLPAnnotatedText27.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = safeTsvText24.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = noLoopInPath23.outputSchema(schema32);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag35 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText36 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger37 = null;
        safeTsvText36.setPigLogger(pigLogger37);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText39 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable40 = mergeAsOpenNLPAnnotatedText39.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract41 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = checkAbstract41.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = mergeAsOpenNLPAnnotatedText39.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = safeTsvText36.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = aggregateTextBag35.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = noLoopInPath23.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = checkAbstract16.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = mergeAsOpenNLPAnnotatedText7.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = mergeAsOpenNLPAnnotatedText0.outputSchema(schema44);
        pignlproc.evaluation.CheckAbstract checkAbstract51 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum53 = null;
        checkAbstract51.warn("http://.wikipedia.org/wiki/hi%21", enum53);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger55 = null;
        checkAbstract51.setPigLogger(pigLogger55);
        checkAbstract51.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText58 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger59 = null;
        safeTsvText58.setPigLogger(pigLogger59);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText61 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable62 = mergeAsOpenNLPAnnotatedText61.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract63 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = checkAbstract63.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = mergeAsOpenNLPAnnotatedText61.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = safeTsvText58.outputSchema(schema66);
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = checkAbstract51.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = mergeAsOpenNLPAnnotatedText0.outputSchema(schema68);
        org.apache.pig.data.Tuple tuple70 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str71 = mergeAsOpenNLPAnnotatedText0.exec(tuple70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi !" + "'", str5, "hi !");
        org.junit.Assert.assertNull(funcSpecList6);
        org.junit.Assert.assertNotNull(spanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi !" + "'", str12, "hi !");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNull(pigProgressable28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(pigProgressable40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(pigProgressable62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser1.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel4 = annotatingMarkupParser1.makeWikiModel("title");
        java.lang.String str6 = annotatingMarkupParser1.parse("hi!");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser7 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser7.getHeaders();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser9 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList10 = annotatingMarkupParser9.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList11 = annotatingMarkupParser9.getWikiLinkAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser12 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser12.getHeaders();
        java.util.List<java.lang.String> strList14 = annotatingMarkupParser12.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList15 = annotatingMarkupParser12.getHeaderAnnotations();
        java.lang.String str16 = annotatingMarkupParser12.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser17 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList18 = annotatingMarkupParser17.getHeaders();
        java.util.List<java.lang.String> strList19 = annotatingMarkupParser17.getHeaders();
        java.lang.Appendable appendable20 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable21 = annotatingMarkupParser17.new CountingAppendable(appendable20);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable22 = annotatingMarkupParser12.new CountingAppendable((java.lang.Appendable) countingAppendable21);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable23 = annotatingMarkupParser9.new CountingAppendable((java.lang.Appendable) countingAppendable22);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable24 = annotatingMarkupParser7.new CountingAppendable((java.lang.Appendable) countingAppendable22);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable25 = annotatingMarkupParser1.new CountingAppendable((java.lang.Appendable) countingAppendable22);
        pignlproc.evaluation.ConcatTextBag concatTextBag27 = new pignlproc.evaluation.ConcatTextBag("wikiobject");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger28 = null;
        concatTextBag27.setPigLogger(pigLogger28);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = null;
        concatTextBag27.setPigLogger(pigLogger30);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<opennlp.tools.util.Span> spanList32 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) (byte) 1, (java.lang.Object) countingAppendable25, (java.lang.Object) pigLogger30);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Byte cannot be cast to java.lang.Integer");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertNotNull(wikiModel4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!\n" + "'", str6, "hi!\n");
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(annotationList11);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(annotationList15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strList19);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList3);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = mergeAsOpenNLPAnnotatedText0.getArgToFuncMapping();
        org.apache.commons.logging.Log log7 = mergeAsOpenNLPAnnotatedText0.getLogger();
        mergeAsOpenNLPAnnotatedText0.progress();
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi !" + "'", str5, "hi !");
        org.junit.Assert.assertNull(funcSpecList6);
        org.junit.Assert.assertNotNull(log7);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("http://\"title\"\n.wikipedia.org/wiki/", "hi !");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22", job4);
        org.apache.hadoop.mapreduce.RecordReader recordReader6 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit7 = null;
        uriStringLiteralNTriplesLoader2.prepareToRead(recordReader6, pigSplit7);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple9 = uriStringLiteralNTriplesLoader2.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema5);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        java.util.List<java.lang.String> strList5 = annotatingMarkupParser0.getParagraphs();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser0.getParagraphs();
        info.bliki.wiki.model.WikiModel wikiModel8 = annotatingMarkupParser0.makeWikiModel("hi!");
        java.util.List<java.lang.String> strList9 = annotatingMarkupParser0.getHeaders();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser10 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser10.getHeaders();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser10.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList13 = annotatingMarkupParser10.getHeaderAnnotations();
        java.lang.String str14 = annotatingMarkupParser10.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser15 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser15.getHeaders();
        java.util.List<java.lang.String> strList17 = annotatingMarkupParser15.getHeaders();
        java.lang.Appendable appendable18 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable19 = annotatingMarkupParser15.new CountingAppendable(appendable18);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable20 = annotatingMarkupParser10.new CountingAppendable((java.lang.Appendable) countingAppendable19);
        info.bliki.wiki.model.WikiModel wikiModel22 = annotatingMarkupParser10.makeWikiModel("\"hi!\"\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser23 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList24 = annotatingMarkupParser23.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser25 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser25.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList27 = annotatingMarkupParser25.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList28 = annotatingMarkupParser25.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser29 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList30 = annotatingMarkupParser29.getHeaders();
        java.util.List<java.lang.String> strList31 = annotatingMarkupParser29.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList32 = annotatingMarkupParser29.getHeaderAnnotations();
        java.lang.String str33 = annotatingMarkupParser29.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser34 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList35 = annotatingMarkupParser34.getHeaders();
        java.util.List<java.lang.String> strList36 = annotatingMarkupParser34.getHeaders();
        java.lang.Appendable appendable37 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable38 = annotatingMarkupParser34.new CountingAppendable(appendable37);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable39 = annotatingMarkupParser29.new CountingAppendable((java.lang.Appendable) countingAppendable38);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser40 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList41 = annotatingMarkupParser40.getHeaderAnnotations();
        java.lang.String str42 = annotatingMarkupParser40.getRedirect();
        pignlproc.markup.Annotation annotation47 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation52 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int53 = annotation52.end;
        int int54 = annotation52.begin;
        pignlproc.markup.Annotation[] annotationArray55 = new pignlproc.markup.Annotation[] { annotation47, annotation52 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList56 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList56, annotationArray55);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser58 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList59 = annotatingMarkupParser58.getHeaders();
        java.util.List<java.lang.String> strList60 = annotatingMarkupParser58.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList61 = annotatingMarkupParser58.getHeaderAnnotations();
        java.lang.String str62 = annotatingMarkupParser58.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser63 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList64 = annotatingMarkupParser63.getHeaders();
        java.util.List<java.lang.String> strList65 = annotatingMarkupParser63.getHeaders();
        java.lang.Appendable appendable66 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable67 = annotatingMarkupParser63.new CountingAppendable(appendable66);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable68 = annotatingMarkupParser58.new CountingAppendable((java.lang.Appendable) countingAppendable67);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser69 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList70 = annotatingMarkupParser69.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel72 = annotatingMarkupParser69.makeWikiModel("title");
        annotatingMarkupParser40.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList56, (java.lang.Appendable) countingAppendable67, (info.bliki.wiki.model.IWikiModel) wikiModel72);
        annotatingMarkupParser23.nodesToText(annotationList28, (java.lang.Appendable) countingAppendable39, (info.bliki.wiki.model.IWikiModel) wikiModel72);
        int int75 = countingAppendable39.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable76 = annotatingMarkupParser10.new CountingAppendable((java.lang.Appendable) countingAppendable39);
        countingAppendable39.currentPosition = (byte) 10;
        int int79 = countingAppendable39.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable80 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable39);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable82 = countingAppendable39.append((java.lang.CharSequence) "http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/%22opennlp_%2F_en_-_sent_._bin%22%0A");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(wikiModel8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(annotationList13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(wikiModel22);
        org.junit.Assert.assertNotNull(annotationList24);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList27);
        org.junit.Assert.assertNotNull(annotationList28);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(annotationList32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(annotationList41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 52 + "'", int54 == 52);
        org.junit.Assert.assertNotNull(annotationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNotNull(annotationList61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNotNull(annotationList70);
        org.junit.Assert.assertNotNull(wikiModel72);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 10 + "'", int79 == 10);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        noLoopInPath0.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = noLoopInPath0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = noLoopInPath0.getReporter();
        org.junit.Assert.assertNull(pigLogger2);
        org.junit.Assert.assertNull(pigProgressable3);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("hi !\n", "http://\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\".wikipedia.org/wiki/href", "http : // http : // hi ! . wikipedia . org / wiki / % 22 _ title _ % 22 . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin");
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel3 = annotatingMarkupParser0.makeWikiModel("title");
        java.util.List<pignlproc.markup.Annotation> annotationList4 = annotatingMarkupParser0.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser0.getParagraphAnnotations();
        boolean boolean6 = annotatingMarkupParser0.noLinks();
        info.bliki.wiki.model.WikiModel wikiModel8 = annotatingMarkupParser0.makeWikiModel("\" title \"");
        java.util.List<pignlproc.markup.Annotation> annotationList9 = annotatingMarkupParser0.getHeaderAnnotations();
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(wikiModel3);
        org.junit.Assert.assertNotNull(annotationList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wikiModel8);
        org.junit.Assert.assertNotNull(annotationList9);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("wikiobject");
        boolean boolean2 = noLoopInPath1.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger3 = null;
        noLoopInPath1.setPigLogger(pigLogger3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = null;
        noLoopInPath1.setPigLogger(pigLogger5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = noLoopInPath1.getPigLogger();
        noLoopInPath1.progress();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(pigLogger7);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.lang.Appendable appendable3 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable4 = annotatingMarkupParser0.new CountingAppendable(appendable3);
        java.lang.String str6 = annotatingMarkupParser0.parse("");
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser0.getParagraphAnnotations();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList9 = annotatingMarkupParser0.getParagraphs();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.mapreduce.RecordReader recordReader5 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit6 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader5, pigSplit6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        java.lang.String[] strArray10 = parsingWikipediaLoader1.getPartitionKeys("http://.wikipedia.org/wiki/hi%21", job9);
        org.apache.hadoop.mapreduce.InputFormat inputFormat11 = parsingWikipediaLoader1.getInputFormat();
        parsingWikipediaLoader1.setUDFContextSignature("\"\"\"hi!\"\" \"");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple14 = parsingWikipediaLoader1.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNull(strArray10);
        org.junit.Assert.assertNotNull(inputFormat11);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.setMinInputSplitSize(job0, (long) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        java.lang.String str1 = pignlproc.evaluation.SafeTsvText.escape("http://http://hi!\n.wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"http://http://hi! .wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin\"" + "'", str1, "\"http://http://hi! .wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin\"");
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) 'a', (int) (byte) 0, "http://\"title\".wikipedia.org/wiki/%22hi%21%22", "\"title\"\n");
        int int5 = annotation4.end;
        int int6 = annotation4.end;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("", "title", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat4 = uriStringLiteralNTriplesStorer3.getOutputFormat();
        uriStringLiteralNTriplesStorer3.setStoreFuncUDFContextSignature("opennlp/en-sent.bin");
        org.apache.pig.data.Tuple tuple7 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer3.putNext(tuple7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat4);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        org.apache.hadoop.mapreduce.Job job1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.StoreFunc.cleanupOnFailureImpl("\"\"\"opennlp / en - sent . bin\"\" \"", job1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("", "opennlp / en - sent . bin", "http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader3.getSchema("\"hi! \"", job5);
        org.junit.Assert.assertNotNull(resourceSchema6);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("\"\"");
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        java.lang.String str1 = pignlproc.evaluation.SafeTsvText.escape("hi !\n");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"hi ! \"" + "'", str1, "\"hi ! \"");
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum2 = null;
        safeTsvText0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = safeTsvText0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        safeTsvText0.setReporter(pigProgressable5);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink7 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList8 = sentencesWithLink7.getArgToFuncMapping();
        pignlproc.evaluation.CheckAbstract checkAbstract9 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum11 = null;
        checkAbstract9.warn("http://.wikipedia.org/wiki/hi%21", enum11);
        java.lang.Enum enum14 = null;
        checkAbstract9.warn("hi !", enum14);
        pignlproc.evaluation.NoLoopInPath noLoopInPath16 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText17 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger18 = null;
        safeTsvText17.setPigLogger(pigLogger18);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText20 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable21 = mergeAsOpenNLPAnnotatedText20.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract22 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = checkAbstract22.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = mergeAsOpenNLPAnnotatedText20.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = safeTsvText17.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = noLoopInPath16.outputSchema(schema25);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag28 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText29 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = null;
        safeTsvText29.setPigLogger(pigLogger30);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText32 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable33 = mergeAsOpenNLPAnnotatedText32.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract34 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = checkAbstract34.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = mergeAsOpenNLPAnnotatedText32.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = safeTsvText29.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = aggregateTextBag28.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = noLoopInPath16.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = checkAbstract9.outputSchema(schema40);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = sentencesWithLink7.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = safeTsvText0.outputSchema(schema41);
        pignlproc.evaluation.CheckAbstract checkAbstract44 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = checkAbstract44.outputSchema(schema45);
        org.apache.pig.data.Tuple tuple47 = null;
        java.lang.Boolean boolean48 = checkAbstract44.exec(tuple47);
        java.lang.Enum enum50 = null;
        checkAbstract44.warn("href", enum50);
        checkAbstract44.finish();
        pignlproc.evaluation.SafeTsvText safeTsvText53 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger54 = null;
        safeTsvText53.setPigLogger(pigLogger54);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText56 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable57 = mergeAsOpenNLPAnnotatedText56.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract58 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = checkAbstract58.outputSchema(schema59);
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = mergeAsOpenNLPAnnotatedText56.outputSchema(schema59);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = safeTsvText53.outputSchema(schema61);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText63 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray65 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList66 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList66, spanArray65);
        java.lang.String str68 = mergeAsOpenNLPAnnotatedText63.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList66);
        pignlproc.evaluation.ConcatTextBag concatTextBag70 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract71 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum73 = null;
        checkAbstract71.warn("http://.wikipedia.org/wiki/hi%21", enum73);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger75 = null;
        checkAbstract71.setPigLogger(pigLogger75);
        checkAbstract71.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText78 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger79 = null;
        safeTsvText78.setPigLogger(pigLogger79);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText81 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable82 = mergeAsOpenNLPAnnotatedText81.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract83 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema84 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema85 = checkAbstract83.outputSchema(schema84);
        org.apache.pig.impl.logicalLayer.schema.Schema schema86 = mergeAsOpenNLPAnnotatedText81.outputSchema(schema84);
        org.apache.pig.impl.logicalLayer.schema.Schema schema87 = safeTsvText78.outputSchema(schema86);
        org.apache.pig.impl.logicalLayer.schema.Schema schema88 = checkAbstract71.outputSchema(schema87);
        org.apache.pig.impl.logicalLayer.schema.Schema schema89 = concatTextBag70.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema90 = mergeAsOpenNLPAnnotatedText63.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema91 = safeTsvText53.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema92 = checkAbstract44.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema93 = safeTsvText0.outputSchema(schema92);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList94 = safeTsvText0.getArgToFuncMapping();
        boolean boolean95 = safeTsvText0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger96 = null;
        safeTsvText0.setPigLogger(pigLogger96);
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNull(funcSpecList8);
        org.junit.Assert.assertNull(pigProgressable21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(pigProgressable33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertEquals("'" + boolean48 + "' != '" + false + "'", boolean48, false);
        org.junit.Assert.assertNull(pigProgressable57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(spanArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "href" + "'", str68, "href");
        org.junit.Assert.assertNull(pigProgressable82);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNull(funcSpecList94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel3 = annotatingMarkupParser0.makeWikiModel("title");
        java.util.List<pignlproc.markup.Annotation> annotationList4 = annotatingMarkupParser0.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser0.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser6 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser6.getHeaders();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser6.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList9 = annotatingMarkupParser6.getHeaderAnnotations();
        java.lang.String str10 = annotatingMarkupParser6.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser11 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser11.getHeaders();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser11.getHeaders();
        java.lang.Appendable appendable14 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable15 = annotatingMarkupParser11.new CountingAppendable(appendable14);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable16 = annotatingMarkupParser6.new CountingAppendable((java.lang.Appendable) countingAppendable15);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser17 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList18 = annotatingMarkupParser17.getHeaders();
        java.util.List<java.lang.String> strList19 = annotatingMarkupParser17.getHeaders();
        java.lang.Appendable appendable20 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable21 = annotatingMarkupParser17.new CountingAppendable(appendable20);
        countingAppendable21.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable24 = annotatingMarkupParser6.new CountingAppendable((java.lang.Appendable) countingAppendable21);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser25 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser25.getHeaders();
        java.util.List<java.lang.String> strList27 = annotatingMarkupParser25.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList28 = annotatingMarkupParser25.getHeaderAnnotations();
        java.lang.String str29 = annotatingMarkupParser25.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser30 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList31 = annotatingMarkupParser30.getHeaders();
        java.util.List<java.lang.String> strList32 = annotatingMarkupParser30.getHeaders();
        java.lang.Appendable appendable33 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable34 = annotatingMarkupParser30.new CountingAppendable(appendable33);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable35 = annotatingMarkupParser25.new CountingAppendable((java.lang.Appendable) countingAppendable34);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable36 = annotatingMarkupParser6.new CountingAppendable((java.lang.Appendable) countingAppendable34);
        countingAppendable34.currentPosition = 0;
        countingAppendable34.currentPosition = (short) 100;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable41 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable34);
        countingAppendable34.currentPosition = ' ';
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable45 = countingAppendable34.append('a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(wikiModel3);
        org.junit.Assert.assertNotNull(annotationList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(annotationList9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(annotationList28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("\"\"\"http://.wikipedia.org/wiki/hi%21\"\" \"");
        java.lang.Class<?> wildcardClass2 = parsingWikipediaLoader1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = parsingWikipediaLoader1.getSchema("hi!", job6);
        parsingWikipediaLoader1.setUDFContextSignature("title");
        org.apache.hadoop.mapreduce.Job job11 = null;
        org.apache.pig.ResourceStatistics resourceStatistics12 = parsingWikipediaLoader1.getStatistics("http://.wikipedia.org/wiki/hi%21", job11);
        org.apache.hadoop.mapreduce.Job job14 = null;
        org.apache.pig.ResourceStatistics resourceStatistics15 = parsingWikipediaLoader1.getStatistics("hi !\n\n", job14);
        parsingWikipediaLoader1.setUDFContextSignature("\"hi!\"\n\n");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple18 = parsingWikipediaLoader1.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNotNull(resourceSchema7);
        org.junit.Assert.assertNull(resourceStatistics12);
        org.junit.Assert.assertNull(resourceStatistics15);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser14.getHeaders();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser14.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList17 = annotatingMarkupParser14.getHeaderAnnotations();
        java.lang.String str18 = annotatingMarkupParser14.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser19.getHeaders();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser19.getHeaders();
        java.lang.Appendable appendable22 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable23 = annotatingMarkupParser19.new CountingAppendable(appendable22);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable24 = annotatingMarkupParser14.new CountingAppendable((java.lang.Appendable) countingAppendable23);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser25 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser25.getHeaders();
        java.util.List<java.lang.String> strList27 = annotatingMarkupParser25.getHeaders();
        java.lang.Appendable appendable28 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable29 = annotatingMarkupParser25.new CountingAppendable(appendable28);
        countingAppendable29.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable32 = annotatingMarkupParser14.new CountingAppendable((java.lang.Appendable) countingAppendable29);
        countingAppendable32.currentPosition = (byte) -1;
        countingAppendable32.currentPosition = 100;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable37 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable32);
        countingAppendable37.currentPosition = 32;
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(annotationList17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strList27);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"", "http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522", "http://.wikipedia.org/wiki/hi%21\n");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat4 = uriUriNTriplesStorer3.getOutputFormat();
        org.junit.Assert.assertNotNull(outputFormat4);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        mergeAsOpenNLPAnnotatedText0.setPigLogger(pigLogger6);
        boolean boolean8 = mergeAsOpenNLPAnnotatedText0.isAsynchronous();
        pignlproc.evaluation.CheckAbstract checkAbstract9 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum11 = null;
        checkAbstract9.warn("http://.wikipedia.org/wiki/hi%21", enum11);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable13 = null;
        checkAbstract9.setReporter(pigProgressable13);
        java.lang.reflect.Type type15 = checkAbstract9.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath16 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText17 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger18 = null;
        safeTsvText17.setPigLogger(pigLogger18);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText20 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable21 = mergeAsOpenNLPAnnotatedText20.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract22 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = checkAbstract22.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = mergeAsOpenNLPAnnotatedText20.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = safeTsvText17.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = noLoopInPath16.outputSchema(schema25);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag28 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText29 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = null;
        safeTsvText29.setPigLogger(pigLogger30);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText32 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable33 = mergeAsOpenNLPAnnotatedText32.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract34 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = checkAbstract34.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = mergeAsOpenNLPAnnotatedText32.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = safeTsvText29.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = aggregateTextBag28.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = noLoopInPath16.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = checkAbstract9.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = mergeAsOpenNLPAnnotatedText0.outputSchema(schema37);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger43 = null;
        mergeAsOpenNLPAnnotatedText0.setPigLogger(pigLogger43);
        pignlproc.evaluation.NoLoopInPath noLoopInPath46 = new pignlproc.evaluation.NoLoopInPath("href");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable47 = null;
        noLoopInPath46.setReporter(pigProgressable47);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink49 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.NoLoopInPath noLoopInPath50 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText51 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger52 = null;
        safeTsvText51.setPigLogger(pigLogger52);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText54 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable55 = mergeAsOpenNLPAnnotatedText54.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract56 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = checkAbstract56.outputSchema(schema57);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = mergeAsOpenNLPAnnotatedText54.outputSchema(schema57);
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = safeTsvText51.outputSchema(schema59);
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = noLoopInPath50.outputSchema(schema59);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag62 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText63 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger64 = null;
        safeTsvText63.setPigLogger(pigLogger64);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText66 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable67 = mergeAsOpenNLPAnnotatedText66.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract68 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema70 = checkAbstract68.outputSchema(schema69);
        org.apache.pig.impl.logicalLayer.schema.Schema schema71 = mergeAsOpenNLPAnnotatedText66.outputSchema(schema69);
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = safeTsvText63.outputSchema(schema71);
        org.apache.pig.impl.logicalLayer.schema.Schema schema73 = aggregateTextBag62.outputSchema(schema71);
        org.apache.pig.impl.logicalLayer.schema.Schema schema74 = noLoopInPath50.outputSchema(schema71);
        pignlproc.evaluation.CheckAbstract checkAbstract75 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum77 = null;
        checkAbstract75.warn("http://.wikipedia.org/wiki/hi%21", enum77);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger79 = null;
        checkAbstract75.setPigLogger(pigLogger79);
        checkAbstract75.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText82 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger83 = null;
        safeTsvText82.setPigLogger(pigLogger83);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText85 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable86 = mergeAsOpenNLPAnnotatedText85.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract87 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema88 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema89 = checkAbstract87.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema90 = mergeAsOpenNLPAnnotatedText85.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema91 = safeTsvText82.outputSchema(schema90);
        org.apache.pig.impl.logicalLayer.schema.Schema schema92 = checkAbstract75.outputSchema(schema91);
        org.apache.pig.impl.logicalLayer.schema.Schema schema93 = noLoopInPath50.outputSchema(schema92);
        org.apache.pig.impl.logicalLayer.schema.Schema schema94 = sentencesWithLink49.outputSchema(schema93);
        org.apache.pig.impl.logicalLayer.schema.Schema schema95 = noLoopInPath46.outputSchema(schema94);
        org.apache.pig.impl.logicalLayer.schema.Schema schema96 = mergeAsOpenNLPAnnotatedText0.outputSchema(schema94);
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi !" + "'", str5, "hi !");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNull(pigProgressable21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(pigProgressable33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(pigProgressable55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(pigProgressable67);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(pigProgressable86);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema96);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader3.getSchema("", job5);
        org.apache.pig.Expression expression7 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceSchema resourceSchema11 = uriUriNTriplesLoader3.getSchema("", job10);
        org.apache.hadoop.mapreduce.RecordReader recordReader12 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit13 = null;
        uriUriNTriplesLoader3.prepareToRead(recordReader12, pigSplit13);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple15 = uriUriNTriplesLoader3.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNotNull(resourceSchema11);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        parsingWikipediaLoader1.setUDFContextSignature("hi !");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceStatistics resourceStatistics6 = parsingWikipediaLoader1.getStatistics("\"hi! \"\n", job5);
        org.apache.hadoop.mapreduce.RecordReader recordReader7 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit8 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader7, pigSplit8);
        org.junit.Assert.assertNull(resourceStatistics6);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        java.lang.reflect.Type type4 = sentencesWithLink0.getReturnType();
        sentencesWithLink0.finish();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = null;
        sentencesWithLink0.setReporter(pigProgressable6);
        org.apache.pig.data.Tuple tuple8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.DataBag dataBag9 = sentencesWithLink0.exec(tuple8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNotNull(type4);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader0 = new pignlproc.storage.UriUriNTriplesLoader();
        org.apache.hadoop.mapreduce.Job job2 = null;
        org.apache.pig.ResourceStatistics resourceStatistics3 = uriUriNTriplesLoader0.getStatistics("wikiobject", job2);
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceStatistics resourceStatistics6 = uriUriNTriplesLoader0.getStatistics("\"opennlp / en - sent . bin\"", job5);
        org.apache.hadoop.mapreduce.Job job8 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesLoader0.setLocation("http://\"\"\"hi!\"\" \".wikipedia.org/wiki/", job8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics3);
        org.junit.Assert.assertNull(resourceStatistics6);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        java.lang.String str5 = annotation4.label;
        int int6 = annotation4.end;
        int int7 = annotation4.end;
        java.lang.String str8 = annotation4.value;
        java.lang.String str9 = annotation4.value;
        int int10 = annotation4.begin;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "title" + "'", str5, "title");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("http://.wikipedia.org/wiki/hi%21");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriUriNTriplesStorer1.getOutputFormat();
        uriUriNTriplesStorer1.setStoreFuncUDFContextSignature("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader5 = new pignlproc.storage.UriStringLiteralNTriplesLoader();
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = uriStringLiteralNTriplesLoader5.getSchema("", job7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceStatistics resourceStatistics11 = uriStringLiteralNTriplesLoader5.getStatistics("opennlp/en-sent.bin", job10);
        org.apache.hadoop.mapreduce.Job job13 = null;
        org.apache.pig.ResourceSchema resourceSchema14 = uriStringLiteralNTriplesLoader5.getSchema("", job13);
        uriUriNTriplesStorer1.checkSchema(resourceSchema14);
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader18 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job20 = null;
        org.apache.pig.ResourceSchema resourceSchema21 = uriStringLiteralNTriplesLoader18.getSchema("http://.wikipedia.org/wiki/hi%21", job20);
        org.apache.hadoop.mapreduce.InputFormat inputFormat22 = uriStringLiteralNTriplesLoader18.getInputFormat();
        org.apache.hadoop.mapreduce.Job job24 = null;
        org.apache.pig.ResourceSchema resourceSchema25 = uriStringLiteralNTriplesLoader18.getSchema("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21", job24);
        org.apache.hadoop.mapreduce.Job job27 = null;
        org.apache.pig.ResourceSchema resourceSchema28 = uriStringLiteralNTriplesLoader18.getSchema("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", job27);
        org.apache.hadoop.mapreduce.Job job30 = null;
        org.apache.pig.ResourceSchema resourceSchema31 = uriStringLiteralNTriplesLoader18.getSchema("title\n\n", job30);
        uriUriNTriplesStorer1.checkSchema(resourceSchema31);
        org.apache.pig.data.Tuple tuple33 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer1.putNext(tuple33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat2);
        org.junit.Assert.assertNotNull(resourceSchema8);
        org.junit.Assert.assertNull(resourceStatistics11);
        org.junit.Assert.assertNotNull(resourceSchema14);
        org.junit.Assert.assertNotNull(resourceSchema21);
        org.junit.Assert.assertNotNull(inputFormat22);
        org.junit.Assert.assertNotNull(resourceSchema25);
        org.junit.Assert.assertNotNull(resourceSchema28);
        org.junit.Assert.assertNotNull(resourceSchema31);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag(32, false);
        org.apache.pig.data.Tuple tuple3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = aggregateTextBag2.exec(tuple3);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in AggregateTextBag");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        java.util.AbstractCollection<java.lang.String> strCollection0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.apache.pig.LoadFunc.join(strCollection0, "http://\"\"\"http://.wikipedia.org/wiki/hi%21\"\" \".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi%21.wikipedia.org%2Fwiki%2F%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("hi !");
        org.apache.pig.Expression expression2 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression2);
        org.apache.pig.LoadCaster loadCaster4 = parsingWikipediaLoader1.getLoadCaster();
        org.apache.hadoop.fs.Path path6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = parsingWikipediaLoader1.relativeToAbsolutePath("\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\"", path6);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\" curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(loadCaster4);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://.wikipedia.org/wiki/hi%21");
        org.apache.hadoop.mapreduce.RecordWriter recordWriter2 = null;
        uriStringLiteralNTriplesStorer1.prepareToWrite(recordWriter2);
        org.apache.hadoop.mapreduce.Job job5 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.setStoreLocation("http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21", job5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("title", job3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        java.lang.String[] strArray7 = parsingWikipediaLoader1.getPartitionKeys("wikiobject", job6);
        parsingWikipediaLoader1.setUDFContextSignature("http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22");
        org.apache.hadoop.mapreduce.InputFormat inputFormat10 = parsingWikipediaLoader1.getInputFormat();
        org.apache.hadoop.mapreduce.Job job12 = null;
        org.apache.pig.ResourceSchema resourceSchema13 = parsingWikipediaLoader1.getSchema("http://http://\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\".wikipedia.org/wiki/%22%22%22opennlp_%2F_en_-_sent_._bin%22%22%22.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org%2Fwiki%2Fhi_%2521", job12);
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNull(strArray7);
        org.junit.Assert.assertNotNull(inputFormat10);
        org.junit.Assert.assertNotNull(resourceSchema13);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("", "\"hi! \"", "title");
        pignlproc.evaluation.NoLoopInPath noLoopInPath4 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText5 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        safeTsvText5.setPigLogger(pigLogger6);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText8 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = mergeAsOpenNLPAnnotatedText8.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract10 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = checkAbstract10.outputSchema(schema11);
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = mergeAsOpenNLPAnnotatedText8.outputSchema(schema11);
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = safeTsvText5.outputSchema(schema13);
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = noLoopInPath4.outputSchema(schema13);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag16 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText17 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger18 = null;
        safeTsvText17.setPigLogger(pigLogger18);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText20 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable21 = mergeAsOpenNLPAnnotatedText20.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract22 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = checkAbstract22.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = mergeAsOpenNLPAnnotatedText20.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = safeTsvText17.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = aggregateTextBag16.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = noLoopInPath4.outputSchema(schema25);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger29 = null;
        noLoopInPath4.setPigLogger(pigLogger29);
        org.apache.pig.data.Tuple tuple31 = null;
        java.lang.Boolean boolean32 = noLoopInPath4.exec(tuple31);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable33 = null;
        noLoopInPath4.setReporter(pigProgressable33);
        java.lang.reflect.Type type35 = noLoopInPath4.getReturnType();
        pignlproc.evaluation.ConcatTextBag concatTextBag37 = new pignlproc.evaluation.ConcatTextBag("http://hi!\n.wikipedia.org/wiki/%22_title_%22");
        java.lang.Enum enum39 = null;
        concatTextBag37.warn("http://.wikipedia.org/wiki/hi%21", enum39);
        pignlproc.evaluation.SafeTsvText safeTsvText41 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger42 = null;
        safeTsvText41.setPigLogger(pigLogger42);
        org.apache.commons.logging.Log log44 = safeTsvText41.getLogger();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList45 = safeTsvText41.getArgToFuncMapping();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink46 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList47 = sentencesWithLink46.getArgToFuncMapping();
        pignlproc.evaluation.CheckAbstract checkAbstract48 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum50 = null;
        checkAbstract48.warn("http://.wikipedia.org/wiki/hi%21", enum50);
        java.lang.Enum enum53 = null;
        checkAbstract48.warn("hi !", enum53);
        pignlproc.evaluation.NoLoopInPath noLoopInPath55 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText56 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger57 = null;
        safeTsvText56.setPigLogger(pigLogger57);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText59 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable60 = mergeAsOpenNLPAnnotatedText59.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract61 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = checkAbstract61.outputSchema(schema62);
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = mergeAsOpenNLPAnnotatedText59.outputSchema(schema62);
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = safeTsvText56.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = noLoopInPath55.outputSchema(schema64);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag67 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText68 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger69 = null;
        safeTsvText68.setPigLogger(pigLogger69);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText71 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable72 = mergeAsOpenNLPAnnotatedText71.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract73 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema74 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema75 = checkAbstract73.outputSchema(schema74);
        org.apache.pig.impl.logicalLayer.schema.Schema schema76 = mergeAsOpenNLPAnnotatedText71.outputSchema(schema74);
        org.apache.pig.impl.logicalLayer.schema.Schema schema77 = safeTsvText68.outputSchema(schema76);
        org.apache.pig.impl.logicalLayer.schema.Schema schema78 = aggregateTextBag67.outputSchema(schema76);
        org.apache.pig.impl.logicalLayer.schema.Schema schema79 = noLoopInPath55.outputSchema(schema76);
        org.apache.pig.impl.logicalLayer.schema.Schema schema80 = checkAbstract48.outputSchema(schema79);
        org.apache.pig.impl.logicalLayer.schema.Schema schema81 = sentencesWithLink46.outputSchema(schema80);
        org.apache.pig.impl.logicalLayer.schema.Schema schema82 = safeTsvText41.outputSchema(schema81);
        org.apache.pig.impl.logicalLayer.schema.Schema schema83 = concatTextBag37.outputSchema(schema81);
        org.apache.pig.impl.logicalLayer.schema.Schema schema84 = noLoopInPath4.outputSchema(schema83);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<opennlp.tools.util.Span> spanList85 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) "title", (java.lang.Object) schema84);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to java.lang.Integer");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigProgressable9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(pigProgressable21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + true + "'", boolean32, true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNull(funcSpecList45);
        org.junit.Assert.assertNull(funcSpecList47);
        org.junit.Assert.assertNull(pigProgressable60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(pigProgressable72);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521");
        org.apache.hadoop.mapreduce.Job job3 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer1.setStoreLocation("http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href\n", job3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        pignlproc.evaluation.ConcatTextBag concatTextBag0 = new pignlproc.evaluation.ConcatTextBag();
        java.lang.Enum enum2 = null;
        concatTextBag0.warn("", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        concatTextBag0.setReporter(pigProgressable4);
        org.apache.pig.data.Tuple tuple6 = null;
        java.lang.String str7 = concatTextBag0.exec(tuple6);
        java.lang.reflect.Type type8 = concatTextBag0.getReturnType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(type8);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = parsingWikipediaLoader1.getSchema("\"hi!\"", job6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        org.apache.pig.ResourceSchema resourceSchema10 = parsingWikipediaLoader1.getSchema("\"hi!\"\n", job9);
        org.apache.hadoop.mapreduce.RecordReader recordReader11 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit12 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader11, pigSplit12);
        org.apache.hadoop.mapreduce.Job job15 = null;
        org.apache.pig.ResourceStatistics resourceStatistics16 = parsingWikipediaLoader1.getStatistics("http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21", job15);
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNotNull(resourceSchema7);
        org.junit.Assert.assertNotNull(resourceSchema10);
        org.junit.Assert.assertNull(resourceStatistics16);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("hi !\n\n", "http://.wikipedia.org/wiki/hi%21", "");
        org.apache.hadoop.mapreduce.Job job5 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer3.setStoreLocation("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22", job5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        java.lang.String str2 = pignlproc.markup.AnnotatingMarkupParser.titleToUri("\"\"", "http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href\n");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href\n.wikipedia.org/wiki/%22%22" + "'", str2, "http://http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href\n.wikipedia.org/wiki/%22%22");
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText3 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray5 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList6 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList6, spanArray5);
        java.lang.String str8 = mergeAsOpenNLPAnnotatedText3.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList6);
        pignlproc.evaluation.ConcatTextBag concatTextBag10 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract11 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum13 = null;
        checkAbstract11.warn("http://.wikipedia.org/wiki/hi%21", enum13);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger15 = null;
        checkAbstract11.setPigLogger(pigLogger15);
        checkAbstract11.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText18 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger19 = null;
        safeTsvText18.setPigLogger(pigLogger19);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText21 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable22 = mergeAsOpenNLPAnnotatedText21.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract23 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = checkAbstract23.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = mergeAsOpenNLPAnnotatedText21.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = safeTsvText18.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = checkAbstract11.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = concatTextBag10.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = mergeAsOpenNLPAnnotatedText3.outputSchema(schema28);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText32 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray34 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList35 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList35, spanArray34);
        java.lang.String str37 = mergeAsOpenNLPAnnotatedText32.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList35);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger38 = null;
        mergeAsOpenNLPAnnotatedText32.setPigLogger(pigLogger38);
        boolean boolean40 = mergeAsOpenNLPAnnotatedText32.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText42 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray44 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList45 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList45, spanArray44);
        java.lang.String str47 = mergeAsOpenNLPAnnotatedText42.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList45);
        java.lang.String str48 = mergeAsOpenNLPAnnotatedText32.merge("opennlp/en-sent.bin", (java.util.List<opennlp.tools.util.Span>) spanList45);
        java.lang.String str49 = mergeAsOpenNLPAnnotatedText3.merge("\"title\"", (java.util.List<opennlp.tools.util.Span>) spanList45);
        java.lang.String str50 = mergeAsOpenNLPAnnotatedText1.merge("\"\"\"\"\"\"\"http://.wikipedia.org/wiki/hi%21\"\"\"\" \"\"\"", (java.util.List<opennlp.tools.util.Span>) spanList45);
        java.lang.Enum enum52 = null;
        mergeAsOpenNLPAnnotatedText1.warn("http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21", enum52);
        org.junit.Assert.assertNotNull(spanArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "href" + "'", str8, "href");
        org.junit.Assert.assertNull(pigProgressable22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(spanArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi !" + "'", str37, "hi !");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(spanArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "href" + "'", str47, "href");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "opennlp / en - sent . bin" + "'", str48, "opennlp / en - sent . bin");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\" title \"" + "'", str49, "\" title \"");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\"" + "'", str50, "\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\"");
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getParagraphAnnotations();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser0.getParagraphs();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable(appendable8);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getParagraphs();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("hi!");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser2 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser2.getHeaders();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser2.getHeaders();
        java.lang.Appendable appendable5 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable6 = annotatingMarkupParser2.new CountingAppendable(appendable5);
        java.lang.String str8 = annotatingMarkupParser2.parse("");
        java.util.List<pignlproc.markup.Annotation> annotationList9 = annotatingMarkupParser2.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser10 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList11 = annotatingMarkupParser10.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser10.makeWikiModel("title");
        java.util.List<pignlproc.markup.Annotation> annotationList14 = annotatingMarkupParser10.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList15 = annotatingMarkupParser10.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser16 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList17 = annotatingMarkupParser16.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser18 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList19 = annotatingMarkupParser18.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList20 = annotatingMarkupParser18.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser18.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser22 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser22.getHeaders();
        java.util.List<java.lang.String> strList24 = annotatingMarkupParser22.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList25 = annotatingMarkupParser22.getHeaderAnnotations();
        java.lang.String str26 = annotatingMarkupParser22.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser27 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList28 = annotatingMarkupParser27.getHeaders();
        java.util.List<java.lang.String> strList29 = annotatingMarkupParser27.getHeaders();
        java.lang.Appendable appendable30 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable31 = annotatingMarkupParser27.new CountingAppendable(appendable30);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable32 = annotatingMarkupParser22.new CountingAppendable((java.lang.Appendable) countingAppendable31);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser33 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList34 = annotatingMarkupParser33.getHeaderAnnotations();
        java.lang.String str35 = annotatingMarkupParser33.getRedirect();
        pignlproc.markup.Annotation annotation40 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation45 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int46 = annotation45.end;
        int int47 = annotation45.begin;
        pignlproc.markup.Annotation[] annotationArray48 = new pignlproc.markup.Annotation[] { annotation40, annotation45 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList49 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList49, annotationArray48);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser51 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList52 = annotatingMarkupParser51.getHeaders();
        java.util.List<java.lang.String> strList53 = annotatingMarkupParser51.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList54 = annotatingMarkupParser51.getHeaderAnnotations();
        java.lang.String str55 = annotatingMarkupParser51.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser56 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList57 = annotatingMarkupParser56.getHeaders();
        java.util.List<java.lang.String> strList58 = annotatingMarkupParser56.getHeaders();
        java.lang.Appendable appendable59 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable60 = annotatingMarkupParser56.new CountingAppendable(appendable59);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable61 = annotatingMarkupParser51.new CountingAppendable((java.lang.Appendable) countingAppendable60);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser62 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList63 = annotatingMarkupParser62.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel65 = annotatingMarkupParser62.makeWikiModel("title");
        annotatingMarkupParser33.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList49, (java.lang.Appendable) countingAppendable60, (info.bliki.wiki.model.IWikiModel) wikiModel65);
        annotatingMarkupParser16.nodesToText(annotationList21, (java.lang.Appendable) countingAppendable32, (info.bliki.wiki.model.IWikiModel) wikiModel65);
        countingAppendable32.currentPosition = ' ';
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser70 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList71 = annotatingMarkupParser70.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel73 = annotatingMarkupParser70.makeWikiModel("title");
        annotatingMarkupParser2.nodesToText(annotationList15, (java.lang.Appendable) countingAppendable32, (info.bliki.wiki.model.IWikiModel) wikiModel73);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable75 = annotatingMarkupParser1.new CountingAppendable((java.lang.Appendable) countingAppendable32);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable79 = countingAppendable75.append((java.lang.CharSequence) "\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/hi%21\"", 100, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(annotationList9);
        org.junit.Assert.assertNotNull(annotationList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertNotNull(annotationList14);
        org.junit.Assert.assertNotNull(annotationList15);
        org.junit.Assert.assertNotNull(annotationList17);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(annotationList20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(annotationList25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(annotationList34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNotNull(annotationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(annotationList54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(annotationList63);
        org.junit.Assert.assertNotNull(wikiModel65);
        org.junit.Assert.assertNotNull(annotationList71);
        org.junit.Assert.assertNotNull(wikiModel73);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("opennlp / en - sent . bin");
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/%22title%22href\"", false);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        info.bliki.wiki.model.WikiModel wikiModel12 = annotatingMarkupParser0.makeWikiModel("\"hi!\"\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser13 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList14 = annotatingMarkupParser13.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser15 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser15.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList17 = annotatingMarkupParser15.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser15.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser19.getHeaders();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser19.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList22 = annotatingMarkupParser19.getHeaderAnnotations();
        java.lang.String str23 = annotatingMarkupParser19.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser24 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser24.getHeaders();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser24.getHeaders();
        java.lang.Appendable appendable27 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable28 = annotatingMarkupParser24.new CountingAppendable(appendable27);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable29 = annotatingMarkupParser19.new CountingAppendable((java.lang.Appendable) countingAppendable28);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser30 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList31 = annotatingMarkupParser30.getHeaderAnnotations();
        java.lang.String str32 = annotatingMarkupParser30.getRedirect();
        pignlproc.markup.Annotation annotation37 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation42 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int43 = annotation42.end;
        int int44 = annotation42.begin;
        pignlproc.markup.Annotation[] annotationArray45 = new pignlproc.markup.Annotation[] { annotation37, annotation42 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList46 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList46, annotationArray45);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser48 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList49 = annotatingMarkupParser48.getHeaders();
        java.util.List<java.lang.String> strList50 = annotatingMarkupParser48.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList51 = annotatingMarkupParser48.getHeaderAnnotations();
        java.lang.String str52 = annotatingMarkupParser48.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser53 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList54 = annotatingMarkupParser53.getHeaders();
        java.util.List<java.lang.String> strList55 = annotatingMarkupParser53.getHeaders();
        java.lang.Appendable appendable56 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable57 = annotatingMarkupParser53.new CountingAppendable(appendable56);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable58 = annotatingMarkupParser48.new CountingAppendable((java.lang.Appendable) countingAppendable57);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser59 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList60 = annotatingMarkupParser59.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel62 = annotatingMarkupParser59.makeWikiModel("title");
        annotatingMarkupParser30.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList46, (java.lang.Appendable) countingAppendable57, (info.bliki.wiki.model.IWikiModel) wikiModel62);
        annotatingMarkupParser13.nodesToText(annotationList18, (java.lang.Appendable) countingAppendable29, (info.bliki.wiki.model.IWikiModel) wikiModel62);
        int int65 = countingAppendable29.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable66 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable29);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser67 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList68 = annotatingMarkupParser67.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList69 = annotatingMarkupParser67.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList70 = annotatingMarkupParser67.getParagraphAnnotations();
        java.util.List<java.lang.String> strList71 = annotatingMarkupParser67.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList72 = annotatingMarkupParser67.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser73 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList74 = annotatingMarkupParser73.getHeaderAnnotations();
        java.util.List<java.lang.String> strList75 = annotatingMarkupParser73.getParagraphs();
        java.lang.Appendable appendable76 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable77 = annotatingMarkupParser73.new CountingAppendable(appendable76);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable78 = annotatingMarkupParser67.new CountingAppendable((java.lang.Appendable) countingAppendable77);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable79 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable77);
        java.util.List<java.lang.String> strList80 = annotatingMarkupParser0.getParagraphs();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(wikiModel12);
        org.junit.Assert.assertNotNull(annotationList14);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(annotationList17);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(annotationList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNotNull(annotationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(annotationList51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(annotationList60);
        org.junit.Assert.assertNotNull(wikiModel62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNotNull(annotationList69);
        org.junit.Assert.assertNotNull(annotationList70);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNotNull(annotationList72);
        org.junit.Assert.assertNotNull(annotationList74);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNotNull(strList80);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract((int) (short) 100);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        java.lang.String[] strArray5 = uriStringLiteralNTriplesLoader2.getPartitionKeys("href", job4);
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = uriStringLiteralNTriplesLoader2.getSchema("hi !", job7);
        org.apache.pig.Expression expression9 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression9);
        org.junit.Assert.assertNull(strArray5);
        org.junit.Assert.assertNotNull(resourceSchema8);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract3 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum5 = null;
        checkAbstract3.warn("http://.wikipedia.org/wiki/hi%21", enum5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        checkAbstract3.setPigLogger(pigLogger7);
        checkAbstract3.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText10 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        safeTsvText10.setPigLogger(pigLogger11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = mergeAsOpenNLPAnnotatedText13.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract15.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = safeTsvText10.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract3.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = concatTextBag2.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = sentencesWithLink0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = null;
        sentencesWithLink0.setPigLogger(pigLogger23);
        java.lang.reflect.Type type25 = sentencesWithLink0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable26 = sentencesWithLink0.getReporter();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList27 = sentencesWithLink0.getArgToFuncMapping();
        boolean boolean28 = sentencesWithLink0.isAsynchronous();
        org.junit.Assert.assertNull(pigProgressable14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNull(pigProgressable26);
        org.junit.Assert.assertNull(funcSpecList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        pignlproc.markup.Annotation annotation8 = new pignlproc.markup.Annotation(10, 10, "title", "hi !");
        pignlproc.markup.Annotation annotation13 = new pignlproc.markup.Annotation((int) (byte) 1, (-1), "wikiobject", "href");
        pignlproc.markup.Annotation annotation18 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation23 = new pignlproc.markup.Annotation(10, 10, "title", "hi !");
        pignlproc.markup.Annotation annotation28 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        java.lang.String str29 = annotation28.label;
        java.lang.String str30 = annotation28.label;
        pignlproc.markup.Annotation annotation35 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        java.lang.String str36 = annotation35.label;
        java.lang.String str37 = annotation35.label;
        java.lang.String str38 = annotation35.value;
        pignlproc.markup.Annotation[] annotationArray39 = new pignlproc.markup.Annotation[] { annotation8, annotation13, annotation18, annotation23, annotation28, annotation35 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList40 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList40, annotationArray39);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser42 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList43 = annotatingMarkupParser42.getHeaders();
        java.util.List<java.lang.String> strList44 = annotatingMarkupParser42.getHeaders();
        java.lang.Appendable appendable45 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable46 = annotatingMarkupParser42.new CountingAppendable(appendable45);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser47 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList48 = annotatingMarkupParser47.getHeaderAnnotations();
        java.lang.String str49 = annotatingMarkupParser47.getRedirect();
        pignlproc.markup.Annotation annotation54 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation59 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int60 = annotation59.end;
        int int61 = annotation59.begin;
        pignlproc.markup.Annotation[] annotationArray62 = new pignlproc.markup.Annotation[] { annotation54, annotation59 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList63 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList63, annotationArray62);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser65 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList66 = annotatingMarkupParser65.getHeaders();
        java.util.List<java.lang.String> strList67 = annotatingMarkupParser65.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList68 = annotatingMarkupParser65.getHeaderAnnotations();
        java.lang.String str69 = annotatingMarkupParser65.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser70 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList71 = annotatingMarkupParser70.getHeaders();
        java.util.List<java.lang.String> strList72 = annotatingMarkupParser70.getHeaders();
        java.lang.Appendable appendable73 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable74 = annotatingMarkupParser70.new CountingAppendable(appendable73);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable75 = annotatingMarkupParser65.new CountingAppendable((java.lang.Appendable) countingAppendable74);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser76 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList77 = annotatingMarkupParser76.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel79 = annotatingMarkupParser76.makeWikiModel("title");
        annotatingMarkupParser47.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList63, (java.lang.Appendable) countingAppendable74, (info.bliki.wiki.model.IWikiModel) wikiModel79);
        annotatingMarkupParser0.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList40, appendable45, (info.bliki.wiki.model.IWikiModel) wikiModel79);
        java.util.List<pignlproc.markup.Annotation> annotationList82 = annotatingMarkupParser0.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser83 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList84 = annotatingMarkupParser83.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList85 = annotatingMarkupParser83.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList86 = annotatingMarkupParser83.getParagraphAnnotations();
        java.util.List<java.lang.String> strList87 = annotatingMarkupParser83.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList88 = annotatingMarkupParser83.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser89 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList90 = annotatingMarkupParser89.getHeaderAnnotations();
        java.util.List<java.lang.String> strList91 = annotatingMarkupParser89.getParagraphs();
        java.lang.Appendable appendable92 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable93 = annotatingMarkupParser89.new CountingAppendable(appendable92);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable94 = annotatingMarkupParser83.new CountingAppendable((java.lang.Appendable) countingAppendable93);
        countingAppendable93.currentPosition = 35;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable97 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable93);
        info.bliki.wiki.model.WikiModel wikiModel99 = annotatingMarkupParser0.makeWikiModel("http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin");
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "title" + "'", str29, "title");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "title" + "'", str30, "title");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "title" + "'", str36, "title");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "title" + "'", str37, "title");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(annotationList48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertNotNull(annotationArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNotNull(annotationList68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(annotationList77);
        org.junit.Assert.assertNotNull(wikiModel79);
        org.junit.Assert.assertNotNull(annotationList82);
        org.junit.Assert.assertNotNull(strList84);
        org.junit.Assert.assertNotNull(annotationList85);
        org.junit.Assert.assertNotNull(annotationList86);
        org.junit.Assert.assertNotNull(strList87);
        org.junit.Assert.assertNotNull(annotationList88);
        org.junit.Assert.assertNotNull(annotationList90);
        org.junit.Assert.assertNotNull(strList91);
        org.junit.Assert.assertNotNull(wikiModel99);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://\"title\".wikipedia.org/wiki/%22hi%21%22", "http://.wikipedia.org/wiki/", "http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22");
        org.apache.pig.data.Tuple tuple4 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer3.putNext(tuple4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = checkAbstract0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        checkAbstract0.setReporter(pigProgressable5);
        boolean boolean7 = checkAbstract0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = null;
        checkAbstract0.setReporter(pigProgressable8);
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str2 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.Annotation annotation7 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation12 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int13 = annotation12.end;
        int int14 = annotation12.begin;
        pignlproc.markup.Annotation[] annotationArray15 = new pignlproc.markup.Annotation[] { annotation7, annotation12 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList16 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList16, annotationArray15);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser18 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList19 = annotatingMarkupParser18.getHeaders();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser18.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser18.getHeaderAnnotations();
        java.lang.String str22 = annotatingMarkupParser18.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser23 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList24 = annotatingMarkupParser23.getHeaders();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser23.getHeaders();
        java.lang.Appendable appendable26 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable27 = annotatingMarkupParser23.new CountingAppendable(appendable26);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable28 = annotatingMarkupParser18.new CountingAppendable((java.lang.Appendable) countingAppendable27);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser29 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList30 = annotatingMarkupParser29.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel32 = annotatingMarkupParser29.makeWikiModel("title");
        annotatingMarkupParser0.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList16, (java.lang.Appendable) countingAppendable27, (info.bliki.wiki.model.IWikiModel) wikiModel32);
        java.util.List<pignlproc.markup.Annotation> annotationList34 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<java.lang.String> strList35 = annotatingMarkupParser0.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList36 = annotatingMarkupParser0.getHeaderAnnotations();
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(annotationArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(annotationList30);
        org.junit.Assert.assertNotNull(wikiModel32);
        org.junit.Assert.assertNotNull(annotationList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(annotationList36);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPaths(job0, "http://\"http://.wikipedia.org/wiki/hi%21\"\n\n.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.setInputPaths(job0, "\"\"\" http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522 \"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Relative path in absolute URI: \"\"\" http :%20/%20hi%20!%20.%20wikipedia%20.%20org%20/%20wiki%20/%20http%20%25%203%20A%20%25%202%20F%20%25%202%20Fhttp%20%25%203%20A%20%25%202%20F%20%25%202%20F%20.%20wikipedia%20.%20org%20%25%202%20Fwiki%20%25%202%20Fhi%20%25%202521%20%25%200%20A%20.%20wikipedia%20.%20org%20%25%202%20Fwiki%20%25%202%20F%20%25%202522%20title%20%25%202522%20%22%22%22");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum2 = null;
        safeTsvText0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = safeTsvText0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        safeTsvText0.setReporter(pigProgressable5);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink7 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList8 = sentencesWithLink7.getArgToFuncMapping();
        pignlproc.evaluation.CheckAbstract checkAbstract9 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum11 = null;
        checkAbstract9.warn("http://.wikipedia.org/wiki/hi%21", enum11);
        java.lang.Enum enum14 = null;
        checkAbstract9.warn("hi !", enum14);
        pignlproc.evaluation.NoLoopInPath noLoopInPath16 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText17 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger18 = null;
        safeTsvText17.setPigLogger(pigLogger18);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText20 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable21 = mergeAsOpenNLPAnnotatedText20.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract22 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = checkAbstract22.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = mergeAsOpenNLPAnnotatedText20.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = safeTsvText17.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = noLoopInPath16.outputSchema(schema25);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag28 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText29 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = null;
        safeTsvText29.setPigLogger(pigLogger30);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText32 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable33 = mergeAsOpenNLPAnnotatedText32.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract34 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = checkAbstract34.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = mergeAsOpenNLPAnnotatedText32.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = safeTsvText29.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = aggregateTextBag28.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = noLoopInPath16.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = checkAbstract9.outputSchema(schema40);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = sentencesWithLink7.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = safeTsvText0.outputSchema(schema41);
        java.lang.reflect.Type type44 = safeTsvText0.getReturnType();
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNull(funcSpecList8);
        org.junit.Assert.assertNull(pigProgressable21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(pigProgressable33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(type44);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        java.lang.String str1 = pignlproc.evaluation.SafeTsvText.escape("http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/href\"" + "'", str1, "\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/href\"");
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract("http://.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"http://.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("\"title\"", job3);
        org.apache.pig.Expression expression5 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression5);
        org.junit.Assert.assertNotNull(resourceSchema4);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        parsingWikipediaLoader1.setUDFContextSignature("hi !");
        org.apache.pig.Expression expression4 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression4);
        org.apache.hadoop.mapreduce.RecordReader recordReader6 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit7 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader6, pigSplit7);
        org.apache.hadoop.fs.Path path10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = parsingWikipediaLoader1.relativeToAbsolutePath("\"\"\"opennlp / en - sent . bin\"\" \"", path10);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"\"\"opennlp / en - sent . bin\"\" \" curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        pignlproc.evaluation.ConcatTextBag concatTextBag0 = new pignlproc.evaluation.ConcatTextBag();
        org.apache.pig.data.Tuple tuple1 = null;
        java.lang.String str2 = concatTextBag0.exec(tuple1);
        concatTextBag0.progress();
        boolean boolean4 = concatTextBag0.isAsynchronous();
        boolean boolean5 = concatTextBag0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = concatTextBag0.getPigLogger();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(pigLogger6);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("titlehref");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriStringLiteralNTriplesStorer1.getOutputFormat();
        org.apache.pig.data.Tuple tuple3 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.putNext(tuple3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat2);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.lang.Appendable appendable3 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable4 = annotatingMarkupParser0.new CountingAppendable(appendable3);
        java.lang.String str6 = annotatingMarkupParser0.parse("");
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser0.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser8 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList9 = annotatingMarkupParser8.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel11 = annotatingMarkupParser8.makeWikiModel("title");
        java.util.List<pignlproc.markup.Annotation> annotationList12 = annotatingMarkupParser8.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList13 = annotatingMarkupParser8.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList15 = annotatingMarkupParser14.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser16 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList17 = annotatingMarkupParser16.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser16.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList19 = annotatingMarkupParser16.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser20 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser20.getHeaders();
        java.util.List<java.lang.String> strList22 = annotatingMarkupParser20.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList23 = annotatingMarkupParser20.getHeaderAnnotations();
        java.lang.String str24 = annotatingMarkupParser20.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser25 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser25.getHeaders();
        java.util.List<java.lang.String> strList27 = annotatingMarkupParser25.getHeaders();
        java.lang.Appendable appendable28 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable29 = annotatingMarkupParser25.new CountingAppendable(appendable28);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable30 = annotatingMarkupParser20.new CountingAppendable((java.lang.Appendable) countingAppendable29);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser31 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList32 = annotatingMarkupParser31.getHeaderAnnotations();
        java.lang.String str33 = annotatingMarkupParser31.getRedirect();
        pignlproc.markup.Annotation annotation38 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation43 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int44 = annotation43.end;
        int int45 = annotation43.begin;
        pignlproc.markup.Annotation[] annotationArray46 = new pignlproc.markup.Annotation[] { annotation38, annotation43 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList47 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList47, annotationArray46);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser49 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList50 = annotatingMarkupParser49.getHeaders();
        java.util.List<java.lang.String> strList51 = annotatingMarkupParser49.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList52 = annotatingMarkupParser49.getHeaderAnnotations();
        java.lang.String str53 = annotatingMarkupParser49.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser54 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList55 = annotatingMarkupParser54.getHeaders();
        java.util.List<java.lang.String> strList56 = annotatingMarkupParser54.getHeaders();
        java.lang.Appendable appendable57 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable58 = annotatingMarkupParser54.new CountingAppendable(appendable57);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable59 = annotatingMarkupParser49.new CountingAppendable((java.lang.Appendable) countingAppendable58);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser60 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList61 = annotatingMarkupParser60.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel63 = annotatingMarkupParser60.makeWikiModel("title");
        annotatingMarkupParser31.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList47, (java.lang.Appendable) countingAppendable58, (info.bliki.wiki.model.IWikiModel) wikiModel63);
        annotatingMarkupParser14.nodesToText(annotationList19, (java.lang.Appendable) countingAppendable30, (info.bliki.wiki.model.IWikiModel) wikiModel63);
        countingAppendable30.currentPosition = ' ';
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser68 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList69 = annotatingMarkupParser68.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel71 = annotatingMarkupParser68.makeWikiModel("title");
        annotatingMarkupParser0.nodesToText(annotationList13, (java.lang.Appendable) countingAppendable30, (info.bliki.wiki.model.IWikiModel) wikiModel71);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable74 = countingAppendable30.append('a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNotNull(annotationList9);
        org.junit.Assert.assertNotNull(wikiModel11);
        org.junit.Assert.assertNotNull(annotationList12);
        org.junit.Assert.assertNotNull(annotationList13);
        org.junit.Assert.assertNotNull(annotationList15);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNotNull(annotationList19);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(annotationList23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(annotationList32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNotNull(annotationArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(annotationList52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(annotationList61);
        org.junit.Assert.assertNotNull(wikiModel63);
        org.junit.Assert.assertNotNull(annotationList69);
        org.junit.Assert.assertNotNull(wikiModel71);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("hi !\n");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriUriNTriplesStorer1.getOutputFormat();
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader4 = new pignlproc.storage.ParsingWikipediaLoader("href");
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = parsingWikipediaLoader4.getSchema("opennlp/en-sent.bin", job6);
        uriUriNTriplesStorer1.checkSchema(resourceSchema7);
        org.apache.pig.data.Tuple tuple9 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer1.putNext(tuple9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat2);
        org.junit.Assert.assertNotNull(resourceSchema7);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        org.apache.hadoop.mapreduce.Job job1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.StoreFunc.cleanupOnFailureImpl("\"\"\"hi!\"\" \"", job1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        java.lang.String[] strArray1 = new java.lang.String[] { "opennlp/en-sent.bin" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String str5 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "");
        java.lang.String str7 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22");
        java.lang.String str9 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"\n");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "opennlp/en-sent.bin" + "'", str5, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "opennlp/en-sent.bin" + "'", str7, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "opennlp/en-sent.bin" + "'", str9, "opennlp/en-sent.bin");
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("hi !");
        org.apache.pig.Expression expression2 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression2);
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceStatistics resourceStatistics6 = parsingWikipediaLoader1.getStatistics("hi!\n", job5);
        org.apache.hadoop.mapreduce.InputFormat inputFormat7 = parsingWikipediaLoader1.getInputFormat();
        org.apache.hadoop.mapreduce.Job job9 = null;
        org.apache.pig.ResourceSchema resourceSchema10 = parsingWikipediaLoader1.getSchema("http://\"http://.wikipedia.org/wiki/hi%21\"\n\n.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22", job9);
        org.apache.hadoop.mapreduce.InputFormat inputFormat11 = parsingWikipediaLoader1.getInputFormat();
        org.junit.Assert.assertNull(resourceStatistics6);
        org.junit.Assert.assertNotNull(inputFormat7);
        org.junit.Assert.assertNotNull(resourceSchema10);
        org.junit.Assert.assertNotNull(inputFormat11);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("hi!");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser2 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser2.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList4 = annotatingMarkupParser2.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser2.getParagraphAnnotations();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser2.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser2.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser8 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList9 = annotatingMarkupParser8.getHeaderAnnotations();
        java.util.List<java.lang.String> strList10 = annotatingMarkupParser8.getParagraphs();
        java.lang.Appendable appendable11 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable12 = annotatingMarkupParser8.new CountingAppendable(appendable11);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable13 = annotatingMarkupParser2.new CountingAppendable((java.lang.Appendable) countingAppendable12);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable14 = annotatingMarkupParser1.new CountingAppendable((java.lang.Appendable) countingAppendable12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable18 = countingAppendable14.append((java.lang.CharSequence) "\"hi! \"\n", 32, 52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(annotationList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNotNull(annotationList9);
        org.junit.Assert.assertNotNull(strList10);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        org.apache.hadoop.fs.Path path1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.apache.pig.LoadFunc.getAbsolutePath("\"title\"\n\n", path1);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"title\"?? curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522");
        org.apache.hadoop.mapreduce.Job job3 = null;
        // The following exception was thrown during execution in test generation
        try {
            parsingWikipediaLoader1.setLocation("http://\"http://.wikipedia.org/wiki/hi%21\"\n\n.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22", job3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract3 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum5 = null;
        checkAbstract3.warn("http://.wikipedia.org/wiki/hi%21", enum5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        checkAbstract3.setPigLogger(pigLogger7);
        checkAbstract3.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText10 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        safeTsvText10.setPigLogger(pigLogger11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = mergeAsOpenNLPAnnotatedText13.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract15.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = safeTsvText10.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract3.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = concatTextBag2.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = sentencesWithLink0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = null;
        sentencesWithLink0.setPigLogger(pigLogger23);
        java.lang.reflect.Type type25 = sentencesWithLink0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable26 = sentencesWithLink0.getReporter();
        java.lang.Enum enum28 = null;
        sentencesWithLink0.warn("\"opennlp/en-sent.bin\"", enum28);
        java.lang.reflect.Type type30 = sentencesWithLink0.getReturnType();
        pignlproc.evaluation.AggregateTextBag aggregateTextBag33 = new pignlproc.evaluation.AggregateTextBag((int) '#', false);
        pignlproc.evaluation.SafeTsvText safeTsvText34 = new pignlproc.evaluation.SafeTsvText();
        java.lang.reflect.Type type35 = safeTsvText34.getReturnType();
        pignlproc.evaluation.CheckAbstract checkAbstract36 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = checkAbstract36.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = safeTsvText34.outputSchema(schema38);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = aggregateTextBag33.outputSchema(schema38);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = sentencesWithLink0.outputSchema(schema38);
        org.junit.Assert.assertNull(pigProgressable14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNull(pigProgressable26);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("http://.wikipedia.org/wiki/hi%21\n", "wikiobject", "hi!");
        uriUriNTriplesStorer3.setStoreFuncUDFContextSignature("\"http://.wikipedia.org/wiki/hi%21\"\n");
        org.apache.hadoop.mapreduce.Job job7 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer3.setStoreLocation("\"\"\" http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522 \"\"\"", job7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((-1), false);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = null;
        aggregateTextBag2.setReporter(pigProgressable3);
        org.apache.commons.logging.Log log5 = aggregateTextBag2.getLogger();
        aggregateTextBag2.finish();
        org.junit.Assert.assertNotNull(log5);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPaths(job0, "http://\"\"\"http://.wikipedia.org/wiki/hi%21\"\" \".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi%21.wikipedia.org%2Fwiki%2F%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("hi !\n\n", "\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\"", "hi!\n\n");
        org.apache.pig.Expression expression4 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression4);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = checkAbstract0.getReporter();
        boolean boolean4 = checkAbstract0.isAsynchronous();
        checkAbstract0.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = null;
        checkAbstract0.setReporter(pigProgressable6);
        checkAbstract0.finish();
        org.apache.pig.data.Tuple tuple9 = null;
        java.lang.Boolean boolean10 = checkAbstract0.exec(tuple9);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + boolean10 + "' != '" + false + "'", boolean10, false);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        org.apache.hadoop.fs.Path path1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.apache.pig.LoadFunc.getAbsolutePath("http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21\n", path1);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21? curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22");
        org.apache.pig.data.Tuple tuple2 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer1.putNext(tuple2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (short) -1, (-1), "hi!", "href");
        int int5 = annotation4.begin;
        int int6 = annotation4.end;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("http://.wikipedia.org/wiki/hi%21");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriUriNTriplesStorer1.getOutputFormat();
        uriUriNTriplesStorer1.setStoreFuncUDFContextSignature("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21");
        uriUriNTriplesStorer1.setStoreFuncUDFContextSignature("\" title \"");
        org.apache.hadoop.fs.Path path8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = uriUriNTriplesStorer1.relToAbsPathForStoreLocation("hi !\n", path8);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: hi !? curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat2);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag1 = new pignlproc.evaluation.AggregateTextBag((int) (short) 100);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract((int) (short) 10);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable2 = checkAbstract1.getReporter();
        checkAbstract1.progress();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList4 = checkAbstract1.getArgToFuncMapping();
        org.junit.Assert.assertNull(pigProgressable2);
        org.junit.Assert.assertNull(funcSpecList4);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract(35);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList2 = checkAbstract1.getArgToFuncMapping();
        org.junit.Assert.assertNull(funcSpecList2);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("\"\"\"opennlp / en - sent . bin\"\" \"");
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        noLoopInPath0.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = noLoopInPath0.getPigLogger();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass3 = pigLogger2.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigLogger2);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getWikiLinkAnnotations();
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (short) 100, 52, "http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href", "http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin");
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("title");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = concatTextBag1.getPigLogger();
        org.junit.Assert.assertNull(pigLogger2);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader0 = new pignlproc.storage.UriUriNTriplesLoader();
        org.apache.hadoop.mapreduce.Job job2 = null;
        org.apache.pig.ResourceStatistics resourceStatistics3 = uriUriNTriplesLoader0.getStatistics("wikiobject", job2);
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceStatistics resourceStatistics6 = uriUriNTriplesLoader0.getStatistics("\"opennlp / en - sent . bin\"", job5);
        org.apache.hadoop.fs.Path path8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = uriUriNTriplesLoader0.relativeToAbsolutePath("hi!", path8);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: hi! curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics3);
        org.junit.Assert.assertNull(resourceStatistics6);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.commons.logging.Log log4 = checkAbstract0.getLogger();
        org.apache.pig.data.Tuple tuple5 = null;
        java.lang.Boolean boolean6 = checkAbstract0.exec(tuple5);
        org.apache.commons.logging.Log log7 = checkAbstract0.getLogger();
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + false + "'", boolean6, false);
        org.junit.Assert.assertNotNull(log7);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("http://hi!\n.wikipedia.org/wiki/%22_title_%22");
        java.lang.Enum enum3 = null;
        concatTextBag1.warn("http://.wikipedia.org/wiki/hi%21", enum3);
        java.lang.Enum enum6 = null;
        concatTextBag1.warn("hi !\n\n", enum6);
        java.lang.reflect.Type type8 = concatTextBag1.getReturnType();
        java.lang.Enum enum10 = null;
        concatTextBag1.warn("http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522", enum10);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("");
        mergeAsOpenNLPAnnotatedText13.progress();
        boolean boolean15 = mergeAsOpenNLPAnnotatedText13.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText17 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray19 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList20 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList20, spanArray19);
        java.lang.String str22 = mergeAsOpenNLPAnnotatedText17.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList20);
        java.lang.String str23 = mergeAsOpenNLPAnnotatedText13.merge("http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522", (java.util.List<opennlp.tools.util.Span>) spanList20);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink24 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        sentencesWithLink24.setPigLogger(pigLogger25);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList27 = sentencesWithLink24.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger28 = sentencesWithLink24.getPigLogger();
        boolean boolean29 = sentencesWithLink24.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText30 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable31 = mergeAsOpenNLPAnnotatedText30.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract32 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = checkAbstract32.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = mergeAsOpenNLPAnnotatedText30.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = sentencesWithLink24.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = concatTextBag1.outputSchema(schema37);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(spanArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "href" + "'", str22, "href");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522" + "'", str23, "http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522");
        org.junit.Assert.assertNull(funcSpecList27);
        org.junit.Assert.assertNull(pigLogger28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(pigProgressable31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag(1, false);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPaths(job0, "\"http://.wikipedia.org/wiki/hi%21\"\n");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Illegal character in scheme name at index 0: \"http://.wikipedia.org/wiki/hi%2521%22%0A");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        checkAbstract0.setReporter(pigProgressable4);
        org.apache.pig.data.Tuple tuple6 = null;
        java.lang.Boolean boolean7 = checkAbstract0.exec(tuple6);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = checkAbstract0.getPigLogger();
        org.junit.Assert.assertEquals("'" + boolean7 + "' != '" + false + "'", boolean7, false);
        org.junit.Assert.assertNull(pigLogger8);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("hi!");
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser1.getHeaderAnnotations();
        org.junit.Assert.assertNotNull(annotationList2);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = parsingWikipediaLoader1.getSchema("\"hi!\"", job6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        org.apache.pig.ResourceSchema resourceSchema10 = parsingWikipediaLoader1.getSchema("\"hi!\"\n", job9);
        pignlproc.evaluation.NoLoopInPath noLoopInPath12 = new pignlproc.evaluation.NoLoopInPath("wikiobject");
        boolean boolean13 = noLoopInPath12.isAsynchronous();
        pignlproc.evaluation.NoLoopInPath noLoopInPath14 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText15 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = null;
        safeTsvText15.setPigLogger(pigLogger16);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText18 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = mergeAsOpenNLPAnnotatedText18.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = checkAbstract20.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = mergeAsOpenNLPAnnotatedText18.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = safeTsvText15.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = noLoopInPath14.outputSchema(schema23);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink26 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.NoLoopInPath noLoopInPath27 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText28 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger29 = null;
        safeTsvText28.setPigLogger(pigLogger29);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText31 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable32 = mergeAsOpenNLPAnnotatedText31.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract33 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = checkAbstract33.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = mergeAsOpenNLPAnnotatedText31.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = safeTsvText28.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = noLoopInPath27.outputSchema(schema36);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag39 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText40 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger41 = null;
        safeTsvText40.setPigLogger(pigLogger41);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText43 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable44 = mergeAsOpenNLPAnnotatedText43.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract45 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = checkAbstract45.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = mergeAsOpenNLPAnnotatedText43.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = safeTsvText40.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = aggregateTextBag39.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = noLoopInPath27.outputSchema(schema48);
        pignlproc.evaluation.CheckAbstract checkAbstract52 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum54 = null;
        checkAbstract52.warn("http://.wikipedia.org/wiki/hi%21", enum54);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger56 = null;
        checkAbstract52.setPigLogger(pigLogger56);
        checkAbstract52.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText59 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger60 = null;
        safeTsvText59.setPigLogger(pigLogger60);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText62 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable63 = mergeAsOpenNLPAnnotatedText62.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract64 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = checkAbstract64.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = mergeAsOpenNLPAnnotatedText62.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = safeTsvText59.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = checkAbstract52.outputSchema(schema68);
        org.apache.pig.impl.logicalLayer.schema.Schema schema70 = noLoopInPath27.outputSchema(schema69);
        org.apache.pig.impl.logicalLayer.schema.Schema schema71 = sentencesWithLink26.outputSchema(schema70);
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = noLoopInPath14.outputSchema(schema70);
        org.apache.pig.impl.logicalLayer.schema.Schema schema73 = noLoopInPath12.outputSchema(schema72);
        pignlproc.evaluation.CheckAbstract checkAbstract74 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum76 = null;
        checkAbstract74.warn("http://.wikipedia.org/wiki/hi%21", enum76);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable78 = checkAbstract74.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable79 = null;
        checkAbstract74.setReporter(pigProgressable79);
        boolean boolean81 = checkAbstract74.isAsynchronous();
        org.apache.pig.data.Tuple tuple82 = null;
        java.lang.Boolean boolean83 = checkAbstract74.exec(tuple82);
        checkAbstract74.progress();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<opennlp.tools.util.Span> spanList85 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) resourceSchema10, (java.lang.Object) noLoopInPath12, (java.lang.Object) checkAbstract74);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.pig.ResourceSchema cannot be cast to java.lang.Integer");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNotNull(resourceSchema7);
        org.junit.Assert.assertNotNull(resourceSchema10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(pigProgressable19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(pigProgressable32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(pigProgressable44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(pigProgressable63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(pigProgressable78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + boolean83 + "' != '" + false + "'", boolean83, false);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriStringLiteralNTriplesStorer1.getOutputFormat();
        org.apache.hadoop.fs.Path path4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = uriStringLiteralNTriplesStorer1.relToAbsPathForStoreLocation("hi !\n", path4);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: hi !? curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat2);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum2 = null;
        safeTsvText0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = safeTsvText0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        safeTsvText0.setReporter(pigProgressable5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = null;
        safeTsvText0.setReporter(pigProgressable7);
        boolean boolean9 = safeTsvText0.isAsynchronous();
        java.lang.Enum enum11 = null;
        safeTsvText0.warn("\"title\"\n", enum11);
        pignlproc.evaluation.ConcatTextBag concatTextBag14 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum17 = null;
        checkAbstract15.warn("http://.wikipedia.org/wiki/hi%21", enum17);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger19 = null;
        checkAbstract15.setPigLogger(pigLogger19);
        checkAbstract15.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText22 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = null;
        safeTsvText22.setPigLogger(pigLogger23);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText25 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable26 = mergeAsOpenNLPAnnotatedText25.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract27 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = checkAbstract27.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = mergeAsOpenNLPAnnotatedText25.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = safeTsvText22.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = checkAbstract15.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = concatTextBag14.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = safeTsvText0.outputSchema(schema32);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink35 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger36 = null;
        sentencesWithLink35.setPigLogger(pigLogger36);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable38 = sentencesWithLink35.getReporter();
        java.lang.reflect.Type type39 = sentencesWithLink35.getReturnType();
        pignlproc.evaluation.SafeTsvText safeTsvText40 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger41 = null;
        safeTsvText40.setPigLogger(pigLogger41);
        safeTsvText40.finish();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink44 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.NoLoopInPath noLoopInPath45 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText46 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger47 = null;
        safeTsvText46.setPigLogger(pigLogger47);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText49 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable50 = mergeAsOpenNLPAnnotatedText49.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract51 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = checkAbstract51.outputSchema(schema52);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = mergeAsOpenNLPAnnotatedText49.outputSchema(schema52);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = safeTsvText46.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = noLoopInPath45.outputSchema(schema54);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag57 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText58 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger59 = null;
        safeTsvText58.setPigLogger(pigLogger59);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText61 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable62 = mergeAsOpenNLPAnnotatedText61.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract63 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = checkAbstract63.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = mergeAsOpenNLPAnnotatedText61.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = safeTsvText58.outputSchema(schema66);
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = aggregateTextBag57.outputSchema(schema66);
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = noLoopInPath45.outputSchema(schema66);
        pignlproc.evaluation.CheckAbstract checkAbstract70 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum72 = null;
        checkAbstract70.warn("http://.wikipedia.org/wiki/hi%21", enum72);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger74 = null;
        checkAbstract70.setPigLogger(pigLogger74);
        checkAbstract70.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText77 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger78 = null;
        safeTsvText77.setPigLogger(pigLogger78);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText80 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable81 = mergeAsOpenNLPAnnotatedText80.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract82 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema83 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema84 = checkAbstract82.outputSchema(schema83);
        org.apache.pig.impl.logicalLayer.schema.Schema schema85 = mergeAsOpenNLPAnnotatedText80.outputSchema(schema83);
        org.apache.pig.impl.logicalLayer.schema.Schema schema86 = safeTsvText77.outputSchema(schema85);
        org.apache.pig.impl.logicalLayer.schema.Schema schema87 = checkAbstract70.outputSchema(schema86);
        org.apache.pig.impl.logicalLayer.schema.Schema schema88 = noLoopInPath45.outputSchema(schema87);
        org.apache.pig.impl.logicalLayer.schema.Schema schema89 = sentencesWithLink44.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema90 = safeTsvText40.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema91 = sentencesWithLink35.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema92 = safeTsvText0.outputSchema(schema88);
        org.apache.pig.data.Tuple tuple93 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str94 = safeTsvText0.exec(tuple93);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in SafeTsvText");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(pigProgressable26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(pigProgressable38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNull(pigProgressable50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(pigProgressable62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(pigProgressable81);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.setInputPaths(job0, "\"\"\"opennlp / en - sent . bin\"\" \"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (byte) 0, (int) 'a', "http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21", "\"hi!\"\n");
        int int5 = annotation4.begin;
        int int6 = annotation4.begin;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"");
        org.apache.hadoop.mapreduce.Job job3 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.setStoreLocation("\"\"", job3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable1 = mergeAsOpenNLPAnnotatedText0.getReporter();
        java.lang.Enum enum3 = null;
        mergeAsOpenNLPAnnotatedText0.warn("title", enum3);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList5 = mergeAsOpenNLPAnnotatedText0.getArgToFuncMapping();
        org.apache.commons.logging.Log log6 = mergeAsOpenNLPAnnotatedText0.getLogger();
        mergeAsOpenNLPAnnotatedText0.progress();
        org.junit.Assert.assertNull(pigProgressable1);
        org.junit.Assert.assertNull(funcSpecList5);
        org.junit.Assert.assertNotNull(log6);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag12 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText13 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        safeTsvText13.setPigLogger(pigLogger14);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText16.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = safeTsvText13.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = aggregateTextBag12.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = noLoopInPath0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        noLoopInPath0.setPigLogger(pigLogger25);
        org.apache.pig.data.Tuple tuple27 = null;
        java.lang.Boolean boolean28 = noLoopInPath0.exec(tuple27);
        noLoopInPath0.finish();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable30 = null;
        noLoopInPath0.setReporter(pigProgressable30);
        java.lang.reflect.Type type32 = noLoopInPath0.getReturnType();
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + boolean28 + "' != '" + true + "'", boolean28, true);
        org.junit.Assert.assertNotNull(type32);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = parsingWikipediaLoader1.getSchema("\"hi!\"", job6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        java.lang.String[] strArray10 = parsingWikipediaLoader1.getPartitionKeys("\"opennlp / en - sent . bin\"\n", job9);
        org.apache.hadoop.mapreduce.Job job12 = null;
        // The following exception was thrown during execution in test generation
        try {
            parsingWikipediaLoader1.setLocation("http://\"title\"\n.wikipedia.org/wiki/", job12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNotNull(resourceSchema7);
        org.junit.Assert.assertNull(strArray10);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        org.apache.pig.data.Tuple tuple3 = null;
        java.lang.Boolean boolean4 = checkAbstract0.exec(tuple3);
        java.lang.Enum enum6 = null;
        checkAbstract0.warn("href", enum6);
        org.apache.pig.data.Tuple tuple8 = null;
        java.lang.Boolean boolean9 = checkAbstract0.exec(tuple8);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList10 = checkAbstract0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        checkAbstract0.setPigLogger(pigLogger11);
        org.apache.commons.logging.Log log13 = checkAbstract0.getLogger();
        pignlproc.evaluation.SafeTsvText safeTsvText14 = new pignlproc.evaluation.SafeTsvText();
        java.lang.reflect.Type type15 = safeTsvText14.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable16 = null;
        safeTsvText14.setReporter(pigProgressable16);
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        checkAbstract18.finish();
        java.lang.Enum enum23 = null;
        checkAbstract18.warn("href", enum23);
        pignlproc.evaluation.CheckAbstract checkAbstract25 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum27 = null;
        checkAbstract25.warn("http://.wikipedia.org/wiki/hi%21", enum27);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable29 = null;
        checkAbstract25.setReporter(pigProgressable29);
        java.lang.reflect.Type type31 = checkAbstract25.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath32 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText33 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger34 = null;
        safeTsvText33.setPigLogger(pigLogger34);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText36 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable37 = mergeAsOpenNLPAnnotatedText36.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract38 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = checkAbstract38.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = mergeAsOpenNLPAnnotatedText36.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = safeTsvText33.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = noLoopInPath32.outputSchema(schema41);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag44 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText45 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger46 = null;
        safeTsvText45.setPigLogger(pigLogger46);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText48 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable49 = mergeAsOpenNLPAnnotatedText48.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract50 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = checkAbstract50.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = mergeAsOpenNLPAnnotatedText48.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = safeTsvText45.outputSchema(schema53);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = aggregateTextBag44.outputSchema(schema53);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = noLoopInPath32.outputSchema(schema53);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = checkAbstract25.outputSchema(schema53);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = checkAbstract18.outputSchema(schema53);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = safeTsvText14.outputSchema(schema58);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText60 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray62 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList63 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList63, spanArray62);
        java.lang.String str65 = mergeAsOpenNLPAnnotatedText60.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList63);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText67 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray69 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList70 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList70, spanArray69);
        java.lang.String str72 = mergeAsOpenNLPAnnotatedText67.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList70);
        java.lang.String str73 = mergeAsOpenNLPAnnotatedText60.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList70);
        pignlproc.evaluation.SafeTsvText safeTsvText74 = new pignlproc.evaluation.SafeTsvText();
        java.lang.reflect.Type type75 = safeTsvText74.getReturnType();
        pignlproc.evaluation.CheckAbstract checkAbstract76 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema77 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema78 = checkAbstract76.outputSchema(schema77);
        org.apache.pig.impl.logicalLayer.schema.Schema schema79 = safeTsvText74.outputSchema(schema78);
        org.apache.pig.impl.logicalLayer.schema.Schema schema80 = mergeAsOpenNLPAnnotatedText60.outputSchema(schema78);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<opennlp.tools.util.Span> spanList81 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) checkAbstract0, (java.lang.Object) schema59, (java.lang.Object) mergeAsOpenNLPAnnotatedText60);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: pignlproc.evaluation.CheckAbstract cannot be cast to java.lang.Integer");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + false + "'", boolean4, false);
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + false + "'", boolean9, false);
        org.junit.Assert.assertNull(funcSpecList10);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNull(pigProgressable37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(pigProgressable49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(spanArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi !" + "'", str65, "hi !");
        org.junit.Assert.assertNotNull(spanArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "href" + "'", str72, "href");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi !" + "'", str73, "hi !");
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag1 = new pignlproc.evaluation.AggregateTextBag(0);
        org.apache.commons.logging.Log log2 = aggregateTextBag1.getLogger();
        boolean boolean3 = aggregateTextBag1.isAsynchronous();
        org.junit.Assert.assertNotNull(log2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("opennlp/en-sent.bin");
        info.bliki.htmlcleaner.TagNode tagNode2 = null;
        info.bliki.wiki.model.ImageFormat imageFormat3 = null;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser4 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList5 = annotatingMarkupParser4.getHeaders();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser4.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser4.getHeaderAnnotations();
        java.lang.String str8 = annotatingMarkupParser4.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser9 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList10 = annotatingMarkupParser9.getHeaders();
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser9.getHeaders();
        java.lang.Appendable appendable12 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable13 = annotatingMarkupParser9.new CountingAppendable(appendable12);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable14 = annotatingMarkupParser4.new CountingAppendable((java.lang.Appendable) countingAppendable13);
        info.bliki.wiki.model.WikiModel wikiModel16 = annotatingMarkupParser4.makeWikiModel("\"hi!\"\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser17 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser17.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser19.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser19.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList22 = annotatingMarkupParser19.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser23 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList24 = annotatingMarkupParser23.getHeaders();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser23.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList26 = annotatingMarkupParser23.getHeaderAnnotations();
        java.lang.String str27 = annotatingMarkupParser23.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser28 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList29 = annotatingMarkupParser28.getHeaders();
        java.util.List<java.lang.String> strList30 = annotatingMarkupParser28.getHeaders();
        java.lang.Appendable appendable31 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable32 = annotatingMarkupParser28.new CountingAppendable(appendable31);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable33 = annotatingMarkupParser23.new CountingAppendable((java.lang.Appendable) countingAppendable32);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser34 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList35 = annotatingMarkupParser34.getHeaderAnnotations();
        java.lang.String str36 = annotatingMarkupParser34.getRedirect();
        pignlproc.markup.Annotation annotation41 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation46 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int47 = annotation46.end;
        int int48 = annotation46.begin;
        pignlproc.markup.Annotation[] annotationArray49 = new pignlproc.markup.Annotation[] { annotation41, annotation46 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList50 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList50, annotationArray49);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser52 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList53 = annotatingMarkupParser52.getHeaders();
        java.util.List<java.lang.String> strList54 = annotatingMarkupParser52.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList55 = annotatingMarkupParser52.getHeaderAnnotations();
        java.lang.String str56 = annotatingMarkupParser52.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser57 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList58 = annotatingMarkupParser57.getHeaders();
        java.util.List<java.lang.String> strList59 = annotatingMarkupParser57.getHeaders();
        java.lang.Appendable appendable60 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable61 = annotatingMarkupParser57.new CountingAppendable(appendable60);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable62 = annotatingMarkupParser52.new CountingAppendable((java.lang.Appendable) countingAppendable61);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser63 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList64 = annotatingMarkupParser63.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel66 = annotatingMarkupParser63.makeWikiModel("title");
        annotatingMarkupParser34.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList50, (java.lang.Appendable) countingAppendable61, (info.bliki.wiki.model.IWikiModel) wikiModel66);
        annotatingMarkupParser17.nodesToText(annotationList22, (java.lang.Appendable) countingAppendable33, (info.bliki.wiki.model.IWikiModel) wikiModel66);
        int int69 = countingAppendable33.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable70 = annotatingMarkupParser4.new CountingAppendable((java.lang.Appendable) countingAppendable33);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser71 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList72 = annotatingMarkupParser71.getHeaders();
        java.util.List<java.lang.String> strList73 = annotatingMarkupParser71.getHeaders();
        java.util.List<java.lang.String> strList74 = annotatingMarkupParser71.getHeaders();
        java.util.List<java.lang.String> strList75 = annotatingMarkupParser71.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel77 = annotatingMarkupParser71.makeWikiModel("opennlp / en - sent . bin");
        info.bliki.wiki.model.WikiModel wikiModel79 = annotatingMarkupParser71.makeWikiModel("\"hi!\"");
        // The following exception was thrown during execution in test generation
        try {
            annotatingMarkupParser1.imageNodeToText(tagNode2, imageFormat3, (java.lang.Appendable) countingAppendable33, (info.bliki.wiki.model.IWikiModel) wikiModel79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel16);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNotNull(annotationList22);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(annotationList26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(annotationList35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertNotNull(annotationArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(annotationList55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(annotationList64);
        org.junit.Assert.assertNotNull(wikiModel66);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNotNull(wikiModel77);
        org.junit.Assert.assertNotNull(wikiModel79);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521", "http://.wikipedia.org/wiki/hi%21\n", "http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22");
        org.apache.hadoop.mapreduce.RecordWriter recordWriter4 = null;
        uriUriNTriplesStorer3.prepareToWrite(recordWriter4);
        uriUriNTriplesStorer3.setStoreFuncUDFContextSignature("http://\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\".wikipedia.org/wiki/%22%22%22opennlp_%2F_en_-_sent_._bin%22%22%22");
        org.apache.pig.data.Tuple tuple8 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer3.putNext(tuple8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        java.lang.String str1 = pignlproc.evaluation.SafeTsvText.escape("\"title\"\n");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"\"\"title\"\" \"" + "'", str1, "\"\"\"title\"\" \"");
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag0 = new pignlproc.evaluation.AggregateTextBag();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        aggregateTextBag0.setPigLogger(pigLogger1);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag5 = new pignlproc.evaluation.AggregateTextBag((int) '#', false);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText6 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray8 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList9 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList9, spanArray8);
        java.lang.String str11 = mergeAsOpenNLPAnnotatedText6.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList9);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList12 = mergeAsOpenNLPAnnotatedText6.getArgToFuncMapping();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray15 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList16 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList16, spanArray15);
        java.lang.String str18 = mergeAsOpenNLPAnnotatedText13.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList16);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger19 = null;
        mergeAsOpenNLPAnnotatedText13.setPigLogger(pigLogger19);
        boolean boolean21 = mergeAsOpenNLPAnnotatedText13.isAsynchronous();
        pignlproc.evaluation.CheckAbstract checkAbstract22 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum24 = null;
        checkAbstract22.warn("http://.wikipedia.org/wiki/hi%21", enum24);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable26 = null;
        checkAbstract22.setReporter(pigProgressable26);
        java.lang.reflect.Type type28 = checkAbstract22.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath29 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText30 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger31 = null;
        safeTsvText30.setPigLogger(pigLogger31);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText33 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable34 = mergeAsOpenNLPAnnotatedText33.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract35 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = checkAbstract35.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = mergeAsOpenNLPAnnotatedText33.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = safeTsvText30.outputSchema(schema38);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = noLoopInPath29.outputSchema(schema38);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag41 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText42 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger43 = null;
        safeTsvText42.setPigLogger(pigLogger43);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText45 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable46 = mergeAsOpenNLPAnnotatedText45.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract47 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = checkAbstract47.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = mergeAsOpenNLPAnnotatedText45.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = safeTsvText42.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = aggregateTextBag41.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = noLoopInPath29.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = checkAbstract22.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = mergeAsOpenNLPAnnotatedText6.outputSchema(schema50);
        pignlproc.evaluation.CheckAbstract checkAbstract57 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum59 = null;
        checkAbstract57.warn("http://.wikipedia.org/wiki/hi%21", enum59);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger61 = null;
        checkAbstract57.setPigLogger(pigLogger61);
        checkAbstract57.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText64 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger65 = null;
        safeTsvText64.setPigLogger(pigLogger65);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText67 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable68 = mergeAsOpenNLPAnnotatedText67.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract69 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema70 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema71 = checkAbstract69.outputSchema(schema70);
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = mergeAsOpenNLPAnnotatedText67.outputSchema(schema70);
        org.apache.pig.impl.logicalLayer.schema.Schema schema73 = safeTsvText64.outputSchema(schema72);
        org.apache.pig.impl.logicalLayer.schema.Schema schema74 = checkAbstract57.outputSchema(schema73);
        org.apache.pig.impl.logicalLayer.schema.Schema schema75 = mergeAsOpenNLPAnnotatedText6.outputSchema(schema74);
        org.apache.pig.impl.logicalLayer.schema.Schema schema76 = aggregateTextBag5.outputSchema(schema74);
        org.apache.pig.impl.logicalLayer.schema.Schema schema77 = aggregateTextBag0.outputSchema(schema76);
        org.apache.pig.data.Tuple tuple78 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str79 = aggregateTextBag0.exec(tuple78);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in AggregateTextBag");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(spanArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi !" + "'", str11, "hi !");
        org.junit.Assert.assertNull(funcSpecList12);
        org.junit.Assert.assertNotNull(spanArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi !" + "'", str18, "hi !");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNull(pigProgressable34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(pigProgressable46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(pigProgressable68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("\"http://.wikipedia.org/wiki/hi%21\"\n\n");
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        java.lang.String str1 = pignlproc.evaluation.SafeTsvText.escape("\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"\n");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"\"\"\"\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"\"\"\" \"" + "'", str1, "\"\"\"\"\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"\"\"\" \"");
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("title", job3);
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader1.getLoadCaster();
        parsingWikipediaLoader1.setUDFContextSignature("hi !");
        org.apache.hadoop.mapreduce.RecordReader recordReader8 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit9 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader8, pigSplit9);
        org.apache.hadoop.mapreduce.InputFormat inputFormat11 = parsingWikipediaLoader1.getInputFormat();
        org.apache.hadoop.mapreduce.Job job13 = null;
        // The following exception was thrown during execution in test generation
        try {
            parsingWikipediaLoader1.setLocation("\"\"\"opennlp / en - sent . bin\"\" \"", job13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(loadCaster5);
        org.junit.Assert.assertNotNull(inputFormat11);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("hi !", "title", "title");
        org.apache.hadoop.mapreduce.Job job5 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer3.setStoreLocation("href", job5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("titlehref");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader3 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = parsingWikipediaLoader3.getSchema("title", job5);
        org.apache.pig.LoadCaster loadCaster7 = parsingWikipediaLoader3.getLoadCaster();
        parsingWikipediaLoader3.setUDFContextSignature("hi !");
        org.apache.hadoop.mapreduce.RecordReader recordReader10 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit11 = null;
        parsingWikipediaLoader3.prepareToRead(recordReader10, pigSplit11);
        org.apache.hadoop.mapreduce.Job job14 = null;
        org.apache.pig.ResourceSchema resourceSchema15 = parsingWikipediaLoader3.getSchema("\" title \"", job14);
        uriStringLiteralNTriplesStorer1.checkSchema(resourceSchema15);
        org.apache.pig.data.Tuple tuple17 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.putNext(tuple17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNotNull(loadCaster7);
        org.junit.Assert.assertNotNull(resourceSchema15);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.setInputPaths(job0, "http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader3.getSchema("", job5);
        org.apache.pig.Expression expression7 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression7);
        org.apache.hadoop.mapreduce.InputFormat inputFormat9 = uriUriNTriplesLoader3.getInputFormat();
        org.apache.hadoop.mapreduce.Job job11 = null;
        org.apache.pig.ResourceSchema resourceSchema12 = uriUriNTriplesLoader3.getSchema("wikiobject", job11);
        org.apache.hadoop.mapreduce.Job job14 = null;
        org.apache.pig.ResourceSchema resourceSchema15 = uriUriNTriplesLoader3.getSchema("\"\"\"hi!\"\" \"", job14);
        org.apache.pig.LoadCaster loadCaster16 = uriUriNTriplesLoader3.getLoadCaster();
        org.apache.hadoop.mapreduce.InputFormat inputFormat17 = uriUriNTriplesLoader3.getInputFormat();
        org.apache.hadoop.fs.Path path19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = uriUriNTriplesLoader3.relativeToAbsolutePath("http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522", path19);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: http://hi !?.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522 curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNotNull(inputFormat9);
        org.junit.Assert.assertNotNull(resourceSchema12);
        org.junit.Assert.assertNotNull(resourceSchema15);
        org.junit.Assert.assertNotNull(loadCaster16);
        org.junit.Assert.assertNotNull(inputFormat17);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("hi!");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser2 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser2.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList4 = annotatingMarkupParser2.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser2.getParagraphAnnotations();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser2.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser2.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser8 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList9 = annotatingMarkupParser8.getHeaderAnnotations();
        java.util.List<java.lang.String> strList10 = annotatingMarkupParser8.getParagraphs();
        java.lang.Appendable appendable11 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable12 = annotatingMarkupParser8.new CountingAppendable(appendable11);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable13 = annotatingMarkupParser2.new CountingAppendable((java.lang.Appendable) countingAppendable12);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable14 = annotatingMarkupParser1.new CountingAppendable((java.lang.Appendable) countingAppendable12);
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser1.getParagraphs();
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(annotationList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNotNull(annotationList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strList15);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPaths(job0, "http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Relative path in absolute URI: http :%20/%20hi%20!%20.%20wikipedia%20.%20org%20/%20wiki%20/%20http%20%25%203%20A%20%25%202%20F%20%25%202%20Fhttp%20%25%203%20A%20%25%202%20F%20%25%202%20F%20.%20wikipedia%20.%20org%20%25%202%20Fwiki%20%25%202%20Fhi%20%25%202521%20%25%200%20A%20.%20wikipedia%20.%20org%20%25%202%20Fwiki%20%25%202%20F%20%25%202522%20title%20%25%202522");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag1 = new pignlproc.evaluation.AggregateTextBag((int) (byte) 0);
        pignlproc.evaluation.ConcatTextBag concatTextBag4 = new pignlproc.evaluation.ConcatTextBag("http://\"title\".wikipedia.org/wiki/%22hi%21%22", true);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink5 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = sentencesWithLink5.getArgToFuncMapping();
        pignlproc.evaluation.CheckAbstract checkAbstract7 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum9 = null;
        checkAbstract7.warn("http://.wikipedia.org/wiki/hi%21", enum9);
        java.lang.Enum enum12 = null;
        checkAbstract7.warn("hi !", enum12);
        pignlproc.evaluation.NoLoopInPath noLoopInPath14 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText15 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = null;
        safeTsvText15.setPigLogger(pigLogger16);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText18 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = mergeAsOpenNLPAnnotatedText18.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = checkAbstract20.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = mergeAsOpenNLPAnnotatedText18.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = safeTsvText15.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = noLoopInPath14.outputSchema(schema23);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag26 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText27 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger28 = null;
        safeTsvText27.setPigLogger(pigLogger28);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText30 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable31 = mergeAsOpenNLPAnnotatedText30.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract32 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = checkAbstract32.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = mergeAsOpenNLPAnnotatedText30.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = safeTsvText27.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = aggregateTextBag26.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = noLoopInPath14.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = checkAbstract7.outputSchema(schema38);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = sentencesWithLink5.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = concatTextBag4.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = aggregateTextBag1.outputSchema(schema39);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger43 = null;
        aggregateTextBag1.setPigLogger(pigLogger43);
        org.junit.Assert.assertNull(funcSpecList6);
        org.junit.Assert.assertNull(pigProgressable19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(pigProgressable31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("hi!");
        java.lang.String str3 = annotatingMarkupParser1.parse("\"\"\"hi!\"\" \"");
        java.lang.String str5 = annotatingMarkupParser1.parse("\" title \"");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"\"hi!\"\" \"\n" + "'", str3, "\"\"\"hi!\"\" \"\n");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\" title \"\n" + "'", str5, "\" title \"\n");
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract((int) (short) 10);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable2 = checkAbstract1.getReporter();
        org.apache.pig.data.Tuple tuple3 = null;
        java.lang.Boolean boolean4 = checkAbstract1.exec(tuple3);
        org.junit.Assert.assertNull(pigProgressable2);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + false + "'", boolean4, false);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract("http://.wikipedia.org/wiki/hi%21");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"http://.wikipedia.org/wiki/hi%21\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("http://http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21.wikipedia.org/wiki/%22http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521_.wikipedia.org%2Fwiki%2F%2522title%2522href%22");
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("\"http : // \"\" opennlp / en - sent . bin \"\" . wikipedia . org / wiki / href\"");
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"");
        org.apache.pig.data.Tuple tuple2 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.putNext(tuple2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        org.apache.hadoop.mapreduce.InputFormat inputFormat2 = parsingWikipediaLoader1.getInputFormat();
        org.apache.hadoop.mapreduce.Job job4 = null;
        // The following exception was thrown during execution in test generation
        try {
            parsingWikipediaLoader1.setLocation("\"opennlp / en - sent . bin\"", job4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputFormat2);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("hi !\n\n", "\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\"", "hi!\n\n");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader3.getSchema("\"title\"\n", job5);
        org.junit.Assert.assertNotNull(resourceSchema6);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("hi !", "title", "title");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader5 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.pig.LoadCaster loadCaster6 = parsingWikipediaLoader5.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job8 = null;
        org.apache.pig.ResourceSchema resourceSchema9 = parsingWikipediaLoader5.getSchema("hi!", job8);
        uriUriNTriplesStorer3.checkSchema(resourceSchema9);
        org.apache.hadoop.mapreduce.RecordWriter recordWriter11 = null;
        uriUriNTriplesStorer3.prepareToWrite(recordWriter11);
        org.apache.hadoop.mapreduce.OutputFormat outputFormat13 = uriUriNTriplesStorer3.getOutputFormat();
        org.apache.hadoop.mapreduce.RecordWriter recordWriter14 = null;
        uriUriNTriplesStorer3.prepareToWrite(recordWriter14);
        org.apache.hadoop.mapreduce.Job job17 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer3.cleanupOnFailure("\"title\"\n\n", job17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(loadCaster6);
        org.junit.Assert.assertNotNull(resourceSchema9);
        org.junit.Assert.assertNotNull(outputFormat13);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("hi!", "\"hi!\"\n", "http://.wikipedia.org/wiki/hi%21");
        uriUriNTriplesStorer3.setStoreFuncUDFContextSignature("\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"");
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        org.apache.hadoop.mapreduce.Job job1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.StoreFunc.cleanupOnFailureImpl("\"\"\" http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 \"\"\"", job1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Relative path in absolute URI: \"\"\" http :%20/%20http%20:%20/%20.%20wikipedia%20.%20org%20/%20wiki%20/%20hi%20%25%2021%20.%20wikipedia%20.%20org%20/%20wiki%20/%20hi%20%25%2021%20%22%22%22");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.setInputPaths(job0, "\" http : // . wikipedia . org / wiki / hi % 21 \"");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Relative path in absolute URI: \" http :%20/%20.%20wikipedia%20.%20org%20/%20wiki%20/%20hi%20%25%2021%20%22");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser0.getHeaders();
        info.bliki.htmlcleaner.TagNode tagNode4 = null;
        info.bliki.wiki.model.ImageFormat imageFormat5 = null;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser6 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser6.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList8 = annotatingMarkupParser6.getWikiLinkAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser9 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList10 = annotatingMarkupParser9.getHeaders();
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser9.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList12 = annotatingMarkupParser9.getHeaderAnnotations();
        java.lang.String str13 = annotatingMarkupParser9.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser14.getHeaders();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser14.getHeaders();
        java.lang.Appendable appendable17 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable18 = annotatingMarkupParser14.new CountingAppendable(appendable17);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable19 = annotatingMarkupParser9.new CountingAppendable((java.lang.Appendable) countingAppendable18);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable20 = annotatingMarkupParser6.new CountingAppendable((java.lang.Appendable) countingAppendable19);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser21 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList22 = annotatingMarkupParser21.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel24 = annotatingMarkupParser21.makeWikiModel("title");
        java.lang.String str26 = annotatingMarkupParser21.parse("hi!");
        info.bliki.wiki.model.WikiModel wikiModel28 = annotatingMarkupParser21.makeWikiModel("titlehref");
        // The following exception was thrown during execution in test generation
        try {
            annotatingMarkupParser0.imageNodeToText(tagNode4, imageFormat5, (java.lang.Appendable) countingAppendable20, (info.bliki.wiki.model.IWikiModel) wikiModel28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(annotationList8);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(annotationList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(annotationList22);
        org.junit.Assert.assertNotNull(wikiModel24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!\n" + "'", str26, "hi!\n");
        org.junit.Assert.assertNotNull(wikiModel28);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (short) 0, (int) (short) 10, "http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521", "hi!");
        java.lang.String str5 = annotation4.value;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin", true);
        concatTextBag2.progress();
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("href");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("opennlp/en-sent.bin", job3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        java.lang.String[] strArray7 = parsingWikipediaLoader1.getPartitionKeys("\"title\"\n", job6);
        org.apache.hadoop.mapreduce.RecordReader recordReader8 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit9 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader8, pigSplit9);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple11 = parsingWikipediaLoader1.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNull(strArray7);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = sentencesWithLink0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        sentencesWithLink0.setPigLogger(pigLogger2);
        sentencesWithLink0.progress();
        java.lang.reflect.Type type5 = sentencesWithLink0.getReturnType();
        org.junit.Assert.assertNull(pigLogger1);
        org.junit.Assert.assertNotNull(type5);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = sentencesWithLink0.getPigLogger();
        java.lang.Enum enum3 = null;
        sentencesWithLink0.warn("opennlp / en - sent . bin", enum3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        sentencesWithLink0.setReporter(pigProgressable5);
        java.lang.reflect.Type type7 = sentencesWithLink0.getReturnType();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList8 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.progress();
        boolean boolean10 = sentencesWithLink0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = sentencesWithLink0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable12 = null;
        sentencesWithLink0.setReporter(pigProgressable12);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = sentencesWithLink0.getReporter();
        org.junit.Assert.assertNull(pigLogger1);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(funcSpecList8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(pigLogger11);
        org.junit.Assert.assertNull(pigProgressable14);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((int) 'a', false);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = aggregateTextBag2.getReporter();
        org.junit.Assert.assertNull(pigProgressable3);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag1 = new pignlproc.evaluation.AggregateTextBag((int) (byte) -1);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        info.bliki.wiki.model.WikiModel wikiModel12 = annotatingMarkupParser0.makeWikiModel("\"hi!\"\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser("\"title\"");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser15 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser15.getHeaders();
        java.util.List<java.lang.String> strList17 = annotatingMarkupParser15.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser15.getHeaderAnnotations();
        java.lang.String str19 = annotatingMarkupParser15.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser20 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser20.getHeaders();
        java.util.List<java.lang.String> strList22 = annotatingMarkupParser20.getHeaders();
        java.lang.Appendable appendable23 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable24 = annotatingMarkupParser20.new CountingAppendable(appendable23);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable25 = annotatingMarkupParser15.new CountingAppendable((java.lang.Appendable) countingAppendable24);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser26 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList27 = annotatingMarkupParser26.getHeaders();
        java.util.List<java.lang.String> strList28 = annotatingMarkupParser26.getHeaders();
        java.lang.Appendable appendable29 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable30 = annotatingMarkupParser26.new CountingAppendable(appendable29);
        countingAppendable30.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable33 = annotatingMarkupParser15.new CountingAppendable((java.lang.Appendable) countingAppendable30);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable34 = annotatingMarkupParser14.new CountingAppendable((java.lang.Appendable) countingAppendable33);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable35 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable33);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable37 = countingAppendable33.append((java.lang.CharSequence) "http://wikiobject.wikipedia.org/wiki/opennlp%2Fen-sent.bin");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(wikiModel12);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(strList28);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("\"\"\n");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = concatTextBag1.getPigLogger();
        org.junit.Assert.assertNull(pigLogger2);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (short) 0, 1, "http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin", "http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21");
        int int5 = annotation4.end;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("\"opennlp / en - sent . bin\"");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21", job3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        java.lang.String[] strArray7 = parsingWikipediaLoader1.getPartitionKeys("\"title\"", job6);
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNull(strArray7);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        boolean boolean3 = sentencesWithLink0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = sentencesWithLink0.getPigLogger();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNull(pigLogger6);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        mergeAsOpenNLPAnnotatedText0.setPigLogger(pigLogger6);
        boolean boolean8 = mergeAsOpenNLPAnnotatedText0.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText10 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray12 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList13 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList13, spanArray12);
        java.lang.String str15 = mergeAsOpenNLPAnnotatedText10.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList13);
        java.lang.String str16 = mergeAsOpenNLPAnnotatedText0.merge("opennlp/en-sent.bin", (java.util.List<opennlp.tools.util.Span>) spanList13);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText18 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = mergeAsOpenNLPAnnotatedText18.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = checkAbstract20.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = mergeAsOpenNLPAnnotatedText18.outputSchema(schema21);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText25 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray27 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList28 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList28, spanArray27);
        java.lang.String str30 = mergeAsOpenNLPAnnotatedText25.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList28);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText32 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray34 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList35 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList35, spanArray34);
        java.lang.String str37 = mergeAsOpenNLPAnnotatedText32.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList35);
        java.lang.String str38 = mergeAsOpenNLPAnnotatedText25.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList35);
        java.lang.String str39 = mergeAsOpenNLPAnnotatedText18.merge("title", (java.util.List<opennlp.tools.util.Span>) spanList35);
        java.lang.String str40 = mergeAsOpenNLPAnnotatedText0.merge("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", (java.util.List<opennlp.tools.util.Span>) spanList35);
        java.lang.reflect.Type type41 = mergeAsOpenNLPAnnotatedText0.getReturnType();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList42 = mergeAsOpenNLPAnnotatedText0.getArgToFuncMapping();
        mergeAsOpenNLPAnnotatedText0.finish();
        java.lang.Object obj45 = null;
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer47 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://hi!\n.wikipedia.org/wiki/%22_title_%22");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader49 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job51 = null;
        org.apache.pig.ResourceStatistics resourceStatistics52 = parsingWikipediaLoader49.getStatistics("hi!", job51);
        org.apache.hadoop.mapreduce.RecordReader recordReader53 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit54 = null;
        parsingWikipediaLoader49.prepareToRead(recordReader53, pigSplit54);
        org.apache.hadoop.mapreduce.Job job57 = null;
        java.lang.String[] strArray58 = parsingWikipediaLoader49.getPartitionKeys("http://.wikipedia.org/wiki/hi%21", job57);
        org.apache.hadoop.mapreduce.InputFormat inputFormat59 = parsingWikipediaLoader49.getInputFormat();
        java.util.List<opennlp.tools.util.Span> spanList60 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans(obj45, (java.lang.Object) uriStringLiteralNTriplesStorer47, (java.lang.Object) inputFormat59);
        java.lang.String str61 = mergeAsOpenNLPAnnotatedText0.merge("\"hi ! \"", spanList60);
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi !" + "'", str5, "hi !");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(spanArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "href" + "'", str15, "href");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "opennlp / en - sent . bin" + "'", str16, "opennlp / en - sent . bin");
        org.junit.Assert.assertNull(pigProgressable19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(spanArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi !" + "'", str30, "hi !");
        org.junit.Assert.assertNotNull(spanArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "href" + "'", str37, "href");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi !" + "'", str38, "hi !");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "title" + "'", str39, "title");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21" + "'", str40, "http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21");
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNull(funcSpecList42);
        org.junit.Assert.assertNull(resourceStatistics52);
        org.junit.Assert.assertNull(strArray58);
        org.junit.Assert.assertNotNull(inputFormat59);
        org.junit.Assert.assertNotNull(spanList60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "\" hi ! \"" + "'", str61, "\" hi ! \"");
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        java.lang.reflect.Type type4 = sentencesWithLink0.getReturnType();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = sentencesWithLink0.getPigLogger();
        java.lang.Enum enum8 = null;
        sentencesWithLink0.warn("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", enum8);
        org.apache.commons.logging.Log log10 = sentencesWithLink0.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = sentencesWithLink0.getPigLogger();
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(pigLogger6);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNull(pigLogger11);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader0 = new pignlproc.storage.UriUriNTriplesLoader();
        org.apache.hadoop.mapreduce.Job job2 = null;
        org.apache.pig.ResourceStatistics resourceStatistics3 = uriUriNTriplesLoader0.getStatistics("wikiobject", job2);
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceStatistics resourceStatistics6 = uriUriNTriplesLoader0.getStatistics("\"opennlp / en - sent . bin\"", job5);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple7 = uriUriNTriplesLoader0.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics3);
        org.junit.Assert.assertNull(resourceStatistics6);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser14.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList16 = annotatingMarkupParser14.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel18 = annotatingMarkupParser14.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel20 = annotatingMarkupParser14.makeWikiModel("hi!\n");
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser14.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser22 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser22.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList24 = annotatingMarkupParser22.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList25 = annotatingMarkupParser22.getParagraphAnnotations();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser22.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList27 = annotatingMarkupParser22.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser28 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList29 = annotatingMarkupParser28.getHeaderAnnotations();
        java.util.List<java.lang.String> strList30 = annotatingMarkupParser28.getParagraphs();
        java.lang.Appendable appendable31 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable32 = annotatingMarkupParser28.new CountingAppendable(appendable31);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable33 = annotatingMarkupParser22.new CountingAppendable((java.lang.Appendable) countingAppendable32);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser34 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList35 = annotatingMarkupParser34.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList36 = annotatingMarkupParser34.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel38 = annotatingMarkupParser34.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel40 = annotatingMarkupParser34.makeWikiModel("hi!\n");
        annotatingMarkupParser0.nodesToText(annotationList21, (java.lang.Appendable) countingAppendable33, (info.bliki.wiki.model.IWikiModel) wikiModel40);
        countingAppendable33.currentPosition = 0;
        int int44 = countingAppendable33.currentPosition;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable48 = countingAppendable33.append((java.lang.CharSequence) "http://\"\"\"http://.wikipedia.org/wiki/hi%21\"\" \".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi%21.wikipedia.org%2Fwiki%2F%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22", (int) (byte) 10, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(annotationList16);
        org.junit.Assert.assertNotNull(wikiModel18);
        org.junit.Assert.assertNotNull(wikiModel20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(annotationList24);
        org.junit.Assert.assertNotNull(annotationList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList27);
        org.junit.Assert.assertNotNull(annotationList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(annotationList36);
        org.junit.Assert.assertNotNull(wikiModel38);
        org.junit.Assert.assertNotNull(wikiModel40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        java.lang.String[] strArray5 = uriStringLiteralNTriplesLoader2.getPartitionKeys("href", job4);
        org.apache.pig.Expression expression6 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        java.lang.String[] strArray10 = uriStringLiteralNTriplesLoader2.getPartitionKeys("hi!\n", job9);
        org.apache.hadoop.mapreduce.RecordReader recordReader11 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit12 = null;
        uriStringLiteralNTriplesLoader2.prepareToRead(recordReader11, pigSplit12);
        org.apache.hadoop.mapreduce.Job job15 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesLoader2.setLocation("http : // http : // hi ! . wikipedia . org / wiki / % 22 _ title _ % 22 . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin", job15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Relative path in absolute URI: http :%20/%20http%20:%20/%20hi%20!%20.%20wikipedia%20.%20org%20/%20wiki%20/%20%25%2022%20_%20title%20_%20%25%2022%20.%20wikipedia%20.%20org%20/%20wiki%20/%20opennlp%20_%20%25%202%20F%20_%20en%20_%20-%20_%20sent%20_%20.%20_%20bin");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strArray5);
        org.junit.Assert.assertNull(strArray10);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.lang.String str4 = annotatingMarkupParser0.parse("\"title\"");
        boolean boolean5 = annotatingMarkupParser0.noLinks();
        java.lang.String str7 = annotatingMarkupParser0.parse("\" hi ! \"");
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"title\"\n" + "'", str4, "\"title\"\n");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\" hi ! \"\n" + "'", str7, "\" hi ! \"\n");
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.finish();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = null;
        sentencesWithLink0.setPigLogger(pigLogger8);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = sentencesWithLink0.getPigLogger();
        sentencesWithLink0.finish();
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(funcSpecList6);
        org.junit.Assert.assertNull(pigLogger10);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag12 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText13 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        safeTsvText13.setPigLogger(pigLogger14);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText16.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = safeTsvText13.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = aggregateTextBag12.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = noLoopInPath0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        noLoopInPath0.setPigLogger(pigLogger25);
        org.apache.pig.data.Tuple tuple27 = null;
        java.lang.Boolean boolean28 = noLoopInPath0.exec(tuple27);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable29 = null;
        noLoopInPath0.setReporter(pigProgressable29);
        java.lang.reflect.Type type31 = noLoopInPath0.getReturnType();
        org.apache.pig.data.Tuple tuple32 = null;
        java.lang.Boolean boolean33 = noLoopInPath0.exec(tuple32);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + boolean28 + "' != '" + true + "'", boolean28, true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + boolean33 + "' != '" + true + "'", boolean33, true);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        java.util.List<java.lang.String> strList5 = annotatingMarkupParser0.getParagraphs();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser0.getParagraphs();
        info.bliki.wiki.model.WikiModel wikiModel8 = annotatingMarkupParser0.makeWikiModel("hi!");
        java.util.List<java.lang.String> strList9 = annotatingMarkupParser0.getHeaders();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser10 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser10.getHeaders();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser10.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList13 = annotatingMarkupParser10.getHeaderAnnotations();
        java.lang.String str14 = annotatingMarkupParser10.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser15 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser15.getHeaders();
        java.util.List<java.lang.String> strList17 = annotatingMarkupParser15.getHeaders();
        java.lang.Appendable appendable18 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable19 = annotatingMarkupParser15.new CountingAppendable(appendable18);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable20 = annotatingMarkupParser10.new CountingAppendable((java.lang.Appendable) countingAppendable19);
        info.bliki.wiki.model.WikiModel wikiModel22 = annotatingMarkupParser10.makeWikiModel("\"hi!\"\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser23 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList24 = annotatingMarkupParser23.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser25 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser25.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList27 = annotatingMarkupParser25.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList28 = annotatingMarkupParser25.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser29 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList30 = annotatingMarkupParser29.getHeaders();
        java.util.List<java.lang.String> strList31 = annotatingMarkupParser29.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList32 = annotatingMarkupParser29.getHeaderAnnotations();
        java.lang.String str33 = annotatingMarkupParser29.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser34 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList35 = annotatingMarkupParser34.getHeaders();
        java.util.List<java.lang.String> strList36 = annotatingMarkupParser34.getHeaders();
        java.lang.Appendable appendable37 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable38 = annotatingMarkupParser34.new CountingAppendable(appendable37);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable39 = annotatingMarkupParser29.new CountingAppendable((java.lang.Appendable) countingAppendable38);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser40 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList41 = annotatingMarkupParser40.getHeaderAnnotations();
        java.lang.String str42 = annotatingMarkupParser40.getRedirect();
        pignlproc.markup.Annotation annotation47 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation52 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int53 = annotation52.end;
        int int54 = annotation52.begin;
        pignlproc.markup.Annotation[] annotationArray55 = new pignlproc.markup.Annotation[] { annotation47, annotation52 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList56 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList56, annotationArray55);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser58 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList59 = annotatingMarkupParser58.getHeaders();
        java.util.List<java.lang.String> strList60 = annotatingMarkupParser58.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList61 = annotatingMarkupParser58.getHeaderAnnotations();
        java.lang.String str62 = annotatingMarkupParser58.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser63 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList64 = annotatingMarkupParser63.getHeaders();
        java.util.List<java.lang.String> strList65 = annotatingMarkupParser63.getHeaders();
        java.lang.Appendable appendable66 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable67 = annotatingMarkupParser63.new CountingAppendable(appendable66);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable68 = annotatingMarkupParser58.new CountingAppendable((java.lang.Appendable) countingAppendable67);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser69 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList70 = annotatingMarkupParser69.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel72 = annotatingMarkupParser69.makeWikiModel("title");
        annotatingMarkupParser40.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList56, (java.lang.Appendable) countingAppendable67, (info.bliki.wiki.model.IWikiModel) wikiModel72);
        annotatingMarkupParser23.nodesToText(annotationList28, (java.lang.Appendable) countingAppendable39, (info.bliki.wiki.model.IWikiModel) wikiModel72);
        int int75 = countingAppendable39.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable76 = annotatingMarkupParser10.new CountingAppendable((java.lang.Appendable) countingAppendable39);
        countingAppendable39.currentPosition = (byte) 10;
        int int79 = countingAppendable39.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable80 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable39);
        int int81 = countingAppendable39.currentPosition;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable83 = countingAppendable39.append((java.lang.CharSequence) "\"\"\"opennlp / en - sent . bin\"\" \"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(wikiModel8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(annotationList13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(wikiModel22);
        org.junit.Assert.assertNotNull(annotationList24);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList27);
        org.junit.Assert.assertNotNull(annotationList28);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(annotationList32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(annotationList41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 52 + "'", int54 == 52);
        org.junit.Assert.assertNotNull(annotationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNotNull(annotationList61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNotNull(annotationList70);
        org.junit.Assert.assertNotNull(wikiModel72);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 10 + "'", int79 == 10);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 10 + "'", int81 == 10);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = parsingWikipediaLoader1.getSchema("\"hi!\"", job6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        org.apache.pig.ResourceSchema resourceSchema10 = parsingWikipediaLoader1.getSchema("\"hi!\"\n", job9);
        org.apache.hadoop.mapreduce.Job job12 = null;
        org.apache.pig.ResourceSchema resourceSchema13 = parsingWikipediaLoader1.getSchema("http://.wikipedia.org/wiki/hi%21\n", job12);
        parsingWikipediaLoader1.setUDFContextSignature("http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21");
        org.apache.hadoop.mapreduce.Job job17 = null;
        java.lang.String[] strArray18 = parsingWikipediaLoader1.getPartitionKeys("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22href", job17);
        org.apache.hadoop.mapreduce.InputFormat inputFormat19 = parsingWikipediaLoader1.getInputFormat();
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNotNull(resourceSchema7);
        org.junit.Assert.assertNotNull(resourceSchema10);
        org.junit.Assert.assertNotNull(resourceSchema13);
        org.junit.Assert.assertNull(strArray18);
        org.junit.Assert.assertNotNull(inputFormat19);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        java.lang.String str1 = pignlproc.evaluation.SafeTsvText.escape("http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21\"" + "'", str1, "\"http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21\"");
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract(35);
        org.apache.pig.data.Tuple tuple2 = null;
        java.lang.Boolean boolean3 = checkAbstract1.exec(tuple2);
        java.lang.reflect.Type type4 = checkAbstract1.getReturnType();
        org.junit.Assert.assertEquals("'" + boolean3 + "' != '" + false + "'", boolean3, false);
        org.junit.Assert.assertNotNull(type4);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract((int) '4');
        checkAbstract1.finish();
        java.lang.reflect.Type type3 = checkAbstract1.getReturnType();
        org.apache.pig.data.Tuple tuple4 = null;
        java.lang.Boolean boolean5 = checkAbstract1.exec(tuple4);
        checkAbstract1.finish();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + boolean5 + "' != '" + false + "'", boolean5, false);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader0 = new pignlproc.storage.ParsingWikipediaLoader();
        org.apache.pig.Expression expression1 = null;
        parsingWikipediaLoader0.setPartitionFilter(expression1);
        org.apache.pig.Expression expression3 = null;
        parsingWikipediaLoader0.setPartitionFilter(expression3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        // The following exception was thrown during execution in test generation
        try {
            parsingWikipediaLoader0.setLocation("http://hi!\n.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin", job6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        java.lang.Enum enum5 = null;
        checkAbstract0.warn("hi !", enum5);
        pignlproc.evaluation.NoLoopInPath noLoopInPath7 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText8 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger9 = null;
        safeTsvText8.setPigLogger(pigLogger9);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText11 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable12 = mergeAsOpenNLPAnnotatedText11.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract13 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = checkAbstract13.outputSchema(schema14);
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = mergeAsOpenNLPAnnotatedText11.outputSchema(schema14);
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = safeTsvText8.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = noLoopInPath7.outputSchema(schema16);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag19 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText20 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger21 = null;
        safeTsvText20.setPigLogger(pigLogger21);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText23 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable24 = mergeAsOpenNLPAnnotatedText23.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract25 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = checkAbstract25.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = mergeAsOpenNLPAnnotatedText23.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = safeTsvText20.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = aggregateTextBag19.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = noLoopInPath7.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = checkAbstract0.outputSchema(schema31);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger33 = checkAbstract0.getPigLogger();
        java.lang.reflect.Type type34 = checkAbstract0.getReturnType();
        org.junit.Assert.assertNull(pigProgressable12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(pigProgressable24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(pigLogger33);
        org.junit.Assert.assertNotNull(type34);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        java.lang.String[] strArray5 = uriStringLiteralNTriplesLoader2.getPartitionKeys("\"title\"", job4);
        org.apache.hadoop.mapreduce.InputFormat inputFormat6 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.apache.hadoop.mapreduce.Job job8 = null;
        org.apache.pig.ResourceSchema resourceSchema9 = uriStringLiteralNTriplesLoader2.getSchema("titlehref", job8);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple10 = uriStringLiteralNTriplesLoader2.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strArray5);
        org.junit.Assert.assertNotNull(inputFormat6);
        org.junit.Assert.assertNotNull(resourceSchema9);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("http://.wikipedia.org/wiki/hi%21");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriUriNTriplesStorer1.getOutputFormat();
        uriUriNTriplesStorer1.setStoreFuncUDFContextSignature("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21");
        uriUriNTriplesStorer1.setStoreFuncUDFContextSignature("\" title \"");
        org.apache.hadoop.fs.Path path8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = uriUriNTriplesStorer1.relToAbsPathForStoreLocation("\n", path8);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: ? curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat2);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader3.getSchema("", job5);
        org.apache.pig.Expression expression7 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression7);
        org.apache.hadoop.mapreduce.InputFormat inputFormat9 = uriUriNTriplesLoader3.getInputFormat();
        org.apache.pig.Expression expression10 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression10);
        org.apache.hadoop.mapreduce.Job job13 = null;
        java.lang.String[] strArray14 = uriUriNTriplesLoader3.getPartitionKeys("opennlp/en-sent.bin", job13);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple15 = uriUriNTriplesLoader3.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNotNull(inputFormat9);
        org.junit.Assert.assertNull(strArray14);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.setMaxInputSplitSize(job0, (long) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getParagraphAnnotations();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser0.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser0.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser6 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser6.getHeaderAnnotations();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser6.getParagraphs();
        java.lang.Appendable appendable9 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser6.new CountingAppendable(appendable9);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable11 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable10);
        countingAppendable10.currentPosition = 35;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable15 = countingAppendable10.append((java.lang.CharSequence) "http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNotNull(strList8);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("titlehref");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader5 = new pignlproc.storage.UriUriNTriplesLoader("", "opennlp / en - sent . bin", "http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21");
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = uriUriNTriplesLoader5.getSchema("\"hi!\"\n", job7);
        uriUriNTriplesStorer1.checkSchema(resourceSchema8);
        org.junit.Assert.assertNotNull(resourceSchema8);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.setInputPaths(job0, "http://http://.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org/wiki/http%3A%2F%2F%22hi%21%22%0A.wikipedia.org%2Fwiki%2F%2522hi%2521_%2522");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("wikiobject", "");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", job4);
        org.apache.hadoop.mapreduce.InputFormat inputFormat6 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.apache.hadoop.mapreduce.RecordReader recordReader7 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit8 = null;
        uriStringLiteralNTriplesLoader2.prepareToRead(recordReader7, pigSplit8);
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(inputFormat6);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("\"hi!\"\n");
        org.apache.pig.data.Tuple tuple2 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.putNext(tuple2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText2 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger3 = null;
        safeTsvText2.setPigLogger(pigLogger3);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText5 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = mergeAsOpenNLPAnnotatedText5.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract7 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = checkAbstract7.outputSchema(schema8);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = mergeAsOpenNLPAnnotatedText5.outputSchema(schema8);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = safeTsvText2.outputSchema(schema10);
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = noLoopInPath1.outputSchema(schema10);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag13 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText14 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger15 = null;
        safeTsvText14.setPigLogger(pigLogger15);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText17 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable18 = mergeAsOpenNLPAnnotatedText17.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract19 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = checkAbstract19.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = mergeAsOpenNLPAnnotatedText17.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = safeTsvText14.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = aggregateTextBag13.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = noLoopInPath1.outputSchema(schema22);
        pignlproc.evaluation.CheckAbstract checkAbstract26 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum28 = null;
        checkAbstract26.warn("http://.wikipedia.org/wiki/hi%21", enum28);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = null;
        checkAbstract26.setPigLogger(pigLogger30);
        checkAbstract26.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText33 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger34 = null;
        safeTsvText33.setPigLogger(pigLogger34);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText36 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable37 = mergeAsOpenNLPAnnotatedText36.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract38 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = checkAbstract38.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = mergeAsOpenNLPAnnotatedText36.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = safeTsvText33.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = checkAbstract26.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = noLoopInPath1.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = sentencesWithLink0.outputSchema(schema44);
        boolean boolean46 = sentencesWithLink0.isAsynchronous();
        org.apache.pig.data.Tuple tuple47 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.DataBag dataBag48 = sentencesWithLink0.exec(tuple47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigProgressable6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(pigProgressable18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(pigProgressable37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        noLoopInPath0.progress();
        pignlproc.evaluation.NoLoopInPath noLoopInPath2 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText3 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = null;
        safeTsvText3.setPigLogger(pigLogger4);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText6 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = mergeAsOpenNLPAnnotatedText6.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract8 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = checkAbstract8.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = mergeAsOpenNLPAnnotatedText6.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = safeTsvText3.outputSchema(schema11);
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = noLoopInPath2.outputSchema(schema11);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag14 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText15 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = null;
        safeTsvText15.setPigLogger(pigLogger16);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText18 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = mergeAsOpenNLPAnnotatedText18.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = checkAbstract20.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = mergeAsOpenNLPAnnotatedText18.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = safeTsvText15.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = aggregateTextBag14.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = noLoopInPath2.outputSchema(schema23);
        pignlproc.evaluation.CheckAbstract checkAbstract27 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum29 = null;
        checkAbstract27.warn("http://.wikipedia.org/wiki/hi%21", enum29);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger31 = null;
        checkAbstract27.setPigLogger(pigLogger31);
        checkAbstract27.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText34 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger35 = null;
        safeTsvText34.setPigLogger(pigLogger35);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText37 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable38 = mergeAsOpenNLPAnnotatedText37.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract39 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = checkAbstract39.outputSchema(schema40);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = mergeAsOpenNLPAnnotatedText37.outputSchema(schema40);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = safeTsvText34.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = checkAbstract27.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = noLoopInPath2.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = noLoopInPath0.outputSchema(schema44);
        org.apache.pig.data.Tuple tuple47 = null;
        java.lang.Boolean boolean48 = noLoopInPath0.exec(tuple47);
        org.junit.Assert.assertNull(pigProgressable7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(pigProgressable19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(pigProgressable38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertEquals("'" + boolean48 + "' != '" + true + "'", boolean48, true);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPaths(job0, "http : // http : // hi ! . wikipedia . org / wiki / % 22 _ title _ % 22 . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Relative path in absolute URI: http :%20/%20http%20:%20/%20hi%20!%20.%20wikipedia%20.%20org%20/%20wiki%20/%20%25%2022%20_%20title%20_%20%25%2022%20.%20wikipedia%20.%20org%20/%20wiki%20/%20opennlp%20_%20%25%202%20F%20_%20en%20_%20-%20_%20sent%20_%20.%20_%20bin");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum2 = null;
        safeTsvText0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = safeTsvText0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        safeTsvText0.setReporter(pigProgressable5);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink7 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList8 = sentencesWithLink7.getArgToFuncMapping();
        pignlproc.evaluation.CheckAbstract checkAbstract9 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum11 = null;
        checkAbstract9.warn("http://.wikipedia.org/wiki/hi%21", enum11);
        java.lang.Enum enum14 = null;
        checkAbstract9.warn("hi !", enum14);
        pignlproc.evaluation.NoLoopInPath noLoopInPath16 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText17 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger18 = null;
        safeTsvText17.setPigLogger(pigLogger18);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText20 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable21 = mergeAsOpenNLPAnnotatedText20.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract22 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = checkAbstract22.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = mergeAsOpenNLPAnnotatedText20.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = safeTsvText17.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = noLoopInPath16.outputSchema(schema25);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag28 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText29 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = null;
        safeTsvText29.setPigLogger(pigLogger30);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText32 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable33 = mergeAsOpenNLPAnnotatedText32.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract34 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = checkAbstract34.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = mergeAsOpenNLPAnnotatedText32.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = safeTsvText29.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = aggregateTextBag28.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = noLoopInPath16.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = checkAbstract9.outputSchema(schema40);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = sentencesWithLink7.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = safeTsvText0.outputSchema(schema41);
        pignlproc.evaluation.CheckAbstract checkAbstract44 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = checkAbstract44.outputSchema(schema45);
        org.apache.pig.data.Tuple tuple47 = null;
        java.lang.Boolean boolean48 = checkAbstract44.exec(tuple47);
        java.lang.Enum enum50 = null;
        checkAbstract44.warn("href", enum50);
        checkAbstract44.finish();
        pignlproc.evaluation.SafeTsvText safeTsvText53 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger54 = null;
        safeTsvText53.setPigLogger(pigLogger54);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText56 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable57 = mergeAsOpenNLPAnnotatedText56.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract58 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = checkAbstract58.outputSchema(schema59);
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = mergeAsOpenNLPAnnotatedText56.outputSchema(schema59);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = safeTsvText53.outputSchema(schema61);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText63 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray65 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList66 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList66, spanArray65);
        java.lang.String str68 = mergeAsOpenNLPAnnotatedText63.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList66);
        pignlproc.evaluation.ConcatTextBag concatTextBag70 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract71 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum73 = null;
        checkAbstract71.warn("http://.wikipedia.org/wiki/hi%21", enum73);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger75 = null;
        checkAbstract71.setPigLogger(pigLogger75);
        checkAbstract71.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText78 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger79 = null;
        safeTsvText78.setPigLogger(pigLogger79);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText81 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable82 = mergeAsOpenNLPAnnotatedText81.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract83 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema84 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema85 = checkAbstract83.outputSchema(schema84);
        org.apache.pig.impl.logicalLayer.schema.Schema schema86 = mergeAsOpenNLPAnnotatedText81.outputSchema(schema84);
        org.apache.pig.impl.logicalLayer.schema.Schema schema87 = safeTsvText78.outputSchema(schema86);
        org.apache.pig.impl.logicalLayer.schema.Schema schema88 = checkAbstract71.outputSchema(schema87);
        org.apache.pig.impl.logicalLayer.schema.Schema schema89 = concatTextBag70.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema90 = mergeAsOpenNLPAnnotatedText63.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema91 = safeTsvText53.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema92 = checkAbstract44.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema93 = safeTsvText0.outputSchema(schema92);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList94 = safeTsvText0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger95 = null;
        safeTsvText0.setPigLogger(pigLogger95);
        safeTsvText0.progress();
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNull(funcSpecList8);
        org.junit.Assert.assertNull(pigProgressable21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(pigProgressable33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertEquals("'" + boolean48 + "' != '" + false + "'", boolean48, false);
        org.junit.Assert.assertNull(pigProgressable57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(spanArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "href" + "'", str68, "href");
        org.junit.Assert.assertNull(pigProgressable82);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNull(funcSpecList94);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "href" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.lang.String str6 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList3, "");
        java.lang.String str8 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList3, "http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21");
        java.lang.String str10 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList3, "\"\"\"title\"\" \"");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "href" + "'", str6, "href");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21href" + "'", str8, "http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21href");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"title\"\" \"href" + "'", str10, "\"\"\"title\"\" \"href");
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521", "\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"");
        org.apache.hadoop.fs.Path path4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = uriStringLiteralNTriplesLoader2.relativeToAbsolutePath("\"hi!\"\n", path4);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"hi!\"? curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str2 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.Annotation annotation7 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation12 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int13 = annotation12.end;
        int int14 = annotation12.begin;
        pignlproc.markup.Annotation[] annotationArray15 = new pignlproc.markup.Annotation[] { annotation7, annotation12 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList16 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList16, annotationArray15);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser18 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList19 = annotatingMarkupParser18.getHeaders();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser18.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser18.getHeaderAnnotations();
        java.lang.String str22 = annotatingMarkupParser18.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser23 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList24 = annotatingMarkupParser23.getHeaders();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser23.getHeaders();
        java.lang.Appendable appendable26 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable27 = annotatingMarkupParser23.new CountingAppendable(appendable26);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable28 = annotatingMarkupParser18.new CountingAppendable((java.lang.Appendable) countingAppendable27);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser29 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList30 = annotatingMarkupParser29.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel32 = annotatingMarkupParser29.makeWikiModel("title");
        annotatingMarkupParser0.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList16, (java.lang.Appendable) countingAppendable27, (info.bliki.wiki.model.IWikiModel) wikiModel32);
        java.util.List<pignlproc.markup.Annotation> annotationList34 = annotatingMarkupParser0.getWikiLinkAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser35 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList36 = annotatingMarkupParser35.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList37 = annotatingMarkupParser35.getWikiLinkAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser38 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList39 = annotatingMarkupParser38.getHeaders();
        java.util.List<java.lang.String> strList40 = annotatingMarkupParser38.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList41 = annotatingMarkupParser38.getHeaderAnnotations();
        java.lang.String str42 = annotatingMarkupParser38.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser43 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList44 = annotatingMarkupParser43.getHeaders();
        java.util.List<java.lang.String> strList45 = annotatingMarkupParser43.getHeaders();
        java.lang.Appendable appendable46 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable47 = annotatingMarkupParser43.new CountingAppendable(appendable46);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable48 = annotatingMarkupParser38.new CountingAppendable((java.lang.Appendable) countingAppendable47);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable49 = annotatingMarkupParser35.new CountingAppendable((java.lang.Appendable) countingAppendable48);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable50 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable49);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable54 = countingAppendable49.append((java.lang.CharSequence) "\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"", (int) (short) 1, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(annotationArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(annotationList30);
        org.junit.Assert.assertNotNull(wikiModel32);
        org.junit.Assert.assertNotNull(annotationList34);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(annotationList37);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(annotationList41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(strList45);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        mergeAsOpenNLPAnnotatedText0.setPigLogger(pigLogger6);
        pignlproc.evaluation.NoLoopInPath noLoopInPath8 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText9 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = null;
        safeTsvText9.setPigLogger(pigLogger10);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText12 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable13 = mergeAsOpenNLPAnnotatedText12.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract14 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = checkAbstract14.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = mergeAsOpenNLPAnnotatedText12.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = safeTsvText9.outputSchema(schema17);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = noLoopInPath8.outputSchema(schema17);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag22 = new pignlproc.evaluation.AggregateTextBag((int) 'a', false);
        pignlproc.evaluation.NoLoopInPath noLoopInPath23 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText24 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        safeTsvText24.setPigLogger(pigLogger25);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText27 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable28 = mergeAsOpenNLPAnnotatedText27.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract29 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = checkAbstract29.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = mergeAsOpenNLPAnnotatedText27.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = safeTsvText24.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = noLoopInPath23.outputSchema(schema32);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag35 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText36 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger37 = null;
        safeTsvText36.setPigLogger(pigLogger37);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText39 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable40 = mergeAsOpenNLPAnnotatedText39.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract41 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = checkAbstract41.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = mergeAsOpenNLPAnnotatedText39.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = safeTsvText36.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = aggregateTextBag35.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = noLoopInPath23.outputSchema(schema44);
        pignlproc.evaluation.CheckAbstract checkAbstract48 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum50 = null;
        checkAbstract48.warn("http://.wikipedia.org/wiki/hi%21", enum50);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger52 = null;
        checkAbstract48.setPigLogger(pigLogger52);
        checkAbstract48.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText55 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger56 = null;
        safeTsvText55.setPigLogger(pigLogger56);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText58 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable59 = mergeAsOpenNLPAnnotatedText58.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract60 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = checkAbstract60.outputSchema(schema61);
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = mergeAsOpenNLPAnnotatedText58.outputSchema(schema61);
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = safeTsvText55.outputSchema(schema63);
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = checkAbstract48.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = noLoopInPath23.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = aggregateTextBag22.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = noLoopInPath8.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = mergeAsOpenNLPAnnotatedText0.outputSchema(schema68);
        java.lang.reflect.Type type70 = mergeAsOpenNLPAnnotatedText0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger71 = null;
        mergeAsOpenNLPAnnotatedText0.setPigLogger(pigLogger71);
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi !" + "'", str5, "hi !");
        org.junit.Assert.assertNull(pigProgressable13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(pigProgressable28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(pigProgressable40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(pigProgressable59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(type70);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("\"\"\n");
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser1.getHeaderAnnotations();
        org.junit.Assert.assertNotNull(annotationList2);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        sentencesWithLink0.setPigLogger(pigLogger2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        sentencesWithLink0.setReporter(pigProgressable4);
        org.apache.commons.logging.Log log6 = sentencesWithLink0.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = sentencesWithLink0.getReporter();
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNull(pigProgressable7);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21href", "\"hi! \"");
        org.apache.hadoop.mapreduce.Job job4 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesLoader2.setLocation("http://.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521", job4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("http://\"title\"\n.wikipedia.org/wiki/");
        org.apache.pig.Expression expression2 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression2);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract3 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum5 = null;
        checkAbstract3.warn("http://.wikipedia.org/wiki/hi%21", enum5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        checkAbstract3.setPigLogger(pigLogger7);
        checkAbstract3.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText10 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        safeTsvText10.setPigLogger(pigLogger11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = mergeAsOpenNLPAnnotatedText13.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract15.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = safeTsvText10.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract3.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = concatTextBag2.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = sentencesWithLink0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = sentencesWithLink0.getPigLogger();
        java.lang.Enum enum25 = null;
        sentencesWithLink0.warn("title", enum25);
        java.lang.reflect.Type type27 = sentencesWithLink0.getReturnType();
        org.apache.pig.data.Tuple tuple28 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.DataBag dataBag29 = sentencesWithLink0.exec(tuple28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigProgressable14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(pigLogger23);
        org.junit.Assert.assertNotNull(type27);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("title", "hi !", "http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21");
        uriUriNTriplesStorer3.setStoreFuncUDFContextSignature("http://.wikipedia.org/wiki/hi%21");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer9 = new pignlproc.storage.UriUriNTriplesStorer("hi !", "title", "title");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader11 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.pig.LoadCaster loadCaster12 = parsingWikipediaLoader11.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job14 = null;
        org.apache.pig.ResourceSchema resourceSchema15 = parsingWikipediaLoader11.getSchema("hi!", job14);
        uriUriNTriplesStorer9.checkSchema(resourceSchema15);
        uriUriNTriplesStorer3.checkSchema(resourceSchema15);
        org.apache.pig.data.Tuple tuple18 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer3.putNext(tuple18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(loadCaster12);
        org.junit.Assert.assertNotNull(resourceSchema15);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("hi !", "title", "title");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader4 = new pignlproc.storage.UriStringLiteralNTriplesLoader();
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = uriStringLiteralNTriplesLoader4.getSchema("", job6);
        uriUriNTriplesStorer3.checkSchema(resourceSchema7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer3.cleanupOnFailure("http://\"http://.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22", job10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema7);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("\"\"\"hi!\"\" \"\n");
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = checkAbstract0.getReporter();
        boolean boolean4 = checkAbstract0.isAsynchronous();
        checkAbstract0.progress();
        java.lang.reflect.Type type6 = checkAbstract0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = checkAbstract0.getPigLogger();
        org.apache.pig.data.Tuple tuple8 = null;
        java.lang.Boolean boolean9 = checkAbstract0.exec(tuple8);
        checkAbstract0.progress();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNull(pigLogger7);
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + false + "'", boolean9, false);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("\"hi!\"\n\n");
        org.apache.hadoop.fs.Path path3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = parsingWikipediaLoader1.relativeToAbsolutePath("\"hi ! \"", path3);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"hi ! \" curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("hi!");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText3 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = mergeAsOpenNLPAnnotatedText3.getPigLogger();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList5 = mergeAsOpenNLPAnnotatedText3.getArgToFuncMapping();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink7 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = null;
        sentencesWithLink7.setPigLogger(pigLogger8);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable10 = sentencesWithLink7.getReporter();
        java.lang.reflect.Type type11 = sentencesWithLink7.getReturnType();
        boolean boolean12 = sentencesWithLink7.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger13 = sentencesWithLink7.getPigLogger();
        java.lang.Enum enum15 = null;
        sentencesWithLink7.warn("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", enum15);
        pignlproc.markup.Annotation annotation21 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        java.lang.String str22 = annotation21.label;
        java.util.List<opennlp.tools.util.Span> spanList23 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) enum15, (java.lang.Object) str22);
        java.lang.String str24 = mergeAsOpenNLPAnnotatedText3.merge("\"hi!\"", spanList23);
        java.lang.String str25 = mergeAsOpenNLPAnnotatedText1.merge("\"http://.wikipedia.org/wiki/hi%21\"", spanList23);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable26 = mergeAsOpenNLPAnnotatedText1.getReporter();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText28 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray30 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList31 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList31, spanArray30);
        java.lang.String str33 = mergeAsOpenNLPAnnotatedText28.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList31);
        pignlproc.evaluation.ConcatTextBag concatTextBag35 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract36 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum38 = null;
        checkAbstract36.warn("http://.wikipedia.org/wiki/hi%21", enum38);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger40 = null;
        checkAbstract36.setPigLogger(pigLogger40);
        checkAbstract36.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText43 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger44 = null;
        safeTsvText43.setPigLogger(pigLogger44);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText46 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable47 = mergeAsOpenNLPAnnotatedText46.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract48 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = checkAbstract48.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = mergeAsOpenNLPAnnotatedText46.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = safeTsvText43.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = checkAbstract36.outputSchema(schema52);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = concatTextBag35.outputSchema(schema53);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = mergeAsOpenNLPAnnotatedText28.outputSchema(schema53);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText57 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray59 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList60 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList60, spanArray59);
        java.lang.String str62 = mergeAsOpenNLPAnnotatedText57.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList60);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger63 = null;
        mergeAsOpenNLPAnnotatedText57.setPigLogger(pigLogger63);
        boolean boolean65 = mergeAsOpenNLPAnnotatedText57.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText67 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray69 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList70 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList70, spanArray69);
        java.lang.String str72 = mergeAsOpenNLPAnnotatedText67.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList70);
        java.lang.String str73 = mergeAsOpenNLPAnnotatedText57.merge("opennlp/en-sent.bin", (java.util.List<opennlp.tools.util.Span>) spanList70);
        java.lang.String str74 = mergeAsOpenNLPAnnotatedText28.merge("\"title\"", (java.util.List<opennlp.tools.util.Span>) spanList70);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText76 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray78 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList79 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList79, spanArray78);
        java.lang.String str81 = mergeAsOpenNLPAnnotatedText76.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList79);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText83 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray85 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList86 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList86, spanArray85);
        java.lang.String str88 = mergeAsOpenNLPAnnotatedText83.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList86);
        java.lang.String str89 = mergeAsOpenNLPAnnotatedText76.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList86);
        java.lang.String str90 = mergeAsOpenNLPAnnotatedText28.merge("wikiobject", (java.util.List<opennlp.tools.util.Span>) spanList86);
        java.lang.String str91 = mergeAsOpenNLPAnnotatedText1.merge("http://.wikipedia.org/wiki/hi%21", (java.util.List<opennlp.tools.util.Span>) spanList86);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertNull(funcSpecList5);
        org.junit.Assert.assertNull(pigProgressable10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(pigLogger13);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "title" + "'", str22, "title");
        org.junit.Assert.assertNotNull(spanList23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\" hi ! \"" + "'", str24, "\" hi ! \"");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\" http : // . wikipedia . org / wiki / hi % 21 \"" + "'", str25, "\" http : // . wikipedia . org / wiki / hi % 21 \"");
        org.junit.Assert.assertNull(pigProgressable26);
        org.junit.Assert.assertNotNull(spanArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "href" + "'", str33, "href");
        org.junit.Assert.assertNull(pigProgressable47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(spanArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi !" + "'", str62, "hi !");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(spanArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "href" + "'", str72, "href");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "opennlp / en - sent . bin" + "'", str73, "opennlp / en - sent . bin");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "\" title \"" + "'", str74, "\" title \"");
        org.junit.Assert.assertNotNull(spanArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi !" + "'", str81, "hi !");
        org.junit.Assert.assertNotNull(spanArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "href" + "'", str88, "href");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "hi !" + "'", str89, "hi !");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "wikiobject" + "'", str90, "wikiobject");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "http : // . wikipedia . org / wiki / hi % 21" + "'", str91, "http : // . wikipedia . org / wiki / hi % 21");
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21");
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser1.getParagraphs();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser1.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList4 = annotatingMarkupParser1.getParagraphAnnotations();
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(annotationList4);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = sentencesWithLink0.getPigLogger();
        java.lang.Enum enum3 = null;
        sentencesWithLink0.warn("opennlp / en - sent . bin", enum3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        sentencesWithLink0.setReporter(pigProgressable5);
        java.lang.reflect.Type type7 = sentencesWithLink0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = null;
        sentencesWithLink0.setReporter(pigProgressable8);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = null;
        sentencesWithLink0.setPigLogger(pigLogger10);
        org.apache.commons.logging.Log log12 = sentencesWithLink0.getLogger();
        org.junit.Assert.assertNull(pigLogger1);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(log12);
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        java.lang.String[] strArray1 = org.apache.pig.LoadFunc.getPathStrings("title");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable1 = mergeAsOpenNLPAnnotatedText0.getReporter();
        java.lang.Enum enum3 = null;
        mergeAsOpenNLPAnnotatedText0.warn("title", enum3);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText6 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray8 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList9 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList9, spanArray8);
        java.lang.String str11 = mergeAsOpenNLPAnnotatedText6.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList9);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger12 = null;
        mergeAsOpenNLPAnnotatedText6.setPigLogger(pigLogger12);
        boolean boolean14 = mergeAsOpenNLPAnnotatedText6.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray18 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList19 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList19, spanArray18);
        java.lang.String str21 = mergeAsOpenNLPAnnotatedText16.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList19);
        java.lang.String str22 = mergeAsOpenNLPAnnotatedText6.merge("opennlp/en-sent.bin", (java.util.List<opennlp.tools.util.Span>) spanList19);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText24 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable25 = mergeAsOpenNLPAnnotatedText24.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract26 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = checkAbstract26.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = mergeAsOpenNLPAnnotatedText24.outputSchema(schema27);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText31 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray33 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList34 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList34, spanArray33);
        java.lang.String str36 = mergeAsOpenNLPAnnotatedText31.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList34);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText38 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray40 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList41 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList41, spanArray40);
        java.lang.String str43 = mergeAsOpenNLPAnnotatedText38.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList41);
        java.lang.String str44 = mergeAsOpenNLPAnnotatedText31.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList41);
        java.lang.String str45 = mergeAsOpenNLPAnnotatedText24.merge("title", (java.util.List<opennlp.tools.util.Span>) spanList41);
        java.lang.String str46 = mergeAsOpenNLPAnnotatedText6.merge("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", (java.util.List<opennlp.tools.util.Span>) spanList41);
        java.lang.String str47 = mergeAsOpenNLPAnnotatedText0.merge("", (java.util.List<opennlp.tools.util.Span>) spanList41);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable48 = mergeAsOpenNLPAnnotatedText0.getReporter();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList49 = mergeAsOpenNLPAnnotatedText0.getArgToFuncMapping();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText52 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("");
        mergeAsOpenNLPAnnotatedText52.progress();
        boolean boolean54 = mergeAsOpenNLPAnnotatedText52.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText56 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray58 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList59 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList59, spanArray58);
        java.lang.String str61 = mergeAsOpenNLPAnnotatedText56.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList59);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger62 = null;
        mergeAsOpenNLPAnnotatedText56.setPigLogger(pigLogger62);
        boolean boolean64 = mergeAsOpenNLPAnnotatedText56.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText66 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray68 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList69 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList69, spanArray68);
        java.lang.String str71 = mergeAsOpenNLPAnnotatedText66.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList69);
        java.lang.String str72 = mergeAsOpenNLPAnnotatedText56.merge("opennlp/en-sent.bin", (java.util.List<opennlp.tools.util.Span>) spanList69);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText74 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable75 = mergeAsOpenNLPAnnotatedText74.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract76 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema77 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema78 = checkAbstract76.outputSchema(schema77);
        org.apache.pig.impl.logicalLayer.schema.Schema schema79 = mergeAsOpenNLPAnnotatedText74.outputSchema(schema77);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText81 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray83 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList84 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList84, spanArray83);
        java.lang.String str86 = mergeAsOpenNLPAnnotatedText81.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList84);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText88 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray90 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList91 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList91, spanArray90);
        java.lang.String str93 = mergeAsOpenNLPAnnotatedText88.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList91);
        java.lang.String str94 = mergeAsOpenNLPAnnotatedText81.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList91);
        java.lang.String str95 = mergeAsOpenNLPAnnotatedText74.merge("title", (java.util.List<opennlp.tools.util.Span>) spanList91);
        java.lang.String str96 = mergeAsOpenNLPAnnotatedText56.merge("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", (java.util.List<opennlp.tools.util.Span>) spanList91);
        java.lang.String str97 = mergeAsOpenNLPAnnotatedText52.merge("hi!\n", (java.util.List<opennlp.tools.util.Span>) spanList91);
        java.lang.String str98 = mergeAsOpenNLPAnnotatedText0.merge("\"\"\"hi!\"\" \"\n", (java.util.List<opennlp.tools.util.Span>) spanList91);
        org.junit.Assert.assertNull(pigProgressable1);
        org.junit.Assert.assertNotNull(spanArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi !" + "'", str11, "hi !");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(spanArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "href" + "'", str21, "href");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "opennlp / en - sent . bin" + "'", str22, "opennlp / en - sent . bin");
        org.junit.Assert.assertNull(pigProgressable25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(spanArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi !" + "'", str36, "hi !");
        org.junit.Assert.assertNotNull(spanArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "href" + "'", str43, "href");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi !" + "'", str44, "hi !");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "title" + "'", str45, "title");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21" + "'", str46, "http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNull(pigProgressable48);
        org.junit.Assert.assertNull(funcSpecList49);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(spanArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi !" + "'", str61, "hi !");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(spanArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "href" + "'", str71, "href");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "opennlp / en - sent . bin" + "'", str72, "opennlp / en - sent . bin");
        org.junit.Assert.assertNull(pigProgressable75);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(spanArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi !" + "'", str86, "hi !");
        org.junit.Assert.assertNotNull(spanArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "href" + "'", str93, "href");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "hi !" + "'", str94, "hi !");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "title" + "'", str95, "title");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21" + "'", str96, "http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "hi !" + "'", str97, "hi !");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "\"\"\" hi ! \"\" \"" + "'", str98, "\"\"\" hi ! \"\" \"");
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.pig.Expression expression5 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression5);
        org.apache.pig.LoadCaster loadCaster7 = parsingWikipediaLoader1.getLoadCaster();
        org.apache.hadoop.mapreduce.RecordReader recordReader8 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit9 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader8, pigSplit9);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple11 = parsingWikipediaLoader1.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNotNull(loadCaster7);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        sentencesWithLink0.setReporter(pigProgressable4);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = sentencesWithLink0.getReporter();
        sentencesWithLink0.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = null;
        sentencesWithLink0.setReporter(pigProgressable8);
        java.lang.reflect.Type type10 = sentencesWithLink0.getReturnType();
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNull(pigProgressable6);
        org.junit.Assert.assertNotNull(type10);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract((int) (byte) 10);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList2 = checkAbstract1.getArgToFuncMapping();
        java.lang.reflect.Type type3 = checkAbstract1.getReturnType();
        org.junit.Assert.assertNull(funcSpecList2);
        org.junit.Assert.assertNotNull(type3);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader0 = new pignlproc.storage.ParsingWikipediaLoader();
        org.apache.pig.Expression expression1 = null;
        parsingWikipediaLoader0.setPartitionFilter(expression1);
        org.apache.pig.LoadCaster loadCaster3 = parsingWikipediaLoader0.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceStatistics resourceStatistics6 = parsingWikipediaLoader0.getStatistics("http://http://hi!\n.wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/%22%22%22_http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_%22%22%22", job5);
        org.junit.Assert.assertNotNull(loadCaster3);
        org.junit.Assert.assertNull(resourceStatistics6);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        java.net.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader wikipediaRecordReader3 = new pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader(uRL0, (long) (short) 1, (long) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/hrefwikiobject\"\"\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"\"\"wikiobject\"hi!\"\nwikiobject\nwikiobjectopennlp/en-sent.binwikiobjecthttp://hi!\n.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._binwikiobjecthttp://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21wikiobjecthttp://\"http://.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22wikiobject\"opennlp / en - sent . bin\"wikiobject\"\"");
        noLoopInPath1.progress();
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://.wikipedia.org/wiki/hi%21", job4);
        org.apache.hadoop.mapreduce.InputFormat inputFormat6 = uriStringLiteralNTriplesLoader2.getInputFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple7 = uriStringLiteralNTriplesLoader2.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(inputFormat6);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("http://.wikipedia.org/wiki/\n");
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("hi !\n", "", "http://\"title\"\n.wikipedia.org/wiki/");
        org.apache.hadoop.fs.Path path5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = uriUriNTriplesStorer3.relToAbsPathForStoreLocation("\" hi ! \"", path5);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \" hi ! \" curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader3.getSchema("", job5);
        org.apache.hadoop.mapreduce.Job job8 = null;
        org.apache.pig.ResourceStatistics resourceStatistics9 = uriUriNTriplesLoader3.getStatistics("opennlp/en-sent.bin", job8);
        org.apache.pig.Expression expression10 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression10);
        org.apache.hadoop.mapreduce.Job job13 = null;
        org.apache.pig.ResourceSchema resourceSchema14 = uriUriNTriplesLoader3.getSchema("http://.wikipedia.org/wiki/hi%21", job13);
        org.apache.hadoop.mapreduce.Job job16 = null;
        org.apache.pig.ResourceStatistics resourceStatistics17 = uriUriNTriplesLoader3.getStatistics("opennlp / en - sent . bin", job16);
        org.apache.pig.Expression expression18 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression18);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple20 = uriUriNTriplesLoader3.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNull(resourceStatistics9);
        org.junit.Assert.assertNotNull(resourceSchema14);
        org.junit.Assert.assertNull(resourceStatistics17);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        java.lang.String str5 = annotation4.label;
        int int6 = annotation4.end;
        int int7 = annotation4.end;
        java.lang.String str8 = annotation4.value;
        java.lang.String str9 = annotation4.value;
        java.lang.String str10 = annotation4.label;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "title" + "'", str5, "title");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "title" + "'", str10, "title");
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        info.bliki.wiki.model.WikiModel wikiModel12 = annotatingMarkupParser0.makeWikiModel("\"hi!\"\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser13 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList14 = annotatingMarkupParser13.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser15 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser15.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList17 = annotatingMarkupParser15.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser15.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser19.getHeaders();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser19.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList22 = annotatingMarkupParser19.getHeaderAnnotations();
        java.lang.String str23 = annotatingMarkupParser19.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser24 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser24.getHeaders();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser24.getHeaders();
        java.lang.Appendable appendable27 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable28 = annotatingMarkupParser24.new CountingAppendable(appendable27);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable29 = annotatingMarkupParser19.new CountingAppendable((java.lang.Appendable) countingAppendable28);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser30 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList31 = annotatingMarkupParser30.getHeaderAnnotations();
        java.lang.String str32 = annotatingMarkupParser30.getRedirect();
        pignlproc.markup.Annotation annotation37 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation42 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int43 = annotation42.end;
        int int44 = annotation42.begin;
        pignlproc.markup.Annotation[] annotationArray45 = new pignlproc.markup.Annotation[] { annotation37, annotation42 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList46 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList46, annotationArray45);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser48 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList49 = annotatingMarkupParser48.getHeaders();
        java.util.List<java.lang.String> strList50 = annotatingMarkupParser48.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList51 = annotatingMarkupParser48.getHeaderAnnotations();
        java.lang.String str52 = annotatingMarkupParser48.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser53 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList54 = annotatingMarkupParser53.getHeaders();
        java.util.List<java.lang.String> strList55 = annotatingMarkupParser53.getHeaders();
        java.lang.Appendable appendable56 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable57 = annotatingMarkupParser53.new CountingAppendable(appendable56);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable58 = annotatingMarkupParser48.new CountingAppendable((java.lang.Appendable) countingAppendable57);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser59 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList60 = annotatingMarkupParser59.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel62 = annotatingMarkupParser59.makeWikiModel("title");
        annotatingMarkupParser30.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList46, (java.lang.Appendable) countingAppendable57, (info.bliki.wiki.model.IWikiModel) wikiModel62);
        annotatingMarkupParser13.nodesToText(annotationList18, (java.lang.Appendable) countingAppendable29, (info.bliki.wiki.model.IWikiModel) wikiModel62);
        int int65 = countingAppendable29.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable66 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable29);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser67 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList68 = annotatingMarkupParser67.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList69 = annotatingMarkupParser67.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList70 = annotatingMarkupParser67.getParagraphAnnotations();
        java.util.List<java.lang.String> strList71 = annotatingMarkupParser67.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList72 = annotatingMarkupParser67.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser73 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList74 = annotatingMarkupParser73.getHeaderAnnotations();
        java.util.List<java.lang.String> strList75 = annotatingMarkupParser73.getParagraphs();
        java.lang.Appendable appendable76 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable77 = annotatingMarkupParser73.new CountingAppendable(appendable76);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable78 = annotatingMarkupParser67.new CountingAppendable((java.lang.Appendable) countingAppendable77);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable79 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable77);
        int int80 = countingAppendable79.currentPosition;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable82 = countingAppendable79.append(' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(wikiModel12);
        org.junit.Assert.assertNotNull(annotationList14);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(annotationList17);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(annotationList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNotNull(annotationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(annotationList51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(annotationList60);
        org.junit.Assert.assertNotNull(wikiModel62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNotNull(annotationList69);
        org.junit.Assert.assertNotNull(annotationList70);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNotNull(annotationList72);
        org.junit.Assert.assertNotNull(annotationList74);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.finish();
        sentencesWithLink0.progress();
        sentencesWithLink0.finish();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = sentencesWithLink0.getReporter();
        org.apache.pig.data.Tuple tuple8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.DataBag dataBag9 = sentencesWithLink0.exec(tuple8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNull(pigProgressable7);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("\"hi!\"\n", "title", "hi !\n");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceStatistics resourceStatistics6 = uriUriNTriplesLoader3.getStatistics("", job5);
        org.junit.Assert.assertNull(resourceStatistics6);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        java.lang.String str5 = annotation4.label;
        java.lang.String str6 = annotation4.label;
        int int7 = annotation4.begin;
        int int8 = annotation4.begin;
        int int9 = annotation4.end;
        int int10 = annotation4.begin;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "title" + "'", str5, "title");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "title" + "'", str6, "title");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("opennlp / en - sent . bin", false);
        org.apache.pig.data.Tuple tuple3 = null;
        java.lang.String str4 = concatTextBag2.exec(tuple3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("\"title\"");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser2 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser2.getHeaders();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser2.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser2.getHeaderAnnotations();
        java.lang.String str6 = annotatingMarkupParser2.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser7 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser7.getHeaders();
        java.util.List<java.lang.String> strList9 = annotatingMarkupParser7.getHeaders();
        java.lang.Appendable appendable10 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable11 = annotatingMarkupParser7.new CountingAppendable(appendable10);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable12 = annotatingMarkupParser2.new CountingAppendable((java.lang.Appendable) countingAppendable11);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser13 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList14 = annotatingMarkupParser13.getHeaders();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser13.getHeaders();
        java.lang.Appendable appendable16 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable17 = annotatingMarkupParser13.new CountingAppendable(appendable16);
        countingAppendable17.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable20 = annotatingMarkupParser2.new CountingAppendable((java.lang.Appendable) countingAppendable17);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable21 = annotatingMarkupParser1.new CountingAppendable((java.lang.Appendable) countingAppendable20);
        java.lang.String str23 = annotatingMarkupParser1.parse("http://wikiobject.wikipedia.org/wiki/opennlp%2Fen-sent.bin");
        java.lang.Class<?> wildcardClass24 = annotatingMarkupParser1.getClass();
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\n" + "'", str23, "\n");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("\" http : // \"\" opennlp / en - sent . bin \"\" . wikipedia . org / wiki / hrefwikiobject \"\"\"\"\"\" http : // hi ! . wikipedia . org / wiki / % 22 http % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 22 % 0 A \"\"\"\"\"\" wikiobject \"\" hi ! \"\" wikiobject wikiobjectopennlp / en - sent . binwikiobjecthttp : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ binwikiobjecthttp : // http : // \"\" title \"\" . wikipedia . org / wiki / % 22 hi % 21 % 22 . wikipedia . org / wiki / hi % 21 wikiobjecthttp : // \"\" http : // . wikipedia . org / wiki / hi % 21 \"\" . wikipedia . org / wiki / % 22 % 22 % 22 http % 3 A % 2 F % 2 Fhi _ % 21 _ . wikipedia . org % 2 Fwiki % 2 Fhttp % 253 A % 252 F % 252 Fhttp % 253 A % 252 F % 252 F . wikipedia . org % 252 Fwiki % 252 Fhi % 252521 % 250 A . wikipedia . org % 252 Fwiki % 252 F % 252522 title % 252522 % 22 % 22 % 22 wikiobject \"\" opennlp / en - sent . bin \"\" wikiobject \"\"\"\"\"", false);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract((int) '#');
        org.apache.pig.data.Tuple tuple2 = null;
        java.lang.Boolean boolean3 = checkAbstract1.exec(tuple2);
        boolean boolean4 = checkAbstract1.isAsynchronous();
        org.junit.Assert.assertEquals("'" + boolean3 + "' != '" + false + "'", boolean3, false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str2 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.Annotation annotation7 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation12 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int13 = annotation12.end;
        int int14 = annotation12.begin;
        pignlproc.markup.Annotation[] annotationArray15 = new pignlproc.markup.Annotation[] { annotation7, annotation12 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList16 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList16, annotationArray15);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser18 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList19 = annotatingMarkupParser18.getHeaders();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser18.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser18.getHeaderAnnotations();
        java.lang.String str22 = annotatingMarkupParser18.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser23 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList24 = annotatingMarkupParser23.getHeaders();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser23.getHeaders();
        java.lang.Appendable appendable26 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable27 = annotatingMarkupParser23.new CountingAppendable(appendable26);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable28 = annotatingMarkupParser18.new CountingAppendable((java.lang.Appendable) countingAppendable27);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser29 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList30 = annotatingMarkupParser29.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel32 = annotatingMarkupParser29.makeWikiModel("title");
        annotatingMarkupParser0.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList16, (java.lang.Appendable) countingAppendable27, (info.bliki.wiki.model.IWikiModel) wikiModel32);
        pignlproc.evaluation.NoLoopInPath noLoopInPath35 = new pignlproc.evaluation.NoLoopInPath("wikiobject");
        boolean boolean36 = noLoopInPath35.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger37 = null;
        noLoopInPath35.setPigLogger(pigLogger37);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger39 = null;
        noLoopInPath35.setPigLogger(pigLogger39);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger41 = noLoopInPath35.getPigLogger();
        pignlproc.evaluation.ConcatTextBag concatTextBag43 = new pignlproc.evaluation.ConcatTextBag("opennlp/en-sent.bin");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable44 = concatTextBag43.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable45 = null;
        concatTextBag43.setReporter(pigProgressable45);
        pignlproc.evaluation.CheckAbstract checkAbstract47 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum49 = null;
        checkAbstract47.warn("http://.wikipedia.org/wiki/hi%21", enum49);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger51 = null;
        checkAbstract47.setPigLogger(pigLogger51);
        checkAbstract47.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText54 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger55 = null;
        safeTsvText54.setPigLogger(pigLogger55);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText57 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable58 = mergeAsOpenNLPAnnotatedText57.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract59 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = checkAbstract59.outputSchema(schema60);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = mergeAsOpenNLPAnnotatedText57.outputSchema(schema60);
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = safeTsvText54.outputSchema(schema62);
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = checkAbstract47.outputSchema(schema63);
        pignlproc.evaluation.NoLoopInPath noLoopInPath65 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText66 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger67 = null;
        safeTsvText66.setPigLogger(pigLogger67);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText69 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable70 = mergeAsOpenNLPAnnotatedText69.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract71 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema73 = checkAbstract71.outputSchema(schema72);
        org.apache.pig.impl.logicalLayer.schema.Schema schema74 = mergeAsOpenNLPAnnotatedText69.outputSchema(schema72);
        org.apache.pig.impl.logicalLayer.schema.Schema schema75 = safeTsvText66.outputSchema(schema74);
        org.apache.pig.impl.logicalLayer.schema.Schema schema76 = noLoopInPath65.outputSchema(schema74);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag77 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText78 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger79 = null;
        safeTsvText78.setPigLogger(pigLogger79);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText81 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable82 = mergeAsOpenNLPAnnotatedText81.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract83 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema84 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema85 = checkAbstract83.outputSchema(schema84);
        org.apache.pig.impl.logicalLayer.schema.Schema schema86 = mergeAsOpenNLPAnnotatedText81.outputSchema(schema84);
        org.apache.pig.impl.logicalLayer.schema.Schema schema87 = safeTsvText78.outputSchema(schema86);
        org.apache.pig.impl.logicalLayer.schema.Schema schema88 = aggregateTextBag77.outputSchema(schema86);
        org.apache.pig.impl.logicalLayer.schema.Schema schema89 = noLoopInPath65.outputSchema(schema86);
        org.apache.pig.impl.logicalLayer.schema.Schema schema90 = checkAbstract47.outputSchema(schema86);
        org.apache.pig.impl.logicalLayer.schema.Schema schema91 = concatTextBag43.outputSchema(schema86);
        java.util.List<opennlp.tools.util.Span> spanList92 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) annotationList16, (java.lang.Object) pigLogger41, (java.lang.Object) concatTextBag43);
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(annotationArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(annotationList30);
        org.junit.Assert.assertNotNull(wikiModel32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(pigLogger41);
        org.junit.Assert.assertNull(pigProgressable44);
        org.junit.Assert.assertNull(pigProgressable58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(pigProgressable70);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(pigProgressable82);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(spanList92);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.setMaxInputSplitSize(job0, (long) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum2 = null;
        safeTsvText0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = safeTsvText0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        safeTsvText0.setReporter(pigProgressable5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = null;
        safeTsvText0.setReporter(pigProgressable7);
        boolean boolean9 = safeTsvText0.isAsynchronous();
        java.lang.Enum enum11 = null;
        safeTsvText0.warn("\"title\"\n", enum11);
        pignlproc.evaluation.ConcatTextBag concatTextBag14 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum17 = null;
        checkAbstract15.warn("http://.wikipedia.org/wiki/hi%21", enum17);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger19 = null;
        checkAbstract15.setPigLogger(pigLogger19);
        checkAbstract15.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText22 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = null;
        safeTsvText22.setPigLogger(pigLogger23);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText25 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable26 = mergeAsOpenNLPAnnotatedText25.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract27 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = checkAbstract27.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = mergeAsOpenNLPAnnotatedText25.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = safeTsvText22.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = checkAbstract15.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = concatTextBag14.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = safeTsvText0.outputSchema(schema32);
        org.apache.commons.logging.Log log35 = safeTsvText0.getLogger();
        pignlproc.evaluation.SafeTsvText safeTsvText36 = new pignlproc.evaluation.SafeTsvText();
        java.lang.reflect.Type type37 = safeTsvText36.getReturnType();
        pignlproc.evaluation.CheckAbstract checkAbstract38 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = checkAbstract38.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = safeTsvText36.outputSchema(schema40);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText42 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray44 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList45 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList45, spanArray44);
        java.lang.String str47 = mergeAsOpenNLPAnnotatedText42.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList45);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList48 = mergeAsOpenNLPAnnotatedText42.getArgToFuncMapping();
        org.apache.commons.logging.Log log49 = mergeAsOpenNLPAnnotatedText42.getLogger();
        pignlproc.evaluation.CheckAbstract checkAbstract50 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum52 = null;
        checkAbstract50.warn("http://.wikipedia.org/wiki/hi%21", enum52);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable54 = null;
        checkAbstract50.setReporter(pigProgressable54);
        java.lang.reflect.Type type56 = checkAbstract50.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath57 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText58 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger59 = null;
        safeTsvText58.setPigLogger(pigLogger59);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText61 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable62 = mergeAsOpenNLPAnnotatedText61.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract63 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = checkAbstract63.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = mergeAsOpenNLPAnnotatedText61.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = safeTsvText58.outputSchema(schema66);
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = noLoopInPath57.outputSchema(schema66);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag69 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText70 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger71 = null;
        safeTsvText70.setPigLogger(pigLogger71);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText73 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable74 = mergeAsOpenNLPAnnotatedText73.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract75 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema76 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema77 = checkAbstract75.outputSchema(schema76);
        org.apache.pig.impl.logicalLayer.schema.Schema schema78 = mergeAsOpenNLPAnnotatedText73.outputSchema(schema76);
        org.apache.pig.impl.logicalLayer.schema.Schema schema79 = safeTsvText70.outputSchema(schema78);
        org.apache.pig.impl.logicalLayer.schema.Schema schema80 = aggregateTextBag69.outputSchema(schema78);
        org.apache.pig.impl.logicalLayer.schema.Schema schema81 = noLoopInPath57.outputSchema(schema78);
        org.apache.pig.impl.logicalLayer.schema.Schema schema82 = checkAbstract50.outputSchema(schema78);
        org.apache.pig.impl.logicalLayer.schema.Schema schema83 = mergeAsOpenNLPAnnotatedText42.outputSchema(schema82);
        org.apache.pig.impl.logicalLayer.schema.Schema schema84 = safeTsvText36.outputSchema(schema82);
        org.apache.pig.impl.logicalLayer.schema.Schema schema85 = safeTsvText0.outputSchema(schema82);
        safeTsvText0.progress();
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(pigProgressable26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(spanArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi !" + "'", str47, "hi !");
        org.junit.Assert.assertNull(funcSpecList48);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNull(pigProgressable62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(pigProgressable74);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("href");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("opennlp/en-sent.bin", job3);
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader1.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceStatistics resourceStatistics8 = parsingWikipediaLoader1.getStatistics("http://\"http://http://\"\"title\"\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/http_%3A_%2F%2F_hi_%21_._wikipedia_._org_%2F_wiki_%2F_opennlp___%25_2_F___en___-___sent___.___bin", job7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceStatistics resourceStatistics11 = parsingWikipediaLoader1.getStatistics("http://\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\".wikipedia.org/wiki/href", job10);
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(loadCaster5);
        org.junit.Assert.assertNull(resourceStatistics8);
        org.junit.Assert.assertNull(resourceStatistics11);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("\"hi!\"\n");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriStringLiteralNTriplesStorer1.getOutputFormat();
        org.apache.hadoop.mapreduce.Job job4 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.setStoreLocation("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521", job4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat2);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((int) 'a', false);
        pignlproc.evaluation.NoLoopInPath noLoopInPath3 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText4 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = null;
        safeTsvText4.setPigLogger(pigLogger5);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText7 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = mergeAsOpenNLPAnnotatedText7.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract9 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = checkAbstract9.outputSchema(schema10);
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = mergeAsOpenNLPAnnotatedText7.outputSchema(schema10);
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = safeTsvText4.outputSchema(schema12);
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = noLoopInPath3.outputSchema(schema12);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag15 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText16 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger17 = null;
        safeTsvText16.setPigLogger(pigLogger17);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText19 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable20 = mergeAsOpenNLPAnnotatedText19.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract21 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = checkAbstract21.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = mergeAsOpenNLPAnnotatedText19.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = safeTsvText16.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = aggregateTextBag15.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = noLoopInPath3.outputSchema(schema24);
        pignlproc.evaluation.CheckAbstract checkAbstract28 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum30 = null;
        checkAbstract28.warn("http://.wikipedia.org/wiki/hi%21", enum30);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger32 = null;
        checkAbstract28.setPigLogger(pigLogger32);
        checkAbstract28.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText35 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger36 = null;
        safeTsvText35.setPigLogger(pigLogger36);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText38 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable39 = mergeAsOpenNLPAnnotatedText38.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract40 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = checkAbstract40.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = mergeAsOpenNLPAnnotatedText38.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = safeTsvText35.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = checkAbstract28.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = noLoopInPath3.outputSchema(schema45);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = aggregateTextBag2.outputSchema(schema45);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag49 = new pignlproc.evaluation.AggregateTextBag((int) (short) 10);
        pignlproc.evaluation.ConcatTextBag concatTextBag51 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract52 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum54 = null;
        checkAbstract52.warn("http://.wikipedia.org/wiki/hi%21", enum54);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger56 = null;
        checkAbstract52.setPigLogger(pigLogger56);
        checkAbstract52.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText59 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger60 = null;
        safeTsvText59.setPigLogger(pigLogger60);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText62 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable63 = mergeAsOpenNLPAnnotatedText62.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract64 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = checkAbstract64.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = mergeAsOpenNLPAnnotatedText62.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = safeTsvText59.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = checkAbstract52.outputSchema(schema68);
        org.apache.pig.impl.logicalLayer.schema.Schema schema70 = concatTextBag51.outputSchema(schema69);
        org.apache.pig.impl.logicalLayer.schema.Schema schema71 = aggregateTextBag49.outputSchema(schema69);
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = aggregateTextBag2.outputSchema(schema71);
        pignlproc.evaluation.NoLoopInPath noLoopInPath74 = new pignlproc.evaluation.NoLoopInPath("http://http://hi!\n.wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin");
        org.apache.pig.data.Tuple tuple75 = null;
        java.lang.Boolean boolean76 = noLoopInPath74.exec(tuple75);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser77 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList78 = annotatingMarkupParser77.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel80 = annotatingMarkupParser77.makeWikiModel("title");
        java.util.List<pignlproc.markup.Annotation> annotationList81 = annotatingMarkupParser77.getWikiLinkAnnotations();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<opennlp.tools.util.Span> spanList82 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) schema71, (java.lang.Object) noLoopInPath74, (java.lang.Object) annotationList81);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.pig.impl.logicalLayer.schema.Schema cannot be cast to java.lang.Integer");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigProgressable8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(pigProgressable20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(pigProgressable39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(pigProgressable63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertEquals("'" + boolean76 + "' != '" + true + "'", boolean76, true);
        org.junit.Assert.assertNotNull(annotationList78);
        org.junit.Assert.assertNotNull(wikiModel80);
        org.junit.Assert.assertNotNull(annotationList81);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((int) 'a', false);
        pignlproc.evaluation.NoLoopInPath noLoopInPath3 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText4 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = null;
        safeTsvText4.setPigLogger(pigLogger5);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText7 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = mergeAsOpenNLPAnnotatedText7.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract9 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = checkAbstract9.outputSchema(schema10);
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = mergeAsOpenNLPAnnotatedText7.outputSchema(schema10);
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = safeTsvText4.outputSchema(schema12);
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = noLoopInPath3.outputSchema(schema12);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag15 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText16 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger17 = null;
        safeTsvText16.setPigLogger(pigLogger17);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText19 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable20 = mergeAsOpenNLPAnnotatedText19.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract21 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = checkAbstract21.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = mergeAsOpenNLPAnnotatedText19.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = safeTsvText16.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = aggregateTextBag15.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = noLoopInPath3.outputSchema(schema24);
        pignlproc.evaluation.CheckAbstract checkAbstract28 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum30 = null;
        checkAbstract28.warn("http://.wikipedia.org/wiki/hi%21", enum30);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger32 = null;
        checkAbstract28.setPigLogger(pigLogger32);
        checkAbstract28.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText35 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger36 = null;
        safeTsvText35.setPigLogger(pigLogger36);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText38 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable39 = mergeAsOpenNLPAnnotatedText38.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract40 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = checkAbstract40.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = mergeAsOpenNLPAnnotatedText38.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = safeTsvText35.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = checkAbstract28.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = noLoopInPath3.outputSchema(schema45);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = aggregateTextBag2.outputSchema(schema45);
        java.lang.reflect.Type type48 = aggregateTextBag2.getReturnType();
        org.junit.Assert.assertNull(pigProgressable8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(pigProgressable20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(pigProgressable39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(type48);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser14.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList16 = annotatingMarkupParser14.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel18 = annotatingMarkupParser14.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel20 = annotatingMarkupParser14.makeWikiModel("hi!\n");
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser14.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser22 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser22.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList24 = annotatingMarkupParser22.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList25 = annotatingMarkupParser22.getParagraphAnnotations();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser22.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList27 = annotatingMarkupParser22.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser28 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList29 = annotatingMarkupParser28.getHeaderAnnotations();
        java.util.List<java.lang.String> strList30 = annotatingMarkupParser28.getParagraphs();
        java.lang.Appendable appendable31 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable32 = annotatingMarkupParser28.new CountingAppendable(appendable31);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable33 = annotatingMarkupParser22.new CountingAppendable((java.lang.Appendable) countingAppendable32);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser34 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList35 = annotatingMarkupParser34.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList36 = annotatingMarkupParser34.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel38 = annotatingMarkupParser34.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel40 = annotatingMarkupParser34.makeWikiModel("hi!\n");
        annotatingMarkupParser0.nodesToText(annotationList21, (java.lang.Appendable) countingAppendable33, (info.bliki.wiki.model.IWikiModel) wikiModel40);
        countingAppendable33.currentPosition = 0;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable45 = countingAppendable33.append('4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(annotationList16);
        org.junit.Assert.assertNotNull(wikiModel18);
        org.junit.Assert.assertNotNull(wikiModel20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(annotationList24);
        org.junit.Assert.assertNotNull(annotationList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList27);
        org.junit.Assert.assertNotNull(annotationList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(annotationList36);
        org.junit.Assert.assertNotNull(wikiModel38);
        org.junit.Assert.assertNotNull(wikiModel40);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.commons.logging.Log log3 = sentencesWithLink0.getLogger();
        org.apache.commons.logging.Log log4 = sentencesWithLink0.getLogger();
        sentencesWithLink0.progress();
        org.junit.Assert.assertNotNull(log3);
        org.junit.Assert.assertNotNull(log4);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList3);
        pignlproc.evaluation.ConcatTextBag concatTextBag7 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract8 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum10 = null;
        checkAbstract8.warn("http://.wikipedia.org/wiki/hi%21", enum10);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger12 = null;
        checkAbstract8.setPigLogger(pigLogger12);
        checkAbstract8.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText15 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = null;
        safeTsvText15.setPigLogger(pigLogger16);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText18 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = mergeAsOpenNLPAnnotatedText18.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = checkAbstract20.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = mergeAsOpenNLPAnnotatedText18.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = safeTsvText15.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = checkAbstract8.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = concatTextBag7.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = mergeAsOpenNLPAnnotatedText0.outputSchema(schema25);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText29 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray31 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList32 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList32, spanArray31);
        java.lang.String str34 = mergeAsOpenNLPAnnotatedText29.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList32);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger35 = null;
        mergeAsOpenNLPAnnotatedText29.setPigLogger(pigLogger35);
        boolean boolean37 = mergeAsOpenNLPAnnotatedText29.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText39 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray41 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList42 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList42, spanArray41);
        java.lang.String str44 = mergeAsOpenNLPAnnotatedText39.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList42);
        java.lang.String str45 = mergeAsOpenNLPAnnotatedText29.merge("opennlp/en-sent.bin", (java.util.List<opennlp.tools.util.Span>) spanList42);
        java.lang.String str46 = mergeAsOpenNLPAnnotatedText0.merge("\"title\"", (java.util.List<opennlp.tools.util.Span>) spanList42);
        mergeAsOpenNLPAnnotatedText0.finish();
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "href" + "'", str5, "href");
        org.junit.Assert.assertNull(pigProgressable19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(spanArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi !" + "'", str34, "hi !");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(spanArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "href" + "'", str44, "href");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "opennlp / en - sent . bin" + "'", str45, "opennlp / en - sent . bin");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\" title \"" + "'", str46, "\" title \"");
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader3.getSchema("", job5);
        org.apache.hadoop.mapreduce.Job job8 = null;
        org.apache.pig.ResourceStatistics resourceStatistics9 = uriUriNTriplesLoader3.getStatistics("opennlp/en-sent.bin", job8);
        org.apache.hadoop.mapreduce.Job job11 = null;
        org.apache.pig.ResourceSchema resourceSchema12 = uriUriNTriplesLoader3.getSchema("http://\"title\".wikipedia.org/wiki/%22hi%21%22", job11);
        org.apache.hadoop.mapreduce.Job job14 = null;
        org.apache.pig.ResourceSchema resourceSchema15 = uriUriNTriplesLoader3.getSchema("http://\"title\"\n.wikipedia.org/wiki/\n", job14);
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNull(resourceStatistics9);
        org.junit.Assert.assertNotNull(resourceSchema12);
        org.junit.Assert.assertNotNull(resourceSchema15);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPaths(job0, "http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("wikiobject");
        boolean boolean2 = noLoopInPath1.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger3 = null;
        noLoopInPath1.setPigLogger(pigLogger3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = null;
        noLoopInPath1.setPigLogger(pigLogger5);
        noLoopInPath1.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = null;
        noLoopInPath1.setReporter(pigProgressable8);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("href");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriStringLiteralNTriplesStorer1.getOutputFormat();
        org.apache.hadoop.mapreduce.RecordWriter recordWriter3 = null;
        uriStringLiteralNTriplesStorer1.prepareToWrite(recordWriter3);
        org.apache.hadoop.mapreduce.RecordWriter recordWriter5 = null;
        uriStringLiteralNTriplesStorer1.prepareToWrite(recordWriter5);
        org.apache.hadoop.mapreduce.RecordWriter recordWriter7 = null;
        uriStringLiteralNTriplesStorer1.prepareToWrite(recordWriter7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.cleanupOnFailure("http://http://\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\".wikipedia.org/wiki/%22%22%22opennlp_%2F_en_-_sent_._bin%22%22%22.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org%2Fwiki%2Fhi_%2521", job10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat2);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("\"\"\"\"\"\"\"http://.wikipedia.org/wiki/hi%21\"\"\"\" \"\"\"", true);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("http://http://hi!\n.wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin");
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser1.getParagraphAnnotations();
        org.junit.Assert.assertNotNull(annotationList2);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("titlehref", "hi !\n", "hi!");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader6 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job8 = null;
        org.apache.pig.ResourceSchema resourceSchema9 = uriStringLiteralNTriplesLoader6.getSchema("http://.wikipedia.org/wiki/hi%21", job8);
        org.apache.hadoop.mapreduce.Job job11 = null;
        org.apache.pig.ResourceSchema resourceSchema12 = uriStringLiteralNTriplesLoader6.getSchema("\"title\"\n", job11);
        uriUriNTriplesStorer3.checkSchema(resourceSchema12);
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader14 = new pignlproc.storage.UriStringLiteralNTriplesLoader();
        org.apache.hadoop.mapreduce.Job job16 = null;
        org.apache.pig.ResourceSchema resourceSchema17 = uriStringLiteralNTriplesLoader14.getSchema("", job16);
        org.apache.hadoop.mapreduce.Job job19 = null;
        org.apache.pig.ResourceSchema resourceSchema20 = uriStringLiteralNTriplesLoader14.getSchema("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21", job19);
        org.apache.hadoop.mapreduce.Job job22 = null;
        org.apache.pig.ResourceSchema resourceSchema23 = uriStringLiteralNTriplesLoader14.getSchema("hi !", job22);
        uriUriNTriplesStorer3.checkSchema(resourceSchema23);
        org.junit.Assert.assertNotNull(resourceSchema9);
        org.junit.Assert.assertNotNull(resourceSchema12);
        org.junit.Assert.assertNotNull(resourceSchema17);
        org.junit.Assert.assertNotNull(resourceSchema20);
        org.junit.Assert.assertNotNull(resourceSchema23);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22\n", "http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href\n");
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (byte) 1, (-1), "wikiobject", "href");
        java.lang.String str5 = annotation4.label;
        int int6 = annotation4.begin;
        java.lang.String str7 = annotation4.value;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "wikiobject" + "'", str5, "wikiobject");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "href" + "'", str7, "href");
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader0 = new pignlproc.storage.UriUriNTriplesLoader();
        org.apache.hadoop.mapreduce.Job job2 = null;
        org.apache.pig.ResourceStatistics resourceStatistics3 = uriUriNTriplesLoader0.getStatistics("wikiobject", job2);
        org.apache.hadoop.mapreduce.InputFormat inputFormat4 = uriUriNTriplesLoader0.getInputFormat();
        org.apache.hadoop.mapreduce.RecordReader recordReader5 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit6 = null;
        uriUriNTriplesLoader0.prepareToRead(recordReader5, pigSplit6);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple8 = uriUriNTriplesLoader0.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics3);
        org.junit.Assert.assertNotNull(inputFormat4);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.finish();
        java.lang.Enum enum9 = null;
        sentencesWithLink0.warn("http://.wikipedia.org/wiki/hi%21", enum9);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        sentencesWithLink0.setPigLogger(pigLogger11);
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(funcSpecList6);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = sentencesWithLink0.getPigLogger();
        java.lang.Enum enum3 = null;
        sentencesWithLink0.warn("opennlp / en - sent . bin", enum3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        sentencesWithLink0.setReporter(pigProgressable5);
        pignlproc.evaluation.CheckAbstract checkAbstract7 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum9 = null;
        checkAbstract7.warn("http://.wikipedia.org/wiki/hi%21", enum9);
        java.lang.Enum enum12 = null;
        checkAbstract7.warn("hi !", enum12);
        pignlproc.evaluation.NoLoopInPath noLoopInPath14 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText15 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = null;
        safeTsvText15.setPigLogger(pigLogger16);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText18 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = mergeAsOpenNLPAnnotatedText18.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = checkAbstract20.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = mergeAsOpenNLPAnnotatedText18.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = safeTsvText15.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = noLoopInPath14.outputSchema(schema23);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag26 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText27 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger28 = null;
        safeTsvText27.setPigLogger(pigLogger28);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText30 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable31 = mergeAsOpenNLPAnnotatedText30.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract32 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = checkAbstract32.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = mergeAsOpenNLPAnnotatedText30.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = safeTsvText27.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = aggregateTextBag26.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = noLoopInPath14.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = checkAbstract7.outputSchema(schema38);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = sentencesWithLink0.outputSchema(schema38);
        sentencesWithLink0.finish();
        java.lang.Enum enum43 = null;
        sentencesWithLink0.warn("http://http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21.wikipedia.org/wiki/%22http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521_.wikipedia.org%2Fwiki%2F%2522title%2522href%22", enum43);
        org.junit.Assert.assertNull(pigLogger1);
        org.junit.Assert.assertNull(pigProgressable19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(pigProgressable31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("title", job4);
        org.apache.pig.Expression expression6 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        java.lang.String[] strArray10 = uriStringLiteralNTriplesLoader2.getPartitionKeys("\"title\"", job9);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple11 = uriStringLiteralNTriplesLoader2.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNull(strArray10);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("hi!");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser2 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser2.getHeaders();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser2.getHeaders();
        java.lang.Appendable appendable5 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable6 = annotatingMarkupParser2.new CountingAppendable(appendable5);
        java.lang.String str8 = annotatingMarkupParser2.parse("");
        java.util.List<pignlproc.markup.Annotation> annotationList9 = annotatingMarkupParser2.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser10 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList11 = annotatingMarkupParser10.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser10.makeWikiModel("title");
        java.util.List<pignlproc.markup.Annotation> annotationList14 = annotatingMarkupParser10.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList15 = annotatingMarkupParser10.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser16 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList17 = annotatingMarkupParser16.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser18 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList19 = annotatingMarkupParser18.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList20 = annotatingMarkupParser18.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser18.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser22 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser22.getHeaders();
        java.util.List<java.lang.String> strList24 = annotatingMarkupParser22.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList25 = annotatingMarkupParser22.getHeaderAnnotations();
        java.lang.String str26 = annotatingMarkupParser22.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser27 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList28 = annotatingMarkupParser27.getHeaders();
        java.util.List<java.lang.String> strList29 = annotatingMarkupParser27.getHeaders();
        java.lang.Appendable appendable30 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable31 = annotatingMarkupParser27.new CountingAppendable(appendable30);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable32 = annotatingMarkupParser22.new CountingAppendable((java.lang.Appendable) countingAppendable31);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser33 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList34 = annotatingMarkupParser33.getHeaderAnnotations();
        java.lang.String str35 = annotatingMarkupParser33.getRedirect();
        pignlproc.markup.Annotation annotation40 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation45 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int46 = annotation45.end;
        int int47 = annotation45.begin;
        pignlproc.markup.Annotation[] annotationArray48 = new pignlproc.markup.Annotation[] { annotation40, annotation45 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList49 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList49, annotationArray48);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser51 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList52 = annotatingMarkupParser51.getHeaders();
        java.util.List<java.lang.String> strList53 = annotatingMarkupParser51.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList54 = annotatingMarkupParser51.getHeaderAnnotations();
        java.lang.String str55 = annotatingMarkupParser51.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser56 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList57 = annotatingMarkupParser56.getHeaders();
        java.util.List<java.lang.String> strList58 = annotatingMarkupParser56.getHeaders();
        java.lang.Appendable appendable59 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable60 = annotatingMarkupParser56.new CountingAppendable(appendable59);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable61 = annotatingMarkupParser51.new CountingAppendable((java.lang.Appendable) countingAppendable60);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser62 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList63 = annotatingMarkupParser62.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel65 = annotatingMarkupParser62.makeWikiModel("title");
        annotatingMarkupParser33.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList49, (java.lang.Appendable) countingAppendable60, (info.bliki.wiki.model.IWikiModel) wikiModel65);
        annotatingMarkupParser16.nodesToText(annotationList21, (java.lang.Appendable) countingAppendable32, (info.bliki.wiki.model.IWikiModel) wikiModel65);
        countingAppendable32.currentPosition = ' ';
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser70 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList71 = annotatingMarkupParser70.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel73 = annotatingMarkupParser70.makeWikiModel("title");
        annotatingMarkupParser2.nodesToText(annotationList15, (java.lang.Appendable) countingAppendable32, (info.bliki.wiki.model.IWikiModel) wikiModel73);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable75 = annotatingMarkupParser1.new CountingAppendable((java.lang.Appendable) countingAppendable32);
        int int76 = countingAppendable32.currentPosition;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable80 = countingAppendable32.append((java.lang.CharSequence) "\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/href\"", (int) ' ', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(annotationList9);
        org.junit.Assert.assertNotNull(annotationList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertNotNull(annotationList14);
        org.junit.Assert.assertNotNull(annotationList15);
        org.junit.Assert.assertNotNull(annotationList17);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(annotationList20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(annotationList25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(annotationList34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNotNull(annotationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(annotationList54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(annotationList63);
        org.junit.Assert.assertNotNull(wikiModel65);
        org.junit.Assert.assertNotNull(annotationList71);
        org.junit.Assert.assertNotNull(wikiModel73);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 32 + "'", int76 == 32);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("hi !\n\n");
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("\"\"\"hi!\"\" \"");
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser1.getParagraphAnnotations();
        java.lang.String str3 = annotatingMarkupParser1.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser4 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList5 = annotatingMarkupParser4.getHeaders();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser4.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser4.getHeaders();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser4.getHeaders();
        java.util.List<java.lang.String> strList9 = annotatingMarkupParser4.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList10 = null;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser11 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser11.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList13 = annotatingMarkupParser11.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList14 = annotatingMarkupParser11.getParagraphAnnotations();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser11.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList16 = annotatingMarkupParser11.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser17 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser17.getHeaderAnnotations();
        java.util.List<java.lang.String> strList19 = annotatingMarkupParser17.getParagraphs();
        java.lang.Appendable appendable20 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable21 = annotatingMarkupParser17.new CountingAppendable(appendable20);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable22 = annotatingMarkupParser11.new CountingAppendable((java.lang.Appendable) countingAppendable21);
        countingAppendable21.currentPosition = 35;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser25 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList26 = annotatingMarkupParser25.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel28 = annotatingMarkupParser25.makeWikiModel("title");
        java.util.List<pignlproc.markup.Annotation> annotationList29 = annotatingMarkupParser25.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList30 = annotatingMarkupParser25.getParagraphAnnotations();
        boolean boolean31 = annotatingMarkupParser25.noLinks();
        info.bliki.wiki.model.WikiModel wikiModel33 = annotatingMarkupParser25.makeWikiModel("\" title \"");
        annotatingMarkupParser4.nodesToText(annotationList10, (java.lang.Appendable) countingAppendable21, (info.bliki.wiki.model.IWikiModel) wikiModel33);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable35 = annotatingMarkupParser1.new CountingAppendable((java.lang.Appendable) countingAppendable21);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable37 = countingAppendable21.append((java.lang.CharSequence) "http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(annotationList13);
        org.junit.Assert.assertNotNull(annotationList14);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(annotationList16);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(annotationList26);
        org.junit.Assert.assertNotNull(wikiModel28);
        org.junit.Assert.assertNotNull(annotationList29);
        org.junit.Assert.assertNotNull(annotationList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wikiModel33);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("title", job4);
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = uriStringLiteralNTriplesLoader2.getSchema("http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21", job7);
        org.apache.pig.LoadCaster loadCaster9 = uriStringLiteralNTriplesLoader2.getLoadCaster();
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(resourceSchema8);
        org.junit.Assert.assertNotNull(loadCaster9);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        java.net.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader wikipediaRecordReader3 = new pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader(uRL0, (long) 10, (long) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        org.apache.hadoop.fs.Path path1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.apache.pig.LoadFunc.getAbsolutePath("\"\"\"http://.wikipedia.org/wiki/hi%21\"\"  \"", path1);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"\"\"http://.wikipedia.org/wiki/hi%21\"\"  \" curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("http://wikiobject.wikipedia.org/wiki/opennlp%2Fen-sent.bin");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader3 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceStatistics resourceStatistics6 = parsingWikipediaLoader3.getStatistics("hi!", job5);
        org.apache.hadoop.mapreduce.RecordReader recordReader7 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit8 = null;
        parsingWikipediaLoader3.prepareToRead(recordReader7, pigSplit8);
        org.apache.hadoop.mapreduce.Job job11 = null;
        java.lang.String[] strArray12 = parsingWikipediaLoader3.getPartitionKeys("http://.wikipedia.org/wiki/hi%21", job11);
        org.apache.pig.Expression expression13 = null;
        parsingWikipediaLoader3.setPartitionFilter(expression13);
        org.apache.hadoop.mapreduce.Job job16 = null;
        org.apache.pig.ResourceStatistics resourceStatistics17 = parsingWikipediaLoader3.getStatistics("\"hi!\"\n\n", job16);
        org.apache.hadoop.mapreduce.Job job19 = null;
        org.apache.pig.ResourceSchema resourceSchema20 = parsingWikipediaLoader3.getSchema("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21", job19);
        uriUriNTriplesStorer1.checkSchema(resourceSchema20);
        org.apache.hadoop.mapreduce.Job job23 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer1.cleanupOnFailure("http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21", job23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics6);
        org.junit.Assert.assertNull(strArray12);
        org.junit.Assert.assertNull(resourceStatistics17);
        org.junit.Assert.assertNotNull(resourceSchema20);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser2 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser2.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList4 = annotatingMarkupParser2.getWikiLinkAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList8 = annotatingMarkupParser5.getHeaderAnnotations();
        java.lang.String str9 = annotatingMarkupParser5.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser10 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser10.getHeaders();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser10.getHeaders();
        java.lang.Appendable appendable13 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable14 = annotatingMarkupParser10.new CountingAppendable(appendable13);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable15 = annotatingMarkupParser5.new CountingAppendable((java.lang.Appendable) countingAppendable14);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable16 = annotatingMarkupParser2.new CountingAppendable((java.lang.Appendable) countingAppendable15);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable17 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable21 = countingAppendable17.append((java.lang.CharSequence) "\" http : // . wikipedia . org / wiki / hi % 21 \"", (int) (byte) 0, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(annotationList4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(annotationList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(strList12);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriStringLiteralNTriplesStorer1.getOutputFormat();
        org.junit.Assert.assertNotNull(outputFormat2);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int5 = annotation4.end;
        int int6 = annotation4.begin;
        java.lang.String str7 = annotation4.value;
        int int8 = annotation4.begin;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://.wikipedia.org/wiki/hi%21" + "'", str7, "http://.wikipedia.org/wiki/hi%21");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag12 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText13 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        safeTsvText13.setPigLogger(pigLogger14);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText16.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = safeTsvText13.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = aggregateTextBag12.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = noLoopInPath0.outputSchema(schema21);
        org.apache.commons.logging.Log log25 = noLoopInPath0.getLogger();
        org.apache.pig.data.Tuple tuple26 = null;
        java.lang.Boolean boolean27 = noLoopInPath0.exec(tuple26);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertEquals("'" + boolean27 + "' != '" + true + "'", boolean27, true);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (short) -1, (-1), "hi!", "href");
        int int5 = annotation4.begin;
        int int6 = annotation4.begin;
        int int7 = annotation4.end;
        java.lang.String str8 = annotation4.value;
        java.lang.String str9 = annotation4.value;
        java.lang.String str10 = annotation4.value;
        int int11 = annotation4.end;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "href" + "'", str8, "href");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "href" + "'", str9, "href");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "href" + "'", str10, "href");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader3.getSchema("", job5);
        org.apache.pig.Expression expression7 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        java.lang.String[] strArray11 = uriUriNTriplesLoader3.getPartitionKeys("hi !", job10);
        org.apache.pig.Expression expression12 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression12);
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNull(strArray11);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21");
        pignlproc.evaluation.NoLoopInPath noLoopInPath2 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText3 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = null;
        safeTsvText3.setPigLogger(pigLogger4);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText6 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = mergeAsOpenNLPAnnotatedText6.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract8 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = checkAbstract8.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = mergeAsOpenNLPAnnotatedText6.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = safeTsvText3.outputSchema(schema11);
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = noLoopInPath2.outputSchema(schema11);
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = mergeAsOpenNLPAnnotatedText1.outputSchema(schema11);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink16 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger17 = null;
        sentencesWithLink16.setPigLogger(pigLogger17);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = sentencesWithLink16.getReporter();
        java.lang.reflect.Type type20 = sentencesWithLink16.getReturnType();
        boolean boolean21 = sentencesWithLink16.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger22 = sentencesWithLink16.getPigLogger();
        java.lang.Enum enum24 = null;
        sentencesWithLink16.warn("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", enum24);
        pignlproc.markup.Annotation annotation30 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        java.lang.String str31 = annotation30.label;
        java.util.List<opennlp.tools.util.Span> spanList32 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) enum24, (java.lang.Object) str31);
        java.lang.String str33 = mergeAsOpenNLPAnnotatedText1.merge("hi!\n\n", spanList32);
        org.apache.pig.data.Tuple tuple34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str35 = mergeAsOpenNLPAnnotatedText1.exec(tuple34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigProgressable7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(pigProgressable19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(pigLogger22);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "title" + "'", str31, "title");
        org.junit.Assert.assertNotNull(spanList32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi !" + "'", str33, "hi !");
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.setMaxInputSplitSize(job0, (long) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader0 = new pignlproc.storage.UriUriNTriplesLoader();
        org.apache.hadoop.mapreduce.Job job2 = null;
        java.lang.String[] strArray3 = uriUriNTriplesLoader0.getPartitionKeys("title", job2);
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader0.getSchema("http://.wikipedia.org/wiki/hi%21", job5);
        org.apache.pig.LoadCaster loadCaster7 = uriUriNTriplesLoader0.getLoadCaster();
        org.apache.hadoop.mapreduce.RecordReader recordReader8 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit9 = null;
        uriUriNTriplesLoader0.prepareToRead(recordReader8, pigSplit9);
        org.apache.hadoop.mapreduce.Job job12 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesLoader0.setLocation("http://http://hi!\n.wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/%22%22%22_http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_%22%22%22", job12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strArray3);
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNotNull(loadCaster7);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("hi!");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser2 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser2.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList4 = annotatingMarkupParser2.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser2.getParagraphAnnotations();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser2.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser2.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser8 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList9 = annotatingMarkupParser8.getHeaderAnnotations();
        java.util.List<java.lang.String> strList10 = annotatingMarkupParser8.getParagraphs();
        java.lang.Appendable appendable11 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable12 = annotatingMarkupParser8.new CountingAppendable(appendable11);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable13 = annotatingMarkupParser2.new CountingAppendable((java.lang.Appendable) countingAppendable12);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable14 = annotatingMarkupParser1.new CountingAppendable((java.lang.Appendable) countingAppendable12);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser15 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList16 = annotatingMarkupParser15.getHeaderAnnotations();
        java.util.List<java.lang.String> strList17 = annotatingMarkupParser15.getParagraphs();
        java.lang.Appendable appendable18 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable19 = annotatingMarkupParser15.new CountingAppendable(appendable18);
        int int20 = countingAppendable19.currentPosition;
        countingAppendable19.currentPosition = ' ';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable23 = annotatingMarkupParser1.new CountingAppendable((java.lang.Appendable) countingAppendable19);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable27 = countingAppendable23.append((java.lang.CharSequence) "http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href", (int) (short) -1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(annotationList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNotNull(annotationList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(annotationList16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        java.lang.String[] strArray1 = org.apache.pig.LoadFunc.getPathStrings("\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/%22title%22href\"");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.lang.Appendable appendable3 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable4 = annotatingMarkupParser0.new CountingAppendable(appendable3);
        int int5 = countingAppendable4.currentPosition;
        int int6 = countingAppendable4.currentPosition;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable8 = countingAppendable4.append(' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getParagraphAnnotations();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser0.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser0.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser6 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser6.getHeaderAnnotations();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser6.getParagraphs();
        java.lang.Appendable appendable9 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser6.new CountingAppendable(appendable9);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable11 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable10);
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser0.getParagraphs();
        java.lang.String str14 = annotatingMarkupParser0.parse("http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href");
        java.util.List<pignlproc.markup.Annotation> annotationList15 = annotatingMarkupParser0.getWikiLinkAnnotations();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href\n" + "'", str14, "http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href\n");
        org.junit.Assert.assertNotNull(annotationList15);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.mapreduce.RecordReader recordReader5 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit6 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader5, pigSplit6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        java.lang.String[] strArray10 = parsingWikipediaLoader1.getPartitionKeys("http://.wikipedia.org/wiki/hi%21", job9);
        org.apache.hadoop.mapreduce.Job job12 = null;
        java.lang.String[] strArray13 = parsingWikipediaLoader1.getPartitionKeys("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521", job12);
        org.apache.hadoop.mapreduce.Job job15 = null;
        org.apache.pig.ResourceSchema resourceSchema16 = parsingWikipediaLoader1.getSchema("http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21", job15);
        parsingWikipediaLoader1.setUDFContextSignature("http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href");
        org.apache.hadoop.mapreduce.Job job20 = null;
        // The following exception was thrown during execution in test generation
        try {
            parsingWikipediaLoader1.setLocation("title", job20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNull(strArray10);
        org.junit.Assert.assertNull(strArray13);
        org.junit.Assert.assertNotNull(resourceSchema16);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("\"\"\"http://.wikipedia.org/wiki/hi%21\"\" \"", "http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href");
        org.apache.hadoop.mapreduce.RecordReader recordReader3 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit4 = null;
        uriStringLiteralNTriplesLoader2.prepareToRead(recordReader3, pigSplit4);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract3 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum5 = null;
        checkAbstract3.warn("http://.wikipedia.org/wiki/hi%21", enum5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        checkAbstract3.setPigLogger(pigLogger7);
        checkAbstract3.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText10 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        safeTsvText10.setPigLogger(pigLogger11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = mergeAsOpenNLPAnnotatedText13.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract15.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = safeTsvText10.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract3.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = concatTextBag2.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = sentencesWithLink0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = null;
        sentencesWithLink0.setPigLogger(pigLogger23);
        java.lang.reflect.Type type25 = sentencesWithLink0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable26 = sentencesWithLink0.getReporter();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList27 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.finish();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable29 = null;
        sentencesWithLink0.setReporter(pigProgressable29);
        org.junit.Assert.assertNull(pigProgressable14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNull(pigProgressable26);
        org.junit.Assert.assertNull(funcSpecList27);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        mergeAsOpenNLPAnnotatedText0.setPigLogger(pigLogger6);
        boolean boolean8 = mergeAsOpenNLPAnnotatedText0.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText10 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray12 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList13 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList13, spanArray12);
        java.lang.String str15 = mergeAsOpenNLPAnnotatedText10.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList13);
        java.lang.String str16 = mergeAsOpenNLPAnnotatedText0.merge("opennlp/en-sent.bin", (java.util.List<opennlp.tools.util.Span>) spanList13);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText18 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = mergeAsOpenNLPAnnotatedText18.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = checkAbstract20.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = mergeAsOpenNLPAnnotatedText18.outputSchema(schema21);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText25 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray27 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList28 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList28, spanArray27);
        java.lang.String str30 = mergeAsOpenNLPAnnotatedText25.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList28);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText32 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray34 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList35 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList35, spanArray34);
        java.lang.String str37 = mergeAsOpenNLPAnnotatedText32.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList35);
        java.lang.String str38 = mergeAsOpenNLPAnnotatedText25.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList35);
        java.lang.String str39 = mergeAsOpenNLPAnnotatedText18.merge("title", (java.util.List<opennlp.tools.util.Span>) spanList35);
        java.lang.String str40 = mergeAsOpenNLPAnnotatedText0.merge("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", (java.util.List<opennlp.tools.util.Span>) spanList35);
        org.apache.pig.data.Tuple tuple41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str42 = mergeAsOpenNLPAnnotatedText0.exec(tuple41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi !" + "'", str5, "hi !");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(spanArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "href" + "'", str15, "href");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "opennlp / en - sent . bin" + "'", str16, "opennlp / en - sent . bin");
        org.junit.Assert.assertNull(pigProgressable19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(spanArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi !" + "'", str30, "hi !");
        org.junit.Assert.assertNotNull(spanArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "href" + "'", str37, "href");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi !" + "'", str38, "hi !");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "title" + "'", str39, "title");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21" + "'", str40, "http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21");
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        info.bliki.wiki.model.WikiModel wikiModel12 = annotatingMarkupParser0.makeWikiModel("\"hi!\"\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser13 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList14 = annotatingMarkupParser13.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser15 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser15.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList17 = annotatingMarkupParser15.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser15.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser19.getHeaders();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser19.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList22 = annotatingMarkupParser19.getHeaderAnnotations();
        java.lang.String str23 = annotatingMarkupParser19.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser24 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser24.getHeaders();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser24.getHeaders();
        java.lang.Appendable appendable27 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable28 = annotatingMarkupParser24.new CountingAppendable(appendable27);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable29 = annotatingMarkupParser19.new CountingAppendable((java.lang.Appendable) countingAppendable28);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser30 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList31 = annotatingMarkupParser30.getHeaderAnnotations();
        java.lang.String str32 = annotatingMarkupParser30.getRedirect();
        pignlproc.markup.Annotation annotation37 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation42 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int43 = annotation42.end;
        int int44 = annotation42.begin;
        pignlproc.markup.Annotation[] annotationArray45 = new pignlproc.markup.Annotation[] { annotation37, annotation42 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList46 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList46, annotationArray45);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser48 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList49 = annotatingMarkupParser48.getHeaders();
        java.util.List<java.lang.String> strList50 = annotatingMarkupParser48.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList51 = annotatingMarkupParser48.getHeaderAnnotations();
        java.lang.String str52 = annotatingMarkupParser48.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser53 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList54 = annotatingMarkupParser53.getHeaders();
        java.util.List<java.lang.String> strList55 = annotatingMarkupParser53.getHeaders();
        java.lang.Appendable appendable56 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable57 = annotatingMarkupParser53.new CountingAppendable(appendable56);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable58 = annotatingMarkupParser48.new CountingAppendable((java.lang.Appendable) countingAppendable57);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser59 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList60 = annotatingMarkupParser59.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel62 = annotatingMarkupParser59.makeWikiModel("title");
        annotatingMarkupParser30.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList46, (java.lang.Appendable) countingAppendable57, (info.bliki.wiki.model.IWikiModel) wikiModel62);
        annotatingMarkupParser13.nodesToText(annotationList18, (java.lang.Appendable) countingAppendable29, (info.bliki.wiki.model.IWikiModel) wikiModel62);
        int int65 = countingAppendable29.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable66 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable29);
        countingAppendable29.currentPosition = (byte) 10;
        countingAppendable29.currentPosition = 0;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable72 = countingAppendable29.append('#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(wikiModel12);
        org.junit.Assert.assertNotNull(annotationList14);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(annotationList17);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(annotationList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNotNull(annotationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(annotationList51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(annotationList60);
        org.junit.Assert.assertNotNull(wikiModel62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract("\"\"\"opennlp / en - sent . bin\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"\"\"\"opennlp / en - sent . bin\"\"\"\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21");
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = parsingWikipediaLoader1.getSchema("\"hi!\"", job6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        org.apache.pig.ResourceSchema resourceSchema10 = parsingWikipediaLoader1.getSchema("\"hi!\"\n", job9);
        org.apache.hadoop.mapreduce.Job job12 = null;
        org.apache.pig.ResourceSchema resourceSchema13 = parsingWikipediaLoader1.getSchema("http://.wikipedia.org/wiki/hi%21\n", job12);
        parsingWikipediaLoader1.setUDFContextSignature("http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21");
        org.apache.hadoop.mapreduce.Job job17 = null;
        java.lang.String[] strArray18 = parsingWikipediaLoader1.getPartitionKeys("\"http://.wikipedia.org/wiki/hi%21\"\n\n", job17);
        org.apache.hadoop.mapreduce.Job job20 = null;
        // The following exception was thrown during execution in test generation
        try {
            parsingWikipediaLoader1.setLocation("http://http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21.wikipedia.org/wiki/%22http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521_.wikipedia.org%2Fwiki%2F%2522title%2522href%22\n", job20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNotNull(resourceSchema7);
        org.junit.Assert.assertNotNull(resourceSchema10);
        org.junit.Assert.assertNotNull(resourceSchema13);
        org.junit.Assert.assertNull(strArray18);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("href");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("http://http://hi!\n.wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/%22%22%22_http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_%22%22%22", job3);
        org.junit.Assert.assertNull(resourceStatistics4);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum2 = null;
        safeTsvText0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = safeTsvText0.getReporter();
        pignlproc.evaluation.AggregateTextBag aggregateTextBag7 = new pignlproc.evaluation.AggregateTextBag((int) (byte) 1, false);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = null;
        aggregateTextBag7.setReporter(pigProgressable8);
        pignlproc.evaluation.SafeTsvText safeTsvText10 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum12 = null;
        safeTsvText10.warn("http://.wikipedia.org/wiki/hi%21", enum12);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = safeTsvText10.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable15 = null;
        safeTsvText10.setReporter(pigProgressable15);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = null;
        safeTsvText10.setReporter(pigProgressable17);
        boolean boolean19 = safeTsvText10.isAsynchronous();
        java.lang.Enum enum21 = null;
        safeTsvText10.warn("\"title\"\n", enum21);
        pignlproc.evaluation.ConcatTextBag concatTextBag24 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract25 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum27 = null;
        checkAbstract25.warn("http://.wikipedia.org/wiki/hi%21", enum27);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger29 = null;
        checkAbstract25.setPigLogger(pigLogger29);
        checkAbstract25.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText32 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger33 = null;
        safeTsvText32.setPigLogger(pigLogger33);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText35 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable36 = mergeAsOpenNLPAnnotatedText35.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract37 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = checkAbstract37.outputSchema(schema38);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = mergeAsOpenNLPAnnotatedText35.outputSchema(schema38);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = safeTsvText32.outputSchema(schema40);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = checkAbstract25.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = concatTextBag24.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = safeTsvText10.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = aggregateTextBag7.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = safeTsvText0.outputSchema(schema42);
        org.apache.pig.data.Tuple tuple47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str48 = safeTsvText0.exec(tuple47);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in SafeTsvText");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNull(pigProgressable14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(pigProgressable36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = parsingWikipediaLoader1.getSchema("\"hi!\"", job6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        org.apache.pig.ResourceSchema resourceSchema10 = parsingWikipediaLoader1.getSchema("\"hi!\"\n", job9);
        org.apache.hadoop.mapreduce.RecordReader recordReader11 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit12 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader11, pigSplit12);
        org.apache.hadoop.mapreduce.Job job15 = null;
        // The following exception was thrown during execution in test generation
        try {
            parsingWikipediaLoader1.setLocation("hi!\n", job15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNotNull(resourceSchema7);
        org.junit.Assert.assertNotNull(resourceSchema10);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.setMinInputSplitSize(job0, (long) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22", "hi !", "http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21");
        org.apache.pig.data.Tuple tuple4 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer3.putNext(tuple4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum2 = null;
        safeTsvText0.warn("opennlp/en-sent.bin", enum2);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList4 = safeTsvText0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = safeTsvText0.getReporter();
        pignlproc.evaluation.ConcatTextBag concatTextBag7 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        org.apache.pig.data.Tuple tuple8 = null;
        java.lang.String str9 = concatTextBag7.exec(tuple8);
        pignlproc.evaluation.NoLoopInPath noLoopInPath10 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText11 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger12 = null;
        safeTsvText11.setPigLogger(pigLogger12);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText14 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable15 = mergeAsOpenNLPAnnotatedText14.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract16 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = checkAbstract16.outputSchema(schema17);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = mergeAsOpenNLPAnnotatedText14.outputSchema(schema17);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = safeTsvText11.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = noLoopInPath10.outputSchema(schema19);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag22 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText23 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger24 = null;
        safeTsvText23.setPigLogger(pigLogger24);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText26 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable27 = mergeAsOpenNLPAnnotatedText26.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract28 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = checkAbstract28.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = mergeAsOpenNLPAnnotatedText26.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = safeTsvText23.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = aggregateTextBag22.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = noLoopInPath10.outputSchema(schema31);
        pignlproc.evaluation.CheckAbstract checkAbstract35 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum37 = null;
        checkAbstract35.warn("http://.wikipedia.org/wiki/hi%21", enum37);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger39 = null;
        checkAbstract35.setPigLogger(pigLogger39);
        checkAbstract35.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText42 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger43 = null;
        safeTsvText42.setPigLogger(pigLogger43);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText45 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable46 = mergeAsOpenNLPAnnotatedText45.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract47 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = checkAbstract47.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = mergeAsOpenNLPAnnotatedText45.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = safeTsvText42.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = checkAbstract35.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = noLoopInPath10.outputSchema(schema52);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = concatTextBag7.outputSchema(schema53);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = safeTsvText0.outputSchema(schema54);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable56 = null;
        safeTsvText0.setReporter(pigProgressable56);
        org.junit.Assert.assertNull(funcSpecList4);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(pigProgressable15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(pigProgressable27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(pigProgressable46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://.wikipedia.org/wiki/hi%21", job4);
        org.apache.hadoop.mapreduce.Job job7 = null;
        java.lang.String[] strArray8 = uriStringLiteralNTriplesLoader2.getPartitionKeys("wikiobject", job7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceSchema resourceSchema11 = uriStringLiteralNTriplesLoader2.getSchema("title", job10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple12 = uriStringLiteralNTriplesLoader2.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNull(strArray8);
        org.junit.Assert.assertNotNull(resourceSchema11);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://hi!\n.wikipedia.org/wiki/%22_title_%22");
        org.apache.pig.data.Tuple tuple2 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.putNext(tuple2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract("\"http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"\"http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21\"\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        java.lang.String str2 = pignlproc.markup.AnnotatingMarkupParser.titleToUri("\" opennlp / en - sent . bin \"", "\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/href\"");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/href\".wikipedia.org/wiki/%22_opennlp_%2F_en_-_sent_._bin_%22" + "'", str2, "http://\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/href\".wikipedia.org/wiki/%22_opennlp_%2F_en_-_sent_._bin_%22");
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        java.net.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader wikipediaRecordReader3 = new pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader(uRL0, (long) 35, (long) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21href", "http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22", "");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader3.getSchema("", job5);
        org.junit.Assert.assertNotNull(resourceSchema6);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader0 = new pignlproc.storage.UriUriNTriplesLoader();
        org.apache.hadoop.mapreduce.Job job2 = null;
        org.apache.pig.ResourceStatistics resourceStatistics3 = uriUriNTriplesLoader0.getStatistics("wikiobject", job2);
        org.apache.hadoop.mapreduce.InputFormat inputFormat4 = uriUriNTriplesLoader0.getInputFormat();
        uriUriNTriplesLoader0.setUDFContextSignature("http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522");
        org.apache.hadoop.mapreduce.RecordReader recordReader7 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit8 = null;
        uriUriNTriplesLoader0.prepareToRead(recordReader7, pigSplit8);
        org.apache.hadoop.mapreduce.Job job11 = null;
        org.apache.pig.ResourceSchema resourceSchema12 = uriUriNTriplesLoader0.getSchema("\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"", job11);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple13 = uriUriNTriplesLoader0.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics3);
        org.junit.Assert.assertNotNull(inputFormat4);
        org.junit.Assert.assertNotNull(resourceSchema12);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        safeTsvText0.setPigLogger(pigLogger1);
        org.apache.commons.logging.Log log3 = safeTsvText0.getLogger();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray6 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList7 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList7, spanArray6);
        java.lang.String str9 = mergeAsOpenNLPAnnotatedText4.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList7);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = null;
        mergeAsOpenNLPAnnotatedText4.setPigLogger(pigLogger10);
        pignlproc.evaluation.NoLoopInPath noLoopInPath12 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText13 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        safeTsvText13.setPigLogger(pigLogger14);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText16.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = safeTsvText13.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = noLoopInPath12.outputSchema(schema21);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag26 = new pignlproc.evaluation.AggregateTextBag((int) 'a', false);
        pignlproc.evaluation.NoLoopInPath noLoopInPath27 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText28 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger29 = null;
        safeTsvText28.setPigLogger(pigLogger29);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText31 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable32 = mergeAsOpenNLPAnnotatedText31.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract33 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = checkAbstract33.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = mergeAsOpenNLPAnnotatedText31.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = safeTsvText28.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = noLoopInPath27.outputSchema(schema36);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag39 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText40 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger41 = null;
        safeTsvText40.setPigLogger(pigLogger41);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText43 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable44 = mergeAsOpenNLPAnnotatedText43.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract45 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = checkAbstract45.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = mergeAsOpenNLPAnnotatedText43.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = safeTsvText40.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = aggregateTextBag39.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = noLoopInPath27.outputSchema(schema48);
        pignlproc.evaluation.CheckAbstract checkAbstract52 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum54 = null;
        checkAbstract52.warn("http://.wikipedia.org/wiki/hi%21", enum54);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger56 = null;
        checkAbstract52.setPigLogger(pigLogger56);
        checkAbstract52.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText59 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger60 = null;
        safeTsvText59.setPigLogger(pigLogger60);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText62 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable63 = mergeAsOpenNLPAnnotatedText62.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract64 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = checkAbstract64.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = mergeAsOpenNLPAnnotatedText62.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = safeTsvText59.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = checkAbstract52.outputSchema(schema68);
        org.apache.pig.impl.logicalLayer.schema.Schema schema70 = noLoopInPath27.outputSchema(schema69);
        org.apache.pig.impl.logicalLayer.schema.Schema schema71 = aggregateTextBag26.outputSchema(schema69);
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = noLoopInPath12.outputSchema(schema69);
        org.apache.pig.impl.logicalLayer.schema.Schema schema73 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema72);
        org.apache.pig.impl.logicalLayer.schema.Schema schema74 = safeTsvText0.outputSchema(schema73);
        org.apache.pig.data.Tuple tuple75 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str76 = safeTsvText0.exec(tuple75);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in SafeTsvText");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(log3);
        org.junit.Assert.assertNotNull(spanArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi !" + "'", str9, "hi !");
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(pigProgressable32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(pigProgressable44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(pigProgressable63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getParagraphAnnotations();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser0.getParagraphs();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList8 = annotatingMarkupParser5.getHeaderAnnotations();
        java.lang.String str9 = annotatingMarkupParser5.getRedirect();
        java.util.List<java.lang.String> strList10 = annotatingMarkupParser5.getParagraphs();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser11 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser11.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList13 = annotatingMarkupParser11.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel15 = annotatingMarkupParser11.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel17 = annotatingMarkupParser11.makeWikiModel("hi!\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser18 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList19 = annotatingMarkupParser18.getHeaders();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser18.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser18.getHeaderAnnotations();
        java.lang.String str22 = annotatingMarkupParser18.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser23 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList24 = annotatingMarkupParser23.getHeaders();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser23.getHeaders();
        java.lang.Appendable appendable26 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable27 = annotatingMarkupParser23.new CountingAppendable(appendable26);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable28 = annotatingMarkupParser18.new CountingAppendable((java.lang.Appendable) countingAppendable27);
        java.util.List<pignlproc.markup.Annotation> annotationList29 = annotatingMarkupParser18.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser30 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList31 = annotatingMarkupParser30.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser32 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList33 = annotatingMarkupParser32.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList34 = annotatingMarkupParser32.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList35 = annotatingMarkupParser32.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser36 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList37 = annotatingMarkupParser36.getHeaders();
        java.util.List<java.lang.String> strList38 = annotatingMarkupParser36.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList39 = annotatingMarkupParser36.getHeaderAnnotations();
        java.lang.String str40 = annotatingMarkupParser36.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser41 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList42 = annotatingMarkupParser41.getHeaders();
        java.util.List<java.lang.String> strList43 = annotatingMarkupParser41.getHeaders();
        java.lang.Appendable appendable44 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable45 = annotatingMarkupParser41.new CountingAppendable(appendable44);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable46 = annotatingMarkupParser36.new CountingAppendable((java.lang.Appendable) countingAppendable45);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser47 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList48 = annotatingMarkupParser47.getHeaderAnnotations();
        java.lang.String str49 = annotatingMarkupParser47.getRedirect();
        pignlproc.markup.Annotation annotation54 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation59 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int60 = annotation59.end;
        int int61 = annotation59.begin;
        pignlproc.markup.Annotation[] annotationArray62 = new pignlproc.markup.Annotation[] { annotation54, annotation59 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList63 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList63, annotationArray62);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser65 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList66 = annotatingMarkupParser65.getHeaders();
        java.util.List<java.lang.String> strList67 = annotatingMarkupParser65.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList68 = annotatingMarkupParser65.getHeaderAnnotations();
        java.lang.String str69 = annotatingMarkupParser65.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser70 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList71 = annotatingMarkupParser70.getHeaders();
        java.util.List<java.lang.String> strList72 = annotatingMarkupParser70.getHeaders();
        java.lang.Appendable appendable73 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable74 = annotatingMarkupParser70.new CountingAppendable(appendable73);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable75 = annotatingMarkupParser65.new CountingAppendable((java.lang.Appendable) countingAppendable74);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser76 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList77 = annotatingMarkupParser76.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel79 = annotatingMarkupParser76.makeWikiModel("title");
        annotatingMarkupParser47.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList63, (java.lang.Appendable) countingAppendable74, (info.bliki.wiki.model.IWikiModel) wikiModel79);
        annotatingMarkupParser30.nodesToText(annotationList35, (java.lang.Appendable) countingAppendable46, (info.bliki.wiki.model.IWikiModel) wikiModel79);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser82 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList83 = annotatingMarkupParser82.getHeaders();
        java.util.List<java.lang.String> strList84 = annotatingMarkupParser82.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList85 = annotatingMarkupParser82.getHeaderAnnotations();
        java.lang.String str86 = annotatingMarkupParser82.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser87 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList88 = annotatingMarkupParser87.getHeaders();
        java.util.List<java.lang.String> strList89 = annotatingMarkupParser87.getHeaders();
        java.lang.Appendable appendable90 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable91 = annotatingMarkupParser87.new CountingAppendable(appendable90);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable92 = annotatingMarkupParser82.new CountingAppendable((java.lang.Appendable) countingAppendable91);
        java.util.List<java.lang.String> strList93 = annotatingMarkupParser82.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel95 = annotatingMarkupParser82.makeWikiModel("opennlp / en - sent . bin");
        annotatingMarkupParser11.nodesToText(annotationList29, (java.lang.Appendable) countingAppendable46, (info.bliki.wiki.model.IWikiModel) wikiModel95);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable97 = annotatingMarkupParser5.new CountingAppendable((java.lang.Appendable) countingAppendable46);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable98 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable46);
        java.util.List<java.lang.String> strList99 = annotatingMarkupParser0.getParagraphs();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(annotationList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(annotationList13);
        org.junit.Assert.assertNotNull(wikiModel15);
        org.junit.Assert.assertNotNull(wikiModel17);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(annotationList29);
        org.junit.Assert.assertNotNull(annotationList31);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(annotationList34);
        org.junit.Assert.assertNotNull(annotationList35);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(annotationList39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(annotationList48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertNotNull(annotationArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNotNull(annotationList68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(annotationList77);
        org.junit.Assert.assertNotNull(wikiModel79);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNotNull(strList84);
        org.junit.Assert.assertNotNull(annotationList85);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNotNull(strList88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNotNull(strList93);
        org.junit.Assert.assertNotNull(wikiModel95);
        org.junit.Assert.assertNotNull(strList99);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract("hi!\n\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"hi!??\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader3.getSchema("", job5);
        org.apache.hadoop.mapreduce.Job job8 = null;
        org.apache.pig.ResourceStatistics resourceStatistics9 = uriUriNTriplesLoader3.getStatistics("opennlp/en-sent.bin", job8);
        org.apache.pig.Expression expression10 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression10);
        org.apache.hadoop.mapreduce.Job job13 = null;
        org.apache.pig.ResourceSchema resourceSchema14 = uriUriNTriplesLoader3.getSchema("http://.wikipedia.org/wiki/hi%21", job13);
        org.apache.hadoop.mapreduce.Job job16 = null;
        org.apache.pig.ResourceStatistics resourceStatistics17 = uriUriNTriplesLoader3.getStatistics("opennlp / en - sent . bin", job16);
        org.apache.pig.Expression expression18 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression18);
        org.apache.pig.Expression expression20 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression20);
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNull(resourceStatistics9);
        org.junit.Assert.assertNotNull(resourceSchema14);
        org.junit.Assert.assertNull(resourceStatistics17);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList3);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = mergeAsOpenNLPAnnotatedText0.getArgToFuncMapping();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText7 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray9 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList10 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList10, spanArray9);
        java.lang.String str12 = mergeAsOpenNLPAnnotatedText7.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList10);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger13 = null;
        mergeAsOpenNLPAnnotatedText7.setPigLogger(pigLogger13);
        boolean boolean15 = mergeAsOpenNLPAnnotatedText7.isAsynchronous();
        pignlproc.evaluation.CheckAbstract checkAbstract16 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum18 = null;
        checkAbstract16.warn("http://.wikipedia.org/wiki/hi%21", enum18);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable20 = null;
        checkAbstract16.setReporter(pigProgressable20);
        java.lang.reflect.Type type22 = checkAbstract16.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath23 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText24 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        safeTsvText24.setPigLogger(pigLogger25);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText27 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable28 = mergeAsOpenNLPAnnotatedText27.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract29 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = checkAbstract29.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = mergeAsOpenNLPAnnotatedText27.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = safeTsvText24.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = noLoopInPath23.outputSchema(schema32);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag35 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText36 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger37 = null;
        safeTsvText36.setPigLogger(pigLogger37);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText39 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable40 = mergeAsOpenNLPAnnotatedText39.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract41 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = checkAbstract41.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = mergeAsOpenNLPAnnotatedText39.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = safeTsvText36.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = aggregateTextBag35.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = noLoopInPath23.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = checkAbstract16.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = mergeAsOpenNLPAnnotatedText7.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = mergeAsOpenNLPAnnotatedText0.outputSchema(schema44);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink51 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.ConcatTextBag concatTextBag53 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract54 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum56 = null;
        checkAbstract54.warn("http://.wikipedia.org/wiki/hi%21", enum56);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger58 = null;
        checkAbstract54.setPigLogger(pigLogger58);
        checkAbstract54.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText61 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger62 = null;
        safeTsvText61.setPigLogger(pigLogger62);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText64 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable65 = mergeAsOpenNLPAnnotatedText64.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract66 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = checkAbstract66.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = mergeAsOpenNLPAnnotatedText64.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema70 = safeTsvText61.outputSchema(schema69);
        org.apache.pig.impl.logicalLayer.schema.Schema schema71 = checkAbstract54.outputSchema(schema70);
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = concatTextBag53.outputSchema(schema71);
        org.apache.pig.impl.logicalLayer.schema.Schema schema73 = sentencesWithLink51.outputSchema(schema72);
        org.apache.pig.impl.logicalLayer.schema.Schema schema74 = mergeAsOpenNLPAnnotatedText0.outputSchema(schema72);
        org.apache.pig.data.Tuple tuple75 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str76 = mergeAsOpenNLPAnnotatedText0.exec(tuple75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi !" + "'", str5, "hi !");
        org.junit.Assert.assertNull(funcSpecList6);
        org.junit.Assert.assertNotNull(spanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi !" + "'", str12, "hi !");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNull(pigProgressable28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(pigProgressable40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(pigProgressable65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPaths(job0, "hi !\n\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        info.bliki.wiki.model.WikiModel wikiModel12 = annotatingMarkupParser0.makeWikiModel("\"hi!\"\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser13 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList14 = annotatingMarkupParser13.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser15 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser15.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList17 = annotatingMarkupParser15.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser15.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser19.getHeaders();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser19.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList22 = annotatingMarkupParser19.getHeaderAnnotations();
        java.lang.String str23 = annotatingMarkupParser19.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser24 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser24.getHeaders();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser24.getHeaders();
        java.lang.Appendable appendable27 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable28 = annotatingMarkupParser24.new CountingAppendable(appendable27);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable29 = annotatingMarkupParser19.new CountingAppendable((java.lang.Appendable) countingAppendable28);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser30 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList31 = annotatingMarkupParser30.getHeaderAnnotations();
        java.lang.String str32 = annotatingMarkupParser30.getRedirect();
        pignlproc.markup.Annotation annotation37 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation42 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int43 = annotation42.end;
        int int44 = annotation42.begin;
        pignlproc.markup.Annotation[] annotationArray45 = new pignlproc.markup.Annotation[] { annotation37, annotation42 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList46 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList46, annotationArray45);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser48 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList49 = annotatingMarkupParser48.getHeaders();
        java.util.List<java.lang.String> strList50 = annotatingMarkupParser48.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList51 = annotatingMarkupParser48.getHeaderAnnotations();
        java.lang.String str52 = annotatingMarkupParser48.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser53 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList54 = annotatingMarkupParser53.getHeaders();
        java.util.List<java.lang.String> strList55 = annotatingMarkupParser53.getHeaders();
        java.lang.Appendable appendable56 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable57 = annotatingMarkupParser53.new CountingAppendable(appendable56);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable58 = annotatingMarkupParser48.new CountingAppendable((java.lang.Appendable) countingAppendable57);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser59 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList60 = annotatingMarkupParser59.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel62 = annotatingMarkupParser59.makeWikiModel("title");
        annotatingMarkupParser30.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList46, (java.lang.Appendable) countingAppendable57, (info.bliki.wiki.model.IWikiModel) wikiModel62);
        annotatingMarkupParser13.nodesToText(annotationList18, (java.lang.Appendable) countingAppendable29, (info.bliki.wiki.model.IWikiModel) wikiModel62);
        int int65 = countingAppendable29.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable66 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable29);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable70 = countingAppendable66.append((java.lang.CharSequence) "\"http : // \"\" opennlp / en - sent . bin \"\" . wikipedia . org / wiki / href\"", 0, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(wikiModel12);
        org.junit.Assert.assertNotNull(annotationList14);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(annotationList17);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(annotationList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNotNull(annotationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(annotationList51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(annotationList60);
        org.junit.Assert.assertNotNull(wikiModel62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriStringLiteralNTriplesStorer1.getOutputFormat();
        org.apache.pig.data.Tuple tuple3 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.putNext(tuple3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat2);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        java.lang.String str1 = pignlproc.evaluation.SafeTsvText.escape("titlehref");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"titlehref\"" + "'", str1, "\"titlehref\"");
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation(10, (int) (byte) 10, "http://.wikipedia.org/wiki/%22_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_%22", "\"http://http://hi! .wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin\"");
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum2 = null;
        safeTsvText0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = safeTsvText0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = safeTsvText0.getReporter();
        safeTsvText0.progress();
        org.apache.pig.data.Tuple tuple7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = safeTsvText0.exec(tuple7);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in SafeTsvText");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNull(pigProgressable5);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://.wikipedia.org/wiki/hi%21", job4);
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = uriStringLiteralNTriplesLoader2.getSchema("\"title\"\n", job7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        java.lang.String[] strArray11 = uriStringLiteralNTriplesLoader2.getPartitionKeys("", job10);
        org.apache.hadoop.mapreduce.Job job13 = null;
        org.apache.pig.ResourceSchema resourceSchema14 = uriStringLiteralNTriplesLoader2.getSchema("\"http://http://hi! .wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin\"", job13);
        org.apache.hadoop.mapreduce.Job job16 = null;
        org.apache.pig.ResourceStatistics resourceStatistics17 = uriStringLiteralNTriplesLoader2.getStatistics("http://.wikipedia.org/wiki/hi%21", job16);
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(resourceSchema8);
        org.junit.Assert.assertNull(strArray11);
        org.junit.Assert.assertNotNull(resourceSchema14);
        org.junit.Assert.assertNull(resourceStatistics17);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum2 = null;
        safeTsvText0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = safeTsvText0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = null;
        safeTsvText0.setPigLogger(pigLogger5);
        org.apache.pig.data.Tuple tuple7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = safeTsvText0.exec(tuple7);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in SafeTsvText");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigProgressable4);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://.wikipedia.org/wiki/hi%21", job4);
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = uriStringLiteralNTriplesLoader2.getSchema("\"title\"\n", job7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        java.lang.String[] strArray11 = uriStringLiteralNTriplesLoader2.getPartitionKeys("http://.wikipedia.org/wiki/hi%21", job10);
        org.apache.hadoop.mapreduce.Job job13 = null;
        org.apache.pig.ResourceSchema resourceSchema14 = uriStringLiteralNTriplesLoader2.getSchema("\"opennlp / en - sent . bin\"", job13);
        org.apache.hadoop.mapreduce.Job job16 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesLoader2.setLocation("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22\n", job16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(resourceSchema8);
        org.junit.Assert.assertNull(strArray11);
        org.junit.Assert.assertNotNull(resourceSchema14);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.setInputPaths(job0, "\"\"\"title\"\" \"href");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.setMaxInputSplitSize(job0, (long) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }
}

