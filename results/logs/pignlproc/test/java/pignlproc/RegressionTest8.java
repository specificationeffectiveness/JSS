package pignlproc;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest8 {

    public static boolean debug = false;

    @Test
    public void test4001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4001");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = null;
        checkAbstract0.setPigLogger(pigLogger4);
        checkAbstract0.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText7 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = null;
        safeTsvText7.setPigLogger(pigLogger8);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText10 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable11 = mergeAsOpenNLPAnnotatedText10.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract12 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = checkAbstract12.outputSchema(schema13);
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = mergeAsOpenNLPAnnotatedText10.outputSchema(schema13);
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = safeTsvText7.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract0.outputSchema(schema16);
        java.lang.reflect.Type type18 = checkAbstract0.getReturnType();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList19 = checkAbstract0.getArgToFuncMapping();
        checkAbstract0.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger21 = null;
        checkAbstract0.setPigLogger(pigLogger21);
        org.junit.Assert.assertNull(pigProgressable11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNull(funcSpecList19);
    }

    @Test
    public void test4002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4002");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag0 = new pignlproc.evaluation.AggregateTextBag();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        aggregateTextBag0.setPigLogger(pigLogger1);
        boolean boolean3 = aggregateTextBag0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        aggregateTextBag0.setReporter(pigProgressable4);
        org.apache.commons.logging.Log log6 = aggregateTextBag0.getLogger();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(log6);
    }

    @Test
    public void test4003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4003");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("\" title \"\n");
    }

    @Test
    public void test4004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4004");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("\"opennlp / en - sent . bin\"");
        org.apache.pig.data.Tuple tuple2 = null;
        java.lang.String str3 = concatTextBag1.exec(tuple2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    }

    @Test
    public void test4005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4005");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("opennlp/en-sent.bin");
        java.lang.String str3 = annotatingMarkupParser1.parse("\"http://.wikipedia.org/wiki/hi%21\"\n");
        java.lang.String str5 = annotatingMarkupParser1.parse("title\n");
        java.util.List<pignlproc.markup.Annotation> annotationList6 = annotatingMarkupParser1.getParagraphAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser1.getHeaderAnnotations();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"http://.wikipedia.org/wiki/hi%21\"\n\n" + "'", str3, "\"http://.wikipedia.org/wiki/hi%21\"\n\n");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "title\n\n" + "'", str5, "title\n\n");
        org.junit.Assert.assertNotNull(annotationList6);
        org.junit.Assert.assertNotNull(annotationList7);
    }

    @Test
    public void test4006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4006");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("title", job3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        java.lang.String[] strArray7 = parsingWikipediaLoader1.getPartitionKeys("wikiobject", job6);
        parsingWikipediaLoader1.setUDFContextSignature("http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22");
        org.apache.hadoop.mapreduce.InputFormat inputFormat10 = parsingWikipediaLoader1.getInputFormat();
        org.apache.hadoop.mapreduce.Job job12 = null;
        org.apache.pig.ResourceSchema resourceSchema13 = parsingWikipediaLoader1.getSchema("hi !", job12);
        org.apache.hadoop.mapreduce.Job job15 = null;
        org.apache.pig.ResourceStatistics resourceStatistics16 = parsingWikipediaLoader1.getStatistics("hi !\n", job15);
        org.apache.hadoop.mapreduce.Job job18 = null;
        org.apache.pig.ResourceStatistics resourceStatistics19 = parsingWikipediaLoader1.getStatistics("http://.wikipedia.org/wiki/hi%21\n", job18);
        org.apache.hadoop.mapreduce.Job job21 = null;
        org.apache.pig.ResourceSchema resourceSchema22 = parsingWikipediaLoader1.getSchema("http://http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi _ % 21.wikipedia.org/wiki/%22%22%22%22%22%22%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%22%22%22_%22%22%22", job21);
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNull(strArray7);
        org.junit.Assert.assertNotNull(inputFormat10);
        org.junit.Assert.assertNotNull(resourceSchema13);
        org.junit.Assert.assertNull(resourceStatistics16);
        org.junit.Assert.assertNull(resourceStatistics19);
        org.junit.Assert.assertNotNull(resourceSchema22);
    }

    @Test
    public void test4007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4007");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getParagraphAnnotations();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser0.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser0.getParagraphAnnotations();
        java.lang.String str6 = annotatingMarkupParser0.getRedirect();
        info.bliki.wiki.model.WikiModel wikiModel8 = annotatingMarkupParser0.makeWikiModel("\"opennlp/en-sent.bin\"");
        java.lang.String str10 = annotatingMarkupParser0.parse("\"http://.wikipedia.org/wiki/hi%21\"\n\n");
        java.util.List<pignlproc.markup.Annotation> annotationList11 = annotatingMarkupParser0.getHeaderAnnotations();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(wikiModel8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"http://.wikipedia.org/wiki/hi%21\"\n\n" + "'", str10, "\"http://.wikipedia.org/wiki/hi%21\"\n\n");
        org.junit.Assert.assertNotNull(annotationList11);
    }

    @Test
    public void test4008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4008");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22", "hi !", "http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21");
        org.apache.hadoop.mapreduce.RecordWriter recordWriter4 = null;
        uriStringLiteralNTriplesStorer3.prepareToWrite(recordWriter4);
        org.apache.pig.data.Tuple tuple6 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer3.putNext(tuple6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4009");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser2 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser2.getHeaders();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser2.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser2.getHeaderAnnotations();
        java.lang.String str6 = annotatingMarkupParser2.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser7 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser7.getHeaders();
        java.util.List<java.lang.String> strList9 = annotatingMarkupParser7.getHeaders();
        java.lang.Appendable appendable10 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable11 = annotatingMarkupParser7.new CountingAppendable(appendable10);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable12 = annotatingMarkupParser2.new CountingAppendable((java.lang.Appendable) countingAppendable11);
        info.bliki.wiki.model.WikiModel wikiModel14 = annotatingMarkupParser2.makeWikiModel("\"hi!\"\n");
        java.util.List<pignlproc.markup.Annotation> annotationList15 = annotatingMarkupParser2.getWikiLinkAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser16 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList17 = annotatingMarkupParser16.getHeaders();
        java.util.List<java.lang.String> strList18 = annotatingMarkupParser16.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList19 = annotatingMarkupParser16.getHeaderAnnotations();
        java.lang.String str20 = annotatingMarkupParser16.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser21 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList22 = annotatingMarkupParser21.getHeaders();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser21.getHeaders();
        java.lang.Appendable appendable24 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable25 = annotatingMarkupParser21.new CountingAppendable(appendable24);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable26 = annotatingMarkupParser16.new CountingAppendable((java.lang.Appendable) countingAppendable25);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser27 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList28 = annotatingMarkupParser27.getHeaders();
        java.util.List<java.lang.String> strList29 = annotatingMarkupParser27.getHeaders();
        java.lang.Appendable appendable30 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable31 = annotatingMarkupParser27.new CountingAppendable(appendable30);
        countingAppendable31.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable34 = annotatingMarkupParser16.new CountingAppendable((java.lang.Appendable) countingAppendable31);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser35 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList36 = annotatingMarkupParser35.getHeaders();
        java.util.List<java.lang.String> strList37 = annotatingMarkupParser35.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList38 = annotatingMarkupParser35.getHeaderAnnotations();
        java.lang.String str39 = annotatingMarkupParser35.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser40 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList41 = annotatingMarkupParser40.getHeaders();
        java.util.List<java.lang.String> strList42 = annotatingMarkupParser40.getHeaders();
        java.lang.Appendable appendable43 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable44 = annotatingMarkupParser40.new CountingAppendable(appendable43);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable45 = annotatingMarkupParser35.new CountingAppendable((java.lang.Appendable) countingAppendable44);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable46 = annotatingMarkupParser16.new CountingAppendable((java.lang.Appendable) countingAppendable44);
        countingAppendable44.currentPosition = 0;
        countingAppendable44.currentPosition = (short) 100;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser51 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList52 = annotatingMarkupParser51.getHeaders();
        java.util.List<java.lang.String> strList53 = annotatingMarkupParser51.getHeaders();
        java.util.List<java.lang.String> strList54 = annotatingMarkupParser51.getHeaders();
        java.util.List<java.lang.String> strList55 = annotatingMarkupParser51.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList56 = annotatingMarkupParser51.getParagraphAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel58 = annotatingMarkupParser51.makeWikiModel("http://\"http://.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22");
        annotatingMarkupParser1.nodesToText(annotationList15, (java.lang.Appendable) countingAppendable44, (info.bliki.wiki.model.IWikiModel) wikiModel58);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(wikiModel14);
        org.junit.Assert.assertNotNull(annotationList15);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(annotationList19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(annotationList38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(annotationList56);
        org.junit.Assert.assertNotNull(wikiModel58);
    }

    @Test
    public void test4010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4010");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = sentencesWithLink0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = sentencesWithLink0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = sentencesWithLink0.getReporter();
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(funcSpecList6);
        org.junit.Assert.assertNull(pigLogger7);
        org.junit.Assert.assertNull(pigLogger8);
        org.junit.Assert.assertNull(pigProgressable9);
    }

    @Test
    public void test4011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4011");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag1 = new pignlproc.evaluation.AggregateTextBag((int) (short) 0);
        java.lang.Enum enum3 = null;
        aggregateTextBag1.warn("href", enum3);
        aggregateTextBag1.progress();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.data.Tuple tuple9 = null;
        java.lang.Boolean boolean10 = checkAbstract6.exec(tuple9);
        java.lang.Enum enum12 = null;
        checkAbstract6.warn("href", enum12);
        checkAbstract6.finish();
        pignlproc.evaluation.SafeTsvText safeTsvText15 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = null;
        safeTsvText15.setPigLogger(pigLogger16);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText18 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = mergeAsOpenNLPAnnotatedText18.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = checkAbstract20.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = mergeAsOpenNLPAnnotatedText18.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = safeTsvText15.outputSchema(schema23);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText25 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray27 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList28 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList28, spanArray27);
        java.lang.String str30 = mergeAsOpenNLPAnnotatedText25.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList28);
        pignlproc.evaluation.ConcatTextBag concatTextBag32 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract33 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum35 = null;
        checkAbstract33.warn("http://.wikipedia.org/wiki/hi%21", enum35);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger37 = null;
        checkAbstract33.setPigLogger(pigLogger37);
        checkAbstract33.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText40 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger41 = null;
        safeTsvText40.setPigLogger(pigLogger41);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText43 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable44 = mergeAsOpenNLPAnnotatedText43.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract45 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = checkAbstract45.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = mergeAsOpenNLPAnnotatedText43.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = safeTsvText40.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = checkAbstract33.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = concatTextBag32.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = mergeAsOpenNLPAnnotatedText25.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = safeTsvText15.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = checkAbstract6.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = aggregateTextBag1.outputSchema(schema54);
        org.apache.pig.data.Tuple tuple56 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str57 = aggregateTextBag1.exec(tuple56);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in AggregateTextBag");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertEquals("'" + boolean10 + "' != '" + false + "'", boolean10, false);
        org.junit.Assert.assertNull(pigProgressable19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(spanArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "href" + "'", str30, "href");
        org.junit.Assert.assertNull(pigProgressable44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test4012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4012");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("hi !\n");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriUriNTriplesStorer1.getOutputFormat();
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader4 = new pignlproc.storage.ParsingWikipediaLoader("href");
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = parsingWikipediaLoader4.getSchema("opennlp/en-sent.bin", job6);
        uriUriNTriplesStorer1.checkSchema(resourceSchema7);
        org.apache.pig.data.Tuple tuple9 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer1.putNext(tuple9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat2);
        org.junit.Assert.assertNotNull(resourceSchema7);
    }

    @Test
    public void test4013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4013");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("http://.wikipedia.org/wiki/%22_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_%22");
        org.apache.hadoop.mapreduce.Job job3 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer1.setStoreLocation("http://http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/%22opennlp_%2F_en_-_sent_._bin%22%0A.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22%22%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%22_%22.wikipedia.org%2Fwiki%2F%2522%2522%2522http%253A%252F%252Fhi%2521.wikipedia.org%252Fwiki%252F%252522http%25253A%25252F%25252F.wikipedia.org%25252Fwiki%25252Fhi%25252521%252522%25250A%2522%2522%2522.wikipedia.org%2Fwiki%2Fwikiobject", job3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4014");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"", "\"\"\"http://.wikipedia.org/wiki/hi%21\"\" \"", "hi !");
        org.apache.hadoop.fs.Path path5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = uriUriNTriplesLoader3.relativeToAbsolutePath("http://http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/%22opennlp_%2F_en_-_sent_._bin%22%0A.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22%22%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%22_%22.wikipedia.org%2Fwiki%2F%2522%2522%2522http%253A%252F%252Fhi%2521.wikipedia.org%252Fwiki%252F%252522http%25253A%25252F%25252F.wikipedia.org%25252Fwiki%25252Fhi%25252521%252522%25250A%2522%2522%2522.wikipedia.org%2Fwiki%2Fwikiobject", path5);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: http://http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/%22opennlp_%2F_en_-_sent_._bin%22%0A.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22%22%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%22_%22.wikipedia.org%2Fwiki%2F%2522%2522%2522http%253A%252F%252Fhi%2521.wikipedia.org%252Fwiki%252F%252522http%25253A%25252F%25252F.wikipedia.org%25252Fwiki%25252Fhi%25252521%252522%25250A%2522%2522%2522.wikipedia.org%2Fwiki%2Fwikiobject curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4015");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag12 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText13 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        safeTsvText13.setPigLogger(pigLogger14);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText16.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = safeTsvText13.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = aggregateTextBag12.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = noLoopInPath0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        noLoopInPath0.setPigLogger(pigLogger25);
        org.apache.pig.data.Tuple tuple27 = null;
        java.lang.Boolean boolean28 = noLoopInPath0.exec(tuple27);
        org.apache.commons.logging.Log log29 = noLoopInPath0.getLogger();
        noLoopInPath0.progress();
        boolean boolean31 = noLoopInPath0.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList32 = noLoopInPath0.getArgToFuncMapping();
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + boolean28 + "' != '" + true + "'", boolean28, true);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(funcSpecList32);
    }

    @Test
    public void test4016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4016");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser14.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList16 = annotatingMarkupParser14.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel18 = annotatingMarkupParser14.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel20 = annotatingMarkupParser14.makeWikiModel("hi!\n");
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser14.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser22 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser22.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList24 = annotatingMarkupParser22.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList25 = annotatingMarkupParser22.getParagraphAnnotations();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser22.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList27 = annotatingMarkupParser22.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser28 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList29 = annotatingMarkupParser28.getHeaderAnnotations();
        java.util.List<java.lang.String> strList30 = annotatingMarkupParser28.getParagraphs();
        java.lang.Appendable appendable31 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable32 = annotatingMarkupParser28.new CountingAppendable(appendable31);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable33 = annotatingMarkupParser22.new CountingAppendable((java.lang.Appendable) countingAppendable32);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser34 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList35 = annotatingMarkupParser34.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList36 = annotatingMarkupParser34.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel38 = annotatingMarkupParser34.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel40 = annotatingMarkupParser34.makeWikiModel("hi!\n");
        annotatingMarkupParser0.nodesToText(annotationList21, (java.lang.Appendable) countingAppendable33, (info.bliki.wiki.model.IWikiModel) wikiModel40);
        java.lang.String str43 = annotatingMarkupParser0.parse("hi!");
        info.bliki.wiki.model.WikiModel wikiModel45 = annotatingMarkupParser0.makeWikiModel("http://\"title\"\n.wikipedia.org/wiki/");
        java.util.List<pignlproc.markup.Annotation> annotationList46 = annotatingMarkupParser0.getHeaderAnnotations();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(annotationList16);
        org.junit.Assert.assertNotNull(wikiModel18);
        org.junit.Assert.assertNotNull(wikiModel20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(annotationList24);
        org.junit.Assert.assertNotNull(annotationList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList27);
        org.junit.Assert.assertNotNull(annotationList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(annotationList36);
        org.junit.Assert.assertNotNull(wikiModel38);
        org.junit.Assert.assertNotNull(wikiModel40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!\n" + "'", str43, "hi!\n");
        org.junit.Assert.assertNotNull(wikiModel45);
        org.junit.Assert.assertNotNull(annotationList46);
    }

    @Test
    public void test4017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4017");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser14.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList16 = annotatingMarkupParser14.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel18 = annotatingMarkupParser14.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel20 = annotatingMarkupParser14.makeWikiModel("hi!\n");
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser14.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser22 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser22.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList24 = annotatingMarkupParser22.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList25 = annotatingMarkupParser22.getParagraphAnnotations();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser22.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList27 = annotatingMarkupParser22.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser28 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList29 = annotatingMarkupParser28.getHeaderAnnotations();
        java.util.List<java.lang.String> strList30 = annotatingMarkupParser28.getParagraphs();
        java.lang.Appendable appendable31 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable32 = annotatingMarkupParser28.new CountingAppendable(appendable31);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable33 = annotatingMarkupParser22.new CountingAppendable((java.lang.Appendable) countingAppendable32);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser34 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList35 = annotatingMarkupParser34.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList36 = annotatingMarkupParser34.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel38 = annotatingMarkupParser34.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel40 = annotatingMarkupParser34.makeWikiModel("hi!\n");
        annotatingMarkupParser0.nodesToText(annotationList21, (java.lang.Appendable) countingAppendable33, (info.bliki.wiki.model.IWikiModel) wikiModel40);
        java.lang.String str43 = annotatingMarkupParser0.parse("hi!");
        info.bliki.wiki.model.WikiModel wikiModel45 = annotatingMarkupParser0.makeWikiModel("http://\"title\"\n.wikipedia.org/wiki/");
        java.util.List<java.lang.String> strList46 = annotatingMarkupParser0.getHeaders();
        java.lang.String str47 = annotatingMarkupParser0.getRedirect();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(annotationList16);
        org.junit.Assert.assertNotNull(wikiModel18);
        org.junit.Assert.assertNotNull(wikiModel20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(annotationList24);
        org.junit.Assert.assertNotNull(annotationList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList27);
        org.junit.Assert.assertNotNull(annotationList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(annotationList36);
        org.junit.Assert.assertNotNull(wikiModel38);
        org.junit.Assert.assertNotNull(wikiModel40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!\n" + "'", str43, "hi!\n");
        org.junit.Assert.assertNotNull(wikiModel45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test4018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4018");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("hi !", "title", "title");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader5 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.pig.LoadCaster loadCaster6 = parsingWikipediaLoader5.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job8 = null;
        org.apache.pig.ResourceSchema resourceSchema9 = parsingWikipediaLoader5.getSchema("hi!", job8);
        uriUriNTriplesStorer3.checkSchema(resourceSchema9);
        org.apache.pig.data.Tuple tuple11 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer3.putNext(tuple11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(loadCaster6);
        org.junit.Assert.assertNotNull(resourceSchema9);
    }

    @Test
    public void test4019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4019");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getParagraphAnnotations();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser0.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser0.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser6 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser6.getHeaderAnnotations();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser6.getParagraphs();
        java.lang.Appendable appendable9 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser6.new CountingAppendable(appendable9);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable11 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable10);
        java.lang.String str13 = annotatingMarkupParser0.parse("hi!\n");
        java.util.List<java.lang.String> strList14 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser0.getParagraphs();
        java.lang.String str16 = annotatingMarkupParser0.getRedirect();
        java.util.List<java.lang.String> strList17 = annotatingMarkupParser0.getParagraphs();
        java.util.List<java.lang.String> strList18 = annotatingMarkupParser0.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList19 = annotatingMarkupParser0.getWikiLinkAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser20 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser20.getHeaders();
        java.util.List<java.lang.String> strList22 = annotatingMarkupParser20.getHeaders();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser20.getHeaders();
        boolean boolean24 = annotatingMarkupParser20.noLinks();
        java.util.List<pignlproc.markup.Annotation> annotationList25 = annotatingMarkupParser20.getWikiLinkAnnotations();
        java.lang.Appendable appendable26 = null;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser27 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList28 = annotatingMarkupParser27.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList29 = annotatingMarkupParser27.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel31 = annotatingMarkupParser27.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel33 = annotatingMarkupParser27.makeWikiModel("hi!\n");
        java.util.List<pignlproc.markup.Annotation> annotationList34 = annotatingMarkupParser27.getParagraphAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList35 = annotatingMarkupParser27.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel37 = annotatingMarkupParser27.makeWikiModel("");
        annotatingMarkupParser0.nodesToText(annotationList25, appendable26, (info.bliki.wiki.model.IWikiModel) wikiModel37);
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!\n\n" + "'", str13, "hi!\n\n");
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(annotationList19);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(annotationList25);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(annotationList29);
        org.junit.Assert.assertNotNull(wikiModel31);
        org.junit.Assert.assertNotNull(wikiModel33);
        org.junit.Assert.assertNotNull(annotationList34);
        org.junit.Assert.assertNotNull(annotationList35);
        org.junit.Assert.assertNotNull(wikiModel37);
    }

    @Test
    public void test4020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4020");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("http://http://hi!\n.wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/%22%22%22_http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_%22%22%22");
        org.apache.hadoop.mapreduce.Job job3 = null;
        java.lang.String[] strArray4 = parsingWikipediaLoader1.getPartitionKeys("http://http://\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\".wikipedia.org/wiki/%22%22%22opennlp_%2F_en_-_sent_._bin%22%22%22.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org%2Fwiki%2Fhi_%2521", job3);
        org.junit.Assert.assertNull(strArray4);
    }

    @Test
    public void test4021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4021");
        org.apache.hadoop.mapreduce.Job job1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.StoreFunc.cleanupOnFailureImpl("\"http://http://hi! .wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin\"\n", job1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Illegal character in scheme name at index 0: \"http://http:/hi!%20.wikipedia.org/wiki/%2522_title_%2522.wikipedia.org/wiki/opennlp_%252F_en_-_sent_._bin%22%0A");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4022");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("titlehref");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader3 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = parsingWikipediaLoader3.getSchema("title", job5);
        org.apache.pig.LoadCaster loadCaster7 = parsingWikipediaLoader3.getLoadCaster();
        parsingWikipediaLoader3.setUDFContextSignature("hi !");
        org.apache.hadoop.mapreduce.RecordReader recordReader10 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit11 = null;
        parsingWikipediaLoader3.prepareToRead(recordReader10, pigSplit11);
        org.apache.hadoop.mapreduce.Job job14 = null;
        org.apache.pig.ResourceSchema resourceSchema15 = parsingWikipediaLoader3.getSchema("\" title \"", job14);
        uriStringLiteralNTriplesStorer1.checkSchema(resourceSchema15);
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader18 = new pignlproc.storage.ParsingWikipediaLoader("");
        parsingWikipediaLoader18.setUDFContextSignature("hi !");
        org.apache.pig.Expression expression21 = null;
        parsingWikipediaLoader18.setPartitionFilter(expression21);
        org.apache.hadoop.mapreduce.Job job24 = null;
        org.apache.pig.ResourceSchema resourceSchema25 = parsingWikipediaLoader18.getSchema("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22", job24);
        uriStringLiteralNTriplesStorer1.checkSchema(resourceSchema25);
        org.apache.hadoop.fs.Path path28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = uriStringLiteralNTriplesStorer1.relToAbsPathForStoreLocation("http://\"http://.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22\n", path28);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: http://\"http://.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22? curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNotNull(loadCaster7);
        org.junit.Assert.assertNotNull(resourceSchema15);
        org.junit.Assert.assertNotNull(resourceSchema25);
    }

    @Test
    public void test4023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4023");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("\"\"\"\"\"\"\"http://.wikipedia.org/wiki/hi%21\"\"\"\" \"\"\"\n\n");
    }

    @Test
    public void test4024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4024");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("title", job4);
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = uriStringLiteralNTriplesLoader2.getSchema("http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21", job7);
        org.apache.hadoop.mapreduce.RecordReader recordReader9 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit10 = null;
        uriStringLiteralNTriplesLoader2.prepareToRead(recordReader9, pigSplit10);
        org.apache.pig.LoadCaster loadCaster12 = uriStringLiteralNTriplesLoader2.getLoadCaster();
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(resourceSchema8);
        org.junit.Assert.assertNotNull(loadCaster12);
    }

    @Test
    public void test4025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4025");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\"");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser2 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser2.getHeaders();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser2.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser2.getHeaderAnnotations();
        java.lang.String str6 = annotatingMarkupParser2.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser7 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser7.getHeaders();
        java.util.List<java.lang.String> strList9 = annotatingMarkupParser7.getHeaders();
        java.lang.Appendable appendable10 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable11 = annotatingMarkupParser7.new CountingAppendable(appendable10);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable12 = annotatingMarkupParser2.new CountingAppendable((java.lang.Appendable) countingAppendable11);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser13 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList14 = annotatingMarkupParser13.getHeaders();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser13.getHeaders();
        java.lang.Appendable appendable16 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable17 = annotatingMarkupParser13.new CountingAppendable(appendable16);
        countingAppendable17.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable20 = annotatingMarkupParser2.new CountingAppendable((java.lang.Appendable) countingAppendable17);
        countingAppendable20.currentPosition = (byte) -1;
        countingAppendable20.currentPosition = ' ';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable25 = annotatingMarkupParser1.new CountingAppendable((java.lang.Appendable) countingAppendable20);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(strList15);
    }

    @Test
    public void test4026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4026");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("http : // http : // hi ! . wikipedia . org / wiki / % 22 _ title _ % 22 . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin");
    }

    @Test
    public void test4027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4027");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getParagraphAnnotations();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser0.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser0.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser6 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser6.getHeaderAnnotations();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser6.getParagraphs();
        java.lang.Appendable appendable9 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser6.new CountingAppendable(appendable9);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable11 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable10);
        java.lang.String str13 = annotatingMarkupParser0.parse("hi!\n");
        java.util.List<java.lang.String> strList14 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList15 = annotatingMarkupParser0.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser16 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList17 = annotatingMarkupParser16.getHeaders();
        java.util.List<java.lang.String> strList18 = annotatingMarkupParser16.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList19 = annotatingMarkupParser16.getHeaderAnnotations();
        java.lang.String str20 = annotatingMarkupParser16.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser21 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList22 = annotatingMarkupParser21.getHeaders();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser21.getHeaders();
        java.lang.Appendable appendable24 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable25 = annotatingMarkupParser21.new CountingAppendable(appendable24);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable26 = annotatingMarkupParser16.new CountingAppendable((java.lang.Appendable) countingAppendable25);
        java.util.List<java.lang.String> strList27 = annotatingMarkupParser16.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel29 = annotatingMarkupParser16.makeWikiModel("opennlp / en - sent . bin");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser30 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList31 = annotatingMarkupParser30.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList32 = annotatingMarkupParser30.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel34 = annotatingMarkupParser30.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel36 = annotatingMarkupParser30.makeWikiModel("hi!\n");
        java.util.List<pignlproc.markup.Annotation> annotationList37 = annotatingMarkupParser30.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser38 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList39 = annotatingMarkupParser38.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList40 = annotatingMarkupParser38.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList41 = annotatingMarkupParser38.getParagraphAnnotations();
        java.util.List<java.lang.String> strList42 = annotatingMarkupParser38.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList43 = annotatingMarkupParser38.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser44 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList45 = annotatingMarkupParser44.getHeaderAnnotations();
        java.util.List<java.lang.String> strList46 = annotatingMarkupParser44.getParagraphs();
        java.lang.Appendable appendable47 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable48 = annotatingMarkupParser44.new CountingAppendable(appendable47);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable49 = annotatingMarkupParser38.new CountingAppendable((java.lang.Appendable) countingAppendable48);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser50 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList51 = annotatingMarkupParser50.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList52 = annotatingMarkupParser50.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel54 = annotatingMarkupParser50.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel56 = annotatingMarkupParser50.makeWikiModel("hi!\n");
        annotatingMarkupParser16.nodesToText(annotationList37, (java.lang.Appendable) countingAppendable49, (info.bliki.wiki.model.IWikiModel) wikiModel56);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable58 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable49);
        countingAppendable49.currentPosition = 35;
        int int61 = countingAppendable49.currentPosition;
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!\n\n" + "'", str13, "hi!\n\n");
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(annotationList15);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(annotationList19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(wikiModel29);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(annotationList32);
        org.junit.Assert.assertNotNull(wikiModel34);
        org.junit.Assert.assertNotNull(wikiModel36);
        org.junit.Assert.assertNotNull(annotationList37);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(annotationList40);
        org.junit.Assert.assertNotNull(annotationList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(annotationList43);
        org.junit.Assert.assertNotNull(annotationList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(annotationList52);
        org.junit.Assert.assertNotNull(wikiModel54);
        org.junit.Assert.assertNotNull(wikiModel56);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 35 + "'", int61 == 35);
    }

    @Test
    public void test4028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4028");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader0 = new pignlproc.storage.UriUriNTriplesLoader();
        org.apache.hadoop.mapreduce.Job job2 = null;
        org.apache.pig.ResourceStatistics resourceStatistics3 = uriUriNTriplesLoader0.getStatistics("wikiobject", job2);
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceStatistics resourceStatistics6 = uriUriNTriplesLoader0.getStatistics("\"opennlp / en - sent . bin\"", job5);
        org.apache.hadoop.mapreduce.Job job8 = null;
        java.lang.String[] strArray9 = uriUriNTriplesLoader0.getPartitionKeys("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21", job8);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple10 = uriUriNTriplesLoader0.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics3);
        org.junit.Assert.assertNull(resourceStatistics6);
        org.junit.Assert.assertNull(strArray9);
    }

    @Test
    public void test4029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4029");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        java.lang.String[] strArray5 = uriStringLiteralNTriplesLoader2.getPartitionKeys("http://.wikipedia.org/wiki/hi%21\n", job4);
        uriStringLiteralNTriplesLoader2.setUDFContextSignature("");
        org.apache.hadoop.mapreduce.Job job9 = null;
        java.lang.String[] strArray10 = uriStringLiteralNTriplesLoader2.getPartitionKeys("hi!", job9);
        org.apache.hadoop.mapreduce.Job job12 = null;
        org.apache.pig.ResourceSchema resourceSchema13 = uriStringLiteralNTriplesLoader2.getSchema("http://\"http://.wikipedia.org/wiki/hi%21\"\n\n.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%0A", job12);
        org.apache.hadoop.mapreduce.Job job15 = null;
        org.apache.pig.ResourceSchema resourceSchema16 = uriStringLiteralNTriplesLoader2.getSchema("\"title\"href", job15);
        org.junit.Assert.assertNull(strArray5);
        org.junit.Assert.assertNull(strArray10);
        org.junit.Assert.assertNotNull(resourceSchema13);
        org.junit.Assert.assertNotNull(resourceSchema16);
    }

    @Test
    public void test4030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4030");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("wikiobject", "");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", job4);
        org.apache.hadoop.mapreduce.RecordReader recordReader6 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit7 = null;
        uriStringLiteralNTriplesLoader2.prepareToRead(recordReader6, pigSplit7);
        org.apache.pig.LoadCaster loadCaster9 = uriStringLiteralNTriplesLoader2.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job11 = null;
        org.apache.pig.ResourceSchema resourceSchema12 = uriStringLiteralNTriplesLoader2.getSchema("\"\"\"\"\"\"\"http://.wikipedia.org/wiki/hi%21\"\"\"\" \"\"\"\n\n", job11);
        org.apache.hadoop.mapreduce.Job job14 = null;
        org.apache.pig.ResourceSchema resourceSchema15 = uriStringLiteralNTriplesLoader2.getSchema("\"\"\"title\"\" \"hrefhref", job14);
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(loadCaster9);
        org.junit.Assert.assertNotNull(resourceSchema12);
        org.junit.Assert.assertNotNull(resourceSchema15);
    }

    @Test
    public void test4031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4031");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        sentencesWithLink0.setPigLogger(pigLogger2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        sentencesWithLink0.setReporter(pigProgressable4);
        java.lang.reflect.Type type6 = sentencesWithLink0.getReturnType();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = sentencesWithLink0.outputSchema(schema7);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList9 = sentencesWithLink0.getArgToFuncMapping();
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(funcSpecList9);
    }

    @Test
    public void test4032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4032");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.commons.logging.Log log7 = sentencesWithLink0.getLogger();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList8 = sentencesWithLink0.getArgToFuncMapping();
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(funcSpecList6);
        org.junit.Assert.assertNotNull(log7);
        org.junit.Assert.assertNull(funcSpecList8);
    }

    @Test
    public void test4033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4033");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://.wikipedia.org/wiki/hi%21", job4);
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = uriStringLiteralNTriplesLoader2.getSchema("\"title\"\n", job7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        java.lang.String[] strArray11 = uriStringLiteralNTriplesLoader2.getPartitionKeys("\"\"\"http://.wikipedia.org/wiki/hi%21\"\"  \"", job10);
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(resourceSchema8);
        org.junit.Assert.assertNull(strArray11);
    }

    @Test
    public void test4034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4034");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.mapreduce.RecordReader recordReader5 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit6 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader5, pigSplit6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        java.lang.String[] strArray10 = parsingWikipediaLoader1.getPartitionKeys("http://.wikipedia.org/wiki/hi%21", job9);
        org.apache.hadoop.mapreduce.InputFormat inputFormat11 = parsingWikipediaLoader1.getInputFormat();
        parsingWikipediaLoader1.setUDFContextSignature("\"\"\"hi!\"\" \"");
        org.apache.hadoop.mapreduce.Job job15 = null;
        org.apache.pig.ResourceSchema resourceSchema16 = parsingWikipediaLoader1.getSchema("\" http : // \"\" opennlp / en - sent . bin \"\" . wikipedia . org / wiki / hrefwikiobject \"\"\"\"\"\" http : // hi ! . wikipedia . org / wiki / % 22 http % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 22 % 0 A \"\"\"\"\"\" wikiobject \"\" hi ! \"\" wikiobject wikiobjectopennlp / en - sent . binwikiobjecthttp : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ binwikiobjecthttp : // http : // \"\" title \"\" . wikipedia . org / wiki / % 22 hi % 21 % 22 . wikipedia . org / wiki / hi % 21 wikiobjecthttp : // \"\" http : // . wikipedia . org / wiki / hi % 21 \"\" . wikipedia . org / wiki / % 22 % 22 % 22 http % 3 A % 2 F % 2 Fhi _ % 21 _ . wikipedia . org % 2 Fwiki % 2 Fhttp % 253 A % 252 F % 252 Fhttp % 253 A % 252 F % 252 F . wikipedia . org % 252 Fwiki % 252 Fhi % 252521 % 250 A . wikipedia . org % 252 Fwiki % 252 F % 252522 title % 252522 % 22 % 22 % 22 wikiobject \"\" opennlp / en - sent . bin \"\" wikiobject \"\"\"\"\"", job15);
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNull(strArray10);
        org.junit.Assert.assertNotNull(inputFormat11);
        org.junit.Assert.assertNotNull(resourceSchema16);
    }

    @Test
    public void test4035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4035");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum2 = null;
        safeTsvText0.warn("opennlp/en-sent.bin", enum2);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList4 = safeTsvText0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = safeTsvText0.getReporter();
        org.apache.commons.logging.Log log6 = safeTsvText0.getLogger();
        org.junit.Assert.assertNull(funcSpecList4);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(log6);
    }

    @Test
    public void test4036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4036");
        java.lang.String[] strArray1 = new java.lang.String[] { "opennlp/en-sent.bin" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String str5 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "");
        java.lang.String str7 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        java.lang.String str9 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "hi !");
        java.lang.String str11 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "hi!\n");
        java.lang.String str13 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "hi!\n");
        java.lang.String str15 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "\"\"\n");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "opennlp/en-sent.bin" + "'", str5, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "opennlp/en-sent.bin" + "'", str7, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "opennlp/en-sent.bin" + "'", str9, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "opennlp/en-sent.bin" + "'", str11, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "opennlp/en-sent.bin" + "'", str13, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "opennlp/en-sent.bin" + "'", str15, "opennlp/en-sent.bin");
    }

    @Test
    public void test4037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4037");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("http://http://\"http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21\".wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522.wikipedia.org/wiki/hi_%21%0A");
        org.apache.hadoop.mapreduce.RecordWriter recordWriter2 = null;
        uriUriNTriplesStorer1.prepareToWrite(recordWriter2);
    }

    @Test
    public void test4038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4038");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("hi !", "opennlp/en-sent.bin", "wikiobject");
        org.apache.pig.Expression expression4 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression4);
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = uriUriNTriplesLoader3.getSchema("", job7);
        org.apache.hadoop.mapreduce.RecordReader recordReader9 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit10 = null;
        uriUriNTriplesLoader3.prepareToRead(recordReader9, pigSplit10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple12 = uriUriNTriplesLoader3.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema8);
    }

    @Test
    public void test4039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4039");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.setInputPaths(job0, "http://http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22\n.wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org%2Fwiki%2Fhi_%2521");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4040");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("title", job3);
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader1.getLoadCaster();
        org.apache.pig.Expression expression6 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression6);
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(loadCaster5);
    }

    @Test
    public void test4041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4041");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21");
        info.bliki.htmlcleaner.TagNode tagNode2 = null;
        info.bliki.wiki.model.ImageFormat imageFormat3 = null;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser4 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList5 = annotatingMarkupParser4.getHeaders();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser4.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser4.getHeaderAnnotations();
        java.lang.String str8 = annotatingMarkupParser4.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser9 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList10 = annotatingMarkupParser9.getHeaders();
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser9.getHeaders();
        java.lang.Appendable appendable12 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable13 = annotatingMarkupParser9.new CountingAppendable(appendable12);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable14 = annotatingMarkupParser4.new CountingAppendable((java.lang.Appendable) countingAppendable13);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser15 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser15.getHeaders();
        java.util.List<java.lang.String> strList17 = annotatingMarkupParser15.getHeaders();
        java.lang.Appendable appendable18 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable19 = annotatingMarkupParser15.new CountingAppendable(appendable18);
        countingAppendable19.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable22 = annotatingMarkupParser4.new CountingAppendable((java.lang.Appendable) countingAppendable19);
        int int23 = countingAppendable22.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser25 = new pignlproc.markup.AnnotatingMarkupParser("http://http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href.wikipedia.org/wiki/http%3A%2F%2F%22opennlp_%2F_en_-_sent_._bin%22.wikipedia.org%2Fwiki%2Fhrefwikiobject%22%22%22http%3A%2F%2Fhi%21.wikipedia.org%2Fwiki%2F%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22wikiobject%22hi%21%22%0Awikiobject%0Awikiobjectopennlp%2Fen-sent.binwikiobjecthttp%3A%2F%2Fhi%21%0A.wikipedia.org%2Fwiki%2Fopennlp_%252F_en_-_sent_._binwikiobjecthttp%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521wikiobjecthttp%3A%2F%2F%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22.wikipedia.org%2Fwiki%2F%2522%2522%2522http%253A%252F%252Fhi_%2521_.wikipedia.org%252Fwiki%252Fhttp%25253A%25252F%25252Fhttp%25253A%25252F%25252F.wikipedia.org%25252Fwiki%25252Fhi%25252521%25250A.wikipedia.org%25252Fwiki%25252F%25252522title%25252522%2522%2522%2522wikiobject%22opennlp_%2F_en_-_sent_._bin%22wikiobject%22%22\n");
        java.util.List<pignlproc.markup.Annotation> annotationList26 = null;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser28 = new pignlproc.markup.AnnotatingMarkupParser("\"http://.wikipedia.org/wiki/hi%21\"\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser29 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList30 = annotatingMarkupParser29.getHeaders();
        java.util.List<java.lang.String> strList31 = annotatingMarkupParser29.getHeaders();
        java.util.List<java.lang.String> strList32 = annotatingMarkupParser29.getHeaders();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser33 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList34 = annotatingMarkupParser33.getHeaders();
        java.util.List<java.lang.String> strList35 = annotatingMarkupParser33.getHeaders();
        java.util.List<java.lang.String> strList36 = annotatingMarkupParser33.getHeaders();
        java.util.List<java.lang.String> strList37 = annotatingMarkupParser33.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel39 = annotatingMarkupParser33.makeWikiModel("opennlp / en - sent . bin");
        info.bliki.wiki.model.WikiModel wikiModel41 = annotatingMarkupParser33.makeWikiModel("\"hi!\"");
        java.util.List<pignlproc.markup.Annotation> annotationList42 = annotatingMarkupParser33.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser44 = new pignlproc.markup.AnnotatingMarkupParser("\"title\"");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser45 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList46 = annotatingMarkupParser45.getHeaders();
        java.util.List<java.lang.String> strList47 = annotatingMarkupParser45.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList48 = annotatingMarkupParser45.getHeaderAnnotations();
        java.lang.String str49 = annotatingMarkupParser45.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser50 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList51 = annotatingMarkupParser50.getHeaders();
        java.util.List<java.lang.String> strList52 = annotatingMarkupParser50.getHeaders();
        java.lang.Appendable appendable53 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable54 = annotatingMarkupParser50.new CountingAppendable(appendable53);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable55 = annotatingMarkupParser45.new CountingAppendable((java.lang.Appendable) countingAppendable54);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser56 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList57 = annotatingMarkupParser56.getHeaders();
        java.util.List<java.lang.String> strList58 = annotatingMarkupParser56.getHeaders();
        java.lang.Appendable appendable59 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable60 = annotatingMarkupParser56.new CountingAppendable(appendable59);
        countingAppendable60.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable63 = annotatingMarkupParser45.new CountingAppendable((java.lang.Appendable) countingAppendable60);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable64 = annotatingMarkupParser44.new CountingAppendable((java.lang.Appendable) countingAppendable63);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser65 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList66 = annotatingMarkupParser65.getHeaders();
        java.util.List<java.lang.String> strList67 = annotatingMarkupParser65.getHeaders();
        java.lang.String str69 = annotatingMarkupParser65.parse("\"title\"");
        info.bliki.wiki.model.WikiModel wikiModel71 = annotatingMarkupParser65.makeWikiModel("\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"");
        info.bliki.wiki.model.WikiModel wikiModel73 = annotatingMarkupParser65.makeWikiModel("http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href");
        annotatingMarkupParser29.nodesToText(annotationList42, (java.lang.Appendable) countingAppendable63, (info.bliki.wiki.model.IWikiModel) wikiModel73);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable75 = annotatingMarkupParser28.new CountingAppendable((java.lang.Appendable) countingAppendable63);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser76 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList77 = annotatingMarkupParser76.getHeaders();
        java.util.List<java.lang.String> strList78 = annotatingMarkupParser76.getHeaders();
        java.util.List<java.lang.String> strList79 = annotatingMarkupParser76.getHeaders();
        java.util.List<java.lang.String> strList80 = annotatingMarkupParser76.getHeaders();
        java.util.List<java.lang.String> strList81 = annotatingMarkupParser76.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList82 = annotatingMarkupParser76.getHeaderAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel84 = annotatingMarkupParser76.makeWikiModel("titlehref");
        annotatingMarkupParser25.nodesToText(annotationList26, (java.lang.Appendable) countingAppendable75, (info.bliki.wiki.model.IWikiModel) wikiModel84);
        // The following exception was thrown during execution in test generation
        try {
            annotatingMarkupParser1.imageNodeToText(tagNode2, imageFormat3, (java.lang.Appendable) countingAppendable22, (info.bliki.wiki.model.IWikiModel) wikiModel84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(wikiModel39);
        org.junit.Assert.assertNotNull(wikiModel41);
        org.junit.Assert.assertNotNull(annotationList42);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNotNull(annotationList48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "\"title\"\n" + "'", str69, "\"title\"\n");
        org.junit.Assert.assertNotNull(wikiModel71);
        org.junit.Assert.assertNotNull(wikiModel73);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(annotationList82);
        org.junit.Assert.assertNotNull(wikiModel84);
    }

    @Test
    public void test4042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4042");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag(35, false);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = aggregateTextBag2.getArgToFuncMapping();
        org.junit.Assert.assertNull(funcSpecList3);
    }

    @Test
    public void test4043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4043");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("");
        mergeAsOpenNLPAnnotatedText1.progress();
        boolean boolean3 = mergeAsOpenNLPAnnotatedText1.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText5 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray7 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList8 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList8, spanArray7);
        java.lang.String str10 = mergeAsOpenNLPAnnotatedText5.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList8);
        java.lang.String str11 = mergeAsOpenNLPAnnotatedText1.merge("http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522", (java.util.List<opennlp.tools.util.Span>) spanList8);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink12 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger13 = null;
        sentencesWithLink12.setPigLogger(pigLogger13);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList15 = sentencesWithLink12.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = sentencesWithLink12.getPigLogger();
        boolean boolean17 = sentencesWithLink12.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText18 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = mergeAsOpenNLPAnnotatedText18.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = checkAbstract20.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = mergeAsOpenNLPAnnotatedText18.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = sentencesWithLink12.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = mergeAsOpenNLPAnnotatedText1.outputSchema(schema24);
        boolean boolean26 = mergeAsOpenNLPAnnotatedText1.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger27 = mergeAsOpenNLPAnnotatedText1.getPigLogger();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(spanArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "href" + "'", str10, "href");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522" + "'", str11, "http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522");
        org.junit.Assert.assertNull(funcSpecList15);
        org.junit.Assert.assertNull(pigLogger16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(pigProgressable19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(pigLogger27);
    }

    @Test
    public void test4044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4044");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getParagraphAnnotations();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser0.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser0.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser6 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser6.getHeaderAnnotations();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser6.getParagraphs();
        java.lang.Appendable appendable9 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser6.new CountingAppendable(appendable9);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable11 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable10);
        java.lang.String str13 = annotatingMarkupParser0.parse("hi!\n");
        java.util.List<java.lang.String> strList14 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList15 = annotatingMarkupParser0.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser16 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList17 = annotatingMarkupParser16.getHeaders();
        java.util.List<java.lang.String> strList18 = annotatingMarkupParser16.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList19 = annotatingMarkupParser16.getHeaderAnnotations();
        java.lang.String str20 = annotatingMarkupParser16.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser21 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList22 = annotatingMarkupParser21.getHeaders();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser21.getHeaders();
        java.lang.Appendable appendable24 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable25 = annotatingMarkupParser21.new CountingAppendable(appendable24);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable26 = annotatingMarkupParser16.new CountingAppendable((java.lang.Appendable) countingAppendable25);
        java.util.List<java.lang.String> strList27 = annotatingMarkupParser16.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel29 = annotatingMarkupParser16.makeWikiModel("opennlp / en - sent . bin");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser30 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList31 = annotatingMarkupParser30.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList32 = annotatingMarkupParser30.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel34 = annotatingMarkupParser30.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel36 = annotatingMarkupParser30.makeWikiModel("hi!\n");
        java.util.List<pignlproc.markup.Annotation> annotationList37 = annotatingMarkupParser30.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser38 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList39 = annotatingMarkupParser38.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList40 = annotatingMarkupParser38.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList41 = annotatingMarkupParser38.getParagraphAnnotations();
        java.util.List<java.lang.String> strList42 = annotatingMarkupParser38.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList43 = annotatingMarkupParser38.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser44 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList45 = annotatingMarkupParser44.getHeaderAnnotations();
        java.util.List<java.lang.String> strList46 = annotatingMarkupParser44.getParagraphs();
        java.lang.Appendable appendable47 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable48 = annotatingMarkupParser44.new CountingAppendable(appendable47);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable49 = annotatingMarkupParser38.new CountingAppendable((java.lang.Appendable) countingAppendable48);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser50 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList51 = annotatingMarkupParser50.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList52 = annotatingMarkupParser50.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel54 = annotatingMarkupParser50.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel56 = annotatingMarkupParser50.makeWikiModel("hi!\n");
        annotatingMarkupParser16.nodesToText(annotationList37, (java.lang.Appendable) countingAppendable49, (info.bliki.wiki.model.IWikiModel) wikiModel56);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable58 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable49);
        countingAppendable49.currentPosition = 35;
        countingAppendable49.currentPosition = 32;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable66 = countingAppendable49.append((java.lang.CharSequence) "\"\"\"http://http://hi! .wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin\"\"\"", (int) (short) 100, 52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!\n\n" + "'", str13, "hi!\n\n");
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(annotationList15);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(annotationList19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(wikiModel29);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(annotationList32);
        org.junit.Assert.assertNotNull(wikiModel34);
        org.junit.Assert.assertNotNull(wikiModel36);
        org.junit.Assert.assertNotNull(annotationList37);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(annotationList40);
        org.junit.Assert.assertNotNull(annotationList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(annotationList43);
        org.junit.Assert.assertNotNull(annotationList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(annotationList52);
        org.junit.Assert.assertNotNull(wikiModel54);
        org.junit.Assert.assertNotNull(wikiModel56);
    }

    @Test
    public void test4045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4045");
        java.lang.String str1 = pignlproc.evaluation.SafeTsvText.escape("http://http://\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/href\".wikipedia.org/wiki/%22_opennlp_%2F_en_-_sent_._bin_%22.wikipedia.org/wiki/http%3A%2F%2F%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22.wikipedia.org%2Fwiki%2F%2522%2522%2522opennlp_%252F_en_-_sent_._bin%2522%2522%2522");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"http://http://\"\"http://\"\"\"\"opennlp / en - sent . bin\"\"\"\".wikipedia.org/wiki/href\"\".wikipedia.org/wiki/%22_opennlp_%2F_en_-_sent_._bin_%22.wikipedia.org/wiki/http%3A%2F%2F%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22.wikipedia.org%2Fwiki%2F%2522%2522%2522opennlp_%252F_en_-_sent_._bin%2522%2522%2522\"" + "'", str1, "\"http://http://\"\"http://\"\"\"\"opennlp / en - sent . bin\"\"\"\".wikipedia.org/wiki/href\"\".wikipedia.org/wiki/%22_opennlp_%2F_en_-_sent_._bin_%22.wikipedia.org/wiki/http%3A%2F%2F%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22.wikipedia.org%2Fwiki%2F%2522%2522%2522opennlp_%252F_en_-_sent_._bin%2522%2522%2522\"");
    }

    @Test
    public void test4046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4046");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("\" opennlp / en - sent . bin \"");
    }

    @Test
    public void test4047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4047");
        pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract((int) '4');
        org.apache.pig.data.Tuple tuple2 = null;
        java.lang.Boolean boolean3 = checkAbstract1.exec(tuple2);
        org.junit.Assert.assertEquals("'" + boolean3 + "' != '" + false + "'", boolean3, false);
    }

    @Test
    public void test4048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4048");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        sentencesWithLink0.setPigLogger(pigLogger2);
        java.lang.reflect.Type type4 = sentencesWithLink0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = sentencesWithLink0.getPigLogger();
        org.apache.commons.logging.Log log6 = sentencesWithLink0.getLogger();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList7 = sentencesWithLink0.getArgToFuncMapping();
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNull(pigLogger5);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNull(funcSpecList7);
    }

    @Test
    public void test4049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4049");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22\n.wikipedia.org/wiki/%22hi%21%22", "http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22\n");
    }

    @Test
    public void test4050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4050");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://.wikipedia.org/wiki/hi%21", job4);
        org.apache.hadoop.mapreduce.Job job7 = null;
        java.lang.String[] strArray8 = uriStringLiteralNTriplesLoader2.getPartitionKeys("wikiobject", job7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceSchema resourceSchema11 = uriStringLiteralNTriplesLoader2.getSchema("title", job10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple12 = uriStringLiteralNTriplesLoader2.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNull(strArray8);
        org.junit.Assert.assertNotNull(resourceSchema11);
    }

    @Test
    public void test4051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4051");
        pignlproc.evaluation.ConcatTextBag concatTextBag0 = new pignlproc.evaluation.ConcatTextBag();
        org.apache.pig.data.Tuple tuple1 = null;
        java.lang.String str2 = concatTextBag0.exec(tuple1);
        java.lang.Enum enum4 = null;
        concatTextBag0.warn("href", enum4);
        org.apache.pig.data.Tuple tuple6 = null;
        java.lang.String str7 = concatTextBag0.exec(tuple6);
        java.lang.Enum enum9 = null;
        concatTextBag0.warn("\"\"", enum9);
        java.lang.Enum enum12 = null;
        concatTextBag0.warn("\"opennlp / en - sent . bin\"\n", enum12);
        pignlproc.evaluation.SafeTsvText safeTsvText14 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger15 = null;
        safeTsvText14.setPigLogger(pigLogger15);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText17 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable18 = mergeAsOpenNLPAnnotatedText17.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract19 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = checkAbstract19.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = mergeAsOpenNLPAnnotatedText17.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = safeTsvText14.outputSchema(schema22);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText24 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray26 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList27 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList27, spanArray26);
        java.lang.String str29 = mergeAsOpenNLPAnnotatedText24.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList27);
        pignlproc.evaluation.ConcatTextBag concatTextBag31 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract32 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum34 = null;
        checkAbstract32.warn("http://.wikipedia.org/wiki/hi%21", enum34);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger36 = null;
        checkAbstract32.setPigLogger(pigLogger36);
        checkAbstract32.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText39 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger40 = null;
        safeTsvText39.setPigLogger(pigLogger40);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText42 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable43 = mergeAsOpenNLPAnnotatedText42.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract44 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = checkAbstract44.outputSchema(schema45);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = mergeAsOpenNLPAnnotatedText42.outputSchema(schema45);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = safeTsvText39.outputSchema(schema47);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = checkAbstract32.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = concatTextBag31.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = mergeAsOpenNLPAnnotatedText24.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = safeTsvText14.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = concatTextBag0.outputSchema(schema52);
        concatTextBag0.progress();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(pigProgressable18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(spanArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "href" + "'", str29, "href");
        org.junit.Assert.assertNull(pigProgressable43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test4052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4052");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("hi !", "opennlp/en-sent.bin", "wikiobject");
        org.apache.pig.Expression expression4 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression4);
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = uriUriNTriplesLoader3.getSchema("\"\"\n", job7);
        org.apache.pig.Expression expression9 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression9);
        org.apache.hadoop.mapreduce.Job job12 = null;
        org.apache.pig.ResourceSchema resourceSchema13 = uriUriNTriplesLoader3.getSchema("", job12);
        org.apache.hadoop.mapreduce.Job job15 = null;
        org.apache.pig.ResourceSchema resourceSchema16 = uriUriNTriplesLoader3.getSchema("\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\"", job15);
        org.junit.Assert.assertNotNull(resourceSchema8);
        org.junit.Assert.assertNotNull(resourceSchema13);
        org.junit.Assert.assertNotNull(resourceSchema16);
    }

    @Test
    public void test4053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4053");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("", "\"\"\n", "\"\"");
        uriUriNTriplesStorer3.setStoreFuncUDFContextSignature("http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader7 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job9 = null;
        org.apache.pig.ResourceSchema resourceSchema10 = parsingWikipediaLoader7.getSchema("title", job9);
        org.apache.hadoop.mapreduce.Job job12 = null;
        java.lang.String[] strArray13 = parsingWikipediaLoader7.getPartitionKeys("wikiobject", job12);
        parsingWikipediaLoader7.setUDFContextSignature("http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22");
        org.apache.hadoop.mapreduce.InputFormat inputFormat16 = parsingWikipediaLoader7.getInputFormat();
        org.apache.hadoop.mapreduce.Job job18 = null;
        org.apache.pig.ResourceSchema resourceSchema19 = parsingWikipediaLoader7.getSchema("hi !", job18);
        uriUriNTriplesStorer3.checkSchema(resourceSchema19);
        org.junit.Assert.assertNotNull(resourceSchema10);
        org.junit.Assert.assertNull(strArray13);
        org.junit.Assert.assertNotNull(inputFormat16);
        org.junit.Assert.assertNotNull(resourceSchema19);
    }

    @Test
    public void test4054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4054");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader3 = new pignlproc.storage.ParsingWikipediaLoader("hi !");
        org.apache.pig.Expression expression4 = null;
        parsingWikipediaLoader3.setPartitionFilter(expression4);
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceStatistics resourceStatistics8 = parsingWikipediaLoader3.getStatistics("hi!\n", job7);
        org.apache.hadoop.mapreduce.InputFormat inputFormat9 = parsingWikipediaLoader3.getInputFormat();
        org.apache.hadoop.mapreduce.RecordReader recordReader10 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit11 = null;
        parsingWikipediaLoader3.prepareToRead(recordReader10, pigSplit11);
        org.apache.hadoop.mapreduce.Job job14 = null;
        org.apache.pig.ResourceSchema resourceSchema15 = parsingWikipediaLoader3.getSchema("wikiobject", job14);
        uriStringLiteralNTriplesStorer1.checkSchema(resourceSchema15);
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader20 = new pignlproc.storage.UriUriNTriplesLoader("hi !", "opennlp/en-sent.bin", "wikiobject");
        org.apache.pig.Expression expression21 = null;
        uriUriNTriplesLoader20.setPartitionFilter(expression21);
        org.apache.hadoop.mapreduce.Job job24 = null;
        org.apache.pig.ResourceSchema resourceSchema25 = uriUriNTriplesLoader20.getSchema("\"\"\n", job24);
        org.apache.pig.Expression expression26 = null;
        uriUriNTriplesLoader20.setPartitionFilter(expression26);
        org.apache.hadoop.mapreduce.InputFormat inputFormat28 = uriUriNTriplesLoader20.getInputFormat();
        org.apache.hadoop.mapreduce.Job job30 = null;
        org.apache.pig.ResourceSchema resourceSchema31 = uriUriNTriplesLoader20.getSchema("http://\"title\".wikipedia.org/wiki/%22hi%21%22", job30);
        uriStringLiteralNTriplesStorer1.checkSchema(resourceSchema31);
        uriStringLiteralNTriplesStorer1.setStoreFuncUDFContextSignature("http : // . wikipedia . org / wiki / hi % 21");
        org.junit.Assert.assertNull(resourceStatistics8);
        org.junit.Assert.assertNotNull(inputFormat9);
        org.junit.Assert.assertNotNull(resourceSchema15);
        org.junit.Assert.assertNotNull(resourceSchema25);
        org.junit.Assert.assertNotNull(inputFormat28);
        org.junit.Assert.assertNotNull(resourceSchema31);
    }

    @Test
    public void test4055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4055");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("http : // \"\"\" hi ! \"\" \" . wikipedia . org / wiki /", "http://\"titlehref\".wikipedia.org/wiki/http%3A%2F%2F%22%22%22%22%22%22%22_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_%22%22%22%22_%22%22%22.wikipedia.org%2Fwiki%2Fhref");
    }

    @Test
    public void test4056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4056");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("http://\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\".wikipedia.org/wiki/%22%22%22opennlp_%2F_en_-_sent_._bin%22%22%22", "http://http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21.wikipedia.org/wiki/%22http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521_.wikipedia.org%2Fwiki%2F%2522title%2522href%22\n\n");
    }

    @Test
    public void test4057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4057");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag1 = new pignlproc.evaluation.AggregateTextBag((int) (byte) 0);
        java.lang.reflect.Type type2 = aggregateTextBag1.getReturnType();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = aggregateTextBag1.getArgToFuncMapping();
        java.lang.Enum enum5 = null;
        aggregateTextBag1.warn("http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href", enum5);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNull(funcSpecList3);
    }

    @Test
    public void test4058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4058");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPaths(job0, "http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4059");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = null;
        sentencesWithLink0.setReporter(pigProgressable7);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList9 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.data.Tuple tuple10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.DataBag dataBag11 = sentencesWithLink0.exec(tuple10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(funcSpecList6);
        org.junit.Assert.assertNull(funcSpecList9);
    }

    @Test
    public void test4060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4060");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("\"\"", "\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/href\"");
        org.apache.hadoop.fs.Path path4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = uriStringLiteralNTriplesLoader2.relativeToAbsolutePath("\"titlehref\"", path4);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"titlehref\" curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4061");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = sentencesWithLink0.getReporter();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList9 = sentencesWithLink0.getArgToFuncMapping();
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(pigProgressable6);
        org.junit.Assert.assertNull(pigProgressable7);
        org.junit.Assert.assertNull(pigProgressable8);
        org.junit.Assert.assertNull(funcSpecList9);
    }

    @Test
    public void test4062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4062");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        java.util.List<java.lang.String> strList5 = annotatingMarkupParser0.getParagraphs();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser0.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser0.getParagraphAnnotations();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(annotationList7);
    }

    @Test
    public void test4063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4063");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://\"title\"\n.wikipedia.org/wiki/");
    }

    @Test
    public void test4064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4064");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) 'a', (-1), "http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522", "http://http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href.wikipedia.org/wiki/http%3A%2F%2F%22opennlp_%2F_en_-_sent_._bin%22.wikipedia.org%2Fwiki%2Fhrefwikiobject%22%22%22http%3A%2F%2Fhi%21.wikipedia.org%2Fwiki%2F%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22wikiobject%22hi%21%22%0Awikiobject%0Awikiobjectopennlp%2Fen-sent.binwikiobjecthttp%3A%2F%2Fhi%21%0A.wikipedia.org%2Fwiki%2Fopennlp_%252F_en_-_sent_._binwikiobjecthttp%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521wikiobjecthttp%3A%2F%2F%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22.wikipedia.org%2Fwiki%2F%2522%2522%2522http%253A%252F%252Fhi_%2521_.wikipedia.org%252Fwiki%252Fhttp%25253A%25252F%25252Fhttp%25253A%25252F%25252F.wikipedia.org%25252Fwiki%25252Fhi%25252521%25250A.wikipedia.org%25252Fwiki%25252F%25252522title%25252522%2522%2522%2522wikiobject%22opennlp_%2F_en_-_sent_._bin%22wikiobject%22%22");
        int int5 = annotation4.begin;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 97 + "'", int5 == 97);
    }

    @Test
    public void test4065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4065");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) ' ', (int) (short) 0, "\"\"\"opennlp / en - sent . bin\"\" \"", "http://.wikipedia.org/wiki/");
        int int5 = annotation4.begin;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 32 + "'", int5 == 32);
    }

    @Test
    public void test4066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4066");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract3 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum5 = null;
        checkAbstract3.warn("http://.wikipedia.org/wiki/hi%21", enum5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        checkAbstract3.setPigLogger(pigLogger7);
        checkAbstract3.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText10 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        safeTsvText10.setPigLogger(pigLogger11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = mergeAsOpenNLPAnnotatedText13.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract15.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = safeTsvText10.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract3.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = concatTextBag2.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = sentencesWithLink0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = null;
        sentencesWithLink0.setPigLogger(pigLogger23);
        java.lang.reflect.Type type25 = sentencesWithLink0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable26 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger27 = sentencesWithLink0.getPigLogger();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass28 = pigLogger27.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigProgressable14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNull(pigProgressable26);
        org.junit.Assert.assertNull(pigLogger27);
    }

    @Test
    public void test4067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4067");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str2 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.Annotation annotation7 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation12 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int13 = annotation12.end;
        int int14 = annotation12.begin;
        pignlproc.markup.Annotation[] annotationArray15 = new pignlproc.markup.Annotation[] { annotation7, annotation12 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList16 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList16, annotationArray15);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser18 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList19 = annotatingMarkupParser18.getHeaders();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser18.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser18.getHeaderAnnotations();
        java.lang.String str22 = annotatingMarkupParser18.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser23 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList24 = annotatingMarkupParser23.getHeaders();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser23.getHeaders();
        java.lang.Appendable appendable26 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable27 = annotatingMarkupParser23.new CountingAppendable(appendable26);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable28 = annotatingMarkupParser18.new CountingAppendable((java.lang.Appendable) countingAppendable27);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser29 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList30 = annotatingMarkupParser29.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel32 = annotatingMarkupParser29.makeWikiModel("title");
        annotatingMarkupParser0.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList16, (java.lang.Appendable) countingAppendable27, (info.bliki.wiki.model.IWikiModel) wikiModel32);
        java.util.List<pignlproc.markup.Annotation> annotationList34 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.lang.String str36 = annotatingMarkupParser0.parse("\"hi!\"");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser37 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList38 = annotatingMarkupParser37.getHeaders();
        java.util.List<java.lang.String> strList39 = annotatingMarkupParser37.getHeaders();
        java.util.List<java.lang.String> strList40 = annotatingMarkupParser37.getHeaders();
        java.util.List<java.lang.String> strList41 = annotatingMarkupParser37.getHeaders();
        java.util.List<java.lang.String> strList42 = annotatingMarkupParser37.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList43 = null;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser44 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList45 = annotatingMarkupParser44.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList46 = annotatingMarkupParser44.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList47 = annotatingMarkupParser44.getParagraphAnnotations();
        java.util.List<java.lang.String> strList48 = annotatingMarkupParser44.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList49 = annotatingMarkupParser44.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser50 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList51 = annotatingMarkupParser50.getHeaderAnnotations();
        java.util.List<java.lang.String> strList52 = annotatingMarkupParser50.getParagraphs();
        java.lang.Appendable appendable53 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable54 = annotatingMarkupParser50.new CountingAppendable(appendable53);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable55 = annotatingMarkupParser44.new CountingAppendable((java.lang.Appendable) countingAppendable54);
        countingAppendable54.currentPosition = 35;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser58 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList59 = annotatingMarkupParser58.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel61 = annotatingMarkupParser58.makeWikiModel("title");
        java.util.List<pignlproc.markup.Annotation> annotationList62 = annotatingMarkupParser58.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList63 = annotatingMarkupParser58.getParagraphAnnotations();
        boolean boolean64 = annotatingMarkupParser58.noLinks();
        info.bliki.wiki.model.WikiModel wikiModel66 = annotatingMarkupParser58.makeWikiModel("\" title \"");
        annotatingMarkupParser37.nodesToText(annotationList43, (java.lang.Appendable) countingAppendable54, (info.bliki.wiki.model.IWikiModel) wikiModel66);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable68 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable54);
        countingAppendable68.currentPosition = (short) 10;
        int int71 = countingAppendable68.currentPosition;
        int int72 = countingAppendable68.currentPosition;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable76 = countingAppendable68.append((java.lang.CharSequence) "http://\" title \".wikipedia.org/wiki/", (int) ' ', 35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(annotationArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(annotationList30);
        org.junit.Assert.assertNotNull(wikiModel32);
        org.junit.Assert.assertNotNull(annotationList34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"hi!\"\n" + "'", str36, "\"hi!\"\n");
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(annotationList46);
        org.junit.Assert.assertNotNull(annotationList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(annotationList49);
        org.junit.Assert.assertNotNull(annotationList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNotNull(annotationList59);
        org.junit.Assert.assertNotNull(wikiModel61);
        org.junit.Assert.assertNotNull(annotationList62);
        org.junit.Assert.assertNotNull(annotationList63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wikiModel66);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 10 + "'", int71 == 10);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 10 + "'", int72 == 10);
    }

    @Test
    public void test4068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4068");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22");
        org.apache.pig.data.Tuple tuple2 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer1.putNext(tuple2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4069");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("", "hi !\n\n", "http://\"\"\"hi!\"\" \".wikipedia.org/wiki/");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat4 = uriStringLiteralNTriplesStorer3.getOutputFormat();
        org.apache.pig.data.Tuple tuple5 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer3.putNext(tuple5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat4);
    }

    @Test
    public void test4070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4070");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        sentencesWithLink0.finish();
        sentencesWithLink0.finish();
        org.apache.commons.logging.Log log5 = sentencesWithLink0.getLogger();
        java.lang.Class<?> wildcardClass6 = log5.getClass();
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test4071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4071");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag1 = new pignlproc.evaluation.AggregateTextBag((int) ' ');
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable2 = null;
        aggregateTextBag1.setReporter(pigProgressable2);
    }

    @Test
    public void test4072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4072");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.lang.Appendable appendable3 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable4 = annotatingMarkupParser0.new CountingAppendable(appendable3);
        java.lang.String str5 = annotatingMarkupParser0.getRedirect();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test4073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4073");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("\"hi! \"\n", true);
        concatTextBag2.progress();
        org.apache.pig.data.Tuple tuple4 = null;
        java.lang.String str5 = concatTextBag2.exec(tuple4);
        java.lang.Enum enum7 = null;
        concatTextBag2.warn("\"opennlp / en - sent . bin\"", enum7);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test4074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4074");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("hi!");
        org.apache.pig.data.Tuple tuple2 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer1.putNext(tuple2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4075");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("http://http://hi!\n.wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin");
        mergeAsOpenNLPAnnotatedText1.finish();
    }

    @Test
    public void test4076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4076");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.RecordReader recordReader2 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit3 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader2, pigSplit3);
        parsingWikipediaLoader1.setUDFContextSignature("hi!");
        org.apache.hadoop.mapreduce.InputFormat inputFormat7 = parsingWikipediaLoader1.getInputFormat();
        org.apache.hadoop.mapreduce.Job job9 = null;
        org.apache.pig.ResourceSchema resourceSchema10 = parsingWikipediaLoader1.getSchema("\"hi!\"", job9);
        org.apache.hadoop.mapreduce.RecordReader recordReader11 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit12 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader11, pigSplit12);
        org.junit.Assert.assertNotNull(inputFormat7);
        org.junit.Assert.assertNotNull(resourceSchema10);
    }

    @Test
    public void test4077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4077");
        org.apache.hadoop.mapreduce.Job job1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.StoreFunc.cleanupOnFailureImpl("http://\"http://.wikipedia.org/wiki/hi%21\"\n\n.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%0A", job1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4078");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = sentencesWithLink0.getPigLogger();
        java.lang.Enum enum3 = null;
        sentencesWithLink0.warn("opennlp / en - sent . bin", enum3);
        java.lang.reflect.Type type5 = sentencesWithLink0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        sentencesWithLink0.setPigLogger(pigLogger6);
        org.junit.Assert.assertNull(pigLogger1);
        org.junit.Assert.assertNotNull(type5);
    }

    @Test
    public void test4079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4079");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("\"\"\"hi!\"\" \"");
        org.apache.hadoop.mapreduce.RecordWriter recordWriter2 = null;
        uriUriNTriplesStorer1.prepareToWrite(recordWriter2);
        org.apache.hadoop.fs.Path path5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = uriUriNTriplesStorer1.relToAbsPathForStoreLocation("\"\"\"title\"\" \"hrefhref", path5);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"\"\"title\"\" \"hrefhref curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4080");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("title\n");
    }

    @Test
    public void test4081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4081");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        pignlproc.evaluation.CheckAbstract checkAbstract2 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum4 = null;
        checkAbstract2.warn("http://.wikipedia.org/wiki/hi%21", enum4);
        java.lang.Enum enum7 = null;
        checkAbstract2.warn("hi !", enum7);
        pignlproc.evaluation.NoLoopInPath noLoopInPath9 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText10 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        safeTsvText10.setPigLogger(pigLogger11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = mergeAsOpenNLPAnnotatedText13.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract15.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = safeTsvText10.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = noLoopInPath9.outputSchema(schema18);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag21 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText22 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = null;
        safeTsvText22.setPigLogger(pigLogger23);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText25 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable26 = mergeAsOpenNLPAnnotatedText25.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract27 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = checkAbstract27.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = mergeAsOpenNLPAnnotatedText25.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = safeTsvText22.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = aggregateTextBag21.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = noLoopInPath9.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = checkAbstract2.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = sentencesWithLink0.outputSchema(schema34);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger36 = null;
        sentencesWithLink0.setPigLogger(pigLogger36);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger38 = sentencesWithLink0.getPigLogger();
        boolean boolean39 = sentencesWithLink0.isAsynchronous();
        sentencesWithLink0.finish();
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNull(pigProgressable14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(pigProgressable26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(pigLogger38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test4082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4082");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("hi !");
        org.apache.pig.LoadCaster loadCaster2 = parsingWikipediaLoader1.getLoadCaster();
        parsingWikipediaLoader1.setUDFContextSignature("\"\"\"opennlp / en - sent . bin\"\"\"");
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceStatistics resourceStatistics7 = parsingWikipediaLoader1.getStatistics("", job6);
        org.junit.Assert.assertNotNull(loadCaster2);
        org.junit.Assert.assertNull(resourceStatistics7);
    }

    @Test
    public void test4083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4083");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("title", false);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger3 = null;
        concatTextBag2.setPigLogger(pigLogger3);
        java.lang.Enum enum6 = null;
        concatTextBag2.warn("\"opennlp / en - sent . bin\"", enum6);
        java.lang.reflect.Type type8 = concatTextBag2.getReturnType();
        org.apache.commons.logging.Log log9 = concatTextBag2.getLogger();
        org.apache.pig.data.Tuple tuple10 = null;
        java.lang.String str11 = concatTextBag2.exec(tuple10);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test4084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4084");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("hi!");
        java.lang.String str2 = annotatingMarkupParser1.getRedirect();
        info.bliki.htmlcleaner.TagNode tagNode3 = null;
        info.bliki.wiki.model.ImageFormat imageFormat4 = null;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList6 = annotatingMarkupParser5.getHeaderAnnotations();
        java.lang.String str7 = annotatingMarkupParser5.getRedirect();
        pignlproc.markup.Annotation annotation12 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation17 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int18 = annotation17.end;
        int int19 = annotation17.begin;
        pignlproc.markup.Annotation[] annotationArray20 = new pignlproc.markup.Annotation[] { annotation12, annotation17 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList21 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList21, annotationArray20);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser23 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList24 = annotatingMarkupParser23.getHeaders();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser23.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList26 = annotatingMarkupParser23.getHeaderAnnotations();
        java.lang.String str27 = annotatingMarkupParser23.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser28 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList29 = annotatingMarkupParser28.getHeaders();
        java.util.List<java.lang.String> strList30 = annotatingMarkupParser28.getHeaders();
        java.lang.Appendable appendable31 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable32 = annotatingMarkupParser28.new CountingAppendable(appendable31);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable33 = annotatingMarkupParser23.new CountingAppendable((java.lang.Appendable) countingAppendable32);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser34 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList35 = annotatingMarkupParser34.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel37 = annotatingMarkupParser34.makeWikiModel("title");
        annotatingMarkupParser5.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList21, (java.lang.Appendable) countingAppendable32, (info.bliki.wiki.model.IWikiModel) wikiModel37);
        java.util.List<pignlproc.markup.Annotation> annotationList39 = annotatingMarkupParser5.getWikiLinkAnnotations();
        java.lang.String str41 = annotatingMarkupParser5.parse("\"hi!\"");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser42 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList43 = annotatingMarkupParser42.getHeaders();
        java.util.List<java.lang.String> strList44 = annotatingMarkupParser42.getHeaders();
        java.util.List<java.lang.String> strList45 = annotatingMarkupParser42.getHeaders();
        java.util.List<java.lang.String> strList46 = annotatingMarkupParser42.getHeaders();
        java.util.List<java.lang.String> strList47 = annotatingMarkupParser42.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList48 = null;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser49 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList50 = annotatingMarkupParser49.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList51 = annotatingMarkupParser49.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList52 = annotatingMarkupParser49.getParagraphAnnotations();
        java.util.List<java.lang.String> strList53 = annotatingMarkupParser49.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList54 = annotatingMarkupParser49.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser55 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList56 = annotatingMarkupParser55.getHeaderAnnotations();
        java.util.List<java.lang.String> strList57 = annotatingMarkupParser55.getParagraphs();
        java.lang.Appendable appendable58 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable59 = annotatingMarkupParser55.new CountingAppendable(appendable58);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable60 = annotatingMarkupParser49.new CountingAppendable((java.lang.Appendable) countingAppendable59);
        countingAppendable59.currentPosition = 35;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser63 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList64 = annotatingMarkupParser63.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel66 = annotatingMarkupParser63.makeWikiModel("title");
        java.util.List<pignlproc.markup.Annotation> annotationList67 = annotatingMarkupParser63.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList68 = annotatingMarkupParser63.getParagraphAnnotations();
        boolean boolean69 = annotatingMarkupParser63.noLinks();
        info.bliki.wiki.model.WikiModel wikiModel71 = annotatingMarkupParser63.makeWikiModel("\" title \"");
        annotatingMarkupParser42.nodesToText(annotationList48, (java.lang.Appendable) countingAppendable59, (info.bliki.wiki.model.IWikiModel) wikiModel71);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable73 = annotatingMarkupParser5.new CountingAppendable((java.lang.Appendable) countingAppendable59);
        countingAppendable73.currentPosition = (short) 10;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser77 = new pignlproc.markup.AnnotatingMarkupParser("\" hi ! \"");
        info.bliki.wiki.model.WikiModel wikiModel79 = annotatingMarkupParser77.makeWikiModel("\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"");
        // The following exception was thrown during execution in test generation
        try {
            annotatingMarkupParser1.imageNodeToText(tagNode3, imageFormat4, (java.lang.Appendable) countingAppendable73, (info.bliki.wiki.model.IWikiModel) wikiModel79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(annotationList6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(annotationList26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(annotationList35);
        org.junit.Assert.assertNotNull(wikiModel37);
        org.junit.Assert.assertNotNull(annotationList39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\"hi!\"\n" + "'", str41, "\"hi!\"\n");
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(annotationList51);
        org.junit.Assert.assertNotNull(annotationList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(annotationList54);
        org.junit.Assert.assertNotNull(annotationList56);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNotNull(annotationList64);
        org.junit.Assert.assertNotNull(wikiModel66);
        org.junit.Assert.assertNotNull(annotationList67);
        org.junit.Assert.assertNotNull(annotationList68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wikiModel71);
        org.junit.Assert.assertNotNull(wikiModel79);
    }

    @Test
    public void test4085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4085");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("http://hi!\n.wikipedia.org/wiki/%22_title_%22");
        java.lang.Enum enum3 = null;
        concatTextBag1.warn("http://.wikipedia.org/wiki/hi%21", enum3);
        java.lang.Enum enum6 = null;
        concatTextBag1.warn("hi !\n\n", enum6);
        java.lang.reflect.Type type8 = concatTextBag1.getReturnType();
        org.apache.commons.logging.Log log9 = concatTextBag1.getLogger();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser10 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList11 = annotatingMarkupParser10.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser10.makeWikiModel("title");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser14.getHeaders();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser14.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList17 = annotatingMarkupParser14.getHeaderAnnotations();
        java.lang.String str18 = annotatingMarkupParser14.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser19.getHeaders();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser19.getHeaders();
        java.lang.Appendable appendable22 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable23 = annotatingMarkupParser19.new CountingAppendable(appendable22);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable24 = annotatingMarkupParser14.new CountingAppendable((java.lang.Appendable) countingAppendable23);
        int int25 = countingAppendable23.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable26 = annotatingMarkupParser10.new CountingAppendable((java.lang.Appendable) countingAppendable23);
        java.util.List<java.lang.String> strList27 = annotatingMarkupParser10.getParagraphs();
        java.util.List<java.lang.String> strList28 = annotatingMarkupParser10.getHeaders();
        java.util.List<java.lang.String> strList29 = annotatingMarkupParser10.getParagraphs();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<opennlp.tools.util.Span> spanList30 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) concatTextBag1, (java.lang.Object) annotatingMarkupParser10);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: pignlproc.evaluation.ConcatTextBag cannot be cast to java.lang.Integer");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(annotationList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(annotationList17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(strList29);
    }

    @Test
    public void test4086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4086");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"", "http://\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\".wikipedia.org/wiki/%22%22%22opennlp_%2F_en_-_sent_._bin%22%22%22", "\"\"\"http://.wikipedia.org/wiki/hi%21\"\" \"");
        org.apache.hadoop.mapreduce.RecordWriter recordWriter4 = null;
        uriStringLiteralNTriplesStorer3.prepareToWrite(recordWriter4);
        org.apache.pig.data.Tuple tuple6 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer3.putNext(tuple6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4087");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21href", "http://http : // \" hi ! \" . wikipedia . org / wiki / % 22 hi % 21 _ % 22.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%0A", "hi !\n");
    }

    @Test
    public void test4088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4088");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation(0, (int) (short) 1, "\n", "http://http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href.wikipedia.org/wiki/http%3A%2F%2F%22opennlp_%2F_en_-_sent_._bin%22.wikipedia.org%2Fwiki%2Fhrefwikiobject%22%22%22http%3A%2F%2Fhi%21.wikipedia.org%2Fwiki%2F%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22wikiobject%22hi%21%22%0Awikiobject%0Awikiobjectopennlp%2Fen-sent.binwikiobjecthttp%3A%2F%2Fhi%21%0A.wikipedia.org%2Fwiki%2Fopennlp_%252F_en_-_sent_._binwikiobjecthttp%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521wikiobjecthttp%3A%2F%2F%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22.wikipedia.org%2Fwiki%2F%2522%2522%2522http%253A%252F%252Fhi_%2521_.wikipedia.org%252Fwiki%252Fhttp%25253A%25252F%25252Fhttp%25253A%25252F%25252F.wikipedia.org%25252Fwiki%25252Fhi%25252521%25250A.wikipedia.org%25252Fwiki%25252F%25252522title%25252522%2522%2522%2522wikiobject%22opennlp_%2F_en_-_sent_._bin%22wikiobject%22%22");
        int int5 = annotation4.end;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    }

    @Test
    public void test4089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4089");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser14.getHeaders();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser14.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList17 = annotatingMarkupParser14.getHeaderAnnotations();
        java.lang.String str18 = annotatingMarkupParser14.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser19.getHeaders();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser19.getHeaders();
        java.lang.Appendable appendable22 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable23 = annotatingMarkupParser19.new CountingAppendable(appendable22);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable24 = annotatingMarkupParser14.new CountingAppendable((java.lang.Appendable) countingAppendable23);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser25 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser25.getHeaders();
        java.util.List<java.lang.String> strList27 = annotatingMarkupParser25.getHeaders();
        java.lang.Appendable appendable28 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable29 = annotatingMarkupParser25.new CountingAppendable(appendable28);
        countingAppendable29.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable32 = annotatingMarkupParser14.new CountingAppendable((java.lang.Appendable) countingAppendable29);
        countingAppendable32.currentPosition = (byte) -1;
        countingAppendable32.currentPosition = 100;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable37 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable32);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable41 = countingAppendable32.append((java.lang.CharSequence) "\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"", (int) (short) 1, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(annotationList17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strList27);
    }

    @Test
    public void test4090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4090");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel3 = annotatingMarkupParser0.makeWikiModel("title");
        java.lang.String str5 = annotatingMarkupParser0.parse("hi!");
        java.util.List<pignlproc.markup.Annotation> annotationList6 = annotatingMarkupParser0.getHeaderAnnotations();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser0.getHeaders();
        java.lang.String str8 = annotatingMarkupParser0.getRedirect();
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(wikiModel3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!\n" + "'", str5, "hi!\n");
        org.junit.Assert.assertNotNull(annotationList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test4091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4091");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPaths(job0, "\" http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / % 22 title % 22 href \"");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Relative path in absolute URI: \" http :%20/%20http%20:%20/%20.%20wikipedia%20.%20org%20/%20wiki%20/%20hi%20%25%2021%20.%20wikipedia%20.%20org%20/%20wiki%20/%20%25%2022%20title%20%25%2022%20href%20%22");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4092");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("title", job3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        java.lang.String[] strArray7 = parsingWikipediaLoader1.getPartitionKeys("wikiobject", job6);
        parsingWikipediaLoader1.setUDFContextSignature("http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22");
        org.apache.hadoop.mapreduce.InputFormat inputFormat10 = parsingWikipediaLoader1.getInputFormat();
        org.apache.hadoop.mapreduce.Job job12 = null;
        org.apache.pig.ResourceSchema resourceSchema13 = parsingWikipediaLoader1.getSchema("hi !", job12);
        org.apache.hadoop.mapreduce.Job job15 = null;
        org.apache.pig.ResourceStatistics resourceStatistics16 = parsingWikipediaLoader1.getStatistics("hi !\n", job15);
        org.apache.hadoop.mapreduce.Job job18 = null;
        org.apache.pig.ResourceStatistics resourceStatistics19 = parsingWikipediaLoader1.getStatistics("http://.wikipedia.org/wiki/hi%21\n", job18);
        org.apache.hadoop.mapreduce.Job job21 = null;
        // The following exception was thrown during execution in test generation
        try {
            parsingWikipediaLoader1.setLocation("http://http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi _ % 21.wikipedia.org/wiki/%22%22%22%22%22%22%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%22%22%22_%22%22%22", job21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNull(strArray7);
        org.junit.Assert.assertNotNull(inputFormat10);
        org.junit.Assert.assertNotNull(resourceSchema13);
        org.junit.Assert.assertNull(resourceStatistics16);
        org.junit.Assert.assertNull(resourceStatistics19);
    }

    @Test
    public void test4093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4093");
        java.lang.String str1 = pignlproc.evaluation.SafeTsvText.escape("\"\"\"http://http://hi! .wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin\"\"\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"\"\"\"\"\"\"http://http://hi! .wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin\"\"\"\"\"\"\"" + "'", str1, "\"\"\"\"\"\"\"http://http://hi! .wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin\"\"\"\"\"\"\"");
    }

    @Test
    public void test4094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4094");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag1 = new pignlproc.evaluation.AggregateTextBag((int) (short) 0);
        java.lang.Enum enum3 = null;
        aggregateTextBag1.warn("href", enum3);
        aggregateTextBag1.progress();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.data.Tuple tuple9 = null;
        java.lang.Boolean boolean10 = checkAbstract6.exec(tuple9);
        java.lang.Enum enum12 = null;
        checkAbstract6.warn("href", enum12);
        checkAbstract6.finish();
        pignlproc.evaluation.SafeTsvText safeTsvText15 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = null;
        safeTsvText15.setPigLogger(pigLogger16);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText18 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = mergeAsOpenNLPAnnotatedText18.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = checkAbstract20.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = mergeAsOpenNLPAnnotatedText18.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = safeTsvText15.outputSchema(schema23);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText25 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray27 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList28 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList28, spanArray27);
        java.lang.String str30 = mergeAsOpenNLPAnnotatedText25.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList28);
        pignlproc.evaluation.ConcatTextBag concatTextBag32 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract33 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum35 = null;
        checkAbstract33.warn("http://.wikipedia.org/wiki/hi%21", enum35);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger37 = null;
        checkAbstract33.setPigLogger(pigLogger37);
        checkAbstract33.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText40 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger41 = null;
        safeTsvText40.setPigLogger(pigLogger41);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText43 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable44 = mergeAsOpenNLPAnnotatedText43.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract45 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = checkAbstract45.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = mergeAsOpenNLPAnnotatedText43.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = safeTsvText40.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = checkAbstract33.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = concatTextBag32.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = mergeAsOpenNLPAnnotatedText25.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = safeTsvText15.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = checkAbstract6.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = aggregateTextBag1.outputSchema(schema54);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList56 = aggregateTextBag1.getArgToFuncMapping();
        aggregateTextBag1.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger58 = null;
        aggregateTextBag1.setPigLogger(pigLogger58);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable60 = null;
        aggregateTextBag1.setReporter(pigProgressable60);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertEquals("'" + boolean10 + "' != '" + false + "'", boolean10, false);
        org.junit.Assert.assertNull(pigProgressable19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(spanArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "href" + "'", str30, "href");
        org.junit.Assert.assertNull(pigProgressable44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(funcSpecList56);
    }

    @Test
    public void test4095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4095");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("http : // http : // hi ! . wikipedia . org / wiki / % 22 _ title _ % 22 . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable2 = noLoopInPath1.getReporter();
        org.junit.Assert.assertNull(pigProgressable2);
    }

    @Test
    public void test4096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4096");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("opennlp/en-sent.bin");
        org.apache.pig.data.Tuple tuple2 = null;
        java.lang.String str3 = concatTextBag1.exec(tuple2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        concatTextBag1.setReporter(pigProgressable4);
        pignlproc.evaluation.ConcatTextBag concatTextBag8 = new pignlproc.evaluation.ConcatTextBag("\"hi!\"", true);
        pignlproc.evaluation.NoLoopInPath noLoopInPath9 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText10 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        safeTsvText10.setPigLogger(pigLogger11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = mergeAsOpenNLPAnnotatedText13.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract15.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = safeTsvText10.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = noLoopInPath9.outputSchema(schema18);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger21 = noLoopInPath9.getPigLogger();
        java.lang.Enum enum23 = null;
        noLoopInPath9.warn("hi !\n\n", enum23);
        java.lang.reflect.Type type25 = noLoopInPath9.getReturnType();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink26 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.NoLoopInPath noLoopInPath27 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText28 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger29 = null;
        safeTsvText28.setPigLogger(pigLogger29);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText31 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable32 = mergeAsOpenNLPAnnotatedText31.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract33 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = checkAbstract33.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = mergeAsOpenNLPAnnotatedText31.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = safeTsvText28.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = noLoopInPath27.outputSchema(schema36);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag39 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText40 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger41 = null;
        safeTsvText40.setPigLogger(pigLogger41);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText43 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable44 = mergeAsOpenNLPAnnotatedText43.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract45 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = checkAbstract45.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = mergeAsOpenNLPAnnotatedText43.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = safeTsvText40.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = aggregateTextBag39.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = noLoopInPath27.outputSchema(schema48);
        pignlproc.evaluation.CheckAbstract checkAbstract52 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum54 = null;
        checkAbstract52.warn("http://.wikipedia.org/wiki/hi%21", enum54);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger56 = null;
        checkAbstract52.setPigLogger(pigLogger56);
        checkAbstract52.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText59 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger60 = null;
        safeTsvText59.setPigLogger(pigLogger60);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText62 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable63 = mergeAsOpenNLPAnnotatedText62.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract64 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = checkAbstract64.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = mergeAsOpenNLPAnnotatedText62.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = safeTsvText59.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = checkAbstract52.outputSchema(schema68);
        org.apache.pig.impl.logicalLayer.schema.Schema schema70 = noLoopInPath27.outputSchema(schema69);
        org.apache.pig.impl.logicalLayer.schema.Schema schema71 = sentencesWithLink26.outputSchema(schema70);
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = noLoopInPath9.outputSchema(schema71);
        org.apache.pig.impl.logicalLayer.schema.Schema schema73 = concatTextBag8.outputSchema(schema71);
        org.apache.pig.impl.logicalLayer.schema.Schema schema74 = concatTextBag1.outputSchema(schema71);
        boolean boolean75 = concatTextBag1.isAsynchronous();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(pigProgressable14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(pigLogger21);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNull(pigProgressable32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(pigProgressable44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(pigProgressable63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test4097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4097");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("title", false);
        concatTextBag2.finish();
        pignlproc.evaluation.SafeTsvText safeTsvText4 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum6 = null;
        safeTsvText4.warn("http://.wikipedia.org/wiki/hi%21", enum6);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = safeTsvText4.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = null;
        safeTsvText4.setReporter(pigProgressable9);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable11 = null;
        safeTsvText4.setReporter(pigProgressable11);
        boolean boolean13 = safeTsvText4.isAsynchronous();
        java.lang.Enum enum15 = null;
        safeTsvText4.warn("\"title\"\n", enum15);
        pignlproc.evaluation.ConcatTextBag concatTextBag18 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract19 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum21 = null;
        checkAbstract19.warn("http://.wikipedia.org/wiki/hi%21", enum21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = null;
        checkAbstract19.setPigLogger(pigLogger23);
        checkAbstract19.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText26 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger27 = null;
        safeTsvText26.setPigLogger(pigLogger27);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText29 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable30 = mergeAsOpenNLPAnnotatedText29.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract31 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = checkAbstract31.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = mergeAsOpenNLPAnnotatedText29.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = safeTsvText26.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = checkAbstract19.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = concatTextBag18.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = safeTsvText4.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = concatTextBag2.outputSchema(schema36);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger40 = null;
        concatTextBag2.setPigLogger(pigLogger40);
        java.lang.reflect.Type type42 = concatTextBag2.getReturnType();
        org.junit.Assert.assertNull(pigProgressable8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(pigProgressable30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(type42);
    }

    @Test
    public void test4098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4098");
        java.lang.String[] strArray1 = org.apache.pig.LoadFunc.getPathStrings("hi !");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test4099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4099");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract3 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum5 = null;
        checkAbstract3.warn("http://.wikipedia.org/wiki/hi%21", enum5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        checkAbstract3.setPigLogger(pigLogger7);
        checkAbstract3.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText10 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        safeTsvText10.setPigLogger(pigLogger11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = mergeAsOpenNLPAnnotatedText13.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract15.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = safeTsvText10.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract3.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = concatTextBag2.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = sentencesWithLink0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = sentencesWithLink0.getPigLogger();
        java.lang.Enum enum25 = null;
        sentencesWithLink0.warn("title", enum25);
        sentencesWithLink0.finish();
        sentencesWithLink0.progress();
        org.apache.pig.data.Tuple tuple29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.DataBag dataBag30 = sentencesWithLink0.exec(tuple29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigProgressable14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(pigLogger23);
    }

    @Test
    public void test4100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4100");
        pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract((int) (byte) 10);
        java.lang.Enum enum3 = null;
        checkAbstract1.warn("http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href", enum3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = null;
        checkAbstract1.setPigLogger(pigLogger5);
    }

    @Test
    public void test4101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4101");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser14.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList16 = annotatingMarkupParser14.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel18 = annotatingMarkupParser14.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel20 = annotatingMarkupParser14.makeWikiModel("hi!\n");
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser14.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser22 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser22.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList24 = annotatingMarkupParser22.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList25 = annotatingMarkupParser22.getParagraphAnnotations();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser22.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList27 = annotatingMarkupParser22.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser28 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList29 = annotatingMarkupParser28.getHeaderAnnotations();
        java.util.List<java.lang.String> strList30 = annotatingMarkupParser28.getParagraphs();
        java.lang.Appendable appendable31 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable32 = annotatingMarkupParser28.new CountingAppendable(appendable31);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable33 = annotatingMarkupParser22.new CountingAppendable((java.lang.Appendable) countingAppendable32);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser34 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList35 = annotatingMarkupParser34.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList36 = annotatingMarkupParser34.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel38 = annotatingMarkupParser34.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel40 = annotatingMarkupParser34.makeWikiModel("hi!\n");
        annotatingMarkupParser0.nodesToText(annotationList21, (java.lang.Appendable) countingAppendable33, (info.bliki.wiki.model.IWikiModel) wikiModel40);
        info.bliki.wiki.model.WikiModel wikiModel43 = annotatingMarkupParser0.makeWikiModel("hi!\n");
        java.util.List<pignlproc.markup.Annotation> annotationList44 = annotatingMarkupParser0.getWikiLinkAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser46 = new pignlproc.markup.AnnotatingMarkupParser("opennlp/en-sent.bin");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser47 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList48 = annotatingMarkupParser47.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList49 = annotatingMarkupParser47.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList50 = annotatingMarkupParser47.getParagraphAnnotations();
        java.util.List<java.lang.String> strList51 = annotatingMarkupParser47.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList52 = annotatingMarkupParser47.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser53 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList54 = annotatingMarkupParser53.getHeaderAnnotations();
        java.util.List<java.lang.String> strList55 = annotatingMarkupParser53.getParagraphs();
        java.lang.Appendable appendable56 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable57 = annotatingMarkupParser53.new CountingAppendable(appendable56);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable58 = annotatingMarkupParser47.new CountingAppendable((java.lang.Appendable) countingAppendable57);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable59 = annotatingMarkupParser46.new CountingAppendable((java.lang.Appendable) countingAppendable58);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable60 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable59);
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(annotationList16);
        org.junit.Assert.assertNotNull(wikiModel18);
        org.junit.Assert.assertNotNull(wikiModel20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(annotationList24);
        org.junit.Assert.assertNotNull(annotationList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList27);
        org.junit.Assert.assertNotNull(annotationList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(annotationList36);
        org.junit.Assert.assertNotNull(wikiModel38);
        org.junit.Assert.assertNotNull(wikiModel40);
        org.junit.Assert.assertNotNull(wikiModel43);
        org.junit.Assert.assertNotNull(annotationList44);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(annotationList49);
        org.junit.Assert.assertNotNull(annotationList50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(annotationList52);
        org.junit.Assert.assertNotNull(annotationList54);
        org.junit.Assert.assertNotNull(strList55);
    }

    @Test
    public void test4102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4102");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        sentencesWithLink0.setPigLogger(pigLogger2);
        java.lang.reflect.Type type4 = sentencesWithLink0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = sentencesWithLink0.getReporter();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = sentencesWithLink0.getArgToFuncMapping();
        boolean boolean7 = sentencesWithLink0.isAsynchronous();
        boolean boolean8 = sentencesWithLink0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger9 = sentencesWithLink0.getPigLogger();
        org.apache.commons.logging.Log log10 = sentencesWithLink0.getLogger();
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNull(funcSpecList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(pigLogger9);
        org.junit.Assert.assertNotNull(log10);
    }

    @Test
    public void test4103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4103");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        java.lang.reflect.Type type4 = sentencesWithLink0.getReturnType();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = sentencesWithLink0.getPigLogger();
        java.lang.Enum enum8 = null;
        sentencesWithLink0.warn("http://\"title\"\n.wikipedia.org/wiki/", enum8);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable10 = null;
        sentencesWithLink0.setReporter(pigProgressable10);
        org.apache.commons.logging.Log log12 = sentencesWithLink0.getLogger();
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(pigLogger6);
        org.junit.Assert.assertNotNull(log12);
    }

    @Test
    public void test4104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4104");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("opennlp/en-sent.bin");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable2 = concatTextBag1.getReporter();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = concatTextBag1.getArgToFuncMapping();
        boolean boolean4 = concatTextBag1.isAsynchronous();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink5 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        sentencesWithLink5.setPigLogger(pigLogger6);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList8 = sentencesWithLink5.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger9 = sentencesWithLink5.getPigLogger();
        boolean boolean10 = sentencesWithLink5.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText11 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable12 = mergeAsOpenNLPAnnotatedText11.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract13 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = checkAbstract13.outputSchema(schema14);
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = mergeAsOpenNLPAnnotatedText11.outputSchema(schema14);
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = sentencesWithLink5.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = concatTextBag1.outputSchema(schema17);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger19 = concatTextBag1.getPigLogger();
        concatTextBag1.progress();
        org.junit.Assert.assertNull(pigProgressable2);
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(funcSpecList8);
        org.junit.Assert.assertNull(pigLogger9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(pigProgressable12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(pigLogger19);
    }

    @Test
    public void test4105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4105");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList5 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList6 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str8 = annotatingMarkupParser0.parse("http://\"\"\"\"\"\"\"\"\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\"\"\"\"\" \"\"\"\"\"\"\".wikipedia.org/wiki/http%3A%2F%2F%22title%22%0A.wikipedia.org%2Fwiki%2F");
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(annotationList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://\"\"\"\"\"\"\"\"\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\"\"\"\"\" \"\"\"\"\"\"\".wikipedia.org/wiki/http%3A%2F%2F%22title%22%0A.wikipedia.org%2Fwiki%2F\n" + "'", str8, "http://\"\"\"\"\"\"\"\"\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\"\"\"\"\" \"\"\"\"\"\"\".wikipedia.org/wiki/http%3A%2F%2F%22title%22%0A.wikipedia.org%2Fwiki%2F\n");
    }

    @Test
    public void test4106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4106");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel3 = annotatingMarkupParser0.makeWikiModel("title");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser4 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList5 = annotatingMarkupParser4.getHeaders();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser4.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser4.getHeaderAnnotations();
        java.lang.String str8 = annotatingMarkupParser4.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser9 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList10 = annotatingMarkupParser9.getHeaders();
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser9.getHeaders();
        java.lang.Appendable appendable12 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable13 = annotatingMarkupParser9.new CountingAppendable(appendable12);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable14 = annotatingMarkupParser4.new CountingAppendable((java.lang.Appendable) countingAppendable13);
        int int15 = countingAppendable13.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable16 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable18 = countingAppendable13.append('#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(wikiModel3);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test4107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4107");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        sentencesWithLink0.finish();
        pignlproc.evaluation.SafeTsvText safeTsvText4 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum6 = null;
        safeTsvText4.warn("http://.wikipedia.org/wiki/hi%21", enum6);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = safeTsvText4.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = null;
        safeTsvText4.setReporter(pigProgressable9);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable11 = null;
        safeTsvText4.setReporter(pigProgressable11);
        boolean boolean13 = safeTsvText4.isAsynchronous();
        pignlproc.evaluation.NoLoopInPath noLoopInPath14 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText15 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = null;
        safeTsvText15.setPigLogger(pigLogger16);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText18 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = mergeAsOpenNLPAnnotatedText18.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = checkAbstract20.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = mergeAsOpenNLPAnnotatedText18.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = safeTsvText15.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = noLoopInPath14.outputSchema(schema23);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger26 = noLoopInPath14.getPigLogger();
        java.lang.reflect.Type type27 = noLoopInPath14.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath28 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText29 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = null;
        safeTsvText29.setPigLogger(pigLogger30);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText32 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable33 = mergeAsOpenNLPAnnotatedText32.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract34 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = checkAbstract34.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = mergeAsOpenNLPAnnotatedText32.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = safeTsvText29.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = noLoopInPath28.outputSchema(schema37);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag40 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText41 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger42 = null;
        safeTsvText41.setPigLogger(pigLogger42);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText44 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable45 = mergeAsOpenNLPAnnotatedText44.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract46 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = checkAbstract46.outputSchema(schema47);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = mergeAsOpenNLPAnnotatedText44.outputSchema(schema47);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = safeTsvText41.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = aggregateTextBag40.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = noLoopInPath28.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = noLoopInPath14.outputSchema(schema52);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = safeTsvText4.outputSchema(schema53);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = sentencesWithLink0.outputSchema(schema54);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText56 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable57 = mergeAsOpenNLPAnnotatedText56.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract58 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = checkAbstract58.outputSchema(schema59);
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = mergeAsOpenNLPAnnotatedText56.outputSchema(schema59);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = sentencesWithLink0.outputSchema(schema61);
        java.lang.Enum enum64 = null;
        sentencesWithLink0.warn("\"http : // \"\" opennlp / en - sent . bin \"\" . wikipedia . org / wiki / href\"", enum64);
        java.lang.Enum enum67 = null;
        sentencesWithLink0.warn("http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21\n", enum67);
        org.junit.Assert.assertNull(pigProgressable8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(pigProgressable19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(pigLogger26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNull(pigProgressable33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(pigProgressable45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(pigProgressable57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
    }

    @Test
    public void test4108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4108");
        org.apache.hadoop.mapreduce.Job job1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.StoreFunc.cleanupOnFailureImpl("\"\"\"\"\"\"\"http://.wikipedia.org/wiki/hi%21\"\"\"\" \"\"\"\n", job1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Illegal character in scheme name at index 0: \"\"\"\"\"\"\"http://.wikipedia.org/wiki/hi%2521%22%22%22%22%20%22%22%22%0A");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4109");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.InputFormat inputFormat4 = uriUriNTriplesLoader3.getInputFormat();
        org.apache.pig.LoadCaster loadCaster5 = uriUriNTriplesLoader3.getLoadCaster();
        org.apache.pig.LoadCaster loadCaster6 = uriUriNTriplesLoader3.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job8 = null;
        org.apache.pig.ResourceSchema resourceSchema9 = uriUriNTriplesLoader3.getSchema("\"http://http://http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/%22title%22 .wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org%2Fwiki%2Fhi_%2521\"", job8);
        org.junit.Assert.assertNotNull(inputFormat4);
        org.junit.Assert.assertNotNull(loadCaster5);
        org.junit.Assert.assertNotNull(loadCaster6);
        org.junit.Assert.assertNotNull(resourceSchema9);
    }

    @Test
    public void test4110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4110");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"");
        org.apache.hadoop.mapreduce.Job job3 = null;
        java.lang.String[] strArray4 = parsingWikipediaLoader1.getPartitionKeys("http://\"http://.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22", job3);
        org.junit.Assert.assertNull(strArray4);
    }

    @Test
    public void test4111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4111");
        pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract((int) '4');
        checkAbstract1.finish();
        org.apache.pig.data.Tuple tuple3 = null;
        java.lang.Boolean boolean4 = checkAbstract1.exec(tuple3);
        java.lang.Enum enum6 = null;
        checkAbstract1.warn("http://http://hi!\n.wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/%22%22%22_http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_%22%22%22", enum6);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + false + "'", boolean4, false);
    }

    @Test
    public void test4112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4112");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation(35, (int) (short) 1, "http://\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/href\".wikipedia.org/wiki/%22_opennlp_%2F_en_-_sent_._bin_%22", "\"hi!\"");
        int int5 = annotation4.end;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    }

    @Test
    public void test4113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4113");
        java.lang.String str1 = pignlproc.evaluation.SafeTsvText.escape("http://\" title \".wikipedia.org/wiki/");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"http://\"\" title \"\".wikipedia.org/wiki/\"" + "'", str1, "\"http://\"\" title \"\".wikipedia.org/wiki/\"");
    }

    @Test
    public void test4114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4114");
        java.lang.String[] strArray1 = org.apache.pig.LoadFunc.getPathStrings("http://\"title\"\n.wikipedia.org/wiki/");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test4115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4115");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("\"title\"");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser2 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser2.getHeaders();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser2.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser2.getHeaderAnnotations();
        java.lang.String str6 = annotatingMarkupParser2.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser7 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser7.getHeaders();
        java.util.List<java.lang.String> strList9 = annotatingMarkupParser7.getHeaders();
        java.lang.Appendable appendable10 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable11 = annotatingMarkupParser7.new CountingAppendable(appendable10);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable12 = annotatingMarkupParser2.new CountingAppendable((java.lang.Appendable) countingAppendable11);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser13 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList14 = annotatingMarkupParser13.getHeaders();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser13.getHeaders();
        java.lang.Appendable appendable16 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable17 = annotatingMarkupParser13.new CountingAppendable(appendable16);
        countingAppendable17.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable20 = annotatingMarkupParser2.new CountingAppendable((java.lang.Appendable) countingAppendable17);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable21 = annotatingMarkupParser1.new CountingAppendable((java.lang.Appendable) countingAppendable20);
        java.util.List<java.lang.String> strList22 = annotatingMarkupParser1.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList23 = annotatingMarkupParser1.getWikiLinkAnnotations();
        java.lang.String str24 = annotatingMarkupParser1.getRedirect();
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(annotationList23);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test4116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4116");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("http://hi!\n.wikipedia.org/wiki/%22_title_%22");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = concatTextBag1.getPigLogger();
        concatTextBag1.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = concatTextBag1.getReporter();
        org.junit.Assert.assertNull(pigLogger2);
        org.junit.Assert.assertNull(pigProgressable4);
    }

    @Test
    public void test4117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4117");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("", "title", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.RecordWriter recordWriter4 = null;
        uriStringLiteralNTriplesStorer3.prepareToWrite(recordWriter4);
        org.apache.pig.ResourceSchema resourceSchema6 = null;
        uriStringLiteralNTriplesStorer3.checkSchema(resourceSchema6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer3.cleanupOnFailure("hi!\n\n", job9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4118");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = sentencesWithLink0.getPigLogger();
        java.lang.Enum enum3 = null;
        sentencesWithLink0.warn("opennlp / en - sent . bin", enum3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        sentencesWithLink0.setReporter(pigProgressable5);
        pignlproc.evaluation.CheckAbstract checkAbstract7 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum9 = null;
        checkAbstract7.warn("http://.wikipedia.org/wiki/hi%21", enum9);
        java.lang.Enum enum12 = null;
        checkAbstract7.warn("hi !", enum12);
        pignlproc.evaluation.NoLoopInPath noLoopInPath14 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText15 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = null;
        safeTsvText15.setPigLogger(pigLogger16);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText18 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = mergeAsOpenNLPAnnotatedText18.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = checkAbstract20.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = mergeAsOpenNLPAnnotatedText18.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = safeTsvText15.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = noLoopInPath14.outputSchema(schema23);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag26 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText27 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger28 = null;
        safeTsvText27.setPigLogger(pigLogger28);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText30 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable31 = mergeAsOpenNLPAnnotatedText30.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract32 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = checkAbstract32.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = mergeAsOpenNLPAnnotatedText30.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = safeTsvText27.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = aggregateTextBag26.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = noLoopInPath14.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = checkAbstract7.outputSchema(schema38);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = sentencesWithLink0.outputSchema(schema38);
        sentencesWithLink0.finish();
        boolean boolean42 = sentencesWithLink0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger43 = null;
        sentencesWithLink0.setPigLogger(pigLogger43);
        boolean boolean45 = sentencesWithLink0.isAsynchronous();
        org.apache.commons.logging.Log log46 = sentencesWithLink0.getLogger();
        org.junit.Assert.assertNull(pigLogger1);
        org.junit.Assert.assertNull(pigProgressable19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(pigProgressable31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(log46);
    }

    @Test
    public void test4119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4119");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (short) 0, 1, "http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin", "http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21");
        int int5 = annotation4.begin;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test4120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4120");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPaths(job0, "\"\"\"\"\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"\"\"\" \"");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Illegal character in scheme name at index 0: \"\"\"\"\"\"\"http://hi%20!%20.wikipedia.org/wiki/http%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22%22%22%22%20%22");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4121");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser14.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList16 = annotatingMarkupParser14.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel18 = annotatingMarkupParser14.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel20 = annotatingMarkupParser14.makeWikiModel("hi!\n");
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser14.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser22 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser22.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList24 = annotatingMarkupParser22.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList25 = annotatingMarkupParser22.getParagraphAnnotations();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser22.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList27 = annotatingMarkupParser22.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser28 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList29 = annotatingMarkupParser28.getHeaderAnnotations();
        java.util.List<java.lang.String> strList30 = annotatingMarkupParser28.getParagraphs();
        java.lang.Appendable appendable31 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable32 = annotatingMarkupParser28.new CountingAppendable(appendable31);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable33 = annotatingMarkupParser22.new CountingAppendable((java.lang.Appendable) countingAppendable32);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser34 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList35 = annotatingMarkupParser34.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList36 = annotatingMarkupParser34.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel38 = annotatingMarkupParser34.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel40 = annotatingMarkupParser34.makeWikiModel("hi!\n");
        annotatingMarkupParser0.nodesToText(annotationList21, (java.lang.Appendable) countingAppendable33, (info.bliki.wiki.model.IWikiModel) wikiModel40);
        info.bliki.wiki.model.WikiModel wikiModel43 = annotatingMarkupParser0.makeWikiModel("hi!\n");
        java.lang.String str44 = annotatingMarkupParser0.getRedirect();
        info.bliki.wiki.model.WikiModel wikiModel46 = annotatingMarkupParser0.makeWikiModel("http://wikiobject.wikipedia.org/wiki/opennlp%2Fen-sent.bin");
        java.util.List<pignlproc.markup.Annotation> annotationList47 = annotatingMarkupParser0.getWikiLinkAnnotations();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(annotationList16);
        org.junit.Assert.assertNotNull(wikiModel18);
        org.junit.Assert.assertNotNull(wikiModel20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(annotationList24);
        org.junit.Assert.assertNotNull(annotationList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList27);
        org.junit.Assert.assertNotNull(annotationList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(annotationList36);
        org.junit.Assert.assertNotNull(wikiModel38);
        org.junit.Assert.assertNotNull(wikiModel40);
        org.junit.Assert.assertNotNull(wikiModel43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(wikiModel46);
        org.junit.Assert.assertNotNull(annotationList47);
    }

    @Test
    public void test4122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4122");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("\"http : // \"\" opennlp / en - sent . bin \"\" . wikipedia . org / wiki / href\"\n");
    }

    @Test
    public void test4123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4123");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = checkAbstract0.getReporter();
        org.apache.commons.logging.Log log4 = checkAbstract0.getLogger();
        checkAbstract0.finish();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = checkAbstract0.getArgToFuncMapping();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNull(funcSpecList6);
    }

    @Test
    public void test4124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4124");
        java.lang.String str2 = pignlproc.markup.AnnotatingMarkupParser.titleToUri("\"title\"href", "\"\"\"title\"\" \"hrefhref");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://\"\"\"title\"\" \"hrefhref.wikipedia.org/wiki/%22title%22href" + "'", str2, "http://\"\"\"title\"\" \"hrefhref.wikipedia.org/wiki/%22title%22href");
    }

    @Test
    public void test4125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4125");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("href");
        pignlproc.evaluation.NoLoopInPath noLoopInPath3 = new pignlproc.evaluation.NoLoopInPath("wikiobject");
        boolean boolean4 = noLoopInPath3.isAsynchronous();
        pignlproc.evaluation.ConcatTextBag concatTextBag6 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        org.apache.pig.data.Tuple tuple7 = null;
        java.lang.String str8 = concatTextBag6.exec(tuple7);
        pignlproc.evaluation.NoLoopInPath noLoopInPath9 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText10 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        safeTsvText10.setPigLogger(pigLogger11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = mergeAsOpenNLPAnnotatedText13.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract15.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = safeTsvText10.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = noLoopInPath9.outputSchema(schema18);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag21 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText22 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = null;
        safeTsvText22.setPigLogger(pigLogger23);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText25 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable26 = mergeAsOpenNLPAnnotatedText25.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract27 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = checkAbstract27.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = mergeAsOpenNLPAnnotatedText25.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = safeTsvText22.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = aggregateTextBag21.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = noLoopInPath9.outputSchema(schema30);
        pignlproc.evaluation.CheckAbstract checkAbstract34 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum36 = null;
        checkAbstract34.warn("http://.wikipedia.org/wiki/hi%21", enum36);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger38 = null;
        checkAbstract34.setPigLogger(pigLogger38);
        checkAbstract34.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText41 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger42 = null;
        safeTsvText41.setPigLogger(pigLogger42);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText44 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable45 = mergeAsOpenNLPAnnotatedText44.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract46 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = checkAbstract46.outputSchema(schema47);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = mergeAsOpenNLPAnnotatedText44.outputSchema(schema47);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = safeTsvText41.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = checkAbstract34.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = noLoopInPath9.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = concatTextBag6.outputSchema(schema52);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = noLoopInPath3.outputSchema(schema53);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = noLoopInPath1.outputSchema(schema53);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger56 = noLoopInPath1.getPigLogger();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText57 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray59 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList60 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList60, spanArray59);
        java.lang.String str62 = mergeAsOpenNLPAnnotatedText57.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList60);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList63 = mergeAsOpenNLPAnnotatedText57.getArgToFuncMapping();
        pignlproc.evaluation.AggregateTextBag aggregateTextBag65 = new pignlproc.evaluation.AggregateTextBag((int) (short) 0);
        aggregateTextBag65.progress();
        pignlproc.evaluation.ConcatTextBag concatTextBag68 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract69 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum71 = null;
        checkAbstract69.warn("http://.wikipedia.org/wiki/hi%21", enum71);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger73 = null;
        checkAbstract69.setPigLogger(pigLogger73);
        checkAbstract69.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText76 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger77 = null;
        safeTsvText76.setPigLogger(pigLogger77);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText79 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable80 = mergeAsOpenNLPAnnotatedText79.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract81 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema82 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema83 = checkAbstract81.outputSchema(schema82);
        org.apache.pig.impl.logicalLayer.schema.Schema schema84 = mergeAsOpenNLPAnnotatedText79.outputSchema(schema82);
        org.apache.pig.impl.logicalLayer.schema.Schema schema85 = safeTsvText76.outputSchema(schema84);
        org.apache.pig.impl.logicalLayer.schema.Schema schema86 = checkAbstract69.outputSchema(schema85);
        org.apache.pig.impl.logicalLayer.schema.Schema schema87 = concatTextBag68.outputSchema(schema86);
        org.apache.pig.impl.logicalLayer.schema.Schema schema88 = aggregateTextBag65.outputSchema(schema87);
        org.apache.pig.impl.logicalLayer.schema.Schema schema89 = mergeAsOpenNLPAnnotatedText57.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema90 = noLoopInPath1.outputSchema(schema89);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(pigProgressable14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(pigProgressable26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(pigProgressable45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(pigLogger56);
        org.junit.Assert.assertNotNull(spanArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi !" + "'", str62, "hi !");
        org.junit.Assert.assertNull(funcSpecList63);
        org.junit.Assert.assertNull(pigProgressable80);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
    }

    @Test
    public void test4126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4126");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("\"hi!\"", job4);
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceStatistics resourceStatistics8 = uriStringLiteralNTriplesLoader2.getStatistics("\"hi!\"\n", job7);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple9 = uriStringLiteralNTriplesLoader2.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNull(resourceStatistics8);
    }

    @Test
    public void test4127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4127");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("\"\"\"opennlp/en-sent.bin\"\" \"", "http://http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href\n.wikipedia.org/wiki/%22%22");
    }

    @Test
    public void test4128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4128");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("http://\" title \".wikipedia.org/wiki/", "http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href\n", "\"\"\"hi!\"\" \"\n\n");
        org.apache.hadoop.fs.Path path5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = uriUriNTriplesStorer3.relToAbsPathForStoreLocation("\"\"\"title\"\" \"hrefhref", path5);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"\"\"title\"\" \"hrefhref curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4129");
        java.lang.String str1 = pignlproc.evaluation.SafeTsvText.escape("\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/href\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"\"\"http://\"\"\"\"opennlp / en - sent . bin\"\"\"\".wikipedia.org/wiki/href\"\"\"" + "'", str1, "\"\"\"http://\"\"\"\"opennlp / en - sent . bin\"\"\"\".wikipedia.org/wiki/href\"\"\"");
    }

    @Test
    public void test4130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4130");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("\"\"\"\"\"\"\"http://.wikipedia.org/wiki/hi%21\"\"\"\" \"\"\"");
        org.apache.pig.data.Tuple tuple2 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.putNext(tuple2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4131");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("\"\"\" hi ! \"\" \"");
        pignlproc.evaluation.NoLoopInPath noLoopInPath2 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText3 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = null;
        safeTsvText3.setPigLogger(pigLogger4);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText6 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = mergeAsOpenNLPAnnotatedText6.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract8 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = checkAbstract8.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = mergeAsOpenNLPAnnotatedText6.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = safeTsvText3.outputSchema(schema11);
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = noLoopInPath2.outputSchema(schema11);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = noLoopInPath2.getPigLogger();
        java.lang.reflect.Type type15 = noLoopInPath2.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath16 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText17 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger18 = null;
        safeTsvText17.setPigLogger(pigLogger18);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText20 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable21 = mergeAsOpenNLPAnnotatedText20.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract22 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = checkAbstract22.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = mergeAsOpenNLPAnnotatedText20.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = safeTsvText17.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = noLoopInPath16.outputSchema(schema25);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag28 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText29 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = null;
        safeTsvText29.setPigLogger(pigLogger30);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText32 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable33 = mergeAsOpenNLPAnnotatedText32.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract34 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = checkAbstract34.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = mergeAsOpenNLPAnnotatedText32.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = safeTsvText29.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = aggregateTextBag28.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = noLoopInPath16.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = noLoopInPath2.outputSchema(schema40);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable42 = noLoopInPath2.getReporter();
        pignlproc.evaluation.AggregateTextBag aggregateTextBag45 = new pignlproc.evaluation.AggregateTextBag((int) 'a', false);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText46 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray48 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList49 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList49, spanArray48);
        java.lang.String str51 = mergeAsOpenNLPAnnotatedText46.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList49);
        pignlproc.evaluation.ConcatTextBag concatTextBag53 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract54 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum56 = null;
        checkAbstract54.warn("http://.wikipedia.org/wiki/hi%21", enum56);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger58 = null;
        checkAbstract54.setPigLogger(pigLogger58);
        checkAbstract54.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText61 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger62 = null;
        safeTsvText61.setPigLogger(pigLogger62);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText64 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable65 = mergeAsOpenNLPAnnotatedText64.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract66 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = checkAbstract66.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = mergeAsOpenNLPAnnotatedText64.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema70 = safeTsvText61.outputSchema(schema69);
        org.apache.pig.impl.logicalLayer.schema.Schema schema71 = checkAbstract54.outputSchema(schema70);
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = concatTextBag53.outputSchema(schema71);
        org.apache.pig.impl.logicalLayer.schema.Schema schema73 = mergeAsOpenNLPAnnotatedText46.outputSchema(schema71);
        org.apache.pig.impl.logicalLayer.schema.Schema schema74 = aggregateTextBag45.outputSchema(schema73);
        org.apache.pig.impl.logicalLayer.schema.Schema schema75 = noLoopInPath2.outputSchema(schema73);
        org.apache.pig.impl.logicalLayer.schema.Schema schema76 = mergeAsOpenNLPAnnotatedText1.outputSchema(schema75);
        org.junit.Assert.assertNull(pigProgressable7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(pigLogger14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNull(pigProgressable21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(pigProgressable33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(pigProgressable42);
        org.junit.Assert.assertNotNull(spanArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "href" + "'", str51, "href");
        org.junit.Assert.assertNull(pigProgressable65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
    }

    @Test
    public void test4132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4132");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        safeTsvText0.setPigLogger(pigLogger1);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText3 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = mergeAsOpenNLPAnnotatedText3.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract5 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema6 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = checkAbstract5.outputSchema(schema6);
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = mergeAsOpenNLPAnnotatedText3.outputSchema(schema6);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = safeTsvText0.outputSchema(schema8);
        safeTsvText0.finish();
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = safeTsvText0.outputSchema(schema11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText14 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("\"\"\" opennlp / en - sent . bin \"\"\"");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("");
        mergeAsOpenNLPAnnotatedText16.progress();
        boolean boolean18 = mergeAsOpenNLPAnnotatedText16.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText20 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray22 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList23 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList23, spanArray22);
        java.lang.String str25 = mergeAsOpenNLPAnnotatedText20.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList23);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger26 = null;
        mergeAsOpenNLPAnnotatedText20.setPigLogger(pigLogger26);
        boolean boolean28 = mergeAsOpenNLPAnnotatedText20.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText30 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray32 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList33 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList33, spanArray32);
        java.lang.String str35 = mergeAsOpenNLPAnnotatedText30.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList33);
        java.lang.String str36 = mergeAsOpenNLPAnnotatedText20.merge("opennlp/en-sent.bin", (java.util.List<opennlp.tools.util.Span>) spanList33);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText38 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable39 = mergeAsOpenNLPAnnotatedText38.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract40 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = checkAbstract40.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = mergeAsOpenNLPAnnotatedText38.outputSchema(schema41);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText45 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray47 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList48 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList48, spanArray47);
        java.lang.String str50 = mergeAsOpenNLPAnnotatedText45.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList48);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText52 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray54 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList55 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList55, spanArray54);
        java.lang.String str57 = mergeAsOpenNLPAnnotatedText52.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList55);
        java.lang.String str58 = mergeAsOpenNLPAnnotatedText45.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList55);
        java.lang.String str59 = mergeAsOpenNLPAnnotatedText38.merge("title", (java.util.List<opennlp.tools.util.Span>) spanList55);
        java.lang.String str60 = mergeAsOpenNLPAnnotatedText20.merge("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", (java.util.List<opennlp.tools.util.Span>) spanList55);
        java.lang.String str61 = mergeAsOpenNLPAnnotatedText16.merge("hi!\n", (java.util.List<opennlp.tools.util.Span>) spanList55);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag62 = new pignlproc.evaluation.AggregateTextBag();
        org.apache.commons.logging.Log log63 = aggregateTextBag62.getLogger();
        java.lang.reflect.Type type64 = aggregateTextBag62.getReturnType();
        pignlproc.evaluation.ConcatTextBag concatTextBag66 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract67 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum69 = null;
        checkAbstract67.warn("http://.wikipedia.org/wiki/hi%21", enum69);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger71 = null;
        checkAbstract67.setPigLogger(pigLogger71);
        checkAbstract67.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText74 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger75 = null;
        safeTsvText74.setPigLogger(pigLogger75);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText77 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable78 = mergeAsOpenNLPAnnotatedText77.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract79 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema80 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema81 = checkAbstract79.outputSchema(schema80);
        org.apache.pig.impl.logicalLayer.schema.Schema schema82 = mergeAsOpenNLPAnnotatedText77.outputSchema(schema80);
        org.apache.pig.impl.logicalLayer.schema.Schema schema83 = safeTsvText74.outputSchema(schema82);
        org.apache.pig.impl.logicalLayer.schema.Schema schema84 = checkAbstract67.outputSchema(schema83);
        org.apache.pig.impl.logicalLayer.schema.Schema schema85 = concatTextBag66.outputSchema(schema84);
        org.apache.pig.data.Tuple tuple86 = null;
        java.lang.String str87 = concatTextBag66.exec(tuple86);
        pignlproc.evaluation.ConcatTextBag concatTextBag89 = new pignlproc.evaluation.ConcatTextBag("opennlp/en-sent.bin");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable90 = concatTextBag89.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger91 = concatTextBag89.getPigLogger();
        org.apache.pig.impl.logicalLayer.schema.Schema schema92 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema93 = concatTextBag89.outputSchema(schema92);
        org.apache.pig.impl.logicalLayer.schema.Schema schema94 = concatTextBag66.outputSchema(schema92);
        org.apache.pig.impl.logicalLayer.schema.Schema schema95 = aggregateTextBag62.outputSchema(schema94);
        org.apache.pig.impl.logicalLayer.schema.Schema schema96 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema94);
        org.apache.pig.impl.logicalLayer.schema.Schema schema97 = mergeAsOpenNLPAnnotatedText14.outputSchema(schema94);
        org.apache.pig.impl.logicalLayer.schema.Schema schema98 = safeTsvText0.outputSchema(schema97);
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(spanArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi !" + "'", str25, "hi !");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(spanArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "href" + "'", str35, "href");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "opennlp / en - sent . bin" + "'", str36, "opennlp / en - sent . bin");
        org.junit.Assert.assertNull(pigProgressable39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(spanArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi !" + "'", str50, "hi !");
        org.junit.Assert.assertNotNull(spanArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "href" + "'", str57, "href");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi !" + "'", str58, "hi !");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "title" + "'", str59, "title");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21" + "'", str60, "http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi !" + "'", str61, "hi !");
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNull(pigProgressable78);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNull(pigProgressable90);
        org.junit.Assert.assertNull(pigLogger91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNotNull(schema98);
    }

    @Test
    public void test4133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4133");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        java.lang.reflect.Type type12 = noLoopInPath0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger13 = null;
        noLoopInPath0.setPigLogger(pigLogger13);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(type12);
    }

    @Test
    public void test4134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4134");
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract("http://\"http://.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"http://\"http://.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4135");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.InputFormat inputFormat4 = uriUriNTriplesLoader3.getInputFormat();
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceStatistics resourceStatistics7 = uriUriNTriplesLoader3.getStatistics("hi !\n", job6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        org.apache.pig.ResourceStatistics resourceStatistics10 = uriUriNTriplesLoader3.getStatistics("", job9);
        org.junit.Assert.assertNotNull(inputFormat4);
        org.junit.Assert.assertNull(resourceStatistics7);
        org.junit.Assert.assertNull(resourceStatistics10);
    }

    @Test
    public void test4136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4136");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("\"hi! \"");
        org.apache.commons.logging.Log log2 = noLoopInPath1.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = null;
        noLoopInPath1.setReporter(pigProgressable3);
        org.apache.pig.data.Tuple tuple5 = null;
        java.lang.Boolean boolean6 = noLoopInPath1.exec(tuple5);
        java.lang.reflect.Type type7 = noLoopInPath1.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = null;
        noLoopInPath1.setReporter(pigProgressable8);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable10 = null;
        noLoopInPath1.setReporter(pigProgressable10);
        java.lang.Enum enum13 = null;
        noLoopInPath1.warn("http://\"\"\"\"\"\"\"\"\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\"\"\"\"\" \"\"\"\"\"\"\".wikipedia.org/wiki/http%3A%2F%2F%22title%22%0A.wikipedia.org%2Fwiki%2F", enum13);
        org.junit.Assert.assertNotNull(log2);
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + true + "'", boolean6, true);
        org.junit.Assert.assertNotNull(type7);
    }

    @Test
    public void test4137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4137");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = sentencesWithLink0.getPigLogger();
        sentencesWithLink0.finish();
        java.lang.Enum enum4 = null;
        sentencesWithLink0.warn("titlehref", enum4);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = null;
        sentencesWithLink0.setReporter(pigProgressable6);
        java.lang.Enum enum9 = null;
        sentencesWithLink0.warn("\"opennlp / en - sent . bin\"", enum9);
        org.junit.Assert.assertNull(pigLogger1);
    }

    @Test
    public void test4138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4138");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("wikiobject", "");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://.wikipedia.org/wiki/hi%21\n", job4);
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = uriStringLiteralNTriplesLoader2.getSchema("\"opennlp/en-sent.bin\"", job7);
        org.apache.pig.Expression expression9 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression9);
        org.apache.hadoop.mapreduce.Job job12 = null;
        org.apache.pig.ResourceSchema resourceSchema13 = uriStringLiteralNTriplesLoader2.getSchema("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22href", job12);
        org.apache.hadoop.mapreduce.RecordReader recordReader14 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit15 = null;
        uriStringLiteralNTriplesLoader2.prepareToRead(recordReader14, pigSplit15);
        org.apache.hadoop.mapreduce.InputFormat inputFormat17 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.apache.hadoop.mapreduce.Job job19 = null;
        org.apache.pig.ResourceSchema resourceSchema20 = uriStringLiteralNTriplesLoader2.getSchema("http://\"opennlp/en-sent.bin\"\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22opennlp_%2F_en_-_sent_._bin%22.wikipedia.org%2Fwiki%2Fhref%0A.wikipedia.org%2Fwiki%2F%2522%2522", job19);
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(resourceSchema8);
        org.junit.Assert.assertNotNull(resourceSchema13);
        org.junit.Assert.assertNotNull(inputFormat17);
        org.junit.Assert.assertNotNull(resourceSchema20);
    }

    @Test
    public void test4139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4139");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader3.getSchema("", job5);
        org.apache.pig.Expression expression7 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceSchema resourceSchema11 = uriUriNTriplesLoader3.getSchema("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521", job10);
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNotNull(resourceSchema11);
    }

    @Test
    public void test4140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4140");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        org.apache.pig.data.Tuple tuple3 = null;
        java.lang.Boolean boolean4 = checkAbstract0.exec(tuple3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = null;
        checkAbstract0.setPigLogger(pigLogger5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = checkAbstract0.getReporter();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + false + "'", boolean4, false);
        org.junit.Assert.assertNull(pigProgressable7);
    }

    @Test
    public void test4141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4141");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        mergeAsOpenNLPAnnotatedText0.setPigLogger(pigLogger6);
        mergeAsOpenNLPAnnotatedText0.finish();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = null;
        mergeAsOpenNLPAnnotatedText0.setReporter(pigProgressable9);
        boolean boolean11 = mergeAsOpenNLPAnnotatedText0.isAsynchronous();
        mergeAsOpenNLPAnnotatedText0.finish();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger13 = null;
        mergeAsOpenNLPAnnotatedText0.setPigLogger(pigLogger13);
        mergeAsOpenNLPAnnotatedText0.finish();
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "href" + "'", str5, "href");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test4142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4142");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink6 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        sentencesWithLink6.setPigLogger(pigLogger7);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = sentencesWithLink6.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable10 = null;
        sentencesWithLink6.setReporter(pigProgressable10);
        sentencesWithLink6.progress();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray15 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList16 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList16, spanArray15);
        java.lang.String str18 = mergeAsOpenNLPAnnotatedText13.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList16);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText20 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray22 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList23 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList23, spanArray22);
        java.lang.String str25 = mergeAsOpenNLPAnnotatedText20.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList23);
        java.lang.String str26 = mergeAsOpenNLPAnnotatedText13.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList23);
        pignlproc.evaluation.SafeTsvText safeTsvText27 = new pignlproc.evaluation.SafeTsvText();
        java.lang.reflect.Type type28 = safeTsvText27.getReturnType();
        pignlproc.evaluation.CheckAbstract checkAbstract29 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = checkAbstract29.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = safeTsvText27.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = sentencesWithLink6.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = sentencesWithLink0.outputSchema(schema31);
        sentencesWithLink0.finish();
        org.apache.commons.logging.Log log37 = sentencesWithLink0.getLogger();
        java.lang.reflect.Type type38 = sentencesWithLink0.getReturnType();
        org.apache.pig.data.Tuple tuple39 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.DataBag dataBag40 = sentencesWithLink0.exec(tuple39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(pigProgressable9);
        org.junit.Assert.assertNotNull(spanArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi !" + "'", str18, "hi !");
        org.junit.Assert.assertNotNull(spanArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "href" + "'", str25, "href");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi !" + "'", str26, "hi !");
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(type38);
    }

    @Test
    public void test4143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4143");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://.wikipedia.org/wiki/hi%21", job4);
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = uriStringLiteralNTriplesLoader2.getSchema("\"title\"\n", job7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        java.lang.String[] strArray11 = uriStringLiteralNTriplesLoader2.getPartitionKeys("", job10);
        org.apache.hadoop.mapreduce.Job job13 = null;
        org.apache.pig.ResourceSchema resourceSchema14 = uriStringLiteralNTriplesLoader2.getSchema("\"http://http://hi! .wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin\"", job13);
        org.apache.hadoop.fs.Path path16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = uriStringLiteralNTriplesLoader2.relativeToAbsolutePath("http://http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href.wikipedia.org/wiki/http%3A%2F%2F%22opennlp_%2F_en_-_sent_._bin%22.wikipedia.org%2Fwiki%2Fhrefwikiobject%22%22%22http%3A%2F%2Fhi%21.wikipedia.org%2Fwiki%2F%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22wikiobject%22hi%21%22%0Awikiobject%0Awikiobjectopennlp%2Fen-sent.binwikiobjecthttp%3A%2F%2Fhi%21%0A.wikipedia.org%2Fwiki%2Fopennlp_%252F_en_-_sent_._binwikiobjecthttp%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521wikiobjecthttp%3A%2F%2F%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22.wikipedia.org%2Fwiki%2F%2522%2522%2522http%253A%252F%252Fhi_%2521_.wikipedia.org%252Fwiki%252Fhttp%25253A%25252F%25252Fhttp%25253A%25252F%25252F.wikipedia.org%25252Fwiki%25252Fhi%25252521%25250A.wikipedia.org%25252Fwiki%25252F%25252522title%25252522%2522%2522%2522wikiobject%22opennlp_%2F_en_-_sent_._bin%22wikiobject%22%22", path16);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: http://http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href.wikipedia.org/wiki/http%3A%2F%2F%22opennlp_%2F_en_-_sent_._bin%22.wikipedia.org%2Fwiki%2Fhrefwikiobject%22%22%22http%3A%2F%2Fhi%21.wikipedia.org%2Fwiki%2F%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22wikiobject%22hi%21%22%0Awikiobject%0Awikiobjectopennlp%2Fen-sent.binwikiobjecthttp%3A%2F%2Fhi%21%0A.wikipedia.org%2Fwiki%2Fopennlp_%252F_en_-_sent_._binwikiobjecthttp%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521wikiobjecthttp%3A%2F%2F%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22.wikipedia.org%2Fwiki%2F%2522%2522%2522http%253A%252F%252Fhi_%2521_.wikipedia.org%252Fwiki%252Fhttp%25253A%25252F%25252Fhttp%25253A%25252F%25252F.wikipedia.org%25252Fwiki%25252Fhi%25252521%25250A.wikipedia.org%25252Fwiki%25252F%25252522title%25252522%2522%2522%2522wikiobject%22opennlp_%2F_en_-_sent_._bin%22wikiobject%22%22 curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(resourceSchema8);
        org.junit.Assert.assertNull(strArray11);
        org.junit.Assert.assertNotNull(resourceSchema14);
    }

    @Test
    public void test4144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4144");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag12 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText13 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        safeTsvText13.setPigLogger(pigLogger14);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText16.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = safeTsvText13.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = aggregateTextBag12.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = noLoopInPath0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        noLoopInPath0.setPigLogger(pigLogger25);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger27 = noLoopInPath0.getPigLogger();
        java.lang.reflect.Type type28 = noLoopInPath0.getReturnType();
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(pigLogger27);
        org.junit.Assert.assertNotNull(type28);
    }

    @Test
    public void test4145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4145");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract3 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum5 = null;
        checkAbstract3.warn("http://.wikipedia.org/wiki/hi%21", enum5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        checkAbstract3.setPigLogger(pigLogger7);
        checkAbstract3.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText10 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        safeTsvText10.setPigLogger(pigLogger11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = mergeAsOpenNLPAnnotatedText13.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract15.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = safeTsvText10.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract3.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = concatTextBag2.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = sentencesWithLink0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = sentencesWithLink0.getPigLogger();
        java.lang.Enum enum25 = null;
        sentencesWithLink0.warn("title", enum25);
        sentencesWithLink0.finish();
        sentencesWithLink0.progress();
        org.apache.commons.logging.Log log29 = sentencesWithLink0.getLogger();
        org.junit.Assert.assertNull(pigProgressable14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(pigLogger23);
        org.junit.Assert.assertNotNull(log29);
    }

    @Test
    public void test4146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4146");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((int) 'a', false);
        java.lang.Enum enum4 = null;
        aggregateTextBag2.warn("\n", enum4);
        java.lang.Enum enum7 = null;
        aggregateTextBag2.warn("http://\"http://.wikipedia.org/wiki/hi%21\"\n\n.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22", enum7);
    }

    @Test
    public void test4147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4147");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("", "title", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.RecordWriter recordWriter4 = null;
        uriStringLiteralNTriplesStorer3.prepareToWrite(recordWriter4);
        org.apache.hadoop.mapreduce.OutputFormat outputFormat6 = uriStringLiteralNTriplesStorer3.getOutputFormat();
        org.apache.hadoop.mapreduce.RecordWriter recordWriter7 = null;
        uriStringLiteralNTriplesStorer3.prepareToWrite(recordWriter7);
        org.junit.Assert.assertNotNull(outputFormat6);
    }

    @Test
    public void test4148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4148");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("wikiobject");
        boolean boolean2 = noLoopInPath1.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger3 = null;
        noLoopInPath1.setPigLogger(pigLogger3);
        noLoopInPath1.finish();
        noLoopInPath1.finish();
        java.lang.Enum enum8 = null;
        noLoopInPath1.warn("http://http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21.wikipedia.org/wiki/%22http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521_.wikipedia.org%2Fwiki%2F%2522title%2522href%22\n\n", enum8);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test4149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4149");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList3);
        pignlproc.evaluation.ConcatTextBag concatTextBag7 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract8 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum10 = null;
        checkAbstract8.warn("http://.wikipedia.org/wiki/hi%21", enum10);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger12 = null;
        checkAbstract8.setPigLogger(pigLogger12);
        checkAbstract8.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText15 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = null;
        safeTsvText15.setPigLogger(pigLogger16);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText18 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = mergeAsOpenNLPAnnotatedText18.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = checkAbstract20.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = mergeAsOpenNLPAnnotatedText18.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = safeTsvText15.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = checkAbstract8.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = concatTextBag7.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = mergeAsOpenNLPAnnotatedText0.outputSchema(schema25);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText29 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray31 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList32 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList32, spanArray31);
        java.lang.String str34 = mergeAsOpenNLPAnnotatedText29.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList32);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger35 = null;
        mergeAsOpenNLPAnnotatedText29.setPigLogger(pigLogger35);
        boolean boolean37 = mergeAsOpenNLPAnnotatedText29.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText39 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray41 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList42 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList42, spanArray41);
        java.lang.String str44 = mergeAsOpenNLPAnnotatedText39.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList42);
        java.lang.String str45 = mergeAsOpenNLPAnnotatedText29.merge("opennlp/en-sent.bin", (java.util.List<opennlp.tools.util.Span>) spanList42);
        java.lang.String str46 = mergeAsOpenNLPAnnotatedText0.merge("\"title\"", (java.util.List<opennlp.tools.util.Span>) spanList42);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText48 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray50 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList51 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList51, spanArray50);
        java.lang.String str53 = mergeAsOpenNLPAnnotatedText48.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList51);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText55 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray57 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList58 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList58, spanArray57);
        java.lang.String str60 = mergeAsOpenNLPAnnotatedText55.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList58);
        java.lang.String str61 = mergeAsOpenNLPAnnotatedText48.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList58);
        java.lang.String str62 = mergeAsOpenNLPAnnotatedText0.merge("wikiobject", (java.util.List<opennlp.tools.util.Span>) spanList58);
        java.lang.Enum enum64 = null;
        mergeAsOpenNLPAnnotatedText0.warn("http://hi!\n.wikipedia.org/wiki/%22_title_%22", enum64);
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "href" + "'", str5, "href");
        org.junit.Assert.assertNull(pigProgressable19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(spanArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi !" + "'", str34, "hi !");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(spanArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "href" + "'", str44, "href");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "opennlp / en - sent . bin" + "'", str45, "opennlp / en - sent . bin");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\" title \"" + "'", str46, "\" title \"");
        org.junit.Assert.assertNotNull(spanArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi !" + "'", str53, "hi !");
        org.junit.Assert.assertNotNull(spanArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "href" + "'", str60, "href");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi !" + "'", str61, "hi !");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "wikiobject" + "'", str62, "wikiobject");
    }

    @Test
    public void test4150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4150");
        java.net.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader wikipediaRecordReader3 = new pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader(uRL0, (long) 32, (long) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4151");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("wikiobject");
        boolean boolean2 = noLoopInPath1.isAsynchronous();
        pignlproc.evaluation.NoLoopInPath noLoopInPath3 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText4 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = null;
        safeTsvText4.setPigLogger(pigLogger5);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText7 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = mergeAsOpenNLPAnnotatedText7.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract9 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = checkAbstract9.outputSchema(schema10);
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = mergeAsOpenNLPAnnotatedText7.outputSchema(schema10);
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = safeTsvText4.outputSchema(schema12);
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = noLoopInPath3.outputSchema(schema12);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink15 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.NoLoopInPath noLoopInPath16 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText17 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger18 = null;
        safeTsvText17.setPigLogger(pigLogger18);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText20 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable21 = mergeAsOpenNLPAnnotatedText20.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract22 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = checkAbstract22.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = mergeAsOpenNLPAnnotatedText20.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = safeTsvText17.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = noLoopInPath16.outputSchema(schema25);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag28 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText29 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = null;
        safeTsvText29.setPigLogger(pigLogger30);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText32 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable33 = mergeAsOpenNLPAnnotatedText32.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract34 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = checkAbstract34.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = mergeAsOpenNLPAnnotatedText32.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = safeTsvText29.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = aggregateTextBag28.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = noLoopInPath16.outputSchema(schema37);
        pignlproc.evaluation.CheckAbstract checkAbstract41 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum43 = null;
        checkAbstract41.warn("http://.wikipedia.org/wiki/hi%21", enum43);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger45 = null;
        checkAbstract41.setPigLogger(pigLogger45);
        checkAbstract41.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText48 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger49 = null;
        safeTsvText48.setPigLogger(pigLogger49);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText51 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable52 = mergeAsOpenNLPAnnotatedText51.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract53 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = checkAbstract53.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = mergeAsOpenNLPAnnotatedText51.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = safeTsvText48.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = checkAbstract41.outputSchema(schema57);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = noLoopInPath16.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = sentencesWithLink15.outputSchema(schema59);
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = noLoopInPath3.outputSchema(schema59);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = noLoopInPath1.outputSchema(schema61);
        java.lang.Enum enum64 = null;
        noLoopInPath1.warn("\"title\"\n\n", enum64);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable66 = null;
        noLoopInPath1.setReporter(pigProgressable66);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList68 = noLoopInPath1.getArgToFuncMapping();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(pigProgressable8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(pigProgressable21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(pigProgressable33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(pigProgressable52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(funcSpecList68);
    }

    @Test
    public void test4152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4152");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"\n");
    }

    @Test
    public void test4153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4153");
        java.lang.String str1 = pignlproc.evaluation.SafeTsvText.escape("\"\"\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"\"\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"\"\"\"\"\"\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"\"\"\"\"\"\"" + "'", str1, "\"\"\"\"\"\"\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"\"\"\"\"\"\"");
    }

    @Test
    public void test4154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4154");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (byte) 1, (-1), "wikiobject", "href");
        java.lang.String str5 = annotation4.label;
        int int6 = annotation4.begin;
        int int7 = annotation4.end;
        java.lang.String str8 = annotation4.value;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "wikiobject" + "'", str5, "wikiobject");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "href" + "'", str8, "href");
    }

    @Test
    public void test4155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4155");
        java.lang.String[] strArray1 = new java.lang.String[] { "opennlp/en-sent.bin" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String str5 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "");
        java.lang.String str7 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "http://.wikipedia.org/wiki/hi%21");
        java.lang.String str9 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "opennlp/en-sent.bin");
        java.lang.String str11 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "http://http://hi!\n.wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin");
        java.lang.String str13 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21");
        java.lang.String str15 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "\"titlehref\"");
        java.lang.String str17 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "\" http : // . wikipedia . org / wiki / hi % 21 \"");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "opennlp/en-sent.bin" + "'", str5, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "opennlp/en-sent.bin" + "'", str7, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "opennlp/en-sent.bin" + "'", str9, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "opennlp/en-sent.bin" + "'", str11, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "opennlp/en-sent.bin" + "'", str13, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "opennlp/en-sent.bin" + "'", str15, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "opennlp/en-sent.bin" + "'", str17, "opennlp/en-sent.bin");
    }

    @Test
    public void test4156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4156");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"\n");
    }

    @Test
    public void test4157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4157");
        java.lang.String[] strArray1 = new java.lang.String[] { "opennlp/en-sent.bin" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String str5 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "");
        java.lang.String str7 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        java.lang.String str9 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "hi !");
        java.lang.String str11 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21href");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "opennlp/en-sent.bin" + "'", str5, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "opennlp/en-sent.bin" + "'", str7, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "opennlp/en-sent.bin" + "'", str9, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "opennlp/en-sent.bin" + "'", str11, "opennlp/en-sent.bin");
    }

    @Test
    public void test4158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4158");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("\"\"\"hi!\"\" \"\n");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        mergeAsOpenNLPAnnotatedText1.setPigLogger(pigLogger2);
    }

    @Test
    public void test4159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4159");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("http://\"title\".wikipedia.org/wiki/%22hi%21%22", "\"http://http://\"\"title\"\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21\"", "\"\"\" http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 \"\"\"");
        org.apache.hadoop.fs.Path path5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = uriUriNTriplesStorer3.relToAbsPathForStoreLocation("\"\"\"\"\"\"\"http://http://hi! .wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin\"\"\"\"\"\"\"", path5);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"\"\"\"\"\"\"http://http://hi! .wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin\"\"\"\"\"\"\" curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4160");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        sentencesWithLink0.setPigLogger(pigLogger2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        sentencesWithLink0.setReporter(pigProgressable4);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = sentencesWithLink0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = null;
        sentencesWithLink0.setReporter(pigProgressable7);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = null;
        sentencesWithLink0.setReporter(pigProgressable9);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        sentencesWithLink0.setPigLogger(pigLogger11);
        boolean boolean13 = sentencesWithLink0.isAsynchronous();
        java.lang.Enum enum15 = null;
        sentencesWithLink0.warn("\"http://http://\"\"title\"\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21\"", enum15);
        sentencesWithLink0.progress();
        boolean boolean18 = sentencesWithLink0.isAsynchronous();
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNull(pigLogger6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test4161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4161");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("\"titlehref\"");
    }

    @Test
    public void test4162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4162");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str2 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.Annotation annotation7 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation12 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int13 = annotation12.end;
        int int14 = annotation12.begin;
        pignlproc.markup.Annotation[] annotationArray15 = new pignlproc.markup.Annotation[] { annotation7, annotation12 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList16 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList16, annotationArray15);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser18 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList19 = annotatingMarkupParser18.getHeaders();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser18.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser18.getHeaderAnnotations();
        java.lang.String str22 = annotatingMarkupParser18.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser23 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList24 = annotatingMarkupParser23.getHeaders();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser23.getHeaders();
        java.lang.Appendable appendable26 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable27 = annotatingMarkupParser23.new CountingAppendable(appendable26);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable28 = annotatingMarkupParser18.new CountingAppendable((java.lang.Appendable) countingAppendable27);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser29 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList30 = annotatingMarkupParser29.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel32 = annotatingMarkupParser29.makeWikiModel("title");
        annotatingMarkupParser0.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList16, (java.lang.Appendable) countingAppendable27, (info.bliki.wiki.model.IWikiModel) wikiModel32);
        java.util.List<pignlproc.markup.Annotation> annotationList34 = annotatingMarkupParser0.getWikiLinkAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser35 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList36 = annotatingMarkupParser35.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList37 = annotatingMarkupParser35.getWikiLinkAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser38 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList39 = annotatingMarkupParser38.getHeaders();
        java.util.List<java.lang.String> strList40 = annotatingMarkupParser38.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList41 = annotatingMarkupParser38.getHeaderAnnotations();
        java.lang.String str42 = annotatingMarkupParser38.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser43 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList44 = annotatingMarkupParser43.getHeaders();
        java.util.List<java.lang.String> strList45 = annotatingMarkupParser43.getHeaders();
        java.lang.Appendable appendable46 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable47 = annotatingMarkupParser43.new CountingAppendable(appendable46);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable48 = annotatingMarkupParser38.new CountingAppendable((java.lang.Appendable) countingAppendable47);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable49 = annotatingMarkupParser35.new CountingAppendable((java.lang.Appendable) countingAppendable48);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable50 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable49);
        java.util.List<java.lang.String> strList51 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel53 = annotatingMarkupParser0.makeWikiModel("http://\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/href\".wikipedia.org/wiki/%22_opennlp_%2F_en_-_sent_._bin_%22");
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(annotationArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(annotationList30);
        org.junit.Assert.assertNotNull(wikiModel32);
        org.junit.Assert.assertNotNull(annotationList34);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(annotationList37);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(annotationList41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(wikiModel53);
    }

    @Test
    public void test4163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4163");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("http://\"title\"\n.wikipedia.org/wiki/", "http://http://.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org/wiki/http%3A%2F%2F%22hi%21%22%0A.wikipedia.org%2Fwiki%2F%2522hi%2521_%2522");
        org.apache.pig.Expression expression3 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression3);
    }

    @Test
    public void test4164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4164");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("\"\"", "\"hi!\"\n\n", "\"title\"");
        org.apache.pig.Expression expression4 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression4);
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = uriUriNTriplesLoader3.getSchema("\"hi!\"\n", job7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        java.lang.String[] strArray11 = uriUriNTriplesLoader3.getPartitionKeys("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", job10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple12 = uriUriNTriplesLoader3.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema8);
        org.junit.Assert.assertNull(strArray11);
    }

    @Test
    public void test4165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4165");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("opennlp/en-sent.bin", "\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"\n", "\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/%22title%22href\"");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer7 = new pignlproc.storage.UriUriNTriplesStorer("http://\" title \".wikipedia.org/wiki/", "http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href\n", "\"\"\"hi!\"\" \"\n\n");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader10 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job12 = null;
        org.apache.pig.ResourceSchema resourceSchema13 = uriStringLiteralNTriplesLoader10.getSchema("http://.wikipedia.org/wiki/hi%21", job12);
        org.apache.hadoop.mapreduce.InputFormat inputFormat14 = uriStringLiteralNTriplesLoader10.getInputFormat();
        org.apache.hadoop.mapreduce.Job job16 = null;
        org.apache.pig.ResourceSchema resourceSchema17 = uriStringLiteralNTriplesLoader10.getSchema("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21", job16);
        org.apache.hadoop.mapreduce.Job job19 = null;
        org.apache.pig.ResourceSchema resourceSchema20 = uriStringLiteralNTriplesLoader10.getSchema("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", job19);
        uriUriNTriplesStorer7.checkSchema(resourceSchema20);
        uriStringLiteralNTriplesStorer3.checkSchema(resourceSchema20);
        org.apache.hadoop.mapreduce.OutputFormat outputFormat23 = uriStringLiteralNTriplesStorer3.getOutputFormat();
        org.junit.Assert.assertNotNull(resourceSchema13);
        org.junit.Assert.assertNotNull(inputFormat14);
        org.junit.Assert.assertNotNull(resourceSchema17);
        org.junit.Assert.assertNotNull(resourceSchema20);
        org.junit.Assert.assertNotNull(outputFormat23);
    }

    @Test
    public void test4166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4166");
        java.lang.String str1 = pignlproc.evaluation.SafeTsvText.escape("\"http://http://hi! .wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin\"\n\n");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"\"\"http://http://hi! .wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin\"\"  \"" + "'", str1, "\"\"\"http://http://hi! .wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin\"\"  \"");
    }

    @Test
    public void test4167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4167");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel3 = annotatingMarkupParser0.makeWikiModel("title");
        java.util.List<pignlproc.markup.Annotation> annotationList4 = annotatingMarkupParser0.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser0.getParagraphAnnotations();
        boolean boolean6 = annotatingMarkupParser0.noLinks();
        java.lang.String str8 = annotatingMarkupParser0.parse("\"opennlp / en - sent . bin\"");
        boolean boolean9 = annotatingMarkupParser0.noLinks();
        info.bliki.htmlcleaner.TagNode tagNode10 = null;
        info.bliki.wiki.model.ImageFormat imageFormat11 = null;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser12 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser12.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList14 = annotatingMarkupParser12.getWikiLinkAnnotations();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser12.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel17 = annotatingMarkupParser12.makeWikiModel("\"hi!\"\n");
        java.lang.String str19 = annotatingMarkupParser12.parse("http://.wikipedia.org/wiki/");
        java.lang.String str21 = annotatingMarkupParser12.parse("http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser22 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser22.getHeaders();
        java.util.List<java.lang.String> strList24 = annotatingMarkupParser22.getHeaders();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser22.getHeaders();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser26 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList27 = annotatingMarkupParser26.getHeaders();
        java.util.List<java.lang.String> strList28 = annotatingMarkupParser26.getHeaders();
        java.util.List<java.lang.String> strList29 = annotatingMarkupParser26.getHeaders();
        java.util.List<java.lang.String> strList30 = annotatingMarkupParser26.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel32 = annotatingMarkupParser26.makeWikiModel("opennlp / en - sent . bin");
        info.bliki.wiki.model.WikiModel wikiModel34 = annotatingMarkupParser26.makeWikiModel("\"hi!\"");
        java.util.List<pignlproc.markup.Annotation> annotationList35 = annotatingMarkupParser26.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser37 = new pignlproc.markup.AnnotatingMarkupParser("\"title\"");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser38 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList39 = annotatingMarkupParser38.getHeaders();
        java.util.List<java.lang.String> strList40 = annotatingMarkupParser38.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList41 = annotatingMarkupParser38.getHeaderAnnotations();
        java.lang.String str42 = annotatingMarkupParser38.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser43 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList44 = annotatingMarkupParser43.getHeaders();
        java.util.List<java.lang.String> strList45 = annotatingMarkupParser43.getHeaders();
        java.lang.Appendable appendable46 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable47 = annotatingMarkupParser43.new CountingAppendable(appendable46);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable48 = annotatingMarkupParser38.new CountingAppendable((java.lang.Appendable) countingAppendable47);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser49 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList50 = annotatingMarkupParser49.getHeaders();
        java.util.List<java.lang.String> strList51 = annotatingMarkupParser49.getHeaders();
        java.lang.Appendable appendable52 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable53 = annotatingMarkupParser49.new CountingAppendable(appendable52);
        countingAppendable53.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable56 = annotatingMarkupParser38.new CountingAppendable((java.lang.Appendable) countingAppendable53);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable57 = annotatingMarkupParser37.new CountingAppendable((java.lang.Appendable) countingAppendable56);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser58 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList59 = annotatingMarkupParser58.getHeaders();
        java.util.List<java.lang.String> strList60 = annotatingMarkupParser58.getHeaders();
        java.lang.String str62 = annotatingMarkupParser58.parse("\"title\"");
        info.bliki.wiki.model.WikiModel wikiModel64 = annotatingMarkupParser58.makeWikiModel("\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"");
        info.bliki.wiki.model.WikiModel wikiModel66 = annotatingMarkupParser58.makeWikiModel("http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href");
        annotatingMarkupParser22.nodesToText(annotationList35, (java.lang.Appendable) countingAppendable56, (info.bliki.wiki.model.IWikiModel) wikiModel66);
        int int68 = countingAppendable56.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable69 = annotatingMarkupParser12.new CountingAppendable((java.lang.Appendable) countingAppendable56);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser70 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList71 = annotatingMarkupParser70.getHeaders();
        java.util.List<java.lang.String> strList72 = annotatingMarkupParser70.getHeaders();
        java.util.List<java.lang.String> strList73 = annotatingMarkupParser70.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel75 = annotatingMarkupParser70.makeWikiModel("\"hi! \"");
        java.lang.String str77 = annotatingMarkupParser70.parse("http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21");
        info.bliki.wiki.model.WikiModel wikiModel79 = annotatingMarkupParser70.makeWikiModel("http://\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/href\".wikipedia.org/wiki/%22_opennlp_%2F_en_-_sent_._bin_%22");
        // The following exception was thrown during execution in test generation
        try {
            annotatingMarkupParser0.imageNodeToText(tagNode10, imageFormat11, (java.lang.Appendable) countingAppendable56, (info.bliki.wiki.model.IWikiModel) wikiModel79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(wikiModel3);
        org.junit.Assert.assertNotNull(annotationList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"opennlp / en - sent . bin\"\n" + "'", str8, "\"opennlp / en - sent . bin\"\n");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(annotationList14);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(wikiModel17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "http://.wikipedia.org/wiki/\n" + "'", str19, "http://.wikipedia.org/wiki/\n");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22\n" + "'", str21, "http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22\n");
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(wikiModel32);
        org.junit.Assert.assertNotNull(wikiModel34);
        org.junit.Assert.assertNotNull(annotationList35);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(annotationList41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "\"title\"\n" + "'", str62, "\"title\"\n");
        org.junit.Assert.assertNotNull(wikiModel64);
        org.junit.Assert.assertNotNull(wikiModel66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNotNull(wikiModel75);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21\n" + "'", str77, "http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21\n");
        org.junit.Assert.assertNotNull(wikiModel79);
    }

    @Test
    public void test4168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4168");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        java.lang.String[] strArray5 = uriStringLiteralNTriplesLoader2.getPartitionKeys("http://http://\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\".wikipedia.org/wiki/%22%22%22opennlp_%2F_en_-_sent_._bin%22%22%22.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org%2Fwiki%2Fhi_%2521", job4);
        org.junit.Assert.assertNull(strArray5);
    }

    @Test
    public void test4169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4169");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract3 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum5 = null;
        checkAbstract3.warn("http://.wikipedia.org/wiki/hi%21", enum5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        checkAbstract3.setPigLogger(pigLogger7);
        checkAbstract3.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText10 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        safeTsvText10.setPigLogger(pigLogger11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = mergeAsOpenNLPAnnotatedText13.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract15.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = safeTsvText10.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract3.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = concatTextBag2.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = sentencesWithLink0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = sentencesWithLink0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable24 = null;
        sentencesWithLink0.setReporter(pigProgressable24);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger26 = sentencesWithLink0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable27 = null;
        sentencesWithLink0.setReporter(pigProgressable27);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger29 = sentencesWithLink0.getPigLogger();
        org.junit.Assert.assertNull(pigProgressable14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(pigLogger23);
        org.junit.Assert.assertNull(pigLogger26);
        org.junit.Assert.assertNull(pigLogger29);
    }

    @Test
    public void test4170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4170");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        org.apache.pig.data.Tuple tuple3 = null;
        java.lang.Boolean boolean4 = checkAbstract0.exec(tuple3);
        checkAbstract0.progress();
        checkAbstract0.progress();
        org.apache.commons.logging.Log log7 = checkAbstract0.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = checkAbstract0.getPigLogger();
        pignlproc.evaluation.ConcatTextBag concatTextBag10 = new pignlproc.evaluation.ConcatTextBag("opennlp/en-sent.bin");
        org.apache.pig.data.Tuple tuple11 = null;
        java.lang.String str12 = concatTextBag10.exec(tuple11);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable13 = null;
        concatTextBag10.setReporter(pigProgressable13);
        java.lang.Enum enum16 = null;
        concatTextBag10.warn("hi !\n\n", enum16);
        org.apache.pig.data.Tuple tuple18 = null;
        java.lang.String str19 = concatTextBag10.exec(tuple18);
        pignlproc.evaluation.NoLoopInPath noLoopInPath21 = new pignlproc.evaluation.NoLoopInPath("\"hi! \"");
        org.apache.pig.data.Tuple tuple22 = null;
        java.lang.Boolean boolean23 = noLoopInPath21.exec(tuple22);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink24 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        sentencesWithLink24.setPigLogger(pigLogger25);
        sentencesWithLink24.finish();
        pignlproc.evaluation.SafeTsvText safeTsvText28 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum30 = null;
        safeTsvText28.warn("http://.wikipedia.org/wiki/hi%21", enum30);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable32 = safeTsvText28.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable33 = null;
        safeTsvText28.setReporter(pigProgressable33);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable35 = null;
        safeTsvText28.setReporter(pigProgressable35);
        boolean boolean37 = safeTsvText28.isAsynchronous();
        pignlproc.evaluation.NoLoopInPath noLoopInPath38 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText39 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger40 = null;
        safeTsvText39.setPigLogger(pigLogger40);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText42 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable43 = mergeAsOpenNLPAnnotatedText42.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract44 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = checkAbstract44.outputSchema(schema45);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = mergeAsOpenNLPAnnotatedText42.outputSchema(schema45);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = safeTsvText39.outputSchema(schema47);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = noLoopInPath38.outputSchema(schema47);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger50 = noLoopInPath38.getPigLogger();
        java.lang.reflect.Type type51 = noLoopInPath38.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath52 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText53 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger54 = null;
        safeTsvText53.setPigLogger(pigLogger54);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText56 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable57 = mergeAsOpenNLPAnnotatedText56.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract58 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = checkAbstract58.outputSchema(schema59);
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = mergeAsOpenNLPAnnotatedText56.outputSchema(schema59);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = safeTsvText53.outputSchema(schema61);
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = noLoopInPath52.outputSchema(schema61);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag64 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText65 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger66 = null;
        safeTsvText65.setPigLogger(pigLogger66);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText68 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable69 = mergeAsOpenNLPAnnotatedText68.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract70 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema71 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = checkAbstract70.outputSchema(schema71);
        org.apache.pig.impl.logicalLayer.schema.Schema schema73 = mergeAsOpenNLPAnnotatedText68.outputSchema(schema71);
        org.apache.pig.impl.logicalLayer.schema.Schema schema74 = safeTsvText65.outputSchema(schema73);
        org.apache.pig.impl.logicalLayer.schema.Schema schema75 = aggregateTextBag64.outputSchema(schema73);
        org.apache.pig.impl.logicalLayer.schema.Schema schema76 = noLoopInPath52.outputSchema(schema73);
        org.apache.pig.impl.logicalLayer.schema.Schema schema77 = noLoopInPath38.outputSchema(schema76);
        org.apache.pig.impl.logicalLayer.schema.Schema schema78 = safeTsvText28.outputSchema(schema77);
        org.apache.pig.impl.logicalLayer.schema.Schema schema79 = sentencesWithLink24.outputSchema(schema78);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText80 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable81 = mergeAsOpenNLPAnnotatedText80.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract82 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema83 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema84 = checkAbstract82.outputSchema(schema83);
        org.apache.pig.impl.logicalLayer.schema.Schema schema85 = mergeAsOpenNLPAnnotatedText80.outputSchema(schema83);
        org.apache.pig.impl.logicalLayer.schema.Schema schema86 = sentencesWithLink24.outputSchema(schema85);
        org.apache.pig.impl.logicalLayer.schema.Schema schema87 = noLoopInPath21.outputSchema(schema86);
        org.apache.pig.impl.logicalLayer.schema.Schema schema88 = concatTextBag10.outputSchema(schema87);
        org.apache.pig.impl.logicalLayer.schema.Schema schema89 = checkAbstract0.outputSchema(schema88);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + false + "'", boolean4, false);
        org.junit.Assert.assertNotNull(log7);
        org.junit.Assert.assertNull(pigLogger8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + boolean23 + "' != '" + true + "'", boolean23, true);
        org.junit.Assert.assertNull(pigProgressable32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(pigProgressable43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(pigLogger50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNull(pigProgressable57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(pigProgressable69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(pigProgressable81);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
    }

    @Test
    public void test4171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4171");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((int) (byte) -1, false);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = null;
        aggregateTextBag2.setReporter(pigProgressable3);
    }

    @Test
    public void test4172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4172");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum2 = null;
        safeTsvText0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = safeTsvText0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        safeTsvText0.setReporter(pigProgressable5);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink7 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList8 = sentencesWithLink7.getArgToFuncMapping();
        pignlproc.evaluation.CheckAbstract checkAbstract9 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum11 = null;
        checkAbstract9.warn("http://.wikipedia.org/wiki/hi%21", enum11);
        java.lang.Enum enum14 = null;
        checkAbstract9.warn("hi !", enum14);
        pignlproc.evaluation.NoLoopInPath noLoopInPath16 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText17 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger18 = null;
        safeTsvText17.setPigLogger(pigLogger18);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText20 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable21 = mergeAsOpenNLPAnnotatedText20.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract22 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = checkAbstract22.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = mergeAsOpenNLPAnnotatedText20.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = safeTsvText17.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = noLoopInPath16.outputSchema(schema25);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag28 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText29 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = null;
        safeTsvText29.setPigLogger(pigLogger30);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText32 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable33 = mergeAsOpenNLPAnnotatedText32.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract34 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = checkAbstract34.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = mergeAsOpenNLPAnnotatedText32.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = safeTsvText29.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = aggregateTextBag28.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = noLoopInPath16.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = checkAbstract9.outputSchema(schema40);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = sentencesWithLink7.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = safeTsvText0.outputSchema(schema41);
        pignlproc.evaluation.CheckAbstract checkAbstract44 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = checkAbstract44.outputSchema(schema45);
        org.apache.pig.data.Tuple tuple47 = null;
        java.lang.Boolean boolean48 = checkAbstract44.exec(tuple47);
        java.lang.Enum enum50 = null;
        checkAbstract44.warn("href", enum50);
        checkAbstract44.finish();
        pignlproc.evaluation.SafeTsvText safeTsvText53 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger54 = null;
        safeTsvText53.setPigLogger(pigLogger54);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText56 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable57 = mergeAsOpenNLPAnnotatedText56.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract58 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = checkAbstract58.outputSchema(schema59);
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = mergeAsOpenNLPAnnotatedText56.outputSchema(schema59);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = safeTsvText53.outputSchema(schema61);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText63 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray65 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList66 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList66, spanArray65);
        java.lang.String str68 = mergeAsOpenNLPAnnotatedText63.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList66);
        pignlproc.evaluation.ConcatTextBag concatTextBag70 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract71 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum73 = null;
        checkAbstract71.warn("http://.wikipedia.org/wiki/hi%21", enum73);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger75 = null;
        checkAbstract71.setPigLogger(pigLogger75);
        checkAbstract71.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText78 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger79 = null;
        safeTsvText78.setPigLogger(pigLogger79);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText81 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable82 = mergeAsOpenNLPAnnotatedText81.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract83 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema84 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema85 = checkAbstract83.outputSchema(schema84);
        org.apache.pig.impl.logicalLayer.schema.Schema schema86 = mergeAsOpenNLPAnnotatedText81.outputSchema(schema84);
        org.apache.pig.impl.logicalLayer.schema.Schema schema87 = safeTsvText78.outputSchema(schema86);
        org.apache.pig.impl.logicalLayer.schema.Schema schema88 = checkAbstract71.outputSchema(schema87);
        org.apache.pig.impl.logicalLayer.schema.Schema schema89 = concatTextBag70.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema90 = mergeAsOpenNLPAnnotatedText63.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema91 = safeTsvText53.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema92 = checkAbstract44.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema93 = safeTsvText0.outputSchema(schema92);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList94 = safeTsvText0.getArgToFuncMapping();
        boolean boolean95 = safeTsvText0.isAsynchronous();
        org.apache.pig.data.Tuple tuple96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str97 = safeTsvText0.exec(tuple96);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in SafeTsvText");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNull(funcSpecList8);
        org.junit.Assert.assertNull(pigProgressable21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(pigProgressable33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertEquals("'" + boolean48 + "' != '" + false + "'", boolean48, false);
        org.junit.Assert.assertNull(pigProgressable57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(spanArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "href" + "'", str68, "href");
        org.junit.Assert.assertNull(pigProgressable82);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNull(funcSpecList94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test4173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4173");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.data.Tuple tuple1 = null;
        java.lang.Boolean boolean2 = checkAbstract0.exec(tuple1);
        java.lang.reflect.Type type3 = checkAbstract0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = checkAbstract0.getPigLogger();
        org.apache.pig.data.Tuple tuple5 = null;
        java.lang.Boolean boolean6 = checkAbstract0.exec(tuple5);
        org.junit.Assert.assertEquals("'" + boolean2 + "' != '" + false + "'", boolean2, false);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + false + "'", boolean6, false);
    }

    @Test
    public void test4174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4174");
        java.lang.String[] strArray1 = new java.lang.String[] { "opennlp/en-sent.bin" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String str5 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "");
        java.lang.String str7 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "http://.wikipedia.org/wiki/hi%21");
        java.lang.String str9 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "href");
        java.lang.String str11 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "hi!");
        java.lang.String str13 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "http : // \"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\" . wikipedia . org / wiki / href");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "opennlp/en-sent.bin" + "'", str5, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "opennlp/en-sent.bin" + "'", str7, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "opennlp/en-sent.bin" + "'", str9, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "opennlp/en-sent.bin" + "'", str11, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "opennlp/en-sent.bin" + "'", str13, "opennlp/en-sent.bin");
    }

    @Test
    public void test4175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4175");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        org.apache.pig.data.Tuple tuple2 = null;
        java.lang.String str3 = concatTextBag1.exec(tuple2);
        pignlproc.evaluation.NoLoopInPath noLoopInPath4 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText5 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        safeTsvText5.setPigLogger(pigLogger6);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText8 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = mergeAsOpenNLPAnnotatedText8.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract10 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = checkAbstract10.outputSchema(schema11);
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = mergeAsOpenNLPAnnotatedText8.outputSchema(schema11);
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = safeTsvText5.outputSchema(schema13);
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = noLoopInPath4.outputSchema(schema13);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag16 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText17 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger18 = null;
        safeTsvText17.setPigLogger(pigLogger18);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText20 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable21 = mergeAsOpenNLPAnnotatedText20.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract22 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = checkAbstract22.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = mergeAsOpenNLPAnnotatedText20.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = safeTsvText17.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = aggregateTextBag16.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = noLoopInPath4.outputSchema(schema25);
        pignlproc.evaluation.CheckAbstract checkAbstract29 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum31 = null;
        checkAbstract29.warn("http://.wikipedia.org/wiki/hi%21", enum31);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger33 = null;
        checkAbstract29.setPigLogger(pigLogger33);
        checkAbstract29.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText36 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger37 = null;
        safeTsvText36.setPigLogger(pigLogger37);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText39 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable40 = mergeAsOpenNLPAnnotatedText39.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract41 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = checkAbstract41.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = mergeAsOpenNLPAnnotatedText39.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = safeTsvText36.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = checkAbstract29.outputSchema(schema45);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = noLoopInPath4.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = concatTextBag1.outputSchema(schema47);
        concatTextBag1.progress();
        org.apache.pig.data.Tuple tuple50 = null;
        java.lang.String str51 = concatTextBag1.exec(tuple50);
        concatTextBag1.progress();
        java.lang.Enum enum54 = null;
        concatTextBag1.warn("\"\"\"hi!\"\" \"", enum54);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable56 = concatTextBag1.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger57 = concatTextBag1.getPigLogger();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(pigProgressable9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(pigProgressable21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(pigProgressable40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNull(pigProgressable56);
        org.junit.Assert.assertNull(pigLogger57);
    }

    @Test
    public void test4176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4176");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22");
        java.lang.reflect.Type type2 = mergeAsOpenNLPAnnotatedText1.getReturnType();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray6 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList7 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList7, spanArray6);
        java.lang.String str9 = mergeAsOpenNLPAnnotatedText4.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList7);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = null;
        mergeAsOpenNLPAnnotatedText4.setPigLogger(pigLogger10);
        boolean boolean12 = mergeAsOpenNLPAnnotatedText4.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText14 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray16 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList17 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList17, spanArray16);
        java.lang.String str19 = mergeAsOpenNLPAnnotatedText14.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList17);
        java.lang.String str20 = mergeAsOpenNLPAnnotatedText4.merge("opennlp/en-sent.bin", (java.util.List<opennlp.tools.util.Span>) spanList17);
        java.lang.String str21 = mergeAsOpenNLPAnnotatedText1.merge("http://http://hi!\n.wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin", (java.util.List<opennlp.tools.util.Span>) spanList17);
        java.lang.Enum enum23 = null;
        mergeAsOpenNLPAnnotatedText1.warn("\"\"\"hi!\"\" \"", enum23);
        java.lang.Enum enum26 = null;
        mergeAsOpenNLPAnnotatedText1.warn("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22href", enum26);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(spanArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi !" + "'", str9, "hi !");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(spanArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "href" + "'", str19, "href");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "opennlp / en - sent . bin" + "'", str20, "opennlp / en - sent . bin");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "http : // http : // hi ! . wikipedia . org / wiki / % 22 _ title _ % 22 . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin" + "'", str21, "http : // http : // hi ! . wikipedia . org / wiki / % 22 _ title _ % 22 . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin");
    }

    @Test
    public void test4177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4177");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("\"\"\"\"\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"\"\"\" \"", "\"title\"href", "\"http://http://hi! .wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin\"\n\n");
    }

    @Test
    public void test4178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4178");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("http://\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\".wikipedia.org/wiki/href", "", "opennlp/en-sent.bin");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader7 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.Job job9 = null;
        org.apache.pig.ResourceSchema resourceSchema10 = uriUriNTriplesLoader7.getSchema("", job9);
        org.apache.hadoop.mapreduce.Job job12 = null;
        org.apache.pig.ResourceStatistics resourceStatistics13 = uriUriNTriplesLoader7.getStatistics("opennlp/en-sent.bin", job12);
        org.apache.hadoop.mapreduce.Job job15 = null;
        org.apache.pig.ResourceSchema resourceSchema16 = uriUriNTriplesLoader7.getSchema("http://\"title\".wikipedia.org/wiki/%22hi%21%22", job15);
        uriUriNTriplesStorer3.checkSchema(resourceSchema16);
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer19 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href\n.wikipedia.org/wiki/%22%22");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer21 = new pignlproc.storage.UriUriNTriplesStorer("hi !\n");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat22 = uriUriNTriplesStorer21.getOutputFormat();
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader24 = new pignlproc.storage.ParsingWikipediaLoader("href");
        org.apache.hadoop.mapreduce.Job job26 = null;
        org.apache.pig.ResourceSchema resourceSchema27 = parsingWikipediaLoader24.getSchema("opennlp/en-sent.bin", job26);
        uriUriNTriplesStorer21.checkSchema(resourceSchema27);
        uriStringLiteralNTriplesStorer19.checkSchema(resourceSchema27);
        uriUriNTriplesStorer3.checkSchema(resourceSchema27);
        org.junit.Assert.assertNotNull(resourceSchema10);
        org.junit.Assert.assertNull(resourceStatistics13);
        org.junit.Assert.assertNotNull(resourceSchema16);
        org.junit.Assert.assertNotNull(outputFormat22);
        org.junit.Assert.assertNotNull(resourceSchema27);
    }

    @Test
    public void test4179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4179");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("hi !");
        org.apache.pig.Expression expression2 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression2);
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceStatistics resourceStatistics6 = parsingWikipediaLoader1.getStatistics("hi!\n", job5);
        org.apache.hadoop.mapreduce.Job job8 = null;
        // The following exception was thrown during execution in test generation
        try {
            parsingWikipediaLoader1.setLocation("\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/hrefwikiobject\"\"\"\"\"\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"\"\"\"\"\"wikiobject\"\"hi!\"\" wikiobject wikiobjectopennlp/en-sent.binwikiobjecthttp://hi! .wikipedia.org/wiki/opennlp_%2F_en_-_sent_._binwikiobjecthttp://http://\"\"title\"\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21wikiobjecthttp://\"\"http://.wikipedia.org/wiki/hi%21\"\".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22wikiobject\"\"opennlp / en - sent . bin\"\"wikiobject\"\"\"\"\"", job8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Illegal character in scheme name at index 0: \"http://%22%22opennlp%20/%20en%20-%20sent%20.%20bin%22%22.wikipedia.org/wiki/hrefwikiobject%22%22%22%22%22%22http:/hi!.wikipedia.org/wiki/%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22%22%22%22wikiobject%22%22hi!%22%22%20wikiobject%20wikiobjectopennlp/en-sent.binwikiobjecthttp:/hi!%20.wikipedia.org/wiki/opennlp_%252F_en_-_sent_._binwikiobjecthttp:/http:/%22%22title%22%22.wikipedia.org/wiki/%2522hi%2521%2522.wikipedia.org/wiki/hi%2521wikiobjecthttp:/%22%22http:/.wikipedia.org/wiki/hi%2521%22%22.wikipedia.org/wiki/%2522%2522%2522http%253A%252F%252Fhi_%2521_.wikipedia.org%252Fwiki%252Fhttp%25253A%25252F%25252Fhttp%25253A%25252F%25252F.wikipedia.org%25252Fwiki%25252Fhi%25252521%25250A.wikipedia.org%25252Fwiki%25252F%25252522title%25252522%2522%2522%2522wikiobject%22%22opennlp%20/%20en%20-%20sent%20.%20bin%22%22wikiobject%22%22%22%22%22");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics6);
    }

    @Test
    public void test4180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4180");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser2 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser2.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList4 = annotatingMarkupParser2.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser2.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser6 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser6.getHeaders();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser6.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList9 = annotatingMarkupParser6.getHeaderAnnotations();
        java.lang.String str10 = annotatingMarkupParser6.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser11 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser11.getHeaders();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser11.getHeaders();
        java.lang.Appendable appendable14 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable15 = annotatingMarkupParser11.new CountingAppendable(appendable14);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable16 = annotatingMarkupParser6.new CountingAppendable((java.lang.Appendable) countingAppendable15);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser17 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser17.getHeaderAnnotations();
        java.lang.String str19 = annotatingMarkupParser17.getRedirect();
        pignlproc.markup.Annotation annotation24 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation29 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int30 = annotation29.end;
        int int31 = annotation29.begin;
        pignlproc.markup.Annotation[] annotationArray32 = new pignlproc.markup.Annotation[] { annotation24, annotation29 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList33 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList33, annotationArray32);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser35 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList36 = annotatingMarkupParser35.getHeaders();
        java.util.List<java.lang.String> strList37 = annotatingMarkupParser35.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList38 = annotatingMarkupParser35.getHeaderAnnotations();
        java.lang.String str39 = annotatingMarkupParser35.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser40 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList41 = annotatingMarkupParser40.getHeaders();
        java.util.List<java.lang.String> strList42 = annotatingMarkupParser40.getHeaders();
        java.lang.Appendable appendable43 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable44 = annotatingMarkupParser40.new CountingAppendable(appendable43);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable45 = annotatingMarkupParser35.new CountingAppendable((java.lang.Appendable) countingAppendable44);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser46 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList47 = annotatingMarkupParser46.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel49 = annotatingMarkupParser46.makeWikiModel("title");
        annotatingMarkupParser17.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList33, (java.lang.Appendable) countingAppendable44, (info.bliki.wiki.model.IWikiModel) wikiModel49);
        annotatingMarkupParser0.nodesToText(annotationList5, (java.lang.Appendable) countingAppendable16, (info.bliki.wiki.model.IWikiModel) wikiModel49);
        boolean boolean52 = annotatingMarkupParser0.noLinks();
        info.bliki.wiki.model.WikiModel wikiModel54 = annotatingMarkupParser0.makeWikiModel("\"http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21\"");
        java.util.List<pignlproc.markup.Annotation> annotationList55 = annotatingMarkupParser0.getHeaderAnnotations();
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(annotationList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(annotationList9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNotNull(annotationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(annotationList38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(annotationList47);
        org.junit.Assert.assertNotNull(wikiModel49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wikiModel54);
        org.junit.Assert.assertNotNull(annotationList55);
    }

    @Test
    public void test4181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4181");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("", false);
        pignlproc.evaluation.NoLoopInPath noLoopInPath3 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText4 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = null;
        safeTsvText4.setPigLogger(pigLogger5);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText7 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = mergeAsOpenNLPAnnotatedText7.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract9 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = checkAbstract9.outputSchema(schema10);
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = mergeAsOpenNLPAnnotatedText7.outputSchema(schema10);
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = safeTsvText4.outputSchema(schema12);
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = noLoopInPath3.outputSchema(schema12);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag15 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText16 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger17 = null;
        safeTsvText16.setPigLogger(pigLogger17);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText19 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable20 = mergeAsOpenNLPAnnotatedText19.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract21 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = checkAbstract21.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = mergeAsOpenNLPAnnotatedText19.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = safeTsvText16.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = aggregateTextBag15.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = noLoopInPath3.outputSchema(schema24);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger28 = null;
        noLoopInPath3.setPigLogger(pigLogger28);
        org.apache.pig.data.Tuple tuple30 = null;
        java.lang.Boolean boolean31 = noLoopInPath3.exec(tuple30);
        org.apache.commons.logging.Log log32 = noLoopInPath3.getLogger();
        noLoopInPath3.progress();
        pignlproc.evaluation.CheckAbstract checkAbstract34 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum36 = null;
        checkAbstract34.warn("http://.wikipedia.org/wiki/hi%21", enum36);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable38 = null;
        checkAbstract34.setReporter(pigProgressable38);
        java.lang.reflect.Type type40 = checkAbstract34.getReturnType();
        boolean boolean41 = checkAbstract34.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList42 = checkAbstract34.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger43 = null;
        checkAbstract34.setPigLogger(pigLogger43);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable45 = checkAbstract34.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger46 = checkAbstract34.getPigLogger();
        org.apache.commons.logging.Log log47 = checkAbstract34.getLogger();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText48 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray50 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList51 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList51, spanArray50);
        java.lang.String str53 = mergeAsOpenNLPAnnotatedText48.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList51);
        pignlproc.evaluation.ConcatTextBag concatTextBag55 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract56 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum58 = null;
        checkAbstract56.warn("http://.wikipedia.org/wiki/hi%21", enum58);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger60 = null;
        checkAbstract56.setPigLogger(pigLogger60);
        checkAbstract56.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText63 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger64 = null;
        safeTsvText63.setPigLogger(pigLogger64);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText66 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable67 = mergeAsOpenNLPAnnotatedText66.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract68 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema70 = checkAbstract68.outputSchema(schema69);
        org.apache.pig.impl.logicalLayer.schema.Schema schema71 = mergeAsOpenNLPAnnotatedText66.outputSchema(schema69);
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = safeTsvText63.outputSchema(schema71);
        org.apache.pig.impl.logicalLayer.schema.Schema schema73 = checkAbstract56.outputSchema(schema72);
        org.apache.pig.impl.logicalLayer.schema.Schema schema74 = concatTextBag55.outputSchema(schema73);
        org.apache.pig.impl.logicalLayer.schema.Schema schema75 = mergeAsOpenNLPAnnotatedText48.outputSchema(schema73);
        org.apache.pig.impl.logicalLayer.schema.Schema schema76 = checkAbstract34.outputSchema(schema75);
        org.apache.pig.impl.logicalLayer.schema.Schema schema77 = noLoopInPath3.outputSchema(schema76);
        org.apache.pig.impl.logicalLayer.schema.Schema schema78 = concatTextBag2.outputSchema(schema76);
        boolean boolean79 = concatTextBag2.isAsynchronous();
        org.junit.Assert.assertNull(pigProgressable8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(pigProgressable20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + true + "'", boolean31, true);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(funcSpecList42);
        org.junit.Assert.assertNull(pigProgressable45);
        org.junit.Assert.assertNull(pigLogger46);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(spanArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "href" + "'", str53, "href");
        org.junit.Assert.assertNull(pigProgressable67);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test4182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4182");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) '#', (int) (byte) 1, "\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\"", "hi !\n\nhref");
    }

    @Test
    public void test4183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4183");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("http://http://\"\"\"http://.wikipedia.org/wiki/hi%21\"\" \".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi%21.wikipedia.org%2Fwiki%2F%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22.wikipedia.org/wiki/wikiobject");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        mergeAsOpenNLPAnnotatedText1.setPigLogger(pigLogger2);
    }

    @Test
    public void test4184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4184");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = sentencesWithLink0.getPigLogger();
        java.lang.Enum enum3 = null;
        sentencesWithLink0.warn("opennlp / en - sent . bin", enum3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = null;
        sentencesWithLink0.setPigLogger(pigLogger5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        sentencesWithLink0.setPigLogger(pigLogger7);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = null;
        sentencesWithLink0.setReporter(pigProgressable9);
        org.junit.Assert.assertNull(pigLogger1);
    }

    @Test
    public void test4185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4185");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel3 = annotatingMarkupParser0.makeWikiModel("title");
        java.lang.String str5 = annotatingMarkupParser0.parse("hi!");
        java.util.List<pignlproc.markup.Annotation> annotationList6 = annotatingMarkupParser0.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList8 = annotatingMarkupParser0.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser9 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList10 = annotatingMarkupParser9.getHeaders();
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser9.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList12 = annotatingMarkupParser9.getHeaderAnnotations();
        java.lang.String str13 = annotatingMarkupParser9.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser14.getHeaders();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser14.getHeaders();
        java.lang.Appendable appendable17 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable18 = annotatingMarkupParser14.new CountingAppendable(appendable17);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable19 = annotatingMarkupParser9.new CountingAppendable((java.lang.Appendable) countingAppendable18);
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser9.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel22 = annotatingMarkupParser9.makeWikiModel("opennlp / en - sent . bin");
        java.lang.String str24 = annotatingMarkupParser9.parse("hi !\n");
        info.bliki.wiki.model.WikiModel wikiModel26 = annotatingMarkupParser9.makeWikiModel("http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21");
        java.util.List<pignlproc.markup.Annotation> annotationList27 = annotatingMarkupParser9.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList28 = annotatingMarkupParser9.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser30 = new pignlproc.markup.AnnotatingMarkupParser("http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21");
        java.util.List<pignlproc.markup.Annotation> annotationList31 = annotatingMarkupParser30.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser32 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList33 = annotatingMarkupParser32.getHeaders();
        java.util.List<java.lang.String> strList34 = annotatingMarkupParser32.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList35 = annotatingMarkupParser32.getHeaderAnnotations();
        java.lang.String str36 = annotatingMarkupParser32.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser37 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList38 = annotatingMarkupParser37.getHeaders();
        java.util.List<java.lang.String> strList39 = annotatingMarkupParser37.getHeaders();
        java.lang.Appendable appendable40 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable41 = annotatingMarkupParser37.new CountingAppendable(appendable40);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable42 = annotatingMarkupParser32.new CountingAppendable((java.lang.Appendable) countingAppendable41);
        info.bliki.wiki.model.WikiModel wikiModel44 = annotatingMarkupParser32.makeWikiModel("\"hi!\"\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser46 = new pignlproc.markup.AnnotatingMarkupParser("\"title\"");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser47 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList48 = annotatingMarkupParser47.getHeaders();
        java.util.List<java.lang.String> strList49 = annotatingMarkupParser47.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList50 = annotatingMarkupParser47.getHeaderAnnotations();
        java.lang.String str51 = annotatingMarkupParser47.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser52 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList53 = annotatingMarkupParser52.getHeaders();
        java.util.List<java.lang.String> strList54 = annotatingMarkupParser52.getHeaders();
        java.lang.Appendable appendable55 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable56 = annotatingMarkupParser52.new CountingAppendable(appendable55);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable57 = annotatingMarkupParser47.new CountingAppendable((java.lang.Appendable) countingAppendable56);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser58 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList59 = annotatingMarkupParser58.getHeaders();
        java.util.List<java.lang.String> strList60 = annotatingMarkupParser58.getHeaders();
        java.lang.Appendable appendable61 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable62 = annotatingMarkupParser58.new CountingAppendable(appendable61);
        countingAppendable62.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable65 = annotatingMarkupParser47.new CountingAppendable((java.lang.Appendable) countingAppendable62);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable66 = annotatingMarkupParser46.new CountingAppendable((java.lang.Appendable) countingAppendable65);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable67 = annotatingMarkupParser32.new CountingAppendable((java.lang.Appendable) countingAppendable65);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser68 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList69 = annotatingMarkupParser68.getHeaders();
        java.util.List<java.lang.String> strList70 = annotatingMarkupParser68.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList71 = annotatingMarkupParser68.getHeaderAnnotations();
        java.lang.String str72 = annotatingMarkupParser68.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser73 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList74 = annotatingMarkupParser73.getHeaders();
        java.util.List<java.lang.String> strList75 = annotatingMarkupParser73.getHeaders();
        java.lang.Appendable appendable76 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable77 = annotatingMarkupParser73.new CountingAppendable(appendable76);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable78 = annotatingMarkupParser68.new CountingAppendable((java.lang.Appendable) countingAppendable77);
        java.util.List<java.lang.String> strList79 = annotatingMarkupParser68.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel81 = annotatingMarkupParser68.makeWikiModel("opennlp / en - sent . bin");
        java.lang.String str83 = annotatingMarkupParser68.parse("hi !\n");
        info.bliki.wiki.model.WikiModel wikiModel85 = annotatingMarkupParser68.makeWikiModel("http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21");
        java.util.List<pignlproc.markup.Annotation> annotationList86 = annotatingMarkupParser68.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList87 = annotatingMarkupParser68.getParagraphAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel89 = annotatingMarkupParser68.makeWikiModel("http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522");
        annotatingMarkupParser9.nodesToText(annotationList31, (java.lang.Appendable) countingAppendable65, (info.bliki.wiki.model.IWikiModel) wikiModel89);
        countingAppendable65.currentPosition = 100;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable93 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable65);
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(wikiModel3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!\n" + "'", str5, "hi!\n");
        org.junit.Assert.assertNotNull(annotationList6);
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNotNull(annotationList8);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(annotationList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(wikiModel22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi !\n\n" + "'", str24, "hi !\n\n");
        org.junit.Assert.assertNotNull(wikiModel26);
        org.junit.Assert.assertNotNull(annotationList27);
        org.junit.Assert.assertNotNull(annotationList28);
        org.junit.Assert.assertNotNull(annotationList31);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(annotationList35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(wikiModel44);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(annotationList50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNotNull(annotationList71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNotNull(wikiModel81);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi !\n\n" + "'", str83, "hi !\n\n");
        org.junit.Assert.assertNotNull(wikiModel85);
        org.junit.Assert.assertNotNull(annotationList86);
        org.junit.Assert.assertNotNull(annotationList87);
        org.junit.Assert.assertNotNull(wikiModel89);
    }

    @Test
    public void test4186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4186");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((int) '4', true);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger3 = aggregateTextBag2.getPigLogger();
        org.junit.Assert.assertNull(pigLogger3);
    }

    @Test
    public void test4187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4187");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader3 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceStatistics resourceStatistics6 = parsingWikipediaLoader3.getStatistics("hi!", job5);
        org.apache.hadoop.mapreduce.Job job8 = null;
        org.apache.pig.ResourceSchema resourceSchema9 = parsingWikipediaLoader3.getSchema("hi!", job8);
        uriStringLiteralNTriplesStorer1.checkSchema(resourceSchema9);
        org.apache.pig.data.Tuple tuple11 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.putNext(tuple11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics6);
        org.junit.Assert.assertNotNull(resourceSchema9);
    }

    @Test
    public void test4188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4188");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"href");
        boolean boolean2 = concatTextBag1.isAsynchronous();
        org.apache.commons.logging.Log log3 = concatTextBag1.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        concatTextBag1.setReporter(pigProgressable4);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(log3);
    }

    @Test
    public void test4189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4189");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("wikiobject");
        org.apache.commons.logging.Log log2 = noLoopInPath1.getLogger();
        org.apache.pig.data.Tuple tuple3 = null;
        java.lang.Boolean boolean4 = noLoopInPath1.exec(tuple3);
        org.junit.Assert.assertNotNull(log2);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
    }

    @Test
    public void test4190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4190");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag1 = new pignlproc.evaluation.AggregateTextBag((int) (short) -1);
        org.apache.pig.data.Tuple tuple2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = aggregateTextBag1.exec(tuple2);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in AggregateTextBag");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4191");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("title");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("href", job3);
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader1.getLoadCaster();
        org.apache.pig.Expression expression6 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression6);
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNotNull(loadCaster5);
    }

    @Test
    public void test4192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4192");
        java.net.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader wikipediaRecordReader3 = new pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader(uRL0, (long) (byte) 0, (long) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4193");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriUriNTriplesStorer1.getOutputFormat();
        org.apache.hadoop.fs.Path path4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = uriUriNTriplesStorer1.relToAbsPathForStoreLocation("\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/href\"", path4);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/href\" curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat2);
    }

    @Test
    public void test4194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4194");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("title");
    }

    @Test
    public void test4195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4195");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        org.apache.commons.logging.Log log4 = sentencesWithLink0.getLogger();
        java.lang.reflect.Type type5 = sentencesWithLink0.getReturnType();
        java.lang.Enum enum7 = null;
        sentencesWithLink0.warn("\"title\"\n", enum7);
        java.lang.reflect.Type type9 = sentencesWithLink0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable10 = sentencesWithLink0.getReporter();
        java.lang.Enum enum12 = null;
        sentencesWithLink0.warn("", enum12);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = sentencesWithLink0.getPigLogger();
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNull(pigProgressable10);
        org.junit.Assert.assertNull(pigLogger14);
    }

    @Test
    public void test4196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4196");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        java.lang.String str15 = annotatingMarkupParser0.parse("hi !\n");
        info.bliki.wiki.model.WikiModel wikiModel17 = annotatingMarkupParser0.makeWikiModel("http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21");
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList19 = annotatingMarkupParser0.getParagraphAnnotations();
        java.lang.String str21 = annotatingMarkupParser0.parse("\"title\"\n\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser22 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser22.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList24 = annotatingMarkupParser22.getWikiLinkAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser25 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser25.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList27 = annotatingMarkupParser25.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList28 = annotatingMarkupParser25.getParagraphAnnotations();
        java.util.List<java.lang.String> strList29 = annotatingMarkupParser25.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList30 = annotatingMarkupParser25.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser31 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList32 = annotatingMarkupParser31.getHeaders();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser33 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList34 = annotatingMarkupParser33.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList35 = annotatingMarkupParser33.getWikiLinkAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser36 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList37 = annotatingMarkupParser36.getHeaders();
        java.util.List<java.lang.String> strList38 = annotatingMarkupParser36.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList39 = annotatingMarkupParser36.getHeaderAnnotations();
        java.lang.String str40 = annotatingMarkupParser36.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser41 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList42 = annotatingMarkupParser41.getHeaders();
        java.util.List<java.lang.String> strList43 = annotatingMarkupParser41.getHeaders();
        java.lang.Appendable appendable44 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable45 = annotatingMarkupParser41.new CountingAppendable(appendable44);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable46 = annotatingMarkupParser36.new CountingAppendable((java.lang.Appendable) countingAppendable45);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable47 = annotatingMarkupParser33.new CountingAppendable((java.lang.Appendable) countingAppendable46);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable48 = annotatingMarkupParser31.new CountingAppendable((java.lang.Appendable) countingAppendable46);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable49 = annotatingMarkupParser25.new CountingAppendable((java.lang.Appendable) countingAppendable48);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser50 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList51 = annotatingMarkupParser50.getHeaders();
        java.util.List<java.lang.String> strList52 = annotatingMarkupParser50.getHeaders();
        java.util.List<java.lang.String> strList53 = annotatingMarkupParser50.getHeaders();
        java.util.List<java.lang.String> strList54 = annotatingMarkupParser50.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel56 = annotatingMarkupParser50.makeWikiModel("opennlp / en - sent . bin");
        annotatingMarkupParser0.nodesToText(annotationList24, (java.lang.Appendable) countingAppendable48, (info.bliki.wiki.model.IWikiModel) wikiModel56);
        java.util.List<java.lang.String> strList58 = annotatingMarkupParser0.getParagraphs();
        java.lang.String str60 = annotatingMarkupParser0.parse("http://http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22\n.wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org%2Fwiki%2Fhi_%2521");
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi !\n\n" + "'", str15, "hi !\n\n");
        org.junit.Assert.assertNotNull(wikiModel17);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNotNull(annotationList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"title\"\n\n" + "'", str21, "\"title\"\n\n");
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(annotationList24);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList27);
        org.junit.Assert.assertNotNull(annotationList28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(annotationList30);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(annotationList35);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(annotationList39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(wikiModel56);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "http://http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22\n.wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org%2Fwiki%2Fhi_%2521\n" + "'", str60, "http://http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22\n.wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org%2Fwiki%2Fhi_%2521\n");
    }

    @Test
    public void test4197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4197");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        java.lang.reflect.Type type1 = safeTsvText0.getReturnType();
        pignlproc.evaluation.CheckAbstract checkAbstract2 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema3 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema4 = checkAbstract2.outputSchema(schema3);
        org.apache.pig.impl.logicalLayer.schema.Schema schema5 = safeTsvText0.outputSchema(schema4);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = null;
        safeTsvText0.setReporter(pigProgressable6);
        java.lang.Enum enum9 = null;
        safeTsvText0.warn("title\n\n", enum9);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList11 = safeTsvText0.getArgToFuncMapping();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(funcSpecList11);
    }

    @Test
    public void test4198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4198");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("\"title\"\n", "\" title \"", "\"title\"");
        org.apache.hadoop.mapreduce.InputFormat inputFormat4 = uriUriNTriplesLoader3.getInputFormat();
        org.apache.pig.Expression expression5 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression5);
        org.apache.hadoop.mapreduce.Job job8 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesLoader3.setLocation("\" hi ! \"", job8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputFormat4);
    }

    @Test
    public void test4199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4199");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21", "hi !\n\n", "\"\"\"\"\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"\"\"\"\"");
    }

    @Test
    public void test4200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4200");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        org.apache.commons.logging.Log log6 = sentencesWithLink0.getLogger();
        org.apache.commons.logging.Log log7 = sentencesWithLink0.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = null;
        sentencesWithLink0.setReporter(pigProgressable9);
        sentencesWithLink0.finish();
        java.lang.Enum enum13 = null;
        sentencesWithLink0.warn("\"opennlp/en-sent.bin\"", enum13);
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(log7);
        org.junit.Assert.assertNull(pigProgressable8);
    }

    @Test
    public void test4201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4201");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        org.apache.pig.data.Tuple tuple3 = null;
        java.lang.Boolean boolean4 = checkAbstract0.exec(tuple3);
        java.lang.Enum enum6 = null;
        checkAbstract0.warn("href", enum6);
        org.apache.pig.data.Tuple tuple8 = null;
        java.lang.Boolean boolean9 = checkAbstract0.exec(tuple8);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList10 = checkAbstract0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        checkAbstract0.setPigLogger(pigLogger11);
        org.apache.commons.logging.Log log13 = checkAbstract0.getLogger();
        checkAbstract0.finish();
        pignlproc.evaluation.ConcatTextBag concatTextBag17 = new pignlproc.evaluation.ConcatTextBag("http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22", true);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable18 = concatTextBag17.getReporter();
        pignlproc.evaluation.NoLoopInPath noLoopInPath20 = new pignlproc.evaluation.NoLoopInPath("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22href");
        pignlproc.evaluation.CheckAbstract checkAbstract21 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = checkAbstract21.outputSchema(schema22);
        org.apache.pig.data.Tuple tuple24 = null;
        java.lang.Boolean boolean25 = checkAbstract21.exec(tuple24);
        java.lang.Enum enum27 = null;
        checkAbstract21.warn("href", enum27);
        org.apache.pig.data.Tuple tuple29 = null;
        java.lang.Boolean boolean30 = checkAbstract21.exec(tuple29);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList31 = checkAbstract21.getArgToFuncMapping();
        checkAbstract21.progress();
        checkAbstract21.progress();
        checkAbstract21.finish();
        pignlproc.evaluation.NoLoopInPath noLoopInPath35 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText36 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger37 = null;
        safeTsvText36.setPigLogger(pigLogger37);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText39 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable40 = mergeAsOpenNLPAnnotatedText39.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract41 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = checkAbstract41.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = mergeAsOpenNLPAnnotatedText39.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = safeTsvText36.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = noLoopInPath35.outputSchema(schema44);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink47 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.NoLoopInPath noLoopInPath48 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText49 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger50 = null;
        safeTsvText49.setPigLogger(pigLogger50);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText52 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable53 = mergeAsOpenNLPAnnotatedText52.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract54 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = checkAbstract54.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = mergeAsOpenNLPAnnotatedText52.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = safeTsvText49.outputSchema(schema57);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = noLoopInPath48.outputSchema(schema57);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag60 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText61 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger62 = null;
        safeTsvText61.setPigLogger(pigLogger62);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText64 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable65 = mergeAsOpenNLPAnnotatedText64.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract66 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = checkAbstract66.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = mergeAsOpenNLPAnnotatedText64.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema70 = safeTsvText61.outputSchema(schema69);
        org.apache.pig.impl.logicalLayer.schema.Schema schema71 = aggregateTextBag60.outputSchema(schema69);
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = noLoopInPath48.outputSchema(schema69);
        pignlproc.evaluation.CheckAbstract checkAbstract73 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum75 = null;
        checkAbstract73.warn("http://.wikipedia.org/wiki/hi%21", enum75);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger77 = null;
        checkAbstract73.setPigLogger(pigLogger77);
        checkAbstract73.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText80 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger81 = null;
        safeTsvText80.setPigLogger(pigLogger81);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText83 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable84 = mergeAsOpenNLPAnnotatedText83.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract85 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema86 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema87 = checkAbstract85.outputSchema(schema86);
        org.apache.pig.impl.logicalLayer.schema.Schema schema88 = mergeAsOpenNLPAnnotatedText83.outputSchema(schema86);
        org.apache.pig.impl.logicalLayer.schema.Schema schema89 = safeTsvText80.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema90 = checkAbstract73.outputSchema(schema89);
        org.apache.pig.impl.logicalLayer.schema.Schema schema91 = noLoopInPath48.outputSchema(schema90);
        org.apache.pig.impl.logicalLayer.schema.Schema schema92 = sentencesWithLink47.outputSchema(schema91);
        org.apache.pig.impl.logicalLayer.schema.Schema schema93 = noLoopInPath35.outputSchema(schema91);
        org.apache.pig.impl.logicalLayer.schema.Schema schema94 = checkAbstract21.outputSchema(schema93);
        org.apache.pig.impl.logicalLayer.schema.Schema schema95 = noLoopInPath20.outputSchema(schema93);
        org.apache.pig.impl.logicalLayer.schema.Schema schema96 = concatTextBag17.outputSchema(schema95);
        org.apache.pig.impl.logicalLayer.schema.Schema schema97 = checkAbstract0.outputSchema(schema96);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + false + "'", boolean4, false);
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + false + "'", boolean9, false);
        org.junit.Assert.assertNull(funcSpecList10);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNull(pigProgressable18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertEquals("'" + boolean25 + "' != '" + false + "'", boolean25, false);
        org.junit.Assert.assertEquals("'" + boolean30 + "' != '" + false + "'", boolean30, false);
        org.junit.Assert.assertNull(funcSpecList31);
        org.junit.Assert.assertNull(pigProgressable40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(pigProgressable53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(pigProgressable65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(pigProgressable84);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test4202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4202");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("\n", "\"\"\"\"\"\"\"http://.wikipedia.org/wiki/hi%21\"\"\"\" \"\"\"\n", "http://\"\"\"\"\"\"\"\"\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\"\"\"\"\" \"\"\"\"\"\"\".wikipedia.org/wiki/http%3A%2F%2F%22title%22%0A.wikipedia.org%2Fwiki%2F\n");
    }

    @Test
    public void test4203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4203");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText2 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger3 = null;
        safeTsvText2.setPigLogger(pigLogger3);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText5 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = mergeAsOpenNLPAnnotatedText5.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract7 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = checkAbstract7.outputSchema(schema8);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = mergeAsOpenNLPAnnotatedText5.outputSchema(schema8);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = safeTsvText2.outputSchema(schema10);
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = noLoopInPath1.outputSchema(schema10);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag13 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText14 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger15 = null;
        safeTsvText14.setPigLogger(pigLogger15);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText17 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable18 = mergeAsOpenNLPAnnotatedText17.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract19 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = checkAbstract19.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = mergeAsOpenNLPAnnotatedText17.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = safeTsvText14.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = aggregateTextBag13.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = noLoopInPath1.outputSchema(schema22);
        pignlproc.evaluation.CheckAbstract checkAbstract26 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum28 = null;
        checkAbstract26.warn("http://.wikipedia.org/wiki/hi%21", enum28);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = null;
        checkAbstract26.setPigLogger(pigLogger30);
        checkAbstract26.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText33 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger34 = null;
        safeTsvText33.setPigLogger(pigLogger34);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText36 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable37 = mergeAsOpenNLPAnnotatedText36.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract38 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = checkAbstract38.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = mergeAsOpenNLPAnnotatedText36.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = safeTsvText33.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = checkAbstract26.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = noLoopInPath1.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = sentencesWithLink0.outputSchema(schema44);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger46 = null;
        sentencesWithLink0.setPigLogger(pigLogger46);
        sentencesWithLink0.finish();
        boolean boolean49 = sentencesWithLink0.isAsynchronous();
        org.junit.Assert.assertNull(pigProgressable6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(pigProgressable18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(pigProgressable37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test4204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4204");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        safeTsvText0.setPigLogger(pigLogger1);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText3 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = mergeAsOpenNLPAnnotatedText3.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract5 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema6 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = checkAbstract5.outputSchema(schema6);
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = mergeAsOpenNLPAnnotatedText3.outputSchema(schema6);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = safeTsvText0.outputSchema(schema8);
        pignlproc.evaluation.NoLoopInPath noLoopInPath10 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.CheckAbstract checkAbstract12 = new pignlproc.evaluation.CheckAbstract((int) (byte) 10);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList13 = checkAbstract12.getArgToFuncMapping();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText14 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray16 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList17 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList17, spanArray16);
        java.lang.String str19 = mergeAsOpenNLPAnnotatedText14.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList17);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList20 = mergeAsOpenNLPAnnotatedText14.getArgToFuncMapping();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText21 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray23 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList24 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList24, spanArray23);
        java.lang.String str26 = mergeAsOpenNLPAnnotatedText21.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList24);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger27 = null;
        mergeAsOpenNLPAnnotatedText21.setPigLogger(pigLogger27);
        boolean boolean29 = mergeAsOpenNLPAnnotatedText21.isAsynchronous();
        pignlproc.evaluation.CheckAbstract checkAbstract30 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum32 = null;
        checkAbstract30.warn("http://.wikipedia.org/wiki/hi%21", enum32);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable34 = null;
        checkAbstract30.setReporter(pigProgressable34);
        java.lang.reflect.Type type36 = checkAbstract30.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath37 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText38 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger39 = null;
        safeTsvText38.setPigLogger(pigLogger39);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText41 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable42 = mergeAsOpenNLPAnnotatedText41.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract43 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = checkAbstract43.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = mergeAsOpenNLPAnnotatedText41.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = safeTsvText38.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = noLoopInPath37.outputSchema(schema46);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag49 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText50 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger51 = null;
        safeTsvText50.setPigLogger(pigLogger51);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText53 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable54 = mergeAsOpenNLPAnnotatedText53.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract55 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = checkAbstract55.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = mergeAsOpenNLPAnnotatedText53.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = safeTsvText50.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = aggregateTextBag49.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = noLoopInPath37.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = checkAbstract30.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = mergeAsOpenNLPAnnotatedText21.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = mergeAsOpenNLPAnnotatedText14.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = checkAbstract12.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = noLoopInPath10.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = safeTsvText0.outputSchema(schema66);
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = safeTsvText0.outputSchema(schema68);
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(funcSpecList13);
        org.junit.Assert.assertNotNull(spanArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi !" + "'", str19, "hi !");
        org.junit.Assert.assertNull(funcSpecList20);
        org.junit.Assert.assertNotNull(spanArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi !" + "'", str26, "hi !");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNull(pigProgressable42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(pigProgressable54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test4205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4205");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (short) 0, (int) (byte) -1, "\"http://\"\" title \"\".wikipedia.org/wiki/\"", "\"\"\"\"\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"\"\"\" \"");
    }

    @Test
    public void test4206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4206");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum2 = null;
        safeTsvText0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = safeTsvText0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        safeTsvText0.setReporter(pigProgressable5);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList7 = safeTsvText0.getArgToFuncMapping();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink8 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger9 = sentencesWithLink8.getPigLogger();
        java.lang.Enum enum11 = null;
        sentencesWithLink8.warn("opennlp / en - sent . bin", enum11);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable13 = null;
        sentencesWithLink8.setReporter(pigProgressable13);
        java.lang.reflect.Type type15 = sentencesWithLink8.getReturnType();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList16 = sentencesWithLink8.getArgToFuncMapping();
        sentencesWithLink8.progress();
        pignlproc.evaluation.ConcatTextBag concatTextBag19 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum22 = null;
        checkAbstract20.warn("http://.wikipedia.org/wiki/hi%21", enum22);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger24 = null;
        checkAbstract20.setPigLogger(pigLogger24);
        checkAbstract20.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText27 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger28 = null;
        safeTsvText27.setPigLogger(pigLogger28);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText30 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable31 = mergeAsOpenNLPAnnotatedText30.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract32 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = checkAbstract32.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = mergeAsOpenNLPAnnotatedText30.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = safeTsvText27.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = checkAbstract20.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = concatTextBag19.outputSchema(schema37);
        org.apache.pig.data.Tuple tuple39 = null;
        java.lang.String str40 = concatTextBag19.exec(tuple39);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink41 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList42 = sentencesWithLink41.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger43 = null;
        sentencesWithLink41.setPigLogger(pigLogger43);
        java.lang.reflect.Type type45 = sentencesWithLink41.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable46 = sentencesWithLink41.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable47 = sentencesWithLink41.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract48 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum50 = null;
        checkAbstract48.warn("http://.wikipedia.org/wiki/hi%21", enum50);
        java.lang.Enum enum53 = null;
        checkAbstract48.warn("hi !", enum53);
        pignlproc.evaluation.NoLoopInPath noLoopInPath55 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText56 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger57 = null;
        safeTsvText56.setPigLogger(pigLogger57);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText59 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable60 = mergeAsOpenNLPAnnotatedText59.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract61 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = checkAbstract61.outputSchema(schema62);
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = mergeAsOpenNLPAnnotatedText59.outputSchema(schema62);
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = safeTsvText56.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = noLoopInPath55.outputSchema(schema64);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag67 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText68 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger69 = null;
        safeTsvText68.setPigLogger(pigLogger69);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText71 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable72 = mergeAsOpenNLPAnnotatedText71.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract73 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema74 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema75 = checkAbstract73.outputSchema(schema74);
        org.apache.pig.impl.logicalLayer.schema.Schema schema76 = mergeAsOpenNLPAnnotatedText71.outputSchema(schema74);
        org.apache.pig.impl.logicalLayer.schema.Schema schema77 = safeTsvText68.outputSchema(schema76);
        org.apache.pig.impl.logicalLayer.schema.Schema schema78 = aggregateTextBag67.outputSchema(schema76);
        org.apache.pig.impl.logicalLayer.schema.Schema schema79 = noLoopInPath55.outputSchema(schema76);
        org.apache.pig.impl.logicalLayer.schema.Schema schema80 = checkAbstract48.outputSchema(schema79);
        org.apache.pig.impl.logicalLayer.schema.Schema schema81 = sentencesWithLink41.outputSchema(schema79);
        org.apache.pig.impl.logicalLayer.schema.Schema schema82 = concatTextBag19.outputSchema(schema79);
        org.apache.pig.impl.logicalLayer.schema.Schema schema83 = sentencesWithLink8.outputSchema(schema82);
        org.apache.pig.impl.logicalLayer.schema.Schema schema84 = safeTsvText0.outputSchema(schema83);
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNull(funcSpecList7);
        org.junit.Assert.assertNull(pigLogger9);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNull(funcSpecList16);
        org.junit.Assert.assertNull(pigProgressable31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNull(funcSpecList42);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNull(pigProgressable46);
        org.junit.Assert.assertNull(pigProgressable47);
        org.junit.Assert.assertNull(pigProgressable60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(pigProgressable72);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
    }

    @Test
    public void test4207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4207");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("\" http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522 \"");
        org.apache.hadoop.mapreduce.Job job3 = null;
        java.lang.String[] strArray4 = parsingWikipediaLoader1.getPartitionKeys("\"http://http://hi! .wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin\"\n", job3);
        org.junit.Assert.assertNull(strArray4);
    }

    @Test
    public void test4208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4208");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.setMaxInputSplitSize(job0, 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4209");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("\"\"");
        pignlproc.evaluation.CheckAbstract checkAbstract2 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.data.Tuple tuple3 = null;
        java.lang.Boolean boolean4 = checkAbstract2.exec(tuple3);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList5 = checkAbstract2.getArgToFuncMapping();
        checkAbstract2.finish();
        pignlproc.evaluation.ConcatTextBag concatTextBag8 = new pignlproc.evaluation.ConcatTextBag("\" title \"");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = concatTextBag8.getReporter();
        pignlproc.evaluation.NoLoopInPath noLoopInPath10 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText11 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger12 = null;
        safeTsvText11.setPigLogger(pigLogger12);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText14 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable15 = mergeAsOpenNLPAnnotatedText14.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract16 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = checkAbstract16.outputSchema(schema17);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = mergeAsOpenNLPAnnotatedText14.outputSchema(schema17);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = safeTsvText11.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = noLoopInPath10.outputSchema(schema19);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag24 = new pignlproc.evaluation.AggregateTextBag((int) 'a', false);
        pignlproc.evaluation.NoLoopInPath noLoopInPath25 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText26 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger27 = null;
        safeTsvText26.setPigLogger(pigLogger27);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText29 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable30 = mergeAsOpenNLPAnnotatedText29.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract31 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = checkAbstract31.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = mergeAsOpenNLPAnnotatedText29.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = safeTsvText26.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = noLoopInPath25.outputSchema(schema34);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag37 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText38 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger39 = null;
        safeTsvText38.setPigLogger(pigLogger39);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText41 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable42 = mergeAsOpenNLPAnnotatedText41.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract43 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = checkAbstract43.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = mergeAsOpenNLPAnnotatedText41.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = safeTsvText38.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = aggregateTextBag37.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = noLoopInPath25.outputSchema(schema46);
        pignlproc.evaluation.CheckAbstract checkAbstract50 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum52 = null;
        checkAbstract50.warn("http://.wikipedia.org/wiki/hi%21", enum52);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger54 = null;
        checkAbstract50.setPigLogger(pigLogger54);
        checkAbstract50.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText57 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger58 = null;
        safeTsvText57.setPigLogger(pigLogger58);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText60 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable61 = mergeAsOpenNLPAnnotatedText60.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract62 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = checkAbstract62.outputSchema(schema63);
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = mergeAsOpenNLPAnnotatedText60.outputSchema(schema63);
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = safeTsvText57.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = checkAbstract50.outputSchema(schema66);
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = noLoopInPath25.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = aggregateTextBag24.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema70 = noLoopInPath10.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema71 = concatTextBag8.outputSchema(schema70);
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = checkAbstract2.outputSchema(schema71);
        org.apache.pig.impl.logicalLayer.schema.Schema schema73 = concatTextBag1.outputSchema(schema71);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + false + "'", boolean4, false);
        org.junit.Assert.assertNull(funcSpecList5);
        org.junit.Assert.assertNull(pigProgressable9);
        org.junit.Assert.assertNull(pigProgressable15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(pigProgressable30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(pigProgressable42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(pigProgressable61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
    }

    @Test
    public void test4210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4210");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("\"\"\"opennlp / en - sent . bin\"\" \"\n", "http://.wikipedia.org/wiki/hi%21\n", "titlehref\n");
        org.apache.hadoop.mapreduce.Job job5 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer3.setStoreLocation("\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"\n", job5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4211");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = checkAbstract0.getReporter();
        org.apache.commons.logging.Log log4 = checkAbstract0.getLogger();
        checkAbstract0.progress();
        boolean boolean6 = checkAbstract0.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList7 = checkAbstract0.getArgToFuncMapping();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(funcSpecList7);
    }

    @Test
    public void test4212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4212");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((int) 'a', false);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText3 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray5 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList6 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList6, spanArray5);
        java.lang.String str8 = mergeAsOpenNLPAnnotatedText3.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList6);
        pignlproc.evaluation.ConcatTextBag concatTextBag10 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract11 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum13 = null;
        checkAbstract11.warn("http://.wikipedia.org/wiki/hi%21", enum13);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger15 = null;
        checkAbstract11.setPigLogger(pigLogger15);
        checkAbstract11.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText18 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger19 = null;
        safeTsvText18.setPigLogger(pigLogger19);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText21 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable22 = mergeAsOpenNLPAnnotatedText21.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract23 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = checkAbstract23.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = mergeAsOpenNLPAnnotatedText21.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = safeTsvText18.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = checkAbstract11.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = concatTextBag10.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = mergeAsOpenNLPAnnotatedText3.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = aggregateTextBag2.outputSchema(schema30);
        pignlproc.evaluation.ConcatTextBag concatTextBag33 = new pignlproc.evaluation.ConcatTextBag("opennlp/en-sent.bin");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable34 = concatTextBag33.getReporter();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList35 = concatTextBag33.getArgToFuncMapping();
        boolean boolean36 = concatTextBag33.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText37 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray39 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList40 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList40, spanArray39);
        java.lang.String str42 = mergeAsOpenNLPAnnotatedText37.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList40);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText44 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray46 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList47 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList47, spanArray46);
        java.lang.String str49 = mergeAsOpenNLPAnnotatedText44.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList47);
        java.lang.String str50 = mergeAsOpenNLPAnnotatedText37.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList47);
        pignlproc.evaluation.SafeTsvText safeTsvText51 = new pignlproc.evaluation.SafeTsvText();
        java.lang.reflect.Type type52 = safeTsvText51.getReturnType();
        pignlproc.evaluation.CheckAbstract checkAbstract53 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = checkAbstract53.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = safeTsvText51.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = mergeAsOpenNLPAnnotatedText37.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = concatTextBag33.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = aggregateTextBag2.outputSchema(schema55);
        org.apache.pig.data.Tuple tuple60 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str61 = aggregateTextBag2.exec(tuple60);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in AggregateTextBag");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(spanArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "href" + "'", str8, "href");
        org.junit.Assert.assertNull(pigProgressable22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(pigProgressable34);
        org.junit.Assert.assertNull(funcSpecList35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(spanArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi !" + "'", str42, "hi !");
        org.junit.Assert.assertNotNull(spanArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "href" + "'", str49, "href");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi !" + "'", str50, "hi !");
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test4213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4213");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = null;
        checkAbstract0.setPigLogger(pigLogger4);
        checkAbstract0.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText7 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = null;
        safeTsvText7.setPigLogger(pigLogger8);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText10 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable11 = mergeAsOpenNLPAnnotatedText10.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract12 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = checkAbstract12.outputSchema(schema13);
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = mergeAsOpenNLPAnnotatedText10.outputSchema(schema13);
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = safeTsvText7.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract0.outputSchema(schema16);
        java.lang.reflect.Type type18 = checkAbstract0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = checkAbstract0.getReporter();
        org.junit.Assert.assertNull(pigProgressable11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNull(pigProgressable19);
    }

    @Test
    public void test4214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4214");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("\"opennlp/en-sent.bin\"");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader3 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = parsingWikipediaLoader3.getSchema("title", job5);
        org.apache.pig.LoadCaster loadCaster7 = parsingWikipediaLoader3.getLoadCaster();
        parsingWikipediaLoader3.setUDFContextSignature("hi !");
        org.apache.pig.Expression expression10 = null;
        parsingWikipediaLoader3.setPartitionFilter(expression10);
        org.apache.hadoop.mapreduce.Job job13 = null;
        org.apache.pig.ResourceSchema resourceSchema14 = parsingWikipediaLoader3.getSchema("http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin", job13);
        uriUriNTriplesStorer1.checkSchema(resourceSchema14);
        org.apache.hadoop.mapreduce.OutputFormat outputFormat16 = uriUriNTriplesStorer1.getOutputFormat();
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader18 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job20 = null;
        org.apache.pig.ResourceSchema resourceSchema21 = parsingWikipediaLoader18.getSchema("title", job20);
        org.apache.hadoop.mapreduce.Job job23 = null;
        java.lang.String[] strArray24 = parsingWikipediaLoader18.getPartitionKeys("wikiobject", job23);
        parsingWikipediaLoader18.setUDFContextSignature("http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22");
        org.apache.hadoop.mapreduce.InputFormat inputFormat27 = parsingWikipediaLoader18.getInputFormat();
        org.apache.hadoop.mapreduce.Job job29 = null;
        org.apache.pig.ResourceSchema resourceSchema30 = parsingWikipediaLoader18.getSchema("http://\" title \".wikipedia.org/wiki/", job29);
        uriUriNTriplesStorer1.checkSchema(resourceSchema30);
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNotNull(loadCaster7);
        org.junit.Assert.assertNotNull(resourceSchema14);
        org.junit.Assert.assertNotNull(outputFormat16);
        org.junit.Assert.assertNotNull(resourceSchema21);
        org.junit.Assert.assertNull(strArray24);
        org.junit.Assert.assertNotNull(inputFormat27);
        org.junit.Assert.assertNotNull(resourceSchema30);
    }

    @Test
    public void test4215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4215");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag12 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText13 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        safeTsvText13.setPigLogger(pigLogger14);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText16.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = safeTsvText13.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = aggregateTextBag12.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = noLoopInPath0.outputSchema(schema21);
        org.apache.commons.logging.Log log25 = noLoopInPath0.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable26 = null;
        noLoopInPath0.setReporter(pigProgressable26);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(log25);
    }

    @Test
    public void test4216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4216");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (short) -1, (-1), "hi!", "href");
        int int5 = annotation4.begin;
        int int6 = annotation4.begin;
        int int7 = annotation4.end;
        java.lang.String str8 = annotation4.value;
        int int9 = annotation4.begin;
        int int10 = annotation4.begin;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "href" + "'", str8, "href");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test4217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4217");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger12 = noLoopInPath0.getPigLogger();
        java.lang.reflect.Type type13 = noLoopInPath0.getReturnType();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink14 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger15 = null;
        sentencesWithLink14.setPigLogger(pigLogger15);
        boolean boolean17 = sentencesWithLink14.isAsynchronous();
        pignlproc.evaluation.ConcatTextBag concatTextBag19 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        org.apache.pig.data.Tuple tuple20 = null;
        java.lang.String str21 = concatTextBag19.exec(tuple20);
        pignlproc.evaluation.NoLoopInPath noLoopInPath22 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText23 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger24 = null;
        safeTsvText23.setPigLogger(pigLogger24);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText26 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable27 = mergeAsOpenNLPAnnotatedText26.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract28 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = checkAbstract28.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = mergeAsOpenNLPAnnotatedText26.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = safeTsvText23.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = noLoopInPath22.outputSchema(schema31);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag34 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText35 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger36 = null;
        safeTsvText35.setPigLogger(pigLogger36);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText38 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable39 = mergeAsOpenNLPAnnotatedText38.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract40 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = checkAbstract40.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = mergeAsOpenNLPAnnotatedText38.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = safeTsvText35.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = aggregateTextBag34.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = noLoopInPath22.outputSchema(schema43);
        pignlproc.evaluation.CheckAbstract checkAbstract47 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum49 = null;
        checkAbstract47.warn("http://.wikipedia.org/wiki/hi%21", enum49);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger51 = null;
        checkAbstract47.setPigLogger(pigLogger51);
        checkAbstract47.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText54 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger55 = null;
        safeTsvText54.setPigLogger(pigLogger55);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText57 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable58 = mergeAsOpenNLPAnnotatedText57.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract59 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = checkAbstract59.outputSchema(schema60);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = mergeAsOpenNLPAnnotatedText57.outputSchema(schema60);
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = safeTsvText54.outputSchema(schema62);
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = checkAbstract47.outputSchema(schema63);
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = noLoopInPath22.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = concatTextBag19.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = sentencesWithLink14.outputSchema(schema66);
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = noLoopInPath0.outputSchema(schema67);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigLogger12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(pigProgressable27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(pigProgressable39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(pigProgressable58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test4218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4218");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("\"\"\"\"\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"\"\"\" \"", "\"\"\"\"\"\"\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/%22title%22href\"\"\"\"\"\"\"", "http://\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/href\".wikipedia.org/wiki/%22_opennlp_%2F_en_-_sent_._bin_%22");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat4 = uriUriNTriplesStorer3.getOutputFormat();
        org.junit.Assert.assertNotNull(outputFormat4);
    }

    @Test
    public void test4219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4219");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        java.lang.reflect.Type type4 = sentencesWithLink0.getReturnType();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = sentencesWithLink0.getPigLogger();
        java.lang.Enum enum8 = null;
        sentencesWithLink0.warn("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", enum8);
        sentencesWithLink0.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable11 = null;
        sentencesWithLink0.setReporter(pigProgressable11);
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(pigLogger6);
    }

    @Test
    public void test4220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4220");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        org.apache.commons.logging.Log log4 = sentencesWithLink0.getLogger();
        java.lang.reflect.Type type5 = sentencesWithLink0.getReturnType();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink6 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        sentencesWithLink6.setPigLogger(pigLogger7);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = sentencesWithLink6.getReporter();
        java.lang.reflect.Type type10 = sentencesWithLink6.getReturnType();
        pignlproc.evaluation.SafeTsvText safeTsvText11 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger12 = null;
        safeTsvText11.setPigLogger(pigLogger12);
        safeTsvText11.finish();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink15 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.NoLoopInPath noLoopInPath16 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText17 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger18 = null;
        safeTsvText17.setPigLogger(pigLogger18);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText20 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable21 = mergeAsOpenNLPAnnotatedText20.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract22 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = checkAbstract22.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = mergeAsOpenNLPAnnotatedText20.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = safeTsvText17.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = noLoopInPath16.outputSchema(schema25);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag28 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText29 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = null;
        safeTsvText29.setPigLogger(pigLogger30);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText32 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable33 = mergeAsOpenNLPAnnotatedText32.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract34 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = checkAbstract34.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = mergeAsOpenNLPAnnotatedText32.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = safeTsvText29.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = aggregateTextBag28.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = noLoopInPath16.outputSchema(schema37);
        pignlproc.evaluation.CheckAbstract checkAbstract41 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum43 = null;
        checkAbstract41.warn("http://.wikipedia.org/wiki/hi%21", enum43);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger45 = null;
        checkAbstract41.setPigLogger(pigLogger45);
        checkAbstract41.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText48 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger49 = null;
        safeTsvText48.setPigLogger(pigLogger49);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText51 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable52 = mergeAsOpenNLPAnnotatedText51.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract53 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = checkAbstract53.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = mergeAsOpenNLPAnnotatedText51.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = safeTsvText48.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = checkAbstract41.outputSchema(schema57);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = noLoopInPath16.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = sentencesWithLink15.outputSchema(schema59);
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = safeTsvText11.outputSchema(schema59);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = sentencesWithLink6.outputSchema(schema59);
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = sentencesWithLink0.outputSchema(schema59);
        sentencesWithLink0.finish();
        java.lang.Enum enum66 = null;
        sentencesWithLink0.warn("http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href\n", enum66);
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNull(pigProgressable9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNull(pigProgressable21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(pigProgressable33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(pigProgressable52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test4221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4221");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21href");
        boolean boolean2 = concatTextBag1.isAsynchronous();
        org.apache.pig.data.Tuple tuple3 = null;
        java.lang.String str4 = concatTextBag1.exec(tuple3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = concatTextBag1.getPigLogger();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(pigLogger5);
    }

    @Test
    public void test4222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4222");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText2 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger3 = null;
        safeTsvText2.setPigLogger(pigLogger3);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText5 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = mergeAsOpenNLPAnnotatedText5.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract7 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = checkAbstract7.outputSchema(schema8);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = mergeAsOpenNLPAnnotatedText5.outputSchema(schema8);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = safeTsvText2.outputSchema(schema10);
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = noLoopInPath1.outputSchema(schema10);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag13 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText14 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger15 = null;
        safeTsvText14.setPigLogger(pigLogger15);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText17 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable18 = mergeAsOpenNLPAnnotatedText17.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract19 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = checkAbstract19.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = mergeAsOpenNLPAnnotatedText17.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = safeTsvText14.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = aggregateTextBag13.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = noLoopInPath1.outputSchema(schema22);
        pignlproc.evaluation.CheckAbstract checkAbstract26 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum28 = null;
        checkAbstract26.warn("http://.wikipedia.org/wiki/hi%21", enum28);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = null;
        checkAbstract26.setPigLogger(pigLogger30);
        checkAbstract26.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText33 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger34 = null;
        safeTsvText33.setPigLogger(pigLogger34);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText36 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable37 = mergeAsOpenNLPAnnotatedText36.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract38 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = checkAbstract38.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = mergeAsOpenNLPAnnotatedText36.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = safeTsvText33.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = checkAbstract26.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = noLoopInPath1.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = sentencesWithLink0.outputSchema(schema44);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger46 = null;
        sentencesWithLink0.setPigLogger(pigLogger46);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable48 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable49 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable50 = sentencesWithLink0.getReporter();
        org.junit.Assert.assertNull(pigProgressable6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(pigProgressable18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(pigProgressable37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(pigProgressable48);
        org.junit.Assert.assertNull(pigProgressable49);
        org.junit.Assert.assertNull(pigProgressable50);
    }

    @Test
    public void test4223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4223");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = sentencesWithLink0.getReporter();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink5 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.ConcatTextBag concatTextBag7 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract8 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum10 = null;
        checkAbstract8.warn("http://.wikipedia.org/wiki/hi%21", enum10);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger12 = null;
        checkAbstract8.setPigLogger(pigLogger12);
        checkAbstract8.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText15 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = null;
        safeTsvText15.setPigLogger(pigLogger16);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText18 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = mergeAsOpenNLPAnnotatedText18.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = checkAbstract20.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = mergeAsOpenNLPAnnotatedText18.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = safeTsvText15.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = checkAbstract8.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = concatTextBag7.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = sentencesWithLink5.outputSchema(schema26);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger28 = null;
        sentencesWithLink5.setPigLogger(pigLogger28);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList30 = sentencesWithLink5.getArgToFuncMapping();
        pignlproc.evaluation.AggregateTextBag aggregateTextBag32 = new pignlproc.evaluation.AggregateTextBag((int) '4');
        java.lang.reflect.Type type33 = aggregateTextBag32.getReturnType();
        pignlproc.evaluation.AggregateTextBag aggregateTextBag35 = new pignlproc.evaluation.AggregateTextBag((int) (short) 0);
        java.lang.Enum enum37 = null;
        aggregateTextBag35.warn("href", enum37);
        aggregateTextBag35.progress();
        pignlproc.evaluation.CheckAbstract checkAbstract40 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = checkAbstract40.outputSchema(schema41);
        org.apache.pig.data.Tuple tuple43 = null;
        java.lang.Boolean boolean44 = checkAbstract40.exec(tuple43);
        java.lang.Enum enum46 = null;
        checkAbstract40.warn("href", enum46);
        checkAbstract40.finish();
        pignlproc.evaluation.SafeTsvText safeTsvText49 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger50 = null;
        safeTsvText49.setPigLogger(pigLogger50);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText52 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable53 = mergeAsOpenNLPAnnotatedText52.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract54 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = checkAbstract54.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = mergeAsOpenNLPAnnotatedText52.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = safeTsvText49.outputSchema(schema57);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText59 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray61 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList62 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList62, spanArray61);
        java.lang.String str64 = mergeAsOpenNLPAnnotatedText59.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList62);
        pignlproc.evaluation.ConcatTextBag concatTextBag66 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract67 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum69 = null;
        checkAbstract67.warn("http://.wikipedia.org/wiki/hi%21", enum69);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger71 = null;
        checkAbstract67.setPigLogger(pigLogger71);
        checkAbstract67.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText74 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger75 = null;
        safeTsvText74.setPigLogger(pigLogger75);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText77 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable78 = mergeAsOpenNLPAnnotatedText77.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract79 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema80 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema81 = checkAbstract79.outputSchema(schema80);
        org.apache.pig.impl.logicalLayer.schema.Schema schema82 = mergeAsOpenNLPAnnotatedText77.outputSchema(schema80);
        org.apache.pig.impl.logicalLayer.schema.Schema schema83 = safeTsvText74.outputSchema(schema82);
        org.apache.pig.impl.logicalLayer.schema.Schema schema84 = checkAbstract67.outputSchema(schema83);
        org.apache.pig.impl.logicalLayer.schema.Schema schema85 = concatTextBag66.outputSchema(schema84);
        org.apache.pig.impl.logicalLayer.schema.Schema schema86 = mergeAsOpenNLPAnnotatedText59.outputSchema(schema84);
        org.apache.pig.impl.logicalLayer.schema.Schema schema87 = safeTsvText49.outputSchema(schema84);
        org.apache.pig.impl.logicalLayer.schema.Schema schema88 = checkAbstract40.outputSchema(schema84);
        org.apache.pig.impl.logicalLayer.schema.Schema schema89 = aggregateTextBag35.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema90 = aggregateTextBag32.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema91 = sentencesWithLink5.outputSchema(schema90);
        org.apache.pig.impl.logicalLayer.schema.Schema schema92 = sentencesWithLink0.outputSchema(schema91);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger93 = sentencesWithLink0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger94 = null;
        sentencesWithLink0.setPigLogger(pigLogger94);
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNull(pigProgressable19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(funcSpecList30);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertEquals("'" + boolean44 + "' != '" + false + "'", boolean44, false);
        org.junit.Assert.assertNull(pigProgressable53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(spanArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "href" + "'", str64, "href");
        org.junit.Assert.assertNull(pigProgressable78);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNull(pigLogger93);
    }

    @Test
    public void test4224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4224");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\" \"");
    }

    @Test
    public void test4225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4225");
        org.apache.hadoop.mapreduce.Job job1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.StoreFunc.cleanupOnFailureImpl("\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/href\"\n", job1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Illegal character in scheme name at index 0: \"http://%22%22opennlp%20/%20en%20-%20sent%20.%20bin%22%22.wikipedia.org/wiki/href%22%0A");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4226");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22\n.wikipedia.org/wiki/%22hi%21%22");
    }

    @Test
    public void test4227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4227");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser14.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList16 = annotatingMarkupParser14.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel18 = annotatingMarkupParser14.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel20 = annotatingMarkupParser14.makeWikiModel("hi!\n");
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser14.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser22 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser22.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList24 = annotatingMarkupParser22.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList25 = annotatingMarkupParser22.getParagraphAnnotations();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser22.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList27 = annotatingMarkupParser22.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser28 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList29 = annotatingMarkupParser28.getHeaderAnnotations();
        java.util.List<java.lang.String> strList30 = annotatingMarkupParser28.getParagraphs();
        java.lang.Appendable appendable31 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable32 = annotatingMarkupParser28.new CountingAppendable(appendable31);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable33 = annotatingMarkupParser22.new CountingAppendable((java.lang.Appendable) countingAppendable32);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser34 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList35 = annotatingMarkupParser34.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList36 = annotatingMarkupParser34.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel38 = annotatingMarkupParser34.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel40 = annotatingMarkupParser34.makeWikiModel("hi!\n");
        annotatingMarkupParser0.nodesToText(annotationList21, (java.lang.Appendable) countingAppendable33, (info.bliki.wiki.model.IWikiModel) wikiModel40);
        java.lang.String str43 = annotatingMarkupParser0.parse("http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href");
        info.bliki.wiki.model.WikiModel wikiModel45 = annotatingMarkupParser0.makeWikiModel("http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href\n");
        java.util.List<pignlproc.markup.Annotation> annotationList46 = annotatingMarkupParser0.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser47 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList48 = annotatingMarkupParser47.getHeaderAnnotations();
        java.util.List<java.lang.String> strList49 = annotatingMarkupParser47.getParagraphs();
        java.lang.Appendable appendable50 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable51 = annotatingMarkupParser47.new CountingAppendable(appendable50);
        java.util.List<pignlproc.markup.Annotation> annotationList52 = annotatingMarkupParser47.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser53 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList54 = annotatingMarkupParser53.getHeaders();
        java.util.List<java.lang.String> strList55 = annotatingMarkupParser53.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList56 = annotatingMarkupParser53.getHeaderAnnotations();
        java.lang.String str57 = annotatingMarkupParser53.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser58 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList59 = annotatingMarkupParser58.getHeaders();
        java.util.List<java.lang.String> strList60 = annotatingMarkupParser58.getHeaders();
        java.lang.Appendable appendable61 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable62 = annotatingMarkupParser58.new CountingAppendable(appendable61);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable63 = annotatingMarkupParser53.new CountingAppendable((java.lang.Appendable) countingAppendable62);
        info.bliki.wiki.model.WikiModel wikiModel65 = annotatingMarkupParser53.makeWikiModel("\"hi!\"\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser67 = new pignlproc.markup.AnnotatingMarkupParser("\"title\"");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser68 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList69 = annotatingMarkupParser68.getHeaders();
        java.util.List<java.lang.String> strList70 = annotatingMarkupParser68.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList71 = annotatingMarkupParser68.getHeaderAnnotations();
        java.lang.String str72 = annotatingMarkupParser68.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser73 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList74 = annotatingMarkupParser73.getHeaders();
        java.util.List<java.lang.String> strList75 = annotatingMarkupParser73.getHeaders();
        java.lang.Appendable appendable76 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable77 = annotatingMarkupParser73.new CountingAppendable(appendable76);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable78 = annotatingMarkupParser68.new CountingAppendable((java.lang.Appendable) countingAppendable77);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser79 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList80 = annotatingMarkupParser79.getHeaders();
        java.util.List<java.lang.String> strList81 = annotatingMarkupParser79.getHeaders();
        java.lang.Appendable appendable82 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable83 = annotatingMarkupParser79.new CountingAppendable(appendable82);
        countingAppendable83.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable86 = annotatingMarkupParser68.new CountingAppendable((java.lang.Appendable) countingAppendable83);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable87 = annotatingMarkupParser67.new CountingAppendable((java.lang.Appendable) countingAppendable86);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable88 = annotatingMarkupParser53.new CountingAppendable((java.lang.Appendable) countingAppendable86);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser89 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList90 = annotatingMarkupParser89.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel92 = annotatingMarkupParser89.makeWikiModel("title");
        annotatingMarkupParser0.nodesToText(annotationList52, (java.lang.Appendable) countingAppendable86, (info.bliki.wiki.model.IWikiModel) wikiModel92);
        countingAppendable86.currentPosition = (byte) -1;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable97 = countingAppendable86.append((java.lang.CharSequence) "\"hi! \"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(annotationList16);
        org.junit.Assert.assertNotNull(wikiModel18);
        org.junit.Assert.assertNotNull(wikiModel20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(annotationList24);
        org.junit.Assert.assertNotNull(annotationList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList27);
        org.junit.Assert.assertNotNull(annotationList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(annotationList36);
        org.junit.Assert.assertNotNull(wikiModel38);
        org.junit.Assert.assertNotNull(wikiModel40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href\n" + "'", str43, "http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href\n");
        org.junit.Assert.assertNotNull(wikiModel45);
        org.junit.Assert.assertNotNull(annotationList46);
        org.junit.Assert.assertNotNull(annotationList48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(annotationList52);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(annotationList56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNotNull(wikiModel65);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNotNull(annotationList71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(annotationList90);
        org.junit.Assert.assertNotNull(wikiModel92);
    }

    @Test
    public void test4228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4228");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag(10, true);
    }

    @Test
    public void test4229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4229");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("\"http://.wikipedia.org/wiki/hi%21\"\n\n", false);
        org.apache.pig.data.Tuple tuple3 = null;
        java.lang.String str4 = concatTextBag2.exec(tuple3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
    }

    @Test
    public void test4230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4230");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("\"\"", "http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21", "hi !\n");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer5 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href\n.wikipedia.org/wiki/%22%22");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer7 = new pignlproc.storage.UriUriNTriplesStorer("hi !\n");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat8 = uriUriNTriplesStorer7.getOutputFormat();
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader10 = new pignlproc.storage.ParsingWikipediaLoader("href");
        org.apache.hadoop.mapreduce.Job job12 = null;
        org.apache.pig.ResourceSchema resourceSchema13 = parsingWikipediaLoader10.getSchema("opennlp/en-sent.bin", job12);
        uriUriNTriplesStorer7.checkSchema(resourceSchema13);
        uriStringLiteralNTriplesStorer5.checkSchema(resourceSchema13);
        uriStringLiteralNTriplesStorer3.checkSchema(resourceSchema13);
        org.junit.Assert.assertNotNull(outputFormat8);
        org.junit.Assert.assertNotNull(resourceSchema13);
    }

    @Test
    public void test4231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4231");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str2 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser3 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList4 = annotatingMarkupParser3.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel6 = annotatingMarkupParser3.makeWikiModel("title");
        java.lang.String str8 = annotatingMarkupParser3.parse("hi!");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser9 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList10 = annotatingMarkupParser9.getHeaders();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser11 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser11.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList13 = annotatingMarkupParser11.getWikiLinkAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser14.getHeaders();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser14.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList17 = annotatingMarkupParser14.getHeaderAnnotations();
        java.lang.String str18 = annotatingMarkupParser14.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser19.getHeaders();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser19.getHeaders();
        java.lang.Appendable appendable22 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable23 = annotatingMarkupParser19.new CountingAppendable(appendable22);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable24 = annotatingMarkupParser14.new CountingAppendable((java.lang.Appendable) countingAppendable23);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable25 = annotatingMarkupParser11.new CountingAppendable((java.lang.Appendable) countingAppendable24);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable26 = annotatingMarkupParser9.new CountingAppendable((java.lang.Appendable) countingAppendable24);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable27 = annotatingMarkupParser3.new CountingAppendable((java.lang.Appendable) countingAppendable24);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable28 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable27);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable30 = countingAppendable27.append((java.lang.CharSequence) "http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(annotationList4);
        org.junit.Assert.assertNotNull(wikiModel6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!\n" + "'", str8, "hi!\n");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(annotationList13);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(annotationList17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
    }

    @Test
    public void test4232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4232");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader3.getSchema("", job5);
        org.apache.hadoop.mapreduce.Job job8 = null;
        org.apache.pig.ResourceStatistics resourceStatistics9 = uriUriNTriplesLoader3.getStatistics("opennlp/en-sent.bin", job8);
        org.apache.hadoop.mapreduce.Job job11 = null;
        java.lang.String[] strArray12 = uriUriNTriplesLoader3.getPartitionKeys("http://\"http://http://\"\"title\"\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/http_%3A_%2F%2F_hi_%21_._wikipedia_._org_%2F_wiki_%2F_opennlp___%25_2_F___en___-___sent___.___bin", job11);
        org.apache.hadoop.mapreduce.Job job14 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesLoader3.setLocation("http://http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22\n.wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org%2Fwiki%2Fhi_%2521", job14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNull(resourceStatistics9);
        org.junit.Assert.assertNull(strArray12);
    }

    @Test
    public void test4233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4233");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser0.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel4 = annotatingMarkupParser0.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel6 = annotatingMarkupParser0.makeWikiModel("hi!\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser7 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser7.getHeaders();
        java.util.List<java.lang.String> strList9 = annotatingMarkupParser7.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList10 = annotatingMarkupParser7.getHeaderAnnotations();
        java.lang.String str11 = annotatingMarkupParser7.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser12 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser12.getHeaders();
        java.util.List<java.lang.String> strList14 = annotatingMarkupParser12.getHeaders();
        java.lang.Appendable appendable15 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable16 = annotatingMarkupParser12.new CountingAppendable(appendable15);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable17 = annotatingMarkupParser7.new CountingAppendable((java.lang.Appendable) countingAppendable16);
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser7.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList20 = annotatingMarkupParser19.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser21 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList22 = annotatingMarkupParser21.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList23 = annotatingMarkupParser21.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList24 = annotatingMarkupParser21.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser25 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser25.getHeaders();
        java.util.List<java.lang.String> strList27 = annotatingMarkupParser25.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList28 = annotatingMarkupParser25.getHeaderAnnotations();
        java.lang.String str29 = annotatingMarkupParser25.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser30 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList31 = annotatingMarkupParser30.getHeaders();
        java.util.List<java.lang.String> strList32 = annotatingMarkupParser30.getHeaders();
        java.lang.Appendable appendable33 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable34 = annotatingMarkupParser30.new CountingAppendable(appendable33);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable35 = annotatingMarkupParser25.new CountingAppendable((java.lang.Appendable) countingAppendable34);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser36 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList37 = annotatingMarkupParser36.getHeaderAnnotations();
        java.lang.String str38 = annotatingMarkupParser36.getRedirect();
        pignlproc.markup.Annotation annotation43 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation48 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int49 = annotation48.end;
        int int50 = annotation48.begin;
        pignlproc.markup.Annotation[] annotationArray51 = new pignlproc.markup.Annotation[] { annotation43, annotation48 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList52 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList52, annotationArray51);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser54 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList55 = annotatingMarkupParser54.getHeaders();
        java.util.List<java.lang.String> strList56 = annotatingMarkupParser54.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList57 = annotatingMarkupParser54.getHeaderAnnotations();
        java.lang.String str58 = annotatingMarkupParser54.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser59 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList60 = annotatingMarkupParser59.getHeaders();
        java.util.List<java.lang.String> strList61 = annotatingMarkupParser59.getHeaders();
        java.lang.Appendable appendable62 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable63 = annotatingMarkupParser59.new CountingAppendable(appendable62);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable64 = annotatingMarkupParser54.new CountingAppendable((java.lang.Appendable) countingAppendable63);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser65 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList66 = annotatingMarkupParser65.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel68 = annotatingMarkupParser65.makeWikiModel("title");
        annotatingMarkupParser36.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList52, (java.lang.Appendable) countingAppendable63, (info.bliki.wiki.model.IWikiModel) wikiModel68);
        annotatingMarkupParser19.nodesToText(annotationList24, (java.lang.Appendable) countingAppendable35, (info.bliki.wiki.model.IWikiModel) wikiModel68);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser71 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList72 = annotatingMarkupParser71.getHeaders();
        java.util.List<java.lang.String> strList73 = annotatingMarkupParser71.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList74 = annotatingMarkupParser71.getHeaderAnnotations();
        java.lang.String str75 = annotatingMarkupParser71.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser76 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList77 = annotatingMarkupParser76.getHeaders();
        java.util.List<java.lang.String> strList78 = annotatingMarkupParser76.getHeaders();
        java.lang.Appendable appendable79 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable80 = annotatingMarkupParser76.new CountingAppendable(appendable79);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable81 = annotatingMarkupParser71.new CountingAppendable((java.lang.Appendable) countingAppendable80);
        java.util.List<java.lang.String> strList82 = annotatingMarkupParser71.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel84 = annotatingMarkupParser71.makeWikiModel("opennlp / en - sent . bin");
        annotatingMarkupParser0.nodesToText(annotationList18, (java.lang.Appendable) countingAppendable35, (info.bliki.wiki.model.IWikiModel) wikiModel84);
        java.util.List<pignlproc.markup.Annotation> annotationList86 = annotatingMarkupParser0.getWikiLinkAnnotations();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertNotNull(wikiModel4);
        org.junit.Assert.assertNotNull(wikiModel6);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(annotationList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNotNull(annotationList20);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(annotationList23);
        org.junit.Assert.assertNotNull(annotationList24);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(annotationList28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(annotationList37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertNotNull(annotationArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(annotationList57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(annotationList66);
        org.junit.Assert.assertNotNull(wikiModel68);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNotNull(annotationList74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNotNull(wikiModel84);
        org.junit.Assert.assertNotNull(annotationList86);
    }

    @Test
    public void test4234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4234");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("hi !\n");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink2 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger3 = null;
        sentencesWithLink2.setPigLogger(pigLogger3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = sentencesWithLink2.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = null;
        sentencesWithLink2.setReporter(pigProgressable6);
        sentencesWithLink2.progress();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText9 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray11 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList12 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList12, spanArray11);
        java.lang.String str14 = mergeAsOpenNLPAnnotatedText9.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList12);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray18 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList19 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList19, spanArray18);
        java.lang.String str21 = mergeAsOpenNLPAnnotatedText16.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList19);
        java.lang.String str22 = mergeAsOpenNLPAnnotatedText9.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList19);
        pignlproc.evaluation.SafeTsvText safeTsvText23 = new pignlproc.evaluation.SafeTsvText();
        java.lang.reflect.Type type24 = safeTsvText23.getReturnType();
        pignlproc.evaluation.CheckAbstract checkAbstract25 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = checkAbstract25.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = safeTsvText23.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = mergeAsOpenNLPAnnotatedText9.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = sentencesWithLink2.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = noLoopInPath1.outputSchema(schema30);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(spanArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi !" + "'", str14, "hi !");
        org.junit.Assert.assertNotNull(spanArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "href" + "'", str21, "href");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi !" + "'", str22, "hi !");
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test4235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4235");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("http://wikiobject.wikipedia.org/wiki/opennlp%2Fen-sent.bin");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser3 = new pignlproc.markup.AnnotatingMarkupParser("");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser4 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList5 = annotatingMarkupParser4.getHeaders();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser4.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser4.getHeaderAnnotations();
        java.lang.String str8 = annotatingMarkupParser4.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser9 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList10 = annotatingMarkupParser9.getHeaders();
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser9.getHeaders();
        java.lang.Appendable appendable12 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable13 = annotatingMarkupParser9.new CountingAppendable(appendable12);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable14 = annotatingMarkupParser4.new CountingAppendable((java.lang.Appendable) countingAppendable13);
        info.bliki.wiki.model.WikiModel wikiModel16 = annotatingMarkupParser4.makeWikiModel("\"hi!\"\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser18 = new pignlproc.markup.AnnotatingMarkupParser("\"title\"");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser19.getHeaders();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser19.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList22 = annotatingMarkupParser19.getHeaderAnnotations();
        java.lang.String str23 = annotatingMarkupParser19.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser24 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser24.getHeaders();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser24.getHeaders();
        java.lang.Appendable appendable27 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable28 = annotatingMarkupParser24.new CountingAppendable(appendable27);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable29 = annotatingMarkupParser19.new CountingAppendable((java.lang.Appendable) countingAppendable28);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser30 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList31 = annotatingMarkupParser30.getHeaders();
        java.util.List<java.lang.String> strList32 = annotatingMarkupParser30.getHeaders();
        java.lang.Appendable appendable33 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable34 = annotatingMarkupParser30.new CountingAppendable(appendable33);
        countingAppendable34.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable37 = annotatingMarkupParser19.new CountingAppendable((java.lang.Appendable) countingAppendable34);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable38 = annotatingMarkupParser18.new CountingAppendable((java.lang.Appendable) countingAppendable37);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable39 = annotatingMarkupParser4.new CountingAppendable((java.lang.Appendable) countingAppendable37);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable40 = annotatingMarkupParser3.new CountingAppendable((java.lang.Appendable) countingAppendable39);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable41 = annotatingMarkupParser1.new CountingAppendable((java.lang.Appendable) countingAppendable40);
        java.lang.String str43 = annotatingMarkupParser1.parse("http://http://\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/href\".wikipedia.org/wiki/%22_opennlp_%2F_en_-_sent_._bin_%22.wikipedia.org/wiki/http%3A%2F%2F%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22.wikipedia.org%2Fwiki%2F%2522%2522%2522opennlp_%252F_en_-_sent_._bin%2522%2522%2522");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel16);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(annotationList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "http://http://\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/href\".wikipedia.org/wiki/%22_opennlp_%2F_en_-_sent_._bin_%22.wikipedia.org/wiki/http%3A%2F%2F%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22.wikipedia.org%2Fwiki%2F%2522%2522%2522opennlp_%252F_en_-_sent_._bin%2522%2522%2522\n" + "'", str43, "http://http://\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/href\".wikipedia.org/wiki/%22_opennlp_%2F_en_-_sent_._bin_%22.wikipedia.org/wiki/http%3A%2F%2F%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22.wikipedia.org%2Fwiki%2F%2522%2522%2522opennlp_%252F_en_-_sent_._bin%2522%2522%2522\n");
    }

    @Test
    public void test4236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4236");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) 'a', (int) '4', "\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\"", "\"http : // \"\" opennlp / en - sent . bin \"\" . wikipedia . org / wiki / href\"");
        int int5 = annotation4.begin;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 97 + "'", int5 == 97);
    }

    @Test
    public void test4237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4237");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("title", job4);
        org.apache.pig.Expression expression6 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        java.lang.String[] strArray10 = uriStringLiteralNTriplesLoader2.getPartitionKeys("\"title\"", job9);
        org.apache.hadoop.mapreduce.Job job12 = null;
        org.apache.pig.ResourceSchema resourceSchema13 = uriStringLiteralNTriplesLoader2.getSchema("\"title\"", job12);
        org.apache.hadoop.mapreduce.Job job15 = null;
        org.apache.pig.ResourceSchema resourceSchema16 = uriStringLiteralNTriplesLoader2.getSchema("\"http://.wikipedia.org/wiki/hi%21\"", job15);
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNull(strArray10);
        org.junit.Assert.assertNotNull(resourceSchema13);
        org.junit.Assert.assertNotNull(resourceSchema16);
    }

    @Test
    public void test4238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4238");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getHeaderAnnotations();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getParagraphs();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser3 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser3.getHeaders();
        java.util.List<java.lang.String> strList5 = annotatingMarkupParser3.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList6 = annotatingMarkupParser3.getHeaderAnnotations();
        pignlproc.markup.Annotation annotation11 = new pignlproc.markup.Annotation(10, 10, "title", "hi !");
        pignlproc.markup.Annotation annotation16 = new pignlproc.markup.Annotation((int) (byte) 1, (-1), "wikiobject", "href");
        pignlproc.markup.Annotation annotation21 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation26 = new pignlproc.markup.Annotation(10, 10, "title", "hi !");
        pignlproc.markup.Annotation annotation31 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        java.lang.String str32 = annotation31.label;
        java.lang.String str33 = annotation31.label;
        pignlproc.markup.Annotation annotation38 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        java.lang.String str39 = annotation38.label;
        java.lang.String str40 = annotation38.label;
        java.lang.String str41 = annotation38.value;
        pignlproc.markup.Annotation[] annotationArray42 = new pignlproc.markup.Annotation[] { annotation11, annotation16, annotation21, annotation26, annotation31, annotation38 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList43 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList43, annotationArray42);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser45 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList46 = annotatingMarkupParser45.getHeaders();
        java.util.List<java.lang.String> strList47 = annotatingMarkupParser45.getHeaders();
        java.lang.Appendable appendable48 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable49 = annotatingMarkupParser45.new CountingAppendable(appendable48);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser50 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList51 = annotatingMarkupParser50.getHeaderAnnotations();
        java.lang.String str52 = annotatingMarkupParser50.getRedirect();
        pignlproc.markup.Annotation annotation57 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation62 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int63 = annotation62.end;
        int int64 = annotation62.begin;
        pignlproc.markup.Annotation[] annotationArray65 = new pignlproc.markup.Annotation[] { annotation57, annotation62 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList66 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList66, annotationArray65);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser68 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList69 = annotatingMarkupParser68.getHeaders();
        java.util.List<java.lang.String> strList70 = annotatingMarkupParser68.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList71 = annotatingMarkupParser68.getHeaderAnnotations();
        java.lang.String str72 = annotatingMarkupParser68.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser73 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList74 = annotatingMarkupParser73.getHeaders();
        java.util.List<java.lang.String> strList75 = annotatingMarkupParser73.getHeaders();
        java.lang.Appendable appendable76 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable77 = annotatingMarkupParser73.new CountingAppendable(appendable76);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable78 = annotatingMarkupParser68.new CountingAppendable((java.lang.Appendable) countingAppendable77);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser79 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList80 = annotatingMarkupParser79.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel82 = annotatingMarkupParser79.makeWikiModel("title");
        annotatingMarkupParser50.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList66, (java.lang.Appendable) countingAppendable77, (info.bliki.wiki.model.IWikiModel) wikiModel82);
        annotatingMarkupParser3.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList43, appendable48, (info.bliki.wiki.model.IWikiModel) wikiModel82);
        java.util.List<pignlproc.markup.Annotation> annotationList85 = annotatingMarkupParser3.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser86 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList87 = annotatingMarkupParser86.getHeaders();
        java.util.List<java.lang.String> strList88 = annotatingMarkupParser86.getHeaders();
        java.lang.Appendable appendable89 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable90 = annotatingMarkupParser86.new CountingAppendable(appendable89);
        int int91 = countingAppendable90.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable92 = annotatingMarkupParser3.new CountingAppendable((java.lang.Appendable) countingAppendable90);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable93 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable92);
        info.bliki.wiki.model.WikiModel wikiModel95 = annotatingMarkupParser0.makeWikiModel("");
        java.util.List<pignlproc.markup.Annotation> annotationList96 = annotatingMarkupParser0.getWikiLinkAnnotations();
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(annotationList6);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "title" + "'", str32, "title");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "title" + "'", str33, "title");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "title" + "'", str39, "title");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "title" + "'", str40, "title");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(annotationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNotNull(annotationList51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertNotNull(annotationArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNotNull(annotationList71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNotNull(annotationList80);
        org.junit.Assert.assertNotNull(wikiModel82);
        org.junit.Assert.assertNotNull(annotationList85);
        org.junit.Assert.assertNotNull(strList87);
        org.junit.Assert.assertNotNull(strList88);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(wikiModel95);
        org.junit.Assert.assertNotNull(annotationList96);
    }

    @Test
    public void test4239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4239");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPaths(job0, "http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/%22opennlp_%2F_en_-_sent_._bin%22%0A");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4240");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("wikiobject", false);
    }

    @Test
    public void test4241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4241");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger12 = noLoopInPath0.getPigLogger();
        java.lang.reflect.Type type13 = noLoopInPath0.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath14 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText15 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = null;
        safeTsvText15.setPigLogger(pigLogger16);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText18 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = mergeAsOpenNLPAnnotatedText18.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = checkAbstract20.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = mergeAsOpenNLPAnnotatedText18.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = safeTsvText15.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = noLoopInPath14.outputSchema(schema23);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag26 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText27 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger28 = null;
        safeTsvText27.setPigLogger(pigLogger28);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText30 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable31 = mergeAsOpenNLPAnnotatedText30.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract32 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = checkAbstract32.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = mergeAsOpenNLPAnnotatedText30.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = safeTsvText27.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = aggregateTextBag26.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = noLoopInPath14.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = noLoopInPath0.outputSchema(schema38);
        boolean boolean40 = noLoopInPath0.isAsynchronous();
        pignlproc.evaluation.NoLoopInPath noLoopInPath41 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText42 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger43 = null;
        safeTsvText42.setPigLogger(pigLogger43);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText45 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable46 = mergeAsOpenNLPAnnotatedText45.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract47 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = checkAbstract47.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = mergeAsOpenNLPAnnotatedText45.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = safeTsvText42.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = noLoopInPath41.outputSchema(schema50);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger53 = noLoopInPath41.getPigLogger();
        java.lang.reflect.Type type54 = noLoopInPath41.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath55 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText56 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger57 = null;
        safeTsvText56.setPigLogger(pigLogger57);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText59 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable60 = mergeAsOpenNLPAnnotatedText59.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract61 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = checkAbstract61.outputSchema(schema62);
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = mergeAsOpenNLPAnnotatedText59.outputSchema(schema62);
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = safeTsvText56.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = noLoopInPath55.outputSchema(schema64);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag67 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText68 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger69 = null;
        safeTsvText68.setPigLogger(pigLogger69);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText71 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable72 = mergeAsOpenNLPAnnotatedText71.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract73 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema74 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema75 = checkAbstract73.outputSchema(schema74);
        org.apache.pig.impl.logicalLayer.schema.Schema schema76 = mergeAsOpenNLPAnnotatedText71.outputSchema(schema74);
        org.apache.pig.impl.logicalLayer.schema.Schema schema77 = safeTsvText68.outputSchema(schema76);
        org.apache.pig.impl.logicalLayer.schema.Schema schema78 = aggregateTextBag67.outputSchema(schema76);
        org.apache.pig.impl.logicalLayer.schema.Schema schema79 = noLoopInPath55.outputSchema(schema76);
        org.apache.pig.impl.logicalLayer.schema.Schema schema80 = noLoopInPath41.outputSchema(schema79);
        org.apache.pig.impl.logicalLayer.schema.Schema schema81 = noLoopInPath0.outputSchema(schema79);
        org.apache.pig.data.Tuple tuple82 = null;
        java.lang.Boolean boolean83 = noLoopInPath0.exec(tuple82);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigLogger12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNull(pigProgressable19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(pigProgressable31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(pigProgressable46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(pigLogger53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNull(pigProgressable60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(pigProgressable72);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertEquals("'" + boolean83 + "' != '" + true + "'", boolean83, true);
    }

    @Test
    public void test4242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4242");
        java.net.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader wikipediaRecordReader3 = new pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader(uRL0, (long) (byte) 10, (long) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4243");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("http://\"http://.wikipedia.org/wiki/hi%21\"\n\n.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22", "\"\"\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"\"\"");
        org.apache.hadoop.mapreduce.InputFormat inputFormat3 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.junit.Assert.assertNotNull(inputFormat3);
    }

    @Test
    public void test4244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4244");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("", "\"\"\n", "\"\"");
        uriUriNTriplesStorer3.setStoreFuncUDFContextSignature("http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21");
        org.apache.hadoop.mapreduce.RecordWriter recordWriter6 = null;
        uriUriNTriplesStorer3.prepareToWrite(recordWriter6);
    }

    @Test
    public void test4245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4245");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader0 = new pignlproc.storage.UriUriNTriplesLoader();
        org.apache.hadoop.mapreduce.Job job2 = null;
        org.apache.pig.ResourceStatistics resourceStatistics3 = uriUriNTriplesLoader0.getStatistics("wikiobject", job2);
        org.apache.hadoop.mapreduce.InputFormat inputFormat4 = uriUriNTriplesLoader0.getInputFormat();
        org.apache.pig.Expression expression5 = null;
        uriUriNTriplesLoader0.setPartitionFilter(expression5);
        org.junit.Assert.assertNull(resourceStatistics3);
        org.junit.Assert.assertNotNull(inputFormat4);
    }

    @Test
    public void test4246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4246");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("\"\"\" http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522 \"\"\"");
    }

    @Test
    public void test4247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4247");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("hi !");
        org.apache.pig.LoadCaster loadCaster2 = parsingWikipediaLoader1.getLoadCaster();
        parsingWikipediaLoader1.setUDFContextSignature("\"\"\"opennlp / en - sent . bin\"\"\"");
        org.apache.hadoop.mapreduce.InputFormat inputFormat5 = parsingWikipediaLoader1.getInputFormat();
        org.junit.Assert.assertNotNull(loadCaster2);
        org.junit.Assert.assertNotNull(inputFormat5);
    }

    @Test
    public void test4248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4248");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        boolean boolean3 = sentencesWithLink0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = sentencesWithLink0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = null;
        sentencesWithLink0.setReporter(pigProgressable6);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertNull(pigLogger5);
    }

    @Test
    public void test4249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4249");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        mergeAsOpenNLPAnnotatedText0.setPigLogger(pigLogger6);
        mergeAsOpenNLPAnnotatedText0.finish();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList9 = mergeAsOpenNLPAnnotatedText0.getArgToFuncMapping();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList10 = mergeAsOpenNLPAnnotatedText0.getArgToFuncMapping();
        org.apache.pig.data.Tuple tuple11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = mergeAsOpenNLPAnnotatedText0.exec(tuple11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "href" + "'", str5, "href");
        org.junit.Assert.assertNull(funcSpecList9);
        org.junit.Assert.assertNull(funcSpecList10);
    }

    @Test
    public void test4250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4250");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("\"http://\"\"\"\"\"\"hi!\"\"\"\" \"\".wikipedia.org/wiki/\"");
        uriStringLiteralNTriplesStorer1.setStoreFuncUDFContextSignature("\"\"\"title\"\" \"hrefhref");
    }

    @Test
    public void test4251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4251");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        java.lang.reflect.Type type4 = sentencesWithLink0.getReturnType();
        pignlproc.evaluation.SafeTsvText safeTsvText5 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        safeTsvText5.setPigLogger(pigLogger6);
        safeTsvText5.finish();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink9 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.NoLoopInPath noLoopInPath10 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText11 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger12 = null;
        safeTsvText11.setPigLogger(pigLogger12);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText14 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable15 = mergeAsOpenNLPAnnotatedText14.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract16 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = checkAbstract16.outputSchema(schema17);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = mergeAsOpenNLPAnnotatedText14.outputSchema(schema17);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = safeTsvText11.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = noLoopInPath10.outputSchema(schema19);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag22 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText23 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger24 = null;
        safeTsvText23.setPigLogger(pigLogger24);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText26 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable27 = mergeAsOpenNLPAnnotatedText26.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract28 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = checkAbstract28.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = mergeAsOpenNLPAnnotatedText26.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = safeTsvText23.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = aggregateTextBag22.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = noLoopInPath10.outputSchema(schema31);
        pignlproc.evaluation.CheckAbstract checkAbstract35 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum37 = null;
        checkAbstract35.warn("http://.wikipedia.org/wiki/hi%21", enum37);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger39 = null;
        checkAbstract35.setPigLogger(pigLogger39);
        checkAbstract35.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText42 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger43 = null;
        safeTsvText42.setPigLogger(pigLogger43);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText45 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable46 = mergeAsOpenNLPAnnotatedText45.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract47 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = checkAbstract47.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = mergeAsOpenNLPAnnotatedText45.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = safeTsvText42.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = checkAbstract35.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = noLoopInPath10.outputSchema(schema52);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = sentencesWithLink9.outputSchema(schema53);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = safeTsvText5.outputSchema(schema53);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = sentencesWithLink0.outputSchema(schema53);
        boolean boolean57 = sentencesWithLink0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger58 = sentencesWithLink0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger59 = sentencesWithLink0.getPigLogger();
        java.lang.Enum enum61 = null;
        sentencesWithLink0.warn("http://\"\"\"hi!\"\" \".wikipedia.org/wiki/", enum61);
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNull(pigProgressable15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(pigProgressable27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(pigProgressable46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(pigLogger58);
        org.junit.Assert.assertNull(pigLogger59);
    }

    @Test
    public void test4252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4252");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("http://http://\"\"\"http://.wikipedia.org/wiki/hi%21\"\" \".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi%21.wikipedia.org%2Fwiki%2F%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22.wikipedia.org/wiki/wikiobject", "\"http://hi! .wikipedia.org/wiki/%22_title_%22\"");
    }

    @Test
    public void test4253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4253");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag1 = new pignlproc.evaluation.AggregateTextBag((int) (short) 10);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag4 = new pignlproc.evaluation.AggregateTextBag((int) (byte) 10, false);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText5 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = mergeAsOpenNLPAnnotatedText5.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract7 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = checkAbstract7.outputSchema(schema8);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = mergeAsOpenNLPAnnotatedText5.outputSchema(schema8);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = aggregateTextBag4.outputSchema(schema10);
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = aggregateTextBag1.outputSchema(schema10);
        org.junit.Assert.assertNull(pigProgressable6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test4254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4254");
        org.apache.hadoop.fs.Path path1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.apache.pig.LoadFunc.getAbsolutePath("\"\"\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"\"\"", path1);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"\"\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"\"\" curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4255");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21", false);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger3 = concatTextBag2.getPigLogger();
        concatTextBag2.progress();
        org.junit.Assert.assertNull(pigLogger3);
    }

    @Test
    public void test4256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4256");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = sentencesWithLink0.getPigLogger();
        java.lang.Enum enum3 = null;
        sentencesWithLink0.warn("opennlp / en - sent . bin", enum3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        sentencesWithLink0.setReporter(pigProgressable5);
        pignlproc.evaluation.CheckAbstract checkAbstract7 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum9 = null;
        checkAbstract7.warn("http://.wikipedia.org/wiki/hi%21", enum9);
        java.lang.Enum enum12 = null;
        checkAbstract7.warn("hi !", enum12);
        pignlproc.evaluation.NoLoopInPath noLoopInPath14 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText15 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = null;
        safeTsvText15.setPigLogger(pigLogger16);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText18 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = mergeAsOpenNLPAnnotatedText18.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = checkAbstract20.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = mergeAsOpenNLPAnnotatedText18.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = safeTsvText15.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = noLoopInPath14.outputSchema(schema23);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag26 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText27 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger28 = null;
        safeTsvText27.setPigLogger(pigLogger28);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText30 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable31 = mergeAsOpenNLPAnnotatedText30.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract32 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = checkAbstract32.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = mergeAsOpenNLPAnnotatedText30.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = safeTsvText27.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = aggregateTextBag26.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = noLoopInPath14.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = checkAbstract7.outputSchema(schema38);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = sentencesWithLink0.outputSchema(schema38);
        sentencesWithLink0.finish();
        boolean boolean42 = sentencesWithLink0.isAsynchronous();
        org.apache.commons.logging.Log log43 = sentencesWithLink0.getLogger();
        org.junit.Assert.assertNull(pigLogger1);
        org.junit.Assert.assertNull(pigProgressable19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(pigProgressable31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(log43);
    }

    @Test
    public void test4257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4257");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("wikiobject");
        boolean boolean2 = noLoopInPath1.isAsynchronous();
        pignlproc.evaluation.NoLoopInPath noLoopInPath3 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText4 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = null;
        safeTsvText4.setPigLogger(pigLogger5);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText7 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = mergeAsOpenNLPAnnotatedText7.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract9 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = checkAbstract9.outputSchema(schema10);
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = mergeAsOpenNLPAnnotatedText7.outputSchema(schema10);
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = safeTsvText4.outputSchema(schema12);
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = noLoopInPath3.outputSchema(schema12);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink15 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.NoLoopInPath noLoopInPath16 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText17 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger18 = null;
        safeTsvText17.setPigLogger(pigLogger18);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText20 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable21 = mergeAsOpenNLPAnnotatedText20.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract22 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = checkAbstract22.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = mergeAsOpenNLPAnnotatedText20.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = safeTsvText17.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = noLoopInPath16.outputSchema(schema25);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag28 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText29 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = null;
        safeTsvText29.setPigLogger(pigLogger30);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText32 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable33 = mergeAsOpenNLPAnnotatedText32.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract34 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = checkAbstract34.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = mergeAsOpenNLPAnnotatedText32.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = safeTsvText29.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = aggregateTextBag28.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = noLoopInPath16.outputSchema(schema37);
        pignlproc.evaluation.CheckAbstract checkAbstract41 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum43 = null;
        checkAbstract41.warn("http://.wikipedia.org/wiki/hi%21", enum43);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger45 = null;
        checkAbstract41.setPigLogger(pigLogger45);
        checkAbstract41.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText48 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger49 = null;
        safeTsvText48.setPigLogger(pigLogger49);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText51 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable52 = mergeAsOpenNLPAnnotatedText51.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract53 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = checkAbstract53.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = mergeAsOpenNLPAnnotatedText51.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = safeTsvText48.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = checkAbstract41.outputSchema(schema57);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = noLoopInPath16.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = sentencesWithLink15.outputSchema(schema59);
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = noLoopInPath3.outputSchema(schema59);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = noLoopInPath1.outputSchema(schema61);
        org.apache.commons.logging.Log log63 = noLoopInPath1.getLogger();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(pigProgressable8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(pigProgressable21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(pigProgressable33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(pigProgressable52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(log63);
    }

    @Test
    public void test4258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4258");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("\"http://.wikipedia.org/wiki/hi%21\"\n\n", "\"\"\"\"\"\"\"\"\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\"\"\"\"\" \"\"\"\"\"\"\"");
    }

    @Test
    public void test4259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4259");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("");
        java.lang.reflect.Type type2 = concatTextBag1.getReturnType();
        org.junit.Assert.assertNotNull(type2);
    }

    @Test
    public void test4260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4260");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("opennlp / en - sent . bin", false);
        java.lang.reflect.Type type3 = concatTextBag2.getReturnType();
        concatTextBag2.finish();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = null;
        concatTextBag2.setPigLogger(pigLogger5);
        org.apache.commons.logging.Log log7 = concatTextBag2.getLogger();
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = concatTextBag2.outputSchema(schema8);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = concatTextBag2.getPigLogger();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(log7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(pigLogger10);
    }

    @Test
    public void test4261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4261");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("\"hi!\"\n");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        mergeAsOpenNLPAnnotatedText1.setPigLogger(pigLogger2);
        org.apache.pig.data.Tuple tuple4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = mergeAsOpenNLPAnnotatedText1.exec(tuple4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4262");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("\"hi!\"\n\n");
        org.apache.hadoop.mapreduce.RecordReader recordReader2 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit3 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader2, pigSplit3);
        org.apache.hadoop.mapreduce.RecordReader recordReader5 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit6 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader5, pigSplit6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        org.apache.pig.ResourceSchema resourceSchema10 = parsingWikipediaLoader1.getSchema("hi !\n\n", job9);
        java.lang.Class<?> wildcardClass11 = parsingWikipediaLoader1.getClass();
        org.junit.Assert.assertNotNull(resourceSchema10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test4263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4263");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = null;
        sentencesWithLink0.setPigLogger(pigLogger5);
        sentencesWithLink0.finish();
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNull(pigProgressable4);
    }

    @Test
    public void test4264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4264");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel3 = annotatingMarkupParser0.makeWikiModel("title");
        java.lang.String str5 = annotatingMarkupParser0.parse("hi!");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser6 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser6.getHeaders();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser8 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList9 = annotatingMarkupParser8.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList10 = annotatingMarkupParser8.getWikiLinkAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser11 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser11.getHeaders();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser11.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList14 = annotatingMarkupParser11.getHeaderAnnotations();
        java.lang.String str15 = annotatingMarkupParser11.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser16 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList17 = annotatingMarkupParser16.getHeaders();
        java.util.List<java.lang.String> strList18 = annotatingMarkupParser16.getHeaders();
        java.lang.Appendable appendable19 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable20 = annotatingMarkupParser16.new CountingAppendable(appendable19);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable21 = annotatingMarkupParser11.new CountingAppendable((java.lang.Appendable) countingAppendable20);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable22 = annotatingMarkupParser8.new CountingAppendable((java.lang.Appendable) countingAppendable21);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable23 = annotatingMarkupParser6.new CountingAppendable((java.lang.Appendable) countingAppendable21);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable24 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable21);
        java.util.List<pignlproc.markup.Annotation> annotationList25 = annotatingMarkupParser0.getParagraphAnnotations();
        java.lang.String str26 = annotatingMarkupParser0.getRedirect();
        java.util.List<pignlproc.markup.Annotation> annotationList27 = annotatingMarkupParser0.getParagraphAnnotations();
        pignlproc.evaluation.CheckAbstract checkAbstract28 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum30 = null;
        checkAbstract28.warn("http://.wikipedia.org/wiki/hi%21", enum30);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable32 = null;
        checkAbstract28.setReporter(pigProgressable32);
        java.lang.reflect.Type type34 = checkAbstract28.getReturnType();
        boolean boolean35 = checkAbstract28.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList36 = checkAbstract28.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger37 = null;
        checkAbstract28.setPigLogger(pigLogger37);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable39 = checkAbstract28.getReporter();
        java.lang.String[] strArray41 = new java.lang.String[] { "opennlp/en-sent.bin" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.lang.String str45 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList42, "");
        java.lang.String str47 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList42, "http://.wikipedia.org/wiki/hi%21");
        java.lang.String str49 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList42, "href");
        java.lang.String str51 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList42, "hi!");
        java.lang.String str53 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList42, "");
        java.lang.String str55 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList42, "\"http://.wikipedia.org/wiki/hi%21\"");
        java.lang.String str57 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList42, "http : // \"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\" . wikipedia . org / wiki / href");
        java.lang.String str59 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList42, "hi !\n\nhref");
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<opennlp.tools.util.Span> spanList60 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) annotatingMarkupParser0, (java.lang.Object) checkAbstract28, (java.lang.Object) strList42);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: pignlproc.markup.AnnotatingMarkupParser cannot be cast to java.lang.Integer");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(wikiModel3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!\n" + "'", str5, "hi!\n");
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(annotationList10);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(annotationList14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(annotationList25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(annotationList27);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(funcSpecList36);
        org.junit.Assert.assertNull(pigProgressable39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "opennlp/en-sent.bin" + "'", str45, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "opennlp/en-sent.bin" + "'", str47, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "opennlp/en-sent.bin" + "'", str49, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "opennlp/en-sent.bin" + "'", str51, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "opennlp/en-sent.bin" + "'", str53, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "opennlp/en-sent.bin" + "'", str55, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "opennlp/en-sent.bin" + "'", str57, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "opennlp/en-sent.bin" + "'", str59, "opennlp/en-sent.bin");
    }

    @Test
    public void test4265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4265");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("href");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriStringLiteralNTriplesStorer1.getOutputFormat();
        uriStringLiteralNTriplesStorer1.setStoreFuncUDFContextSignature("http://hi!\n.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin");
        org.apache.hadoop.fs.Path path6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = uriStringLiteralNTriplesStorer1.relToAbsPathForStoreLocation("", path6);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location:  curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat2);
    }

    @Test
    public void test4266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4266");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("wikiobject", "\"\"\"title\"\" \"href", "\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"\n");
        org.apache.hadoop.mapreduce.Job job5 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer3.cleanupOnFailure("http : // \"\"\" hi ! \"\" \" . wikipedia . org / wiki /", job5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Relative path in absolute URI: http :%20/%20%22%22%22%20hi%20!%20%22%22%20%22%20.%20wikipedia%20.%20org%20/%20wiki%20");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4267");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        boolean boolean3 = sentencesWithLink0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = null;
        sentencesWithLink0.setPigLogger(pigLogger5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = sentencesWithLink0.getReporter();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertNull(pigProgressable7);
    }

    @Test
    public void test4268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4268");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.finish();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList8 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = sentencesWithLink0.getReporter();
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(funcSpecList6);
        org.junit.Assert.assertNull(funcSpecList8);
        org.junit.Assert.assertNull(pigProgressable9);
    }

    @Test
    public void test4269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4269");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/%22_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_%22", "http://http://hi!\n.wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin", "http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21");
        org.apache.pig.Expression expression4 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression4);
        org.apache.pig.LoadCaster loadCaster6 = uriUriNTriplesLoader3.getLoadCaster();
        org.junit.Assert.assertNotNull(loadCaster6);
    }

    @Test
    public void test4270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4270");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("opennlp/en-sent.bin");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable2 = concatTextBag1.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = null;
        concatTextBag1.setReporter(pigProgressable3);
        pignlproc.evaluation.CheckAbstract checkAbstract5 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum7 = null;
        checkAbstract5.warn("http://.wikipedia.org/wiki/hi%21", enum7);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger9 = null;
        checkAbstract5.setPigLogger(pigLogger9);
        checkAbstract5.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText12 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger13 = null;
        safeTsvText12.setPigLogger(pigLogger13);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText15 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable16 = mergeAsOpenNLPAnnotatedText15.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract17 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = checkAbstract17.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = mergeAsOpenNLPAnnotatedText15.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = safeTsvText12.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = checkAbstract5.outputSchema(schema21);
        pignlproc.evaluation.NoLoopInPath noLoopInPath23 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText24 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        safeTsvText24.setPigLogger(pigLogger25);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText27 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable28 = mergeAsOpenNLPAnnotatedText27.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract29 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = checkAbstract29.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = mergeAsOpenNLPAnnotatedText27.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = safeTsvText24.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = noLoopInPath23.outputSchema(schema32);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag35 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText36 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger37 = null;
        safeTsvText36.setPigLogger(pigLogger37);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText39 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable40 = mergeAsOpenNLPAnnotatedText39.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract41 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = checkAbstract41.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = mergeAsOpenNLPAnnotatedText39.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = safeTsvText36.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = aggregateTextBag35.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = noLoopInPath23.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = checkAbstract5.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = concatTextBag1.outputSchema(schema44);
        org.apache.commons.logging.Log log50 = concatTextBag1.getLogger();
        org.junit.Assert.assertNull(pigProgressable2);
        org.junit.Assert.assertNull(pigProgressable16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(pigProgressable28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(pigProgressable40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(log50);
    }

    @Test
    public void test4271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4271");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        java.lang.String str5 = annotation4.label;
        int int6 = annotation4.begin;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "title" + "'", str5, "title");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
    }

    @Test
    public void test4272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4272");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.finish();
        java.lang.Enum enum9 = null;
        sentencesWithLink0.warn("http://.wikipedia.org/wiki/hi%21", enum9);
        org.apache.commons.logging.Log log11 = sentencesWithLink0.getLogger();
        java.lang.Enum enum13 = null;
        sentencesWithLink0.warn("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22", enum13);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger15 = sentencesWithLink0.getPigLogger();
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(funcSpecList6);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNull(pigLogger15);
    }

    @Test
    public void test4273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4273");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("title", false);
        concatTextBag2.finish();
        org.apache.pig.data.Tuple tuple4 = null;
        java.lang.String str5 = concatTextBag2.exec(tuple4);
        org.apache.pig.data.Tuple tuple6 = null;
        java.lang.String str7 = concatTextBag2.exec(tuple6);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test4274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4274");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("opennlp/en-sent.bin");
    }

    @Test
    public void test4275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4275");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("\" http : // . wikipedia . org / wiki / hi % 21 \"");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable2 = concatTextBag1.getReporter();
        concatTextBag1.finish();
        org.junit.Assert.assertNull(pigProgressable2);
    }

    @Test
    public void test4276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4276");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = null;
        checkAbstract0.setPigLogger(pigLogger4);
        boolean boolean6 = checkAbstract0.isAsynchronous();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test4277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4277");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("\" http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 \"", true);
        pignlproc.evaluation.ConcatTextBag concatTextBag4 = new pignlproc.evaluation.ConcatTextBag("opennlp/en-sent.bin");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = concatTextBag4.getReporter();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = concatTextBag4.getArgToFuncMapping();
        boolean boolean7 = concatTextBag4.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText8 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray10 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList11 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList11, spanArray10);
        java.lang.String str13 = mergeAsOpenNLPAnnotatedText8.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText15 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray17 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList18 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList18, spanArray17);
        java.lang.String str20 = mergeAsOpenNLPAnnotatedText15.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList18);
        java.lang.String str21 = mergeAsOpenNLPAnnotatedText8.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList18);
        pignlproc.evaluation.SafeTsvText safeTsvText22 = new pignlproc.evaluation.SafeTsvText();
        java.lang.reflect.Type type23 = safeTsvText22.getReturnType();
        pignlproc.evaluation.CheckAbstract checkAbstract24 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = checkAbstract24.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = safeTsvText22.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = mergeAsOpenNLPAnnotatedText8.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = concatTextBag4.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = concatTextBag2.outputSchema(schema26);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNull(funcSpecList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(spanArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi !" + "'", str13, "hi !");
        org.junit.Assert.assertNotNull(spanArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "href" + "'", str20, "href");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi !" + "'", str21, "hi !");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test4278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4278");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = sentencesWithLink0.getPigLogger();
        java.lang.Enum enum3 = null;
        sentencesWithLink0.warn("opennlp / en - sent . bin", enum3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        sentencesWithLink0.setReporter(pigProgressable5);
        java.lang.reflect.Type type7 = sentencesWithLink0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = null;
        sentencesWithLink0.setReporter(pigProgressable8);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = null;
        sentencesWithLink0.setPigLogger(pigLogger10);
        java.lang.reflect.Type type12 = sentencesWithLink0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger13 = sentencesWithLink0.getPigLogger();
        org.junit.Assert.assertNull(pigLogger1);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNull(pigLogger13);
    }

    @Test
    public void test4279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4279");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger12 = noLoopInPath0.getPigLogger();
        java.lang.reflect.Type type13 = noLoopInPath0.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath14 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText15 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = null;
        safeTsvText15.setPigLogger(pigLogger16);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText18 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = mergeAsOpenNLPAnnotatedText18.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = checkAbstract20.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = mergeAsOpenNLPAnnotatedText18.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = safeTsvText15.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = noLoopInPath14.outputSchema(schema23);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag26 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText27 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger28 = null;
        safeTsvText27.setPigLogger(pigLogger28);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText30 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable31 = mergeAsOpenNLPAnnotatedText30.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract32 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = checkAbstract32.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = mergeAsOpenNLPAnnotatedText30.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = safeTsvText27.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = aggregateTextBag26.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = noLoopInPath14.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = noLoopInPath0.outputSchema(schema38);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable40 = noLoopInPath0.getReporter();
        org.apache.pig.data.Tuple tuple41 = null;
        java.lang.Boolean boolean42 = noLoopInPath0.exec(tuple41);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable43 = null;
        noLoopInPath0.setReporter(pigProgressable43);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigLogger12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNull(pigProgressable19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(pigProgressable31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(pigProgressable40);
        org.junit.Assert.assertEquals("'" + boolean42 + "' != '" + true + "'", boolean42, true);
    }

    @Test
    public void test4280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4280");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("");
        mergeAsOpenNLPAnnotatedText1.progress();
        boolean boolean3 = mergeAsOpenNLPAnnotatedText1.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText5 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray7 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList8 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList8, spanArray7);
        java.lang.String str10 = mergeAsOpenNLPAnnotatedText5.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList8);
        java.lang.String str11 = mergeAsOpenNLPAnnotatedText1.merge("http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522", (java.util.List<opennlp.tools.util.Span>) spanList8);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink12 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger13 = null;
        sentencesWithLink12.setPigLogger(pigLogger13);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList15 = sentencesWithLink12.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = sentencesWithLink12.getPigLogger();
        boolean boolean17 = sentencesWithLink12.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText18 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = mergeAsOpenNLPAnnotatedText18.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = checkAbstract20.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = mergeAsOpenNLPAnnotatedText18.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = sentencesWithLink12.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = mergeAsOpenNLPAnnotatedText1.outputSchema(schema24);
        java.lang.Object obj27 = null;
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer29 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://hi!\n.wikipedia.org/wiki/%22_title_%22");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader31 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job33 = null;
        org.apache.pig.ResourceStatistics resourceStatistics34 = parsingWikipediaLoader31.getStatistics("hi!", job33);
        org.apache.hadoop.mapreduce.RecordReader recordReader35 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit36 = null;
        parsingWikipediaLoader31.prepareToRead(recordReader35, pigSplit36);
        org.apache.hadoop.mapreduce.Job job39 = null;
        java.lang.String[] strArray40 = parsingWikipediaLoader31.getPartitionKeys("http://.wikipedia.org/wiki/hi%21", job39);
        org.apache.hadoop.mapreduce.InputFormat inputFormat41 = parsingWikipediaLoader31.getInputFormat();
        java.util.List<opennlp.tools.util.Span> spanList42 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans(obj27, (java.lang.Object) uriStringLiteralNTriplesStorer29, (java.lang.Object) inputFormat41);
        java.lang.String str43 = mergeAsOpenNLPAnnotatedText1.merge("http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href", spanList42);
        pignlproc.evaluation.CheckAbstract checkAbstract45 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable46 = checkAbstract45.getReporter();
        org.apache.pig.data.Tuple tuple47 = null;
        java.lang.Boolean boolean48 = checkAbstract45.exec(tuple47);
        pignlproc.evaluation.NoLoopInPath noLoopInPath49 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText50 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger51 = null;
        safeTsvText50.setPigLogger(pigLogger51);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText53 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable54 = mergeAsOpenNLPAnnotatedText53.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract55 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = checkAbstract55.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = mergeAsOpenNLPAnnotatedText53.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = safeTsvText50.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = noLoopInPath49.outputSchema(schema58);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag61 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText62 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger63 = null;
        safeTsvText62.setPigLogger(pigLogger63);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText65 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable66 = mergeAsOpenNLPAnnotatedText65.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract67 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = checkAbstract67.outputSchema(schema68);
        org.apache.pig.impl.logicalLayer.schema.Schema schema70 = mergeAsOpenNLPAnnotatedText65.outputSchema(schema68);
        org.apache.pig.impl.logicalLayer.schema.Schema schema71 = safeTsvText62.outputSchema(schema70);
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = aggregateTextBag61.outputSchema(schema70);
        org.apache.pig.impl.logicalLayer.schema.Schema schema73 = noLoopInPath49.outputSchema(schema70);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger74 = null;
        noLoopInPath49.setPigLogger(pigLogger74);
        org.apache.pig.data.Tuple tuple76 = null;
        java.lang.Boolean boolean77 = noLoopInPath49.exec(tuple76);
        org.apache.commons.logging.Log log78 = noLoopInPath49.getLogger();
        java.util.List<opennlp.tools.util.Span> spanList79 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) tuple47, (java.lang.Object) log78);
        java.lang.String str80 = mergeAsOpenNLPAnnotatedText1.merge("\"opennlp/en-sent.bin\"\n", spanList79);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(spanArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "href" + "'", str10, "href");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522" + "'", str11, "http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522");
        org.junit.Assert.assertNull(funcSpecList15);
        org.junit.Assert.assertNull(pigLogger16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(pigProgressable19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(resourceStatistics34);
        org.junit.Assert.assertNull(strArray40);
        org.junit.Assert.assertNotNull(inputFormat41);
        org.junit.Assert.assertNotNull(spanList42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href" + "'", str43, "http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href");
        org.junit.Assert.assertNull(pigProgressable46);
        org.junit.Assert.assertEquals("'" + boolean48 + "' != '" + false + "'", boolean48, false);
        org.junit.Assert.assertNull(pigProgressable54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(pigProgressable66);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertEquals("'" + boolean77 + "' != '" + true + "'", boolean77, true);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertNotNull(spanList79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "\" opennlp / en - sent . bin \"" + "'", str80, "\" opennlp / en - sent . bin \"");
    }

    @Test
    public void test4281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4281");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("\"hi!\"\n");
        java.lang.Enum enum3 = null;
        noLoopInPath1.warn("http://http://\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/href\".wikipedia.org/wiki/%22_opennlp_%2F_en_-_sent_._bin_%22.wikipedia.org/wiki/http%3A%2F%2F%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22.wikipedia.org%2Fwiki%2F%2522%2522%2522opennlp_%252F_en_-_sent_._bin%2522%2522%2522", enum3);
    }

    @Test
    public void test4282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4282");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("http://\" http : // . wikipedia . org / wiki / hi % 21 \".wikipedia.org/wiki/opennlp%2Fen-sent.bin");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer4 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://.wikipedia.org/wiki/hi%21");
        org.apache.hadoop.mapreduce.RecordWriter recordWriter5 = null;
        uriStringLiteralNTriplesStorer4.prepareToWrite(recordWriter5);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<opennlp.tools.util.Span> spanList7 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) uriUriNTriplesStorer1, (java.lang.Object) "http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href", (java.lang.Object) recordWriter5);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: pignlproc.storage.UriUriNTriplesStorer cannot be cast to java.lang.Integer");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4283");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag12 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText13 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        safeTsvText13.setPigLogger(pigLogger14);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText16.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = safeTsvText13.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = aggregateTextBag12.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = noLoopInPath0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        noLoopInPath0.setPigLogger(pigLogger25);
        org.apache.pig.data.Tuple tuple27 = null;
        java.lang.Boolean boolean28 = noLoopInPath0.exec(tuple27);
        noLoopInPath0.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = noLoopInPath0.getPigLogger();
        org.apache.commons.logging.Log log31 = noLoopInPath0.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger32 = noLoopInPath0.getPigLogger();
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + boolean28 + "' != '" + true + "'", boolean28, true);
        org.junit.Assert.assertNull(pigLogger30);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNull(pigLogger32);
    }

    @Test
    public void test4284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4284");
        org.apache.hadoop.mapreduce.Job job1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.StoreFunc.cleanupOnFailureImpl("\"\"\"http://\"\"\"\"opennlp / en - sent . bin\"\"\"\".wikipedia.org/wiki/href\"\"\"", job1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Illegal character in scheme name at index 0: \"\"\"http://%22%22%22%22opennlp%20/%20en%20-%20sent%20.%20bin%22%22%22%22.wikipedia.org/wiki/href%22%22%22");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4285");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.RecordReader recordReader2 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit3 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader2, pigSplit3);
        parsingWikipediaLoader1.setUDFContextSignature("hi!");
        org.apache.hadoop.mapreduce.InputFormat inputFormat7 = parsingWikipediaLoader1.getInputFormat();
        org.apache.hadoop.mapreduce.Job job9 = null;
        org.apache.pig.ResourceSchema resourceSchema10 = parsingWikipediaLoader1.getSchema("\"hi!\"", job9);
        org.apache.pig.Expression expression11 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression11);
        org.junit.Assert.assertNotNull(inputFormat7);
        org.junit.Assert.assertNotNull(resourceSchema10);
    }

    @Test
    public void test4286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4286");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("title\n");
    }

    @Test
    public void test4287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4287");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = checkAbstract0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        checkAbstract0.setReporter(pigProgressable5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = null;
        checkAbstract0.setReporter(pigProgressable7);
        checkAbstract0.finish();
        org.junit.Assert.assertNull(pigProgressable4);
    }

    @Test
    public void test4288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4288");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.lang.String str3 = annotatingMarkupParser0.parse("http://.wikipedia.org/wiki/hi%21");
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser0.getParagraphs();
        java.lang.String str5 = annotatingMarkupParser0.getRedirect();
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://.wikipedia.org/wiki/hi%21\n" + "'", str3, "http://.wikipedia.org/wiki/hi%21\n");
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test4289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4289");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = null;
        sentencesWithLink0.setPigLogger(pigLogger8);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable10 = null;
        sentencesWithLink0.setReporter(pigProgressable10);
        org.apache.pig.data.Tuple tuple12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.DataBag dataBag13 = sentencesWithLink0.exec(tuple12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(funcSpecList6);
    }

    @Test
    public void test4290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4290");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        org.apache.pig.data.Tuple tuple2 = null;
        java.lang.String str3 = concatTextBag1.exec(tuple2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = concatTextBag1.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = concatTextBag1.getReporter();
        org.apache.pig.data.Tuple tuple6 = null;
        java.lang.String str7 = concatTextBag1.exec(tuple6);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test4291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4291");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        org.apache.commons.logging.Log log4 = sentencesWithLink0.getLogger();
        java.lang.reflect.Type type5 = sentencesWithLink0.getReturnType();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink6 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        sentencesWithLink6.setPigLogger(pigLogger7);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = sentencesWithLink6.getReporter();
        java.lang.reflect.Type type10 = sentencesWithLink6.getReturnType();
        pignlproc.evaluation.SafeTsvText safeTsvText11 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger12 = null;
        safeTsvText11.setPigLogger(pigLogger12);
        safeTsvText11.finish();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink15 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.NoLoopInPath noLoopInPath16 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText17 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger18 = null;
        safeTsvText17.setPigLogger(pigLogger18);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText20 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable21 = mergeAsOpenNLPAnnotatedText20.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract22 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = checkAbstract22.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = mergeAsOpenNLPAnnotatedText20.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = safeTsvText17.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = noLoopInPath16.outputSchema(schema25);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag28 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText29 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = null;
        safeTsvText29.setPigLogger(pigLogger30);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText32 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable33 = mergeAsOpenNLPAnnotatedText32.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract34 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = checkAbstract34.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = mergeAsOpenNLPAnnotatedText32.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = safeTsvText29.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = aggregateTextBag28.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = noLoopInPath16.outputSchema(schema37);
        pignlproc.evaluation.CheckAbstract checkAbstract41 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum43 = null;
        checkAbstract41.warn("http://.wikipedia.org/wiki/hi%21", enum43);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger45 = null;
        checkAbstract41.setPigLogger(pigLogger45);
        checkAbstract41.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText48 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger49 = null;
        safeTsvText48.setPigLogger(pigLogger49);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText51 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable52 = mergeAsOpenNLPAnnotatedText51.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract53 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = checkAbstract53.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = mergeAsOpenNLPAnnotatedText51.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = safeTsvText48.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = checkAbstract41.outputSchema(schema57);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = noLoopInPath16.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = sentencesWithLink15.outputSchema(schema59);
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = safeTsvText11.outputSchema(schema59);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = sentencesWithLink6.outputSchema(schema59);
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = sentencesWithLink0.outputSchema(schema59);
        java.lang.Enum enum65 = null;
        sentencesWithLink0.warn("\"title\"", enum65);
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNull(pigProgressable9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNull(pigProgressable21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(pigProgressable33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(pigProgressable52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test4292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4292");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("\"http://http://hi! .wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin\"", "hi !\n\n", "http://\"\"\"\"\"\"\"\"\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\"\"\"\"\" \"\"\"\"\"\"\".wikipedia.org/wiki/http%3A%2F%2F%22title%22%0A.wikipedia.org%2Fwiki%2F");
        org.apache.hadoop.mapreduce.Job job5 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer3.cleanupOnFailure("http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21", job5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4293");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href\n", "", "http://http://http : // \" hi ! \" . wikipedia . org / wiki / % 22 hi % 21 _ % 22.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%0A.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org%2Fwiki%2Fhttp_%253A_%252F%252F_http_%253A_%252F%252F_._wikipedia_._org_%252F_wiki_%252F_hi_%2525_21_._wikipedia_._org_%252F_wiki_%252F_hi_%2525_21");
        org.apache.hadoop.mapreduce.Job job5 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer3.setStoreLocation("http://http://\"\"\"http://.wikipedia.org/wiki/hi%21\"\" \".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi%21.wikipedia.org%2Fwiki%2F%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22.wikipedia.org/wiki/wikiobject", job5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4294");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag12 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText13 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        safeTsvText13.setPigLogger(pigLogger14);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText16.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = safeTsvText13.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = aggregateTextBag12.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = noLoopInPath0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        noLoopInPath0.setPigLogger(pigLogger25);
        org.apache.pig.data.Tuple tuple27 = null;
        java.lang.Boolean boolean28 = noLoopInPath0.exec(tuple27);
        noLoopInPath0.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = noLoopInPath0.getPigLogger();
        org.apache.commons.logging.Log log31 = noLoopInPath0.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger32 = null;
        noLoopInPath0.setPigLogger(pigLogger32);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + boolean28 + "' != '" + true + "'", boolean28, true);
        org.junit.Assert.assertNull(pigLogger30);
        org.junit.Assert.assertNotNull(log31);
    }

    @Test
    public void test4295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4295");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("hi !");
        org.apache.pig.Expression expression2 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression2);
        org.apache.pig.LoadCaster loadCaster4 = parsingWikipediaLoader1.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = parsingWikipediaLoader1.getSchema("\"opennlp / en - sent . bin\"", job6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        org.apache.pig.ResourceStatistics resourceStatistics10 = parsingWikipediaLoader1.getStatistics("\"hi!\"\n\n", job9);
        org.apache.hadoop.mapreduce.Job job12 = null;
        org.apache.pig.ResourceStatistics resourceStatistics13 = parsingWikipediaLoader1.getStatistics("http://title\n\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522", job12);
        org.apache.pig.Expression expression14 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression14);
        org.junit.Assert.assertNotNull(loadCaster4);
        org.junit.Assert.assertNotNull(resourceSchema7);
        org.junit.Assert.assertNull(resourceStatistics10);
        org.junit.Assert.assertNull(resourceStatistics13);
    }

    @Test
    public void test4296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4296");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521\n", "\"hi!\"\n\n", "\"hi!\"");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat4 = uriStringLiteralNTriplesStorer3.getOutputFormat();
        uriStringLiteralNTriplesStorer3.setStoreFuncUDFContextSignature("\" opennlp / en - sent . bin \"");
        org.junit.Assert.assertNotNull(outputFormat4);
    }

    @Test
    public void test4297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4297");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPaths(job0, "http://\"titlehref\".wikipedia.org/wiki/http%3A%2F%2F%22%22%22%22%22%22%22_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_%22%22%22%22_%22%22%22.wikipedia.org%2Fwiki%2Fhref");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4298");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract3 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum5 = null;
        checkAbstract3.warn("http://.wikipedia.org/wiki/hi%21", enum5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        checkAbstract3.setPigLogger(pigLogger7);
        checkAbstract3.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText10 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        safeTsvText10.setPigLogger(pigLogger11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = mergeAsOpenNLPAnnotatedText13.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract15.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = safeTsvText10.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract3.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = concatTextBag2.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = sentencesWithLink0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = null;
        sentencesWithLink0.setPigLogger(pigLogger23);
        java.lang.reflect.Type type25 = sentencesWithLink0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable26 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger27 = sentencesWithLink0.getPigLogger();
        java.lang.reflect.Type type28 = sentencesWithLink0.getReturnType();
        sentencesWithLink0.finish();
        org.junit.Assert.assertNull(pigProgressable14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNull(pigProgressable26);
        org.junit.Assert.assertNull(pigLogger27);
        org.junit.Assert.assertNotNull(type28);
    }

    @Test
    public void test4299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4299");
        java.lang.String[] strArray1 = org.apache.pig.LoadFunc.getPathStrings("http://http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href\n.wikipedia.org/wiki/%22%22");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test4300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4300");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://.wikipedia.org/wiki/hi%21", job4);
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = uriStringLiteralNTriplesLoader2.getSchema("\"title\"\n", job7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceStatistics resourceStatistics11 = uriStringLiteralNTriplesLoader2.getStatistics("hi !\n", job10);
        org.apache.hadoop.mapreduce.RecordReader recordReader12 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit13 = null;
        uriStringLiteralNTriplesLoader2.prepareToRead(recordReader12, pigSplit13);
        org.apache.hadoop.mapreduce.Job job16 = null;
        java.lang.String[] strArray17 = uriStringLiteralNTriplesLoader2.getPartitionKeys("http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/hrefwikiobject\"\"\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"\"\"wikiobject\"hi!\"\nwikiobject\nwikiobjectopennlp/en-sent.binwikiobjecthttp://hi!\n.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._binwikiobjecthttp://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21wikiobjecthttp://\"http://.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22wikiobject\"opennlp / en - sent . bin\"wikiobject\"\"", job16);
        org.apache.hadoop.mapreduce.InputFormat inputFormat18 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(resourceSchema8);
        org.junit.Assert.assertNull(resourceStatistics11);
        org.junit.Assert.assertNull(strArray17);
        org.junit.Assert.assertNotNull(inputFormat18);
    }

    @Test
    public void test4301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4301");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        org.apache.pig.data.Tuple tuple3 = null;
        java.lang.Boolean boolean4 = checkAbstract0.exec(tuple3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = null;
        checkAbstract0.setPigLogger(pigLogger5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        checkAbstract0.setPigLogger(pigLogger7);
        org.apache.pig.data.Tuple tuple9 = null;
        java.lang.Boolean boolean10 = checkAbstract0.exec(tuple9);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + false + "'", boolean4, false);
        org.junit.Assert.assertEquals("'" + boolean10 + "' != '" + false + "'", boolean10, false);
    }

    @Test
    public void test4302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4302");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("\"title\"");
        info.bliki.wiki.model.WikiModel wikiModel3 = annotatingMarkupParser1.makeWikiModel("hi !\n\n");
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser1.getHeaders();
        boolean boolean5 = annotatingMarkupParser1.noLinks();
        java.util.List<pignlproc.markup.Annotation> annotationList6 = annotatingMarkupParser1.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser1.getWikiLinkAnnotations();
        org.junit.Assert.assertNotNull(wikiModel3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(annotationList6);
        org.junit.Assert.assertNotNull(annotationList7);
    }

    @Test
    public void test4303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4303");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str2 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.Annotation annotation7 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation12 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int13 = annotation12.end;
        int int14 = annotation12.begin;
        pignlproc.markup.Annotation[] annotationArray15 = new pignlproc.markup.Annotation[] { annotation7, annotation12 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList16 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList16, annotationArray15);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser18 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList19 = annotatingMarkupParser18.getHeaders();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser18.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser18.getHeaderAnnotations();
        java.lang.String str22 = annotatingMarkupParser18.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser23 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList24 = annotatingMarkupParser23.getHeaders();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser23.getHeaders();
        java.lang.Appendable appendable26 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable27 = annotatingMarkupParser23.new CountingAppendable(appendable26);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable28 = annotatingMarkupParser18.new CountingAppendable((java.lang.Appendable) countingAppendable27);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser29 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList30 = annotatingMarkupParser29.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel32 = annotatingMarkupParser29.makeWikiModel("title");
        annotatingMarkupParser0.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList16, (java.lang.Appendable) countingAppendable27, (info.bliki.wiki.model.IWikiModel) wikiModel32);
        java.util.List<pignlproc.markup.Annotation> annotationList34 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<java.lang.String> strList35 = annotatingMarkupParser0.getHeaders();
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(annotationArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(annotationList30);
        org.junit.Assert.assertNotNull(wikiModel32);
        org.junit.Assert.assertNotNull(annotationList34);
        org.junit.Assert.assertNotNull(strList35);
    }

    @Test
    public void test4304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4304");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("\"hi!\"", "http://hi!\n.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin", "opennlp / en - sent . bin");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader5 = new pignlproc.storage.ParsingWikipediaLoader("hi !");
        org.apache.pig.Expression expression6 = null;
        parsingWikipediaLoader5.setPartitionFilter(expression6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        org.apache.pig.ResourceStatistics resourceStatistics10 = parsingWikipediaLoader5.getStatistics("hi!\n", job9);
        org.apache.hadoop.mapreduce.InputFormat inputFormat11 = parsingWikipediaLoader5.getInputFormat();
        org.apache.hadoop.mapreduce.RecordReader recordReader12 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit13 = null;
        parsingWikipediaLoader5.prepareToRead(recordReader12, pigSplit13);
        org.apache.hadoop.mapreduce.Job job16 = null;
        org.apache.pig.ResourceSchema resourceSchema17 = parsingWikipediaLoader5.getSchema("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", job16);
        uriUriNTriplesStorer3.checkSchema(resourceSchema17);
        org.apache.pig.data.Tuple tuple19 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer3.putNext(tuple19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics10);
        org.junit.Assert.assertNotNull(inputFormat11);
        org.junit.Assert.assertNotNull(resourceSchema17);
    }

    @Test
    public void test4305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4305");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://hi!\n.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin", false);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = null;
        concatTextBag2.setReporter(pigProgressable3);
    }

    @Test
    public void test4306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4306");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum2 = null;
        safeTsvText0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = safeTsvText0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = safeTsvText0.getReporter();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText6 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray8 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList9 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList9, spanArray8);
        java.lang.String str11 = mergeAsOpenNLPAnnotatedText6.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList9);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList12 = mergeAsOpenNLPAnnotatedText6.getArgToFuncMapping();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray15 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList16 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList16, spanArray15);
        java.lang.String str18 = mergeAsOpenNLPAnnotatedText13.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList16);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger19 = null;
        mergeAsOpenNLPAnnotatedText13.setPigLogger(pigLogger19);
        boolean boolean21 = mergeAsOpenNLPAnnotatedText13.isAsynchronous();
        pignlproc.evaluation.CheckAbstract checkAbstract22 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum24 = null;
        checkAbstract22.warn("http://.wikipedia.org/wiki/hi%21", enum24);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable26 = null;
        checkAbstract22.setReporter(pigProgressable26);
        java.lang.reflect.Type type28 = checkAbstract22.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath29 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText30 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger31 = null;
        safeTsvText30.setPigLogger(pigLogger31);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText33 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable34 = mergeAsOpenNLPAnnotatedText33.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract35 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = checkAbstract35.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = mergeAsOpenNLPAnnotatedText33.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = safeTsvText30.outputSchema(schema38);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = noLoopInPath29.outputSchema(schema38);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag41 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText42 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger43 = null;
        safeTsvText42.setPigLogger(pigLogger43);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText45 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable46 = mergeAsOpenNLPAnnotatedText45.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract47 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = checkAbstract47.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = mergeAsOpenNLPAnnotatedText45.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = safeTsvText42.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = aggregateTextBag41.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = noLoopInPath29.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = checkAbstract22.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = mergeAsOpenNLPAnnotatedText6.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = safeTsvText0.outputSchema(schema56);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable58 = safeTsvText0.getReporter();
        org.apache.pig.data.Tuple tuple59 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str60 = safeTsvText0.exec(tuple59);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in SafeTsvText");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(spanArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi !" + "'", str11, "hi !");
        org.junit.Assert.assertNull(funcSpecList12);
        org.junit.Assert.assertNotNull(spanArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi !" + "'", str18, "hi !");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNull(pigProgressable34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(pigProgressable46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(pigProgressable58);
    }

    @Test
    public void test4307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4307");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        java.lang.Enum enum4 = null;
        checkAbstract0.warn("hi !", enum4);
        boolean boolean6 = checkAbstract0.isAsynchronous();
        org.apache.pig.data.Tuple tuple7 = null;
        java.lang.Boolean boolean8 = checkAbstract0.exec(tuple7);
        checkAbstract0.finish();
        boolean boolean10 = checkAbstract0.isAsynchronous();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + false + "'", boolean8, false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test4308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4308");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("wikiobject");
        org.apache.pig.data.Tuple tuple2 = null;
        java.lang.Boolean boolean3 = noLoopInPath1.exec(tuple2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = noLoopInPath1.getReporter();
        org.junit.Assert.assertEquals("'" + boolean3 + "' != '" + true + "'", boolean3, true);
        org.junit.Assert.assertNull(pigProgressable4);
    }

    @Test
    public void test4309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4309");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getHeaderAnnotations();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getParagraphs();
        java.lang.Appendable appendable3 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable4 = annotatingMarkupParser0.new CountingAppendable(appendable3);
        int int5 = countingAppendable4.currentPosition;
        countingAppendable4.currentPosition = 100;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable11 = countingAppendable4.append((java.lang.CharSequence) "http://\"\"\"title\"\" \"hrefhref.wikipedia.org/wiki/%22title%22href", (int) (short) -1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test4310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4310");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList2 = sentencesWithLink0.getArgToFuncMapping();
        boolean boolean3 = sentencesWithLink0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = null;
        sentencesWithLink0.setPigLogger(pigLogger4);
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNull(funcSpecList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test4311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4311");
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract("http://\"\"\"\"\"\"\"\"\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\"\"\"\"\" \"\"\"\"\"\"\".wikipedia.org/wiki/http%3A%2F%2F%22title%22%0A.wikipedia.org%2Fwiki%2F");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"http://\"\"\"\"\"\"\"\"\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\"\"\"\"\" \"\"\"\"\"\"\".wikipedia.org/wiki/http%3A%2F%2F%22title%22%0A.wikipedia.org%2Fwiki%2F\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4312");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("hi !", "title", "title");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader5 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.pig.LoadCaster loadCaster6 = parsingWikipediaLoader5.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job8 = null;
        org.apache.pig.ResourceSchema resourceSchema9 = parsingWikipediaLoader5.getSchema("hi!", job8);
        uriUriNTriplesStorer3.checkSchema(resourceSchema9);
        org.apache.hadoop.mapreduce.RecordWriter recordWriter11 = null;
        uriUriNTriplesStorer3.prepareToWrite(recordWriter11);
        org.apache.pig.data.Tuple tuple13 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer3.putNext(tuple13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(loadCaster6);
        org.junit.Assert.assertNotNull(resourceSchema9);
    }

    @Test
    public void test4313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4313");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        java.lang.Enum enum5 = null;
        checkAbstract0.warn("hi !", enum5);
        pignlproc.evaluation.NoLoopInPath noLoopInPath7 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText8 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger9 = null;
        safeTsvText8.setPigLogger(pigLogger9);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText11 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable12 = mergeAsOpenNLPAnnotatedText11.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract13 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = checkAbstract13.outputSchema(schema14);
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = mergeAsOpenNLPAnnotatedText11.outputSchema(schema14);
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = safeTsvText8.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = noLoopInPath7.outputSchema(schema16);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag19 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText20 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger21 = null;
        safeTsvText20.setPigLogger(pigLogger21);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText23 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable24 = mergeAsOpenNLPAnnotatedText23.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract25 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = checkAbstract25.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = mergeAsOpenNLPAnnotatedText23.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = safeTsvText20.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = aggregateTextBag19.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = noLoopInPath7.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = checkAbstract0.outputSchema(schema31);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList33 = checkAbstract0.getArgToFuncMapping();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink34 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.ConcatTextBag concatTextBag36 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract37 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum39 = null;
        checkAbstract37.warn("http://.wikipedia.org/wiki/hi%21", enum39);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger41 = null;
        checkAbstract37.setPigLogger(pigLogger41);
        checkAbstract37.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText44 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger45 = null;
        safeTsvText44.setPigLogger(pigLogger45);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText47 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable48 = mergeAsOpenNLPAnnotatedText47.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract49 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = checkAbstract49.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = mergeAsOpenNLPAnnotatedText47.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = safeTsvText44.outputSchema(schema52);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = checkAbstract37.outputSchema(schema53);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = concatTextBag36.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = sentencesWithLink34.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = checkAbstract0.outputSchema(schema55);
        java.lang.reflect.Type type58 = checkAbstract0.getReturnType();
        org.junit.Assert.assertNull(pigProgressable12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(pigProgressable24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(funcSpecList33);
        org.junit.Assert.assertNull(pigProgressable48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(type58);
    }

    @Test
    public void test4314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4314");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("opennlp/en-sent.bin");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = concatTextBag1.getPigLogger();
        pignlproc.evaluation.NoLoopInPath noLoopInPath3 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText4 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = null;
        safeTsvText4.setPigLogger(pigLogger5);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText7 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = mergeAsOpenNLPAnnotatedText7.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract9 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = checkAbstract9.outputSchema(schema10);
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = mergeAsOpenNLPAnnotatedText7.outputSchema(schema10);
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = safeTsvText4.outputSchema(schema12);
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = noLoopInPath3.outputSchema(schema12);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag15 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText16 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger17 = null;
        safeTsvText16.setPigLogger(pigLogger17);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText19 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable20 = mergeAsOpenNLPAnnotatedText19.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract21 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = checkAbstract21.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = mergeAsOpenNLPAnnotatedText19.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = safeTsvText16.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = aggregateTextBag15.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = noLoopInPath3.outputSchema(schema24);
        pignlproc.evaluation.CheckAbstract checkAbstract28 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum30 = null;
        checkAbstract28.warn("http://.wikipedia.org/wiki/hi%21", enum30);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger32 = null;
        checkAbstract28.setPigLogger(pigLogger32);
        checkAbstract28.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText35 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger36 = null;
        safeTsvText35.setPigLogger(pigLogger36);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText38 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable39 = mergeAsOpenNLPAnnotatedText38.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract40 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = checkAbstract40.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = mergeAsOpenNLPAnnotatedText38.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = safeTsvText35.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = checkAbstract28.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = noLoopInPath3.outputSchema(schema45);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = concatTextBag1.outputSchema(schema46);
        java.lang.reflect.Type type48 = concatTextBag1.getReturnType();
        org.junit.Assert.assertNull(pigLogger2);
        org.junit.Assert.assertNull(pigProgressable8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(pigProgressable20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(pigProgressable39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(type48);
    }

    @Test
    public void test4315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4315");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        org.apache.pig.data.Tuple tuple3 = null;
        java.lang.Boolean boolean4 = checkAbstract0.exec(tuple3);
        java.lang.Enum enum6 = null;
        checkAbstract0.warn("href", enum6);
        checkAbstract0.finish();
        checkAbstract0.finish();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable10 = null;
        checkAbstract0.setReporter(pigProgressable10);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText12 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray14 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList15 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList15, spanArray14);
        java.lang.String str17 = mergeAsOpenNLPAnnotatedText12.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList15);
        pignlproc.evaluation.ConcatTextBag concatTextBag19 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum22 = null;
        checkAbstract20.warn("http://.wikipedia.org/wiki/hi%21", enum22);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger24 = null;
        checkAbstract20.setPigLogger(pigLogger24);
        checkAbstract20.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText27 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger28 = null;
        safeTsvText27.setPigLogger(pigLogger28);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText30 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable31 = mergeAsOpenNLPAnnotatedText30.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract32 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = checkAbstract32.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = mergeAsOpenNLPAnnotatedText30.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = safeTsvText27.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = checkAbstract20.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = concatTextBag19.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = mergeAsOpenNLPAnnotatedText12.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = checkAbstract0.outputSchema(schema37);
        org.apache.commons.logging.Log log41 = checkAbstract0.getLogger();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + false + "'", boolean4, false);
        org.junit.Assert.assertNotNull(spanArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "href" + "'", str17, "href");
        org.junit.Assert.assertNull(pigProgressable31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(log41);
    }

    @Test
    public void test4316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4316");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.setMinInputSplitSize(job0, (long) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4317");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("\"\"\"hi!\"\" \"\n", "http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/%22opennlp_%2F_en_-_sent_._bin%22%0A", "http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader3.getSchema("http://\"\"\"hi!\"\" \".wikipedia.org/wiki/", job5);
        org.junit.Assert.assertNotNull(resourceSchema6);
    }

    @Test
    public void test4318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4318");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("href");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/href\"\n", job3);
        org.apache.hadoop.fs.Path path6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = parsingWikipediaLoader1.relativeToAbsolutePath("\"\"\" http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522 \"\"\"", path6);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"\"\" http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522 \"\"\" curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics4);
    }

    @Test
    public void test4319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4319");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser14.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList16 = annotatingMarkupParser14.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel18 = annotatingMarkupParser14.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel20 = annotatingMarkupParser14.makeWikiModel("hi!\n");
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser14.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser22 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser22.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList24 = annotatingMarkupParser22.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList25 = annotatingMarkupParser22.getParagraphAnnotations();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser22.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList27 = annotatingMarkupParser22.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser28 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList29 = annotatingMarkupParser28.getHeaderAnnotations();
        java.util.List<java.lang.String> strList30 = annotatingMarkupParser28.getParagraphs();
        java.lang.Appendable appendable31 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable32 = annotatingMarkupParser28.new CountingAppendable(appendable31);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable33 = annotatingMarkupParser22.new CountingAppendable((java.lang.Appendable) countingAppendable32);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser34 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList35 = annotatingMarkupParser34.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList36 = annotatingMarkupParser34.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel38 = annotatingMarkupParser34.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel40 = annotatingMarkupParser34.makeWikiModel("hi!\n");
        annotatingMarkupParser0.nodesToText(annotationList21, (java.lang.Appendable) countingAppendable33, (info.bliki.wiki.model.IWikiModel) wikiModel40);
        countingAppendable33.currentPosition = 0;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable45 = countingAppendable33.append((java.lang.CharSequence) "http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(annotationList16);
        org.junit.Assert.assertNotNull(wikiModel18);
        org.junit.Assert.assertNotNull(wikiModel20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(annotationList24);
        org.junit.Assert.assertNotNull(annotationList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList27);
        org.junit.Assert.assertNotNull(annotationList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(annotationList36);
        org.junit.Assert.assertNotNull(wikiModel38);
        org.junit.Assert.assertNotNull(wikiModel40);
    }

    @Test
    public void test4320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4320");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader3.getSchema("", job5);
        org.apache.pig.Expression expression7 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression7);
        org.apache.hadoop.mapreduce.InputFormat inputFormat9 = uriUriNTriplesLoader3.getInputFormat();
        org.apache.hadoop.mapreduce.Job job11 = null;
        org.apache.pig.ResourceSchema resourceSchema12 = uriUriNTriplesLoader3.getSchema("wikiobject", job11);
        org.apache.hadoop.mapreduce.Job job14 = null;
        org.apache.pig.ResourceStatistics resourceStatistics15 = uriUriNTriplesLoader3.getStatistics("opennlp / en - sent . bin", job14);
        org.apache.hadoop.mapreduce.RecordReader recordReader16 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit17 = null;
        uriUriNTriplesLoader3.prepareToRead(recordReader16, pigSplit17);
        org.apache.pig.LoadCaster loadCaster19 = uriUriNTriplesLoader3.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job21 = null;
        org.apache.pig.ResourceSchema resourceSchema22 = uriUriNTriplesLoader3.getSchema("\"title\"href", job21);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple23 = uriUriNTriplesLoader3.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNotNull(inputFormat9);
        org.junit.Assert.assertNotNull(resourceSchema12);
        org.junit.Assert.assertNull(resourceStatistics15);
        org.junit.Assert.assertNotNull(loadCaster19);
        org.junit.Assert.assertNotNull(resourceSchema22);
    }

    @Test
    public void test4321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4321");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag12 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText13 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        safeTsvText13.setPigLogger(pigLogger14);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText16.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = safeTsvText13.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = aggregateTextBag12.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = noLoopInPath0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        noLoopInPath0.setPigLogger(pigLogger25);
        org.apache.pig.data.Tuple tuple27 = null;
        java.lang.Boolean boolean28 = noLoopInPath0.exec(tuple27);
        noLoopInPath0.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = noLoopInPath0.getPigLogger();
        org.apache.commons.logging.Log log31 = noLoopInPath0.getLogger();
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = noLoopInPath0.outputSchema(schema32);
        org.apache.pig.data.Tuple tuple34 = null;
        java.lang.Boolean boolean35 = noLoopInPath0.exec(tuple34);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + boolean28 + "' != '" + true + "'", boolean28, true);
        org.junit.Assert.assertNull(pigLogger30);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertEquals("'" + boolean35 + "' != '" + true + "'", boolean35, true);
    }

    @Test
    public void test4322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4322");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://.wikipedia.org/wiki/hi%21", job4);
        org.apache.hadoop.mapreduce.InputFormat inputFormat6 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.apache.hadoop.mapreduce.InputFormat inputFormat7 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.apache.hadoop.mapreduce.Job job9 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesLoader2.setLocation("http://\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\".wikipedia.org/wiki/%22%22%22opennlp_%2F_en_-_sent_._bin%22%22%22\n", job9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(inputFormat6);
        org.junit.Assert.assertNotNull(inputFormat7);
    }

    @Test
    public void test4323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4323");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel3 = annotatingMarkupParser0.makeWikiModel("title");
        java.lang.String str5 = annotatingMarkupParser0.parse("hi!");
        info.bliki.wiki.model.WikiModel wikiModel7 = annotatingMarkupParser0.makeWikiModel("titlehref");
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList9 = annotatingMarkupParser0.getHeaderAnnotations();
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(wikiModel3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!\n" + "'", str5, "hi!\n");
        org.junit.Assert.assertNotNull(wikiModel7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(annotationList9);
    }

    @Test
    public void test4324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4324");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("\"opennlp / en - sent . bin\"", "");
        org.apache.hadoop.mapreduce.InputFormat inputFormat3 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceStatistics resourceStatistics6 = uriStringLiteralNTriplesLoader2.getStatistics("\"\"\n", job5);
        org.junit.Assert.assertNotNull(inputFormat3);
        org.junit.Assert.assertNull(resourceStatistics6);
    }

    @Test
    public void test4325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4325");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel3 = annotatingMarkupParser0.makeWikiModel("title");
        java.util.List<pignlproc.markup.Annotation> annotationList4 = annotatingMarkupParser0.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = null;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser6 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser6.getHeaders();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser6.getHeaders();
        java.lang.String str10 = annotatingMarkupParser6.parse("\"title\"");
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser6.getParagraphs();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser13 = new pignlproc.markup.AnnotatingMarkupParser("opennlp/en-sent.bin");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser14.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList16 = annotatingMarkupParser14.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList17 = annotatingMarkupParser14.getParagraphAnnotations();
        java.util.List<java.lang.String> strList18 = annotatingMarkupParser14.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList19 = annotatingMarkupParser14.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser20 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser20.getHeaderAnnotations();
        java.util.List<java.lang.String> strList22 = annotatingMarkupParser20.getParagraphs();
        java.lang.Appendable appendable23 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable24 = annotatingMarkupParser20.new CountingAppendable(appendable23);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable25 = annotatingMarkupParser14.new CountingAppendable((java.lang.Appendable) countingAppendable24);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable26 = annotatingMarkupParser13.new CountingAppendable((java.lang.Appendable) countingAppendable25);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable27 = annotatingMarkupParser6.new CountingAppendable((java.lang.Appendable) countingAppendable26);
        info.bliki.wiki.model.IWikiModel iWikiModel28 = null;
        annotatingMarkupParser0.nodesToText(annotationList5, (java.lang.Appendable) countingAppendable26, iWikiModel28);
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(wikiModel3);
        org.junit.Assert.assertNotNull(annotationList4);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"title\"\n" + "'", str10, "\"title\"\n");
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(annotationList16);
        org.junit.Assert.assertNotNull(annotationList17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(annotationList19);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNotNull(strList22);
    }

    @Test
    public void test4326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4326");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("http://hi!\n.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        mergeAsOpenNLPAnnotatedText1.setPigLogger(pigLogger2);
        mergeAsOpenNLPAnnotatedText1.progress();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText6 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink7 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = null;
        sentencesWithLink7.setPigLogger(pigLogger8);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable10 = sentencesWithLink7.getReporter();
        java.lang.reflect.Type type11 = sentencesWithLink7.getReturnType();
        pignlproc.evaluation.SafeTsvText safeTsvText12 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger13 = null;
        safeTsvText12.setPigLogger(pigLogger13);
        safeTsvText12.finish();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink16 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.NoLoopInPath noLoopInPath17 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText18 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger19 = null;
        safeTsvText18.setPigLogger(pigLogger19);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText21 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable22 = mergeAsOpenNLPAnnotatedText21.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract23 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = checkAbstract23.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = mergeAsOpenNLPAnnotatedText21.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = safeTsvText18.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = noLoopInPath17.outputSchema(schema26);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag29 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText30 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger31 = null;
        safeTsvText30.setPigLogger(pigLogger31);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText33 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable34 = mergeAsOpenNLPAnnotatedText33.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract35 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = checkAbstract35.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = mergeAsOpenNLPAnnotatedText33.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = safeTsvText30.outputSchema(schema38);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = aggregateTextBag29.outputSchema(schema38);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = noLoopInPath17.outputSchema(schema38);
        pignlproc.evaluation.CheckAbstract checkAbstract42 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum44 = null;
        checkAbstract42.warn("http://.wikipedia.org/wiki/hi%21", enum44);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger46 = null;
        checkAbstract42.setPigLogger(pigLogger46);
        checkAbstract42.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText49 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger50 = null;
        safeTsvText49.setPigLogger(pigLogger50);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText52 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable53 = mergeAsOpenNLPAnnotatedText52.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract54 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = checkAbstract54.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = mergeAsOpenNLPAnnotatedText52.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = safeTsvText49.outputSchema(schema57);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = checkAbstract42.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = noLoopInPath17.outputSchema(schema59);
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = sentencesWithLink16.outputSchema(schema60);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = safeTsvText12.outputSchema(schema60);
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = sentencesWithLink7.outputSchema(schema60);
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = mergeAsOpenNLPAnnotatedText6.outputSchema(schema60);
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = mergeAsOpenNLPAnnotatedText1.outputSchema(schema64);
        org.junit.Assert.assertNull(pigProgressable10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNull(pigProgressable22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(pigProgressable34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(pigProgressable53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
    }

    @Test
    public void test4327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4327");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.CheckAbstract checkAbstract2 = new pignlproc.evaluation.CheckAbstract((int) (byte) 10);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = checkAbstract2.getArgToFuncMapping();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray6 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList7 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList7, spanArray6);
        java.lang.String str9 = mergeAsOpenNLPAnnotatedText4.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList7);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList10 = mergeAsOpenNLPAnnotatedText4.getArgToFuncMapping();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText11 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray13 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList14 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList14, spanArray13);
        java.lang.String str16 = mergeAsOpenNLPAnnotatedText11.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList14);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger17 = null;
        mergeAsOpenNLPAnnotatedText11.setPigLogger(pigLogger17);
        boolean boolean19 = mergeAsOpenNLPAnnotatedText11.isAsynchronous();
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum22 = null;
        checkAbstract20.warn("http://.wikipedia.org/wiki/hi%21", enum22);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable24 = null;
        checkAbstract20.setReporter(pigProgressable24);
        java.lang.reflect.Type type26 = checkAbstract20.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath27 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText28 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger29 = null;
        safeTsvText28.setPigLogger(pigLogger29);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText31 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable32 = mergeAsOpenNLPAnnotatedText31.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract33 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = checkAbstract33.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = mergeAsOpenNLPAnnotatedText31.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = safeTsvText28.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = noLoopInPath27.outputSchema(schema36);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag39 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText40 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger41 = null;
        safeTsvText40.setPigLogger(pigLogger41);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText43 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable44 = mergeAsOpenNLPAnnotatedText43.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract45 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = checkAbstract45.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = mergeAsOpenNLPAnnotatedText43.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = safeTsvText40.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = aggregateTextBag39.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = noLoopInPath27.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = checkAbstract20.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = mergeAsOpenNLPAnnotatedText11.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = checkAbstract2.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = noLoopInPath0.outputSchema(schema55);
        java.lang.reflect.Type type57 = noLoopInPath0.getReturnType();
        java.lang.reflect.Type type58 = noLoopInPath0.getReturnType();
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNotNull(spanArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi !" + "'", str9, "hi !");
        org.junit.Assert.assertNull(funcSpecList10);
        org.junit.Assert.assertNotNull(spanArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi !" + "'", str16, "hi !");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNull(pigProgressable32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(pigProgressable44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type58);
    }

    @Test
    public void test4328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4328");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("\"hi!\"\n", "\"\"\"\"\"\"\"http://.wikipedia.org/wiki/hi%21\"\"\"\" \"\"\"", "\"opennlp / en - sent . bin\"\n");
        org.apache.hadoop.mapreduce.Job job5 = null;
        java.lang.String[] strArray6 = uriUriNTriplesLoader3.getPartitionKeys("\"\"\"title\"\" \"href", job5);
        org.apache.hadoop.mapreduce.Job job8 = null;
        org.apache.pig.ResourceSchema resourceSchema9 = uriUriNTriplesLoader3.getSchema("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22", job8);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple10 = uriUriNTriplesLoader3.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strArray6);
        org.junit.Assert.assertNotNull(resourceSchema9);
    }

    @Test
    public void test4329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4329");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        mergeAsOpenNLPAnnotatedText0.setPigLogger(pigLogger6);
        boolean boolean8 = mergeAsOpenNLPAnnotatedText0.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText10 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray12 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList13 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList13, spanArray12);
        java.lang.String str15 = mergeAsOpenNLPAnnotatedText10.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList13);
        java.lang.String str16 = mergeAsOpenNLPAnnotatedText0.merge("opennlp/en-sent.bin", (java.util.List<opennlp.tools.util.Span>) spanList13);
        mergeAsOpenNLPAnnotatedText0.progress();
        org.apache.commons.logging.Log log18 = mergeAsOpenNLPAnnotatedText0.getLogger();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText21 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("hi!");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText23 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger24 = mergeAsOpenNLPAnnotatedText23.getPigLogger();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList25 = mergeAsOpenNLPAnnotatedText23.getArgToFuncMapping();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink27 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger28 = null;
        sentencesWithLink27.setPigLogger(pigLogger28);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable30 = sentencesWithLink27.getReporter();
        java.lang.reflect.Type type31 = sentencesWithLink27.getReturnType();
        boolean boolean32 = sentencesWithLink27.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger33 = sentencesWithLink27.getPigLogger();
        java.lang.Enum enum35 = null;
        sentencesWithLink27.warn("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", enum35);
        pignlproc.markup.Annotation annotation41 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        java.lang.String str42 = annotation41.label;
        java.util.List<opennlp.tools.util.Span> spanList43 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) enum35, (java.lang.Object) str42);
        java.lang.String str44 = mergeAsOpenNLPAnnotatedText23.merge("\"hi!\"", spanList43);
        java.lang.String str45 = mergeAsOpenNLPAnnotatedText21.merge("\"http://.wikipedia.org/wiki/hi%21\"", spanList43);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable46 = mergeAsOpenNLPAnnotatedText21.getReporter();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText49 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22");
        java.lang.reflect.Type type50 = mergeAsOpenNLPAnnotatedText49.getReturnType();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText52 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray54 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList55 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList55, spanArray54);
        java.lang.String str57 = mergeAsOpenNLPAnnotatedText52.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList55);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger58 = null;
        mergeAsOpenNLPAnnotatedText52.setPigLogger(pigLogger58);
        boolean boolean60 = mergeAsOpenNLPAnnotatedText52.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText62 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray64 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList65 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList65, spanArray64);
        java.lang.String str67 = mergeAsOpenNLPAnnotatedText62.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList65);
        java.lang.String str68 = mergeAsOpenNLPAnnotatedText52.merge("opennlp/en-sent.bin", (java.util.List<opennlp.tools.util.Span>) spanList65);
        java.lang.String str69 = mergeAsOpenNLPAnnotatedText49.merge("http://http://hi!\n.wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin", (java.util.List<opennlp.tools.util.Span>) spanList65);
        java.lang.String str70 = mergeAsOpenNLPAnnotatedText21.merge("http://\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\".wikipedia.org/wiki/href", (java.util.List<opennlp.tools.util.Span>) spanList65);
        java.lang.String str71 = mergeAsOpenNLPAnnotatedText0.merge("\"http://.wikipedia.org/wiki/hi%21\"\n\n", (java.util.List<opennlp.tools.util.Span>) spanList65);
        boolean boolean72 = mergeAsOpenNLPAnnotatedText0.isAsynchronous();
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi !" + "'", str5, "hi !");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(spanArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "href" + "'", str15, "href");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "opennlp / en - sent . bin" + "'", str16, "opennlp / en - sent . bin");
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNull(pigLogger24);
        org.junit.Assert.assertNull(funcSpecList25);
        org.junit.Assert.assertNull(pigProgressable30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(pigLogger33);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "title" + "'", str42, "title");
        org.junit.Assert.assertNotNull(spanList43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\" hi ! \"" + "'", str44, "\" hi ! \"");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\" http : // . wikipedia . org / wiki / hi % 21 \"" + "'", str45, "\" http : // . wikipedia . org / wiki / hi % 21 \"");
        org.junit.Assert.assertNull(pigProgressable46);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(spanArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi !" + "'", str57, "hi !");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(spanArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "href" + "'", str67, "href");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "opennlp / en - sent . bin" + "'", str68, "opennlp / en - sent . bin");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "http : // http : // hi ! . wikipedia . org / wiki / % 22 _ title _ % 22 . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin" + "'", str69, "http : // http : // hi ! . wikipedia . org / wiki / % 22 _ title _ % 22 . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "http : // \"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\" . wikipedia . org / wiki / href" + "'", str70, "http : // \"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\" . wikipedia . org / wiki / href");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "\" http : // . wikipedia . org / wiki / hi % 21 \"" + "'", str71, "\" http : // . wikipedia . org / wiki / hi % 21 \"");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test4330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4330");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("http://hi!\n.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        mergeAsOpenNLPAnnotatedText1.setPigLogger(pigLogger2);
        mergeAsOpenNLPAnnotatedText1.finish();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList5 = mergeAsOpenNLPAnnotatedText1.getArgToFuncMapping();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = mergeAsOpenNLPAnnotatedText1.getArgToFuncMapping();
        org.junit.Assert.assertNull(funcSpecList5);
        org.junit.Assert.assertNull(funcSpecList6);
    }

    @Test
    public void test4331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4331");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = sentencesWithLink0.getPigLogger();
        java.lang.Enum enum3 = null;
        sentencesWithLink0.warn("opennlp / en - sent . bin", enum3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        sentencesWithLink0.setReporter(pigProgressable5);
        java.lang.reflect.Type type7 = sentencesWithLink0.getReturnType();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList8 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.progress();
        boolean boolean10 = sentencesWithLink0.isAsynchronous();
        java.lang.reflect.Type type11 = sentencesWithLink0.getReturnType();
        java.lang.reflect.Type type12 = sentencesWithLink0.getReturnType();
        java.lang.Enum enum14 = null;
        sentencesWithLink0.warn("\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/%22title%22href\"", enum14);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = sentencesWithLink0.getPigLogger();
        org.junit.Assert.assertNull(pigLogger1);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(funcSpecList8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNull(pigLogger16);
    }

    @Test
    public void test4332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4332");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract3 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum5 = null;
        checkAbstract3.warn("http://.wikipedia.org/wiki/hi%21", enum5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        checkAbstract3.setPigLogger(pigLogger7);
        checkAbstract3.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText10 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        safeTsvText10.setPigLogger(pigLogger11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = mergeAsOpenNLPAnnotatedText13.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract15.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = safeTsvText10.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract3.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = concatTextBag2.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = sentencesWithLink0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = null;
        sentencesWithLink0.setPigLogger(pigLogger23);
        java.lang.reflect.Type type25 = sentencesWithLink0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable26 = sentencesWithLink0.getReporter();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList27 = sentencesWithLink0.getArgToFuncMapping();
        pignlproc.evaluation.CheckAbstract checkAbstract28 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum30 = null;
        checkAbstract28.warn("http://.wikipedia.org/wiki/hi%21", enum30);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger32 = null;
        checkAbstract28.setPigLogger(pigLogger32);
        checkAbstract28.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText35 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger36 = null;
        safeTsvText35.setPigLogger(pigLogger36);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText38 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable39 = mergeAsOpenNLPAnnotatedText38.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract40 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = checkAbstract40.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = mergeAsOpenNLPAnnotatedText38.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = safeTsvText35.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = checkAbstract28.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = sentencesWithLink0.outputSchema(schema45);
        org.junit.Assert.assertNull(pigProgressable14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNull(pigProgressable26);
        org.junit.Assert.assertNull(funcSpecList27);
        org.junit.Assert.assertNull(pigProgressable39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test4333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4333");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum2 = null;
        safeTsvText0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = safeTsvText0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        safeTsvText0.setReporter(pigProgressable5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = null;
        safeTsvText0.setReporter(pigProgressable7);
        boolean boolean9 = safeTsvText0.isAsynchronous();
        java.lang.Enum enum11 = null;
        safeTsvText0.warn("\"title\"\n", enum11);
        pignlproc.evaluation.ConcatTextBag concatTextBag14 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum17 = null;
        checkAbstract15.warn("http://.wikipedia.org/wiki/hi%21", enum17);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger19 = null;
        checkAbstract15.setPigLogger(pigLogger19);
        checkAbstract15.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText22 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = null;
        safeTsvText22.setPigLogger(pigLogger23);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText25 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable26 = mergeAsOpenNLPAnnotatedText25.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract27 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = checkAbstract27.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = mergeAsOpenNLPAnnotatedText25.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = safeTsvText22.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = checkAbstract15.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = concatTextBag14.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = safeTsvText0.outputSchema(schema32);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink35 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger36 = null;
        sentencesWithLink35.setPigLogger(pigLogger36);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable38 = sentencesWithLink35.getReporter();
        java.lang.reflect.Type type39 = sentencesWithLink35.getReturnType();
        pignlproc.evaluation.SafeTsvText safeTsvText40 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger41 = null;
        safeTsvText40.setPigLogger(pigLogger41);
        safeTsvText40.finish();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink44 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.NoLoopInPath noLoopInPath45 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText46 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger47 = null;
        safeTsvText46.setPigLogger(pigLogger47);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText49 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable50 = mergeAsOpenNLPAnnotatedText49.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract51 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = checkAbstract51.outputSchema(schema52);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = mergeAsOpenNLPAnnotatedText49.outputSchema(schema52);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = safeTsvText46.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = noLoopInPath45.outputSchema(schema54);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag57 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText58 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger59 = null;
        safeTsvText58.setPigLogger(pigLogger59);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText61 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable62 = mergeAsOpenNLPAnnotatedText61.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract63 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = checkAbstract63.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = mergeAsOpenNLPAnnotatedText61.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = safeTsvText58.outputSchema(schema66);
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = aggregateTextBag57.outputSchema(schema66);
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = noLoopInPath45.outputSchema(schema66);
        pignlproc.evaluation.CheckAbstract checkAbstract70 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum72 = null;
        checkAbstract70.warn("http://.wikipedia.org/wiki/hi%21", enum72);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger74 = null;
        checkAbstract70.setPigLogger(pigLogger74);
        checkAbstract70.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText77 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger78 = null;
        safeTsvText77.setPigLogger(pigLogger78);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText80 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable81 = mergeAsOpenNLPAnnotatedText80.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract82 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema83 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema84 = checkAbstract82.outputSchema(schema83);
        org.apache.pig.impl.logicalLayer.schema.Schema schema85 = mergeAsOpenNLPAnnotatedText80.outputSchema(schema83);
        org.apache.pig.impl.logicalLayer.schema.Schema schema86 = safeTsvText77.outputSchema(schema85);
        org.apache.pig.impl.logicalLayer.schema.Schema schema87 = checkAbstract70.outputSchema(schema86);
        org.apache.pig.impl.logicalLayer.schema.Schema schema88 = noLoopInPath45.outputSchema(schema87);
        org.apache.pig.impl.logicalLayer.schema.Schema schema89 = sentencesWithLink44.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema90 = safeTsvText40.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema91 = sentencesWithLink35.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema92 = safeTsvText0.outputSchema(schema88);
        java.lang.Enum enum94 = null;
        safeTsvText0.warn("\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\" \"", enum94);
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(pigProgressable26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(pigProgressable38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNull(pigProgressable50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(pigProgressable62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(pigProgressable81);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
    }

    @Test
    public void test4334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4334");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser3 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser3.getHeaders();
        java.util.List<java.lang.String> strList5 = annotatingMarkupParser3.getHeaders();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser3.getHeaders();
        boolean boolean7 = annotatingMarkupParser3.noLinks();
        java.util.List<pignlproc.markup.Annotation> annotationList8 = annotatingMarkupParser3.getWikiLinkAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser9 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList10 = annotatingMarkupParser9.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList11 = annotatingMarkupParser9.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList12 = annotatingMarkupParser9.getParagraphAnnotations();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser9.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList14 = annotatingMarkupParser9.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser15 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser15.getHeaders();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser17 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList18 = annotatingMarkupParser17.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList19 = annotatingMarkupParser17.getWikiLinkAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser20 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser20.getHeaders();
        java.util.List<java.lang.String> strList22 = annotatingMarkupParser20.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList23 = annotatingMarkupParser20.getHeaderAnnotations();
        java.lang.String str24 = annotatingMarkupParser20.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser25 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser25.getHeaders();
        java.util.List<java.lang.String> strList27 = annotatingMarkupParser25.getHeaders();
        java.lang.Appendable appendable28 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable29 = annotatingMarkupParser25.new CountingAppendable(appendable28);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable30 = annotatingMarkupParser20.new CountingAppendable((java.lang.Appendable) countingAppendable29);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable31 = annotatingMarkupParser17.new CountingAppendable((java.lang.Appendable) countingAppendable30);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable32 = annotatingMarkupParser15.new CountingAppendable((java.lang.Appendable) countingAppendable30);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable33 = annotatingMarkupParser9.new CountingAppendable((java.lang.Appendable) countingAppendable32);
        countingAppendable32.currentPosition = 10;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser37 = new pignlproc.markup.AnnotatingMarkupParser("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21");
        java.util.List<pignlproc.markup.Annotation> annotationList38 = annotatingMarkupParser37.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel40 = annotatingMarkupParser37.makeWikiModel("http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/%22opennlp_%2F_en_-_sent_._bin%22%0A");
        annotatingMarkupParser0.nodesToText(annotationList8, (java.lang.Appendable) countingAppendable32, (info.bliki.wiki.model.IWikiModel) wikiModel40);
        countingAppendable32.currentPosition = 'a';
        countingAppendable32.currentPosition = '4';
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(annotationList8);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(annotationList11);
        org.junit.Assert.assertNotNull(annotationList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(annotationList14);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(annotationList19);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(annotationList23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(annotationList38);
        org.junit.Assert.assertNotNull(wikiModel40);
    }

    @Test
    public void test4335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4335");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("href");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("opennlp/en-sent.bin", job3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = parsingWikipediaLoader1.getSchema("title", job6);
        pignlproc.evaluation.CheckAbstract checkAbstract8 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.data.Tuple tuple9 = null;
        java.lang.Boolean boolean10 = checkAbstract8.exec(tuple9);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList11 = checkAbstract8.getArgToFuncMapping();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<opennlp.tools.util.Span> spanList12 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) parsingWikipediaLoader1, (java.lang.Object) checkAbstract8);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: pignlproc.storage.ParsingWikipediaLoader cannot be cast to java.lang.Integer");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(resourceSchema7);
        org.junit.Assert.assertEquals("'" + boolean10 + "' != '" + false + "'", boolean10, false);
        org.junit.Assert.assertNull(funcSpecList11);
    }

    @Test
    public void test4336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4336");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        java.lang.reflect.Type type4 = sentencesWithLink0.getReturnType();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = sentencesWithLink0.getPigLogger();
        org.apache.commons.logging.Log log7 = sentencesWithLink0.getLogger();
        org.apache.pig.data.Tuple tuple8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.DataBag dataBag9 = sentencesWithLink0.exec(tuple8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(pigLogger6);
        org.junit.Assert.assertNotNull(log7);
    }

    @Test
    public void test4337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4337");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("hi!");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser2 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser2.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList4 = annotatingMarkupParser2.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser2.getParagraphAnnotations();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser2.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser2.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser8 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList9 = annotatingMarkupParser8.getHeaderAnnotations();
        java.util.List<java.lang.String> strList10 = annotatingMarkupParser8.getParagraphs();
        java.lang.Appendable appendable11 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable12 = annotatingMarkupParser8.new CountingAppendable(appendable11);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable13 = annotatingMarkupParser2.new CountingAppendable((java.lang.Appendable) countingAppendable12);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable14 = annotatingMarkupParser1.new CountingAppendable((java.lang.Appendable) countingAppendable12);
        java.lang.Appendable appendable15 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable16 = annotatingMarkupParser1.new CountingAppendable(appendable15);
        java.util.List<java.lang.String> strList17 = annotatingMarkupParser1.getParagraphs();
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(annotationList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNotNull(annotationList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strList17);
    }

    @Test
    public void test4338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4338");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.finish();
        org.apache.commons.logging.Log log3 = sentencesWithLink0.getLogger();
        java.lang.reflect.Type type4 = sentencesWithLink0.getReturnType();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        pignlproc.evaluation.AggregateTextBag aggregateTextBag8 = new pignlproc.evaluation.AggregateTextBag((int) '#', false);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText9 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray11 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList12 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList12, spanArray11);
        java.lang.String str14 = mergeAsOpenNLPAnnotatedText9.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList12);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList15 = mergeAsOpenNLPAnnotatedText9.getArgToFuncMapping();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray18 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList19 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList19, spanArray18);
        java.lang.String str21 = mergeAsOpenNLPAnnotatedText16.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList19);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger22 = null;
        mergeAsOpenNLPAnnotatedText16.setPigLogger(pigLogger22);
        boolean boolean24 = mergeAsOpenNLPAnnotatedText16.isAsynchronous();
        pignlproc.evaluation.CheckAbstract checkAbstract25 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum27 = null;
        checkAbstract25.warn("http://.wikipedia.org/wiki/hi%21", enum27);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable29 = null;
        checkAbstract25.setReporter(pigProgressable29);
        java.lang.reflect.Type type31 = checkAbstract25.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath32 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText33 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger34 = null;
        safeTsvText33.setPigLogger(pigLogger34);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText36 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable37 = mergeAsOpenNLPAnnotatedText36.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract38 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = checkAbstract38.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = mergeAsOpenNLPAnnotatedText36.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = safeTsvText33.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = noLoopInPath32.outputSchema(schema41);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag44 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText45 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger46 = null;
        safeTsvText45.setPigLogger(pigLogger46);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText48 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable49 = mergeAsOpenNLPAnnotatedText48.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract50 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = checkAbstract50.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = mergeAsOpenNLPAnnotatedText48.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = safeTsvText45.outputSchema(schema53);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = aggregateTextBag44.outputSchema(schema53);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = noLoopInPath32.outputSchema(schema53);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = checkAbstract25.outputSchema(schema53);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema53);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = mergeAsOpenNLPAnnotatedText9.outputSchema(schema53);
        pignlproc.evaluation.CheckAbstract checkAbstract60 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum62 = null;
        checkAbstract60.warn("http://.wikipedia.org/wiki/hi%21", enum62);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger64 = null;
        checkAbstract60.setPigLogger(pigLogger64);
        checkAbstract60.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText67 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger68 = null;
        safeTsvText67.setPigLogger(pigLogger68);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText70 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable71 = mergeAsOpenNLPAnnotatedText70.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract72 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema73 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema74 = checkAbstract72.outputSchema(schema73);
        org.apache.pig.impl.logicalLayer.schema.Schema schema75 = mergeAsOpenNLPAnnotatedText70.outputSchema(schema73);
        org.apache.pig.impl.logicalLayer.schema.Schema schema76 = safeTsvText67.outputSchema(schema75);
        org.apache.pig.impl.logicalLayer.schema.Schema schema77 = checkAbstract60.outputSchema(schema76);
        org.apache.pig.impl.logicalLayer.schema.Schema schema78 = mergeAsOpenNLPAnnotatedText9.outputSchema(schema77);
        org.apache.pig.impl.logicalLayer.schema.Schema schema79 = aggregateTextBag8.outputSchema(schema77);
        org.apache.pig.impl.logicalLayer.schema.Schema schema80 = sentencesWithLink0.outputSchema(schema79);
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNotNull(log3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(spanArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi !" + "'", str14, "hi !");
        org.junit.Assert.assertNull(funcSpecList15);
        org.junit.Assert.assertNotNull(spanArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi !" + "'", str21, "hi !");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNull(pigProgressable37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(pigProgressable49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(pigProgressable71);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
    }

    @Test
    public void test4339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4339");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("\"hi!\"\n", "");
        org.apache.pig.Expression expression3 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = uriStringLiteralNTriplesLoader2.getSchema("\"http://http://hi! .wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin\"", job6);
        org.apache.hadoop.mapreduce.RecordReader recordReader8 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit9 = null;
        uriStringLiteralNTriplesLoader2.prepareToRead(recordReader8, pigSplit9);
        org.apache.hadoop.mapreduce.Job job12 = null;
        org.apache.pig.ResourceSchema resourceSchema13 = uriStringLiteralNTriplesLoader2.getSchema("http://.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521\n", job12);
        org.junit.Assert.assertNotNull(resourceSchema7);
        org.junit.Assert.assertNotNull(resourceSchema13);
    }

    @Test
    public void test4340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4340");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("title", false);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger3 = null;
        concatTextBag2.setPigLogger(pigLogger3);
        java.lang.Enum enum6 = null;
        concatTextBag2.warn("\"opennlp / en - sent . bin\"", enum6);
        java.lang.reflect.Type type8 = concatTextBag2.getReturnType();
        java.lang.reflect.Type type9 = concatTextBag2.getReturnType();
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
    }

    @Test
    public void test4341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4341");
        pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract((int) (byte) 10);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList2 = checkAbstract1.getArgToFuncMapping();
        boolean boolean3 = checkAbstract1.isAsynchronous();
        java.lang.Enum enum5 = null;
        checkAbstract1.warn("\" hi ! \"", enum5);
        org.junit.Assert.assertNull(funcSpecList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test4342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4342");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        sentencesWithLink0.setPigLogger(pigLogger2);
        java.lang.reflect.Type type4 = sentencesWithLink0.getReturnType();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        java.lang.Enum enum7 = null;
        sentencesWithLink0.warn("\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/href\"\n", enum7);
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test4343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4343");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.InputFormat inputFormat4 = uriUriNTriplesLoader3.getInputFormat();
        org.apache.pig.LoadCaster loadCaster5 = uriUriNTriplesLoader3.getLoadCaster();
        org.apache.hadoop.fs.Path path7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = uriUriNTriplesLoader3.relativeToAbsolutePath("\"\"\" hi ! \"\" \"", path7);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"\"\" hi ! \"\" \" curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputFormat4);
        org.junit.Assert.assertNotNull(loadCaster5);
    }

    @Test
    public void test4344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4344");
        java.net.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader wikipediaRecordReader3 = new pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader(uRL0, (long) 'a', 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4345");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        sentencesWithLink0.setPigLogger(pigLogger2);
        java.lang.reflect.Type type4 = sentencesWithLink0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        sentencesWithLink0.setPigLogger(pigLogger7);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink9 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList10 = sentencesWithLink9.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        sentencesWithLink9.setPigLogger(pigLogger11);
        java.lang.reflect.Type type13 = sentencesWithLink9.getReturnType();
        java.lang.Enum enum15 = null;
        sentencesWithLink9.warn("\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/hi%21\"", enum15);
        pignlproc.evaluation.CheckAbstract checkAbstract17 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum19 = null;
        checkAbstract17.warn("http://.wikipedia.org/wiki/hi%21", enum19);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable21 = null;
        checkAbstract17.setReporter(pigProgressable21);
        java.lang.reflect.Type type23 = checkAbstract17.getReturnType();
        boolean boolean24 = checkAbstract17.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList25 = checkAbstract17.getArgToFuncMapping();
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = checkAbstract17.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = sentencesWithLink9.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = sentencesWithLink0.outputSchema(schema27);
        java.lang.reflect.Type type30 = sentencesWithLink0.getReturnType();
        sentencesWithLink0.progress();
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNull(pigProgressable6);
        org.junit.Assert.assertNull(funcSpecList10);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(funcSpecList25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(type30);
    }

    @Test
    public void test4346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4346");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("\"hi!\"");
    }

    @Test
    public void test4347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4347");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("\"http://.wikipedia.org/wiki/hi%21\"\n", "http://\"http://.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22", "\"hi!\"");
        org.apache.pig.Expression expression4 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression4);
        org.apache.hadoop.mapreduce.RecordReader recordReader6 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit7 = null;
        uriUriNTriplesLoader3.prepareToRead(recordReader6, pigSplit7);
    }

    @Test
    public void test4348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4348");
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract("\"opennlp/en-sent.bin\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"\"opennlp/en-sent.bin\"\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4349");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = null;
        sentencesWithLink0.setPigLogger(pigLogger4);
        org.apache.commons.logging.Log log6 = sentencesWithLink0.getLogger();
        java.lang.Enum enum8 = null;
        sentencesWithLink0.warn("http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href", enum8);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable10 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = sentencesWithLink0.getPigLogger();
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNull(pigProgressable10);
        org.junit.Assert.assertNull(pigLogger11);
    }

    @Test
    public void test4350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4350");
        pignlproc.evaluation.ConcatTextBag concatTextBag0 = new pignlproc.evaluation.ConcatTextBag();
        org.apache.pig.data.Tuple tuple1 = null;
        java.lang.String str2 = concatTextBag0.exec(tuple1);
        java.lang.Enum enum4 = null;
        concatTextBag0.warn("href", enum4);
        org.apache.pig.data.Tuple tuple6 = null;
        java.lang.String str7 = concatTextBag0.exec(tuple6);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = null;
        concatTextBag0.setReporter(pigProgressable8);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable10 = null;
        concatTextBag0.setReporter(pigProgressable10);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test4351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4351");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("titlehref");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22", job3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        // The following exception was thrown during execution in test generation
        try {
            parsingWikipediaLoader1.setLocation("http://hi!\n.wikipedia.org/wiki/%22_title_%22\n", job6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema4);
    }

    @Test
    public void test4352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4352");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((int) (byte) 10, false);
        java.lang.Enum enum4 = null;
        aggregateTextBag2.warn("http://.wikipedia.org/wiki/hi%21\n", enum4);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = aggregateTextBag2.getPigLogger();
        org.junit.Assert.assertNull(pigLogger6);
    }

    @Test
    public void test4353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4353");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("");
        java.lang.String str3 = annotatingMarkupParser1.parse("http://http://\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/href\".wikipedia.org/wiki/%22_opennlp_%2F_en_-_sent_._bin_%22.wikipedia.org/wiki/http%3A%2F%2F%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22.wikipedia.org%2Fwiki%2F%2522%2522%2522opennlp_%252F_en_-_sent_._bin%2522%2522%2522\n");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://http://\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/href\".wikipedia.org/wiki/%22_opennlp_%2F_en_-_sent_._bin_%22.wikipedia.org/wiki/http%3A%2F%2F%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22.wikipedia.org%2Fwiki%2F%2522%2522%2522opennlp_%252F_en_-_sent_._bin%2522%2522%2522\n\n" + "'", str3, "http://http://\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/href\".wikipedia.org/wiki/%22_opennlp_%2F_en_-_sent_._bin_%22.wikipedia.org/wiki/http%3A%2F%2F%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22.wikipedia.org%2Fwiki%2F%2522%2522%2522opennlp_%252F_en_-_sent_._bin%2522%2522%2522\n\n");
    }

    @Test
    public void test4354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4354");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        org.apache.commons.logging.Log log4 = sentencesWithLink0.getLogger();
        java.lang.reflect.Type type5 = sentencesWithLink0.getReturnType();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink6 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        sentencesWithLink6.setPigLogger(pigLogger7);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = sentencesWithLink6.getReporter();
        java.lang.reflect.Type type10 = sentencesWithLink6.getReturnType();
        pignlproc.evaluation.SafeTsvText safeTsvText11 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger12 = null;
        safeTsvText11.setPigLogger(pigLogger12);
        safeTsvText11.finish();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink15 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.NoLoopInPath noLoopInPath16 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText17 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger18 = null;
        safeTsvText17.setPigLogger(pigLogger18);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText20 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable21 = mergeAsOpenNLPAnnotatedText20.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract22 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = checkAbstract22.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = mergeAsOpenNLPAnnotatedText20.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = safeTsvText17.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = noLoopInPath16.outputSchema(schema25);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag28 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText29 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = null;
        safeTsvText29.setPigLogger(pigLogger30);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText32 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable33 = mergeAsOpenNLPAnnotatedText32.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract34 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = checkAbstract34.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = mergeAsOpenNLPAnnotatedText32.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = safeTsvText29.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = aggregateTextBag28.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = noLoopInPath16.outputSchema(schema37);
        pignlproc.evaluation.CheckAbstract checkAbstract41 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum43 = null;
        checkAbstract41.warn("http://.wikipedia.org/wiki/hi%21", enum43);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger45 = null;
        checkAbstract41.setPigLogger(pigLogger45);
        checkAbstract41.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText48 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger49 = null;
        safeTsvText48.setPigLogger(pigLogger49);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText51 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable52 = mergeAsOpenNLPAnnotatedText51.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract53 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = checkAbstract53.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = mergeAsOpenNLPAnnotatedText51.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = safeTsvText48.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = checkAbstract41.outputSchema(schema57);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = noLoopInPath16.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = sentencesWithLink15.outputSchema(schema59);
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = safeTsvText11.outputSchema(schema59);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = sentencesWithLink6.outputSchema(schema59);
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = sentencesWithLink0.outputSchema(schema59);
        sentencesWithLink0.finish();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList65 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger66 = null;
        sentencesWithLink0.setPigLogger(pigLogger66);
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNull(pigProgressable9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNull(pigProgressable21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(pigProgressable33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(pigProgressable52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(funcSpecList65);
    }

    @Test
    public void test4355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4355");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = checkAbstract0.getReporter();
        checkAbstract0.progress();
        org.apache.pig.data.Tuple tuple5 = null;
        java.lang.Boolean boolean6 = checkAbstract0.exec(tuple5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = checkAbstract0.getPigLogger();
        boolean boolean8 = checkAbstract0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = null;
        checkAbstract0.setReporter(pigProgressable9);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + false + "'", boolean6, false);
        org.junit.Assert.assertNull(pigLogger7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test4356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4356");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("title", job3);
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader1.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceStatistics resourceStatistics8 = parsingWikipediaLoader1.getStatistics("\"hi!\"", job7);
        org.apache.pig.LoadCaster loadCaster9 = parsingWikipediaLoader1.getLoadCaster();
        parsingWikipediaLoader1.setUDFContextSignature("\"\"\" hi ! \"\" \"");
        org.apache.hadoop.mapreduce.Job job13 = null;
        // The following exception was thrown during execution in test generation
        try {
            parsingWikipediaLoader1.setLocation("\"\"\"http://\"\"\"\"opennlp / en - sent . bin\"\"\"\".wikipedia.org/wiki/href\"\"\"", job13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Illegal character in scheme name at index 0: \"\"\"http://%22%22%22%22opennlp%20/%20en%20-%20sent%20.%20bin%22%22%22%22.wikipedia.org/wiki/href%22%22%22");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(loadCaster5);
        org.junit.Assert.assertNull(resourceStatistics8);
        org.junit.Assert.assertNotNull(loadCaster9);
    }

    @Test
    public void test4357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4357");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("title", job3);
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader1.getLoadCaster();
        parsingWikipediaLoader1.setUDFContextSignature("http://.wikipedia.org/wiki/hi%21\n");
        org.apache.hadoop.mapreduce.Job job9 = null;
        org.apache.pig.ResourceStatistics resourceStatistics10 = parsingWikipediaLoader1.getStatistics("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521", job9);
        org.apache.pig.Expression expression11 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression11);
        org.apache.hadoop.mapreduce.Job job14 = null;
        org.apache.pig.ResourceSchema resourceSchema15 = parsingWikipediaLoader1.getSchema("http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21", job14);
        org.apache.hadoop.mapreduce.InputFormat inputFormat16 = parsingWikipediaLoader1.getInputFormat();
        org.apache.hadoop.mapreduce.InputFormat inputFormat17 = parsingWikipediaLoader1.getInputFormat();
        org.apache.hadoop.mapreduce.Job job19 = null;
        org.apache.pig.ResourceStatistics resourceStatistics20 = parsingWikipediaLoader1.getStatistics("http://\"\"\"\"\"\"\"\"\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\"\"\"\"\" \"\"\"\"\"\"\".wikipedia.org/wiki/http%3A%2F%2F%22title%22%0A.wikipedia.org%2Fwiki%2F", job19);
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(loadCaster5);
        org.junit.Assert.assertNull(resourceStatistics10);
        org.junit.Assert.assertNotNull(resourceSchema15);
        org.junit.Assert.assertNotNull(inputFormat16);
        org.junit.Assert.assertNotNull(inputFormat17);
        org.junit.Assert.assertNull(resourceStatistics20);
    }

    @Test
    public void test4358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4358");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.finish();
        org.apache.commons.logging.Log log8 = sentencesWithLink0.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = null;
        sentencesWithLink0.setReporter(pigProgressable9);
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(funcSpecList6);
        org.junit.Assert.assertNotNull(log8);
    }

    @Test
    public void test4359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4359");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) '4', 35, "http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href\n", "\"http : // \"\" opennlp / en - sent . bin \"\" . wikipedia . org / wiki / href\"\n");
    }

    @Test
    public void test4360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4360");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("http://.wikipedia.org/wiki/hi%21", "hi !", "http://.wikipedia.org/wiki/hi%21\n");
        uriUriNTriplesStorer3.setStoreFuncUDFContextSignature("hi!\n\n");
        org.apache.hadoop.fs.Path path7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = uriUriNTriplesStorer3.relToAbsPathForStoreLocation("\"http : // . wikipedia . org / wiki / hi % 21\"", path7);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"http : // . wikipedia . org / wiki / hi % 21\" curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4361");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21");
        org.apache.pig.data.Tuple tuple2 = null;
        java.lang.String str3 = concatTextBag1.exec(tuple2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = concatTextBag1.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = null;
        concatTextBag1.setPigLogger(pigLogger5);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(pigProgressable4);
    }

    @Test
    public void test4362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4362");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("href", "http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.RecordWriter recordWriter4 = null;
        uriUriNTriplesStorer3.prepareToWrite(recordWriter4);
        org.apache.hadoop.fs.Path path7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = uriUriNTriplesStorer3.relToAbsPathForStoreLocation("\"http://.wikipedia.org/wiki/ \"", path7);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"http://.wikipedia.org/wiki/ \" curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4363");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        org.apache.pig.data.Tuple tuple3 = null;
        java.lang.Boolean boolean4 = checkAbstract0.exec(tuple3);
        java.lang.reflect.Type type5 = checkAbstract0.getReturnType();
        org.apache.pig.data.Tuple tuple6 = null;
        java.lang.Boolean boolean7 = checkAbstract0.exec(tuple6);
        org.apache.commons.logging.Log log8 = checkAbstract0.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger9 = null;
        checkAbstract0.setPigLogger(pigLogger9);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + false + "'", boolean4, false);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + boolean7 + "' != '" + false + "'", boolean7, false);
        org.junit.Assert.assertNotNull(log8);
    }

    @Test
    public void test4364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4364");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger12 = noLoopInPath0.getPigLogger();
        java.lang.reflect.Type type13 = noLoopInPath0.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath14 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText15 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = null;
        safeTsvText15.setPigLogger(pigLogger16);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText18 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = mergeAsOpenNLPAnnotatedText18.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = checkAbstract20.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = mergeAsOpenNLPAnnotatedText18.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = safeTsvText15.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = noLoopInPath14.outputSchema(schema23);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag26 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText27 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger28 = null;
        safeTsvText27.setPigLogger(pigLogger28);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText30 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable31 = mergeAsOpenNLPAnnotatedText30.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract32 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = checkAbstract32.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = mergeAsOpenNLPAnnotatedText30.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = safeTsvText27.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = aggregateTextBag26.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = noLoopInPath14.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = noLoopInPath0.outputSchema(schema38);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable40 = noLoopInPath0.getReporter();
        org.apache.pig.data.Tuple tuple41 = null;
        java.lang.Boolean boolean42 = noLoopInPath0.exec(tuple41);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable43 = noLoopInPath0.getReporter();
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigLogger12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNull(pigProgressable19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(pigProgressable31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(pigProgressable40);
        org.junit.Assert.assertEquals("'" + boolean42 + "' != '" + true + "'", boolean42, true);
        org.junit.Assert.assertNull(pigProgressable43);
    }

    @Test
    public void test4365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4365");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("\" opennlp / en - sent . bin \"");
    }

    @Test
    public void test4366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4366");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("http://\"http://.wikipedia.org/wiki/hi%21\"\n\n.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22");
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser1.getParagraphs();
        java.lang.String str3 = annotatingMarkupParser1.getRedirect();
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test4367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4367");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag0 = new pignlproc.evaluation.AggregateTextBag();
        org.apache.commons.logging.Log log1 = aggregateTextBag0.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable2 = aggregateTextBag0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = null;
        aggregateTextBag0.setReporter(pigProgressable3);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag5 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText6 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        safeTsvText6.setPigLogger(pigLogger7);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText9 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable10 = mergeAsOpenNLPAnnotatedText9.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract11 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = checkAbstract11.outputSchema(schema12);
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = mergeAsOpenNLPAnnotatedText9.outputSchema(schema12);
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = safeTsvText6.outputSchema(schema14);
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = aggregateTextBag5.outputSchema(schema14);
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = aggregateTextBag0.outputSchema(schema16);
        pignlproc.evaluation.NoLoopInPath noLoopInPath18 = new pignlproc.evaluation.NoLoopInPath();
        noLoopInPath18.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger20 = null;
        noLoopInPath18.setPigLogger(pigLogger20);
        org.apache.commons.logging.Log log22 = noLoopInPath18.getLogger();
        pignlproc.evaluation.SafeTsvText safeTsvText23 = new pignlproc.evaluation.SafeTsvText();
        java.lang.reflect.Type type24 = safeTsvText23.getReturnType();
        pignlproc.evaluation.CheckAbstract checkAbstract25 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = checkAbstract25.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = safeTsvText23.outputSchema(schema27);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText29 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray31 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList32 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList32, spanArray31);
        java.lang.String str34 = mergeAsOpenNLPAnnotatedText29.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList32);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList35 = mergeAsOpenNLPAnnotatedText29.getArgToFuncMapping();
        org.apache.commons.logging.Log log36 = mergeAsOpenNLPAnnotatedText29.getLogger();
        pignlproc.evaluation.CheckAbstract checkAbstract37 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum39 = null;
        checkAbstract37.warn("http://.wikipedia.org/wiki/hi%21", enum39);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable41 = null;
        checkAbstract37.setReporter(pigProgressable41);
        java.lang.reflect.Type type43 = checkAbstract37.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath44 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText45 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger46 = null;
        safeTsvText45.setPigLogger(pigLogger46);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText48 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable49 = mergeAsOpenNLPAnnotatedText48.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract50 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = checkAbstract50.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = mergeAsOpenNLPAnnotatedText48.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = safeTsvText45.outputSchema(schema53);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = noLoopInPath44.outputSchema(schema53);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag56 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText57 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger58 = null;
        safeTsvText57.setPigLogger(pigLogger58);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText60 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable61 = mergeAsOpenNLPAnnotatedText60.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract62 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = checkAbstract62.outputSchema(schema63);
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = mergeAsOpenNLPAnnotatedText60.outputSchema(schema63);
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = safeTsvText57.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = aggregateTextBag56.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = noLoopInPath44.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = checkAbstract37.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema70 = mergeAsOpenNLPAnnotatedText29.outputSchema(schema69);
        org.apache.pig.impl.logicalLayer.schema.Schema schema71 = safeTsvText23.outputSchema(schema69);
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = noLoopInPath18.outputSchema(schema71);
        org.apache.pig.impl.logicalLayer.schema.Schema schema73 = aggregateTextBag0.outputSchema(schema71);
        org.apache.pig.data.Tuple tuple74 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str75 = aggregateTextBag0.exec(tuple74);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in AggregateTextBag");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNull(pigProgressable2);
        org.junit.Assert.assertNull(pigProgressable10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(spanArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi !" + "'", str34, "hi !");
        org.junit.Assert.assertNull(funcSpecList35);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNull(pigProgressable49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(pigProgressable61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
    }

    @Test
    public void test4368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4368");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader3.getSchema("", job5);
        org.apache.pig.Expression expression7 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceStatistics resourceStatistics11 = uriUriNTriplesLoader3.getStatistics("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22\n.wikipedia.org/wiki/%22hi%21%22", job10);
        org.apache.pig.LoadCaster loadCaster12 = uriUriNTriplesLoader3.getLoadCaster();
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNull(resourceStatistics11);
        org.junit.Assert.assertNotNull(loadCaster12);
    }

    @Test
    public void test4369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4369");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("\"\"\" hi ! \"\" \"");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        mergeAsOpenNLPAnnotatedText1.setPigLogger(pigLogger2);
    }

    @Test
    public void test4370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4370");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521", "http://.wikipedia.org/wiki/hi%21\n", "http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22");
        org.apache.hadoop.mapreduce.RecordWriter recordWriter4 = null;
        uriUriNTriplesStorer3.prepareToWrite(recordWriter4);
        uriUriNTriplesStorer3.setStoreFuncUDFContextSignature("http://\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\".wikipedia.org/wiki/%22%22%22opennlp_%2F_en_-_sent_._bin%22%22%22");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader10 = new pignlproc.storage.UriStringLiteralNTriplesLoader("\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/%22title%22href\"", "href");
        org.apache.hadoop.mapreduce.Job job12 = null;
        org.apache.pig.ResourceSchema resourceSchema13 = uriStringLiteralNTriplesLoader10.getSchema("\"http://.wikipedia.org/wiki/hi%21\"\n", job12);
        uriUriNTriplesStorer3.checkSchema(resourceSchema13);
        uriUriNTriplesStorer3.setStoreFuncUDFContextSignature("http://http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href.wikipedia.org/wiki/%22http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521_.wikipedia.org%2Fwiki%2F%2522title%2522href%22");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader17 = new pignlproc.storage.UriUriNTriplesLoader();
        org.apache.hadoop.mapreduce.Job job19 = null;
        java.lang.String[] strArray20 = uriUriNTriplesLoader17.getPartitionKeys("title", job19);
        org.apache.hadoop.mapreduce.Job job22 = null;
        org.apache.pig.ResourceSchema resourceSchema23 = uriUriNTriplesLoader17.getSchema("http://.wikipedia.org/wiki/hi%21", job22);
        org.apache.pig.LoadCaster loadCaster24 = uriUriNTriplesLoader17.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job26 = null;
        org.apache.pig.ResourceSchema resourceSchema27 = uriUriNTriplesLoader17.getSchema("\"opennlp / en - sent . bin\"", job26);
        org.apache.hadoop.mapreduce.Job job29 = null;
        org.apache.pig.ResourceSchema resourceSchema30 = uriUriNTriplesLoader17.getSchema("\"titlehref\"", job29);
        uriUriNTriplesStorer3.checkSchema(resourceSchema30);
        org.junit.Assert.assertNotNull(resourceSchema13);
        org.junit.Assert.assertNull(strArray20);
        org.junit.Assert.assertNotNull(resourceSchema23);
        org.junit.Assert.assertNotNull(loadCaster24);
        org.junit.Assert.assertNotNull(resourceSchema27);
        org.junit.Assert.assertNotNull(resourceSchema30);
    }

    @Test
    public void test4371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4371");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader0 = new pignlproc.storage.UriUriNTriplesLoader();
        org.apache.hadoop.mapreduce.Job job2 = null;
        org.apache.pig.ResourceStatistics resourceStatistics3 = uriUriNTriplesLoader0.getStatistics("wikiobject", job2);
        org.apache.hadoop.mapreduce.InputFormat inputFormat4 = uriUriNTriplesLoader0.getInputFormat();
        uriUriNTriplesLoader0.setUDFContextSignature("http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522");
        org.apache.hadoop.mapreduce.RecordReader recordReader7 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit8 = null;
        uriUriNTriplesLoader0.prepareToRead(recordReader7, pigSplit8);
        org.apache.pig.LoadCaster loadCaster10 = uriUriNTriplesLoader0.getLoadCaster();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple11 = uriUriNTriplesLoader0.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics3);
        org.junit.Assert.assertNotNull(inputFormat4);
        org.junit.Assert.assertNotNull(loadCaster10);
    }

    @Test
    public void test4372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4372");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = sentencesWithLink0.getPigLogger();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText7 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray9 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList10 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList10, spanArray9);
        java.lang.String str12 = mergeAsOpenNLPAnnotatedText7.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList10);
        pignlproc.evaluation.ConcatTextBag concatTextBag14 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum17 = null;
        checkAbstract15.warn("http://.wikipedia.org/wiki/hi%21", enum17);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger19 = null;
        checkAbstract15.setPigLogger(pigLogger19);
        checkAbstract15.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText22 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = null;
        safeTsvText22.setPigLogger(pigLogger23);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText25 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable26 = mergeAsOpenNLPAnnotatedText25.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract27 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = checkAbstract27.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = mergeAsOpenNLPAnnotatedText25.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = safeTsvText22.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = checkAbstract15.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = concatTextBag14.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = mergeAsOpenNLPAnnotatedText7.outputSchema(schema32);
        java.util.List<opennlp.tools.util.Span> spanList35 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) pigLogger6, (java.lang.Object) schema32);
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(pigLogger6);
        org.junit.Assert.assertNotNull(spanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "href" + "'", str12, "href");
        org.junit.Assert.assertNull(pigProgressable26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(spanList35);
    }

    @Test
    public void test4373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4373");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader0 = new pignlproc.storage.UriUriNTriplesLoader();
        org.apache.hadoop.mapreduce.InputFormat inputFormat1 = uriUriNTriplesLoader0.getInputFormat();
        org.junit.Assert.assertNotNull(inputFormat1);
    }

    @Test
    public void test4374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4374");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag1 = new pignlproc.evaluation.AggregateTextBag((int) (short) 0);
        java.lang.Enum enum3 = null;
        aggregateTextBag1.warn("href", enum3);
        aggregateTextBag1.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        aggregateTextBag1.setPigLogger(pigLogger6);
        org.apache.commons.logging.Log log8 = aggregateTextBag1.getLogger();
        aggregateTextBag1.finish();
        org.junit.Assert.assertNotNull(log8);
    }

    @Test
    public void test4375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4375");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel3 = annotatingMarkupParser0.makeWikiModel("title");
        java.util.List<pignlproc.markup.Annotation> annotationList4 = annotatingMarkupParser0.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser0.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser6 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser6.getHeaders();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser6.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList9 = annotatingMarkupParser6.getHeaderAnnotations();
        java.lang.String str10 = annotatingMarkupParser6.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser11 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser11.getHeaders();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser11.getHeaders();
        java.lang.Appendable appendable14 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable15 = annotatingMarkupParser11.new CountingAppendable(appendable14);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable16 = annotatingMarkupParser6.new CountingAppendable((java.lang.Appendable) countingAppendable15);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser17 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList18 = annotatingMarkupParser17.getHeaders();
        java.util.List<java.lang.String> strList19 = annotatingMarkupParser17.getHeaders();
        java.lang.Appendable appendable20 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable21 = annotatingMarkupParser17.new CountingAppendable(appendable20);
        countingAppendable21.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable24 = annotatingMarkupParser6.new CountingAppendable((java.lang.Appendable) countingAppendable21);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser25 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser25.getHeaders();
        java.util.List<java.lang.String> strList27 = annotatingMarkupParser25.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList28 = annotatingMarkupParser25.getHeaderAnnotations();
        java.lang.String str29 = annotatingMarkupParser25.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser30 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList31 = annotatingMarkupParser30.getHeaders();
        java.util.List<java.lang.String> strList32 = annotatingMarkupParser30.getHeaders();
        java.lang.Appendable appendable33 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable34 = annotatingMarkupParser30.new CountingAppendable(appendable33);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable35 = annotatingMarkupParser25.new CountingAppendable((java.lang.Appendable) countingAppendable34);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable36 = annotatingMarkupParser6.new CountingAppendable((java.lang.Appendable) countingAppendable34);
        countingAppendable34.currentPosition = 0;
        countingAppendable34.currentPosition = (short) 100;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable41 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable34);
        countingAppendable34.currentPosition = ' ';
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable45 = countingAppendable34.append((java.lang.CharSequence) "http://.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(wikiModel3);
        org.junit.Assert.assertNotNull(annotationList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(annotationList9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(annotationList28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
    }

    @Test
    public void test4376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4376");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader3.getSchema("", job5);
        org.apache.hadoop.mapreduce.Job job8 = null;
        org.apache.pig.ResourceStatistics resourceStatistics9 = uriUriNTriplesLoader3.getStatistics("opennlp/en-sent.bin", job8);
        org.apache.pig.Expression expression10 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression10);
        org.apache.pig.Expression expression12 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression12);
        org.apache.hadoop.mapreduce.Job job15 = null;
        org.apache.pig.ResourceSchema resourceSchema16 = uriUriNTriplesLoader3.getSchema("http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi _ % 21", job15);
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNull(resourceStatistics9);
        org.junit.Assert.assertNotNull(resourceSchema16);
    }

    @Test
    public void test4377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4377");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("hi!\n");
    }

    @Test
    public void test4378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4378");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://hi!\n.wikipedia.org/wiki/%22_title_%22");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriStringLiteralNTriplesStorer1.getOutputFormat();
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader6 = new pignlproc.storage.UriUriNTriplesLoader("\"\"", "\"hi!\"\n\n", "\"title\"");
        org.apache.pig.Expression expression7 = null;
        uriUriNTriplesLoader6.setPartitionFilter(expression7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceSchema resourceSchema11 = uriUriNTriplesLoader6.getSchema("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521", job10);
        org.apache.hadoop.mapreduce.Job job13 = null;
        org.apache.pig.ResourceSchema resourceSchema14 = uriUriNTriplesLoader6.getSchema("", job13);
        uriStringLiteralNTriplesStorer1.checkSchema(resourceSchema14);
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer19 = new pignlproc.storage.UriUriNTriplesStorer("http://\"title\"\n.wikipedia.org/wiki/", "\"\"\"hi!\"\" \"", "\"hi!\"");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer21 = new pignlproc.storage.UriUriNTriplesStorer("http://.wikipedia.org/wiki/hi%21");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat22 = uriUriNTriplesStorer21.getOutputFormat();
        uriUriNTriplesStorer21.setStoreFuncUDFContextSignature("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21");
        uriUriNTriplesStorer21.setStoreFuncUDFContextSignature("\" title \"");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader28 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job30 = null;
        org.apache.pig.ResourceStatistics resourceStatistics31 = parsingWikipediaLoader28.getStatistics("hi!", job30);
        org.apache.hadoop.mapreduce.RecordReader recordReader32 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit33 = null;
        parsingWikipediaLoader28.prepareToRead(recordReader32, pigSplit33);
        org.apache.hadoop.mapreduce.Job job36 = null;
        java.lang.String[] strArray37 = parsingWikipediaLoader28.getPartitionKeys("http://.wikipedia.org/wiki/hi%21", job36);
        org.apache.pig.Expression expression38 = null;
        parsingWikipediaLoader28.setPartitionFilter(expression38);
        org.apache.hadoop.mapreduce.Job job41 = null;
        org.apache.pig.ResourceStatistics resourceStatistics42 = parsingWikipediaLoader28.getStatistics("\"hi!\"\n\n", job41);
        org.apache.hadoop.mapreduce.Job job44 = null;
        org.apache.pig.ResourceSchema resourceSchema45 = parsingWikipediaLoader28.getSchema("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21", job44);
        uriUriNTriplesStorer21.checkSchema(resourceSchema45);
        uriUriNTriplesStorer19.checkSchema(resourceSchema45);
        uriStringLiteralNTriplesStorer1.checkSchema(resourceSchema45);
        org.junit.Assert.assertNotNull(outputFormat2);
        org.junit.Assert.assertNotNull(resourceSchema11);
        org.junit.Assert.assertNotNull(resourceSchema14);
        org.junit.Assert.assertNotNull(outputFormat22);
        org.junit.Assert.assertNull(resourceStatistics31);
        org.junit.Assert.assertNull(strArray37);
        org.junit.Assert.assertNull(resourceStatistics42);
        org.junit.Assert.assertNotNull(resourceSchema45);
    }

    @Test
    public void test4379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4379");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        mergeAsOpenNLPAnnotatedText0.setPigLogger(pigLogger6);
        mergeAsOpenNLPAnnotatedText0.finish();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList9 = mergeAsOpenNLPAnnotatedText0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = null;
        mergeAsOpenNLPAnnotatedText0.setPigLogger(pigLogger10);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger12 = null;
        mergeAsOpenNLPAnnotatedText0.setPigLogger(pigLogger12);
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "href" + "'", str5, "href");
        org.junit.Assert.assertNull(funcSpecList9);
    }

    @Test
    public void test4380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4380");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink6 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        sentencesWithLink6.setPigLogger(pigLogger7);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = sentencesWithLink6.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable10 = null;
        sentencesWithLink6.setReporter(pigProgressable10);
        sentencesWithLink6.progress();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray15 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList16 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList16, spanArray15);
        java.lang.String str18 = mergeAsOpenNLPAnnotatedText13.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList16);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText20 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray22 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList23 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList23, spanArray22);
        java.lang.String str25 = mergeAsOpenNLPAnnotatedText20.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList23);
        java.lang.String str26 = mergeAsOpenNLPAnnotatedText13.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList23);
        pignlproc.evaluation.SafeTsvText safeTsvText27 = new pignlproc.evaluation.SafeTsvText();
        java.lang.reflect.Type type28 = safeTsvText27.getReturnType();
        pignlproc.evaluation.CheckAbstract checkAbstract29 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = checkAbstract29.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = safeTsvText27.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = sentencesWithLink6.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = sentencesWithLink0.outputSchema(schema31);
        sentencesWithLink0.finish();
        org.apache.commons.logging.Log log37 = sentencesWithLink0.getLogger();
        sentencesWithLink0.finish();
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(pigProgressable9);
        org.junit.Assert.assertNotNull(spanArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi !" + "'", str18, "hi !");
        org.junit.Assert.assertNotNull(spanArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "href" + "'", str25, "href");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi !" + "'", str26, "hi !");
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(log37);
    }

    @Test
    public void test4381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4381");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.finish();
        java.lang.reflect.Type type5 = sentencesWithLink0.getReturnType();
        org.apache.commons.logging.Log log6 = sentencesWithLink0.getLogger();
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(log6);
    }

    @Test
    public void test4382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4382");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum2 = null;
        safeTsvText0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = safeTsvText0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = safeTsvText0.getReporter();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink6 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        sentencesWithLink6.setPigLogger(pigLogger7);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList9 = sentencesWithLink6.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = sentencesWithLink6.getPigLogger();
        boolean boolean11 = sentencesWithLink6.isAsynchronous();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink12 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger13 = null;
        sentencesWithLink12.setPigLogger(pigLogger13);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable15 = sentencesWithLink12.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable16 = null;
        sentencesWithLink12.setReporter(pigProgressable16);
        sentencesWithLink12.progress();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText19 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray21 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList22 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList22, spanArray21);
        java.lang.String str24 = mergeAsOpenNLPAnnotatedText19.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList22);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText26 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray28 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList29 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList29, spanArray28);
        java.lang.String str31 = mergeAsOpenNLPAnnotatedText26.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList29);
        java.lang.String str32 = mergeAsOpenNLPAnnotatedText19.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList29);
        pignlproc.evaluation.SafeTsvText safeTsvText33 = new pignlproc.evaluation.SafeTsvText();
        java.lang.reflect.Type type34 = safeTsvText33.getReturnType();
        pignlproc.evaluation.CheckAbstract checkAbstract35 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = checkAbstract35.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = safeTsvText33.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = mergeAsOpenNLPAnnotatedText19.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = sentencesWithLink12.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = sentencesWithLink6.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = safeTsvText0.outputSchema(schema37);
        org.apache.commons.logging.Log log43 = safeTsvText0.getLogger();
        boolean boolean44 = safeTsvText0.isAsynchronous();
        safeTsvText0.progress();
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNull(funcSpecList9);
        org.junit.Assert.assertNull(pigLogger10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(pigProgressable15);
        org.junit.Assert.assertNotNull(spanArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi !" + "'", str24, "hi !");
        org.junit.Assert.assertNotNull(spanArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "href" + "'", str31, "href");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi !" + "'", str32, "hi !");
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test4383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4383");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("hi !\n\n");
        concatTextBag1.progress();
    }

    @Test
    public void test4384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4384");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable1 = mergeAsOpenNLPAnnotatedText0.getReporter();
        java.lang.Enum enum3 = null;
        mergeAsOpenNLPAnnotatedText0.warn("title", enum3);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText6 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray8 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList9 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList9, spanArray8);
        java.lang.String str11 = mergeAsOpenNLPAnnotatedText6.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList9);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger12 = null;
        mergeAsOpenNLPAnnotatedText6.setPigLogger(pigLogger12);
        boolean boolean14 = mergeAsOpenNLPAnnotatedText6.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray18 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList19 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList19, spanArray18);
        java.lang.String str21 = mergeAsOpenNLPAnnotatedText16.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList19);
        java.lang.String str22 = mergeAsOpenNLPAnnotatedText6.merge("opennlp/en-sent.bin", (java.util.List<opennlp.tools.util.Span>) spanList19);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText24 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable25 = mergeAsOpenNLPAnnotatedText24.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract26 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = checkAbstract26.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = mergeAsOpenNLPAnnotatedText24.outputSchema(schema27);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText31 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray33 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList34 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList34, spanArray33);
        java.lang.String str36 = mergeAsOpenNLPAnnotatedText31.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList34);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText38 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray40 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList41 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList41, spanArray40);
        java.lang.String str43 = mergeAsOpenNLPAnnotatedText38.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList41);
        java.lang.String str44 = mergeAsOpenNLPAnnotatedText31.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList41);
        java.lang.String str45 = mergeAsOpenNLPAnnotatedText24.merge("title", (java.util.List<opennlp.tools.util.Span>) spanList41);
        java.lang.String str46 = mergeAsOpenNLPAnnotatedText6.merge("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", (java.util.List<opennlp.tools.util.Span>) spanList41);
        java.lang.String str47 = mergeAsOpenNLPAnnotatedText0.merge("", (java.util.List<opennlp.tools.util.Span>) spanList41);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable48 = mergeAsOpenNLPAnnotatedText0.getReporter();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList49 = mergeAsOpenNLPAnnotatedText0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger50 = null;
        mergeAsOpenNLPAnnotatedText0.setPigLogger(pigLogger50);
        org.junit.Assert.assertNull(pigProgressable1);
        org.junit.Assert.assertNotNull(spanArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi !" + "'", str11, "hi !");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(spanArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "href" + "'", str21, "href");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "opennlp / en - sent . bin" + "'", str22, "opennlp / en - sent . bin");
        org.junit.Assert.assertNull(pigProgressable25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(spanArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi !" + "'", str36, "hi !");
        org.junit.Assert.assertNotNull(spanArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "href" + "'", str43, "href");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi !" + "'", str44, "hi !");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "title" + "'", str45, "title");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21" + "'", str46, "http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNull(pigProgressable48);
        org.junit.Assert.assertNull(funcSpecList49);
    }

    @Test
    public void test4385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4385");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        sentencesWithLink0.setReporter(pigProgressable4);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = sentencesWithLink0.getReporter();
        java.lang.Enum enum8 = null;
        sentencesWithLink0.warn("http://\"title\".wikipedia.org/wiki/%22hi%21%22", enum8);
        java.lang.reflect.Type type10 = sentencesWithLink0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable11 = sentencesWithLink0.getReporter();
        java.lang.Enum enum13 = null;
        sentencesWithLink0.warn("\"title\"\n\n", enum13);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger15 = sentencesWithLink0.getPigLogger();
        org.apache.pig.data.Tuple tuple16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.DataBag dataBag17 = sentencesWithLink0.exec(tuple16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNull(pigProgressable6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNull(pigProgressable11);
        org.junit.Assert.assertNull(pigLogger15);
    }

    @Test
    public void test4386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4386");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = sentencesWithLink0.getPigLogger();
        sentencesWithLink0.finish();
        java.lang.Enum enum4 = null;
        sentencesWithLink0.warn("titlehref", enum4);
        java.lang.reflect.Type type6 = sentencesWithLink0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = sentencesWithLink0.getPigLogger();
        org.apache.commons.logging.Log log8 = sentencesWithLink0.getLogger();
        org.junit.Assert.assertNull(pigLogger1);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNull(pigLogger7);
        org.junit.Assert.assertNotNull(log8);
    }

    @Test
    public void test4387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4387");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (short) 1, (int) '4', "http://http://\"http://.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22\n.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A\n", "\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"");
    }

    @Test
    public void test4388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4388");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.lang.Appendable appendable3 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable4 = annotatingMarkupParser0.new CountingAppendable(appendable3);
        java.lang.String str6 = annotatingMarkupParser0.parse("");
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser0.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser8 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList9 = annotatingMarkupParser8.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel11 = annotatingMarkupParser8.makeWikiModel("title");
        java.util.List<pignlproc.markup.Annotation> annotationList12 = annotatingMarkupParser8.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList13 = annotatingMarkupParser8.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList15 = annotatingMarkupParser14.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser16 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList17 = annotatingMarkupParser16.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser16.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList19 = annotatingMarkupParser16.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser20 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser20.getHeaders();
        java.util.List<java.lang.String> strList22 = annotatingMarkupParser20.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList23 = annotatingMarkupParser20.getHeaderAnnotations();
        java.lang.String str24 = annotatingMarkupParser20.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser25 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser25.getHeaders();
        java.util.List<java.lang.String> strList27 = annotatingMarkupParser25.getHeaders();
        java.lang.Appendable appendable28 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable29 = annotatingMarkupParser25.new CountingAppendable(appendable28);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable30 = annotatingMarkupParser20.new CountingAppendable((java.lang.Appendable) countingAppendable29);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser31 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList32 = annotatingMarkupParser31.getHeaderAnnotations();
        java.lang.String str33 = annotatingMarkupParser31.getRedirect();
        pignlproc.markup.Annotation annotation38 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation43 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int44 = annotation43.end;
        int int45 = annotation43.begin;
        pignlproc.markup.Annotation[] annotationArray46 = new pignlproc.markup.Annotation[] { annotation38, annotation43 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList47 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList47, annotationArray46);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser49 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList50 = annotatingMarkupParser49.getHeaders();
        java.util.List<java.lang.String> strList51 = annotatingMarkupParser49.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList52 = annotatingMarkupParser49.getHeaderAnnotations();
        java.lang.String str53 = annotatingMarkupParser49.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser54 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList55 = annotatingMarkupParser54.getHeaders();
        java.util.List<java.lang.String> strList56 = annotatingMarkupParser54.getHeaders();
        java.lang.Appendable appendable57 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable58 = annotatingMarkupParser54.new CountingAppendable(appendable57);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable59 = annotatingMarkupParser49.new CountingAppendable((java.lang.Appendable) countingAppendable58);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser60 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList61 = annotatingMarkupParser60.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel63 = annotatingMarkupParser60.makeWikiModel("title");
        annotatingMarkupParser31.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList47, (java.lang.Appendable) countingAppendable58, (info.bliki.wiki.model.IWikiModel) wikiModel63);
        annotatingMarkupParser14.nodesToText(annotationList19, (java.lang.Appendable) countingAppendable30, (info.bliki.wiki.model.IWikiModel) wikiModel63);
        countingAppendable30.currentPosition = ' ';
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser68 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList69 = annotatingMarkupParser68.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel71 = annotatingMarkupParser68.makeWikiModel("title");
        annotatingMarkupParser0.nodesToText(annotationList13, (java.lang.Appendable) countingAppendable30, (info.bliki.wiki.model.IWikiModel) wikiModel71);
        boolean boolean73 = annotatingMarkupParser0.noLinks();
        java.util.List<pignlproc.markup.Annotation> annotationList74 = annotatingMarkupParser0.getWikiLinkAnnotations();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNotNull(annotationList9);
        org.junit.Assert.assertNotNull(wikiModel11);
        org.junit.Assert.assertNotNull(annotationList12);
        org.junit.Assert.assertNotNull(annotationList13);
        org.junit.Assert.assertNotNull(annotationList15);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNotNull(annotationList19);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(annotationList23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(annotationList32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNotNull(annotationArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(annotationList52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(annotationList61);
        org.junit.Assert.assertNotNull(wikiModel63);
        org.junit.Assert.assertNotNull(annotationList69);
        org.junit.Assert.assertNotNull(wikiModel71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(annotationList74);
    }

    @Test
    public void test4389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4389");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getParagraphAnnotations();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser0.getParagraphs();
        java.util.List<java.lang.String> strList5 = annotatingMarkupParser0.getParagraphs();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser0.getParagraphs();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList8 = annotatingMarkupParser0.getWikiLinkAnnotations();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(annotationList8);
    }

    @Test
    public void test4390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4390");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag12 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText13 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        safeTsvText13.setPigLogger(pigLogger14);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText16.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = safeTsvText13.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = aggregateTextBag12.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = noLoopInPath0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        noLoopInPath0.setPigLogger(pigLogger25);
        org.apache.pig.data.Tuple tuple27 = null;
        java.lang.Boolean boolean28 = noLoopInPath0.exec(tuple27);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable29 = null;
        noLoopInPath0.setReporter(pigProgressable29);
        java.lang.reflect.Type type31 = noLoopInPath0.getReturnType();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink32 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger33 = null;
        sentencesWithLink32.setPigLogger(pigLogger33);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList35 = sentencesWithLink32.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger36 = sentencesWithLink32.getPigLogger();
        boolean boolean37 = sentencesWithLink32.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText38 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable39 = mergeAsOpenNLPAnnotatedText38.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract40 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = checkAbstract40.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = mergeAsOpenNLPAnnotatedText38.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = sentencesWithLink32.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = noLoopInPath0.outputSchema(schema44);
        org.apache.pig.data.Tuple tuple46 = null;
        java.lang.Boolean boolean47 = noLoopInPath0.exec(tuple46);
        org.apache.pig.data.Tuple tuple48 = null;
        java.lang.Boolean boolean49 = noLoopInPath0.exec(tuple48);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + boolean28 + "' != '" + true + "'", boolean28, true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNull(funcSpecList35);
        org.junit.Assert.assertNull(pigLogger36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(pigProgressable39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertEquals("'" + boolean47 + "' != '" + true + "'", boolean47, true);
        org.junit.Assert.assertEquals("'" + boolean49 + "' != '" + true + "'", boolean49, true);
    }

    @Test
    public void test4391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4391");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.finish();
        java.lang.Enum enum9 = null;
        sentencesWithLink0.warn("http://.wikipedia.org/wiki/hi%21", enum9);
        org.apache.commons.logging.Log log11 = sentencesWithLink0.getLogger();
        pignlproc.evaluation.CheckAbstract checkAbstract13 = new pignlproc.evaluation.CheckAbstract((int) (byte) 10);
        pignlproc.evaluation.SafeTsvText safeTsvText14 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger15 = null;
        safeTsvText14.setPigLogger(pigLogger15);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText17 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable18 = mergeAsOpenNLPAnnotatedText17.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract19 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = checkAbstract19.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = mergeAsOpenNLPAnnotatedText17.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = safeTsvText14.outputSchema(schema22);
        safeTsvText14.finish();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink25 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList26 = sentencesWithLink25.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger27 = null;
        sentencesWithLink25.setPigLogger(pigLogger27);
        java.lang.reflect.Type type29 = sentencesWithLink25.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable30 = sentencesWithLink25.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable31 = sentencesWithLink25.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger32 = null;
        sentencesWithLink25.setPigLogger(pigLogger32);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser34 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList35 = annotatingMarkupParser34.getHeaders();
        java.util.List<java.lang.String> strList36 = annotatingMarkupParser34.getHeaders();
        java.lang.String str38 = annotatingMarkupParser34.parse("\"title\"");
        pignlproc.evaluation.ConcatTextBag concatTextBag40 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract41 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum43 = null;
        checkAbstract41.warn("http://.wikipedia.org/wiki/hi%21", enum43);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger45 = null;
        checkAbstract41.setPigLogger(pigLogger45);
        checkAbstract41.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText48 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger49 = null;
        safeTsvText48.setPigLogger(pigLogger49);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText51 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable52 = mergeAsOpenNLPAnnotatedText51.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract53 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = checkAbstract53.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = mergeAsOpenNLPAnnotatedText51.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = safeTsvText48.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = checkAbstract41.outputSchema(schema57);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = concatTextBag40.outputSchema(schema58);
        java.util.List<opennlp.tools.util.Span> spanList60 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) pigLogger32, (java.lang.Object) "\"title\"", (java.lang.Object) schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = safeTsvText14.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = checkAbstract13.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = sentencesWithLink0.outputSchema(schema62);
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(funcSpecList6);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNull(pigProgressable18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(funcSpecList26);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNull(pigProgressable30);
        org.junit.Assert.assertNull(pigProgressable31);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\"title\"\n" + "'", str38, "\"title\"\n");
        org.junit.Assert.assertNull(pigProgressable52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(spanList60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test4392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4392");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        sentencesWithLink0.finish();
        sentencesWithLink0.finish();
        java.lang.reflect.Type type5 = sentencesWithLink0.getReturnType();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink6 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = sentencesWithLink6.getPigLogger();
        java.lang.Enum enum9 = null;
        sentencesWithLink6.warn("opennlp / en - sent . bin", enum9);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable11 = null;
        sentencesWithLink6.setReporter(pigProgressable11);
        pignlproc.evaluation.CheckAbstract checkAbstract13 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum15 = null;
        checkAbstract13.warn("http://.wikipedia.org/wiki/hi%21", enum15);
        java.lang.Enum enum18 = null;
        checkAbstract13.warn("hi !", enum18);
        pignlproc.evaluation.NoLoopInPath noLoopInPath20 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText21 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger22 = null;
        safeTsvText21.setPigLogger(pigLogger22);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText24 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable25 = mergeAsOpenNLPAnnotatedText24.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract26 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = checkAbstract26.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = mergeAsOpenNLPAnnotatedText24.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = safeTsvText21.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = noLoopInPath20.outputSchema(schema29);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag32 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText33 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger34 = null;
        safeTsvText33.setPigLogger(pigLogger34);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText36 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable37 = mergeAsOpenNLPAnnotatedText36.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract38 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = checkAbstract38.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = mergeAsOpenNLPAnnotatedText36.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = safeTsvText33.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = aggregateTextBag32.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = noLoopInPath20.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = checkAbstract13.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = sentencesWithLink6.outputSchema(schema44);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<opennlp.tools.util.Span> spanList47 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) sentencesWithLink0, (java.lang.Object) sentencesWithLink6);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: pignlproc.evaluation.SentencesWithLink cannot be cast to java.lang.Integer");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNull(pigLogger7);
        org.junit.Assert.assertNull(pigProgressable25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(pigProgressable37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test4393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4393");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((int) (byte) 1, false);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = null;
        aggregateTextBag2.setReporter(pigProgressable3);
        java.lang.reflect.Type type5 = aggregateTextBag2.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = aggregateTextBag2.getReporter();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNull(pigProgressable6);
    }

    @Test
    public void test4394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4394");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract3 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum5 = null;
        checkAbstract3.warn("http://.wikipedia.org/wiki/hi%21", enum5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        checkAbstract3.setPigLogger(pigLogger7);
        checkAbstract3.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText10 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        safeTsvText10.setPigLogger(pigLogger11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = mergeAsOpenNLPAnnotatedText13.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract15.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = safeTsvText10.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract3.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = concatTextBag2.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = sentencesWithLink0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = null;
        sentencesWithLink0.setPigLogger(pigLogger23);
        java.lang.reflect.Type type25 = sentencesWithLink0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable26 = sentencesWithLink0.getReporter();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList27 = sentencesWithLink0.getArgToFuncMapping();
        java.lang.reflect.Type type28 = sentencesWithLink0.getReturnType();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList29 = sentencesWithLink0.getArgToFuncMapping();
        org.junit.Assert.assertNull(pigProgressable14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNull(pigProgressable26);
        org.junit.Assert.assertNull(funcSpecList27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNull(funcSpecList29);
    }

    @Test
    public void test4395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4395");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag1 = new pignlproc.evaluation.AggregateTextBag((int) (short) 0);
        java.lang.Enum enum3 = null;
        aggregateTextBag1.warn("href", enum3);
        aggregateTextBag1.finish();
        boolean boolean6 = aggregateTextBag1.isAsynchronous();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test4396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4396");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("href");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("opennlp/en-sent.bin", job3);
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader1.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job7 = null;
        java.lang.String[] strArray8 = parsingWikipediaLoader1.getPartitionKeys("\" http : // . wikipedia . org / wiki / hi % 21 \"", job7);
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(loadCaster5);
        org.junit.Assert.assertNull(strArray8);
    }

    @Test
    public void test4397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4397");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://http://http : // \" hi ! \" . wikipedia . org / wiki / % 22 hi % 21 _ % 22.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%0A.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org%2Fwiki%2Fhttp_%253A_%252F%252F_http_%253A_%252F%252F_._wikipedia_._org_%252F_wiki_%252F_hi_%2525_21_._wikipedia_._org_%252F_wiki_%252F_hi_%2525_21", false);
    }

    @Test
    public void test4398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4398");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        mergeAsOpenNLPAnnotatedText0.setPigLogger(pigLogger6);
        mergeAsOpenNLPAnnotatedText0.finish();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = null;
        mergeAsOpenNLPAnnotatedText0.setReporter(pigProgressable9);
        boolean boolean11 = mergeAsOpenNLPAnnotatedText0.isAsynchronous();
        pignlproc.evaluation.AggregateTextBag aggregateTextBag14 = new pignlproc.evaluation.AggregateTextBag((int) (short) 0);
        java.lang.Enum enum16 = null;
        aggregateTextBag14.warn("href", enum16);
        aggregateTextBag14.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger19 = aggregateTextBag14.getPigLogger();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText20 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable21 = mergeAsOpenNLPAnnotatedText20.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract22 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = checkAbstract22.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = mergeAsOpenNLPAnnotatedText20.outputSchema(schema23);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser26 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList27 = annotatingMarkupParser26.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList28 = annotatingMarkupParser26.getWikiLinkAnnotations();
        java.util.List<opennlp.tools.util.Span> spanList29 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) pigLogger19, (java.lang.Object) schema23, (java.lang.Object) annotationList28);
        java.lang.String str30 = mergeAsOpenNLPAnnotatedText0.merge("titlehref", spanList29);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger31 = mergeAsOpenNLPAnnotatedText0.getPigLogger();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink33 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger34 = null;
        sentencesWithLink33.setPigLogger(pigLogger34);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable36 = sentencesWithLink33.getReporter();
        java.lang.reflect.Type type37 = sentencesWithLink33.getReturnType();
        boolean boolean38 = sentencesWithLink33.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger39 = sentencesWithLink33.getPigLogger();
        java.lang.Enum enum41 = null;
        sentencesWithLink33.warn("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", enum41);
        pignlproc.markup.Annotation annotation47 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        java.lang.String str48 = annotation47.label;
        java.util.List<opennlp.tools.util.Span> spanList49 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) enum41, (java.lang.Object) str48);
        java.lang.String str50 = mergeAsOpenNLPAnnotatedText0.merge("\"\"\" opennlp / en - sent . bin \"\"\"", spanList49);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger51 = null;
        mergeAsOpenNLPAnnotatedText0.setPigLogger(pigLogger51);
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "href" + "'", str5, "href");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(pigLogger19);
        org.junit.Assert.assertNull(pigProgressable21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(annotationList28);
        org.junit.Assert.assertNotNull(spanList29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "titlehref" + "'", str30, "titlehref");
        org.junit.Assert.assertNull(pigLogger31);
        org.junit.Assert.assertNull(pigProgressable36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(pigLogger39);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "title" + "'", str48, "title");
        org.junit.Assert.assertNotNull(spanList49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\"\"\" opennlp / en - sent . bin \"\"\"" + "'", str50, "\"\"\" opennlp / en - sent . bin \"\"\"");
    }

    @Test
    public void test4399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4399");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("title", false);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = null;
        concatTextBag2.setReporter(pigProgressable3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = concatTextBag2.getReporter();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText6 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = mergeAsOpenNLPAnnotatedText6.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = mergeAsOpenNLPAnnotatedText6.getPigLogger();
        pignlproc.evaluation.SafeTsvText safeTsvText9 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum11 = null;
        safeTsvText9.warn("http://.wikipedia.org/wiki/hi%21", enum11);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable13 = safeTsvText9.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = null;
        safeTsvText9.setReporter(pigProgressable14);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink16 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList17 = sentencesWithLink16.getArgToFuncMapping();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum20 = null;
        checkAbstract18.warn("http://.wikipedia.org/wiki/hi%21", enum20);
        java.lang.Enum enum23 = null;
        checkAbstract18.warn("hi !", enum23);
        pignlproc.evaluation.NoLoopInPath noLoopInPath25 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText26 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger27 = null;
        safeTsvText26.setPigLogger(pigLogger27);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText29 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable30 = mergeAsOpenNLPAnnotatedText29.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract31 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = checkAbstract31.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = mergeAsOpenNLPAnnotatedText29.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = safeTsvText26.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = noLoopInPath25.outputSchema(schema34);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag37 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText38 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger39 = null;
        safeTsvText38.setPigLogger(pigLogger39);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText41 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable42 = mergeAsOpenNLPAnnotatedText41.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract43 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = checkAbstract43.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = mergeAsOpenNLPAnnotatedText41.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = safeTsvText38.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = aggregateTextBag37.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = noLoopInPath25.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = checkAbstract18.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = sentencesWithLink16.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = safeTsvText9.outputSchema(schema50);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag55 = new pignlproc.evaluation.AggregateTextBag((int) '#', false);
        pignlproc.evaluation.SafeTsvText safeTsvText56 = new pignlproc.evaluation.SafeTsvText();
        java.lang.reflect.Type type57 = safeTsvText56.getReturnType();
        pignlproc.evaluation.CheckAbstract checkAbstract58 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = checkAbstract58.outputSchema(schema59);
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = safeTsvText56.outputSchema(schema60);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = aggregateTextBag55.outputSchema(schema60);
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = safeTsvText9.outputSchema(schema62);
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = mergeAsOpenNLPAnnotatedText6.outputSchema(schema62);
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = concatTextBag2.outputSchema(schema64);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNull(pigLogger7);
        org.junit.Assert.assertNull(pigLogger8);
        org.junit.Assert.assertNull(pigProgressable13);
        org.junit.Assert.assertNull(funcSpecList17);
        org.junit.Assert.assertNull(pigProgressable30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(pigProgressable42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
    }

    @Test
    public void test4400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4400");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser2 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser2.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList4 = annotatingMarkupParser2.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser2.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser6 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser6.getHeaders();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser6.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList9 = annotatingMarkupParser6.getHeaderAnnotations();
        java.lang.String str10 = annotatingMarkupParser6.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser11 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser11.getHeaders();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser11.getHeaders();
        java.lang.Appendable appendable14 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable15 = annotatingMarkupParser11.new CountingAppendable(appendable14);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable16 = annotatingMarkupParser6.new CountingAppendable((java.lang.Appendable) countingAppendable15);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser17 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser17.getHeaderAnnotations();
        java.lang.String str19 = annotatingMarkupParser17.getRedirect();
        pignlproc.markup.Annotation annotation24 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation29 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int30 = annotation29.end;
        int int31 = annotation29.begin;
        pignlproc.markup.Annotation[] annotationArray32 = new pignlproc.markup.Annotation[] { annotation24, annotation29 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList33 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList33, annotationArray32);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser35 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList36 = annotatingMarkupParser35.getHeaders();
        java.util.List<java.lang.String> strList37 = annotatingMarkupParser35.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList38 = annotatingMarkupParser35.getHeaderAnnotations();
        java.lang.String str39 = annotatingMarkupParser35.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser40 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList41 = annotatingMarkupParser40.getHeaders();
        java.util.List<java.lang.String> strList42 = annotatingMarkupParser40.getHeaders();
        java.lang.Appendable appendable43 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable44 = annotatingMarkupParser40.new CountingAppendable(appendable43);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable45 = annotatingMarkupParser35.new CountingAppendable((java.lang.Appendable) countingAppendable44);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser46 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList47 = annotatingMarkupParser46.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel49 = annotatingMarkupParser46.makeWikiModel("title");
        annotatingMarkupParser17.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList33, (java.lang.Appendable) countingAppendable44, (info.bliki.wiki.model.IWikiModel) wikiModel49);
        annotatingMarkupParser0.nodesToText(annotationList5, (java.lang.Appendable) countingAppendable16, (info.bliki.wiki.model.IWikiModel) wikiModel49);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser52 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList53 = annotatingMarkupParser52.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList54 = annotatingMarkupParser52.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel56 = annotatingMarkupParser52.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        java.util.List<pignlproc.markup.Annotation> annotationList57 = annotatingMarkupParser52.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser58 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList59 = annotatingMarkupParser58.getHeaders();
        java.util.List<java.lang.String> strList60 = annotatingMarkupParser58.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList61 = annotatingMarkupParser58.getHeaderAnnotations();
        java.lang.String str62 = annotatingMarkupParser58.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser63 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList64 = annotatingMarkupParser63.getHeaders();
        java.util.List<java.lang.String> strList65 = annotatingMarkupParser63.getHeaders();
        java.lang.Appendable appendable66 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable67 = annotatingMarkupParser63.new CountingAppendable(appendable66);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable68 = annotatingMarkupParser58.new CountingAppendable((java.lang.Appendable) countingAppendable67);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser69 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList70 = annotatingMarkupParser69.getHeaders();
        java.util.List<java.lang.String> strList71 = annotatingMarkupParser69.getHeaders();
        java.lang.Appendable appendable72 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable73 = annotatingMarkupParser69.new CountingAppendable(appendable72);
        countingAppendable73.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable76 = annotatingMarkupParser58.new CountingAppendable((java.lang.Appendable) countingAppendable73);
        countingAppendable73.currentPosition = (short) -1;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser79 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList80 = annotatingMarkupParser79.getHeaders();
        java.util.List<java.lang.String> strList81 = annotatingMarkupParser79.getHeaders();
        java.util.List<java.lang.String> strList82 = annotatingMarkupParser79.getHeaders();
        java.util.List<java.lang.String> strList83 = annotatingMarkupParser79.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel85 = annotatingMarkupParser79.makeWikiModel("opennlp / en - sent . bin");
        annotatingMarkupParser0.nodesToText(annotationList57, (java.lang.Appendable) countingAppendable73, (info.bliki.wiki.model.IWikiModel) wikiModel85);
        java.lang.String str87 = annotatingMarkupParser0.getRedirect();
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(annotationList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(annotationList9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNotNull(annotationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(annotationList38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(annotationList47);
        org.junit.Assert.assertNotNull(wikiModel49);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(annotationList54);
        org.junit.Assert.assertNotNull(wikiModel56);
        org.junit.Assert.assertNotNull(annotationList57);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNotNull(annotationList61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNotNull(wikiModel85);
        org.junit.Assert.assertNull(str87);
    }

    @Test
    public void test4401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4401");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/%22_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_%22", true);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = concatTextBag2.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract5 = new pignlproc.evaluation.CheckAbstract((int) (byte) 10);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = checkAbstract5.getArgToFuncMapping();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText7 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray9 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList10 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList10, spanArray9);
        java.lang.String str12 = mergeAsOpenNLPAnnotatedText7.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList10);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList13 = mergeAsOpenNLPAnnotatedText7.getArgToFuncMapping();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText14 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray16 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList17 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList17, spanArray16);
        java.lang.String str19 = mergeAsOpenNLPAnnotatedText14.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList17);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger20 = null;
        mergeAsOpenNLPAnnotatedText14.setPigLogger(pigLogger20);
        boolean boolean22 = mergeAsOpenNLPAnnotatedText14.isAsynchronous();
        pignlproc.evaluation.CheckAbstract checkAbstract23 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum25 = null;
        checkAbstract23.warn("http://.wikipedia.org/wiki/hi%21", enum25);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable27 = null;
        checkAbstract23.setReporter(pigProgressable27);
        java.lang.reflect.Type type29 = checkAbstract23.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath30 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText31 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger32 = null;
        safeTsvText31.setPigLogger(pigLogger32);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText34 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable35 = mergeAsOpenNLPAnnotatedText34.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract36 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = checkAbstract36.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = mergeAsOpenNLPAnnotatedText34.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = safeTsvText31.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = noLoopInPath30.outputSchema(schema39);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag42 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText43 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger44 = null;
        safeTsvText43.setPigLogger(pigLogger44);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText46 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable47 = mergeAsOpenNLPAnnotatedText46.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract48 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = checkAbstract48.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = mergeAsOpenNLPAnnotatedText46.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = safeTsvText43.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = aggregateTextBag42.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = noLoopInPath30.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = checkAbstract23.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = mergeAsOpenNLPAnnotatedText14.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = mergeAsOpenNLPAnnotatedText7.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = checkAbstract5.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = concatTextBag2.outputSchema(schema51);
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNull(funcSpecList6);
        org.junit.Assert.assertNotNull(spanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi !" + "'", str12, "hi !");
        org.junit.Assert.assertNull(funcSpecList13);
        org.junit.Assert.assertNotNull(spanArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi !" + "'", str19, "hi !");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNull(pigProgressable35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(pigProgressable47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test4402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4402");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) ' ', 35, "\" http : // \"\" opennlp / en - sent . bin \"\" . wikipedia . org / wiki / hrefwikiobject \"\"\"\"\"\" http : // hi ! . wikipedia . org / wiki / % 22 http % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 22 % 0 A \"\"\"\"\"\" wikiobject \"\" hi ! \"\" wikiobject wikiobjectopennlp / en - sent . binwikiobjecthttp : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ binwikiobjecthttp : // http : // \"\" title \"\" . wikipedia . org / wiki / % 22 hi % 21 % 22 . wikipedia . org / wiki / hi % 21 wikiobjecthttp : // \"\" http : // . wikipedia . org / wiki / hi % 21 \"\" . wikipedia . org / wiki / % 22 % 22 % 22 http % 3 A % 2 F % 2 Fhi _ % 21 _ . wikipedia . org % 2 Fwiki % 2 Fhttp % 253 A % 252 F % 252 Fhttp % 253 A % 252 F % 252 F . wikipedia . org % 252 Fwiki % 252 Fhi % 252521 % 250 A . wikipedia . org % 252 Fwiki % 252 F % 252522 title % 252522 % 22 % 22 % 22 wikiobject \"\" opennlp / en - sent . bin \"\" wikiobject \"\"\"\"\"", "\"title\"");
        java.lang.String str5 = annotation4.value;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"title\"" + "'", str5, "\"title\"");
    }

    @Test
    public void test4403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4403");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = sentencesWithLink0.getPigLogger();
        sentencesWithLink0.finish();
        java.lang.Enum enum4 = null;
        sentencesWithLink0.warn("titlehref", enum4);
        java.lang.reflect.Type type6 = sentencesWithLink0.getReturnType();
        java.lang.reflect.Type type7 = sentencesWithLink0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = sentencesWithLink0.getPigLogger();
        org.junit.Assert.assertNull(pigLogger1);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(pigLogger8);
    }

    @Test
    public void test4404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4404");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("\"title\"");
        info.bliki.wiki.model.WikiModel wikiModel3 = annotatingMarkupParser1.makeWikiModel("hi !\n\n");
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser1.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser1.getWikiLinkAnnotations();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser1.getParagraphs();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser1.getHeaders();
        java.lang.String str9 = annotatingMarkupParser1.parse("http://http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522.wikipedia.org/wiki/%22_hi_%21_%22");
        org.junit.Assert.assertNotNull(wikiModel3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522.wikipedia.org/wiki/%22_hi_%21_%22\n" + "'", str9, "http://http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522.wikipedia.org/wiki/%22_hi_%21_%22\n");
    }

    @Test
    public void test4405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4405");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText2 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger3 = null;
        safeTsvText2.setPigLogger(pigLogger3);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText5 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = mergeAsOpenNLPAnnotatedText5.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract7 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = checkAbstract7.outputSchema(schema8);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = mergeAsOpenNLPAnnotatedText5.outputSchema(schema8);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = safeTsvText2.outputSchema(schema10);
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = noLoopInPath1.outputSchema(schema10);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag13 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText14 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger15 = null;
        safeTsvText14.setPigLogger(pigLogger15);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText17 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable18 = mergeAsOpenNLPAnnotatedText17.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract19 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = checkAbstract19.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = mergeAsOpenNLPAnnotatedText17.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = safeTsvText14.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = aggregateTextBag13.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = noLoopInPath1.outputSchema(schema22);
        pignlproc.evaluation.CheckAbstract checkAbstract26 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum28 = null;
        checkAbstract26.warn("http://.wikipedia.org/wiki/hi%21", enum28);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = null;
        checkAbstract26.setPigLogger(pigLogger30);
        checkAbstract26.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText33 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger34 = null;
        safeTsvText33.setPigLogger(pigLogger34);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText36 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable37 = mergeAsOpenNLPAnnotatedText36.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract38 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = checkAbstract38.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = mergeAsOpenNLPAnnotatedText36.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = safeTsvText33.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = checkAbstract26.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = noLoopInPath1.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = sentencesWithLink0.outputSchema(schema44);
        boolean boolean46 = sentencesWithLink0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable47 = sentencesWithLink0.getReporter();
        sentencesWithLink0.finish();
        org.junit.Assert.assertNull(pigProgressable6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(pigProgressable18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(pigProgressable37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(pigProgressable47);
    }

    @Test
    public void test4406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4406");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.lang.Appendable appendable3 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable4 = annotatingMarkupParser0.new CountingAppendable(appendable3);
        info.bliki.wiki.model.WikiModel wikiModel6 = annotatingMarkupParser0.makeWikiModel("\"http://http://hi! .wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin\"");
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(wikiModel6);
    }

    @Test
    public void test4407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4407");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation(100, (int) (short) 100, "\"opennlp / en - sent . bin\"", "");
    }

    @Test
    public void test4408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4408");
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract("\" http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 \"");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"\" http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 \"\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4409");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("http://\"\"\"hi!\"\" \".wikipedia.org/wiki/");
    }

    @Test
    public void test4410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4410");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        int int5 = annotation4.begin;
        java.lang.String str6 = annotation4.label;
        java.lang.String str7 = annotation4.label;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "title" + "'", str6, "title");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "title" + "'", str7, "title");
    }

    @Test
    public void test4411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4411");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("", "http://http://hi!\n.wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/%22%22%22_http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_%22%22%22");
    }

    @Test
    public void test4412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4412");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList3);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = mergeAsOpenNLPAnnotatedText0.getArgToFuncMapping();
        boolean boolean7 = mergeAsOpenNLPAnnotatedText0.isAsynchronous();
        java.lang.reflect.Type type8 = mergeAsOpenNLPAnnotatedText0.getReturnType();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText11 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("http://hi!\n.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray15 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList16 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList16, spanArray15);
        java.lang.String str18 = mergeAsOpenNLPAnnotatedText13.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList16);
        java.lang.String str19 = mergeAsOpenNLPAnnotatedText11.merge("http://hi!\n.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin", (java.util.List<opennlp.tools.util.Span>) spanList16);
        java.lang.String str20 = mergeAsOpenNLPAnnotatedText0.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList16);
        java.lang.Enum enum22 = null;
        mergeAsOpenNLPAnnotatedText0.warn("\"title\"\n", enum22);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable24 = mergeAsOpenNLPAnnotatedText0.getReporter();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList25 = mergeAsOpenNLPAnnotatedText0.getArgToFuncMapping();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText27 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray29 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList30 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList30, spanArray29);
        java.lang.String str32 = mergeAsOpenNLPAnnotatedText27.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList30);
        java.lang.String str33 = mergeAsOpenNLPAnnotatedText0.merge("http://http://http : // \" hi ! \" . wikipedia . org / wiki / % 22 hi % 21 _ % 22.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%0A.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org%2Fwiki%2Fhttp_%253A_%252F%252F_http_%253A_%252F%252F_._wikipedia_._org_%252F_wiki_%252F_hi_%2525_21_._wikipedia_._org_%252F_wiki_%252F_hi_%2525_21", (java.util.List<opennlp.tools.util.Span>) spanList30);
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi !" + "'", str5, "hi !");
        org.junit.Assert.assertNull(funcSpecList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(spanArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "href" + "'", str18, "href");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin" + "'", str19, "http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi !" + "'", str20, "hi !");
        org.junit.Assert.assertNull(pigProgressable24);
        org.junit.Assert.assertNull(funcSpecList25);
        org.junit.Assert.assertNotNull(spanArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "href" + "'", str32, "href");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http : // http : // http : // \" hi ! \" . wikipedia . org / wiki / % 22 hi % 21 _ % 22 . wikipedia . org / wiki / http % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhttp % 253 A % 252 F % 252 F . wikipedia . org % 252 Fwiki % 252 Fhi % 252521 % 0 A . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 . wikipedia . org % 2 Fwiki % 2 Fhttp _ % 253 A _ % 252 F % 252 F _ http _ % 253 A _ % 252 F % 252 F _ . _ wikipedia _ . _ org _ % 252 F _ wiki _ % 252 F _ hi _ % 2525 _ 21 _ . _ wikipedia _ . _ org _ % 252 F _ wiki _ % 252 F _ hi _ % 2525 _ 21" + "'", str33, "http : // http : // http : // \" hi ! \" . wikipedia . org / wiki / % 22 hi % 21 _ % 22 . wikipedia . org / wiki / http % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhttp % 253 A % 252 F % 252 F . wikipedia . org % 252 Fwiki % 252 Fhi % 252521 % 0 A . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 . wikipedia . org % 2 Fwiki % 2 Fhttp _ % 253 A _ % 252 F % 252 F _ http _ % 253 A _ % 252 F % 252 F _ . _ wikipedia _ . _ org _ % 252 F _ wiki _ % 252 F _ hi _ % 2525 _ 21 _ . _ wikipedia _ . _ org _ % 252 F _ wiki _ % 252 F _ hi _ % 2525 _ 21");
    }

    @Test
    public void test4413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4413");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521", "hi !");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceStatistics resourceStatistics5 = uriStringLiteralNTriplesLoader2.getStatistics("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521", job4);
        org.apache.hadoop.mapreduce.InputFormat inputFormat6 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.apache.hadoop.mapreduce.Job job8 = null;
        java.lang.String[] strArray9 = uriStringLiteralNTriplesLoader2.getPartitionKeys("\"http://http://http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/%22title%22 .wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org%2Fwiki%2Fhi_%2521\"", job8);
        org.junit.Assert.assertNull(resourceStatistics5);
        org.junit.Assert.assertNotNull(inputFormat6);
        org.junit.Assert.assertNull(strArray9);
    }

    @Test
    public void test4414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4414");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        sentencesWithLink0.setReporter(pigProgressable4);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = sentencesWithLink0.getReporter();
        java.lang.Enum enum8 = null;
        sentencesWithLink0.warn("http://\"title\".wikipedia.org/wiki/%22hi%21%22", enum8);
        java.lang.reflect.Type type10 = sentencesWithLink0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable11 = sentencesWithLink0.getReporter();
        java.lang.Enum enum13 = null;
        sentencesWithLink0.warn("\"title\"\n\n", enum13);
        org.apache.commons.logging.Log log15 = sentencesWithLink0.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable16 = sentencesWithLink0.getReporter();
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNull(pigProgressable6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNull(pigProgressable11);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNull(pigProgressable16);
    }

    @Test
    public void test4415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4415");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag1 = new pignlproc.evaluation.AggregateTextBag((int) (short) 0);
        java.lang.Enum enum3 = null;
        aggregateTextBag1.warn("href", enum3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = aggregateTextBag1.getReporter();
        aggregateTextBag1.finish();
        org.apache.pig.data.Tuple tuple7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = aggregateTextBag1.exec(tuple7);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in AggregateTextBag");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigProgressable5);
    }

    @Test
    public void test4416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4416");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        sentencesWithLink0.setPigLogger(pigLogger2);
        java.lang.reflect.Type type4 = sentencesWithLink0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = sentencesWithLink0.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract7 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum9 = null;
        checkAbstract7.warn("http://.wikipedia.org/wiki/hi%21", enum9);
        java.lang.Enum enum12 = null;
        checkAbstract7.warn("hi !", enum12);
        pignlproc.evaluation.NoLoopInPath noLoopInPath14 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText15 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = null;
        safeTsvText15.setPigLogger(pigLogger16);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText18 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = mergeAsOpenNLPAnnotatedText18.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = checkAbstract20.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = mergeAsOpenNLPAnnotatedText18.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = safeTsvText15.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = noLoopInPath14.outputSchema(schema23);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag26 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText27 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger28 = null;
        safeTsvText27.setPigLogger(pigLogger28);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText30 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable31 = mergeAsOpenNLPAnnotatedText30.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract32 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = checkAbstract32.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = mergeAsOpenNLPAnnotatedText30.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = safeTsvText27.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = aggregateTextBag26.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = noLoopInPath14.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = checkAbstract7.outputSchema(schema38);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = sentencesWithLink0.outputSchema(schema38);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList41 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.finish();
        pignlproc.evaluation.NoLoopInPath noLoopInPath43 = new pignlproc.evaluation.NoLoopInPath();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger44 = null;
        noLoopInPath43.setPigLogger(pigLogger44);
        pignlproc.evaluation.NoLoopInPath noLoopInPath46 = new pignlproc.evaluation.NoLoopInPath();
        noLoopInPath46.progress();
        pignlproc.evaluation.NoLoopInPath noLoopInPath48 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText49 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger50 = null;
        safeTsvText49.setPigLogger(pigLogger50);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText52 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable53 = mergeAsOpenNLPAnnotatedText52.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract54 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = checkAbstract54.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = mergeAsOpenNLPAnnotatedText52.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = safeTsvText49.outputSchema(schema57);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = noLoopInPath48.outputSchema(schema57);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag60 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText61 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger62 = null;
        safeTsvText61.setPigLogger(pigLogger62);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText64 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable65 = mergeAsOpenNLPAnnotatedText64.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract66 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = checkAbstract66.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = mergeAsOpenNLPAnnotatedText64.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema70 = safeTsvText61.outputSchema(schema69);
        org.apache.pig.impl.logicalLayer.schema.Schema schema71 = aggregateTextBag60.outputSchema(schema69);
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = noLoopInPath48.outputSchema(schema69);
        pignlproc.evaluation.CheckAbstract checkAbstract73 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum75 = null;
        checkAbstract73.warn("http://.wikipedia.org/wiki/hi%21", enum75);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger77 = null;
        checkAbstract73.setPigLogger(pigLogger77);
        checkAbstract73.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText80 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger81 = null;
        safeTsvText80.setPigLogger(pigLogger81);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText83 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable84 = mergeAsOpenNLPAnnotatedText83.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract85 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema86 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema87 = checkAbstract85.outputSchema(schema86);
        org.apache.pig.impl.logicalLayer.schema.Schema schema88 = mergeAsOpenNLPAnnotatedText83.outputSchema(schema86);
        org.apache.pig.impl.logicalLayer.schema.Schema schema89 = safeTsvText80.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema90 = checkAbstract73.outputSchema(schema89);
        org.apache.pig.impl.logicalLayer.schema.Schema schema91 = noLoopInPath48.outputSchema(schema90);
        org.apache.pig.impl.logicalLayer.schema.Schema schema92 = noLoopInPath46.outputSchema(schema90);
        org.apache.pig.impl.logicalLayer.schema.Schema schema93 = noLoopInPath43.outputSchema(schema92);
        org.apache.pig.impl.logicalLayer.schema.Schema schema94 = sentencesWithLink0.outputSchema(schema92);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger95 = null;
        sentencesWithLink0.setPigLogger(pigLogger95);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger97 = null;
        sentencesWithLink0.setPigLogger(pigLogger97);
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNull(pigProgressable6);
        org.junit.Assert.assertNull(pigProgressable19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(pigProgressable31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(funcSpecList41);
        org.junit.Assert.assertNull(pigProgressable53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(pigProgressable65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(pigProgressable84);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
    }

    @Test
    public void test4417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4417");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getParagraphAnnotations();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser0.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser0.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser6 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser6.getHeaderAnnotations();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser6.getParagraphs();
        java.lang.Appendable appendable9 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser6.new CountingAppendable(appendable9);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable11 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable10);
        java.lang.String str13 = annotatingMarkupParser0.parse("hi!\n");
        java.util.List<java.lang.String> strList14 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList15 = annotatingMarkupParser0.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList16 = annotatingMarkupParser0.getParagraphAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList17 = annotatingMarkupParser0.getWikiLinkAnnotations();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!\n\n" + "'", str13, "hi!\n\n");
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(annotationList15);
        org.junit.Assert.assertNotNull(annotationList16);
        org.junit.Assert.assertNotNull(annotationList17);
    }

    @Test
    public void test4418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4418");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("title", job3);
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader1.getLoadCaster();
        parsingWikipediaLoader1.setUDFContextSignature("hi !");
        org.apache.hadoop.mapreduce.Job job9 = null;
        org.apache.pig.ResourceStatistics resourceStatistics10 = parsingWikipediaLoader1.getStatistics("http://\"title\".wikipedia.org/wiki/%22hi%21%22", job9);
        org.apache.hadoop.mapreduce.RecordReader recordReader11 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit12 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader11, pigSplit12);
        org.apache.hadoop.mapreduce.RecordReader recordReader14 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit15 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader14, pigSplit15);
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(loadCaster5);
        org.junit.Assert.assertNull(resourceStatistics10);
    }

    @Test
    public void test4419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4419");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.finish();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = null;
        sentencesWithLink0.setPigLogger(pigLogger8);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = null;
        sentencesWithLink0.setPigLogger(pigLogger10);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser12 = new pignlproc.markup.AnnotatingMarkupParser();
        java.lang.String str13 = annotatingMarkupParser12.getRedirect();
        java.util.List<pignlproc.markup.Annotation> annotationList14 = annotatingMarkupParser12.getWikiLinkAnnotations();
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader16 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job18 = null;
        org.apache.pig.ResourceSchema resourceSchema19 = parsingWikipediaLoader16.getSchema("title", job18);
        org.apache.pig.LoadCaster loadCaster20 = parsingWikipediaLoader16.getLoadCaster();
        parsingWikipediaLoader16.setUDFContextSignature("hi !");
        org.apache.hadoop.mapreduce.RecordReader recordReader23 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit24 = null;
        parsingWikipediaLoader16.prepareToRead(recordReader23, pigSplit24);
        org.apache.hadoop.mapreduce.Job job27 = null;
        org.apache.pig.ResourceSchema resourceSchema28 = parsingWikipediaLoader16.getSchema("\" title \"", job27);
        org.apache.hadoop.mapreduce.InputFormat inputFormat29 = parsingWikipediaLoader16.getInputFormat();
        org.apache.hadoop.mapreduce.RecordReader recordReader30 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit31 = null;
        parsingWikipediaLoader16.prepareToRead(recordReader30, pigSplit31);
        java.util.List<opennlp.tools.util.Span> spanList33 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) annotationList14, (java.lang.Object) pigSplit31);
        java.util.List<opennlp.tools.util.Span> spanList34 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) pigLogger10, (java.lang.Object) annotationList14);
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(funcSpecList6);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(annotationList14);
        org.junit.Assert.assertNotNull(resourceSchema19);
        org.junit.Assert.assertNotNull(loadCaster20);
        org.junit.Assert.assertNotNull(resourceSchema28);
        org.junit.Assert.assertNotNull(inputFormat29);
        org.junit.Assert.assertNotNull(spanList33);
        org.junit.Assert.assertNotNull(spanList34);
    }

    @Test
    public void test4420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4420");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        mergeAsOpenNLPAnnotatedText0.setPigLogger(pigLogger6);
        mergeAsOpenNLPAnnotatedText0.finish();
        java.lang.reflect.Type type9 = mergeAsOpenNLPAnnotatedText0.getReturnType();
        java.lang.Enum enum11 = null;
        mergeAsOpenNLPAnnotatedText0.warn("\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/hi%21\"", enum11);
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "href" + "'", str5, "href");
        org.junit.Assert.assertNotNull(type9);
    }

    @Test
    public void test4421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4421");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser11 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser11.getHeaders();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser11.getHeaders();
        java.lang.Appendable appendable14 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable15 = annotatingMarkupParser11.new CountingAppendable(appendable14);
        countingAppendable15.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable18 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable15);
        countingAppendable18.currentPosition = (byte) -1;
        countingAppendable18.currentPosition = (short) 100;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable24 = countingAppendable18.append('#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
    }

    @Test
    public void test4422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4422");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("\"hi!\"", job4);
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = uriStringLiteralNTriplesLoader2.getSchema("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", job7);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple9 = uriStringLiteralNTriplesLoader2.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(resourceSchema8);
    }

    @Test
    public void test4423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4423");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "href" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.lang.String str6 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList3, "");
        java.lang.String str8 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList3, "title");
        java.lang.String str10 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList3, "http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "href" + "'", str6, "href");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "titlehref" + "'", str8, "titlehref");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21href" + "'", str10, "http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21href");
    }

    @Test
    public void test4424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4424");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        checkAbstract0.setReporter(pigProgressable4);
        java.lang.reflect.Type type6 = checkAbstract0.getReturnType();
        boolean boolean7 = checkAbstract0.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList8 = checkAbstract0.getArgToFuncMapping();
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = checkAbstract0.outputSchema(schema9);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable11 = null;
        checkAbstract0.setReporter(pigProgressable11);
        checkAbstract0.progress();
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = checkAbstract0.outputSchema(schema14);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = null;
        checkAbstract0.setPigLogger(pigLogger16);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList18 = checkAbstract0.getArgToFuncMapping();
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(funcSpecList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(funcSpecList18);
    }

    @Test
    public void test4425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4425");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("href");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("opennlp/en-sent.bin", job3);
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader1.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceStatistics resourceStatistics8 = parsingWikipediaLoader1.getStatistics("http://\"http://http://\"\"title\"\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/http_%3A_%2F%2F_hi_%21_._wikipedia_._org_%2F_wiki_%2F_opennlp___%25_2_F___en___-___sent___.___bin", job7);
        org.apache.hadoop.mapreduce.RecordReader recordReader9 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit10 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader9, pigSplit10);
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(loadCaster5);
        org.junit.Assert.assertNull(resourceStatistics8);
    }

    @Test
    public void test4426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4426");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("title\n\n", "\"http://http://hi! .wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin\"", "\"http://\"\" title \"\".wikipedia.org/wiki/\"");
    }

    @Test
    public void test4427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4427");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("http://.wikipedia.org/wiki/hi%21\n", "wikiobject", "hi!");
        uriUriNTriplesStorer3.setStoreFuncUDFContextSignature("\"http://.wikipedia.org/wiki/hi%21\"\n");
        org.apache.pig.data.Tuple tuple6 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer3.putNext(tuple6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4428");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("wikiobject");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        concatTextBag1.setPigLogger(pigLogger2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = null;
        concatTextBag1.setPigLogger(pigLogger4);
        pignlproc.evaluation.SafeTsvText safeTsvText6 = new pignlproc.evaluation.SafeTsvText();
        java.lang.reflect.Type type7 = safeTsvText6.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = null;
        safeTsvText6.setReporter(pigProgressable8);
        pignlproc.evaluation.CheckAbstract checkAbstract10 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = checkAbstract10.outputSchema(schema11);
        checkAbstract10.finish();
        java.lang.Enum enum15 = null;
        checkAbstract10.warn("href", enum15);
        pignlproc.evaluation.CheckAbstract checkAbstract17 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum19 = null;
        checkAbstract17.warn("http://.wikipedia.org/wiki/hi%21", enum19);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable21 = null;
        checkAbstract17.setReporter(pigProgressable21);
        java.lang.reflect.Type type23 = checkAbstract17.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath24 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText25 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger26 = null;
        safeTsvText25.setPigLogger(pigLogger26);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText28 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable29 = mergeAsOpenNLPAnnotatedText28.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract30 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = checkAbstract30.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = mergeAsOpenNLPAnnotatedText28.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = safeTsvText25.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = noLoopInPath24.outputSchema(schema33);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag36 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText37 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger38 = null;
        safeTsvText37.setPigLogger(pigLogger38);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText40 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable41 = mergeAsOpenNLPAnnotatedText40.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract42 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = checkAbstract42.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = mergeAsOpenNLPAnnotatedText40.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = safeTsvText37.outputSchema(schema45);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = aggregateTextBag36.outputSchema(schema45);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = noLoopInPath24.outputSchema(schema45);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = checkAbstract17.outputSchema(schema45);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = checkAbstract10.outputSchema(schema45);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = safeTsvText6.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = concatTextBag1.outputSchema(schema51);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNull(pigProgressable29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(pigProgressable41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test4429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4429");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("title");
        org.apache.hadoop.mapreduce.Job job3 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer1.setStoreLocation("http://.wikipedia.org/wiki/%22_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_%22", job3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4430");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        java.lang.String[] strArray5 = uriStringLiteralNTriplesLoader2.getPartitionKeys("\"title\"", job4);
        org.apache.hadoop.mapreduce.RecordReader recordReader6 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit7 = null;
        uriStringLiteralNTriplesLoader2.prepareToRead(recordReader6, pigSplit7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceStatistics resourceStatistics11 = uriStringLiteralNTriplesLoader2.getStatistics("hi !\n\nhref", job10);
        org.junit.Assert.assertNull(strArray5);
        org.junit.Assert.assertNull(resourceStatistics11);
    }

    @Test
    public void test4431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4431");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("\"opennlp / en - sent . bin\"");
    }

    @Test
    public void test4432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4432");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getParagraphAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList4 = annotatingMarkupParser0.getHeaderAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel6 = annotatingMarkupParser0.makeWikiModel("\"http://http://http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/%22title%22 .wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org%2Fwiki%2Fhi_%2521\"");
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNotNull(annotationList4);
        org.junit.Assert.assertNotNull(wikiModel6);
    }

    @Test
    public void test4433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4433");
        java.net.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader wikipediaRecordReader3 = new pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader(uRL0, (long) '#', (long) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4434");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("http://.wikipedia.org/wiki/%22_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_%22", "http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21href", "");
        uriUriNTriplesStorer3.setStoreFuncUDFContextSignature("title\n\n");
    }

    @Test
    public void test4435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4435");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        sentencesWithLink0.setPigLogger(pigLogger2);
        java.lang.reflect.Type type4 = sentencesWithLink0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = sentencesWithLink0.getReporter();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = sentencesWithLink0.getArgToFuncMapping();
        boolean boolean7 = sentencesWithLink0.isAsynchronous();
        boolean boolean8 = sentencesWithLink0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = null;
        sentencesWithLink0.setPigLogger(pigLogger10);
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNull(funcSpecList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(pigProgressable9);
    }

    @Test
    public void test4436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4436");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger12 = noLoopInPath0.getPigLogger();
        java.lang.Enum enum14 = null;
        noLoopInPath0.warn("hi !\n\n", enum14);
        org.apache.pig.data.Tuple tuple16 = null;
        java.lang.Boolean boolean17 = noLoopInPath0.exec(tuple16);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable18 = noLoopInPath0.getReporter();
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigLogger12);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + true + "'", boolean17, true);
        org.junit.Assert.assertNull(pigProgressable18);
    }

    @Test
    public void test4437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4437");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("\"title\"\n", "\" title \"", "\"title\"");
        org.apache.hadoop.mapreduce.InputFormat inputFormat4 = uriUriNTriplesLoader3.getInputFormat();
        org.apache.hadoop.mapreduce.InputFormat inputFormat5 = uriUriNTriplesLoader3.getInputFormat();
        org.apache.hadoop.mapreduce.InputFormat inputFormat6 = uriUriNTriplesLoader3.getInputFormat();
        org.apache.hadoop.mapreduce.Job job8 = null;
        org.apache.pig.ResourceSchema resourceSchema9 = uriUriNTriplesLoader3.getSchema("\"http://http://hi! .wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin\"\n\n", job8);
        org.junit.Assert.assertNotNull(inputFormat4);
        org.junit.Assert.assertNotNull(inputFormat5);
        org.junit.Assert.assertNotNull(inputFormat6);
        org.junit.Assert.assertNotNull(resourceSchema9);
    }

    @Test
    public void test4438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4438");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract3 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum5 = null;
        checkAbstract3.warn("http://.wikipedia.org/wiki/hi%21", enum5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        checkAbstract3.setPigLogger(pigLogger7);
        checkAbstract3.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText10 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        safeTsvText10.setPigLogger(pigLogger11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = mergeAsOpenNLPAnnotatedText13.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract15.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = safeTsvText10.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract3.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = concatTextBag2.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = sentencesWithLink0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = sentencesWithLink0.getPigLogger();
        java.lang.Enum enum25 = null;
        sentencesWithLink0.warn("title", enum25);
        java.lang.reflect.Type type27 = sentencesWithLink0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger28 = null;
        sentencesWithLink0.setPigLogger(pigLogger28);
        sentencesWithLink0.progress();
        org.junit.Assert.assertNull(pigProgressable14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(pigLogger23);
        org.junit.Assert.assertNotNull(type27);
    }

    @Test
    public void test4439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4439");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = null;
        checkAbstract0.setPigLogger(pigLogger4);
        checkAbstract0.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText7 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = null;
        safeTsvText7.setPigLogger(pigLogger8);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText10 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable11 = mergeAsOpenNLPAnnotatedText10.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract12 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = checkAbstract12.outputSchema(schema13);
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = mergeAsOpenNLPAnnotatedText10.outputSchema(schema13);
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = safeTsvText7.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract0.outputSchema(schema16);
        java.lang.Enum enum19 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum19);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable21 = null;
        checkAbstract0.setReporter(pigProgressable21);
        java.lang.reflect.Type type23 = checkAbstract0.getReturnType();
        org.junit.Assert.assertNull(pigProgressable11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(type23);
    }

    @Test
    public void test4440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4440");
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract("http://\"http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21\".wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"http://\"http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21\".wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4441");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("http://\"opennlp/en-sent.bin\"\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22opennlp_%2F_en_-_sent_._bin%22.wikipedia.org%2Fwiki%2Fhref%0A.wikipedia.org%2Fwiki%2F%2522%2522", "\" http : // \"\" opennlp / en - sent . bin \"\" . wikipedia . org / wiki / hrefwikiobject \"\"\"\"\"\" http : // hi ! . wikipedia . org / wiki / % 22 http % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 22 % 0 A \"\"\"\"\"\" wikiobject \"\" hi ! \"\" wikiobject wikiobjectopennlp / en - sent . binwikiobjecthttp : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ binwikiobjecthttp : // http : // \"\" title \"\" . wikipedia . org / wiki / % 22 hi % 21 % 22 . wikipedia . org / wiki / hi % 21 wikiobjecthttp : // \"\" http : // . wikipedia . org / wiki / hi % 21 \"\" . wikipedia . org / wiki / % 22 % 22 % 22 http % 3 A % 2 F % 2 Fhi _ % 21 _ . wikipedia . org % 2 Fwiki % 2 Fhttp % 253 A % 252 F % 252 Fhttp % 253 A % 252 F % 252 F . wikipedia . org % 252 Fwiki % 252 Fhi % 252521 % 250 A . wikipedia . org % 252 Fwiki % 252 F % 252522 title % 252522 % 22 % 22 % 22 wikiobject \"\" opennlp / en - sent . bin \"\" wikiobject \"\"\"\"\"", "\"\"\" http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 \"\"\"");
    }

    @Test
    public void test4442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4442");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://title\n\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522");
    }

    @Test
    public void test4443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4443");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("");
        mergeAsOpenNLPAnnotatedText1.progress();
        boolean boolean3 = mergeAsOpenNLPAnnotatedText1.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText5 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray7 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList8 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList8, spanArray7);
        java.lang.String str10 = mergeAsOpenNLPAnnotatedText5.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList8);
        java.lang.String str11 = mergeAsOpenNLPAnnotatedText1.merge("http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522", (java.util.List<opennlp.tools.util.Span>) spanList8);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink12 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger13 = null;
        sentencesWithLink12.setPigLogger(pigLogger13);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList15 = sentencesWithLink12.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = sentencesWithLink12.getPigLogger();
        boolean boolean17 = sentencesWithLink12.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText18 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = mergeAsOpenNLPAnnotatedText18.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = checkAbstract20.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = mergeAsOpenNLPAnnotatedText18.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = sentencesWithLink12.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = mergeAsOpenNLPAnnotatedText1.outputSchema(schema24);
        boolean boolean26 = mergeAsOpenNLPAnnotatedText1.isAsynchronous();
        org.apache.pig.data.Tuple tuple27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str28 = mergeAsOpenNLPAnnotatedText1.exec(tuple27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(spanArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "href" + "'", str10, "href");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522" + "'", str11, "http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522");
        org.junit.Assert.assertNull(funcSpecList15);
        org.junit.Assert.assertNull(pigLogger16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(pigProgressable19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test4444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4444");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        org.apache.commons.logging.Log log4 = sentencesWithLink0.getLogger();
        java.lang.reflect.Type type5 = sentencesWithLink0.getReturnType();
        java.lang.Enum enum7 = null;
        sentencesWithLink0.warn("\"title\"\n", enum7);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = sentencesWithLink0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        sentencesWithLink0.setPigLogger(pigLogger11);
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNull(pigProgressable9);
        org.junit.Assert.assertNull(pigLogger10);
    }

    @Test
    public void test4445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4445");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        sentencesWithLink0.setPigLogger(pigLogger2);
        java.lang.reflect.Type type4 = sentencesWithLink0.getReturnType();
        sentencesWithLink0.finish();
        sentencesWithLink0.finish();
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNotNull(type4);
    }

    @Test
    public void test4446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4446");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("", "http://titlehref.wikipedia.org/wiki/http%3A%2F%2F%22http%3A%2F%2Fhttp%3A%2F%2F%22%22title%22%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521%22.wikipedia.org%2Fwiki%2Fhttp_%253A_%252F%252F_hi_%2521_._wikipedia_._org_%252F_wiki_%252F_opennlp___%2525_2_F___en___-___sent___.___bin", "\"\"\" http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 \"\"\"");
    }

    @Test
    public void test4447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4447");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("href");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriStringLiteralNTriplesStorer1.getOutputFormat();
        org.apache.hadoop.mapreduce.RecordWriter recordWriter3 = null;
        uriStringLiteralNTriplesStorer1.prepareToWrite(recordWriter3);
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer6 = new pignlproc.storage.UriStringLiteralNTriplesStorer("title");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader8 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceStatistics resourceStatistics11 = parsingWikipediaLoader8.getStatistics("hi!", job10);
        org.apache.hadoop.mapreduce.Job job13 = null;
        org.apache.pig.ResourceSchema resourceSchema14 = parsingWikipediaLoader8.getSchema("hi!", job13);
        uriStringLiteralNTriplesStorer6.checkSchema(resourceSchema14);
        uriStringLiteralNTriplesStorer1.checkSchema(resourceSchema14);
        org.apache.pig.data.Tuple tuple17 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.putNext(tuple17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat2);
        org.junit.Assert.assertNull(resourceStatistics11);
        org.junit.Assert.assertNotNull(resourceSchema14);
    }

    @Test
    public void test4448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4448");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((int) (short) 100, false);
        org.apache.commons.logging.Log log3 = aggregateTextBag2.getLogger();
        org.junit.Assert.assertNotNull(log3);
    }

    @Test
    public void test4449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4449");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("http://http://\"http://.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22\n.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A\n");
    }

    @Test
    public void test4450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4450");
        java.net.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader wikipediaRecordReader3 = new pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader(uRL0, (long) ' ', (long) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4451");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = checkAbstract0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = checkAbstract0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = checkAbstract0.getPigLogger();
        org.apache.pig.data.Tuple tuple7 = null;
        java.lang.Boolean boolean8 = checkAbstract0.exec(tuple7);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = null;
        checkAbstract0.setReporter(pigProgressable9);
        checkAbstract0.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger12 = null;
        checkAbstract0.setPigLogger(pigLogger12);
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNull(pigLogger5);
        org.junit.Assert.assertNull(pigLogger6);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + false + "'", boolean8, false);
    }

    @Test
    public void test4452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4452");
        java.lang.String[] strArray1 = org.apache.pig.LoadFunc.getPathStrings("http://\"http://.wikipedia.org/wiki/hi%21\"\n\n.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%0A");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test4453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4453");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("http://\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\".wikipedia.org/wiki/%22%22%22opennlp_%2F_en_-_sent_._bin%22%22%22\n");
    }

    @Test
    public void test4454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4454");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("opennlp/en-sent.bin");
        info.bliki.wiki.model.WikiModel wikiModel3 = annotatingMarkupParser1.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser4 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser4.getHeaderAnnotations();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser4.getParagraphs();
        java.lang.Appendable appendable7 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable8 = annotatingMarkupParser4.new CountingAppendable(appendable7);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser1.new CountingAppendable(appendable7);
        java.util.List<pignlproc.markup.Annotation> annotationList10 = annotatingMarkupParser1.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList11 = annotatingMarkupParser1.getParagraphAnnotations();
        org.junit.Assert.assertNotNull(wikiModel3);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(annotationList10);
        org.junit.Assert.assertNotNull(annotationList11);
    }

    @Test
    public void test4455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4455");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/hrefwikiobject\"\"\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"\"\"wikiobject\"hi!\"\nwikiobject\nwikiobjectopennlp/en-sent.binwikiobjecthttp://hi!\n.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._binwikiobjecthttp://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21wikiobjecthttp://\"http://.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22wikiobject\"opennlp / en - sent . bin\"wikiobject\"\"");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText3 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("\"http://.wikipedia.org/wiki/hi%21\"");
        mergeAsOpenNLPAnnotatedText3.finish();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink5 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        sentencesWithLink5.setPigLogger(pigLogger6);
        boolean boolean8 = sentencesWithLink5.isAsynchronous();
        pignlproc.evaluation.ConcatTextBag concatTextBag10 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        org.apache.pig.data.Tuple tuple11 = null;
        java.lang.String str12 = concatTextBag10.exec(tuple11);
        pignlproc.evaluation.NoLoopInPath noLoopInPath13 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText14 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger15 = null;
        safeTsvText14.setPigLogger(pigLogger15);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText17 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable18 = mergeAsOpenNLPAnnotatedText17.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract19 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = checkAbstract19.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = mergeAsOpenNLPAnnotatedText17.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = safeTsvText14.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = noLoopInPath13.outputSchema(schema22);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag25 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText26 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger27 = null;
        safeTsvText26.setPigLogger(pigLogger27);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText29 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable30 = mergeAsOpenNLPAnnotatedText29.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract31 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = checkAbstract31.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = mergeAsOpenNLPAnnotatedText29.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = safeTsvText26.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = aggregateTextBag25.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = noLoopInPath13.outputSchema(schema34);
        pignlproc.evaluation.CheckAbstract checkAbstract38 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum40 = null;
        checkAbstract38.warn("http://.wikipedia.org/wiki/hi%21", enum40);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger42 = null;
        checkAbstract38.setPigLogger(pigLogger42);
        checkAbstract38.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText45 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger46 = null;
        safeTsvText45.setPigLogger(pigLogger46);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText48 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable49 = mergeAsOpenNLPAnnotatedText48.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract50 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = checkAbstract50.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = mergeAsOpenNLPAnnotatedText48.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = safeTsvText45.outputSchema(schema53);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = checkAbstract38.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = noLoopInPath13.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = concatTextBag10.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = sentencesWithLink5.outputSchema(schema57);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = mergeAsOpenNLPAnnotatedText3.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = noLoopInPath1.outputSchema(schema58);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable61 = noLoopInPath1.getReporter();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(pigProgressable18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(pigProgressable30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(pigProgressable49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(pigProgressable61);
    }

    @Test
    public void test4456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4456");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        java.lang.Enum enum4 = null;
        checkAbstract0.warn("hi !", enum4);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = null;
        checkAbstract0.setReporter(pigProgressable6);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = null;
        checkAbstract0.setPigLogger(pigLogger8);
        java.lang.reflect.Type type10 = checkAbstract0.getReturnType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(type10);
    }

    @Test
    public void test4457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4457");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/%22opennlp_%2F_en_-_sent_._bin%22%0A");
        java.lang.reflect.Type type2 = mergeAsOpenNLPAnnotatedText1.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger3 = null;
        mergeAsOpenNLPAnnotatedText1.setPigLogger(pigLogger3);
        org.junit.Assert.assertNotNull(type2);
    }

    @Test
    public void test4458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4458");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract3 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum5 = null;
        checkAbstract3.warn("http://.wikipedia.org/wiki/hi%21", enum5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        checkAbstract3.setPigLogger(pigLogger7);
        checkAbstract3.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText10 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        safeTsvText10.setPigLogger(pigLogger11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = mergeAsOpenNLPAnnotatedText13.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract15.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = safeTsvText10.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract3.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = concatTextBag2.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = sentencesWithLink0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = sentencesWithLink0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable24 = null;
        sentencesWithLink0.setReporter(pigProgressable24);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger26 = sentencesWithLink0.getPigLogger();
        sentencesWithLink0.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger28 = sentencesWithLink0.getPigLogger();
        org.junit.Assert.assertNull(pigProgressable14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(pigLogger23);
        org.junit.Assert.assertNull(pigLogger26);
        org.junit.Assert.assertNull(pigLogger28);
    }

    @Test
    public void test4459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4459");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((int) '4', true);
        java.lang.reflect.Type type3 = aggregateTextBag2.getReturnType();
        aggregateTextBag2.finish();
        org.junit.Assert.assertNotNull(type3);
    }

    @Test
    public void test4460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4460");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("opennlp/en-sent.bin", "\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"\n", "\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/%22title%22href\"");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer7 = new pignlproc.storage.UriUriNTriplesStorer("http://\" title \".wikipedia.org/wiki/", "http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href\n", "\"\"\"hi!\"\" \"\n\n");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader10 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job12 = null;
        org.apache.pig.ResourceSchema resourceSchema13 = uriStringLiteralNTriplesLoader10.getSchema("http://.wikipedia.org/wiki/hi%21", job12);
        org.apache.hadoop.mapreduce.InputFormat inputFormat14 = uriStringLiteralNTriplesLoader10.getInputFormat();
        org.apache.hadoop.mapreduce.Job job16 = null;
        org.apache.pig.ResourceSchema resourceSchema17 = uriStringLiteralNTriplesLoader10.getSchema("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21", job16);
        org.apache.hadoop.mapreduce.Job job19 = null;
        org.apache.pig.ResourceSchema resourceSchema20 = uriStringLiteralNTriplesLoader10.getSchema("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", job19);
        uriUriNTriplesStorer7.checkSchema(resourceSchema20);
        uriStringLiteralNTriplesStorer3.checkSchema(resourceSchema20);
        org.apache.pig.data.Tuple tuple23 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer3.putNext(tuple23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema13);
        org.junit.Assert.assertNotNull(inputFormat14);
        org.junit.Assert.assertNotNull(resourceSchema17);
        org.junit.Assert.assertNotNull(resourceSchema20);
    }

    @Test
    public void test4461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4461");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("\"opennlp / en - sent . bin\"");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21", job3);
        org.apache.hadoop.mapreduce.RecordReader recordReader5 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit6 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader5, pigSplit6);
        org.apache.pig.Expression expression8 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression8);
        org.junit.Assert.assertNull(resourceStatistics4);
    }

    @Test
    public void test4462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4462");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("\"\"\"\"\"\"\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"\"\"\"\"\"\"", "\"\"\"hi!\"\" \"\n", "\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"\n");
    }

    @Test
    public void test4463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4463");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel6 = annotatingMarkupParser0.makeWikiModel("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521");
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList8 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<java.lang.String> strList9 = annotatingMarkupParser0.getParagraphs();
        boolean boolean10 = annotatingMarkupParser0.noLinks();
        java.lang.String str12 = annotatingMarkupParser0.parse("\"http://hi! .wikipedia.org/wiki/%22_title_%22\"");
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(wikiModel6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(annotationList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"http://hi! .wikipedia.org/wiki/%22_title_%22\"\n" + "'", str12, "\"http://hi! .wikipedia.org/wiki/%22_title_%22\"\n");
    }

    @Test
    public void test4464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4464");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("title", job3);
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader1.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = parsingWikipediaLoader1.getSchema("opennlp/en-sent.bin", job7);
        org.apache.hadoop.mapreduce.InputFormat inputFormat9 = parsingWikipediaLoader1.getInputFormat();
        org.apache.hadoop.mapreduce.Job job11 = null;
        org.apache.pig.ResourceStatistics resourceStatistics12 = parsingWikipediaLoader1.getStatistics("http://http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21.wikipedia.org/wiki/%22http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521_.wikipedia.org%2Fwiki%2F%2522title%2522href%22\n", job11);
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(loadCaster5);
        org.junit.Assert.assertNotNull(resourceSchema8);
        org.junit.Assert.assertNotNull(inputFormat9);
        org.junit.Assert.assertNull(resourceStatistics12);
    }

    @Test
    public void test4465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4465");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("wikiobject", "");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", job4);
        org.apache.hadoop.mapreduce.RecordReader recordReader6 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit7 = null;
        uriStringLiteralNTriplesLoader2.prepareToRead(recordReader6, pigSplit7);
        org.apache.pig.LoadCaster loadCaster9 = uriStringLiteralNTriplesLoader2.getLoadCaster();
        org.apache.hadoop.mapreduce.RecordReader recordReader10 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit11 = null;
        uriStringLiteralNTriplesLoader2.prepareToRead(recordReader10, pigSplit11);
        org.apache.hadoop.mapreduce.Job job14 = null;
        org.apache.pig.ResourceSchema resourceSchema15 = uriStringLiteralNTriplesLoader2.getSchema("", job14);
        org.apache.hadoop.mapreduce.Job job17 = null;
        java.lang.String[] strArray18 = uriStringLiteralNTriplesLoader2.getPartitionKeys("hi!", job17);
        org.apache.hadoop.mapreduce.InputFormat inputFormat19 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(loadCaster9);
        org.junit.Assert.assertNotNull(resourceSchema15);
        org.junit.Assert.assertNull(strArray18);
        org.junit.Assert.assertNotNull(inputFormat19);
    }

    @Test
    public void test4466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4466");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum2 = null;
        safeTsvText0.warn("opennlp/en-sent.bin", enum2);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList4 = safeTsvText0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = safeTsvText0.getReporter();
        pignlproc.evaluation.ConcatTextBag concatTextBag7 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        org.apache.pig.data.Tuple tuple8 = null;
        java.lang.String str9 = concatTextBag7.exec(tuple8);
        pignlproc.evaluation.NoLoopInPath noLoopInPath10 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText11 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger12 = null;
        safeTsvText11.setPigLogger(pigLogger12);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText14 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable15 = mergeAsOpenNLPAnnotatedText14.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract16 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = checkAbstract16.outputSchema(schema17);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = mergeAsOpenNLPAnnotatedText14.outputSchema(schema17);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = safeTsvText11.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = noLoopInPath10.outputSchema(schema19);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag22 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText23 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger24 = null;
        safeTsvText23.setPigLogger(pigLogger24);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText26 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable27 = mergeAsOpenNLPAnnotatedText26.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract28 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = checkAbstract28.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = mergeAsOpenNLPAnnotatedText26.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = safeTsvText23.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = aggregateTextBag22.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = noLoopInPath10.outputSchema(schema31);
        pignlproc.evaluation.CheckAbstract checkAbstract35 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum37 = null;
        checkAbstract35.warn("http://.wikipedia.org/wiki/hi%21", enum37);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger39 = null;
        checkAbstract35.setPigLogger(pigLogger39);
        checkAbstract35.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText42 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger43 = null;
        safeTsvText42.setPigLogger(pigLogger43);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText45 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable46 = mergeAsOpenNLPAnnotatedText45.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract47 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = checkAbstract47.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = mergeAsOpenNLPAnnotatedText45.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = safeTsvText42.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = checkAbstract35.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = noLoopInPath10.outputSchema(schema52);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = concatTextBag7.outputSchema(schema53);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = safeTsvText0.outputSchema(schema54);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable56 = safeTsvText0.getReporter();
        org.junit.Assert.assertNull(funcSpecList4);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(pigProgressable15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(pigProgressable27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(pigProgressable46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(pigProgressable56);
    }

    @Test
    public void test4467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4467");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        noLoopInPath0.setPigLogger(pigLogger1);
        pignlproc.evaluation.NoLoopInPath noLoopInPath3 = new pignlproc.evaluation.NoLoopInPath();
        noLoopInPath3.progress();
        pignlproc.evaluation.NoLoopInPath noLoopInPath5 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText6 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        safeTsvText6.setPigLogger(pigLogger7);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText9 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable10 = mergeAsOpenNLPAnnotatedText9.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract11 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = checkAbstract11.outputSchema(schema12);
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = mergeAsOpenNLPAnnotatedText9.outputSchema(schema12);
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = safeTsvText6.outputSchema(schema14);
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = noLoopInPath5.outputSchema(schema14);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag17 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText18 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger19 = null;
        safeTsvText18.setPigLogger(pigLogger19);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText21 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable22 = mergeAsOpenNLPAnnotatedText21.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract23 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = checkAbstract23.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = mergeAsOpenNLPAnnotatedText21.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = safeTsvText18.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = aggregateTextBag17.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = noLoopInPath5.outputSchema(schema26);
        pignlproc.evaluation.CheckAbstract checkAbstract30 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum32 = null;
        checkAbstract30.warn("http://.wikipedia.org/wiki/hi%21", enum32);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger34 = null;
        checkAbstract30.setPigLogger(pigLogger34);
        checkAbstract30.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText37 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger38 = null;
        safeTsvText37.setPigLogger(pigLogger38);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText40 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable41 = mergeAsOpenNLPAnnotatedText40.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract42 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = checkAbstract42.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = mergeAsOpenNLPAnnotatedText40.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = safeTsvText37.outputSchema(schema45);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = checkAbstract30.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = noLoopInPath5.outputSchema(schema47);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = noLoopInPath3.outputSchema(schema47);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = noLoopInPath0.outputSchema(schema49);
        org.apache.pig.data.Tuple tuple51 = null;
        java.lang.Boolean boolean52 = noLoopInPath0.exec(tuple51);
        org.apache.commons.logging.Log log53 = noLoopInPath0.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger54 = null;
        noLoopInPath0.setPigLogger(pigLogger54);
        org.junit.Assert.assertNull(pigProgressable10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(pigProgressable22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(pigProgressable41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertEquals("'" + boolean52 + "' != '" + true + "'", boolean52, true);
        org.junit.Assert.assertNotNull(log53);
    }

    @Test
    public void test4468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4468");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        int int5 = annotation4.begin;
        int int6 = annotation4.end;
        java.lang.String str7 = annotation4.label;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "title" + "'", str7, "title");
    }

    @Test
    public void test4469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4469");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader0 = new pignlproc.storage.UriUriNTriplesLoader();
        org.apache.hadoop.mapreduce.Job job2 = null;
        java.lang.String[] strArray3 = uriUriNTriplesLoader0.getPartitionKeys("title", job2);
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader0.getSchema("http://.wikipedia.org/wiki/hi%21", job5);
        org.apache.hadoop.mapreduce.RecordReader recordReader7 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit8 = null;
        uriUriNTriplesLoader0.prepareToRead(recordReader7, pigSplit8);
        org.apache.hadoop.mapreduce.Job job11 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesLoader0.setLocation("\"\"\"\"\"\"\"http://.wikipedia.org/wiki/hi%21\"\"\"\" \"\"\"", job11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Illegal character in scheme name at index 0: \"\"\"\"\"\"\"http://.wikipedia.org/wiki/hi%2521%22%22%22%22%20%22%22%22");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strArray3);
        org.junit.Assert.assertNotNull(resourceSchema6);
    }

    @Test
    public void test4470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4470");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://.wikipedia.org/wiki/hi%21", job4);
        org.apache.hadoop.mapreduce.InputFormat inputFormat6 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.apache.pig.Expression expression7 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression7);
        org.apache.hadoop.mapreduce.RecordReader recordReader9 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit10 = null;
        uriStringLiteralNTriplesLoader2.prepareToRead(recordReader9, pigSplit10);
        org.apache.hadoop.mapreduce.RecordReader recordReader12 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit13 = null;
        uriStringLiteralNTriplesLoader2.prepareToRead(recordReader12, pigSplit13);
        org.apache.hadoop.mapreduce.Job job16 = null;
        org.apache.pig.ResourceStatistics resourceStatistics17 = uriStringLiteralNTriplesLoader2.getStatistics("\" http : // . wikipedia . org / wiki / hi % 21 \"", job16);
        org.apache.hadoop.mapreduce.Job job19 = null;
        java.lang.String[] strArray20 = uriStringLiteralNTriplesLoader2.getPartitionKeys("\"http : // \"\" opennlp / en - sent . bin \"\" . wikipedia . org / wiki / href\"", job19);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple21 = uriStringLiteralNTriplesLoader2.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(inputFormat6);
        org.junit.Assert.assertNull(resourceStatistics17);
        org.junit.Assert.assertNull(strArray20);
    }

    @Test
    public void test4471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4471");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        pignlproc.evaluation.CheckAbstract checkAbstract2 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum4 = null;
        checkAbstract2.warn("http://.wikipedia.org/wiki/hi%21", enum4);
        java.lang.Enum enum7 = null;
        checkAbstract2.warn("hi !", enum7);
        pignlproc.evaluation.NoLoopInPath noLoopInPath9 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText10 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        safeTsvText10.setPigLogger(pigLogger11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = mergeAsOpenNLPAnnotatedText13.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract15.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = safeTsvText10.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = noLoopInPath9.outputSchema(schema18);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag21 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText22 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = null;
        safeTsvText22.setPigLogger(pigLogger23);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText25 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable26 = mergeAsOpenNLPAnnotatedText25.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract27 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = checkAbstract27.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = mergeAsOpenNLPAnnotatedText25.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = safeTsvText22.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = aggregateTextBag21.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = noLoopInPath9.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = checkAbstract2.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = sentencesWithLink0.outputSchema(schema34);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger36 = null;
        sentencesWithLink0.setPigLogger(pigLogger36);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger38 = sentencesWithLink0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger39 = sentencesWithLink0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger40 = null;
        sentencesWithLink0.setPigLogger(pigLogger40);
        sentencesWithLink0.finish();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger43 = sentencesWithLink0.getPigLogger();
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNull(pigProgressable14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(pigProgressable26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(pigLogger38);
        org.junit.Assert.assertNull(pigLogger39);
        org.junit.Assert.assertNull(pigLogger43);
    }

    @Test
    public void test4472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4472");
        pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract((int) (byte) 10);
        java.lang.Enum enum3 = null;
        checkAbstract1.warn("http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href", enum3);
        org.apache.pig.data.Tuple tuple5 = null;
        java.lang.Boolean boolean6 = checkAbstract1.exec(tuple5);
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + false + "'", boolean6, false);
    }

    @Test
    public void test4473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4473");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        sentencesWithLink0.setReporter(pigProgressable4);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = sentencesWithLink0.getReporter();
        sentencesWithLink0.finish();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = sentencesWithLink0.getPigLogger();
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNull(pigProgressable6);
        org.junit.Assert.assertNull(pigLogger8);
    }

    @Test
    public void test4474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4474");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.RecordReader recordReader2 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit3 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader2, pigSplit3);
        org.apache.hadoop.mapreduce.RecordReader recordReader5 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit6 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader5, pigSplit6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        java.lang.String[] strArray10 = parsingWikipediaLoader1.getPartitionKeys("http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522", job9);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple11 = parsingWikipediaLoader1.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strArray10);
    }

    @Test
    public void test4475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4475");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://http://\"http://.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22\n.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A\n", "http://http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href\n.wikipedia.org/wiki/%22%22", "opennlp / en - sent . bin\n");
    }

    @Test
    public void test4476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4476");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("", "title", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.RecordWriter recordWriter4 = null;
        uriStringLiteralNTriplesStorer3.prepareToWrite(recordWriter4);
        org.apache.pig.ResourceSchema resourceSchema6 = null;
        uriStringLiteralNTriplesStorer3.checkSchema(resourceSchema6);
        org.apache.pig.data.Tuple tuple8 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer3.putNext(tuple8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4477");
        pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract((int) (byte) 10);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList2 = checkAbstract1.getArgToFuncMapping();
        org.apache.pig.data.Tuple tuple3 = null;
        java.lang.Boolean boolean4 = checkAbstract1.exec(tuple3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = checkAbstract1.getReporter();
        org.apache.commons.logging.Log log6 = checkAbstract1.getLogger();
        org.apache.pig.data.Tuple tuple7 = null;
        java.lang.Boolean boolean8 = checkAbstract1.exec(tuple7);
        org.junit.Assert.assertNull(funcSpecList2);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + false + "'", boolean4, false);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + false + "'", boolean8, false);
    }

    @Test
    public void test4478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4478");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        mergeAsOpenNLPAnnotatedText0.setPigLogger(pigLogger6);
        pignlproc.evaluation.NoLoopInPath noLoopInPath8 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText9 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = null;
        safeTsvText9.setPigLogger(pigLogger10);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText12 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable13 = mergeAsOpenNLPAnnotatedText12.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract14 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = checkAbstract14.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = mergeAsOpenNLPAnnotatedText12.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = safeTsvText9.outputSchema(schema17);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = noLoopInPath8.outputSchema(schema17);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag22 = new pignlproc.evaluation.AggregateTextBag((int) 'a', false);
        pignlproc.evaluation.NoLoopInPath noLoopInPath23 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText24 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        safeTsvText24.setPigLogger(pigLogger25);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText27 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable28 = mergeAsOpenNLPAnnotatedText27.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract29 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = checkAbstract29.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = mergeAsOpenNLPAnnotatedText27.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = safeTsvText24.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = noLoopInPath23.outputSchema(schema32);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag35 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText36 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger37 = null;
        safeTsvText36.setPigLogger(pigLogger37);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText39 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable40 = mergeAsOpenNLPAnnotatedText39.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract41 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = checkAbstract41.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = mergeAsOpenNLPAnnotatedText39.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = safeTsvText36.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = aggregateTextBag35.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = noLoopInPath23.outputSchema(schema44);
        pignlproc.evaluation.CheckAbstract checkAbstract48 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum50 = null;
        checkAbstract48.warn("http://.wikipedia.org/wiki/hi%21", enum50);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger52 = null;
        checkAbstract48.setPigLogger(pigLogger52);
        checkAbstract48.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText55 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger56 = null;
        safeTsvText55.setPigLogger(pigLogger56);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText58 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable59 = mergeAsOpenNLPAnnotatedText58.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract60 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = checkAbstract60.outputSchema(schema61);
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = mergeAsOpenNLPAnnotatedText58.outputSchema(schema61);
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = safeTsvText55.outputSchema(schema63);
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = checkAbstract48.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = noLoopInPath23.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = aggregateTextBag22.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = noLoopInPath8.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = mergeAsOpenNLPAnnotatedText0.outputSchema(schema68);
        java.lang.reflect.Type type70 = mergeAsOpenNLPAnnotatedText0.getReturnType();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText71 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable72 = mergeAsOpenNLPAnnotatedText71.getReporter();
        java.lang.Enum enum74 = null;
        mergeAsOpenNLPAnnotatedText71.warn("title", enum74);
        org.apache.commons.logging.Log log76 = mergeAsOpenNLPAnnotatedText71.getLogger();
        pignlproc.evaluation.SafeTsvText safeTsvText77 = new pignlproc.evaluation.SafeTsvText();
        java.lang.reflect.Type type78 = safeTsvText77.getReturnType();
        pignlproc.evaluation.CheckAbstract checkAbstract79 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema80 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema81 = checkAbstract79.outputSchema(schema80);
        org.apache.pig.impl.logicalLayer.schema.Schema schema82 = safeTsvText77.outputSchema(schema81);
        org.apache.pig.impl.logicalLayer.schema.Schema schema83 = mergeAsOpenNLPAnnotatedText71.outputSchema(schema82);
        org.apache.pig.impl.logicalLayer.schema.Schema schema84 = mergeAsOpenNLPAnnotatedText0.outputSchema(schema82);
        mergeAsOpenNLPAnnotatedText0.progress();
        mergeAsOpenNLPAnnotatedText0.finish();
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi !" + "'", str5, "hi !");
        org.junit.Assert.assertNull(pigProgressable13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(pigProgressable28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(pigProgressable40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(pigProgressable59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNull(pigProgressable72);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
    }

    @Test
    public void test4479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4479");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        checkAbstract0.setReporter(pigProgressable4);
        java.lang.reflect.Type type6 = checkAbstract0.getReturnType();
        boolean boolean7 = checkAbstract0.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList8 = checkAbstract0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger9 = null;
        checkAbstract0.setPigLogger(pigLogger9);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable11 = checkAbstract0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger12 = checkAbstract0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable13 = null;
        checkAbstract0.setReporter(pigProgressable13);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink15 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = null;
        sentencesWithLink15.setPigLogger(pigLogger16);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable18 = sentencesWithLink15.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = sentencesWithLink15.getReporter();
        boolean boolean20 = sentencesWithLink15.isAsynchronous();
        pignlproc.evaluation.NoLoopInPath noLoopInPath21 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText22 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = null;
        safeTsvText22.setPigLogger(pigLogger23);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText25 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable26 = mergeAsOpenNLPAnnotatedText25.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract27 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = checkAbstract27.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = mergeAsOpenNLPAnnotatedText25.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = safeTsvText22.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = noLoopInPath21.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = sentencesWithLink15.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = checkAbstract0.outputSchema(schema33);
        java.lang.reflect.Type type35 = checkAbstract0.getReturnType();
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(funcSpecList8);
        org.junit.Assert.assertNull(pigProgressable11);
        org.junit.Assert.assertNull(pigLogger12);
        org.junit.Assert.assertNull(pigProgressable18);
        org.junit.Assert.assertNull(pigProgressable19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(pigProgressable26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(type35);
    }

    @Test
    public void test4480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4480");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        info.bliki.wiki.model.WikiModel wikiModel12 = annotatingMarkupParser0.makeWikiModel("\"hi!\"\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser13 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList14 = annotatingMarkupParser13.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser15 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser15.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList17 = annotatingMarkupParser15.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser15.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser19.getHeaders();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser19.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList22 = annotatingMarkupParser19.getHeaderAnnotations();
        java.lang.String str23 = annotatingMarkupParser19.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser24 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser24.getHeaders();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser24.getHeaders();
        java.lang.Appendable appendable27 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable28 = annotatingMarkupParser24.new CountingAppendable(appendable27);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable29 = annotatingMarkupParser19.new CountingAppendable((java.lang.Appendable) countingAppendable28);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser30 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList31 = annotatingMarkupParser30.getHeaderAnnotations();
        java.lang.String str32 = annotatingMarkupParser30.getRedirect();
        pignlproc.markup.Annotation annotation37 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation42 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int43 = annotation42.end;
        int int44 = annotation42.begin;
        pignlproc.markup.Annotation[] annotationArray45 = new pignlproc.markup.Annotation[] { annotation37, annotation42 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList46 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList46, annotationArray45);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser48 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList49 = annotatingMarkupParser48.getHeaders();
        java.util.List<java.lang.String> strList50 = annotatingMarkupParser48.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList51 = annotatingMarkupParser48.getHeaderAnnotations();
        java.lang.String str52 = annotatingMarkupParser48.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser53 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList54 = annotatingMarkupParser53.getHeaders();
        java.util.List<java.lang.String> strList55 = annotatingMarkupParser53.getHeaders();
        java.lang.Appendable appendable56 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable57 = annotatingMarkupParser53.new CountingAppendable(appendable56);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable58 = annotatingMarkupParser48.new CountingAppendable((java.lang.Appendable) countingAppendable57);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser59 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList60 = annotatingMarkupParser59.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel62 = annotatingMarkupParser59.makeWikiModel("title");
        annotatingMarkupParser30.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList46, (java.lang.Appendable) countingAppendable57, (info.bliki.wiki.model.IWikiModel) wikiModel62);
        annotatingMarkupParser13.nodesToText(annotationList18, (java.lang.Appendable) countingAppendable29, (info.bliki.wiki.model.IWikiModel) wikiModel62);
        int int65 = countingAppendable29.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable66 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable29);
        countingAppendable29.currentPosition = (byte) 10;
        countingAppendable29.currentPosition = 0;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable74 = countingAppendable29.append((java.lang.CharSequence) "\"title\"\n\n", 35, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(wikiModel12);
        org.junit.Assert.assertNotNull(annotationList14);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(annotationList17);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(annotationList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNotNull(annotationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(annotationList51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(annotationList60);
        org.junit.Assert.assertNotNull(wikiModel62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
    }

    @Test
    public void test4481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4481");
        org.apache.hadoop.fs.Path path1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.apache.pig.LoadFunc.getAbsolutePath("\"\"\" http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 \"\"\"", path1);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"\"\" http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 \"\"\" curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4482");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://.wikipedia.org/wiki/hi%21", job4);
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = uriStringLiteralNTriplesLoader2.getSchema("\"title\"\n", job7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        java.lang.String[] strArray11 = uriStringLiteralNTriplesLoader2.getPartitionKeys("http://.wikipedia.org/wiki/hi%21", job10);
        org.apache.hadoop.mapreduce.Job job13 = null;
        org.apache.pig.ResourceSchema resourceSchema14 = uriStringLiteralNTriplesLoader2.getSchema("\"opennlp / en - sent . bin\"", job13);
        org.apache.hadoop.mapreduce.Job job16 = null;
        org.apache.pig.ResourceSchema resourceSchema17 = uriStringLiteralNTriplesLoader2.getSchema("http://.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521\n", job16);
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(resourceSchema8);
        org.junit.Assert.assertNull(strArray11);
        org.junit.Assert.assertNotNull(resourceSchema14);
        org.junit.Assert.assertNotNull(resourceSchema17);
    }

    @Test
    public void test4483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4483");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("http://titlehref.wikipedia.org/wiki/http%3A%2F%2F%22http%3A%2F%2Fhttp%3A%2F%2F%22%22title%22%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521%22.wikipedia.org%2Fwiki%2Fhttp_%253A_%252F%252F_hi_%2521_._wikipedia_._org_%252F_wiki_%252F_opennlp___%2525_2_F___en___-___sent___.___bin", "http://http://\"http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21\".wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522.wikipedia.org/wiki/hi_%21%0A", "http://\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\".wikipedia.org/wiki/href");
    }

    @Test
    public void test4484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4484");
        java.net.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader wikipediaRecordReader3 = new pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader(uRL0, 1L, (long) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4485");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21\n");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        concatTextBag1.setPigLogger(pigLogger2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = concatTextBag1.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = concatTextBag1.getPigLogger();
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertNull(pigLogger5);
    }

    @Test
    public void test4486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4486");
        org.apache.hadoop.mapreduce.Job job1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.StoreFunc.cleanupOnFailureImpl("\"http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21\"", job1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Relative path in absolute URI: \"http :%20/%20http%20:%20/%20.%20wikipedia%20.%20org%20/%20wiki%20/%20hi%20%25%2021%20.%20wikipedia%20.%20org%20/%20wiki%20/%20hi%20%25%2021%22");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4487");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        java.lang.Enum enum4 = null;
        checkAbstract0.warn("hi !", enum4);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = null;
        checkAbstract0.setReporter(pigProgressable6);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = null;
        checkAbstract0.setPigLogger(pigLogger8);
        checkAbstract0.finish();
        org.junit.Assert.assertNotNull(schema2);
    }

    @Test
    public void test4488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4488");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21");
    }

    @Test
    public void test4489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4489");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser14.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList16 = annotatingMarkupParser14.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel18 = annotatingMarkupParser14.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel20 = annotatingMarkupParser14.makeWikiModel("hi!\n");
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser14.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser22 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser22.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList24 = annotatingMarkupParser22.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList25 = annotatingMarkupParser22.getParagraphAnnotations();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser22.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList27 = annotatingMarkupParser22.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser28 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList29 = annotatingMarkupParser28.getHeaderAnnotations();
        java.util.List<java.lang.String> strList30 = annotatingMarkupParser28.getParagraphs();
        java.lang.Appendable appendable31 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable32 = annotatingMarkupParser28.new CountingAppendable(appendable31);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable33 = annotatingMarkupParser22.new CountingAppendable((java.lang.Appendable) countingAppendable32);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser34 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList35 = annotatingMarkupParser34.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList36 = annotatingMarkupParser34.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel38 = annotatingMarkupParser34.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel40 = annotatingMarkupParser34.makeWikiModel("hi!\n");
        annotatingMarkupParser0.nodesToText(annotationList21, (java.lang.Appendable) countingAppendable33, (info.bliki.wiki.model.IWikiModel) wikiModel40);
        java.lang.String str43 = annotatingMarkupParser0.parse("hi!");
        info.bliki.wiki.model.WikiModel wikiModel45 = annotatingMarkupParser0.makeWikiModel("");
        info.bliki.wiki.model.WikiModel wikiModel47 = annotatingMarkupParser0.makeWikiModel("http://hi!\n.wikipedia.org/wiki/%22_title_%22");
        java.util.List<java.lang.String> strList48 = annotatingMarkupParser0.getHeaders();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser50 = new pignlproc.markup.AnnotatingMarkupParser("hi!");
        java.util.List<pignlproc.markup.Annotation> annotationList51 = annotatingMarkupParser50.getWikiLinkAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser52 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList53 = annotatingMarkupParser52.getHeaders();
        java.util.List<java.lang.String> strList54 = annotatingMarkupParser52.getHeaders();
        java.util.List<java.lang.String> strList55 = annotatingMarkupParser52.getHeaders();
        java.util.List<java.lang.String> strList56 = annotatingMarkupParser52.getHeaders();
        java.util.List<java.lang.String> strList57 = annotatingMarkupParser52.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList58 = null;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser59 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList60 = annotatingMarkupParser59.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList61 = annotatingMarkupParser59.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList62 = annotatingMarkupParser59.getParagraphAnnotations();
        java.util.List<java.lang.String> strList63 = annotatingMarkupParser59.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList64 = annotatingMarkupParser59.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser65 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList66 = annotatingMarkupParser65.getHeaderAnnotations();
        java.util.List<java.lang.String> strList67 = annotatingMarkupParser65.getParagraphs();
        java.lang.Appendable appendable68 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable69 = annotatingMarkupParser65.new CountingAppendable(appendable68);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable70 = annotatingMarkupParser59.new CountingAppendable((java.lang.Appendable) countingAppendable69);
        countingAppendable69.currentPosition = 35;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser73 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList74 = annotatingMarkupParser73.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel76 = annotatingMarkupParser73.makeWikiModel("title");
        java.util.List<pignlproc.markup.Annotation> annotationList77 = annotatingMarkupParser73.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList78 = annotatingMarkupParser73.getParagraphAnnotations();
        boolean boolean79 = annotatingMarkupParser73.noLinks();
        info.bliki.wiki.model.WikiModel wikiModel81 = annotatingMarkupParser73.makeWikiModel("\" title \"");
        annotatingMarkupParser52.nodesToText(annotationList58, (java.lang.Appendable) countingAppendable69, (info.bliki.wiki.model.IWikiModel) wikiModel81);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser84 = new pignlproc.markup.AnnotatingMarkupParser("opennlp/en-sent.bin");
        java.lang.String str86 = annotatingMarkupParser84.parse("\"http://.wikipedia.org/wiki/hi%21\"\n");
        java.util.List<pignlproc.markup.Annotation> annotationList87 = annotatingMarkupParser84.getWikiLinkAnnotations();
        java.lang.String str89 = annotatingMarkupParser84.parse("\"\"\"\"\"\"\"http://.wikipedia.org/wiki/hi%21\"\"\"\" \"\"\"\n");
        info.bliki.wiki.model.WikiModel wikiModel91 = annotatingMarkupParser84.makeWikiModel("hi!\n\n");
        annotatingMarkupParser0.nodesToText(annotationList51, (java.lang.Appendable) countingAppendable69, (info.bliki.wiki.model.IWikiModel) wikiModel91);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable96 = countingAppendable69.append((java.lang.CharSequence) "\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/%22title%22href\"", 10, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(annotationList16);
        org.junit.Assert.assertNotNull(wikiModel18);
        org.junit.Assert.assertNotNull(wikiModel20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(annotationList24);
        org.junit.Assert.assertNotNull(annotationList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList27);
        org.junit.Assert.assertNotNull(annotationList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(annotationList36);
        org.junit.Assert.assertNotNull(wikiModel38);
        org.junit.Assert.assertNotNull(wikiModel40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!\n" + "'", str43, "hi!\n");
        org.junit.Assert.assertNotNull(wikiModel45);
        org.junit.Assert.assertNotNull(wikiModel47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(annotationList51);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNotNull(annotationList61);
        org.junit.Assert.assertNotNull(annotationList62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNotNull(annotationList64);
        org.junit.Assert.assertNotNull(annotationList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNotNull(annotationList74);
        org.junit.Assert.assertNotNull(wikiModel76);
        org.junit.Assert.assertNotNull(annotationList77);
        org.junit.Assert.assertNotNull(annotationList78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wikiModel81);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "\"http://.wikipedia.org/wiki/hi%21\"\n\n" + "'", str86, "\"http://.wikipedia.org/wiki/hi%21\"\n\n");
        org.junit.Assert.assertNotNull(annotationList87);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "\"\"\"\"\"\"\"http://.wikipedia.org/wiki/hi%21\"\"\"\" \"\"\"\n\n" + "'", str89, "\"\"\"\"\"\"\"http://.wikipedia.org/wiki/hi%21\"\"\"\" \"\"\"\n\n");
        org.junit.Assert.assertNotNull(wikiModel91);
    }

    @Test
    public void test4490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4490");
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract("\"\"\"\"\"\"\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/%22title%22href\"\"\"\"\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"\"\"\"\"\"\"\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/%22title%22href\"\"\"\"\"\"\"\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test4491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4491");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("http://\"http://.wikipedia.org/wiki/hi%21\"\n\n.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%0A");
    }

    @Test
    public void test4492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4492");
        java.lang.String[] strArray1 = org.apache.pig.LoadFunc.getPathStrings("http://.wikipedia.org/wiki/http%3A%2F%2F%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A%0A.wikipedia.org%2Fwiki%2F%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test4493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4493");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = sentencesWithLink0.getPigLogger();
        java.lang.Enum enum3 = null;
        sentencesWithLink0.warn("opennlp / en - sent . bin", enum3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        sentencesWithLink0.setReporter(pigProgressable5);
        java.lang.reflect.Type type7 = sentencesWithLink0.getReturnType();
        java.lang.reflect.Type type8 = sentencesWithLink0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger9 = sentencesWithLink0.getPigLogger();
        boolean boolean10 = sentencesWithLink0.isAsynchronous();
        org.junit.Assert.assertNull(pigLogger1);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNull(pigLogger9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test4494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4494");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag1 = new pignlproc.evaluation.AggregateTextBag(0);
        org.apache.commons.logging.Log log2 = aggregateTextBag1.getLogger();
        org.apache.pig.data.Tuple tuple3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = aggregateTextBag1.exec(tuple3);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in AggregateTextBag");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(log2);
    }

    @Test
    public void test4495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4495");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href\n");
        java.lang.String str3 = annotatingMarkupParser1.parse("opennlp / en - sent . bin");
        java.lang.String str5 = annotatingMarkupParser1.parse("http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "opennlp / en - sent . bin\n" + "'", str3, "opennlp / en - sent . bin\n");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin\n" + "'", str5, "http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin\n");
    }

    @Test
    public void test4496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4496");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser0.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser3 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList4 = annotatingMarkupParser3.getHeaderAnnotations();
        java.util.List<java.lang.String> strList5 = annotatingMarkupParser3.getParagraphs();
        java.lang.Appendable appendable6 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable7 = annotatingMarkupParser3.new CountingAppendable(appendable6);
        int int8 = countingAppendable7.currentPosition;
        countingAppendable7.currentPosition = 100;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable11 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable7);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser12 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser12.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList14 = annotatingMarkupParser12.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList15 = annotatingMarkupParser12.getParagraphAnnotations();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser12.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList17 = annotatingMarkupParser12.getParagraphAnnotations();
        java.util.List<java.lang.String> strList18 = annotatingMarkupParser12.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList19 = annotatingMarkupParser12.getWikiLinkAnnotations();
        pignlproc.evaluation.AggregateTextBag aggregateTextBag21 = new pignlproc.evaluation.AggregateTextBag((int) (short) 0);
        aggregateTextBag21.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable23 = null;
        aggregateTextBag21.setReporter(pigProgressable23);
        org.apache.commons.logging.Log log25 = aggregateTextBag21.getLogger();
        pignlproc.evaluation.CheckAbstract checkAbstract26 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = checkAbstract26.outputSchema(schema27);
        org.apache.pig.data.Tuple tuple29 = null;
        java.lang.Boolean boolean30 = checkAbstract26.exec(tuple29);
        java.lang.Enum enum32 = null;
        checkAbstract26.warn("href", enum32);
        checkAbstract26.finish();
        pignlproc.evaluation.SafeTsvText safeTsvText35 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger36 = null;
        safeTsvText35.setPigLogger(pigLogger36);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText38 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable39 = mergeAsOpenNLPAnnotatedText38.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract40 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = checkAbstract40.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = mergeAsOpenNLPAnnotatedText38.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = safeTsvText35.outputSchema(schema43);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText45 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray47 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList48 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList48, spanArray47);
        java.lang.String str50 = mergeAsOpenNLPAnnotatedText45.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList48);
        pignlproc.evaluation.ConcatTextBag concatTextBag52 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract53 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum55 = null;
        checkAbstract53.warn("http://.wikipedia.org/wiki/hi%21", enum55);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger57 = null;
        checkAbstract53.setPigLogger(pigLogger57);
        checkAbstract53.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText60 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger61 = null;
        safeTsvText60.setPigLogger(pigLogger61);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText63 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable64 = mergeAsOpenNLPAnnotatedText63.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract65 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = checkAbstract65.outputSchema(schema66);
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = mergeAsOpenNLPAnnotatedText63.outputSchema(schema66);
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = safeTsvText60.outputSchema(schema68);
        org.apache.pig.impl.logicalLayer.schema.Schema schema70 = checkAbstract53.outputSchema(schema69);
        org.apache.pig.impl.logicalLayer.schema.Schema schema71 = concatTextBag52.outputSchema(schema70);
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = mergeAsOpenNLPAnnotatedText45.outputSchema(schema70);
        org.apache.pig.impl.logicalLayer.schema.Schema schema73 = safeTsvText35.outputSchema(schema70);
        org.apache.pig.impl.logicalLayer.schema.Schema schema74 = checkAbstract26.outputSchema(schema70);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable75 = checkAbstract26.getReporter();
        java.util.List<opennlp.tools.util.Span> spanList76 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) log25, (java.lang.Object) pigProgressable75);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<opennlp.tools.util.Span> spanList77 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) annotatingMarkupParser0, (java.lang.Object) annotationList19, (java.lang.Object) log25);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: pignlproc.markup.AnnotatingMarkupParser cannot be cast to java.lang.Integer");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertNotNull(annotationList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(annotationList14);
        org.junit.Assert.assertNotNull(annotationList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(annotationList17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(annotationList19);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertEquals("'" + boolean30 + "' != '" + false + "'", boolean30, false);
        org.junit.Assert.assertNull(pigProgressable39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(spanArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "href" + "'", str50, "href");
        org.junit.Assert.assertNull(pigProgressable64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(pigProgressable75);
        org.junit.Assert.assertNotNull(spanList76);
    }

    @Test
    public void test4497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4497");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.RecordReader recordReader2 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit3 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader2, pigSplit3);
        org.apache.hadoop.mapreduce.InputFormat inputFormat5 = parsingWikipediaLoader1.getInputFormat();
        org.apache.hadoop.mapreduce.InputFormat inputFormat6 = parsingWikipediaLoader1.getInputFormat();
        org.apache.hadoop.mapreduce.InputFormat inputFormat7 = parsingWikipediaLoader1.getInputFormat();
        org.junit.Assert.assertNotNull(inputFormat5);
        org.junit.Assert.assertNotNull(inputFormat6);
        org.junit.Assert.assertNotNull(inputFormat7);
    }

    @Test
    public void test4498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4498");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("\"hi! \"");
        org.apache.commons.logging.Log log2 = noLoopInPath1.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = null;
        noLoopInPath1.setReporter(pigProgressable3);
        org.apache.pig.data.Tuple tuple5 = null;
        java.lang.Boolean boolean6 = noLoopInPath1.exec(tuple5);
        java.lang.reflect.Type type7 = noLoopInPath1.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = null;
        noLoopInPath1.setReporter(pigProgressable8);
        org.apache.commons.logging.Log log10 = noLoopInPath1.getLogger();
        org.junit.Assert.assertNotNull(log2);
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + true + "'", boolean6, true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(log10);
    }

    @Test
    public void test4499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4499");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = sentencesWithLink0.getPigLogger();
        java.lang.Enum enum3 = null;
        sentencesWithLink0.warn("opennlp / en - sent . bin", enum3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        sentencesWithLink0.setReporter(pigProgressable5);
        java.lang.reflect.Type type7 = sentencesWithLink0.getReturnType();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList8 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.progress();
        boolean boolean10 = sentencesWithLink0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = sentencesWithLink0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger12 = null;
        sentencesWithLink0.setPigLogger(pigLogger12);
        org.apache.commons.logging.Log log14 = sentencesWithLink0.getLogger();
        org.junit.Assert.assertNull(pigLogger1);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(funcSpecList8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(pigLogger11);
        org.junit.Assert.assertNotNull(log14);
    }

    @Test
    public void test4500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4500");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("title", job3);
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader1.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = parsingWikipediaLoader1.getSchema("opennlp/en-sent.bin", job7);
        org.apache.hadoop.mapreduce.RecordReader recordReader9 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit10 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader9, pigSplit10);
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(loadCaster5);
        org.junit.Assert.assertNotNull(resourceSchema8);
    }
}

