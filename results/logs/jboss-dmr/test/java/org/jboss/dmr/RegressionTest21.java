package org.jboss.dmr;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest21 {

    public static boolean debug = false;

    @Test
    public void test10501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10501");
        org.jboss.dmr.BooleanModelValue booleanModelValue1 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long2 = booleanModelValue1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = booleanModelValue1.asExpression();
        boolean boolean5 = valueExpression3.equals((java.lang.Object) 'p');
        org.jboss.dmr.ExpressionValue expressionValue6 = new org.jboss.dmr.ExpressionValue(valueExpression3);
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode(valueExpression3);
        org.jboss.dmr.BooleanModelValue booleanModelValue9 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double10 = booleanModelValue9.asDouble();
        org.jboss.dmr.ModelValue modelValue11 = booleanModelValue9.copy();
        java.math.BigInteger bigInteger12 = booleanModelValue9.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue13 = new org.jboss.dmr.BigIntegerModelValue(bigInteger12);
        java.lang.String str14 = bigIntegerModelValue13.asString();
        java.math.BigInteger bigInteger15 = bigIntegerModelValue13.asBigInteger();
        org.jboss.dmr.ModelNode modelNode16 = new org.jboss.dmr.ModelNode(bigInteger15);
        java.lang.String str18 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) bigInteger15, (int) (short) 1);
        org.jboss.dmr.ModelNode modelNode19 = modelNode7.set("{ \"35\" : 0.0 }", bigInteger15);
        java.lang.String str20 = modelNode7.asString();
        org.junit.Assert.assertNotNull(booleanModelValue1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(booleanModelValue9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue11);
        org.junit.Assert.assertNotNull(bigInteger12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1" + "'", str14, "1");
        org.junit.Assert.assertNotNull(bigInteger15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "rO0ABXNyABRqYXZhLm1hdGguQmlnSW50ZWdlcoz8nx+pO/sdAwAGSQAIYml0Q291bnRJAAliaXRM\nZW5ndGhJABNmaXJzdE5vbnplcm9CeXRlTnVtSQAMbG93ZXN0U2V0Qml0SQAGc2lnbnVtWwAJbWFn\nbml0dWRldAACW0J4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHD///////////////7/\n///+AAAAAXVyAAJbQqzzF/gGCFTgAgAAeHAAAAABAXg=" + "'", str18, "rO0ABXNyABRqYXZhLm1hdGguQmlnSW50ZWdlcoz8nx+pO/sdAwAGSQAIYml0Q291bnRJAAliaXRM\nZW5ndGhJABNmaXJzdE5vbnplcm9CeXRlTnVtSQAMbG93ZXN0U2V0Qml0SQAGc2lnbnVtWwAJbWFn\nbml0dWRldAACW0J4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHD///////////////7/\n///+AAAAAXVyAAJbQqzzF/gGCFTgAgAAeHAAAAABAXg=");
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(\"{ \\\"35\\\" : 0.0 }\" => big integer 1)" + "'", str20, "(\"{ \\\"35\\\" : 0.0 }\" => big integer 1)");
    }

    @Test
    public void test10502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10502");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue(10);
        double double3 = intModelValue1.asDouble((double) 100);
        boolean boolean5 = intModelValue1.asBoolean(false);
        org.jboss.dmr.IntModelValue intModelValue7 = new org.jboss.dmr.IntModelValue((int) ' ');
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = modelNode11.asList();
        org.jboss.dmr.ListModelValue listModelValue13 = new org.jboss.dmr.ListModelValue(modelNodeList12);
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue13);
        org.jboss.dmr.ModelValue modelValue15 = listModelValue13.resolve();
        int int17 = listModelValue13.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList18 = listModelValue13.asPropertyList();
        boolean boolean19 = intModelValue7.equals((java.lang.Object) listModelValue13);
        double double20 = intModelValue7.asDouble();
        double double21 = intModelValue7.asDouble();
        byte[] byteArray22 = intModelValue7.asBytes();
        boolean boolean23 = intModelValue1.equals(intModelValue7);
        java.math.BigDecimal bigDecimal24 = intModelValue1.asBigDecimal();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 10.0d + "'", double3 == 10.0d);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNodeList12);
        org.junit.Assert.assertNotNull(modelValue15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(propertyList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 32.0d + "'", double20 == 32.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 32.0d + "'", double21 == 32.0d);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0, 0, 0, 32]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(bigDecimal24);
    }

    @Test
    public void test10503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10503");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3R3AANW9yZy5qYm9z\ncy5kbXIuc3RyZWFtLk1vZGVsRXhjZXB0aW9uOiBbKCJoaSEiID0+IDAuMCldcAADaGkhRAAAAAAA\nAAAAeA==");
        byte[] byteArray2 = stringModelValue1.asBytes();
        boolean boolean4 = stringModelValue1.equals((java.lang.Object) "H4sIAAAAAAAAAFvzloG1uIhBPL8oXS8rKb+4WC8lt0jPNz8lNccPSMjoLnSZu7jPnoeBoaKg3KeA\nwaWaSwEIlKI1YpQ8TIo9HeHA1xEJ2MYoKdjaKSRlpitk5pWkpqcWKRgbacYqKVgpGHLVFjAwRDFU\nAABKHkXaewAAAA==");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[114, 79, 48, 65, 66, 88, 78, 121, 65, 66, 100, 118, 99, 109, 99, 117, 97, 109, 74, 118, 99, 51, 77, 117, 90, 71, 49, 121, 76, 107, 49, 118, 90, 71, 86, 115, 84, 109, 57, 107, 90, 82, 119, 116, 111, 85, 83, 100, 111, 52, 52, 47, 68, 65, 65, 65, 101, 72, 66, 51, 82, 51, 65, 65, 78, 87, 57, 121, 90, 121, 53, 113, 89, 109, 57, 122, 10, 99, 121, 53, 107, 98, 88, 73, 117, 99, 51, 82, 121, 90, 87, 70, 116, 76, 107, 49, 118, 90, 71, 86, 115, 82, 88, 104, 106, 90, 88, 66, 48, 97, 87, 57, 117, 79, 105, 66, 98, 75, 67, 74, 111, 97, 83, 69, 105, 73, 68, 48, 43, 73, 68, 65, 117, 77, 67, 108, 100, 99, 65, 65, 68, 97, 71, 107, 104, 82, 65, 65, 65, 65, 65, 65, 65, 10, 65, 65, 65, 65, 101, 65, 61, 61]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test10504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10504");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (byte) -1);
        org.jboss.dmr.DoubleModelValue doubleModelValue3 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        int int5 = doubleModelValue3.asInt((int) 'l');
        java.math.BigDecimal bigDecimal6 = doubleModelValue3.asBigDecimal();
        boolean boolean7 = doubleModelValue1.equals(doubleModelValue3);
        byte[] byteArray8 = doubleModelValue1.asBytes();
        org.jboss.dmr.DoubleModelValue doubleModelValue10 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long11 = doubleModelValue10.asLong();
        boolean boolean13 = doubleModelValue10.asBoolean(true);
        long long15 = doubleModelValue10.asLong((long) 3);
        boolean boolean16 = doubleModelValue1.equals(doubleModelValue10);
        boolean boolean17 = doubleModelValue1.asBoolean();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-65, -16, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10L + "'", long11 == 10L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10L + "'", long15 == 10L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test10505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10505");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        java.lang.String str6 = modelNode3.asString("true");
        org.jboss.dmr.ModelNode modelNode8 = modelNode3.set((double) 'a');
        org.jboss.dmr.LongModelValue longModelValue10 = new org.jboss.dmr.LongModelValue(1L);
        long long12 = longModelValue10.asLong((long) (short) 0);
        java.lang.String str13 = longModelValue10.asString();
        org.jboss.dmr.ValueExpression valueExpression14 = longModelValue10.asExpression();
        int int15 = valueExpression14.resolveInt();
        org.jboss.dmr.ModelNode modelNode16 = modelNode3.set(valueExpression14);
        modelNode16.protect();
        boolean boolean19 = modelNode16.has("expression \"1\"");
        org.jboss.dmr.ModelNode modelNode21 = new org.jboss.dmr.ModelNode((int) 'a');
        org.jboss.dmr.ModelNode modelNode22 = modelNode21.setEmptyList();
        org.jboss.dmr.ObjectModelValue objectModelValue23 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode24 = objectModelValue23.asObject();
        java.util.Set<java.lang.String> strSet25 = objectModelValue23.getKeys();
        boolean boolean27 = objectModelValue23.has((int) 'a');
        boolean boolean29 = objectModelValue23.has("");
        org.jboss.dmr.ObjectModelValue objectModelValue30 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode31 = objectModelValue30.asObject();
        java.util.Set<java.lang.String> strSet32 = objectModelValue30.getKeys();
        boolean boolean34 = objectModelValue30.has((int) 'a');
        boolean boolean35 = objectModelValue23.equals(objectModelValue30);
        org.jboss.dmr.ModelNode modelNode36 = objectModelValue30.asObject();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList37 = objectModelValue30.asList();
        org.jboss.dmr.ModelNode modelNode38 = modelNode21.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList37);
        org.jboss.dmr.ModelNode modelNode40 = modelNode38.set(false);
        org.jboss.dmr.ModelNode modelNode41 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode44 = modelNode41.set("hi!", 0.0d);
        java.lang.String str45 = modelNode41.toString();
        org.jboss.dmr.ModelNode modelNode46 = modelNode41.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode48 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode51 = modelNode48.set("hi!", 0.0d);
        org.jboss.dmr.Property property52 = new org.jboss.dmr.Property("", modelNode51);
        org.jboss.dmr.ModelNode modelNode53 = modelNode41.set(property52);
        org.jboss.dmr.ModelType modelType54 = org.jboss.dmr.ModelType.BOOLEAN;
        org.jboss.dmr.ModelNode modelNode55 = modelNode53.set(modelType54);
        org.jboss.dmr.ModelNode modelNode57 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode60 = modelNode57.set("hi!", 0.0d);
        org.jboss.dmr.Property property61 = new org.jboss.dmr.Property("", modelNode60);
        org.jboss.dmr.ModelNode modelNode62 = property61.getValue();
        org.jboss.dmr.ModelNode modelNode64 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode67 = modelNode64.set("hi!", 0.0d);
        org.jboss.dmr.Property property68 = new org.jboss.dmr.Property("", modelNode67);
        java.lang.String[] strArray69 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode70 = modelNode67.get(strArray69);
        boolean boolean71 = modelNode62.has(strArray69);
        boolean boolean72 = modelNode55.has(strArray69);
        boolean boolean73 = modelNode38.has(strArray69);
        boolean boolean74 = modelNode16.hasDefined(strArray69);
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "(\"hi!\" => 0.0)" + "'", str6, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1" + "'", str13, "1");
        org.junit.Assert.assertNotNull(valueExpression14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(modelNode22);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(modelNode36);
        org.junit.Assert.assertNotNull(modelNodeList37);
        org.junit.Assert.assertNotNull(modelNode38);
        org.junit.Assert.assertNotNull(modelNode40);
        org.junit.Assert.assertNotNull(modelNode44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(\"hi!\" => 0.0)" + "'", str45, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode46);
        org.junit.Assert.assertNotNull(modelNode51);
        org.junit.Assert.assertNotNull(modelNode53);
        org.junit.Assert.assertTrue("'" + modelType54 + "' != '" + org.jboss.dmr.ModelType.BOOLEAN + "'", modelType54.equals(org.jboss.dmr.ModelType.BOOLEAN));
        org.junit.Assert.assertNotNull(modelNode55);
        org.junit.Assert.assertNotNull(modelNode60);
        org.junit.Assert.assertNotNull(modelNode62);
        org.junit.Assert.assertNotNull(modelNode67);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(modelNode70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test10506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10506");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) 100.0f);
        org.jboss.dmr.ValueExpression valueExpression2 = doubleModelValue1.asExpression();
        org.junit.Assert.assertNotNull(valueExpression2);
    }

    @Test
    public void test10507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10507");
        org.jboss.dmr.BooleanModelValue booleanModelValue1 = org.jboss.dmr.BooleanModelValue.valueOf(false);
        long long3 = booleanModelValue1.asLong((long) '#');
        byte[] byteArray4 = booleanModelValue1.asBytes();
        boolean boolean6 = org.jboss.dmr.Base64.encodeToFile(byteArray4, "[{}]");
        java.lang.String str9 = org.jboss.dmr.Base64.encodeBytes(byteArray4, 0, (int) (byte) 1);
        org.junit.Assert.assertNotNull(booleanModelValue1);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AA==" + "'", str9, "AA==");
    }

    @Test
    public void test10508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10508");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.FALSE;
        long long1 = booleanModelValue0.asLong();
        byte[] byteArray2 = booleanModelValue0.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue3 = new org.jboss.dmr.BytesModelValue(byteArray2);
        java.lang.String str4 = bytesModelValue3.asString();
        int int5 = bytesModelValue3.asInt();
        org.jboss.dmr.LongModelValue longModelValue7 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str8 = longModelValue7.asString();
        byte[] byteArray9 = longModelValue7.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue10 = new org.jboss.dmr.BytesModelValue(byteArray9);
        java.lang.String str11 = bytesModelValue10.asString();
        int int12 = bytesModelValue10.asInt();
        int int14 = bytesModelValue10.asInt((int) 'a');
        java.lang.String str15 = bytesModelValue10.asString();
        double double17 = bytesModelValue10.asDouble((double) (-1));
        boolean boolean18 = bytesModelValue3.equals(bytesModelValue10);
        java.lang.String str19 = bytesModelValue3.asString();
        long long21 = bytesModelValue3.asLong((long) (byte) -1);
        java.math.BigInteger bigInteger22 = bytesModelValue3.asBigInteger();
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "bytes { 0x00 }" + "'", str4, "bytes { 0x00 }");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1" + "'", str8, "1");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str11, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str15, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 4.9E-324d + "'", double17 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "bytes { 0x00 }" + "'", str19, "bytes { 0x00 }");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(bigInteger22);
    }

    @Test
    public void test10509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10509");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.PROPERTY;
        char char1 = modelType0.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue2 = org.jboss.dmr.TypeModelValue.of(modelType0);
        org.jboss.dmr.ModelType modelType3 = org.jboss.dmr.ModelType.PROPERTY;
        char char4 = modelType3.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue5 = org.jboss.dmr.TypeModelValue.of(modelType3);
        boolean boolean6 = typeModelValue2.equals(typeModelValue5);
        java.lang.String str7 = typeModelValue5.asString();
        org.jboss.dmr.LongModelValue longModelValue9 = new org.jboss.dmr.LongModelValue((long) '4');
        java.math.BigDecimal bigDecimal10 = longModelValue9.asBigDecimal();
        int int11 = longModelValue9.asInt();
        org.jboss.dmr.ValueExpression valueExpression12 = longModelValue9.asExpression();
        double double13 = longModelValue9.asDouble();
        org.jboss.dmr.LongModelValue longModelValue15 = new org.jboss.dmr.LongModelValue(1L);
        long long17 = longModelValue15.asLong((long) (short) 0);
        java.lang.String str18 = longModelValue15.asString();
        byte[] byteArray19 = longModelValue15.asBytes();
        org.jboss.dmr.ModelType modelType20 = longModelValue15.getType();
        long long22 = longModelValue15.asLong(1L);
        boolean boolean23 = longModelValue9.equals(longModelValue15);
        java.math.BigInteger bigInteger24 = longModelValue9.asBigInteger();
        boolean boolean25 = typeModelValue5.equals((java.lang.Object) longModelValue9);
        org.jboss.dmr.ModelType modelType26 = typeModelValue5.asType();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode28 = typeModelValue5.getChild(0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType0.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char1 + "' != '" + 'p' + "'", char1 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue2);
        org.junit.Assert.assertTrue("'" + modelType3 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType3.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char4 + "' != '" + 'p' + "'", char4 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PROPERTY" + "'", str7, "PROPERTY");
        org.junit.Assert.assertNotNull(bigDecimal10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNotNull(valueExpression12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1" + "'", str18, "1");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + modelType20 + "' != '" + org.jboss.dmr.ModelType.LONG + "'", modelType20.equals(org.jboss.dmr.ModelType.LONG));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(bigInteger24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + modelType26 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType26.equals(org.jboss.dmr.ModelType.PROPERTY));
    }

    @Test
    public void test10510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10510");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str2 = longModelValue1.asString();
        org.jboss.dmr.ValueExpression valueExpression3 = longModelValue1.asExpression();
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        boolean boolean8 = modelNode6.hasDefined("[(\"hi!\" => 0.0)]");
        org.jboss.dmr.PropertyModelValue propertyModelValue9 = new org.jboss.dmr.PropertyModelValue("TYPE_MODEL_VALUE", modelNode6);
        org.jboss.dmr.ModelNode modelNode11 = propertyModelValue9.getChild(0);
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver12 = new org.jboss.dmr.ValueExpressionResolver();
        boolean boolean13 = propertyModelValue9.equals((java.lang.Object) valueExpressionResolver12);
        java.math.BigInteger bigInteger14 = valueExpression3.resolveBigInteger(valueExpressionResolver12);
        org.jboss.dmr.ValueExpression valueExpression15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = valueExpressionResolver12.resolve(valueExpression15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1" + "'", str2, "1");
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(bigInteger14);
    }

    @Test
    public void test10511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10511");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        java.lang.String str6 = listModelValue5.asString();
        long long7 = listModelValue5.asLong();
        int int9 = listModelValue5.asInt((int) '4');
        int int11 = listModelValue5.asInt((int) (short) -1);
        org.jboss.dmr.ModelNode modelNode12 = listModelValue5.asObject();
        boolean boolean14 = listModelValue5.asBoolean(true);
        int int16 = listModelValue5.asInt((int) (short) 1);
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str6, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
    }

    @Test
    public void test10512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10512");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        java.lang.String str5 = modelNode1.toString();
        org.jboss.dmr.ModelNode modelNode6 = modelNode1.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        org.jboss.dmr.Property property12 = new org.jboss.dmr.Property("", modelNode11);
        org.jboss.dmr.ModelNode modelNode13 = modelNode1.set(property12);
        org.jboss.dmr.PropertyModelValue propertyModelValue15 = new org.jboss.dmr.PropertyModelValue("EXPRESSION_VALUE", modelNode13, false);
        java.util.Set<java.lang.String> strSet16 = propertyModelValue15.getKeys();
        java.util.List<org.jboss.dmr.Property> propertyList17 = propertyModelValue15.asPropertyList();
        java.util.Set<java.lang.String> strSet18 = propertyModelValue15.getKeys();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList19 = propertyModelValue15.asList();
        org.jboss.dmr.ListModelValue listModelValue20 = new org.jboss.dmr.ListModelValue(modelNodeList19);
        org.jboss.dmr.ListModelValue listModelValue21 = new org.jboss.dmr.ListModelValue(modelNodeList19);
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(\"hi!\" => 0.0)" + "'", str5, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(propertyList17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(modelNodeList19);
    }

    @Test
    public void test10513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10513");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        java.io.InputStream inputStream16 = null;
        org.jboss.dmr.Base64.InputStream inputStream18 = new org.jboss.dmr.Base64.InputStream(inputStream16, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream19 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream18);
        org.jboss.dmr.Base64.InputStream inputStream20 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream18);
        org.jboss.dmr.stream.ModelReader modelReader21 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream18);
        boolean boolean22 = modelReader21.isBytes();
        boolean boolean23 = modelReader21.isBoolean();
        boolean boolean24 = modelReader21.isBytes();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertNotNull(modelReader21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test10514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10514");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isBigInteger();
        boolean boolean17 = modelReader15.isLong();
        boolean boolean18 = modelReader15.isBigDecimal();
        boolean boolean19 = modelReader15.isUndefined();
        boolean boolean20 = modelReader15.isUndefined();
        boolean boolean21 = modelReader15.isListStart();
        boolean boolean22 = modelReader15.isObjectStart();
        // The following exception was thrown during execution in test generation
        try {
            java.math.BigInteger bigInteger23 = modelReader15.getBigInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Current event isn't big integer");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test10515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10515");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        boolean boolean8 = bigDecimalModelValue7.asBoolean();
        long long9 = bigDecimalModelValue7.asLong();
        java.lang.String str10 = bigDecimalModelValue7.asString();
        java.math.BigInteger bigInteger11 = bigDecimalModelValue7.asBigInteger();
        int int13 = bigDecimalModelValue7.asInt(0);
        int int14 = bigDecimalModelValue7.asInt();
        org.jboss.dmr.ModelType modelType15 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode16 = new org.jboss.dmr.ModelNode(modelType15);
        org.jboss.dmr.TypeModelValue typeModelValue17 = org.jboss.dmr.TypeModelValue.of(modelType15);
        org.jboss.dmr.LongModelValue longModelValue19 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str20 = longModelValue19.asString();
        byte[] byteArray21 = longModelValue19.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue22 = new org.jboss.dmr.BytesModelValue(byteArray21);
        double double23 = bytesModelValue22.asDouble();
        org.jboss.dmr.ModelNode modelNode25 = new org.jboss.dmr.ModelNode((double) 100);
        org.jboss.dmr.ModelNode modelNode27 = modelNode25.set((int) '#');
        java.lang.Boolean boolean28 = modelNode25.asBooleanOrNull();
        java.lang.String str30 = modelNode25.asString("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        boolean boolean31 = bytesModelValue22.equals((java.lang.Object) modelNode25);
        int int33 = bytesModelValue22.asInt(52);
        double double34 = bytesModelValue22.asDouble();
        org.jboss.dmr.ModelNode modelNode35 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode36 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode39 = modelNode36.set("hi!", 0.0d);
        java.lang.String str40 = modelNode36.toString();
        org.jboss.dmr.ModelNode modelNode41 = modelNode36.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode43 = modelNode36.set(100);
        org.jboss.dmr.ModelNode modelNode44 = modelNode35.add(modelNode36);
        int int46 = modelNode36.asInt(2);
        org.jboss.dmr.ModelType modelType48 = org.jboss.dmr.ModelType.BYTES;
        org.jboss.dmr.ModelNode modelNode49 = modelNode36.set("[(\"hi!\" => 0.0)]", modelType48);
        org.jboss.dmr.TypeModelValue typeModelValue50 = org.jboss.dmr.TypeModelValue.of(modelType48);
        boolean boolean51 = bytesModelValue22.equals((java.lang.Object) modelType48);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory53 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream54 = null;
        org.jboss.dmr.Base64.InputStream inputStream56 = new org.jboss.dmr.Base64.InputStream(inputStream54, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream57 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream56);
        org.jboss.dmr.stream.ModelReader modelReader58 = modelStreamFactory53.newModelReader((java.io.InputStream) inputStream57);
        java.io.OutputStream outputStream59 = null;
        org.jboss.dmr.Base64.OutputStream outputStream60 = new org.jboss.dmr.Base64.OutputStream(outputStream59);
        org.jboss.dmr.Base64.OutputStream outputStream61 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream60);
        outputStream60.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter64 = modelStreamFactory53.newModelWriter((java.io.OutputStream) outputStream60);
        org.jboss.dmr.stream.ModelWriter modelWriter65 = modelWriter64.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter67 = modelWriter64.writeInt((int) '4');
        org.jboss.dmr.ModelNode modelNode68 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode71 = modelNode68.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList72 = modelNode71.asList();
        org.jboss.dmr.ListModelValue listModelValue73 = new org.jboss.dmr.ListModelValue(modelNodeList72);
        org.jboss.dmr.ModelNode modelNode74 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue73);
        org.jboss.dmr.ModelValue modelValue75 = listModelValue73.resolve();
        int int77 = listModelValue73.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList78 = listModelValue73.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList79 = listModelValue73.asPropertyList();
        java.lang.String str80 = listModelValue73.asString();
        int int81 = listModelValue73.asInt();
        java.lang.String str82 = listModelValue73.asString();
        org.jboss.dmr.ModelType modelType83 = org.jboss.dmr.ModelType.DOUBLE;
        org.jboss.dmr.ModelNode modelNode84 = new org.jboss.dmr.ModelNode(modelType83);
        boolean boolean85 = listModelValue73.equals((java.lang.Object) modelType83);
        org.jboss.dmr.TypeModelValue typeModelValue86 = org.jboss.dmr.TypeModelValue.of(modelType83);
        org.jboss.dmr.TypeModelValue typeModelValue87 = org.jboss.dmr.TypeModelValue.of(modelType83);
        org.jboss.dmr.stream.ModelWriter modelWriter88 = modelWriter64.writeType(modelType83);
        bytesModelValue22.write(modelWriter64);
        org.jboss.dmr.stream.ModelWriter modelWriter90 = modelWriter64.writePropertyStart();
        boolean boolean91 = typeModelValue17.equals((java.lang.Object) modelWriter90);
        // The following exception was thrown during execution in test generation
        try {
            bigDecimalModelValue7.write(modelWriter90);
            org.junit.Assert.fail("Expected exception of type org.jboss.dmr.stream.ModelException; message: Expecting STRING");
        } catch (org.jboss.dmr.stream.ModelException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1.0" + "'", str10, "1.0");
        org.junit.Assert.assertNotNull(bigInteger11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + modelType15 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType15.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(typeModelValue17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1" + "'", str20, "1");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.9E-324d + "'", double23 == 4.9E-324d);
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertEquals("'" + boolean28 + "' != '" + true + "'", boolean28, true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "35" + "'", str30, "35");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.9E-324d + "'", double34 == 4.9E-324d);
        org.junit.Assert.assertNotNull(modelNode39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(\"hi!\" => 0.0)" + "'", str40, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode41);
        org.junit.Assert.assertNotNull(modelNode43);
        org.junit.Assert.assertNotNull(modelNode44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + modelType48 + "' != '" + org.jboss.dmr.ModelType.BYTES + "'", modelType48.equals(org.jboss.dmr.ModelType.BYTES));
        org.junit.Assert.assertNotNull(modelNode49);
        org.junit.Assert.assertNotNull(typeModelValue50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(modelStreamFactory53);
        org.junit.Assert.assertNotNull(modelReader58);
        org.junit.Assert.assertNotNull(modelWriter64);
        org.junit.Assert.assertNotNull(modelWriter65);
        org.junit.Assert.assertNotNull(modelWriter67);
        org.junit.Assert.assertNotNull(modelNode71);
        org.junit.Assert.assertNotNull(modelNodeList72);
        org.junit.Assert.assertNotNull(modelValue75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(propertyList78);
        org.junit.Assert.assertNotNull(propertyList79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str80, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str82, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + modelType83 + "' != '" + org.jboss.dmr.ModelType.DOUBLE + "'", modelType83.equals(org.jboss.dmr.ModelType.DOUBLE));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(typeModelValue86);
        org.junit.Assert.assertNotNull(typeModelValue87);
        org.junit.Assert.assertNotNull(modelWriter88);
        org.junit.Assert.assertNotNull(modelWriter90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test10516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10516");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode("EXPRESSION_VALUE");
        org.jboss.dmr.BooleanModelValue booleanModelValue4 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger5 = booleanModelValue4.asBigInteger();
        byte[] byteArray6 = booleanModelValue4.asBytes();
        org.jboss.dmr.ModelNode modelNode7 = modelNode1.set("expression \"hi!\"", byteArray6);
        org.jboss.dmr.ModelNode modelNode10 = new org.jboss.dmr.ModelNode((long) 10);
        java.lang.String str12 = modelNode10.asString("true");
        org.jboss.dmr.ModelNode modelNode15 = modelNode10.set("expression \"hi!\"", (int) (short) -1);
        java.util.Set<java.lang.String> strSet16 = modelNode15.keys();
        modelNode15.protect();
        org.jboss.dmr.ModelNode modelNode18 = modelNode7.set("{}", modelNode15);
        org.junit.Assert.assertNotNull(booleanModelValue4);
        org.junit.Assert.assertNotNull(bigInteger5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1]");
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNotNull(modelNode15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(modelNode18);
    }

    @Test
    public void test10517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10517");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str2 = longModelValue1.asString();
        byte[] byteArray3 = longModelValue1.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue4 = new org.jboss.dmr.BytesModelValue(byteArray3);
        double double5 = bytesModelValue4.asDouble();
        java.math.BigDecimal bigDecimal6 = bytesModelValue4.asBigDecimal();
        double double8 = bytesModelValue4.asDouble((double) (-1.0f));
        double double9 = bytesModelValue4.asDouble();
        byte[] byteArray10 = bytesModelValue4.asBytes();
        long long11 = bytesModelValue4.asLong();
        org.jboss.dmr.LongModelValue longModelValue13 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str14 = longModelValue13.asString();
        byte[] byteArray15 = longModelValue13.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue16 = new org.jboss.dmr.BytesModelValue(byteArray15);
        java.lang.String str17 = bytesModelValue16.asString();
        int int18 = bytesModelValue16.asInt();
        byte[] byteArray19 = bytesModelValue16.asBytes();
        org.jboss.dmr.LongModelValue longModelValue21 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str22 = longModelValue21.asString();
        byte[] byteArray23 = longModelValue21.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue24 = new org.jboss.dmr.BytesModelValue(byteArray23);
        java.lang.String str25 = bytesModelValue24.asString();
        int int26 = bytesModelValue24.asInt();
        int int27 = bytesModelValue24.asInt();
        org.jboss.dmr.LongModelValue longModelValue29 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str30 = longModelValue29.asString();
        byte[] byteArray31 = longModelValue29.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue32 = new org.jboss.dmr.BytesModelValue(byteArray31);
        double double33 = bytesModelValue32.asDouble();
        boolean boolean34 = bytesModelValue24.equals(bytesModelValue32);
        byte[] byteArray35 = bytesModelValue32.asBytes();
        java.math.BigInteger bigInteger36 = bytesModelValue32.asBigInteger();
        boolean boolean37 = bytesModelValue16.equals(bytesModelValue32);
        byte[] byteArray38 = bytesModelValue32.asBytes();
        java.math.BigInteger bigInteger39 = bytesModelValue32.asBigInteger();
        boolean boolean40 = bytesModelValue4.equals((java.lang.Object) bytesModelValue32);
        int int41 = bytesModelValue32.asInt();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1" + "'", str2, "1");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.9E-324d + "'", double5 == 4.9E-324d);
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 4.9E-324d + "'", double8 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 4.9E-324d + "'", double9 == 4.9E-324d);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1" + "'", str14, "1");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str17, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1" + "'", str22, "1");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str25, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1" + "'", str30, "1");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.9E-324d + "'", double33 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(bigInteger36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(bigInteger39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
    }

    @Test
    public void test10518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10518");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.StringModelValue stringModelValue3 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        boolean boolean4 = stringModelValue1.equals(stringModelValue3);
        org.jboss.dmr.StringModelValue stringModelValue6 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        boolean boolean7 = stringModelValue3.equals(stringModelValue6);
        org.jboss.dmr.StringModelValue stringModelValue9 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        org.jboss.dmr.StringModelValue stringModelValue11 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        org.jboss.dmr.ValueExpression valueExpression12 = stringModelValue11.asExpression();
        boolean boolean13 = stringModelValue9.equals(stringModelValue11);
        boolean boolean14 = stringModelValue6.equals(stringModelValue11);
        byte[] byteArray15 = stringModelValue6.asBytes();
        java.lang.String str16 = stringModelValue6.asString();
        org.jboss.dmr.StringModelValue stringModelValue18 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.ValueExpression valueExpression19 = stringModelValue18.asExpression();
        java.lang.String str20 = stringModelValue18.asString();
        boolean boolean21 = stringModelValue6.equals(stringModelValue18);
        // The following exception was thrown during execution in test generation
        try {
            int int23 = stringModelValue6.asInt((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"Expression \"true\"\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(valueExpression12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 32, 34, 116, 114, 117, 101, 34]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Expression \"true\"" + "'", str16, "Expression \"true\"");
        org.junit.Assert.assertNotNull(valueExpression19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Expression \"true\"" + "'", str20, "Expression \"true\"");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test10519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10519");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str2 = longModelValue1.asString();
        byte[] byteArray3 = longModelValue1.asBytes();
        org.jboss.dmr.ModelNode modelNode5 = new org.jboss.dmr.ModelNode(false);
        int int7 = modelNode5.asInt(2);
        org.jboss.dmr.ModelNode modelNode9 = modelNode5.set(52);
        boolean boolean10 = longModelValue1.equals((java.lang.Object) modelNode5);
        org.jboss.dmr.Validation.validate(modelNode5, "H4sIAAAAAAAAAFvzloG1uIhBPL8oXS8rKb+4WC8lt0jPNz8lNccPSMjoLnSZu7jPnoeBoaKgnC2F\ngdlAz6ACAF+odLA1AAAA");
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode(false);
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int16 = modelNode15.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode18 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long19 = modelNode18.asLong();
        org.jboss.dmr.ValueExpression valueExpression20 = modelNode18.asExpression();
        java.math.BigDecimal bigDecimal21 = valueExpression20.resolveBigDecimal();
        org.jboss.dmr.ModelNode modelNode22 = modelNode15.set(valueExpression20);
        org.jboss.dmr.ModelNode modelNode24 = modelNode15.set("AQ==");
        boolean boolean25 = modelNode14.equals(modelNode24);
        boolean boolean26 = modelNode5.equals((java.lang.Object) boolean25);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1" + "'", str2, "1");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertNotNull(valueExpression20);
        org.junit.Assert.assertNotNull(bigDecimal21);
        org.junit.Assert.assertNotNull(modelNode22);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test10520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10520");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue(0);
        double double2 = intModelValue1.asDouble();
        double double4 = intModelValue1.asDouble((double) 97);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
    }

    @Test
    public void test10521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10521");
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode("EXPRESSION_VALUE");
        org.jboss.dmr.BooleanModelValue booleanModelValue5 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger6 = booleanModelValue5.asBigInteger();
        byte[] byteArray7 = booleanModelValue5.asBytes();
        org.jboss.dmr.ModelNode modelNode8 = modelNode2.set("expression \"hi!\"", byteArray7);
        org.jboss.dmr.ModelNode modelNode9 = modelNode8.clear();
        double double11 = modelNode8.asDouble((double) ' ');
        org.jboss.dmr.ObjectModelValue objectModelValue12 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode13 = objectModelValue12.asObject();
        org.jboss.dmr.ModelValue modelValue14 = objectModelValue12.copy();
        int int16 = objectModelValue12.asInt((int) (short) 100);
        org.jboss.dmr.ModelValue modelValue17 = objectModelValue12.protect();
        long long18 = objectModelValue12.asLong();
        java.util.List<org.jboss.dmr.Property> propertyList19 = objectModelValue12.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList20 = modelNode8.asPropertyList(propertyList19);
        org.jboss.dmr.ModelNode modelNode22 = modelNode8.addExpression("");
        org.jboss.dmr.PropertyModelValue propertyModelValue23 = new org.jboss.dmr.PropertyModelValue("", modelNode8);
        java.util.List<org.jboss.dmr.Property> propertyList24 = propertyModelValue23.asPropertyList();
        org.junit.Assert.assertNotNull(booleanModelValue5);
        org.junit.Assert.assertNotNull(bigInteger6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1]");
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 32.0d + "'", double11 == 32.0d);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelValue14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(modelValue17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(propertyList19);
        org.junit.Assert.assertNotNull(propertyList20);
        org.junit.Assert.assertNotNull(modelNode22);
        org.junit.Assert.assertNotNull(propertyList24);
    }

    @Test
    public void test10522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10522");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream5 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4);
        org.jboss.dmr.stream.ModelReader modelReader6 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream5);
        java.io.OutputStream outputStream7 = null;
        org.jboss.dmr.Base64.OutputStream outputStream8 = new org.jboss.dmr.Base64.OutputStream(outputStream7);
        org.jboss.dmr.Base64.OutputStream outputStream9 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream8);
        outputStream8.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter12 = modelStreamFactory1.newModelWriter((java.io.OutputStream) outputStream8);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory14 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream15 = null;
        org.jboss.dmr.Base64.InputStream inputStream17 = new org.jboss.dmr.Base64.InputStream(inputStream15, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue19 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str20 = longModelValue19.asString();
        byte[] byteArray21 = longModelValue19.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue22 = new org.jboss.dmr.BytesModelValue(byteArray21);
        int int25 = inputStream17.read(byteArray21, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream27 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream17, (-1));
        org.jboss.dmr.stream.ModelReader modelReader28 = modelStreamFactory14.newModelReader((java.io.InputStream) inputStream27);
        java.io.InputStream inputStream29 = null;
        org.jboss.dmr.Base64.InputStream inputStream31 = new org.jboss.dmr.Base64.InputStream(inputStream29, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream32 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream31);
        byte[] byteArray34 = org.jboss.dmr.Base64.decode("true");
        boolean boolean36 = org.jboss.dmr.Base64.encodeToFile(byteArray34, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3R3AANW9yZy5qYm9z\ncy5kbXIuc3RyZWFtLk1vZGVsRXhjZXB0aW9uOiBbKCJoaSEiID0+IDAuMCldcAADaGkhRAAAAAAA\nAAAAeA==");
        int int39 = inputStream31.read(byteArray34, (int) 'l', 0);
        org.jboss.dmr.stream.ModelReader modelReader40 = modelStreamFactory14.newModelReader((java.io.InputStream) inputStream31);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory42 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream43 = null;
        org.jboss.dmr.Base64.InputStream inputStream45 = new org.jboss.dmr.Base64.InputStream(inputStream43, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream46 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream45);
        org.jboss.dmr.stream.ModelReader modelReader47 = modelStreamFactory42.newModelReader((java.io.InputStream) inputStream46);
        java.io.OutputStream outputStream48 = null;
        org.jboss.dmr.Base64.OutputStream outputStream49 = new org.jboss.dmr.Base64.OutputStream(outputStream48);
        org.jboss.dmr.Base64.OutputStream outputStream50 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream49);
        outputStream49.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter53 = modelStreamFactory42.newModelWriter((java.io.OutputStream) outputStream49);
        outputStream49.write(2);
        org.jboss.dmr.stream.ModelWriter modelWriter56 = modelStreamFactory14.newModelWriter((java.io.OutputStream) outputStream49);
        org.jboss.dmr.stream.ModelWriter modelWriter57 = modelStreamFactory1.newModelWriter((java.io.OutputStream) outputStream49);
        java.io.Writer writer58 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.stream.ModelWriter modelWriter59 = modelStreamFactory1.newModelWriter(writer58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Parameter cannot be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertNotNull(modelReader6);
        org.junit.Assert.assertNotNull(modelWriter12);
        org.junit.Assert.assertNotNull(modelStreamFactory14);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1" + "'", str20, "1");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(modelReader28);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[-74, -69, -98]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(modelReader40);
        org.junit.Assert.assertNotNull(modelStreamFactory42);
        org.junit.Assert.assertNotNull(modelReader47);
        org.junit.Assert.assertNotNull(modelWriter53);
        org.junit.Assert.assertNotNull(modelWriter56);
        org.junit.Assert.assertNotNull(modelWriter57);
    }

    @Test
    public void test10523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10523");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long3 = intModelValue1.asLong((long) 'b');
        java.lang.String str4 = intModelValue1.asString();
        long long5 = intModelValue1.asLong();
        long long6 = intModelValue1.asLong();
        long long8 = intModelValue1.asLong(10L);
        int int9 = intModelValue1.asInt();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 32L + "'", long3 == 32L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "32" + "'", str4, "32");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 32L + "'", long5 == 32L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 32L + "'", long6 == 32L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 32L + "'", long8 == 32L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
    }

    @Test
    public void test10524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10524");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isBigInteger();
        boolean boolean17 = modelReader15.isLong();
        boolean boolean18 = modelReader15.isBigDecimal();
        boolean boolean19 = modelReader15.isUndefined();
        boolean boolean20 = modelReader15.isUndefined();
        boolean boolean21 = modelReader15.isListStart();
        boolean boolean22 = modelReader15.isListStart();
        boolean boolean23 = modelReader15.isUndefined();
        boolean boolean24 = modelReader15.isBytes();
        boolean boolean25 = modelReader15.isPropertyEnd();
        boolean boolean26 = modelReader15.isObjectEnd();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test10525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10525");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        org.jboss.dmr.Property property5 = new org.jboss.dmr.Property("", modelNode4);
        java.lang.String[] strArray6 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode7 = modelNode4.get(strArray6);
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = modelNode11.asList();
        org.jboss.dmr.ListModelValue listModelValue13 = new org.jboss.dmr.ListModelValue(modelNodeList12);
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue13);
        org.jboss.dmr.ModelValue modelValue15 = listModelValue13.resolve();
        int int17 = listModelValue13.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList18 = listModelValue13.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList19 = modelNode7.asPropertyList(propertyList18);
        boolean boolean20 = modelNode7.isDefined();
        java.io.DataInput dataInput21 = null;
        // The following exception was thrown during execution in test generation
        try {
            modelNode7.readExternal(dataInput21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNodeList12);
        org.junit.Assert.assertNotNull(modelValue15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(propertyList18);
        org.junit.Assert.assertNotNull(propertyList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test10526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10526");
        org.jboss.dmr.ModelNode modelNode1 = org.jboss.dmr.ModelNode.fromJSONString("1.0");
        org.jboss.dmr.ModelNode modelNode2 = modelNode1.setEmptyObject();
        org.jboss.dmr.ModelType modelType3 = modelNode2.getType();
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode((int) 'a');
        org.jboss.dmr.ModelNode modelNode7 = modelNode6.setEmptyList();
        org.jboss.dmr.ObjectModelValue objectModelValue8 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode9 = objectModelValue8.asObject();
        java.util.Set<java.lang.String> strSet10 = objectModelValue8.getKeys();
        boolean boolean12 = objectModelValue8.has((int) 'a');
        boolean boolean14 = objectModelValue8.has("");
        org.jboss.dmr.ObjectModelValue objectModelValue15 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode16 = objectModelValue15.asObject();
        java.util.Set<java.lang.String> strSet17 = objectModelValue15.getKeys();
        boolean boolean19 = objectModelValue15.has((int) 'a');
        boolean boolean20 = objectModelValue8.equals(objectModelValue15);
        org.jboss.dmr.ModelNode modelNode21 = objectModelValue15.asObject();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList22 = objectModelValue15.asList();
        org.jboss.dmr.ModelNode modelNode23 = modelNode6.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList22);
        org.jboss.dmr.Property property25 = new org.jboss.dmr.Property("bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }", modelNode6, true);
        org.jboss.dmr.PropertyModelValue propertyModelValue26 = new org.jboss.dmr.PropertyModelValue(property25);
        org.jboss.dmr.ModelValue modelValue27 = propertyModelValue26.copy();
        boolean boolean28 = modelNode2.equals((java.lang.Object) propertyModelValue26);
        org.jboss.dmr.ModelNode modelNode30 = modelNode2.set(100);
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(modelNode2);
        org.junit.Assert.assertTrue("'" + modelType3 + "' != '" + org.jboss.dmr.ModelType.OBJECT + "'", modelType3.equals(org.jboss.dmr.ModelType.OBJECT));
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(modelNode21);
        org.junit.Assert.assertNotNull(modelNodeList22);
        org.junit.Assert.assertNotNull(modelNode23);
        org.junit.Assert.assertNotNull(modelValue27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(modelNode30);
    }

    @Test
    public void test10527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10527");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        java.lang.String str5 = modelNode1.toString();
        org.jboss.dmr.ModelNode modelNode6 = modelNode1.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(100);
        org.jboss.dmr.ModelNode modelNode9 = modelNode0.add(modelNode1);
        int int11 = modelNode1.asInt(2);
        org.jboss.dmr.ModelType modelType13 = org.jboss.dmr.ModelType.BYTES;
        org.jboss.dmr.ModelNode modelNode14 = modelNode1.set("[(\"hi!\" => 0.0)]", modelType13);
        org.jboss.dmr.TypeModelValue typeModelValue15 = org.jboss.dmr.TypeModelValue.of(modelType13);
        org.jboss.dmr.ModelType modelType16 = typeModelValue15.asType();
        org.jboss.dmr.ModelType modelType17 = typeModelValue15.asType();
        org.jboss.dmr.TypeModelValue typeModelValue18 = org.jboss.dmr.TypeModelValue.of(modelType17);
        org.jboss.dmr.DoubleModelValue doubleModelValue20 = new org.jboss.dmr.DoubleModelValue(0.0d);
        java.lang.String str21 = doubleModelValue20.asString();
        int int22 = doubleModelValue20.asInt();
        org.jboss.dmr.DoubleModelValue doubleModelValue24 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long25 = doubleModelValue24.asLong();
        boolean boolean26 = doubleModelValue24.asBoolean();
        byte[] byteArray27 = doubleModelValue24.asBytes();
        int int29 = doubleModelValue24.asInt((int) ' ');
        boolean boolean30 = doubleModelValue24.asBoolean();
        java.math.BigInteger bigInteger31 = doubleModelValue24.asBigInteger();
        org.jboss.dmr.DoubleModelValue doubleModelValue33 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long34 = doubleModelValue33.asLong();
        boolean boolean35 = doubleModelValue24.equals(doubleModelValue33);
        boolean boolean36 = doubleModelValue20.equals(doubleModelValue24);
        int int37 = doubleModelValue24.asInt();
        boolean boolean38 = typeModelValue18.equals((java.lang.Object) int37);
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(\"hi!\" => 0.0)" + "'", str5, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertTrue("'" + modelType13 + "' != '" + org.jboss.dmr.ModelType.BYTES + "'", modelType13.equals(org.jboss.dmr.ModelType.BYTES));
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(typeModelValue15);
        org.junit.Assert.assertTrue("'" + modelType16 + "' != '" + org.jboss.dmr.ModelType.BYTES + "'", modelType16.equals(org.jboss.dmr.ModelType.BYTES));
        org.junit.Assert.assertTrue("'" + modelType17 + "' != '" + org.jboss.dmr.ModelType.BYTES + "'", modelType17.equals(org.jboss.dmr.ModelType.BYTES));
        org.junit.Assert.assertNotNull(typeModelValue18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "0.0" + "'", str21, "0.0");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10L + "'", long25 == 10L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29 == 10);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(bigInteger31);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 10L + "'", long34 == 10L);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 10 + "'", int37 == 10);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test10528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10528");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        org.jboss.dmr.Property property5 = new org.jboss.dmr.Property("", modelNode4);
        java.lang.String[] strArray6 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode7 = modelNode4.get(strArray6);
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = modelNode11.asList();
        org.jboss.dmr.ListModelValue listModelValue13 = new org.jboss.dmr.ListModelValue(modelNodeList12);
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue13);
        org.jboss.dmr.ModelValue modelValue15 = listModelValue13.resolve();
        int int17 = listModelValue13.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList18 = listModelValue13.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList19 = modelNode7.asPropertyList(propertyList18);
        org.jboss.dmr.ModelNode modelNode21 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode24 = modelNode21.set("hi!", 0.0d);
        org.jboss.dmr.Property property25 = new org.jboss.dmr.Property("", modelNode24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode27 = modelNode24.get(strArray26);
        org.jboss.dmr.ModelNode modelNode28 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode31 = modelNode28.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList32 = modelNode31.asList();
        org.jboss.dmr.ListModelValue listModelValue33 = new org.jboss.dmr.ListModelValue(modelNodeList32);
        org.jboss.dmr.ModelNode modelNode34 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue33);
        org.jboss.dmr.ModelValue modelValue35 = listModelValue33.resolve();
        int int37 = listModelValue33.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList38 = listModelValue33.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList39 = modelNode27.asPropertyList(propertyList38);
        modelNode7.setNoCopy(modelNode27);
        org.jboss.dmr.ModelNode modelNode42 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode45 = modelNode42.set("hi!", 0.0d);
        org.jboss.dmr.Property property46 = new org.jboss.dmr.Property("", modelNode45);
        java.lang.String[] strArray47 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode48 = modelNode45.get(strArray47);
        org.jboss.dmr.ModelNode modelNode49 = modelNode27.get(strArray47);
        org.jboss.dmr.ModelNode modelNode51 = modelNode27.set("rO0ABXQAUXJPMEFCWE55QUJkdmNtY3VhbUp2YzNNdVpHMXlMazF2WkdWc1RtOWtaUnd0b1VTZG80\nNC9EQUFBZUhCM0RIQUFBMmhwSVdVQUEyaHAKSVhnPQ==");
        org.jboss.dmr.ModelNode modelNode53 = new org.jboss.dmr.ModelNode(false);
        int int55 = modelNode53.asInt(2);
        org.jboss.dmr.ModelNode modelNode57 = modelNode53.set(52);
        org.jboss.dmr.ModelNode modelNode59 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode62 = modelNode59.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList63 = modelNode62.asList();
        org.jboss.dmr.ListModelValue listModelValue64 = new org.jboss.dmr.ListModelValue(modelNodeList63);
        org.jboss.dmr.ModelNode modelNode65 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue64);
        org.jboss.dmr.ModelValue modelValue66 = listModelValue64.resolve();
        int int68 = listModelValue64.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList69 = listModelValue64.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList70 = listModelValue64.asPropertyList();
        org.jboss.dmr.ModelNode modelNode72 = listModelValue64.getChild((int) (short) 0);
        org.jboss.dmr.ModelNode modelNode73 = modelNode72.resolve();
        org.jboss.dmr.ModelNode modelNode74 = modelNode57.set("EXPRESSION_VALUE", modelNode73);
        org.jboss.dmr.ModelNode modelNode76 = modelNode73.set(true);
        org.jboss.dmr.ModelNode modelNode77 = modelNode51.set(modelNode76);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode79 = modelNode51.add("big decimal 1.0");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNodeList12);
        org.junit.Assert.assertNotNull(modelValue15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(propertyList18);
        org.junit.Assert.assertNotNull(propertyList19);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(modelNodeList32);
        org.junit.Assert.assertNotNull(modelValue35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(propertyList38);
        org.junit.Assert.assertNotNull(propertyList39);
        org.junit.Assert.assertNotNull(modelNode45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(modelNode48);
        org.junit.Assert.assertNotNull(modelNode49);
        org.junit.Assert.assertNotNull(modelNode51);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(modelNode57);
        org.junit.Assert.assertNotNull(modelNode62);
        org.junit.Assert.assertNotNull(modelNodeList63);
        org.junit.Assert.assertNotNull(modelValue66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(propertyList69);
        org.junit.Assert.assertNotNull(propertyList70);
        org.junit.Assert.assertNotNull(modelNode72);
        org.junit.Assert.assertNotNull(modelNode73);
        org.junit.Assert.assertNotNull(modelNode74);
        org.junit.Assert.assertNotNull(modelNode76);
        org.junit.Assert.assertNotNull(modelNode77);
    }

    @Test
    public void test10529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10529");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        boolean boolean8 = bigDecimalModelValue7.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression9 = bigDecimalModelValue7.asExpression();
        org.jboss.dmr.IntModelValue intModelValue11 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long13 = intModelValue11.asLong((long) 'b');
        java.lang.String str14 = intModelValue11.asString();
        long long15 = intModelValue11.asLong();
        long long16 = intModelValue11.asLong();
        org.jboss.dmr.ValueExpression valueExpression17 = intModelValue11.asExpression();
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver18 = new org.jboss.dmr.ValueExpressionResolver();
        java.math.BigDecimal bigDecimal19 = valueExpression17.resolveBigDecimal(valueExpressionResolver18);
        boolean boolean20 = valueExpression9.equals(valueExpression17);
        java.lang.String str21 = valueExpression9.resolveString();
        org.jboss.dmr.ExpressionValue expressionValue22 = new org.jboss.dmr.ExpressionValue(valueExpression9);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(valueExpression9);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 32L + "'", long13 == 32L);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "32" + "'", str14, "32");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 32L + "'", long15 == 32L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(valueExpression17);
        org.junit.Assert.assertNotNull(bigDecimal19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1.0" + "'", str21, "1.0");
    }

    @Test
    public void test10530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10530");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        java.io.InputStream inputStream16 = null;
        org.jboss.dmr.Base64.InputStream inputStream18 = new org.jboss.dmr.Base64.InputStream(inputStream16, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream19 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream18);
        org.jboss.dmr.Base64.InputStream inputStream20 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream18);
        org.jboss.dmr.stream.ModelReader modelReader21 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream18);
        java.io.InputStream inputStream22 = null;
        org.jboss.dmr.Base64.InputStream inputStream24 = new org.jboss.dmr.Base64.InputStream(inputStream22, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream25 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream24);
        org.jboss.dmr.stream.ModelReader modelReader26 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream24);
        java.io.OutputStream outputStream27 = null;
        org.jboss.dmr.Base64.OutputStream outputStream28 = new org.jboss.dmr.Base64.OutputStream(outputStream27);
        outputStream28.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream30 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream28);
        org.jboss.dmr.Base64.OutputStream outputStream31 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream30);
        org.jboss.dmr.ModelNode modelNode33 = new org.jboss.dmr.ModelNode("EXPRESSION_VALUE");
        org.jboss.dmr.BooleanModelValue booleanModelValue36 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger37 = booleanModelValue36.asBigInteger();
        byte[] byteArray38 = booleanModelValue36.asBytes();
        org.jboss.dmr.ModelNode modelNode39 = modelNode33.set("expression \"hi!\"", byteArray38);
        outputStream30.write(byteArray38);
        org.jboss.dmr.stream.ModelWriter modelWriter41 = modelStreamFactory1.newModelWriter((java.io.OutputStream) outputStream30);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory43 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream44 = null;
        org.jboss.dmr.Base64.InputStream inputStream46 = new org.jboss.dmr.Base64.InputStream(inputStream44, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream47 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream46);
        org.jboss.dmr.stream.ModelReader modelReader48 = modelStreamFactory43.newModelReader((java.io.InputStream) inputStream47);
        java.io.OutputStream outputStream49 = null;
        org.jboss.dmr.Base64.OutputStream outputStream50 = new org.jboss.dmr.Base64.OutputStream(outputStream49);
        org.jboss.dmr.Base64.OutputStream outputStream51 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream50);
        outputStream50.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter54 = modelStreamFactory43.newModelWriter((java.io.OutputStream) outputStream50);
        java.io.OutputStream outputStream55 = null;
        org.jboss.dmr.Base64.OutputStream outputStream56 = new org.jboss.dmr.Base64.OutputStream(outputStream55);
        outputStream56.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream58 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream56);
        org.jboss.dmr.Base64.OutputStream outputStream60 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream58, (int) (byte) -1);
        org.jboss.dmr.Base64.OutputStream outputStream61 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream60);
        outputStream61.resumeEncoding();
        outputStream61.flushBase64();
        org.jboss.dmr.stream.ModelWriter modelWriter64 = modelStreamFactory43.newModelWriter((java.io.OutputStream) outputStream61);
        java.io.InputStream inputStream65 = null;
        org.jboss.dmr.Base64.InputStream inputStream67 = new org.jboss.dmr.Base64.InputStream(inputStream65, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue69 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str70 = longModelValue69.asString();
        byte[] byteArray71 = longModelValue69.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue72 = new org.jboss.dmr.BytesModelValue(byteArray71);
        int int75 = inputStream67.read(byteArray71, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream77 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream67, (-1));
        org.jboss.dmr.Base64.InputStream inputStream79 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream67, (int) 'p');
        org.jboss.dmr.stream.ModelReader modelReader80 = modelStreamFactory43.newModelReader((java.io.InputStream) inputStream67);
        org.jboss.dmr.Base64.InputStream inputStream82 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream67, 10);
        java.nio.charset.Charset charset83 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.stream.ModelReader modelReader84 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream82, charset83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Parameter cannot be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertNotNull(modelReader21);
        org.junit.Assert.assertNotNull(modelReader26);
        org.junit.Assert.assertNotNull(booleanModelValue36);
        org.junit.Assert.assertNotNull(bigInteger37);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[1]");
        org.junit.Assert.assertNotNull(modelNode39);
        org.junit.Assert.assertNotNull(modelWriter41);
        org.junit.Assert.assertNotNull(modelStreamFactory43);
        org.junit.Assert.assertNotNull(modelReader48);
        org.junit.Assert.assertNotNull(modelWriter54);
        org.junit.Assert.assertNotNull(modelWriter64);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "1" + "'", str70, "1");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(modelReader80);
    }

    @Test
    public void test10531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10531");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        boolean boolean8 = bigDecimalModelValue7.asBoolean();
        long long9 = bigDecimalModelValue7.asLong();
        java.lang.String str10 = bigDecimalModelValue7.asString();
        java.math.BigInteger bigInteger11 = bigDecimalModelValue7.asBigInteger();
        int int12 = bigDecimalModelValue7.asInt();
        java.math.BigDecimal bigDecimal13 = bigDecimalModelValue7.asBigDecimal();
        java.lang.String str14 = bigDecimalModelValue7.toString();
        java.io.DataOutput dataOutput15 = null;
        // The following exception was thrown during execution in test generation
        try {
            bigDecimalModelValue7.writeExternal(dataOutput15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1.0" + "'", str10, "1.0");
        org.junit.Assert.assertNotNull(bigInteger11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(bigDecimal13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "big decimal 1.0" + "'", str14, "big decimal 1.0");
    }

    @Test
    public void test10532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10532");
        org.jboss.dmr.BooleanModelValue booleanModelValue1 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long2 = booleanModelValue1.asLong();
        int int3 = booleanModelValue1.asInt();
        int int4 = booleanModelValue1.asInt();
        java.lang.String str5 = booleanModelValue1.asString();
        java.math.BigDecimal bigDecimal6 = booleanModelValue1.asBigDecimal();
        org.junit.Assert.assertNotNull(booleanModelValue1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "true" + "'", str5, "true");
        org.junit.Assert.assertNotNull(bigDecimal6);
    }

    @Test
    public void test10533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10533");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str2 = intModelValue1.asString();
        double double4 = intModelValue1.asDouble((double) 2);
        java.math.BigDecimal bigDecimal5 = intModelValue1.asBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue6 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal5);
        long long7 = bigDecimalModelValue6.asLong();
        long long8 = bigDecimalModelValue6.asLong();
        int int10 = bigDecimalModelValue6.asInt((-1));
        int int12 = bigDecimalModelValue6.asInt((int) (byte) 1);
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long15 = modelNode14.asLong();
        org.jboss.dmr.ValueExpression valueExpression16 = modelNode14.asExpression();
        java.math.BigDecimal bigDecimal17 = valueExpression16.resolveBigDecimal();
        java.lang.String str18 = valueExpression16.getExpressionString();
        java.math.BigDecimal bigDecimal19 = valueExpression16.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue20 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal19);
        boolean boolean21 = bigDecimalModelValue20.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression22 = bigDecimalModelValue20.asExpression();
        java.lang.String str23 = bigDecimalModelValue20.asString();
        boolean boolean24 = bigDecimalModelValue6.equals(bigDecimalModelValue20);
        double double26 = bigDecimalModelValue20.asDouble((double) 5);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "32" + "'", str2, "32");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 32.0d + "'", double4 == 32.0d);
        org.junit.Assert.assertNotNull(bigDecimal5);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 32L + "'", long7 == 32L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 32L + "'", long8 == 32L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertNotNull(valueExpression16);
        org.junit.Assert.assertNotNull(bigDecimal17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1.0" + "'", str18, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(valueExpression22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1.0" + "'", str23, "1.0");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
    }

    @Test
    public void test10534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10534");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str2 = intModelValue1.asString();
        double double4 = intModelValue1.asDouble((double) 2);
        int int5 = intModelValue1.asInt();
        byte[] byteArray6 = intModelValue1.asBytes();
        long long8 = intModelValue1.asLong((long) 112);
        long long9 = intModelValue1.asLong();
        long long10 = intModelValue1.asLong();
        java.math.BigInteger bigInteger11 = intModelValue1.asBigInteger();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "32" + "'", str2, "32");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 32.0d + "'", double4 == 32.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 32 + "'", int5 == 32);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 0, 0, 32]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 32L + "'", long8 == 32L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 32L + "'", long9 == 32L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 32L + "'", long10 == 32L);
        org.junit.Assert.assertNotNull(bigInteger11);
    }

    @Test
    public void test10535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10535");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        org.jboss.dmr.ModelValue modelValue2 = objectModelValue0.copy();
        java.lang.String str3 = objectModelValue0.toString();
        org.jboss.dmr.ObjectModelValue objectModelValue4 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode5 = objectModelValue4.asObject();
        org.jboss.dmr.ObjectModelValue objectModelValue6 = null;
        boolean boolean7 = objectModelValue4.equals(objectModelValue6);
        boolean boolean8 = objectModelValue0.equals(objectModelValue6);
        org.jboss.dmr.ModelNode modelNode10 = new org.jboss.dmr.ModelNode("EXPRESSION_VALUE");
        org.jboss.dmr.BooleanModelValue booleanModelValue13 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger14 = booleanModelValue13.asBigInteger();
        byte[] byteArray15 = booleanModelValue13.asBytes();
        org.jboss.dmr.ModelNode modelNode16 = modelNode10.set("expression \"hi!\"", byteArray15);
        org.jboss.dmr.ModelNode modelNode17 = modelNode16.clear();
        int int19 = modelNode16.asInt((int) 'p');
        java.lang.Boolean boolean20 = modelNode16.asBooleanOrNull();
        boolean boolean21 = objectModelValue0.equals((java.lang.Object) modelNode16);
        double double23 = modelNode16.asDouble((double) 0.0f);
        org.jboss.dmr.ModelNode modelNode24 = modelNode16.clear();
        org.jboss.dmr.LongModelValue longModelValue26 = new org.jboss.dmr.LongModelValue((long) '4');
        java.math.BigDecimal bigDecimal27 = longModelValue26.asBigDecimal();
        int int28 = longModelValue26.asInt();
        org.jboss.dmr.ValueExpression valueExpression29 = longModelValue26.asExpression();
        double double30 = longModelValue26.asDouble();
        org.jboss.dmr.LongModelValue longModelValue32 = new org.jboss.dmr.LongModelValue(1L);
        long long34 = longModelValue32.asLong((long) (short) 0);
        java.lang.String str35 = longModelValue32.asString();
        byte[] byteArray36 = longModelValue32.asBytes();
        org.jboss.dmr.ModelType modelType37 = longModelValue32.getType();
        long long39 = longModelValue32.asLong(1L);
        boolean boolean40 = longModelValue26.equals(longModelValue32);
        org.jboss.dmr.ValueExpression valueExpression41 = longModelValue26.asExpression();
        org.jboss.dmr.ModelNode modelNode42 = modelNode16.add(valueExpression41);
        long long44 = modelNode42.asLong(73L);
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{}" + "'", str3, "{}");
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(booleanModelValue13);
        org.junit.Assert.assertNotNull(bigInteger14);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[1]");
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 112 + "'", int19 == 112);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertNotNull(bigDecimal27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNotNull(valueExpression29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 52.0d + "'", double30 == 52.0d);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1L + "'", long34 == 1L);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1" + "'", str35, "1");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + modelType37 + "' != '" + org.jboss.dmr.ModelType.LONG + "'", modelType37.equals(org.jboss.dmr.ModelType.LONG));
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1L + "'", long39 == 1L);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(valueExpression41);
        org.junit.Assert.assertNotNull(modelNode42);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1L + "'", long44 == 1L);
    }

    @Test
    public void test10536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10536");
        org.jboss.dmr.BooleanModelValue booleanModelValue1 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray2 = booleanModelValue1.asBytes();
        java.lang.String str3 = booleanModelValue1.asString();
        int int4 = booleanModelValue1.asInt();
        long long5 = booleanModelValue1.asLong();
        boolean boolean7 = booleanModelValue1.equals((java.lang.Object) '4');
        double double8 = booleanModelValue1.asDouble();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode10 = booleanModelValue1.requireChild((int) '#');
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child exists at index [35]");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanModelValue1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "true" + "'", str3, "true");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
    }

    @Test
    public void test10537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10537");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isLong();
        boolean boolean17 = modelReader15.isBigDecimal();
        boolean boolean18 = modelReader15.isUndefined();
        boolean boolean19 = modelReader15.isBytes();
        boolean boolean20 = modelReader15.isBigInteger();
        boolean boolean21 = modelReader15.isBytes();
        boolean boolean22 = modelReader15.isString();
        boolean boolean23 = modelReader15.isObjectEnd();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test10538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10538");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long2 = doubleModelValue1.asLong();
        boolean boolean4 = doubleModelValue1.asBoolean(true);
        int int5 = doubleModelValue1.asInt();
        org.jboss.dmr.DoubleModelValue doubleModelValue7 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long8 = doubleModelValue7.asLong();
        long long10 = doubleModelValue7.asLong((long) 32);
        byte[] byteArray11 = doubleModelValue7.asBytes();
        boolean boolean12 = doubleModelValue1.equals(doubleModelValue7);
        boolean boolean13 = doubleModelValue7.asBoolean();
        org.jboss.dmr.ModelValue modelValue14 = doubleModelValue7.resolve();
        double double16 = doubleModelValue7.asDouble((double) (short) 10);
        org.jboss.dmr.DoubleModelValue doubleModelValue18 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long19 = doubleModelValue18.asLong();
        boolean boolean21 = doubleModelValue18.asBoolean(true);
        boolean boolean23 = doubleModelValue18.asBoolean(false);
        int int24 = doubleModelValue18.asInt();
        int int25 = doubleModelValue18.asInt();
        java.math.BigDecimal bigDecimal26 = doubleModelValue18.asBigDecimal();
        boolean boolean27 = doubleModelValue7.equals(doubleModelValue18);
        java.math.BigDecimal bigDecimal28 = doubleModelValue7.asBigDecimal();
        int int29 = doubleModelValue7.asInt();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10L + "'", long2 == 10L);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10L + "'", long8 == 10L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10L + "'", long10 == 10L);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(modelValue14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 10L + "'", long19 == 10L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertNotNull(bigDecimal26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(bigDecimal28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29 == 10);
    }

    @Test
    public void test10539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10539");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.lang.String str4 = modelNode0.toString();
        org.jboss.dmr.ModelNode modelNode5 = modelNode0.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode10 = modelNode7.set("hi!", 0.0d);
        org.jboss.dmr.Property property11 = new org.jboss.dmr.Property("", modelNode10);
        org.jboss.dmr.ModelNode modelNode12 = modelNode0.set(property11);
        org.jboss.dmr.ModelType modelType13 = org.jboss.dmr.ModelType.BOOLEAN;
        org.jboss.dmr.ModelNode modelNode14 = modelNode12.set(modelType13);
        org.jboss.dmr.ModelType modelType16 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode17 = new org.jboss.dmr.ModelNode(modelType16);
        org.jboss.dmr.ModelNode modelNode19 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode22 = modelNode19.set("hi!", 0.0d);
        org.jboss.dmr.Property property23 = new org.jboss.dmr.Property("", modelNode22);
        org.jboss.dmr.ModelNode modelNode24 = modelNode17.set(property23);
        org.jboss.dmr.ModelNode modelNode25 = property23.getValue();
        org.jboss.dmr.PropertyModelValue propertyModelValue26 = new org.jboss.dmr.PropertyModelValue(property23);
        java.util.List<org.jboss.dmr.Property> propertyList27 = propertyModelValue26.asPropertyList();
        org.jboss.dmr.ModelNode modelNode29 = propertyModelValue26.getChild((int) (short) 0);
        org.jboss.dmr.ModelNode modelNode30 = modelNode29.setEmptyList();
        org.jboss.dmr.BooleanModelValue booleanModelValue33 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long34 = booleanModelValue33.asLong();
        org.jboss.dmr.ValueExpression valueExpression35 = booleanModelValue33.asExpression();
        java.lang.String str36 = valueExpression35.toString();
        org.jboss.dmr.ExpressionValue expressionValue38 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ValueExpression valueExpression39 = expressionValue38.asExpression();
        boolean boolean40 = valueExpression35.equals(valueExpression39);
        org.jboss.dmr.LongModelValue longModelValue42 = new org.jboss.dmr.LongModelValue((long) '4');
        java.math.BigDecimal bigDecimal43 = longModelValue42.asBigDecimal();
        int int44 = longModelValue42.asInt();
        org.jboss.dmr.ValueExpression valueExpression45 = longModelValue42.asExpression();
        boolean boolean46 = valueExpression39.equals(valueExpression45);
        int int47 = valueExpression45.resolveInt();
        org.jboss.dmr.ExpressionValue expressionValue49 = new org.jboss.dmr.ExpressionValue("1");
        org.jboss.dmr.ValueExpression valueExpression50 = expressionValue49.asExpression();
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver51 = new org.jboss.dmr.ValueExpressionResolver();
        java.lang.String str52 = valueExpression50.resolveString(valueExpressionResolver51);
        java.math.BigInteger bigInteger53 = valueExpression45.resolveBigInteger(valueExpressionResolver51);
        org.jboss.dmr.ModelNode modelNode54 = modelNode29.add("[(\"H4sIAAAAAAAAAAMAAAAAAAAAAAA=\" => big integer 32)]", valueExpression45);
        org.jboss.dmr.ModelNode modelNode57 = modelNode54.add("AQ==", false);
        org.jboss.dmr.ModelType modelType58 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode59 = new org.jboss.dmr.ModelNode(modelType58);
        org.jboss.dmr.ModelNode modelNode61 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode64 = modelNode61.set("hi!", 0.0d);
        org.jboss.dmr.Property property65 = new org.jboss.dmr.Property("", modelNode64);
        org.jboss.dmr.ModelNode modelNode66 = modelNode59.set(property65);
        org.jboss.dmr.PropertyModelValue propertyModelValue67 = new org.jboss.dmr.PropertyModelValue(property65);
        org.jboss.dmr.PropertyModelValue propertyModelValue68 = new org.jboss.dmr.PropertyModelValue(property65);
        org.jboss.dmr.ModelNode modelNode69 = modelNode54.add(property65);
        org.jboss.dmr.ModelNode modelNode70 = modelNode54.addEmptyObject();
        org.jboss.dmr.ModelNode modelNode71 = modelNode12.set("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3CUQ/8AAAAAAAAHg=", modelNode54);
        org.jboss.dmr.ModelNode modelNode72 = new org.jboss.dmr.ModelNode();
        java.lang.Long long73 = modelNode72.asLongOrNull();
        java.lang.String str74 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode72);
        org.jboss.dmr.ModelType modelType76 = org.jboss.dmr.ModelType.LONG;
        org.jboss.dmr.ModelNode modelNode77 = modelNode72.set("rO0ABXNyABFqYXZhLmxhbmcuSW50ZWdlchLioKT3gYc4AgABSQAFdmFsdWV4cgAQamF2YS5sYW5n\nLk51bWJlcoaslR0LlOCLAgAAeHAAAABk", modelType76);
        org.jboss.dmr.ModelNode modelNode78 = modelNode71.set(modelType76);
        org.jboss.dmr.ModelNode modelNode80 = modelNode78.set(false);
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "(\"hi!\" => 0.0)" + "'", str4, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertTrue("'" + modelType13 + "' != '" + org.jboss.dmr.ModelType.BOOLEAN + "'", modelType13.equals(org.jboss.dmr.ModelType.BOOLEAN));
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertTrue("'" + modelType16 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType16.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode22);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertNotNull(propertyList27);
        org.junit.Assert.assertNotNull(modelNode29);
        org.junit.Assert.assertNotNull(modelNode30);
        org.junit.Assert.assertNotNull(booleanModelValue33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1L + "'", long34 == 1L);
        org.junit.Assert.assertNotNull(valueExpression35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Expression \"true\"" + "'", str36, "Expression \"true\"");
        org.junit.Assert.assertNotNull(valueExpression39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(bigDecimal43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNotNull(valueExpression45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNotNull(valueExpression50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1" + "'", str52, "1");
        org.junit.Assert.assertNotNull(bigInteger53);
        org.junit.Assert.assertNotNull(modelNode54);
        org.junit.Assert.assertNotNull(modelNode57);
        org.junit.Assert.assertTrue("'" + modelType58 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType58.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode64);
        org.junit.Assert.assertNotNull(modelNode66);
        org.junit.Assert.assertNotNull(modelNode69);
        org.junit.Assert.assertNotNull(modelNode70);
        org.junit.Assert.assertNotNull(modelNode71);
        org.junit.Assert.assertNull(long73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4" + "'", str74, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4");
        org.junit.Assert.assertTrue("'" + modelType76 + "' != '" + org.jboss.dmr.ModelType.LONG + "'", modelType76.equals(org.jboss.dmr.ModelType.LONG));
        org.junit.Assert.assertNotNull(modelNode77);
        org.junit.Assert.assertNotNull(modelNode78);
        org.junit.Assert.assertNotNull(modelNode80);
    }

    @Test
    public void test10540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10540");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        org.jboss.dmr.ModelValue modelValue2 = objectModelValue0.protect();
        java.util.List<org.jboss.dmr.Property> propertyList3 = objectModelValue0.asPropertyList();
        org.jboss.dmr.ModelValue modelValue4 = objectModelValue0.copy();
        boolean boolean5 = objectModelValue0.asBoolean();
        boolean boolean7 = objectModelValue0.has("rO0ABXQAUXJPMEFCWE55QUJkdmNtY3VhbUp2YzNNdVpHMXlMazF2WkdWc1RtOWtaUnd0b1VTZG80\nNC9EQUFBZUhCM0RIQUFBMmhwSVdVQUEyaHAKSVhnPQ==");
        long long9 = objectModelValue0.asLong((long) 2);
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(propertyList3);
        org.junit.Assert.assertNotNull(modelValue4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    }

    @Test
    public void test10541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10541");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long3 = intModelValue1.asLong((long) '#');
        org.jboss.dmr.IntModelValue intModelValue5 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long7 = intModelValue5.asLong((long) 'b');
        java.lang.String str8 = intModelValue5.asString();
        boolean boolean9 = intModelValue1.equals(intModelValue5);
        int int10 = intModelValue5.asInt();
        org.jboss.dmr.ModelNode modelNode11 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) intModelValue5);
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode((long) 10);
        java.lang.String str16 = modelNode14.asString("true");
        org.jboss.dmr.ModelNode modelNode19 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long20 = modelNode19.asLong();
        org.jboss.dmr.ValueExpression valueExpression21 = modelNode19.asExpression();
        java.math.BigDecimal bigDecimal22 = valueExpression21.resolveBigDecimal();
        org.jboss.dmr.ModelNode modelNode23 = new org.jboss.dmr.ModelNode(bigDecimal22);
        org.jboss.dmr.ModelNode modelNode25 = modelNode23.set((double) (byte) 0);
        org.jboss.dmr.ModelNode modelNode26 = modelNode14.setNoCopy("35", modelNode25);
        org.jboss.dmr.ModelNode modelNode29 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode32 = modelNode29.set("hi!", 0.0d);
        org.jboss.dmr.Property property33 = new org.jboss.dmr.Property("", modelNode32);
        boolean boolean35 = modelNode32.hasDefined((int) (short) -1);
        org.jboss.dmr.ModelNode modelNode36 = modelNode26.setNoCopy("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4", modelNode32);
        org.jboss.dmr.ModelNode modelNode37 = modelNode11.setNoCopy("false", modelNode26);
        org.jboss.dmr.ModelNode modelNode39 = modelNode26.set((long) (short) -1);
        boolean boolean41 = modelNode26.hasDefined("H4sIAAAAAAAAANNQUlKwtVPQUMrIVASzDPQMNDUBLH2F1RYAAAA=");
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 32L + "'", long3 == 32L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 32L + "'", long7 == 32L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "32" + "'", str8, "32");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "10" + "'", str16, "10");
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
        org.junit.Assert.assertNotNull(valueExpression21);
        org.junit.Assert.assertNotNull(bigDecimal22);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(modelNode36);
        org.junit.Assert.assertNotNull(modelNode37);
        org.junit.Assert.assertNotNull(modelNode39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test10542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10542");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue((long) (byte) -1);
        double double3 = longModelValue1.asDouble(0.0d);
        org.jboss.dmr.LongModelValue longModelValue5 = new org.jboss.dmr.LongModelValue((-1L));
        long long7 = longModelValue5.asLong((long) (byte) -1);
        byte[] byteArray8 = longModelValue5.asBytes();
        boolean boolean9 = longModelValue1.equals(longModelValue5);
        org.jboss.dmr.LongModelValue longModelValue11 = new org.jboss.dmr.LongModelValue(1L);
        long long13 = longModelValue11.asLong((long) (short) 0);
        java.math.BigInteger bigInteger14 = longModelValue11.asBigInteger();
        boolean boolean15 = longModelValue5.equals(longModelValue11);
        int int17 = longModelValue11.asInt((int) (byte) 100);
        org.jboss.dmr.ObjectModelValue objectModelValue18 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode19 = objectModelValue18.asObject();
        org.jboss.dmr.ModelValue modelValue20 = objectModelValue18.protect();
        java.util.List<org.jboss.dmr.Property> propertyList21 = objectModelValue18.asPropertyList();
        org.jboss.dmr.ModelValue modelValue22 = objectModelValue18.copy();
        boolean boolean23 = longModelValue11.equals((java.lang.Object) modelValue22);
        org.jboss.dmr.LongModelValue longModelValue25 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str26 = longModelValue25.asString();
        org.jboss.dmr.ValueExpression valueExpression27 = longModelValue25.asExpression();
        boolean boolean28 = longModelValue11.equals(longModelValue25);
        boolean boolean30 = longModelValue11.asBoolean(true);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + (-1.0d) + "'", double3 == (-1.0d));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -1, -1, -1, -1, -1, -1, -1]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(bigInteger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(modelValue20);
        org.junit.Assert.assertNotNull(propertyList21);
        org.junit.Assert.assertNotNull(modelValue22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1" + "'", str26, "1");
        org.junit.Assert.assertNotNull(valueExpression27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test10543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10543");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isLong();
        boolean boolean17 = modelReader15.isBoolean();
        boolean boolean18 = modelReader15.isExpression();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test10544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10544");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        boolean boolean4 = objectModelValue0.has((int) 'a');
        boolean boolean6 = objectModelValue0.has("");
        org.jboss.dmr.ObjectModelValue objectModelValue7 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode8 = objectModelValue7.asObject();
        java.util.Set<java.lang.String> strSet9 = objectModelValue7.getKeys();
        boolean boolean11 = objectModelValue7.has((int) 'a');
        boolean boolean12 = objectModelValue0.equals(objectModelValue7);
        org.jboss.dmr.ModelNode modelNode13 = objectModelValue7.asObject();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList14 = objectModelValue7.asList();
        org.jboss.dmr.ObjectModelValue objectModelValue15 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode16 = objectModelValue15.asObject();
        org.jboss.dmr.ModelValue modelValue17 = objectModelValue15.protect();
        long long18 = objectModelValue15.asLong();
        boolean boolean20 = objectModelValue15.has("(\"(\\\"\\\" => (\\\"hi!\\\" => 0.0))\" => expression \"\")");
        boolean boolean21 = objectModelValue15.asBoolean();
        boolean boolean22 = objectModelValue7.equals(objectModelValue15);
        java.io.DataOutput dataOutput23 = null;
        // The following exception was thrown during execution in test generation
        try {
            objectModelValue15.writeExternal(dataOutput23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNodeList14);
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertNotNull(modelValue17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test10545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10545");
        org.jboss.dmr.ExpressionValue expressionValue1 = new org.jboss.dmr.ExpressionValue("32");
    }

    @Test
    public void test10546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10546");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str2 = longModelValue1.asString();
        byte[] byteArray3 = longModelValue1.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue4 = new org.jboss.dmr.BytesModelValue(byteArray3);
        double double5 = bytesModelValue4.asDouble();
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode((double) 100);
        org.jboss.dmr.ModelNode modelNode9 = modelNode7.set((int) '#');
        java.lang.Boolean boolean10 = modelNode7.asBooleanOrNull();
        java.lang.String str12 = modelNode7.asString("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        boolean boolean13 = bytesModelValue4.equals((java.lang.Object) modelNode7);
        byte[] byteArray14 = bytesModelValue4.asBytes();
        org.jboss.dmr.BooleanModelValue booleanModelValue16 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray17 = booleanModelValue16.asBytes();
        org.jboss.dmr.ValueExpression valueExpression18 = booleanModelValue16.asExpression();
        double double20 = booleanModelValue16.asDouble((double) 10);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory22 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream23 = null;
        org.jboss.dmr.Base64.InputStream inputStream25 = new org.jboss.dmr.Base64.InputStream(inputStream23, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream26 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream25);
        org.jboss.dmr.stream.ModelReader modelReader27 = modelStreamFactory22.newModelReader((java.io.InputStream) inputStream26);
        java.io.OutputStream outputStream28 = null;
        org.jboss.dmr.Base64.OutputStream outputStream29 = new org.jboss.dmr.Base64.OutputStream(outputStream28);
        org.jboss.dmr.Base64.OutputStream outputStream30 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream29);
        outputStream29.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter33 = modelStreamFactory22.newModelWriter((java.io.OutputStream) outputStream29);
        org.jboss.dmr.stream.ModelWriter modelWriter34 = modelWriter33.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter36 = modelWriter33.writeInt((int) '4');
        org.jboss.dmr.stream.ModelWriter modelWriter38 = modelWriter36.writeBoolean(true);
        org.jboss.dmr.stream.ModelWriter modelWriter40 = modelWriter36.writeBoolean(true);
        org.jboss.dmr.stream.ModelWriter modelWriter42 = modelWriter40.writeLong(100L);
        booleanModelValue16.write(modelWriter40);
        bytesModelValue4.write(modelWriter40);
        org.jboss.dmr.stream.ModelWriter modelWriter45 = modelWriter40.writeObjectStart();
        org.jboss.dmr.stream.ModelWriter modelWriter47 = modelWriter40.writeString("rO0ABXNyAB1vcmcuamJvc3MuZG1yLlZhbHVlRXhwcmVzc2lvbvwmn+JujpBcDAAAeHB3BAACNTJ4\n");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1" + "'", str2, "1");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.9E-324d + "'", double5 == 4.9E-324d);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertEquals("'" + boolean10 + "' != '" + true + "'", boolean10, true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "35" + "'", str12, "35");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(booleanModelValue16);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[1]");
        org.junit.Assert.assertNotNull(valueExpression18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(modelStreamFactory22);
        org.junit.Assert.assertNotNull(modelReader27);
        org.junit.Assert.assertNotNull(modelWriter33);
        org.junit.Assert.assertNotNull(modelWriter34);
        org.junit.Assert.assertNotNull(modelWriter36);
        org.junit.Assert.assertNotNull(modelWriter38);
        org.junit.Assert.assertNotNull(modelWriter40);
        org.junit.Assert.assertNotNull(modelWriter42);
        org.junit.Assert.assertNotNull(modelWriter45);
        org.junit.Assert.assertNotNull(modelWriter47);
    }

    @Test
    public void test10547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10547");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        boolean boolean3 = modelNode1.hasDefined((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.math.BigDecimal bigDecimal4 = modelNode1.asBigDecimalOrNull();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test10548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10548");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.FALSE;
        long long1 = booleanModelValue0.asLong();
        byte[] byteArray2 = booleanModelValue0.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue3 = new org.jboss.dmr.BytesModelValue(byteArray2);
        byte[] byteArray4 = bytesModelValue3.asBytes();
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[0]");
    }

    @Test
    public void test10549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10549");
        org.jboss.dmr.BooleanModelValue booleanModelValue1 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger2 = booleanModelValue1.asBigInteger();
        byte[] byteArray3 = booleanModelValue1.asBytes();
        boolean boolean4 = booleanModelValue1.asBoolean();
        byte[] byteArray5 = booleanModelValue1.asBytes();
        boolean boolean7 = org.jboss.dmr.Base64.encodeToFile(byteArray5, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3R3AANW9yZy5qYm9z\ncy5kbXIuc3RyZWFtLk1vZGVsRXhjZXB0aW9uOiBbKCJoaSEiID0+IDAuMCldcAADaGkhRAAAAAAA\nAAAAeA==");
        java.lang.String str9 = org.jboss.dmr.Base64.encodeBytes(byteArray5, 3);
        org.junit.Assert.assertNotNull(booleanModelValue1);
        org.junit.Assert.assertNotNull(bigInteger2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[1]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "H4sIAAAAAAAAAGMEABvfBaUBAAAA" + "'", str9, "H4sIAAAAAAAAAGMEABvfBaUBAAAA");
    }

    @Test
    public void test10550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10550");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        int int6 = bigIntegerModelValue4.asInt((int) (short) 1);
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode10 = modelNode7.set("hi!", 0.0d);
        java.lang.String str11 = modelNode7.toString();
        org.jboss.dmr.ModelNode modelNode12 = modelNode7.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode14 = modelNode7.set(100);
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode18 = modelNode15.set("hi!", 0.0d);
        java.lang.String str19 = modelNode15.toString();
        org.jboss.dmr.ModelNode modelNode20 = modelNode15.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode22 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode25 = modelNode22.set("hi!", 0.0d);
        org.jboss.dmr.Property property26 = new org.jboss.dmr.Property("", modelNode25);
        org.jboss.dmr.ModelNode modelNode27 = modelNode15.set(property26);
        java.lang.String str28 = modelNode27.asString();
        org.jboss.dmr.ModelNode modelNode29 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode32 = modelNode29.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList33 = modelNode32.asList();
        org.jboss.dmr.ListModelValue listModelValue34 = new org.jboss.dmr.ListModelValue(modelNodeList33);
        org.jboss.dmr.ModelNode modelNode35 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue34);
        org.jboss.dmr.ModelValue modelValue36 = listModelValue34.resolve();
        int int38 = listModelValue34.asInt((int) (byte) 100);
        boolean boolean39 = listModelValue34.asBoolean();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList40 = listModelValue34.asList();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList41 = modelNode27.asList(modelNodeList40);
        org.jboss.dmr.ModelNode modelNode42 = modelNode14.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList40);
        boolean boolean43 = bigIntegerModelValue4.equals((java.lang.Object) modelNode14);
        org.jboss.dmr.ModelType modelType44 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode45 = new org.jboss.dmr.ModelNode(modelType44);
        org.jboss.dmr.ModelNode modelNode47 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode50 = modelNode47.set("hi!", 0.0d);
        org.jboss.dmr.Property property51 = new org.jboss.dmr.Property("", modelNode50);
        org.jboss.dmr.ModelNode modelNode52 = modelNode45.set(property51);
        org.jboss.dmr.PropertyModelValue propertyModelValue53 = new org.jboss.dmr.PropertyModelValue(property51);
        org.jboss.dmr.PropertyModelValue propertyModelValue54 = new org.jboss.dmr.PropertyModelValue(property51);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList55 = propertyModelValue54.asList();
        boolean boolean56 = bigIntegerModelValue4.equals((java.lang.Object) propertyModelValue54);
        double double58 = bigIntegerModelValue4.asDouble((double) 10);
        java.math.BigInteger bigInteger59 = bigIntegerModelValue4.asBigInteger();
        long long60 = bigIntegerModelValue4.asLong();
        long long61 = bigIntegerModelValue4.asLong();
        org.jboss.dmr.ValueExpression valueExpression62 = bigIntegerModelValue4.asExpression();
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(\"hi!\" => 0.0)" + "'", str11, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(\"hi!\" => 0.0)" + "'", str19, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(\"\" => (\"hi!\" => 0.0))" + "'", str28, "(\"\" => (\"hi!\" => 0.0))");
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertNotNull(modelNodeList33);
        org.junit.Assert.assertNotNull(modelValue36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(modelNodeList40);
        org.junit.Assert.assertNotNull(modelNodeList41);
        org.junit.Assert.assertNotNull(modelNode42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + modelType44 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType44.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode50);
        org.junit.Assert.assertNotNull(modelNode52);
        org.junit.Assert.assertNotNull(modelNodeList55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(bigInteger59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 1L + "'", long60 == 1L);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 1L + "'", long61 == 1L);
        org.junit.Assert.assertNotNull(valueExpression62);
    }

    @Test
    public void test10551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10551");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        int int3 = longModelValue1.asInt((int) (byte) 0);
        org.jboss.dmr.LongModelValue longModelValue5 = new org.jboss.dmr.LongModelValue((-1L));
        long long7 = longModelValue5.asLong((long) (byte) -1);
        double double9 = longModelValue5.asDouble((double) 10.0f);
        boolean boolean10 = longModelValue1.equals(longModelValue5);
        boolean boolean12 = longModelValue1.asBoolean(false);
        byte[] byteArray13 = longModelValue1.asBytes();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.jboss.dmr.ModelNode> modelNodeList14 = longModelValue1.asList();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1.0d) + "'", double9 == (-1.0d));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[0, 0, 0, 0, 0, 0, 0, 1]");
    }

    @Test
    public void test10552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10552");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isLong();
        boolean boolean17 = modelReader15.isBigDecimal();
        boolean boolean18 = modelReader15.isUndefined();
        boolean boolean19 = modelReader15.isBytes();
        boolean boolean20 = modelReader15.isType();
        boolean boolean21 = modelReader15.isBigDecimal();
        // The following exception was thrown during execution in test generation
        try {
            modelReader15.close();
            org.junit.Assert.fail("Expected exception of type org.jboss.dmr.stream.ModelException; message: Uncomplete DMR stream have been read");
        } catch (org.jboss.dmr.stream.ModelException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test10553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10553");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.PROPERTY;
        char char1 = modelType0.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue2 = org.jboss.dmr.TypeModelValue.of(modelType0);
        org.jboss.dmr.ModelType modelType3 = org.jboss.dmr.ModelType.PROPERTY;
        char char4 = modelType3.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue5 = org.jboss.dmr.TypeModelValue.of(modelType3);
        boolean boolean6 = typeModelValue2.equals(typeModelValue5);
        java.lang.String str7 = typeModelValue5.asString();
        org.jboss.dmr.ModelType modelType8 = org.jboss.dmr.ModelType.PROPERTY;
        char char9 = modelType8.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue10 = org.jboss.dmr.TypeModelValue.of(modelType8);
        org.jboss.dmr.ModelType modelType11 = org.jboss.dmr.ModelType.PROPERTY;
        char char12 = modelType11.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue13 = org.jboss.dmr.TypeModelValue.of(modelType11);
        boolean boolean14 = typeModelValue10.equals(typeModelValue13);
        java.lang.String str15 = typeModelValue13.asString();
        boolean boolean17 = typeModelValue13.asBoolean(true);
        boolean boolean18 = typeModelValue5.equals(typeModelValue13);
        org.jboss.dmr.ValueExpression valueExpression19 = typeModelValue13.asExpression();
        org.jboss.dmr.ModelType modelType20 = org.jboss.dmr.ModelType.PROPERTY;
        char char21 = modelType20.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue22 = org.jboss.dmr.TypeModelValue.of(modelType20);
        boolean boolean23 = typeModelValue22.asBoolean();
        boolean boolean24 = typeModelValue13.equals(typeModelValue22);
        org.jboss.dmr.LongModelValue longModelValue26 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str27 = longModelValue26.asString();
        byte[] byteArray28 = longModelValue26.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue29 = new org.jboss.dmr.BytesModelValue(byteArray28);
        java.lang.String str30 = bytesModelValue29.asString();
        int int31 = bytesModelValue29.asInt();
        long long33 = bytesModelValue29.asLong((long) (short) 1);
        int int34 = bytesModelValue29.asInt();
        double double35 = bytesModelValue29.asDouble();
        double double37 = bytesModelValue29.asDouble((double) (short) 0);
        byte[] byteArray38 = bytesModelValue29.asBytes();
        boolean boolean39 = typeModelValue13.equals((java.lang.Object) bytesModelValue29);
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType0.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char1 + "' != '" + 'p' + "'", char1 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue2);
        org.junit.Assert.assertTrue("'" + modelType3 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType3.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char4 + "' != '" + 'p' + "'", char4 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PROPERTY" + "'", str7, "PROPERTY");
        org.junit.Assert.assertTrue("'" + modelType8 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType8.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char9 + "' != '" + 'p' + "'", char9 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue10);
        org.junit.Assert.assertTrue("'" + modelType11 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType11.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char12 + "' != '" + 'p' + "'", char12 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PROPERTY" + "'", str15, "PROPERTY");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(valueExpression19);
        org.junit.Assert.assertTrue("'" + modelType20 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType20.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char21 + "' != '" + 'p' + "'", char21 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1" + "'", str27, "1");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str30, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 1L + "'", long33 == 1L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 4.9E-324d + "'", double35 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.9E-324d + "'", double37 == 4.9E-324d);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test10554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10554");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.PROPERTY;
        char char1 = modelType0.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue2 = org.jboss.dmr.TypeModelValue.of(modelType0);
        org.jboss.dmr.ModelType modelType3 = org.jboss.dmr.ModelType.PROPERTY;
        char char4 = modelType3.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue5 = org.jboss.dmr.TypeModelValue.of(modelType3);
        boolean boolean6 = typeModelValue2.equals(typeModelValue5);
        java.lang.String str7 = typeModelValue5.asString();
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = modelNode11.asList();
        org.jboss.dmr.ListModelValue listModelValue13 = new org.jboss.dmr.ListModelValue(modelNodeList12);
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue13);
        org.jboss.dmr.ModelValue modelValue15 = listModelValue13.resolve();
        int int17 = listModelValue13.asInt((int) (byte) 100);
        boolean boolean18 = listModelValue13.asBoolean();
        org.jboss.dmr.ModelNode[] modelNodeArray19 = org.jboss.dmr.ListModelValue.NO_NODES;
        boolean boolean20 = listModelValue13.equals((java.lang.Object) modelNodeArray19);
        boolean boolean21 = typeModelValue5.equals((java.lang.Object) listModelValue13);
        org.jboss.dmr.ModelValue modelValue22 = listModelValue13.resolve();
        org.jboss.dmr.ModelValue modelValue23 = listModelValue13.protect();
        boolean boolean25 = listModelValue13.has((int) (short) -1);
        org.jboss.dmr.ModelValue modelValue26 = listModelValue13.resolve();
        org.jboss.dmr.ModelNode modelNode28 = listModelValue13.requireChild((int) (short) 0);
        long long29 = listModelValue13.asLong();
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType0.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char1 + "' != '" + 'p' + "'", char1 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue2);
        org.junit.Assert.assertTrue("'" + modelType3 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType3.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char4 + "' != '" + 'p' + "'", char4 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PROPERTY" + "'", str7, "PROPERTY");
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNodeList12);
        org.junit.Assert.assertNotNull(modelValue15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(modelNodeArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(modelValue22);
        org.junit.Assert.assertNotNull(modelValue23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(modelValue26);
        org.junit.Assert.assertNotNull(modelNode28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1L + "'", long29 == 1L);
    }

    @Test
    public void test10555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10555");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        java.lang.String str5 = bigIntegerModelValue4.asString();
        long long7 = bigIntegerModelValue4.asLong(32L);
        double double8 = bigIntegerModelValue4.asDouble();
        java.math.BigInteger bigInteger9 = bigIntegerModelValue4.asBigInteger();
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1" + "'", str5, "1");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(bigInteger9);
    }

    @Test
    public void test10556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10556");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str2 = longModelValue1.asString();
        byte[] byteArray3 = longModelValue1.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue4 = new org.jboss.dmr.BytesModelValue(byteArray3);
        java.lang.String str5 = bytesModelValue4.asString();
        long long6 = bytesModelValue4.asLong();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1" + "'", str2, "1");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str5, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
    }

    @Test
    public void test10557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10557");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        boolean boolean4 = objectModelValue0.has((int) 'a');
        boolean boolean6 = objectModelValue0.has("");
        org.jboss.dmr.ObjectModelValue objectModelValue7 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode8 = objectModelValue7.asObject();
        java.util.Set<java.lang.String> strSet9 = objectModelValue7.getKeys();
        boolean boolean11 = objectModelValue7.has((int) 'a');
        boolean boolean12 = objectModelValue0.equals(objectModelValue7);
        org.jboss.dmr.ModelNode modelNode13 = objectModelValue7.asObject();
        java.util.List<org.jboss.dmr.Property> propertyList14 = objectModelValue7.asPropertyList();
        int int15 = objectModelValue7.asInt();
        boolean boolean17 = objectModelValue7.asBoolean(true);
        org.jboss.dmr.StringModelValue stringModelValue19 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.StringModelValue stringModelValue21 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        boolean boolean22 = stringModelValue19.equals(stringModelValue21);
        byte[] byteArray23 = stringModelValue21.asBytes();
        org.jboss.dmr.ValueExpression valueExpression24 = stringModelValue21.asExpression();
        java.lang.String str25 = stringModelValue21.asString();
        boolean boolean26 = objectModelValue7.equals((java.lang.Object) str25);
        org.jboss.dmr.ModelValue modelValue27 = objectModelValue7.copy();
        java.lang.String str28 = objectModelValue7.asString();
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(propertyList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[40, 34, 34, 32, 61, 62, 32, 40, 34, 104, 105, 33, 34, 32, 61, 62, 32, 48, 46, 48, 41, 41]");
        org.junit.Assert.assertNotNull(valueExpression24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(\"\" => (\"hi!\" => 0.0))" + "'", str25, "(\"\" => (\"hi!\" => 0.0))");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(modelValue27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "{}" + "'", str28, "{}");
    }

    @Test
    public void test10558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10558");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        boolean boolean2 = doubleModelValue1.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression3 = doubleModelValue1.asExpression();
        boolean boolean5 = doubleModelValue1.asBoolean(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test10559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10559");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("rO0ABXNyABNqYXZhLmxhbmcuQ2hhcmFjdGVyNItH2WsaJngCAAFDAAV2YWx1ZXhwAGI=");
        org.jboss.dmr.StringModelValue stringModelValue3 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        org.jboss.dmr.ValueExpression valueExpression4 = stringModelValue3.asExpression();
        boolean boolean6 = stringModelValue3.equals((java.lang.Object) (-1.0d));
        boolean boolean7 = stringModelValue1.equals(stringModelValue3);
        java.io.DataOutput dataOutput8 = null;
        // The following exception was thrown during execution in test generation
        try {
            stringModelValue1.writeExternal(dataOutput8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(valueExpression4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test10560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10560");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        java.lang.String str5 = bigIntegerModelValue4.asString();
        long long7 = bigIntegerModelValue4.asLong(32L);
        double double8 = bigIntegerModelValue4.asDouble();
        org.jboss.dmr.BooleanModelValue booleanModelValue9 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double10 = booleanModelValue9.asDouble();
        org.jboss.dmr.ModelValue modelValue11 = booleanModelValue9.copy();
        java.math.BigInteger bigInteger12 = booleanModelValue9.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue13 = new org.jboss.dmr.BigIntegerModelValue(bigInteger12);
        double double15 = bigIntegerModelValue13.asDouble((double) 'b');
        boolean boolean16 = bigIntegerModelValue4.equals(bigIntegerModelValue13);
        org.jboss.dmr.ValueExpression valueExpression17 = bigIntegerModelValue4.asExpression();
        org.jboss.dmr.ModelValue modelValue18 = bigIntegerModelValue4.protect();
        org.jboss.dmr.DoubleModelValue doubleModelValue20 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long21 = doubleModelValue20.asLong();
        boolean boolean22 = doubleModelValue20.asBoolean();
        byte[] byteArray23 = doubleModelValue20.asBytes();
        int int25 = doubleModelValue20.asInt((int) ' ');
        byte[] byteArray26 = doubleModelValue20.asBytes();
        boolean boolean27 = bigIntegerModelValue4.equals((java.lang.Object) byteArray26);
        org.jboss.dmr.BooleanModelValue booleanModelValue28 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double29 = booleanModelValue28.asDouble();
        org.jboss.dmr.ModelValue modelValue30 = booleanModelValue28.copy();
        java.math.BigInteger bigInteger31 = booleanModelValue28.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue32 = new org.jboss.dmr.BigIntegerModelValue(bigInteger31);
        boolean boolean33 = bigIntegerModelValue4.equals(bigIntegerModelValue32);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode35 = bigIntegerModelValue4.insertChild(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1" + "'", str5, "1");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(booleanModelValue9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue11);
        org.junit.Assert.assertNotNull(bigInteger12);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(valueExpression17);
        org.junit.Assert.assertNotNull(modelValue18);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10L + "'", long21 == 10L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(booleanModelValue28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue30);
        org.junit.Assert.assertNotNull(bigInteger31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test10561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10561");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.removeChild("hi!");
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList5 = objectModelValue0.asList();
        org.jboss.dmr.ModelNode modelNode6 = objectModelValue0.asObject();
        org.jboss.dmr.BooleanModelValue booleanModelValue7 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double8 = booleanModelValue7.asDouble();
        org.jboss.dmr.ModelValue modelValue9 = booleanModelValue7.copy();
        java.math.BigInteger bigInteger10 = booleanModelValue7.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue11 = new org.jboss.dmr.BigIntegerModelValue(bigInteger10);
        int int13 = bigIntegerModelValue11.asInt((int) (short) 1);
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode17 = modelNode14.set("hi!", 0.0d);
        java.lang.String str18 = modelNode14.toString();
        org.jboss.dmr.ModelNode modelNode19 = modelNode14.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode21 = modelNode14.set(100);
        org.jboss.dmr.ModelNode modelNode22 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode25 = modelNode22.set("hi!", 0.0d);
        java.lang.String str26 = modelNode22.toString();
        org.jboss.dmr.ModelNode modelNode27 = modelNode22.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode29 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode32 = modelNode29.set("hi!", 0.0d);
        org.jboss.dmr.Property property33 = new org.jboss.dmr.Property("", modelNode32);
        org.jboss.dmr.ModelNode modelNode34 = modelNode22.set(property33);
        java.lang.String str35 = modelNode34.asString();
        org.jboss.dmr.ModelNode modelNode36 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode39 = modelNode36.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList40 = modelNode39.asList();
        org.jboss.dmr.ListModelValue listModelValue41 = new org.jboss.dmr.ListModelValue(modelNodeList40);
        org.jboss.dmr.ModelNode modelNode42 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue41);
        org.jboss.dmr.ModelValue modelValue43 = listModelValue41.resolve();
        int int45 = listModelValue41.asInt((int) (byte) 100);
        boolean boolean46 = listModelValue41.asBoolean();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList47 = listModelValue41.asList();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList48 = modelNode34.asList(modelNodeList47);
        org.jboss.dmr.ModelNode modelNode49 = modelNode21.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList47);
        boolean boolean50 = bigIntegerModelValue11.equals((java.lang.Object) modelNode21);
        double double51 = bigIntegerModelValue11.asDouble();
        org.jboss.dmr.LongModelValue longModelValue53 = new org.jboss.dmr.LongModelValue((-1L));
        long long55 = longModelValue53.asLong((long) (byte) -1);
        byte[] byteArray56 = longModelValue53.asBytes();
        boolean boolean57 = bigIntegerModelValue11.equals((java.lang.Object) byteArray56);
        org.jboss.dmr.BytesModelValue bytesModelValue58 = new org.jboss.dmr.BytesModelValue(byteArray56);
        org.jboss.dmr.ModelNode modelNode59 = modelNode6.set(byteArray56);
        org.jboss.dmr.ModelNode modelNode61 = modelNode6.set((long) '#');
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode63 = modelNode6.insert((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNodeList5);
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(booleanModelValue7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue9);
        org.junit.Assert.assertNotNull(bigInteger10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(\"hi!\" => 0.0)" + "'", str18, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(modelNode21);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(\"hi!\" => 0.0)" + "'", str26, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertNotNull(modelNode34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(\"\" => (\"hi!\" => 0.0))" + "'", str35, "(\"\" => (\"hi!\" => 0.0))");
        org.junit.Assert.assertNotNull(modelNode39);
        org.junit.Assert.assertNotNull(modelNodeList40);
        org.junit.Assert.assertNotNull(modelValue43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(modelNodeList47);
        org.junit.Assert.assertNotNull(modelNodeList48);
        org.junit.Assert.assertNotNull(modelNode49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[-1, -1, -1, -1, -1, -1, -1, -1]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(modelNode59);
        org.junit.Assert.assertNotNull(modelNode61);
    }

    @Test
    public void test10562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10562");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        int int6 = bigIntegerModelValue4.asInt((int) (short) 1);
        org.jboss.dmr.BooleanModelValue booleanModelValue7 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double8 = booleanModelValue7.asDouble();
        org.jboss.dmr.ModelValue modelValue9 = booleanModelValue7.copy();
        java.math.BigInteger bigInteger10 = booleanModelValue7.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue11 = new org.jboss.dmr.BigIntegerModelValue(bigInteger10);
        java.lang.String str12 = bigIntegerModelValue11.asString();
        java.math.BigInteger bigInteger13 = bigIntegerModelValue11.asBigInteger();
        boolean boolean14 = bigIntegerModelValue4.equals(bigIntegerModelValue11);
        double double16 = bigIntegerModelValue4.asDouble(0.0d);
        double double18 = bigIntegerModelValue4.asDouble((double) 100.0f);
        java.math.BigInteger bigInteger19 = bigIntegerModelValue4.asBigInteger();
        java.math.BigInteger bigInteger20 = bigIntegerModelValue4.asBigInteger();
        org.jboss.dmr.BooleanModelValue booleanModelValue22 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray23 = booleanModelValue22.asBytes();
        java.lang.String str24 = booleanModelValue22.asString();
        int int25 = booleanModelValue22.asInt();
        long long26 = booleanModelValue22.asLong();
        boolean boolean28 = booleanModelValue22.equals((java.lang.Object) '4');
        java.math.BigInteger bigInteger29 = booleanModelValue22.asBigInteger();
        java.math.BigInteger bigInteger30 = booleanModelValue22.asBigInteger();
        java.math.BigDecimal bigDecimal31 = booleanModelValue22.asBigDecimal();
        boolean boolean32 = bigIntegerModelValue4.equals((java.lang.Object) bigDecimal31);
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue33 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal31);
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanModelValue7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue9);
        org.junit.Assert.assertNotNull(bigInteger10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1" + "'", str12, "1");
        org.junit.Assert.assertNotNull(bigInteger13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(bigInteger19);
        org.junit.Assert.assertNotNull(bigInteger20);
        org.junit.Assert.assertNotNull(booleanModelValue22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "true" + "'", str24, "true");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(bigInteger29);
        org.junit.Assert.assertNotNull(bigInteger30);
        org.junit.Assert.assertNotNull(bigDecimal31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test10563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10563");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        java.lang.String str2 = stringModelValue1.toString();
        org.jboss.dmr.ValueExpression valueExpression3 = stringModelValue1.asExpression();
        // The following exception was thrown during execution in test generation
        try {
            java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: null");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"(\\\"\\\" => (\\\"hi!\\\" => 0.0))\"" + "'", str2, "\"(\\\"\\\" => (\\\"hi!\\\" => 0.0))\"");
        org.junit.Assert.assertNotNull(valueExpression3);
    }

    @Test
    public void test10564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10564");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.setExpression("hi!", "hi!");
        java.lang.String str4 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode0);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList5 = modelNode0.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode7 = modelNode0.set((double) 0);
        org.jboss.dmr.ModelNode modelNode8 = modelNode0.clear();
        int int10 = modelNode8.asInt(112);
        org.jboss.dmr.ModelNode modelNode11 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode14 = modelNode11.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList15 = modelNode14.asList();
        org.jboss.dmr.ModelNode modelNode18 = modelNode14.setExpression("hi!", "(\"hi!\" => 0.0)");
        java.util.Set<java.lang.String> strSet19 = modelNode18.keys();
        boolean boolean20 = modelNode8.equals(modelNode18);
        org.jboss.dmr.ModelNode modelNode22 = modelNode8.add((long) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            java.math.BigDecimal bigDecimal23 = modelNode8.asBigDecimal();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str4, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList5);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 112 + "'", int10 == 112);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(modelNodeList15);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(modelNode22);
    }

    @Test
    public void test10565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10565");
        org.jboss.dmr.BooleanModelValue booleanModelValue1 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long2 = booleanModelValue1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = booleanModelValue1.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue4 = new org.jboss.dmr.ExpressionValue(valueExpression3);
        org.jboss.dmr.BooleanModelValue booleanModelValue5 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double6 = booleanModelValue5.asDouble();
        org.jboss.dmr.ModelValue modelValue7 = booleanModelValue5.copy();
        java.math.BigInteger bigInteger8 = booleanModelValue5.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue9 = new org.jboss.dmr.BigIntegerModelValue(bigInteger8);
        java.lang.String str10 = bigIntegerModelValue9.asString();
        java.math.BigInteger bigInteger11 = bigIntegerModelValue9.asBigInteger();
        org.jboss.dmr.ModelNode modelNode12 = new org.jboss.dmr.ModelNode(bigInteger11);
        org.jboss.dmr.LongModelValue longModelValue14 = new org.jboss.dmr.LongModelValue((-1L));
        long long16 = longModelValue14.asLong((long) (byte) -1);
        int int18 = longModelValue14.asInt(0);
        org.jboss.dmr.ValueExpression valueExpression19 = longModelValue14.asExpression();
        org.jboss.dmr.ModelNode modelNode20 = modelNode12.set(valueExpression19);
        org.jboss.dmr.DoubleModelValue doubleModelValue22 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long23 = doubleModelValue22.asLong();
        boolean boolean24 = doubleModelValue22.asBoolean();
        byte[] byteArray25 = doubleModelValue22.asBytes();
        int int27 = doubleModelValue22.asInt((int) ' ');
        boolean boolean28 = doubleModelValue22.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression29 = doubleModelValue22.asExpression();
        org.jboss.dmr.BooleanModelValue booleanModelValue31 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long32 = booleanModelValue31.asLong();
        org.jboss.dmr.ValueExpression valueExpression33 = booleanModelValue31.asExpression();
        java.lang.String str34 = valueExpression33.toString();
        org.jboss.dmr.ExpressionValue expressionValue36 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ValueExpression valueExpression37 = expressionValue36.asExpression();
        boolean boolean38 = valueExpression33.equals(valueExpression37);
        org.jboss.dmr.LongModelValue longModelValue40 = new org.jboss.dmr.LongModelValue((long) '4');
        java.math.BigDecimal bigDecimal41 = longModelValue40.asBigDecimal();
        int int42 = longModelValue40.asInt();
        org.jboss.dmr.ValueExpression valueExpression43 = longModelValue40.asExpression();
        boolean boolean44 = valueExpression37.equals(valueExpression43);
        int int45 = valueExpression43.resolveInt();
        org.jboss.dmr.BooleanModelValue booleanModelValue47 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long48 = booleanModelValue47.asLong();
        org.jboss.dmr.ValueExpression valueExpression49 = booleanModelValue47.asExpression();
        java.lang.String str50 = valueExpression49.toString();
        org.jboss.dmr.ExpressionValue expressionValue52 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ValueExpression valueExpression53 = expressionValue52.asExpression();
        boolean boolean54 = valueExpression49.equals(valueExpression53);
        java.lang.String str55 = valueExpression53.resolveString();
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver56 = new org.jboss.dmr.ValueExpressionResolver();
        java.lang.String str57 = valueExpression53.resolveString(valueExpressionResolver56);
        java.lang.String str58 = valueExpression43.resolveString(valueExpressionResolver56);
        java.lang.String str59 = valueExpression29.resolveString(valueExpressionResolver56);
        long long60 = valueExpression19.resolveLong(valueExpressionResolver56);
        java.lang.String str61 = valueExpression3.resolveString(valueExpressionResolver56);
        java.io.ObjectInput objectInput62 = null;
        // The following exception was thrown during execution in test generation
        try {
            valueExpression3.readExternal(objectInput62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanModelValue1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(booleanModelValue5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue7);
        org.junit.Assert.assertNotNull(bigInteger8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1" + "'", str10, "1");
        org.junit.Assert.assertNotNull(bigInteger11);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(valueExpression19);
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 10L + "'", long23 == 10L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(valueExpression29);
        org.junit.Assert.assertNotNull(booleanModelValue31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertNotNull(valueExpression33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Expression \"true\"" + "'", str34, "Expression \"true\"");
        org.junit.Assert.assertNotNull(valueExpression37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(bigDecimal41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertNotNull(valueExpression43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNotNull(booleanModelValue47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertNotNull(valueExpression49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Expression \"true\"" + "'", str50, "Expression \"true\"");
        org.junit.Assert.assertNotNull(valueExpression53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "52" + "'", str58, "52");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "10.0" + "'", str59, "10.0");
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "true" + "'", str61, "true");
    }

    @Test
    public void test10566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10566");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue5);
        org.jboss.dmr.IntModelValue intModelValue8 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str9 = intModelValue8.asString();
        double double11 = intModelValue8.asDouble((double) 2);
        java.math.BigInteger bigInteger12 = intModelValue8.asBigInteger();
        java.math.BigInteger bigInteger13 = intModelValue8.asBigInteger();
        byte[] byteArray14 = intModelValue8.asBytes();
        java.lang.String str15 = org.jboss.dmr.Base64.encodeBytes(byteArray14);
        boolean boolean16 = listModelValue5.equals((java.lang.Object) str15);
        java.util.List<org.jboss.dmr.Property> propertyList17 = listModelValue5.asPropertyList();
        java.lang.String str18 = listModelValue5.asString();
        org.jboss.dmr.ModelNode modelNode19 = listModelValue5.asObject();
        org.jboss.dmr.ModelNode modelNode20 = listModelValue5.asObject();
        boolean boolean21 = listModelValue5.asBoolean();
        java.util.List<org.jboss.dmr.Property> propertyList22 = listModelValue5.asPropertyList();
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "32" + "'", str9, "32");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 32.0d + "'", double11 == 32.0d);
        org.junit.Assert.assertNotNull(bigInteger12);
        org.junit.Assert.assertNotNull(bigInteger13);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 0, 0, 32]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AAAAIA==" + "'", str15, "AAAAIA==");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(propertyList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str18, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(propertyList22);
    }

    @Test
    public void test10567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10567");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        java.lang.String str5 = bigIntegerModelValue4.asString();
        long long7 = bigIntegerModelValue4.asLong(32L);
        double double8 = bigIntegerModelValue4.asDouble();
        org.jboss.dmr.BooleanModelValue booleanModelValue9 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double10 = booleanModelValue9.asDouble();
        org.jboss.dmr.ModelValue modelValue11 = booleanModelValue9.copy();
        java.math.BigInteger bigInteger12 = booleanModelValue9.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue13 = new org.jboss.dmr.BigIntegerModelValue(bigInteger12);
        double double15 = bigIntegerModelValue13.asDouble((double) 'b');
        boolean boolean16 = bigIntegerModelValue4.equals(bigIntegerModelValue13);
        boolean boolean18 = bigIntegerModelValue13.equals((java.lang.Object) "35");
        java.math.BigDecimal bigDecimal19 = bigIntegerModelValue13.asBigDecimal();
        org.jboss.dmr.IntModelValue intModelValue21 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long23 = intModelValue21.asLong((long) 'b');
        java.lang.String str24 = intModelValue21.asString();
        java.math.BigInteger bigInteger25 = intModelValue21.asBigInteger();
        boolean boolean27 = intModelValue21.asBoolean(false);
        org.jboss.dmr.IntModelValue intModelValue29 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long31 = intModelValue29.asLong((long) 'b');
        java.lang.String str32 = intModelValue29.asString();
        boolean boolean33 = intModelValue21.equals(intModelValue29);
        byte[] byteArray34 = intModelValue29.asBytes();
        org.jboss.dmr.IntModelValue intModelValue36 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str37 = intModelValue36.asString();
        double double39 = intModelValue36.asDouble((double) 2);
        int int40 = intModelValue36.asInt();
        byte[] byteArray41 = intModelValue36.asBytes();
        long long42 = intModelValue36.asLong();
        boolean boolean43 = intModelValue29.equals(intModelValue36);
        java.lang.String str44 = intModelValue29.asString();
        boolean boolean45 = intModelValue29.asBoolean();
        org.jboss.dmr.StringModelValue stringModelValue47 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory49 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream50 = null;
        org.jboss.dmr.Base64.InputStream inputStream52 = new org.jboss.dmr.Base64.InputStream(inputStream50, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream53 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream52);
        org.jboss.dmr.stream.ModelReader modelReader54 = modelStreamFactory49.newModelReader((java.io.InputStream) inputStream53);
        java.io.OutputStream outputStream55 = null;
        org.jboss.dmr.Base64.OutputStream outputStream56 = new org.jboss.dmr.Base64.OutputStream(outputStream55);
        org.jboss.dmr.Base64.OutputStream outputStream57 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream56);
        outputStream56.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter60 = modelStreamFactory49.newModelWriter((java.io.OutputStream) outputStream56);
        org.jboss.dmr.stream.ModelWriter modelWriter61 = modelWriter60.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter63 = modelWriter61.writeInt((int) (byte) 10);
        stringModelValue47.write(modelWriter63);
        org.jboss.dmr.stream.ModelWriter modelWriter66 = modelWriter63.writeBoolean(false);
        intModelValue29.write(modelWriter66);
        org.jboss.dmr.stream.ModelWriter modelWriter68 = modelWriter66.writeObjectStart();
        // The following exception was thrown during execution in test generation
        try {
            bigIntegerModelValue13.write(modelWriter68);
            org.junit.Assert.fail("Expected exception of type org.jboss.dmr.stream.ModelException; message: Expecting OBJECT_END or STRING");
        } catch (org.jboss.dmr.stream.ModelException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1" + "'", str5, "1");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(booleanModelValue9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue11);
        org.junit.Assert.assertNotNull(bigInteger12);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(bigDecimal19);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 32L + "'", long23 == 32L);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "32" + "'", str24, "32");
        org.junit.Assert.assertNotNull(bigInteger25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 32L + "'", long31 == 32L);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "32" + "'", str32, "32");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 0, 0, 32]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "32" + "'", str37, "32");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 32.0d + "'", double39 == 32.0d);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 32 + "'", int40 == 32);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[0, 0, 0, 32]");
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 32L + "'", long42 == 32L);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "32" + "'", str44, "32");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(modelStreamFactory49);
        org.junit.Assert.assertNotNull(modelReader54);
        org.junit.Assert.assertNotNull(modelWriter60);
        org.junit.Assert.assertNotNull(modelWriter61);
        org.junit.Assert.assertNotNull(modelWriter63);
        org.junit.Assert.assertNotNull(modelWriter66);
        org.junit.Assert.assertNotNull(modelWriter68);
    }

    @Test
    public void test10568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10568");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        java.lang.String str5 = bigIntegerModelValue4.asString();
        long long7 = bigIntegerModelValue4.asLong(32L);
        double double8 = bigIntegerModelValue4.asDouble();
        org.jboss.dmr.BooleanModelValue booleanModelValue9 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double10 = booleanModelValue9.asDouble();
        org.jboss.dmr.ModelValue modelValue11 = booleanModelValue9.copy();
        java.math.BigInteger bigInteger12 = booleanModelValue9.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue13 = new org.jboss.dmr.BigIntegerModelValue(bigInteger12);
        double double15 = bigIntegerModelValue13.asDouble((double) 'b');
        boolean boolean16 = bigIntegerModelValue4.equals(bigIntegerModelValue13);
        boolean boolean18 = bigIntegerModelValue13.equals((java.lang.Object) "35");
        java.io.OutputStream outputStream19 = null;
        org.jboss.dmr.Base64.OutputStream outputStream20 = new org.jboss.dmr.Base64.OutputStream(outputStream19);
        outputStream20.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream22 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream20);
        org.jboss.dmr.Base64.OutputStream outputStream23 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream22);
        boolean boolean24 = bigIntegerModelValue13.equals((java.lang.Object) outputStream23);
        long long25 = bigIntegerModelValue13.asLong();
        boolean boolean27 = bigIntegerModelValue13.asBoolean(false);
        java.math.BigDecimal bigDecimal28 = bigIntegerModelValue13.asBigDecimal();
        double double30 = bigIntegerModelValue13.asDouble((double) (-1L));
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1" + "'", str5, "1");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(booleanModelValue9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue11);
        org.junit.Assert.assertNotNull(bigInteger12);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(bigDecimal28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
    }

    @Test
    public void test10569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10569");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.setExpression("hi!", "hi!");
        org.jboss.dmr.ModelNode modelNode5 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode8 = modelNode5.set("hi!", 0.0d);
        org.jboss.dmr.Property property9 = new org.jboss.dmr.Property("", modelNode8);
        boolean boolean11 = modelNode8.equals((java.lang.Object) 100L);
        boolean boolean12 = modelNode0.equals(modelNode8);
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode17 = modelNode14.set("hi!", 0.0d);
        org.jboss.dmr.Property property18 = new org.jboss.dmr.Property("", modelNode17);
        java.lang.String[] strArray19 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode20 = modelNode17.get(strArray19);
        org.jboss.dmr.ModelNode modelNode21 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int22 = modelNode21.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode23 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode26 = modelNode23.setExpression("hi!", "hi!");
        java.lang.String str27 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode23);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList28 = modelNode23.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode29 = modelNode21.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList28);
        org.jboss.dmr.ModelNode modelNode30 = modelNode20.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList28);
        org.jboss.dmr.ModelNode modelNode31 = modelNode8.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList28);
        org.jboss.dmr.ModelNode modelNode33 = modelNode8.add("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4");
        org.jboss.dmr.ModelNode modelNode35 = modelNode8.add(false);
        // The following exception was thrown during execution in test generation
        try {
            java.math.BigDecimal bigDecimal36 = modelNode35.asBigDecimal();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str27, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList28);
        org.junit.Assert.assertNotNull(modelNode29);
        org.junit.Assert.assertNotNull(modelNode30);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(modelNode33);
        org.junit.Assert.assertNotNull(modelNode35);
    }

    @Test
    public void test10570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10570");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str2 = longModelValue1.asString();
        byte[] byteArray3 = longModelValue1.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue4 = new org.jboss.dmr.BytesModelValue(byteArray3);
        java.lang.String str5 = bytesModelValue4.asString();
        int int6 = bytesModelValue4.asInt();
        byte[] byteArray7 = bytesModelValue4.asBytes();
        long long9 = bytesModelValue4.asLong((long) 'b');
        java.io.PrintWriter printWriter10 = null;
        // The following exception was thrown during execution in test generation
        try {
            bytesModelValue4.format(printWriter10, (int) (short) 1, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1" + "'", str2, "1");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str5, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
    }

    @Test
    public void test10571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10571");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        java.lang.String str2 = doubleModelValue1.asString();
        byte[] byteArray3 = doubleModelValue1.asBytes();
        org.jboss.dmr.ModelNode modelNode4 = new org.jboss.dmr.ModelNode(byteArray3);
        boolean boolean5 = modelNode4.isDefined();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "10.0" + "'", str2, "10.0");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test10572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10572");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.setExpression("hi!", "hi!");
        java.lang.String str5 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode1);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList6 = modelNode1.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set((double) 0);
        org.jboss.dmr.ModelNode modelNode9 = modelNode1.clear();
        int int11 = modelNode9.asInt(112);
        org.jboss.dmr.ModelNode modelNode12 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode15 = modelNode12.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList16 = modelNode15.asList();
        org.jboss.dmr.ModelNode modelNode19 = modelNode15.setExpression("hi!", "(\"hi!\" => 0.0)");
        java.util.Set<java.lang.String> strSet20 = modelNode19.keys();
        boolean boolean21 = modelNode9.equals(modelNode19);
        org.jboss.dmr.ModelNode modelNode23 = modelNode9.add((long) (short) -1);
        org.jboss.dmr.ObjectModelValue objectModelValue24 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode25 = objectModelValue24.asObject();
        java.util.Set<java.lang.String> strSet26 = objectModelValue24.getKeys();
        org.jboss.dmr.ModelNode modelNode28 = objectModelValue24.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        boolean boolean29 = objectModelValue24.asBoolean();
        org.jboss.dmr.ModelNode modelNode31 = objectModelValue24.getChild("1L");
        org.jboss.dmr.ObjectModelValue objectModelValue32 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode33 = objectModelValue32.asObject();
        java.util.Set<java.lang.String> strSet34 = objectModelValue32.getKeys();
        org.jboss.dmr.ModelNode modelNode36 = objectModelValue32.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        boolean boolean37 = objectModelValue32.asBoolean();
        int int39 = objectModelValue32.asInt((int) 'b');
        int int41 = objectModelValue32.asInt((int) '#');
        boolean boolean42 = objectModelValue24.equals(objectModelValue32);
        int int43 = objectModelValue32.asInt();
        java.util.Set<java.lang.String> strSet44 = objectModelValue32.getKeys();
        long long46 = objectModelValue32.asLong((long) 0);
        org.jboss.dmr.ModelType modelType47 = org.jboss.dmr.ModelType.DOUBLE;
        org.jboss.dmr.ModelNode modelNode48 = new org.jboss.dmr.ModelNode(modelType47);
        org.jboss.dmr.LongModelValue longModelValue51 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str52 = longModelValue51.asString();
        byte[] byteArray53 = longModelValue51.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue54 = new org.jboss.dmr.BytesModelValue(byteArray53);
        java.lang.String str55 = bytesModelValue54.asString();
        int int56 = bytesModelValue54.asInt();
        long long58 = bytesModelValue54.asLong((long) (short) 1);
        long long59 = bytesModelValue54.asLong();
        java.math.BigDecimal bigDecimal60 = bytesModelValue54.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode61 = modelNode48.set("32", bigDecimal60);
        boolean boolean62 = objectModelValue32.equals((java.lang.Object) bigDecimal60);
        org.jboss.dmr.ModelNode modelNode63 = modelNode23.set(bigDecimal60);
        org.jboss.dmr.ObjectModelValue objectModelValue65 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode66 = objectModelValue65.asObject();
        org.jboss.dmr.ModelValue modelValue67 = objectModelValue65.copy();
        java.lang.String str68 = objectModelValue65.toString();
        org.jboss.dmr.ObjectModelValue objectModelValue69 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode70 = objectModelValue69.asObject();
        java.util.Set<java.lang.String> strSet71 = objectModelValue69.getKeys();
        org.jboss.dmr.ModelNode modelNode73 = objectModelValue69.removeChild("1");
        boolean boolean74 = objectModelValue69.asBoolean();
        boolean boolean75 = objectModelValue65.equals(objectModelValue69);
        long long76 = objectModelValue69.asLong();
        org.jboss.dmr.ModelNode modelNode78 = objectModelValue69.getChild("\"\\\"bytes {\\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01\\n}\\\"\"");
        org.jboss.dmr.ModelNode modelNode81 = modelNode78.add("QA==", (long) '4');
        org.jboss.dmr.BooleanModelValue booleanModelValue82 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double83 = booleanModelValue82.asDouble();
        org.jboss.dmr.ModelValue modelValue84 = booleanModelValue82.copy();
        java.math.BigInteger bigInteger85 = booleanModelValue82.asBigInteger();
        org.jboss.dmr.ModelNode modelNode86 = new org.jboss.dmr.ModelNode(bigInteger85);
        org.jboss.dmr.ModelNode modelNode87 = new org.jboss.dmr.ModelNode(bigInteger85);
        int int88 = modelNode87.asInt();
        boolean boolean89 = modelNode81.equals(modelNode87);
        org.jboss.dmr.ModelNode modelNode90 = modelNode23.setNoCopy("[2L]", modelNode87);
        java.math.BigDecimal bigDecimal91 = modelNode87.asBigDecimal();
        org.jboss.dmr.Property property93 = new org.jboss.dmr.Property("rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51\nbWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAIw==", modelNode87, false);
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str5, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 112 + "'", int11 == 112);
        org.junit.Assert.assertNotNull(modelNode15);
        org.junit.Assert.assertNotNull(modelNodeList16);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(modelNode23);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNull(modelNode28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(modelNode33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNull(modelNode36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + modelType47 + "' != '" + org.jboss.dmr.ModelType.DOUBLE + "'", modelType47.equals(org.jboss.dmr.ModelType.DOUBLE));
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1" + "'", str52, "1");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str55, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 1L + "'", long58 == 1L);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 1L + "'", long59 == 1L);
        org.junit.Assert.assertNotNull(bigDecimal60);
        org.junit.Assert.assertNotNull(modelNode61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(modelNode63);
        org.junit.Assert.assertNotNull(modelNode66);
        org.junit.Assert.assertNotNull(modelValue67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "{}" + "'", str68, "{}");
        org.junit.Assert.assertNotNull(modelNode70);
        org.junit.Assert.assertNotNull(strSet71);
        org.junit.Assert.assertNull(modelNode73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 0L + "'", long76 == 0L);
        org.junit.Assert.assertNotNull(modelNode78);
        org.junit.Assert.assertNotNull(modelNode81);
        org.junit.Assert.assertNotNull(booleanModelValue82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0d + "'", double83 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue84);
        org.junit.Assert.assertNotNull(bigInteger85);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(modelNode90);
        org.junit.Assert.assertNotNull(bigDecimal91);
    }

    @Test
    public void test10573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10573");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        org.jboss.dmr.ModelValue modelValue2 = objectModelValue0.protect();
        java.util.List<org.jboss.dmr.Property> propertyList3 = objectModelValue0.asPropertyList();
        java.lang.String str4 = objectModelValue0.asString();
        java.lang.String str5 = objectModelValue0.toString();
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(propertyList3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{}" + "'", str5, "{}");
    }

    @Test
    public void test10574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10574");
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode((int) 'a');
        org.jboss.dmr.ModelNode modelNode3 = modelNode2.setEmptyList();
        org.jboss.dmr.ObjectModelValue objectModelValue4 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode5 = objectModelValue4.asObject();
        java.util.Set<java.lang.String> strSet6 = objectModelValue4.getKeys();
        boolean boolean8 = objectModelValue4.has((int) 'a');
        boolean boolean10 = objectModelValue4.has("");
        org.jboss.dmr.ObjectModelValue objectModelValue11 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode12 = objectModelValue11.asObject();
        java.util.Set<java.lang.String> strSet13 = objectModelValue11.getKeys();
        boolean boolean15 = objectModelValue11.has((int) 'a');
        boolean boolean16 = objectModelValue4.equals(objectModelValue11);
        org.jboss.dmr.ModelNode modelNode17 = objectModelValue11.asObject();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList18 = objectModelValue11.asList();
        org.jboss.dmr.ModelNode modelNode19 = modelNode2.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList18);
        org.jboss.dmr.Property property21 = new org.jboss.dmr.Property("bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }", modelNode2, true);
        org.jboss.dmr.Property property22 = property21.clone();
        org.jboss.dmr.ModelNode modelNode23 = property21.getValue();
        java.lang.String str24 = property21.getName();
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertNotNull(modelNodeList18);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(property22);
        org.junit.Assert.assertNotNull(modelNode23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str24, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
    }

    @Test
    public void test10575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10575");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isPropertyStart();
        boolean boolean17 = modelReader15.isBigInteger();
        boolean boolean18 = modelReader15.isDouble();
        boolean boolean19 = modelReader15.isPropertyEnd();
        boolean boolean20 = modelReader15.isPropertyStart();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test10576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10576");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        java.lang.String str5 = modelNode1.toString();
        org.jboss.dmr.ModelNode modelNode6 = modelNode1.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        org.jboss.dmr.Property property12 = new org.jboss.dmr.Property("", modelNode11);
        org.jboss.dmr.ModelNode modelNode13 = modelNode1.set(property12);
        org.jboss.dmr.PropertyModelValue propertyModelValue15 = new org.jboss.dmr.PropertyModelValue("EXPRESSION_VALUE", modelNode13, false);
        java.util.Set<java.lang.String> strSet16 = propertyModelValue15.getKeys();
        java.util.List<org.jboss.dmr.Property> propertyList17 = propertyModelValue15.asPropertyList();
        org.jboss.dmr.ModelNode modelNode19 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode22 = modelNode19.set("hi!", 0.0d);
        java.lang.String str23 = modelNode19.toString();
        org.jboss.dmr.ModelNode modelNode24 = modelNode19.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode26 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode29 = modelNode26.set("hi!", 0.0d);
        org.jboss.dmr.Property property30 = new org.jboss.dmr.Property("", modelNode29);
        org.jboss.dmr.ModelNode modelNode31 = modelNode19.set(property30);
        org.jboss.dmr.PropertyModelValue propertyModelValue33 = new org.jboss.dmr.PropertyModelValue("EXPRESSION_VALUE", modelNode31, false);
        java.util.Set<java.lang.String> strSet34 = propertyModelValue33.getKeys();
        java.util.List<org.jboss.dmr.Property> propertyList35 = propertyModelValue33.asPropertyList();
        java.util.Set<java.lang.String> strSet36 = propertyModelValue33.getKeys();
        boolean boolean37 = propertyModelValue15.equals(propertyModelValue33);
        org.jboss.dmr.Property property38 = propertyModelValue15.asProperty();
        org.jboss.dmr.PropertyModelValue propertyModelValue39 = new org.jboss.dmr.PropertyModelValue(property38);
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(\"hi!\" => 0.0)" + "'", str5, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(propertyList17);
        org.junit.Assert.assertNotNull(modelNode22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(\"hi!\" => 0.0)" + "'", str23, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertNotNull(modelNode29);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(propertyList35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(property38);
    }

    @Test
    public void test10577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10577");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        org.jboss.dmr.ValueExpression valueExpression2 = stringModelValue1.asExpression();
        boolean boolean4 = stringModelValue1.equals((java.lang.Object) (-1.0d));
        java.lang.String str5 = stringModelValue1.asString();
        org.jboss.dmr.stream.ModelEvent modelEvent6 = org.jboss.dmr.stream.ModelEvent.UNDEFINED;
        boolean boolean7 = stringModelValue1.equals((java.lang.Object) modelEvent6);
        // The following exception was thrown during execution in test generation
        try {
            long long9 = stringModelValue1.asLong(11975582L);
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"(\"\" => (\"hi!\" => 0.0))\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(valueExpression2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(\"\" => (\"hi!\" => 0.0))" + "'", str5, "(\"\" => (\"hi!\" => 0.0))");
        org.junit.Assert.assertTrue("'" + modelEvent6 + "' != '" + org.jboss.dmr.stream.ModelEvent.UNDEFINED + "'", modelEvent6.equals(org.jboss.dmr.stream.ModelEvent.UNDEFINED));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test10578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10578");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        org.jboss.dmr.ModelValue modelValue2 = objectModelValue0.copy();
        java.lang.String str3 = objectModelValue0.toString();
        org.jboss.dmr.ObjectModelValue objectModelValue4 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode5 = objectModelValue4.asObject();
        java.util.Set<java.lang.String> strSet6 = objectModelValue4.getKeys();
        org.jboss.dmr.ModelNode modelNode8 = objectModelValue4.removeChild("1");
        boolean boolean9 = objectModelValue4.asBoolean();
        boolean boolean10 = objectModelValue0.equals(objectModelValue4);
        long long11 = objectModelValue4.asLong();
        java.util.Set<java.lang.String> strSet12 = objectModelValue4.getKeys();
        org.jboss.dmr.ModelNode modelNode14 = objectModelValue4.getChild("hi!");
        java.util.Set<java.lang.String> strSet15 = objectModelValue4.getKeys();
        org.jboss.dmr.ModelNode modelNode17 = objectModelValue4.removeChild("{ \"EXPRESSION_VALUE\" : \"AAAAAAAAAAo=\" }");
        org.jboss.dmr.ModelNode modelNode19 = objectModelValue4.getChild("true");
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{}" + "'", str3, "{}");
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNull(modelNode8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(modelNode17);
        org.junit.Assert.assertNotNull(modelNode19);
    }

    @Test
    public void test10579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10579");
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode((int) 'a');
        org.jboss.dmr.ModelNode modelNode3 = modelNode2.setEmptyList();
        org.jboss.dmr.ObjectModelValue objectModelValue4 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode5 = objectModelValue4.asObject();
        java.util.Set<java.lang.String> strSet6 = objectModelValue4.getKeys();
        boolean boolean8 = objectModelValue4.has((int) 'a');
        boolean boolean10 = objectModelValue4.has("");
        org.jboss.dmr.ObjectModelValue objectModelValue11 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode12 = objectModelValue11.asObject();
        java.util.Set<java.lang.String> strSet13 = objectModelValue11.getKeys();
        boolean boolean15 = objectModelValue11.has((int) 'a');
        boolean boolean16 = objectModelValue4.equals(objectModelValue11);
        org.jboss.dmr.ModelNode modelNode17 = objectModelValue11.asObject();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList18 = objectModelValue11.asList();
        org.jboss.dmr.ModelNode modelNode19 = modelNode2.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList18);
        org.jboss.dmr.Property property21 = new org.jboss.dmr.Property("bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }", modelNode2, true);
        org.jboss.dmr.ModelNode modelNode22 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode25 = modelNode22.setExpression("hi!", "hi!");
        java.lang.String str26 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode22);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList27 = modelNode22.asListOrEmpty();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList28 = modelNode2.asList(modelNodeList27);
        org.jboss.dmr.ModelNode modelNode31 = modelNode2.setExpression("{ \"35\" : 0.0 }", "{\n    \"org.jboss.dmr.stream.ModelException: [(\\\"hi!\\\" => 0.0)]\" : {\n        \"EXPRESSION_VALUE\" : \"true\"\n    }\n}");
        org.jboss.dmr.LongModelValue longModelValue33 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str34 = longModelValue33.asString();
        byte[] byteArray35 = longModelValue33.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue36 = new org.jboss.dmr.BytesModelValue(byteArray35);
        double double37 = bytesModelValue36.asDouble();
        org.jboss.dmr.ModelNode modelNode39 = new org.jboss.dmr.ModelNode((double) 100);
        org.jboss.dmr.ModelNode modelNode41 = modelNode39.set((int) '#');
        java.lang.Boolean boolean42 = modelNode39.asBooleanOrNull();
        java.lang.String str44 = modelNode39.asString("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        boolean boolean45 = bytesModelValue36.equals((java.lang.Object) modelNode39);
        byte[] byteArray46 = bytesModelValue36.asBytes();
        org.jboss.dmr.ModelNode modelNode47 = modelNode31.set(byteArray46);
        byte[] byteArray50 = org.jboss.dmr.Base64.decode(byteArray46, 112, (int) (short) 0);
        boolean boolean52 = org.jboss.dmr.Base64.encodeToFile(byteArray46, "AAAAIA==");
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertNotNull(modelNodeList18);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str26, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList27);
        org.junit.Assert.assertNotNull(modelNodeList28);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1" + "'", str34, "1");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.9E-324d + "'", double37 == 4.9E-324d);
        org.junit.Assert.assertNotNull(modelNode41);
        org.junit.Assert.assertEquals("'" + boolean42 + "' != '" + true + "'", boolean42, true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "35" + "'", str44, "35");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(modelNode47);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test10580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10580");
        org.jboss.dmr.ModelNode modelNode1 = org.jboss.dmr.ModelNode.fromString("\"rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3GXAAEGV4cHJlc3Np\\nb24gImhpISJiAAAAAQF4\"");
        boolean boolean3 = modelNode1.has((int) (short) 10);
        org.jboss.dmr.LongModelValue longModelValue5 = new org.jboss.dmr.LongModelValue(1L);
        int int7 = longModelValue5.asInt((int) (byte) 0);
        java.math.BigInteger bigInteger8 = longModelValue5.asBigInteger();
        double double10 = longModelValue5.asDouble((double) 1L);
        byte[] byteArray11 = longModelValue5.asBytes();
        org.jboss.dmr.ModelNode modelNode12 = modelNode1.set(byteArray11);
        org.jboss.dmr.ModelNode modelNode14 = modelNode1.set((long) (short) -1);
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(bigInteger8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNode14);
    }

    @Test
    public void test10581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10581");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        java.lang.String str6 = listModelValue5.asString();
        long long7 = listModelValue5.asLong();
        java.lang.String str8 = listModelValue5.asString();
        boolean boolean10 = listModelValue5.has((int) 'l');
        int int12 = listModelValue5.asInt((int) (short) 0);
        org.jboss.dmr.ModelType modelType13 = org.jboss.dmr.ModelType.PROPERTY;
        char char14 = modelType13.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue15 = org.jboss.dmr.TypeModelValue.of(modelType13);
        org.jboss.dmr.ModelType modelType16 = org.jboss.dmr.ModelType.PROPERTY;
        char char17 = modelType16.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue18 = org.jboss.dmr.TypeModelValue.of(modelType16);
        boolean boolean19 = typeModelValue15.equals(typeModelValue18);
        java.lang.String str20 = typeModelValue18.asString();
        org.jboss.dmr.ModelNode modelNode21 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode24 = modelNode21.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList25 = modelNode24.asList();
        org.jboss.dmr.ListModelValue listModelValue26 = new org.jboss.dmr.ListModelValue(modelNodeList25);
        org.jboss.dmr.ModelNode modelNode27 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue26);
        org.jboss.dmr.ModelValue modelValue28 = listModelValue26.resolve();
        int int30 = listModelValue26.asInt((int) (byte) 100);
        boolean boolean31 = listModelValue26.asBoolean();
        org.jboss.dmr.ModelNode[] modelNodeArray32 = org.jboss.dmr.ListModelValue.NO_NODES;
        boolean boolean33 = listModelValue26.equals((java.lang.Object) modelNodeArray32);
        boolean boolean34 = typeModelValue18.equals((java.lang.Object) listModelValue26);
        org.jboss.dmr.ModelValue modelValue35 = listModelValue26.resolve();
        org.jboss.dmr.ModelValue modelValue36 = listModelValue26.protect();
        boolean boolean38 = listModelValue26.has((int) (short) -1);
        org.jboss.dmr.ModelValue modelValue39 = listModelValue26.resolve();
        boolean boolean40 = listModelValue5.equals(listModelValue26);
        long long41 = listModelValue26.asLong();
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str6, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str8, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + modelType13 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType13.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char14 + "' != '" + 'p' + "'", char14 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue15);
        org.junit.Assert.assertTrue("'" + modelType16 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType16.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char17 + "' != '" + 'p' + "'", char17 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "PROPERTY" + "'", str20, "PROPERTY");
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertNotNull(modelNodeList25);
        org.junit.Assert.assertNotNull(modelValue28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(modelNodeArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(modelValue35);
        org.junit.Assert.assertNotNull(modelValue36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(modelValue39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
    }

    @Test
    public void test10582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10582");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str2 = longModelValue1.asString();
        byte[] byteArray3 = longModelValue1.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue4 = new org.jboss.dmr.BytesModelValue(byteArray3);
        double double5 = bytesModelValue4.asDouble();
        java.math.BigDecimal bigDecimal6 = bytesModelValue4.asBigDecimal();
        double double8 = bytesModelValue4.asDouble((double) (-1.0f));
        double double9 = bytesModelValue4.asDouble();
        double double11 = bytesModelValue4.asDouble((double) (-1.0f));
        double double12 = bytesModelValue4.asDouble();
        java.lang.String str13 = bytesModelValue4.asString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1" + "'", str2, "1");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.9E-324d + "'", double5 == 4.9E-324d);
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 4.9E-324d + "'", double8 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 4.9E-324d + "'", double9 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 4.9E-324d + "'", double11 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.9E-324d + "'", double12 == 4.9E-324d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str13, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
    }

    @Test
    public void test10583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10583");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        int int6 = bigIntegerModelValue4.asInt((int) (short) 1);
        org.jboss.dmr.BooleanModelValue booleanModelValue7 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double8 = booleanModelValue7.asDouble();
        org.jboss.dmr.ModelValue modelValue9 = booleanModelValue7.copy();
        java.math.BigInteger bigInteger10 = booleanModelValue7.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue11 = new org.jboss.dmr.BigIntegerModelValue(bigInteger10);
        java.lang.String str12 = bigIntegerModelValue11.asString();
        java.math.BigInteger bigInteger13 = bigIntegerModelValue11.asBigInteger();
        boolean boolean14 = bigIntegerModelValue4.equals(bigIntegerModelValue11);
        double double16 = bigIntegerModelValue4.asDouble(0.0d);
        double double18 = bigIntegerModelValue4.asDouble((double) 100.0f);
        java.math.BigInteger bigInteger19 = bigIntegerModelValue4.asBigInteger();
        java.math.BigInteger bigInteger20 = bigIntegerModelValue4.asBigInteger();
        org.jboss.dmr.BooleanModelValue booleanModelValue22 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray23 = booleanModelValue22.asBytes();
        java.lang.String str24 = booleanModelValue22.asString();
        int int25 = booleanModelValue22.asInt();
        long long26 = booleanModelValue22.asLong();
        boolean boolean28 = booleanModelValue22.equals((java.lang.Object) '4');
        java.math.BigInteger bigInteger29 = booleanModelValue22.asBigInteger();
        java.math.BigInteger bigInteger30 = booleanModelValue22.asBigInteger();
        java.math.BigDecimal bigDecimal31 = booleanModelValue22.asBigDecimal();
        boolean boolean32 = bigIntegerModelValue4.equals((java.lang.Object) bigDecimal31);
        java.math.BigDecimal bigDecimal33 = bigIntegerModelValue4.asBigDecimal();
        java.math.BigDecimal bigDecimal34 = bigIntegerModelValue4.asBigDecimal();
        double double36 = bigIntegerModelValue4.asDouble((double) 73L);
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanModelValue7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue9);
        org.junit.Assert.assertNotNull(bigInteger10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1" + "'", str12, "1");
        org.junit.Assert.assertNotNull(bigInteger13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(bigInteger19);
        org.junit.Assert.assertNotNull(bigInteger20);
        org.junit.Assert.assertNotNull(booleanModelValue22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "true" + "'", str24, "true");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(bigInteger29);
        org.junit.Assert.assertNotNull(bigInteger30);
        org.junit.Assert.assertNotNull(bigDecimal31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(bigDecimal33);
        org.junit.Assert.assertNotNull(bigDecimal34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
    }

    @Test
    public void test10584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10584");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.removeChild("hi!");
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList5 = objectModelValue0.asList();
        org.jboss.dmr.ModelNode modelNode7 = objectModelValue0.getChild("\"bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }\"");
        org.jboss.dmr.ModelNode modelNode9 = modelNode7.add((long) 'a');
        org.jboss.dmr.ModelNode modelNode11 = modelNode9.add((double) 52L);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ValueExpression valueExpression12 = modelNode9.asExpression();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNodeList5);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(modelNode11);
    }

    @Test
    public void test10585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10585");
        byte[] byteArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = org.jboss.dmr.Base64.encodeBytes(byteArray0, (int) (byte) 1, 1, (int) 'i');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10586");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode("EXPRESSION_VALUE");
        org.jboss.dmr.ModelNode modelNode2 = modelNode1.clear();
        boolean boolean4 = modelNode1.has((int) '#');
        org.jboss.dmr.ModelNode modelNode7 = modelNode1.add("BYTES_VALUE", "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4");
        org.jboss.dmr.ModelNode modelNode9 = modelNode1.set("1");
        org.jboss.dmr.BooleanModelValue booleanModelValue11 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long12 = booleanModelValue11.asLong();
        org.jboss.dmr.ValueExpression valueExpression13 = booleanModelValue11.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue14 = new org.jboss.dmr.ExpressionValue(valueExpression13);
        java.lang.String str15 = valueExpression13.getExpressionString();
        boolean boolean16 = modelNode1.equals((java.lang.Object) valueExpression13);
        org.jboss.dmr.ModelType modelType17 = modelNode1.getType();
        org.junit.Assert.assertNotNull(modelNode2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(booleanModelValue11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertNotNull(valueExpression13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "true" + "'", str15, "true");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + modelType17 + "' != '" + org.jboss.dmr.ModelType.STRING + "'", modelType17.equals(org.jboss.dmr.ModelType.STRING));
    }

    @Test
    public void test10587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10587");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        org.jboss.dmr.Base64.InputStream inputStream17 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream14, (int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode18 = org.jboss.dmr.ModelNode.fromStream((java.io.InputStream) inputStream14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
    }

    @Test
    public void test10588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10588");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isBigInteger();
        boolean boolean17 = modelReader15.isLong();
        boolean boolean18 = modelReader15.isBigDecimal();
        boolean boolean19 = modelReader15.isUndefined();
        boolean boolean20 = modelReader15.isUndefined();
        boolean boolean21 = modelReader15.isListStart();
        boolean boolean22 = modelReader15.isObjectStart();
        boolean boolean23 = modelReader15.isPropertyStart();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test10589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10589");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue((long) (byte) -1);
        double double3 = longModelValue1.asDouble(0.0d);
        org.jboss.dmr.LongModelValue longModelValue5 = new org.jboss.dmr.LongModelValue((-1L));
        long long7 = longModelValue5.asLong((long) (byte) -1);
        byte[] byteArray8 = longModelValue5.asBytes();
        boolean boolean9 = longModelValue1.equals(longModelValue5);
        org.jboss.dmr.LongModelValue longModelValue11 = new org.jboss.dmr.LongModelValue(1L);
        long long13 = longModelValue11.asLong((long) (short) 0);
        java.math.BigInteger bigInteger14 = longModelValue11.asBigInteger();
        boolean boolean15 = longModelValue5.equals(longModelValue11);
        int int17 = longModelValue11.asInt((int) (byte) 100);
        java.math.BigDecimal bigDecimal18 = longModelValue11.asBigDecimal();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + (-1.0d) + "'", double3 == (-1.0d));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -1, -1, -1, -1, -1, -1, -1]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(bigInteger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(bigDecimal18);
    }

    @Test
    public void test10590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10590");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        java.lang.String str6 = listModelValue5.asString();
        long long7 = listModelValue5.asLong();
        java.lang.String str8 = listModelValue5.asString();
        org.jboss.dmr.ModelNode modelNode9 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode12 = modelNode9.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList13 = modelNode12.asList();
        org.jboss.dmr.ListModelValue listModelValue14 = new org.jboss.dmr.ListModelValue(modelNodeList13);
        java.lang.String str15 = listModelValue14.asString();
        long long16 = listModelValue14.asLong();
        int int18 = listModelValue14.asInt((int) '4');
        org.jboss.dmr.ModelValue modelValue19 = listModelValue14.protect();
        boolean boolean21 = listModelValue14.has((int) (short) 100);
        boolean boolean22 = listModelValue5.equals(listModelValue14);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList23 = listModelValue5.asList();
        org.jboss.dmr.ListModelValue listModelValue24 = new org.jboss.dmr.ListModelValue(modelNodeList23);
        org.jboss.dmr.ModelNode modelNode25 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode28 = modelNode25.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList29 = modelNode28.asList();
        java.lang.String str31 = modelNode28.asString("true");
        org.jboss.dmr.ModelNode modelNode33 = modelNode28.set((double) 'a');
        org.jboss.dmr.IntModelValue intModelValue35 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str36 = intModelValue35.asString();
        double double38 = intModelValue35.asDouble((double) 2);
        java.math.BigDecimal bigDecimal39 = intModelValue35.asBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue40 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal39);
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue41 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal39);
        org.jboss.dmr.ModelNode modelNode42 = modelNode33.set(bigDecimal39);
        org.jboss.dmr.ModelType modelType43 = org.jboss.dmr.ModelType.DOUBLE;
        org.jboss.dmr.ModelNode modelNode44 = new org.jboss.dmr.ModelNode(modelType43);
        org.jboss.dmr.ModelNode modelNode45 = new org.jboss.dmr.ModelNode(modelType43);
        org.jboss.dmr.ModelNode modelNode46 = modelNode42.set(modelType43);
        org.jboss.dmr.TypeModelValue typeModelValue47 = org.jboss.dmr.TypeModelValue.of(modelType43);
        org.jboss.dmr.ModelNode modelNode48 = new org.jboss.dmr.ModelNode(modelType43);
        org.jboss.dmr.ModelNode modelNode49 = modelNode48.resolve();
        boolean boolean50 = listModelValue24.equals((java.lang.Object) modelNode48);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode52 = listModelValue24.insertChild(97);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str6, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str8, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNodeList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str15, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(modelValue19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(modelNodeList23);
        org.junit.Assert.assertNotNull(modelNode28);
        org.junit.Assert.assertNotNull(modelNodeList29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(\"hi!\" => 0.0)" + "'", str31, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "32" + "'", str36, "32");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 32.0d + "'", double38 == 32.0d);
        org.junit.Assert.assertNotNull(bigDecimal39);
        org.junit.Assert.assertNotNull(modelNode42);
        org.junit.Assert.assertTrue("'" + modelType43 + "' != '" + org.jboss.dmr.ModelType.DOUBLE + "'", modelType43.equals(org.jboss.dmr.ModelType.DOUBLE));
        org.junit.Assert.assertNotNull(modelNode46);
        org.junit.Assert.assertNotNull(typeModelValue47);
        org.junit.Assert.assertNotNull(modelNode49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test10591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10591");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) 'p');
        java.math.BigDecimal bigDecimal2 = intModelValue1.asBigDecimal();
        boolean boolean3 = intModelValue1.asBoolean();
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory5 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream6 = null;
        org.jboss.dmr.Base64.InputStream inputStream8 = new org.jboss.dmr.Base64.InputStream(inputStream6, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue10 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str11 = longModelValue10.asString();
        byte[] byteArray12 = longModelValue10.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue13 = new org.jboss.dmr.BytesModelValue(byteArray12);
        int int16 = inputStream8.read(byteArray12, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream18 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream8, (-1));
        org.jboss.dmr.stream.ModelReader modelReader19 = modelStreamFactory5.newModelReader((java.io.InputStream) inputStream18);
        boolean boolean20 = modelReader19.isLong();
        boolean boolean21 = modelReader19.isBigDecimal();
        boolean boolean22 = modelReader19.isUndefined();
        boolean boolean23 = modelReader19.isObjectStart();
        boolean boolean24 = intModelValue1.equals((java.lang.Object) modelReader19);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray25 = modelReader19.getBytes();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Current event isn't bytes");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(bigDecimal2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(modelStreamFactory5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1" + "'", str11, "1");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(modelReader19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test10592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10592");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isBigInteger();
        boolean boolean17 = modelReader15.isLong();
        boolean boolean18 = modelReader15.isBigDecimal();
        boolean boolean19 = modelReader15.isUndefined();
        boolean boolean20 = modelReader15.isUndefined();
        boolean boolean21 = modelReader15.isObjectStart();
        boolean boolean22 = modelReader15.isObjectEnd();
        boolean boolean23 = modelReader15.isBytes();
        boolean boolean24 = modelReader15.isDouble();
        boolean boolean25 = modelReader15.isBigInteger();
        boolean boolean26 = modelReader15.isDouble();
        boolean boolean27 = modelReader15.isObjectStart();
        boolean boolean28 = modelReader15.isPropertyStart();
        boolean boolean29 = modelReader15.isString();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.stream.ModelEvent modelEvent30 = modelReader15.next();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test10593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10593");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.PROPERTY;
        char char1 = modelType0.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue2 = org.jboss.dmr.TypeModelValue.of(modelType0);
        org.jboss.dmr.ModelType modelType3 = org.jboss.dmr.ModelType.PROPERTY;
        char char4 = modelType3.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue5 = org.jboss.dmr.TypeModelValue.of(modelType3);
        boolean boolean6 = typeModelValue2.equals(typeModelValue5);
        java.lang.String str7 = typeModelValue5.asString();
        org.jboss.dmr.ModelType modelType8 = org.jboss.dmr.ModelType.PROPERTY;
        char char9 = modelType8.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue10 = org.jboss.dmr.TypeModelValue.of(modelType8);
        org.jboss.dmr.ModelType modelType11 = org.jboss.dmr.ModelType.PROPERTY;
        char char12 = modelType11.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue13 = org.jboss.dmr.TypeModelValue.of(modelType11);
        boolean boolean14 = typeModelValue10.equals(typeModelValue13);
        java.lang.String str15 = typeModelValue13.asString();
        boolean boolean17 = typeModelValue13.asBoolean(true);
        boolean boolean18 = typeModelValue5.equals(typeModelValue13);
        org.jboss.dmr.ValueExpression valueExpression19 = typeModelValue13.asExpression();
        org.jboss.dmr.ModelType modelType20 = org.jboss.dmr.ModelType.PROPERTY;
        char char21 = modelType20.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue22 = org.jboss.dmr.TypeModelValue.of(modelType20);
        org.jboss.dmr.ModelType modelType23 = org.jboss.dmr.ModelType.PROPERTY;
        char char24 = modelType23.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue25 = org.jboss.dmr.TypeModelValue.of(modelType23);
        boolean boolean26 = typeModelValue22.equals(typeModelValue25);
        boolean boolean27 = typeModelValue13.equals(typeModelValue22);
        org.jboss.dmr.ModelType modelType28 = org.jboss.dmr.ModelType.PROPERTY;
        char char29 = modelType28.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue30 = org.jboss.dmr.TypeModelValue.of(modelType28);
        boolean boolean31 = typeModelValue30.asBoolean();
        boolean boolean32 = typeModelValue13.equals(typeModelValue30);
        org.jboss.dmr.ValueExpression valueExpression33 = typeModelValue30.asExpression();
        org.jboss.dmr.ModelType modelType34 = org.jboss.dmr.ModelType.TYPE;
        org.jboss.dmr.TypeModelValue typeModelValue35 = org.jboss.dmr.TypeModelValue.of(modelType34);
        org.jboss.dmr.ModelNode modelNode36 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode37 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode40 = modelNode37.set("hi!", 0.0d);
        java.lang.String str41 = modelNode37.toString();
        org.jboss.dmr.ModelNode modelNode42 = modelNode37.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode44 = modelNode37.set(100);
        org.jboss.dmr.ModelNode modelNode45 = modelNode36.add(modelNode37);
        org.jboss.dmr.ModelType modelType47 = org.jboss.dmr.ModelType.BYTES;
        char char48 = modelType47.getTypeChar();
        org.jboss.dmr.ModelNode modelNode49 = modelNode36.set("org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]", modelType47);
        org.jboss.dmr.TypeModelValue typeModelValue50 = org.jboss.dmr.TypeModelValue.of(modelType47);
        boolean boolean51 = typeModelValue50.asBoolean();
        boolean boolean52 = typeModelValue35.equals(typeModelValue50);
        boolean boolean53 = typeModelValue30.equals(typeModelValue35);
        org.jboss.dmr.BooleanModelValue booleanModelValue55 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray56 = booleanModelValue55.asBytes();
        java.lang.String str57 = booleanModelValue55.asString();
        int int58 = booleanModelValue55.asInt();
        org.jboss.dmr.ModelType modelType59 = org.jboss.dmr.ModelType.STRING;
        boolean boolean60 = booleanModelValue55.equals((java.lang.Object) modelType59);
        org.jboss.dmr.TypeModelValue typeModelValue61 = org.jboss.dmr.TypeModelValue.of(modelType59);
        org.jboss.dmr.ValueExpression valueExpression62 = typeModelValue61.asExpression();
        boolean boolean63 = typeModelValue35.equals(typeModelValue61);
        org.jboss.dmr.ModelType modelType64 = typeModelValue61.asType();
        org.jboss.dmr.ModelType modelType65 = org.jboss.dmr.ModelType.PROPERTY;
        char char66 = modelType65.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue67 = org.jboss.dmr.TypeModelValue.of(modelType65);
        org.jboss.dmr.ValueExpression valueExpression68 = typeModelValue67.asExpression();
        boolean boolean69 = typeModelValue61.equals(typeModelValue67);
        org.jboss.dmr.ValueExpression valueExpression70 = typeModelValue61.asExpression();
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType0.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char1 + "' != '" + 'p' + "'", char1 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue2);
        org.junit.Assert.assertTrue("'" + modelType3 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType3.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char4 + "' != '" + 'p' + "'", char4 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PROPERTY" + "'", str7, "PROPERTY");
        org.junit.Assert.assertTrue("'" + modelType8 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType8.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char9 + "' != '" + 'p' + "'", char9 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue10);
        org.junit.Assert.assertTrue("'" + modelType11 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType11.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char12 + "' != '" + 'p' + "'", char12 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PROPERTY" + "'", str15, "PROPERTY");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(valueExpression19);
        org.junit.Assert.assertTrue("'" + modelType20 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType20.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char21 + "' != '" + 'p' + "'", char21 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue22);
        org.junit.Assert.assertTrue("'" + modelType23 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType23.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char24 + "' != '" + 'p' + "'", char24 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + modelType28 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType28.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char29 + "' != '" + 'p' + "'", char29 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(valueExpression33);
        org.junit.Assert.assertTrue("'" + modelType34 + "' != '" + org.jboss.dmr.ModelType.TYPE + "'", modelType34.equals(org.jboss.dmr.ModelType.TYPE));
        org.junit.Assert.assertNotNull(typeModelValue35);
        org.junit.Assert.assertNotNull(modelNode40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(\"hi!\" => 0.0)" + "'", str41, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode42);
        org.junit.Assert.assertNotNull(modelNode44);
        org.junit.Assert.assertNotNull(modelNode45);
        org.junit.Assert.assertTrue("'" + modelType47 + "' != '" + org.jboss.dmr.ModelType.BYTES + "'", modelType47.equals(org.jboss.dmr.ModelType.BYTES));
        org.junit.Assert.assertTrue("'" + char48 + "' != '" + 'b' + "'", char48 == 'b');
        org.junit.Assert.assertNotNull(modelNode49);
        org.junit.Assert.assertNotNull(typeModelValue50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(booleanModelValue55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "true" + "'", str57, "true");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + modelType59 + "' != '" + org.jboss.dmr.ModelType.STRING + "'", modelType59.equals(org.jboss.dmr.ModelType.STRING));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(typeModelValue61);
        org.junit.Assert.assertNotNull(valueExpression62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + modelType64 + "' != '" + org.jboss.dmr.ModelType.STRING + "'", modelType64.equals(org.jboss.dmr.ModelType.STRING));
        org.junit.Assert.assertTrue("'" + modelType65 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType65.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char66 + "' != '" + 'p' + "'", char66 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue67);
        org.junit.Assert.assertNotNull(valueExpression68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(valueExpression70);
    }

    @Test
    public void test10594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10594");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str2 = intModelValue1.asString();
        double double4 = intModelValue1.asDouble((double) 2);
        java.math.BigDecimal bigDecimal5 = intModelValue1.asBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue6 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal5);
        long long7 = bigDecimalModelValue6.asLong();
        long long8 = bigDecimalModelValue6.asLong();
        long long10 = bigDecimalModelValue6.asLong((long) 'b');
        org.jboss.dmr.ObjectModelValue objectModelValue11 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode12 = objectModelValue11.asObject();
        org.jboss.dmr.ModelValue modelValue13 = objectModelValue11.copy();
        int int15 = objectModelValue11.asInt((int) (short) 100);
        long long17 = objectModelValue11.asLong((long) (byte) 10);
        java.util.List<org.jboss.dmr.Property> propertyList18 = objectModelValue11.asPropertyList();
        boolean boolean19 = bigDecimalModelValue6.equals((java.lang.Object) propertyList18);
        int int21 = bigDecimalModelValue6.asInt(8);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "32" + "'", str2, "32");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 32.0d + "'", double4 == 32.0d);
        org.junit.Assert.assertNotNull(bigDecimal5);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 32L + "'", long7 == 32L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 32L + "'", long8 == 32L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 32L + "'", long10 == 32L);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelValue13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(propertyList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
    }

    @Test
    public void test10595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10595");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        org.jboss.dmr.ModelValue modelValue6 = objectModelValue0.copy(false);
        int int7 = objectModelValue0.asInt();
        java.lang.String str8 = objectModelValue0.asString();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList9 = objectModelValue0.asList();
        org.jboss.dmr.ModelNode modelNode10 = objectModelValue0.asObject();
        org.jboss.dmr.ModelNode modelNode11 = modelNode10.setEmptyObject();
        // The following exception was thrown during execution in test generation
        try {
            java.math.BigInteger bigInteger12 = modelNode11.asBigIntegerOrNull();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(modelNode4);
        org.junit.Assert.assertNotNull(modelValue6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{}" + "'", str8, "{}");
        org.junit.Assert.assertNotNull(modelNodeList9);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertNotNull(modelNode11);
    }

    @Test
    public void test10596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10596");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode5 = modelNode2.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList6 = modelNode5.asList();
        org.jboss.dmr.ListModelValue listModelValue7 = new org.jboss.dmr.ListModelValue(modelNodeList6);
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue7);
        org.jboss.dmr.ModelValue modelValue9 = listModelValue7.resolve();
        int int11 = listModelValue7.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList12 = listModelValue7.asPropertyList();
        boolean boolean13 = intModelValue1.equals((java.lang.Object) listModelValue7);
        boolean boolean15 = listModelValue7.asBoolean(false);
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(modelNodeList6);
        org.junit.Assert.assertNotNull(modelValue9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(propertyList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test10597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10597");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(32.0d);
    }

    @Test
    public void test10598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10598");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.StringModelValue stringModelValue3 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        boolean boolean4 = stringModelValue1.equals(stringModelValue3);
        byte[] byteArray5 = stringModelValue3.asBytes();
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode(byteArray5);
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode10 = modelNode7.set("hi!", 0.0d);
        java.lang.String str11 = modelNode7.toString();
        org.jboss.dmr.ModelNode modelNode12 = modelNode7.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode14 = modelNode7.set(100);
        org.jboss.dmr.ModelNode modelNode17 = new org.jboss.dmr.ModelNode((double) 100);
        org.jboss.dmr.ModelNode modelNode19 = modelNode17.set((int) '#');
        org.jboss.dmr.ModelNode modelNode20 = modelNode7.setNoCopy("EXPRESSION_VALUE", modelNode19);
        org.jboss.dmr.ModelNode modelNode21 = modelNode20.resolve();
        org.jboss.dmr.ModelNode modelNode22 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode25 = modelNode22.setExpression("hi!", "hi!");
        org.jboss.dmr.ModelNode modelNode26 = modelNode25.setEmptyList();
        org.jboss.dmr.ModelNode modelNode28 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long29 = modelNode28.asLong();
        org.jboss.dmr.ValueExpression valueExpression30 = modelNode28.asExpression();
        java.math.BigDecimal bigDecimal31 = valueExpression30.resolveBigDecimal();
        org.jboss.dmr.ModelNode modelNode32 = new org.jboss.dmr.ModelNode(bigDecimal31);
        org.jboss.dmr.ModelNode modelNode33 = modelNode25.set(bigDecimal31);
        org.jboss.dmr.ModelNode modelNode34 = modelNode20.set(bigDecimal31);
        org.jboss.dmr.ModelNode modelNode35 = modelNode6.set(modelNode34);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[40, 34, 34, 32, 61, 62, 32, 40, 34, 104, 105, 33, 34, 32, 61, 62, 32, 48, 46, 48, 41, 41]");
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(\"hi!\" => 0.0)" + "'", str11, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(modelNode21);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1L + "'", long29 == 1L);
        org.junit.Assert.assertNotNull(valueExpression30);
        org.junit.Assert.assertNotNull(bigDecimal31);
        org.junit.Assert.assertNotNull(modelNode33);
        org.junit.Assert.assertNotNull(modelNode34);
        org.junit.Assert.assertNotNull(modelNode35);
    }

    @Test
    public void test10599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10599");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        java.lang.String str6 = listModelValue5.asString();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList7 = listModelValue5.asList();
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = modelNode11.asList();
        org.jboss.dmr.ListModelValue listModelValue13 = new org.jboss.dmr.ListModelValue(modelNodeList12);
        java.lang.String str14 = listModelValue13.asString();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList15 = listModelValue13.asList();
        boolean boolean16 = listModelValue5.equals(listModelValue13);
        org.jboss.dmr.ModelNode modelNode17 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode20 = modelNode17.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList21 = modelNode20.asList();
        org.jboss.dmr.ListModelValue listModelValue22 = new org.jboss.dmr.ListModelValue(modelNodeList21);
        org.jboss.dmr.ModelNode modelNode23 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue22);
        org.jboss.dmr.ModelValue modelValue24 = listModelValue22.resolve();
        int int26 = listModelValue22.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList27 = listModelValue22.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList28 = listModelValue22.asPropertyList();
        org.jboss.dmr.ModelValue modelValue29 = listModelValue22.copy();
        boolean boolean30 = listModelValue13.equals(listModelValue22);
        java.lang.String str31 = listModelValue13.asString();
        java.lang.String str32 = listModelValue13.asString();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode34 = listModelValue13.removeChild((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child exists at index [32]");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str6, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertNotNull(modelNodeList7);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNodeList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str14, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertNotNull(modelNodeList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(modelNodeList21);
        org.junit.Assert.assertNotNull(modelValue24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(propertyList27);
        org.junit.Assert.assertNotNull(propertyList28);
        org.junit.Assert.assertNotNull(modelValue29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str31, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str32, "[(\"hi!\" => 0.0)]");
    }

    @Test
    public void test10600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10600");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        org.jboss.dmr.ModelValue modelValue2 = objectModelValue0.protect();
        long long3 = objectModelValue0.asLong();
        boolean boolean5 = objectModelValue0.has("(\"(\\\"\\\" => (\\\"hi!\\\" => 0.0))\" => expression \"\")");
        boolean boolean6 = objectModelValue0.asBoolean();
        org.jboss.dmr.ObjectModelValue objectModelValue7 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode8 = objectModelValue7.asObject();
        java.util.Set<java.lang.String> strSet9 = objectModelValue7.getKeys();
        boolean boolean11 = objectModelValue7.has((int) 'a');
        boolean boolean13 = objectModelValue7.has("");
        org.jboss.dmr.ObjectModelValue objectModelValue14 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode15 = objectModelValue14.asObject();
        java.util.Set<java.lang.String> strSet16 = objectModelValue14.getKeys();
        boolean boolean18 = objectModelValue14.has((int) 'a');
        boolean boolean19 = objectModelValue7.equals(objectModelValue14);
        int int20 = objectModelValue14.asInt();
        java.util.List<org.jboss.dmr.Property> propertyList21 = objectModelValue14.asPropertyList();
        org.jboss.dmr.ObjectModelValue objectModelValue22 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode23 = objectModelValue22.asObject();
        java.util.Set<java.lang.String> strSet24 = objectModelValue22.getKeys();
        org.jboss.dmr.ModelNode modelNode26 = objectModelValue22.removeChild("1");
        boolean boolean27 = objectModelValue22.asBoolean();
        boolean boolean28 = objectModelValue14.equals(objectModelValue22);
        boolean boolean29 = objectModelValue0.equals(objectModelValue14);
        long long31 = objectModelValue14.asLong((long) 3);
        long long32 = objectModelValue14.asLong();
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(modelNode15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(propertyList21);
        org.junit.Assert.assertNotNull(modelNode23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNull(modelNode26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
    }

    @Test
    public void test10601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10601");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isBigInteger();
        boolean boolean17 = modelReader15.isLong();
        boolean boolean18 = modelReader15.isBigDecimal();
        boolean boolean19 = modelReader15.isUndefined();
        boolean boolean20 = modelReader15.isUndefined();
        boolean boolean21 = modelReader15.isObjectStart();
        boolean boolean22 = modelReader15.isObjectEnd();
        boolean boolean23 = modelReader15.isBytes();
        boolean boolean24 = modelReader15.isDouble();
        boolean boolean25 = modelReader15.isBigInteger();
        boolean boolean26 = modelReader15.isDouble();
        boolean boolean27 = modelReader15.isObjectStart();
        boolean boolean28 = modelReader15.isPropertyStart();
        boolean boolean29 = modelReader15.isString();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str30 = modelReader15.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Current event isn't string");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test10602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10602");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        java.lang.String str5 = modelNode1.toString();
        org.jboss.dmr.ModelNode modelNode6 = modelNode1.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(100);
        org.jboss.dmr.ModelNode modelNode9 = modelNode0.add(modelNode1);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ValueExpression valueExpression10 = modelNode0.asExpression();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(\"hi!\" => 0.0)" + "'", str5, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode9);
    }

    @Test
    public void test10603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10603");
        java.io.InputStream inputStream0 = null;
        org.jboss.dmr.Base64.InputStream inputStream2 = new org.jboss.dmr.Base64.InputStream(inputStream0, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue4 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str5 = longModelValue4.asString();
        byte[] byteArray6 = longModelValue4.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue7 = new org.jboss.dmr.BytesModelValue(byteArray6);
        int int10 = inputStream2.read(byteArray6, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream12 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream2, (-1));
        org.jboss.dmr.Base64.InputStream inputStream13 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream12);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream13);
        // The following exception was thrown during execution in test generation
        try {
            inputStream14.mark((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1" + "'", str5, "1");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test10604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10604");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((long) 52);
        double double2 = modelNode1.asDouble();
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 52.0d + "'", double2 == 52.0d);
    }

    @Test
    public void test10605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10605");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue5);
        org.jboss.dmr.ModelValue modelValue7 = listModelValue5.resolve();
        int int9 = listModelValue5.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList10 = listModelValue5.asPropertyList();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList11 = listModelValue5.asList();
        long long12 = listModelValue5.asLong();
        boolean boolean14 = listModelValue5.asBoolean(true);
        org.jboss.dmr.ModelValue modelValue15 = listModelValue5.resolve();
        long long17 = listModelValue5.asLong((long) 10);
        boolean boolean19 = listModelValue5.has((int) (short) -1);
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertNotNull(modelValue7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(propertyList10);
        org.junit.Assert.assertNotNull(modelNodeList11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(modelValue15);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test10606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10606");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream5 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4);
        org.jboss.dmr.stream.ModelReader modelReader6 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream5);
        java.io.OutputStream outputStream7 = null;
        org.jboss.dmr.Base64.OutputStream outputStream8 = new org.jboss.dmr.Base64.OutputStream(outputStream7);
        org.jboss.dmr.Base64.OutputStream outputStream9 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream8);
        outputStream8.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter12 = modelStreamFactory1.newModelWriter((java.io.OutputStream) outputStream8);
        org.jboss.dmr.stream.ModelWriter modelWriter13 = modelWriter12.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter15 = modelWriter12.writeInt((int) '4');
        org.jboss.dmr.stream.ModelWriter modelWriter17 = modelWriter12.writeDouble((double) 100.0f);
        org.jboss.dmr.stream.ModelWriter modelWriter19 = modelWriter12.writeDouble((double) '#');
        org.jboss.dmr.stream.ModelWriter modelWriter21 = modelWriter19.writeLong((long) 3);
        // The following exception was thrown during execution in test generation
        try {
            modelWriter21.close();
            org.junit.Assert.fail("Expected exception of type org.jboss.dmr.stream.ModelException; message: Uncomplete DMR stream have been written");
        } catch (org.jboss.dmr.stream.ModelException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertNotNull(modelReader6);
        org.junit.Assert.assertNotNull(modelWriter12);
        org.junit.Assert.assertNotNull(modelWriter13);
        org.junit.Assert.assertNotNull(modelWriter15);
        org.junit.Assert.assertNotNull(modelWriter17);
        org.junit.Assert.assertNotNull(modelWriter19);
        org.junit.Assert.assertNotNull(modelWriter21);
    }

    @Test
    public void test10607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10607");
        java.io.OutputStream outputStream0 = null;
        org.jboss.dmr.Base64.OutputStream outputStream1 = new org.jboss.dmr.Base64.OutputStream(outputStream0);
        outputStream1.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream3 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream1);
        org.jboss.dmr.Base64.OutputStream outputStream4 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream3);
        outputStream3.flushBase64();
        org.jboss.dmr.Base64.OutputStream outputStream6 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream3);
        org.jboss.dmr.Base64.OutputStream outputStream7 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream3);
        // The following exception was thrown during execution in test generation
        try {
            outputStream7.flush();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10608");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream5 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4);
        org.jboss.dmr.stream.ModelReader modelReader6 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream5);
        java.io.OutputStream outputStream7 = null;
        org.jboss.dmr.Base64.OutputStream outputStream8 = new org.jboss.dmr.Base64.OutputStream(outputStream7);
        org.jboss.dmr.Base64.OutputStream outputStream9 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream8);
        outputStream8.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter12 = modelStreamFactory1.newModelWriter((java.io.OutputStream) outputStream8);
        org.jboss.dmr.stream.ModelWriter modelWriter13 = modelWriter12.writeListStart();
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode(true);
        org.jboss.dmr.ModelNode modelNode16 = modelNode15.resolve();
        java.lang.String str17 = modelNode15.asString();
        org.jboss.dmr.ModelNode modelNode19 = modelNode15.set((long) 52);
        org.jboss.dmr.ModelNode modelNode21 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode24 = modelNode21.setExpression("hi!", "hi!");
        java.lang.String str25 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode21);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList26 = modelNode21.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode28 = modelNode21.set((double) 0);
        org.jboss.dmr.ModelType modelType30 = org.jboss.dmr.ModelType.PROPERTY;
        char char31 = modelType30.getTypeChar();
        org.jboss.dmr.ModelNode modelNode32 = modelNode21.set("[(\"hi!\" => 0.0)]", modelType30);
        org.jboss.dmr.Property property33 = new org.jboss.dmr.Property("\"(\\\"hi!\\\" => 0.0)\"", modelNode32);
        org.jboss.dmr.ModelNode modelNode34 = modelNode19.set(property33);
        org.jboss.dmr.ModelNode modelNode36 = modelNode19.set(false);
        boolean boolean37 = modelNode36.isProtected();
        org.jboss.dmr.ModelType modelType39 = org.jboss.dmr.ModelType.PROPERTY;
        char char40 = modelType39.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue41 = org.jboss.dmr.TypeModelValue.of(modelType39);
        char char42 = modelType39.getTypeChar();
        org.jboss.dmr.ModelNode modelNode43 = modelNode36.set("rO0ABXQAByJbOTdMXSI=", modelType39);
        org.jboss.dmr.stream.ModelWriter modelWriter44 = modelWriter13.writeType(modelType39);
        org.jboss.dmr.stream.ModelWriter modelWriter46 = modelWriter44.writeBoolean(true);
        org.jboss.dmr.stream.ModelWriter modelWriter48 = modelWriter44.writeLong(11975582L);
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertNotNull(modelReader6);
        org.junit.Assert.assertNotNull(modelWriter12);
        org.junit.Assert.assertNotNull(modelWriter13);
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "true" + "'", str17, "true");
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str25, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList26);
        org.junit.Assert.assertNotNull(modelNode28);
        org.junit.Assert.assertTrue("'" + modelType30 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType30.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char31 + "' != '" + 'p' + "'", char31 == 'p');
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertNotNull(modelNode34);
        org.junit.Assert.assertNotNull(modelNode36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + modelType39 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType39.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char40 + "' != '" + 'p' + "'", char40 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue41);
        org.junit.Assert.assertTrue("'" + char42 + "' != '" + 'p' + "'", char42 == 'p');
        org.junit.Assert.assertNotNull(modelNode43);
        org.junit.Assert.assertNotNull(modelWriter44);
        org.junit.Assert.assertNotNull(modelWriter46);
        org.junit.Assert.assertNotNull(modelWriter48);
    }

    @Test
    public void test10609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10609");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue(1);
        double double3 = intModelValue1.asDouble((double) 'b');
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
    }

    @Test
    public void test10610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10610");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str2 = longModelValue1.asString();
        double double4 = longModelValue1.asDouble((double) 32L);
        org.jboss.dmr.ValueExpression valueExpression5 = longModelValue1.asExpression();
        long long7 = longModelValue1.asLong((long) 'a');
        int int9 = longModelValue1.asInt((int) '4');
        java.lang.String str10 = longModelValue1.asString();
        long long11 = longModelValue1.asLong();
        byte[] byteArray12 = longModelValue1.asBytes();
        double double14 = longModelValue1.asDouble((double) 0.0f);
        double double16 = longModelValue1.asDouble((double) 52L);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1" + "'", str2, "1");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(valueExpression5);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1" + "'", str10, "1");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
    }

    @Test
    public void test10611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10611");
        org.jboss.dmr.ExpressionValue expressionValue1 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue3 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean4 = expressionValue1.equals(expressionValue3);
        org.jboss.dmr.ExpressionValue expressionValue6 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue8 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean9 = expressionValue6.equals(expressionValue8);
        boolean boolean10 = expressionValue1.equals(expressionValue8);
        org.jboss.dmr.ValueExpression valueExpression11 = expressionValue8.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue13 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ValueExpression valueExpression14 = expressionValue13.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue16 = new org.jboss.dmr.ExpressionValue("hi!");
        java.lang.String str17 = expressionValue16.toString();
        org.jboss.dmr.ModelNode modelNode19 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode22 = modelNode19.set("hi!", 0.0d);
        org.jboss.dmr.Property property23 = new org.jboss.dmr.Property("", modelNode22);
        boolean boolean24 = expressionValue16.equals((java.lang.Object) property23);
        boolean boolean25 = expressionValue13.equals(expressionValue16);
        boolean boolean26 = expressionValue8.equals((java.lang.Object) boolean25);
        org.jboss.dmr.ValueExpression valueExpression27 = expressionValue8.asExpression();
        org.jboss.dmr.ModelNode modelNode28 = new org.jboss.dmr.ModelNode(valueExpression27);
        org.jboss.dmr.ModelNode modelNode31 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode34 = modelNode31.set("hi!", 0.0d);
        org.jboss.dmr.Property property35 = new org.jboss.dmr.Property("", modelNode34);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode37 = modelNode34.get(strArray36);
        org.jboss.dmr.ModelNode modelNode39 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int40 = modelNode39.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode41 = modelNode39.clone();
        org.jboss.dmr.ModelNode modelNode42 = modelNode37.setNoCopy("35", modelNode41);
        org.jboss.dmr.ModelType modelType43 = modelNode41.getType();
        org.jboss.dmr.ModelNode modelNode44 = modelNode28.set("TYPE_MODEL_VALUE", modelType43);
        org.jboss.dmr.ModelNode modelNode47 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long48 = modelNode47.asLong();
        org.jboss.dmr.ValueExpression valueExpression49 = modelNode47.asExpression();
        java.math.BigDecimal bigDecimal50 = valueExpression49.resolveBigDecimal();
        java.lang.String str51 = valueExpression49.getExpressionString();
        java.math.BigDecimal bigDecimal52 = valueExpression49.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue53 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal52);
        boolean boolean54 = bigDecimalModelValue53.asBoolean();
        long long55 = bigDecimalModelValue53.asLong();
        java.lang.String str56 = bigDecimalModelValue53.asString();
        java.math.BigInteger bigInteger57 = bigDecimalModelValue53.asBigInteger();
        int int58 = bigDecimalModelValue53.asInt();
        long long59 = bigDecimalModelValue53.asLong();
        org.jboss.dmr.ValueExpression valueExpression60 = bigDecimalModelValue53.asExpression();
        java.math.BigDecimal bigDecimal61 = valueExpression60.resolveBigDecimal();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode62 = modelNode28.add("bytes { 0x40, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }", valueExpression60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(valueExpression11);
        org.junit.Assert.assertNotNull(valueExpression14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "expression \"hi!\"" + "'", str17, "expression \"hi!\"");
        org.junit.Assert.assertNotNull(modelNode22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(valueExpression27);
        org.junit.Assert.assertNotNull(modelNode34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(modelNode37);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(modelNode41);
        org.junit.Assert.assertNotNull(modelNode42);
        org.junit.Assert.assertTrue("'" + modelType43 + "' != '" + org.jboss.dmr.ModelType.UNDEFINED + "'", modelType43.equals(org.jboss.dmr.ModelType.UNDEFINED));
        org.junit.Assert.assertNotNull(modelNode44);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertNotNull(valueExpression49);
        org.junit.Assert.assertNotNull(bigDecimal50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1.0" + "'", str51, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 1L + "'", long55 == 1L);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "1.0" + "'", str56, "1.0");
        org.junit.Assert.assertNotNull(bigInteger57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 1L + "'", long59 == 1L);
        org.junit.Assert.assertNotNull(valueExpression60);
        org.junit.Assert.assertNotNull(bigDecimal61);
    }

    @Test
    public void test10612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10612");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("BYTES_VALUE");
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) stringModelValue1);
        java.lang.String str3 = stringModelValue1.asString();
        java.io.PrintWriter printWriter4 = null;
        // The following exception was thrown during execution in test generation
        try {
            stringModelValue1.formatAsJSON(printWriter4, (int) '4', false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "BYTES_VALUE" + "'", str3, "BYTES_VALUE");
    }

    @Test
    public void test10613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10613");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ModelNode modelNode7 = modelNode3.setExpression("hi!", "(\"hi!\" => 0.0)");
        org.jboss.dmr.ModelNode modelNode9 = modelNode3.set(10L);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory11 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream12 = null;
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream(inputStream12, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream15 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream14);
        org.jboss.dmr.stream.ModelReader modelReader16 = modelStreamFactory11.newModelReader((java.io.InputStream) inputStream15);
        java.io.OutputStream outputStream17 = null;
        org.jboss.dmr.Base64.OutputStream outputStream18 = new org.jboss.dmr.Base64.OutputStream(outputStream17);
        org.jboss.dmr.Base64.OutputStream outputStream19 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream18);
        outputStream18.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter22 = modelStreamFactory11.newModelWriter((java.io.OutputStream) outputStream18);
        java.io.OutputStream outputStream23 = null;
        org.jboss.dmr.Base64.OutputStream outputStream24 = new org.jboss.dmr.Base64.OutputStream(outputStream23);
        org.jboss.dmr.Base64.OutputStream outputStream25 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream24);
        org.jboss.dmr.Base64.OutputStream outputStream26 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream25);
        outputStream25.resumeEncoding();
        outputStream25.resumeEncoding();
        org.jboss.dmr.stream.ModelWriter modelWriter29 = modelStreamFactory11.newModelWriter((java.io.OutputStream) outputStream25);
        outputStream25.resumeEncoding();
        // The following exception was thrown during execution in test generation
        try {
            modelNode3.writeExternal((java.io.OutputStream) outputStream25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(modelStreamFactory11);
        org.junit.Assert.assertNotNull(modelReader16);
        org.junit.Assert.assertNotNull(modelWriter22);
        org.junit.Assert.assertNotNull(modelWriter29);
    }

    @Test
    public void test10614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10614");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.lang.String str4 = modelNode0.toString();
        org.jboss.dmr.ModelNode modelNode5 = modelNode0.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode7 = modelNode0.set(100);
        org.jboss.dmr.ModelNode modelNode10 = new org.jboss.dmr.ModelNode((double) 100);
        org.jboss.dmr.ModelNode modelNode12 = modelNode10.set((int) '#');
        org.jboss.dmr.ModelNode modelNode13 = modelNode0.setNoCopy("EXPRESSION_VALUE", modelNode12);
        org.jboss.dmr.ModelNode modelNode14 = modelNode13.resolve();
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode18 = modelNode15.setExpression("hi!", "hi!");
        org.jboss.dmr.ModelNode modelNode19 = modelNode18.setEmptyList();
        org.jboss.dmr.ModelNode modelNode21 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long22 = modelNode21.asLong();
        org.jboss.dmr.ValueExpression valueExpression23 = modelNode21.asExpression();
        java.math.BigDecimal bigDecimal24 = valueExpression23.resolveBigDecimal();
        org.jboss.dmr.ModelNode modelNode25 = new org.jboss.dmr.ModelNode(bigDecimal24);
        org.jboss.dmr.ModelNode modelNode26 = modelNode18.set(bigDecimal24);
        org.jboss.dmr.ModelNode modelNode27 = modelNode13.set(bigDecimal24);
        org.jboss.dmr.ModelNode modelNode29 = modelNode27.set((int) 's');
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "(\"hi!\" => 0.0)" + "'", str4, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertNotNull(valueExpression23);
        org.junit.Assert.assertNotNull(bigDecimal24);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertNotNull(modelNode29);
    }

    @Test
    public void test10615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10615");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        int int6 = bigIntegerModelValue4.asInt((int) (short) 1);
        org.jboss.dmr.BooleanModelValue booleanModelValue7 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double8 = booleanModelValue7.asDouble();
        org.jboss.dmr.ModelValue modelValue9 = booleanModelValue7.copy();
        java.math.BigInteger bigInteger10 = booleanModelValue7.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue11 = new org.jboss.dmr.BigIntegerModelValue(bigInteger10);
        java.lang.String str12 = bigIntegerModelValue11.asString();
        java.math.BigInteger bigInteger13 = bigIntegerModelValue11.asBigInteger();
        boolean boolean14 = bigIntegerModelValue4.equals(bigIntegerModelValue11);
        int int15 = bigIntegerModelValue11.asInt();
        long long17 = bigIntegerModelValue11.asLong(3L);
        org.jboss.dmr.ValueExpression valueExpression18 = bigIntegerModelValue11.asExpression();
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanModelValue7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue9);
        org.junit.Assert.assertNotNull(bigInteger10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1" + "'", str12, "1");
        org.junit.Assert.assertNotNull(bigInteger13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNotNull(valueExpression18);
    }

    @Test
    public void test10616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10616");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        java.lang.String str2 = doubleModelValue1.asString();
        byte[] byteArray3 = doubleModelValue1.asBytes();
        org.jboss.dmr.ValueExpression valueExpression4 = doubleModelValue1.asExpression();
        int int6 = doubleModelValue1.asInt((int) (byte) -1);
        int int7 = doubleModelValue1.asInt();
        double double8 = doubleModelValue1.asDouble();
        org.jboss.dmr.ModelValue modelValue9 = doubleModelValue1.protect();
        java.io.DataOutput dataOutput10 = null;
        // The following exception was thrown during execution in test generation
        try {
            doubleModelValue1.writeExternal(dataOutput10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "10.0" + "'", str2, "10.0");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(valueExpression4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertNotNull(modelValue9);
    }

    @Test
    public void test10617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10617");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isBigInteger();
        boolean boolean17 = modelReader15.isLong();
        boolean boolean18 = modelReader15.isBigDecimal();
        boolean boolean19 = modelReader15.isUndefined();
        boolean boolean20 = modelReader15.isUndefined();
        boolean boolean21 = modelReader15.isObjectStart();
        boolean boolean22 = modelReader15.isObjectEnd();
        boolean boolean23 = modelReader15.isBytes();
        boolean boolean24 = modelReader15.isDouble();
        boolean boolean25 = modelReader15.isBigInteger();
        boolean boolean26 = modelReader15.isInt();
        // The following exception was thrown during execution in test generation
        try {
            java.math.BigInteger bigInteger27 = modelReader15.getBigInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Current event isn't big integer");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test10618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10618");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str2 = longModelValue1.asString();
        byte[] byteArray3 = longModelValue1.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue4 = new org.jboss.dmr.BytesModelValue(byteArray3);
        java.lang.String str5 = bytesModelValue4.asString();
        int int6 = bytesModelValue4.asInt();
        int int7 = bytesModelValue4.asInt();
        org.jboss.dmr.LongModelValue longModelValue9 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str10 = longModelValue9.asString();
        byte[] byteArray11 = longModelValue9.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue12 = new org.jboss.dmr.BytesModelValue(byteArray11);
        double double13 = bytesModelValue12.asDouble();
        boolean boolean14 = bytesModelValue4.equals(bytesModelValue12);
        byte[] byteArray15 = bytesModelValue12.asBytes();
        java.math.BigInteger bigInteger16 = bytesModelValue12.asBigInteger();
        long long18 = bytesModelValue12.asLong((long) 100);
        org.jboss.dmr.ModelNode modelNode20 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode23 = modelNode20.setExpression("hi!", "hi!");
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList24 = modelNode23.asListOrEmpty();
        org.jboss.dmr.PropertyModelValue propertyModelValue26 = new org.jboss.dmr.PropertyModelValue("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=", modelNode23, false);
        boolean boolean28 = propertyModelValue26.has("10.0");
        org.jboss.dmr.ModelNode modelNode30 = propertyModelValue26.getChild(0);
        org.jboss.dmr.ModelValue modelValue31 = propertyModelValue26.resolve();
        org.jboss.dmr.ModelNode modelNode33 = propertyModelValue26.getChild((int) (short) 0);
        boolean boolean34 = bytesModelValue12.equals((java.lang.Object) modelNode33);
        double double36 = bytesModelValue12.asDouble((double) (short) 1);
        int int37 = bytesModelValue12.asInt();
        long long39 = bytesModelValue12.asLong((long) 'u');
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1" + "'", str2, "1");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str5, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1" + "'", str10, "1");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.9E-324d + "'", double13 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(bigInteger16);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(modelNode23);
        org.junit.Assert.assertNotNull(modelNodeList24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(modelNode30);
        org.junit.Assert.assertNotNull(modelValue31);
        org.junit.Assert.assertNotNull(modelNode33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.9E-324d + "'", double36 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1L + "'", long39 == 1L);
    }

    @Test
    public void test10619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10619");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue5);
        org.jboss.dmr.ModelValue modelValue7 = listModelValue5.resolve();
        int int9 = listModelValue5.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList10 = listModelValue5.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList11 = listModelValue5.asPropertyList();
        java.lang.String str12 = listModelValue5.asString();
        int int13 = listModelValue5.asInt();
        org.jboss.dmr.ModelValue modelValue14 = listModelValue5.resolve();
        org.jboss.dmr.ModelNode modelNode15 = listModelValue5.asObject();
        org.jboss.dmr.ModelNode modelNode17 = modelNode15.setExpression("(\"org.jboss.dmr.stream.ModelException: [(\\\"hi!\\\" => 0.0)]\" => (\"hi!\" => 0.0))");
        // The following exception was thrown during execution in test generation
        try {
            java.math.BigInteger bigInteger18 = modelNode17.asBigInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertNotNull(modelValue7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(propertyList10);
        org.junit.Assert.assertNotNull(propertyList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str12, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(modelValue14);
        org.junit.Assert.assertNotNull(modelNode15);
        org.junit.Assert.assertNotNull(modelNode17);
    }

    @Test
    public void test10620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10620");
        java.io.OutputStream outputStream0 = null;
        org.jboss.dmr.Base64.OutputStream outputStream1 = new org.jboss.dmr.Base64.OutputStream(outputStream0);
        org.jboss.dmr.Base64.OutputStream outputStream2 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream1);
        org.jboss.dmr.Base64.OutputStream outputStream3 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream2);
        outputStream3.resumeEncoding();
        outputStream3.write(10);
    }

    @Test
    public void test10621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10621");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        long long3 = longModelValue1.asLong((long) (short) 0);
        java.lang.String str4 = longModelValue1.asString();
        org.jboss.dmr.ValueExpression valueExpression5 = longModelValue1.asExpression();
        long long7 = longModelValue1.asLong((long) (short) 100);
        boolean boolean9 = longModelValue1.asBoolean(true);
        boolean boolean10 = longModelValue1.asBoolean();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 1L + "'", long3 == 1L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1" + "'", str4, "1");
        org.junit.Assert.assertNotNull(valueExpression5);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test10622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10622");
        java.io.OutputStream outputStream0 = null;
        org.jboss.dmr.Base64.OutputStream outputStream1 = new org.jboss.dmr.Base64.OutputStream(outputStream0);
        outputStream1.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream3 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream1);
        org.jboss.dmr.Base64.OutputStream outputStream5 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream3, (int) (byte) -1);
        outputStream5.resumeEncoding();
        outputStream5.flushBase64();
        outputStream5.resumeEncoding();
    }

    @Test
    public void test10623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10623");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str2 = longModelValue1.asString();
        byte[] byteArray3 = longModelValue1.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue4 = new org.jboss.dmr.BytesModelValue(byteArray3);
        double double5 = bytesModelValue4.asDouble();
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode((double) 100);
        org.jboss.dmr.ModelNode modelNode9 = modelNode7.set((int) '#');
        java.lang.Boolean boolean10 = modelNode7.asBooleanOrNull();
        java.lang.String str12 = modelNode7.asString("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        boolean boolean13 = bytesModelValue4.equals((java.lang.Object) modelNode7);
        java.lang.String str14 = modelNode7.asString();
        org.jboss.dmr.ModelNode modelNode15 = modelNode7.clone();
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory17 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream18 = null;
        org.jboss.dmr.Base64.InputStream inputStream20 = new org.jboss.dmr.Base64.InputStream(inputStream18, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream21 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream20);
        org.jboss.dmr.stream.ModelReader modelReader22 = modelStreamFactory17.newModelReader((java.io.InputStream) inputStream21);
        java.io.OutputStream outputStream23 = null;
        org.jboss.dmr.Base64.OutputStream outputStream24 = new org.jboss.dmr.Base64.OutputStream(outputStream23);
        org.jboss.dmr.Base64.OutputStream outputStream25 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream24);
        outputStream24.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter28 = modelStreamFactory17.newModelWriter((java.io.OutputStream) outputStream24);
        org.jboss.dmr.stream.ModelWriter modelWriter29 = modelWriter28.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter31 = modelWriter28.writeInt((int) '4');
        org.jboss.dmr.stream.ModelWriter modelWriter33 = modelWriter31.writeBoolean(true);
        org.jboss.dmr.stream.ModelWriter modelWriter35 = modelWriter31.writeBoolean(true);
        org.jboss.dmr.stream.ModelWriter modelWriter37 = modelWriter31.writeString("(\"true\" => INT)");
        org.jboss.dmr.stream.ModelWriter modelWriter39 = modelWriter37.writeDouble((double) (short) 0);
        modelNode15.write(modelWriter39);
        java.io.PrintWriter printWriter41 = null;
        // The following exception was thrown during execution in test generation
        try {
            modelNode15.writeJSONString(printWriter41, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Parameter cannot be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1" + "'", str2, "1");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.9E-324d + "'", double5 == 4.9E-324d);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertEquals("'" + boolean10 + "' != '" + true + "'", boolean10, true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "35" + "'", str12, "35");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "35" + "'", str14, "35");
        org.junit.Assert.assertNotNull(modelNode15);
        org.junit.Assert.assertNotNull(modelStreamFactory17);
        org.junit.Assert.assertNotNull(modelReader22);
        org.junit.Assert.assertNotNull(modelWriter28);
        org.junit.Assert.assertNotNull(modelWriter29);
        org.junit.Assert.assertNotNull(modelWriter31);
        org.junit.Assert.assertNotNull(modelWriter33);
        org.junit.Assert.assertNotNull(modelWriter35);
        org.junit.Assert.assertNotNull(modelWriter37);
        org.junit.Assert.assertNotNull(modelWriter39);
    }

    @Test
    public void test10624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10624");
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode1 = org.jboss.dmr.ModelNode.fromBase64String("bytes {\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01\n}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Bad Base64 input character at 6: 123(decimal)");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10625");
        org.jboss.dmr.ModelNodeFactory modelNodeFactory0 = org.jboss.dmr.ModelNodeFactory.INSTANCE;
        java.io.InputStream inputStream1 = null;
        org.jboss.dmr.Base64.InputStream inputStream3 = new org.jboss.dmr.Base64.InputStream(inputStream1, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue5 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str6 = longModelValue5.asString();
        byte[] byteArray7 = longModelValue5.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue8 = new org.jboss.dmr.BytesModelValue(byteArray7);
        int int11 = inputStream3.read(byteArray7, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream13 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream3, (-1));
        org.jboss.dmr.Base64.InputStream inputStream15 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream13, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode17 = modelNodeFactory0.readFrom((java.io.InputStream) inputStream13, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNodeFactory0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "1" + "'", str6, "1");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test10626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10626");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        boolean boolean2 = doubleModelValue1.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression3 = doubleModelValue1.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue4 = new org.jboss.dmr.ExpressionValue(valueExpression3);
        java.io.DataOutput dataOutput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            expressionValue4.writeExternal(dataOutput5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(valueExpression3);
    }

    @Test
    public void test10627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10627");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        boolean boolean3 = intModelValue1.has(32);
        long long5 = intModelValue1.asLong((long) 3);
        boolean boolean6 = intModelValue1.asBoolean();
        int int8 = intModelValue1.asInt(52);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 32L + "'", long5 == 32L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 32 + "'", int8 == 32);
    }

    @Test
    public void test10628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10628");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        java.lang.String str2 = doubleModelValue1.asString();
        long long4 = doubleModelValue1.asLong((long) (short) -1);
        double double6 = doubleModelValue1.asDouble(0.0d);
        java.math.BigInteger bigInteger7 = doubleModelValue1.asBigInteger();
        boolean boolean9 = doubleModelValue1.asBoolean(false);
        double double11 = doubleModelValue1.asDouble(32.0d);
        long long12 = doubleModelValue1.asLong();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "10.0" + "'", str2, "10.0");
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10L + "'", long4 == 10L);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(bigInteger7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10L + "'", long12 == 10L);
    }

    @Test
    public void test10629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10629");
        org.jboss.dmr.ModelNodeFactory modelNodeFactory0 = org.jboss.dmr.ModelNodeFactory.INSTANCE;
        org.jboss.dmr.ModelNode modelNode3 = modelNodeFactory0.readFrom("PROPERTY", false);
        org.jboss.dmr.ModelNode modelNode5 = modelNode3.set((double) (byte) 10);
        org.jboss.dmr.BooleanModelValue booleanModelValue8 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray9 = booleanModelValue8.asBytes();
        java.lang.String str10 = booleanModelValue8.asString();
        int int11 = booleanModelValue8.asInt();
        long long12 = booleanModelValue8.asLong();
        boolean boolean14 = booleanModelValue8.equals((java.lang.Object) '4');
        java.math.BigInteger bigInteger15 = booleanModelValue8.asBigInteger();
        org.jboss.dmr.ModelNode modelNode16 = modelNode3.set("[(\"H4sIAAAAAAAAAAMAAAAAAAAAAAA=\" => big integer 32)]", bigInteger15);
        org.jboss.dmr.LongModelValue longModelValue19 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str20 = longModelValue19.asString();
        double double22 = longModelValue19.asDouble((double) 32L);
        org.jboss.dmr.ValueExpression valueExpression23 = longModelValue19.asExpression();
        byte[] byteArray24 = longModelValue19.asBytes();
        java.lang.String str25 = org.jboss.dmr.Base64.encodeBytes(byteArray24);
        org.jboss.dmr.BytesModelValue bytesModelValue26 = new org.jboss.dmr.BytesModelValue(byteArray24);
        java.math.BigInteger bigInteger27 = bytesModelValue26.asBigInteger();
        org.jboss.dmr.ModelNode modelNode28 = modelNode3.set("Expression \"0.0\"", bigInteger27);
        org.jboss.dmr.ModelNode modelNode29 = modelNode28.clear();
        org.junit.Assert.assertNotNull(modelNodeFactory0);
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(booleanModelValue8);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "true" + "'", str10, "true");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(bigInteger15);
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1" + "'", str20, "1");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(valueExpression23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AAAAAAAAAAE=" + "'", str25, "AAAAAAAAAAE=");
        org.junit.Assert.assertNotNull(bigInteger27);
        org.junit.Assert.assertNotNull(modelNode28);
        org.junit.Assert.assertNotNull(modelNode29);
    }

    @Test
    public void test10630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10630");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        java.lang.String str5 = bigIntegerModelValue4.asString();
        boolean boolean6 = bigIntegerModelValue4.asBoolean();
        org.jboss.dmr.LongModelValue longModelValue8 = new org.jboss.dmr.LongModelValue(1L);
        int int10 = longModelValue8.asInt((int) (byte) 0);
        org.jboss.dmr.LongModelValue longModelValue12 = new org.jboss.dmr.LongModelValue((-1L));
        long long14 = longModelValue12.asLong((long) (byte) -1);
        double double16 = longModelValue12.asDouble((double) 10.0f);
        boolean boolean17 = longModelValue8.equals(longModelValue12);
        byte[] byteArray18 = longModelValue12.asBytes();
        org.jboss.dmr.ModelNode modelNode19 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) longModelValue12);
        byte[] byteArray20 = longModelValue12.asBytes();
        org.jboss.dmr.ModelNode modelNode22 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode25 = modelNode22.set("hi!", 0.0d);
        org.jboss.dmr.Property property26 = new org.jboss.dmr.Property("", modelNode25);
        java.lang.String[] strArray27 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode28 = modelNode25.get(strArray27);
        org.jboss.dmr.ModelNode modelNode29 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int30 = modelNode29.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode31 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode34 = modelNode31.setExpression("hi!", "hi!");
        java.lang.String str35 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode31);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList36 = modelNode31.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode37 = modelNode29.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList36);
        org.jboss.dmr.ModelNode modelNode38 = modelNode28.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList36);
        org.jboss.dmr.ModelNode modelNode39 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int40 = modelNode39.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode41 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode44 = modelNode41.setExpression("hi!", "hi!");
        java.lang.String str45 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode41);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList46 = modelNode41.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode47 = modelNode39.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList46);
        org.jboss.dmr.ModelNode modelNode48 = modelNode39.resolve();
        java.util.List<org.jboss.dmr.Property> propertyList49 = modelNode39.asPropertyList();
        org.jboss.dmr.ModelNode modelNode50 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode53 = modelNode50.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList54 = modelNode53.asList();
        org.jboss.dmr.ListModelValue listModelValue55 = new org.jboss.dmr.ListModelValue(modelNodeList54);
        java.lang.String str56 = listModelValue55.asString();
        boolean boolean58 = listModelValue55.equals((java.lang.Object) true);
        boolean boolean59 = listModelValue55.asBoolean();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList60 = listModelValue55.asList();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList61 = modelNode39.asList(modelNodeList60);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList62 = modelNode38.asList(modelNodeList61);
        boolean boolean63 = longModelValue12.equals((java.lang.Object) modelNodeList62);
        boolean boolean64 = bigIntegerModelValue4.equals((java.lang.Object) modelNodeList62);
        double double65 = bigIntegerModelValue4.asDouble();
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1" + "'", str5, "1");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-1.0d) + "'", double16 == (-1.0d));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, -1, -1, -1, -1, -1, -1, -1]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, -1, -1, -1, -1, -1, -1, -1]");
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(modelNode28);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(modelNode34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str35, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList36);
        org.junit.Assert.assertNotNull(modelNode37);
        org.junit.Assert.assertNotNull(modelNode38);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(modelNode44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str45, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList46);
        org.junit.Assert.assertNotNull(modelNode47);
        org.junit.Assert.assertNotNull(modelNode48);
        org.junit.Assert.assertNotNull(propertyList49);
        org.junit.Assert.assertNotNull(modelNode53);
        org.junit.Assert.assertNotNull(modelNodeList54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str56, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(modelNodeList60);
        org.junit.Assert.assertNotNull(modelNodeList61);
        org.junit.Assert.assertNotNull(modelNodeList62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
    }

    @Test
    public void test10631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10631");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.PROPERTY;
        char char1 = modelType0.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue2 = org.jboss.dmr.TypeModelValue.of(modelType0);
        org.jboss.dmr.ModelType modelType3 = org.jboss.dmr.ModelType.PROPERTY;
        char char4 = modelType3.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue5 = org.jboss.dmr.TypeModelValue.of(modelType3);
        boolean boolean6 = typeModelValue2.equals(typeModelValue5);
        java.lang.String str7 = typeModelValue5.asString();
        org.jboss.dmr.ModelType modelType8 = org.jboss.dmr.ModelType.PROPERTY;
        char char9 = modelType8.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue10 = org.jboss.dmr.TypeModelValue.of(modelType8);
        org.jboss.dmr.ModelType modelType11 = org.jboss.dmr.ModelType.PROPERTY;
        char char12 = modelType11.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue13 = org.jboss.dmr.TypeModelValue.of(modelType11);
        boolean boolean14 = typeModelValue10.equals(typeModelValue13);
        java.lang.String str15 = typeModelValue13.asString();
        boolean boolean17 = typeModelValue13.asBoolean(true);
        boolean boolean18 = typeModelValue5.equals(typeModelValue13);
        org.jboss.dmr.ValueExpression valueExpression19 = typeModelValue5.asExpression();
        org.jboss.dmr.ModelType modelType20 = org.jboss.dmr.ModelType.PROPERTY;
        char char21 = modelType20.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue22 = org.jboss.dmr.TypeModelValue.of(modelType20);
        boolean boolean23 = typeModelValue22.asBoolean();
        java.lang.String str24 = typeModelValue22.asString();
        boolean boolean26 = typeModelValue22.asBoolean(false);
        boolean boolean28 = typeModelValue22.asBoolean(false);
        org.jboss.dmr.ModelType modelType29 = org.jboss.dmr.ModelType.PROPERTY;
        char char30 = modelType29.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue31 = org.jboss.dmr.TypeModelValue.of(modelType29);
        org.jboss.dmr.ModelType modelType32 = org.jboss.dmr.ModelType.PROPERTY;
        char char33 = modelType32.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue34 = org.jboss.dmr.TypeModelValue.of(modelType32);
        boolean boolean35 = typeModelValue31.equals(typeModelValue34);
        java.lang.String str36 = typeModelValue34.asString();
        boolean boolean37 = typeModelValue22.equals(typeModelValue34);
        boolean boolean38 = typeModelValue5.equals(typeModelValue34);
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType0.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char1 + "' != '" + 'p' + "'", char1 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue2);
        org.junit.Assert.assertTrue("'" + modelType3 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType3.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char4 + "' != '" + 'p' + "'", char4 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PROPERTY" + "'", str7, "PROPERTY");
        org.junit.Assert.assertTrue("'" + modelType8 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType8.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char9 + "' != '" + 'p' + "'", char9 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue10);
        org.junit.Assert.assertTrue("'" + modelType11 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType11.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char12 + "' != '" + 'p' + "'", char12 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PROPERTY" + "'", str15, "PROPERTY");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(valueExpression19);
        org.junit.Assert.assertTrue("'" + modelType20 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType20.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char21 + "' != '" + 'p' + "'", char21 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PROPERTY" + "'", str24, "PROPERTY");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + modelType29 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType29.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char30 + "' != '" + 'p' + "'", char30 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue31);
        org.junit.Assert.assertTrue("'" + modelType32 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType32.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char33 + "' != '" + 'p' + "'", char33 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "PROPERTY" + "'", str36, "PROPERTY");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test10632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10632");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream5 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4);
        org.jboss.dmr.stream.ModelReader modelReader6 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream5);
        java.io.InputStream inputStream7 = null;
        org.jboss.dmr.Base64.InputStream inputStream9 = new org.jboss.dmr.Base64.InputStream(inputStream7, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream11 = new org.jboss.dmr.Base64.InputStream(inputStream7, (int) (byte) 100);
        org.jboss.dmr.Base64.InputStream inputStream12 = new org.jboss.dmr.Base64.InputStream(inputStream7);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream(inputStream7, 0);
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory17 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream18 = null;
        org.jboss.dmr.Base64.InputStream inputStream20 = new org.jboss.dmr.Base64.InputStream(inputStream18, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream21 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream20);
        org.jboss.dmr.stream.ModelReader modelReader22 = modelStreamFactory17.newModelReader((java.io.InputStream) inputStream21);
        java.io.OutputStream outputStream23 = null;
        org.jboss.dmr.Base64.OutputStream outputStream24 = new org.jboss.dmr.Base64.OutputStream(outputStream23);
        org.jboss.dmr.Base64.OutputStream outputStream25 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream24);
        outputStream24.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter28 = modelStreamFactory17.newModelWriter((java.io.OutputStream) outputStream24);
        java.io.OutputStream outputStream29 = null;
        org.jboss.dmr.Base64.OutputStream outputStream30 = new org.jboss.dmr.Base64.OutputStream(outputStream29);
        outputStream30.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream32 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream30);
        org.jboss.dmr.Base64.OutputStream outputStream34 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream32, (int) (byte) -1);
        org.jboss.dmr.Base64.OutputStream outputStream35 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream34);
        outputStream35.resumeEncoding();
        outputStream35.flushBase64();
        org.jboss.dmr.stream.ModelWriter modelWriter38 = modelStreamFactory17.newModelWriter((java.io.OutputStream) outputStream35);
        java.io.InputStream inputStream39 = null;
        org.jboss.dmr.Base64.InputStream inputStream41 = new org.jboss.dmr.Base64.InputStream(inputStream39, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue43 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str44 = longModelValue43.asString();
        byte[] byteArray45 = longModelValue43.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue46 = new org.jboss.dmr.BytesModelValue(byteArray45);
        int int49 = inputStream41.read(byteArray45, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream51 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream41, (-1));
        org.jboss.dmr.Base64.InputStream inputStream53 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream41, (int) 'p');
        org.jboss.dmr.stream.ModelReader modelReader54 = modelStreamFactory17.newModelReader((java.io.InputStream) inputStream41);
        org.jboss.dmr.Base64.InputStream inputStream56 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream41, 10);
        org.jboss.dmr.stream.ModelReader modelReader57 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream56);
        org.jboss.dmr.Base64.InputStream inputStream59 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream56, (int) 's');
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode60 = org.jboss.dmr.ModelNode.fromJSONStream((java.io.InputStream) inputStream56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertNotNull(modelReader6);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertNotNull(modelStreamFactory17);
        org.junit.Assert.assertNotNull(modelReader22);
        org.junit.Assert.assertNotNull(modelWriter28);
        org.junit.Assert.assertNotNull(modelWriter38);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1" + "'", str44, "1");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(modelReader54);
        org.junit.Assert.assertNotNull(modelReader57);
    }

    @Test
    public void test10633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10633");
        java.io.OutputStream outputStream0 = null;
        org.jboss.dmr.Base64.OutputStream outputStream1 = new org.jboss.dmr.Base64.OutputStream(outputStream0);
        outputStream1.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream3 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream1);
        outputStream1.write((int) (short) 10);
    }

    @Test
    public void test10634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10634");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        byte[] byteArray2 = stringModelValue1.asBytes();
        org.jboss.dmr.LongModelValue longModelValue4 = new org.jboss.dmr.LongModelValue(1L);
        java.math.BigDecimal bigDecimal5 = longModelValue4.asBigDecimal();
        byte[] byteArray6 = longModelValue4.asBytes();
        boolean boolean7 = stringModelValue1.equals((java.lang.Object) byteArray6);
        org.jboss.dmr.ModelNode modelNode10 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long11 = modelNode10.asLong();
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode17 = modelNode14.set("hi!", 0.0d);
        org.jboss.dmr.Property property18 = new org.jboss.dmr.Property("", modelNode17);
        java.lang.String[] strArray19 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode20 = modelNode17.get(strArray19);
        org.jboss.dmr.ModelNode modelNode21 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode24 = modelNode21.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList25 = modelNode24.asList();
        org.jboss.dmr.ListModelValue listModelValue26 = new org.jboss.dmr.ListModelValue(modelNodeList25);
        org.jboss.dmr.ModelNode modelNode27 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue26);
        org.jboss.dmr.ModelValue modelValue28 = listModelValue26.resolve();
        int int30 = listModelValue26.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList31 = listModelValue26.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList32 = modelNode20.asPropertyList(propertyList31);
        org.jboss.dmr.ModelNode modelNode34 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode37 = modelNode34.set("hi!", 0.0d);
        org.jboss.dmr.Property property38 = new org.jboss.dmr.Property("", modelNode37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode40 = modelNode37.get(strArray39);
        org.jboss.dmr.ModelNode modelNode41 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode44 = modelNode41.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList45 = modelNode44.asList();
        org.jboss.dmr.ListModelValue listModelValue46 = new org.jboss.dmr.ListModelValue(modelNodeList45);
        org.jboss.dmr.ModelNode modelNode47 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue46);
        org.jboss.dmr.ModelValue modelValue48 = listModelValue46.resolve();
        int int50 = listModelValue46.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList51 = listModelValue46.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList52 = modelNode40.asPropertyList(propertyList51);
        modelNode20.setNoCopy(modelNode40);
        org.jboss.dmr.ModelNode modelNode54 = modelNode10.set("org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]", modelNode20);
        org.jboss.dmr.ModelNode modelNode56 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode59 = modelNode56.set("hi!", 0.0d);
        org.jboss.dmr.Property property60 = new org.jboss.dmr.Property("", modelNode59);
        java.lang.String[] strArray61 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode62 = modelNode59.get(strArray61);
        org.jboss.dmr.ModelNode modelNode63 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int64 = modelNode63.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode65 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode68 = modelNode65.setExpression("hi!", "hi!");
        java.lang.String str69 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode65);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList70 = modelNode65.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode71 = modelNode63.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList70);
        org.jboss.dmr.ModelNode modelNode72 = modelNode62.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList70);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList73 = modelNode10.asList(modelNodeList70);
        org.jboss.dmr.PropertyModelValue propertyModelValue75 = new org.jboss.dmr.PropertyModelValue("Expression \"true\"", modelNode10, false);
        org.jboss.dmr.ModelType modelType76 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode77 = new org.jboss.dmr.ModelNode(modelType76);
        org.jboss.dmr.ModelNode modelNode79 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode82 = modelNode79.set("hi!", 0.0d);
        org.jboss.dmr.Property property83 = new org.jboss.dmr.Property("", modelNode82);
        org.jboss.dmr.ModelNode modelNode84 = modelNode77.set(property83);
        org.jboss.dmr.PropertyModelValue propertyModelValue85 = new org.jboss.dmr.PropertyModelValue(property83);
        org.jboss.dmr.ModelValue modelValue86 = propertyModelValue85.copy();
        boolean boolean87 = propertyModelValue75.equals(propertyModelValue85);
        boolean boolean89 = propertyModelValue85.has("bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        boolean boolean90 = stringModelValue1.equals((java.lang.Object) propertyModelValue85);
        java.lang.String str91 = stringModelValue1.asString();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode93 = stringModelValue1.removeChild("big decimal 1.0");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 32, 34, 116, 114, 117, 101, 34]");
        org.junit.Assert.assertNotNull(bigDecimal5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertNotNull(modelNodeList25);
        org.junit.Assert.assertNotNull(modelValue28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(propertyList31);
        org.junit.Assert.assertNotNull(propertyList32);
        org.junit.Assert.assertNotNull(modelNode37);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(modelNode40);
        org.junit.Assert.assertNotNull(modelNode44);
        org.junit.Assert.assertNotNull(modelNodeList45);
        org.junit.Assert.assertNotNull(modelValue48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(propertyList51);
        org.junit.Assert.assertNotNull(propertyList52);
        org.junit.Assert.assertNotNull(modelNode54);
        org.junit.Assert.assertNotNull(modelNode59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(modelNode62);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNotNull(modelNode68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str69, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList70);
        org.junit.Assert.assertNotNull(modelNode71);
        org.junit.Assert.assertNotNull(modelNode72);
        org.junit.Assert.assertNotNull(modelNodeList73);
        org.junit.Assert.assertTrue("'" + modelType76 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType76.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode82);
        org.junit.Assert.assertNotNull(modelNode84);
        org.junit.Assert.assertNotNull(modelValue86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "Expression \"true\"" + "'", str91, "Expression \"true\"");
    }

    @Test
    public void test10635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10635");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(32);
        boolean boolean3 = modelNode1.asBoolean(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test10636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10636");
        java.io.InputStream inputStream0 = null;
        org.jboss.dmr.Base64.InputStream inputStream2 = new org.jboss.dmr.Base64.InputStream(inputStream0, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream3 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream2);
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream3);
        org.jboss.dmr.Base64.InputStream inputStream6 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream3, (int) '#');
        org.jboss.dmr.Base64.InputStream inputStream7 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream6);
        org.jboss.dmr.ModelNode modelNode9 = new org.jboss.dmr.ModelNode("EXPRESSION_VALUE");
        org.jboss.dmr.BooleanModelValue booleanModelValue12 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger13 = booleanModelValue12.asBigInteger();
        byte[] byteArray14 = booleanModelValue12.asBytes();
        org.jboss.dmr.ModelNode modelNode15 = modelNode9.set("expression \"hi!\"", byteArray14);
        boolean boolean17 = org.jboss.dmr.Base64.encodeToFile(byteArray14, "(\"\" => (\"hi!\" => 0.0))");
        org.jboss.dmr.ModelNode modelNode18 = new org.jboss.dmr.ModelNode(byteArray14);
        byte[] byteArray21 = org.jboss.dmr.Base64.decode(byteArray14, 35, 0);
        // The following exception was thrown during execution in test generation
        try {
            int int22 = inputStream7.read(byteArray14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanModelValue12);
        org.junit.Assert.assertNotNull(bigInteger13);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[1]");
        org.junit.Assert.assertNotNull(modelNode15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
    }

    @Test
    public void test10637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10637");
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode((long) 10);
        java.lang.String str4 = modelNode2.asString("true");
        org.jboss.dmr.Property property5 = new org.jboss.dmr.Property("bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }", modelNode2);
        org.jboss.dmr.DoubleModelValue doubleModelValue7 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long8 = doubleModelValue7.asLong();
        boolean boolean10 = doubleModelValue7.asBoolean(true);
        int int11 = doubleModelValue7.asInt();
        org.jboss.dmr.DoubleModelValue doubleModelValue13 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long14 = doubleModelValue13.asLong();
        long long16 = doubleModelValue13.asLong((long) 32);
        byte[] byteArray17 = doubleModelValue13.asBytes();
        boolean boolean18 = doubleModelValue7.equals(doubleModelValue13);
        boolean boolean19 = doubleModelValue13.asBoolean();
        java.math.BigInteger bigInteger20 = doubleModelValue13.asBigInteger();
        boolean boolean21 = modelNode2.equals((java.lang.Object) doubleModelValue13);
        org.jboss.dmr.ModelNode modelNode23 = modelNode2.set((long) 3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "10" + "'", str4, "10");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10L + "'", long8 == 10L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10L + "'", long14 == 10L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10L + "'", long16 == 10L);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(bigInteger20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(modelNode23);
    }

    @Test
    public void test10638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10638");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.PROPERTY;
        char char1 = modelType0.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue2 = org.jboss.dmr.TypeModelValue.of(modelType0);
        org.jboss.dmr.ModelType modelType3 = org.jboss.dmr.ModelType.PROPERTY;
        char char4 = modelType3.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue5 = org.jboss.dmr.TypeModelValue.of(modelType3);
        boolean boolean6 = typeModelValue2.equals(typeModelValue5);
        java.lang.String str7 = typeModelValue5.asString();
        org.jboss.dmr.ValueExpression valueExpression8 = typeModelValue5.asExpression();
        org.jboss.dmr.ModelType modelType9 = typeModelValue5.asType();
        boolean boolean10 = typeModelValue5.asBoolean();
        java.lang.String str11 = typeModelValue5.asString();
        java.lang.String str12 = typeModelValue5.asString();
        boolean boolean14 = typeModelValue5.asBoolean(false);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet15 = typeModelValue5.getKeys();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType0.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char1 + "' != '" + 'p' + "'", char1 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue2);
        org.junit.Assert.assertTrue("'" + modelType3 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType3.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char4 + "' != '" + 'p' + "'", char4 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PROPERTY" + "'", str7, "PROPERTY");
        org.junit.Assert.assertNotNull(valueExpression8);
        org.junit.Assert.assertTrue("'" + modelType9 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType9.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PROPERTY" + "'", str11, "PROPERTY");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PROPERTY" + "'", str12, "PROPERTY");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test10639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10639");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("");
        org.jboss.dmr.ValueExpression valueExpression2 = stringModelValue1.asExpression();
        // The following exception was thrown during execution in test generation
        try {
            long long4 = stringModelValue1.asLong((long) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(valueExpression2);
    }

    @Test
    public void test10640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10640");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(true);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.Base64.InputStream inputStream16 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (int) 'p');
        org.jboss.dmr.Base64.InputStream inputStream17 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream16);
        org.jboss.dmr.stream.ModelReader modelReader18 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream16);
        java.io.InputStream inputStream19 = null;
        org.jboss.dmr.Base64.InputStream inputStream21 = new org.jboss.dmr.Base64.InputStream(inputStream19, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream22 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream21);
        org.jboss.dmr.stream.ModelReader modelReader23 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream21);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode24 = org.jboss.dmr.ModelNode.fromBase64((java.io.InputStream) inputStream21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader18);
        org.junit.Assert.assertNotNull(modelReader23);
    }

    @Test
    public void test10641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10641");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.PROPERTY;
        char char1 = modelType0.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue2 = org.jboss.dmr.TypeModelValue.of(modelType0);
        org.jboss.dmr.ModelType modelType3 = org.jboss.dmr.ModelType.PROPERTY;
        char char4 = modelType3.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue5 = org.jboss.dmr.TypeModelValue.of(modelType3);
        boolean boolean6 = typeModelValue2.equals(typeModelValue5);
        java.lang.String str7 = typeModelValue5.asString();
        org.jboss.dmr.ModelType modelType8 = org.jboss.dmr.ModelType.PROPERTY;
        char char9 = modelType8.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue10 = org.jboss.dmr.TypeModelValue.of(modelType8);
        org.jboss.dmr.ModelType modelType11 = org.jboss.dmr.ModelType.PROPERTY;
        char char12 = modelType11.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue13 = org.jboss.dmr.TypeModelValue.of(modelType11);
        boolean boolean14 = typeModelValue10.equals(typeModelValue13);
        java.lang.String str15 = typeModelValue13.asString();
        boolean boolean17 = typeModelValue13.asBoolean(true);
        boolean boolean18 = typeModelValue5.equals(typeModelValue13);
        org.jboss.dmr.IntModelValue intModelValue20 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str21 = intModelValue20.asString();
        long long22 = intModelValue20.asLong();
        org.jboss.dmr.ModelValue modelValue23 = intModelValue20.protect();
        boolean boolean24 = typeModelValue13.equals((java.lang.Object) intModelValue20);
        double double26 = intModelValue20.asDouble((double) (short) 100);
        boolean boolean27 = intModelValue20.asBoolean();
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType0.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char1 + "' != '" + 'p' + "'", char1 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue2);
        org.junit.Assert.assertTrue("'" + modelType3 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType3.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char4 + "' != '" + 'p' + "'", char4 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PROPERTY" + "'", str7, "PROPERTY");
        org.junit.Assert.assertTrue("'" + modelType8 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType8.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char9 + "' != '" + 'p' + "'", char9 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue10);
        org.junit.Assert.assertTrue("'" + modelType11 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType11.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char12 + "' != '" + 'p' + "'", char12 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PROPERTY" + "'", str15, "PROPERTY");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "32" + "'", str21, "32");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 32L + "'", long22 == 32L);
        org.junit.Assert.assertNotNull(modelValue23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 32.0d + "'", double26 == 32.0d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test10642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10642");
        org.jboss.dmr.ExpressionValue expressionValue1 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue3 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean4 = expressionValue1.equals(expressionValue3);
        org.jboss.dmr.ExpressionValue expressionValue6 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue8 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean9 = expressionValue6.equals(expressionValue8);
        boolean boolean10 = expressionValue1.equals(expressionValue8);
        org.jboss.dmr.ExpressionValue expressionValue12 = new org.jboss.dmr.ExpressionValue("hi!");
        java.lang.String str13 = expressionValue12.asString();
        boolean boolean14 = expressionValue1.equals(expressionValue12);
        org.jboss.dmr.ModelNode modelNode16 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode19 = modelNode16.set("hi!", 0.0d);
        org.jboss.dmr.Property property20 = new org.jboss.dmr.Property("", modelNode19);
        java.lang.String[] strArray21 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode22 = modelNode19.get(strArray21);
        org.jboss.dmr.ModelNode modelNode23 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode26 = modelNode23.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList27 = modelNode26.asList();
        org.jboss.dmr.ListModelValue listModelValue28 = new org.jboss.dmr.ListModelValue(modelNodeList27);
        org.jboss.dmr.ModelNode modelNode29 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue28);
        org.jboss.dmr.ModelValue modelValue30 = listModelValue28.resolve();
        int int32 = listModelValue28.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList33 = listModelValue28.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList34 = modelNode22.asPropertyList(propertyList33);
        org.jboss.dmr.ModelNode modelNode36 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode39 = modelNode36.set("hi!", 0.0d);
        org.jboss.dmr.Property property40 = new org.jboss.dmr.Property("", modelNode39);
        java.lang.String[] strArray41 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode42 = modelNode39.get(strArray41);
        org.jboss.dmr.ModelNode modelNode43 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode46 = modelNode43.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList47 = modelNode46.asList();
        org.jboss.dmr.ListModelValue listModelValue48 = new org.jboss.dmr.ListModelValue(modelNodeList47);
        org.jboss.dmr.ModelNode modelNode49 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue48);
        org.jboss.dmr.ModelValue modelValue50 = listModelValue48.resolve();
        int int52 = listModelValue48.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList53 = listModelValue48.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList54 = modelNode42.asPropertyList(propertyList53);
        modelNode22.setNoCopy(modelNode42);
        boolean boolean56 = expressionValue12.equals((java.lang.Object) modelNode22);
        org.jboss.dmr.ModelNode modelNode59 = modelNode22.set("[1]", 0);
        org.jboss.dmr.ModelNode modelNode61 = modelNode22.setExpression("\"{\n    \\\"hi!\\\" : {\n        \\\"EXPRESSION_VALUE\\\" : \\\"hi!\\\"\n    }\n}\"");
        java.io.OutputStream outputStream62 = null;
        org.jboss.dmr.Base64.OutputStream outputStream63 = new org.jboss.dmr.Base64.OutputStream(outputStream62);
        org.jboss.dmr.Base64.OutputStream outputStream64 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream63);
        org.jboss.dmr.Base64.OutputStream outputStream65 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream64);
        outputStream64.resumeEncoding();
        outputStream64.resumeEncoding();
        outputStream64.resumeEncoding();
        // The following exception was thrown during execution in test generation
        try {
            modelNode22.writeBase64((java.io.OutputStream) outputStream64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(modelNode22);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertNotNull(modelNodeList27);
        org.junit.Assert.assertNotNull(modelValue30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(propertyList33);
        org.junit.Assert.assertNotNull(propertyList34);
        org.junit.Assert.assertNotNull(modelNode39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(modelNode42);
        org.junit.Assert.assertNotNull(modelNode46);
        org.junit.Assert.assertNotNull(modelNodeList47);
        org.junit.Assert.assertNotNull(modelValue50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(propertyList53);
        org.junit.Assert.assertNotNull(propertyList54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(modelNode59);
        org.junit.Assert.assertNotNull(modelNode61);
    }

    @Test
    public void test10643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10643");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int1 = modelNode0.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long4 = modelNode3.asLong();
        org.jboss.dmr.ValueExpression valueExpression5 = modelNode3.asExpression();
        java.math.BigDecimal bigDecimal6 = valueExpression5.resolveBigDecimal();
        org.jboss.dmr.ModelNode modelNode7 = modelNode0.set(valueExpression5);
        java.lang.String str8 = valueExpression5.getExpressionString();
        java.lang.String str9 = valueExpression5.resolveString();
        org.jboss.dmr.ExpressionValue expressionValue10 = new org.jboss.dmr.ExpressionValue(valueExpression5);
        org.jboss.dmr.DoubleModelValue doubleModelValue12 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long13 = doubleModelValue12.asLong();
        boolean boolean14 = doubleModelValue12.asBoolean();
        byte[] byteArray15 = doubleModelValue12.asBytes();
        double double16 = doubleModelValue12.asDouble();
        org.jboss.dmr.ValueExpression valueExpression17 = doubleModelValue12.asExpression();
        java.lang.String str18 = doubleModelValue12.asString();
        boolean boolean19 = valueExpression5.equals((java.lang.Object) doubleModelValue12);
        boolean boolean21 = doubleModelValue12.asBoolean(true);
        byte[] byteArray22 = doubleModelValue12.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue23 = new org.jboss.dmr.BytesModelValue(byteArray22);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray26 = org.jboss.dmr.Base64.decode(byteArray22, (int) '4', (int) 's');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 52");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(valueExpression5);
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1.0" + "'", str8, "1.0");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1.0" + "'", str9, "1.0");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10L + "'", long13 == 10L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertNotNull(valueExpression17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "10.0" + "'", str18, "10.0");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[64, 36, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test10644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10644");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isBigInteger();
        boolean boolean17 = modelReader15.isLong();
        boolean boolean18 = modelReader15.isBigDecimal();
        boolean boolean19 = modelReader15.isUndefined();
        boolean boolean20 = modelReader15.isUndefined();
        boolean boolean21 = modelReader15.isListStart();
        boolean boolean22 = modelReader15.isPropertyStart();
        boolean boolean23 = modelReader15.isObjectEnd();
        boolean boolean24 = modelReader15.isObjectStart();
        boolean boolean25 = modelReader15.isUndefined();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelType modelType26 = modelReader15.getType();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Current event isn't type");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test10645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10645");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isBigInteger();
        boolean boolean17 = modelReader15.isLong();
        boolean boolean18 = modelReader15.isBigDecimal();
        boolean boolean19 = modelReader15.isUndefined();
        boolean boolean20 = modelReader15.isUndefined();
        boolean boolean21 = modelReader15.isObjectStart();
        boolean boolean22 = modelReader15.isObjectEnd();
        boolean boolean23 = modelReader15.isBytes();
        boolean boolean24 = modelReader15.isObjectStart();
        boolean boolean25 = modelReader15.isObjectStart();
        boolean boolean26 = modelReader15.isPropertyStart();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test10646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10646");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.PROPERTY;
        char char1 = modelType0.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue2 = org.jboss.dmr.TypeModelValue.of(modelType0);
        org.jboss.dmr.ModelType modelType3 = org.jboss.dmr.ModelType.PROPERTY;
        char char4 = modelType3.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue5 = org.jboss.dmr.TypeModelValue.of(modelType3);
        boolean boolean6 = typeModelValue2.equals(typeModelValue5);
        java.lang.String str7 = typeModelValue5.asString();
        org.jboss.dmr.ModelType modelType8 = org.jboss.dmr.ModelType.PROPERTY;
        char char9 = modelType8.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue10 = org.jboss.dmr.TypeModelValue.of(modelType8);
        org.jboss.dmr.ModelType modelType11 = org.jboss.dmr.ModelType.PROPERTY;
        char char12 = modelType11.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue13 = org.jboss.dmr.TypeModelValue.of(modelType11);
        boolean boolean14 = typeModelValue10.equals(typeModelValue13);
        java.lang.String str15 = typeModelValue13.asString();
        boolean boolean17 = typeModelValue13.asBoolean(true);
        boolean boolean18 = typeModelValue5.equals(typeModelValue13);
        org.jboss.dmr.ValueExpression valueExpression19 = typeModelValue13.asExpression();
        org.jboss.dmr.ModelType modelType20 = org.jboss.dmr.ModelType.PROPERTY;
        char char21 = modelType20.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue22 = org.jboss.dmr.TypeModelValue.of(modelType20);
        org.jboss.dmr.ModelType modelType23 = org.jboss.dmr.ModelType.PROPERTY;
        char char24 = modelType23.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue25 = org.jboss.dmr.TypeModelValue.of(modelType23);
        boolean boolean26 = typeModelValue22.equals(typeModelValue25);
        boolean boolean27 = typeModelValue13.equals(typeModelValue22);
        org.jboss.dmr.ModelType modelType28 = org.jboss.dmr.ModelType.PROPERTY;
        char char29 = modelType28.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue30 = org.jboss.dmr.TypeModelValue.of(modelType28);
        boolean boolean31 = typeModelValue30.asBoolean();
        boolean boolean32 = typeModelValue13.equals(typeModelValue30);
        org.jboss.dmr.ValueExpression valueExpression33 = typeModelValue30.asExpression();
        org.jboss.dmr.ModelType modelType34 = org.jboss.dmr.ModelType.TYPE;
        org.jboss.dmr.TypeModelValue typeModelValue35 = org.jboss.dmr.TypeModelValue.of(modelType34);
        org.jboss.dmr.ModelNode modelNode36 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode37 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode40 = modelNode37.set("hi!", 0.0d);
        java.lang.String str41 = modelNode37.toString();
        org.jboss.dmr.ModelNode modelNode42 = modelNode37.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode44 = modelNode37.set(100);
        org.jboss.dmr.ModelNode modelNode45 = modelNode36.add(modelNode37);
        org.jboss.dmr.ModelType modelType47 = org.jboss.dmr.ModelType.BYTES;
        char char48 = modelType47.getTypeChar();
        org.jboss.dmr.ModelNode modelNode49 = modelNode36.set("org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]", modelType47);
        org.jboss.dmr.TypeModelValue typeModelValue50 = org.jboss.dmr.TypeModelValue.of(modelType47);
        boolean boolean51 = typeModelValue50.asBoolean();
        boolean boolean52 = typeModelValue35.equals(typeModelValue50);
        boolean boolean53 = typeModelValue30.equals(typeModelValue35);
        org.jboss.dmr.StringModelValue stringModelValue55 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        org.jboss.dmr.ValueExpression valueExpression56 = stringModelValue55.asExpression();
        boolean boolean58 = stringModelValue55.equals((java.lang.Object) (-1.0d));
        java.lang.String str59 = stringModelValue55.asString();
        org.jboss.dmr.stream.ModelEvent modelEvent60 = org.jboss.dmr.stream.ModelEvent.UNDEFINED;
        boolean boolean61 = stringModelValue55.equals((java.lang.Object) modelEvent60);
        org.jboss.dmr.StringModelValue stringModelValue63 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.StringModelValue stringModelValue65 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.StringModelValue stringModelValue67 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        boolean boolean68 = stringModelValue65.equals(stringModelValue67);
        byte[] byteArray69 = stringModelValue67.asBytes();
        java.lang.Object obj70 = null;
        boolean boolean71 = stringModelValue67.equals(obj70);
        boolean boolean73 = stringModelValue67.equals((java.lang.Object) "TYPE_MODEL_VALUE");
        boolean boolean74 = stringModelValue63.equals(stringModelValue67);
        boolean boolean75 = stringModelValue55.equals(stringModelValue67);
        org.jboss.dmr.StringModelValue stringModelValue76 = null;
        boolean boolean77 = stringModelValue55.equals(stringModelValue76);
        boolean boolean78 = typeModelValue30.equals((java.lang.Object) stringModelValue55);
        // The following exception was thrown during execution in test generation
        try {
            long long80 = stringModelValue55.asLong((long) 's');
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"(\"\" => (\"hi!\" => 0.0))\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType0.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char1 + "' != '" + 'p' + "'", char1 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue2);
        org.junit.Assert.assertTrue("'" + modelType3 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType3.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char4 + "' != '" + 'p' + "'", char4 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PROPERTY" + "'", str7, "PROPERTY");
        org.junit.Assert.assertTrue("'" + modelType8 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType8.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char9 + "' != '" + 'p' + "'", char9 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue10);
        org.junit.Assert.assertTrue("'" + modelType11 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType11.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char12 + "' != '" + 'p' + "'", char12 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PROPERTY" + "'", str15, "PROPERTY");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(valueExpression19);
        org.junit.Assert.assertTrue("'" + modelType20 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType20.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char21 + "' != '" + 'p' + "'", char21 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue22);
        org.junit.Assert.assertTrue("'" + modelType23 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType23.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char24 + "' != '" + 'p' + "'", char24 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + modelType28 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType28.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char29 + "' != '" + 'p' + "'", char29 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(valueExpression33);
        org.junit.Assert.assertTrue("'" + modelType34 + "' != '" + org.jboss.dmr.ModelType.TYPE + "'", modelType34.equals(org.jboss.dmr.ModelType.TYPE));
        org.junit.Assert.assertNotNull(typeModelValue35);
        org.junit.Assert.assertNotNull(modelNode40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(\"hi!\" => 0.0)" + "'", str41, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode42);
        org.junit.Assert.assertNotNull(modelNode44);
        org.junit.Assert.assertNotNull(modelNode45);
        org.junit.Assert.assertTrue("'" + modelType47 + "' != '" + org.jboss.dmr.ModelType.BYTES + "'", modelType47.equals(org.jboss.dmr.ModelType.BYTES));
        org.junit.Assert.assertTrue("'" + char48 + "' != '" + 'b' + "'", char48 == 'b');
        org.junit.Assert.assertNotNull(modelNode49);
        org.junit.Assert.assertNotNull(typeModelValue50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(valueExpression56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(\"\" => (\"hi!\" => 0.0))" + "'", str59, "(\"\" => (\"hi!\" => 0.0))");
        org.junit.Assert.assertTrue("'" + modelEvent60 + "' != '" + org.jboss.dmr.stream.ModelEvent.UNDEFINED + "'", modelEvent60.equals(org.jboss.dmr.stream.ModelEvent.UNDEFINED));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[40, 34, 34, 32, 61, 62, 32, 40, 34, 104, 105, 33, 34, 32, 61, 62, 32, 48, 46, 48, 41, 41]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test10647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10647");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        int int3 = longModelValue1.asInt((int) (byte) 0);
        org.jboss.dmr.LongModelValue longModelValue5 = new org.jboss.dmr.LongModelValue((-1L));
        long long7 = longModelValue5.asLong((long) (byte) -1);
        double double9 = longModelValue5.asDouble((double) 10.0f);
        boolean boolean10 = longModelValue1.equals(longModelValue5);
        byte[] byteArray11 = longModelValue5.asBytes();
        org.jboss.dmr.ModelNode modelNode12 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) longModelValue5);
        byte[] byteArray13 = longModelValue5.asBytes();
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode18 = modelNode15.set("hi!", 0.0d);
        org.jboss.dmr.Property property19 = new org.jboss.dmr.Property("", modelNode18);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode21 = modelNode18.get(strArray20);
        org.jboss.dmr.ModelNode modelNode22 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int23 = modelNode22.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode24 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode27 = modelNode24.setExpression("hi!", "hi!");
        java.lang.String str28 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode24);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList29 = modelNode24.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode30 = modelNode22.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList29);
        org.jboss.dmr.ModelNode modelNode31 = modelNode21.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList29);
        org.jboss.dmr.ModelNode modelNode32 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int33 = modelNode32.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode34 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode37 = modelNode34.setExpression("hi!", "hi!");
        java.lang.String str38 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode34);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList39 = modelNode34.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode40 = modelNode32.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList39);
        org.jboss.dmr.ModelNode modelNode41 = modelNode32.resolve();
        java.util.List<org.jboss.dmr.Property> propertyList42 = modelNode32.asPropertyList();
        org.jboss.dmr.ModelNode modelNode43 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode46 = modelNode43.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList47 = modelNode46.asList();
        org.jboss.dmr.ListModelValue listModelValue48 = new org.jboss.dmr.ListModelValue(modelNodeList47);
        java.lang.String str49 = listModelValue48.asString();
        boolean boolean51 = listModelValue48.equals((java.lang.Object) true);
        boolean boolean52 = listModelValue48.asBoolean();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList53 = listModelValue48.asList();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList54 = modelNode32.asList(modelNodeList53);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList55 = modelNode31.asList(modelNodeList54);
        boolean boolean56 = longModelValue5.equals((java.lang.Object) modelNodeList55);
        int int58 = longModelValue5.asInt(0);
        byte[] byteArray59 = longModelValue5.asBytes();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1.0d) + "'", double9 == (-1.0d));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, -1, -1, -1, -1, -1, -1, -1]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, -1, -1, -1, -1, -1, -1, -1]");
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(modelNode21);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str28, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList29);
        org.junit.Assert.assertNotNull(modelNode30);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(modelNode37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str38, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList39);
        org.junit.Assert.assertNotNull(modelNode40);
        org.junit.Assert.assertNotNull(modelNode41);
        org.junit.Assert.assertNotNull(propertyList42);
        org.junit.Assert.assertNotNull(modelNode46);
        org.junit.Assert.assertNotNull(modelNodeList47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str49, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(modelNodeList53);
        org.junit.Assert.assertNotNull(modelNodeList54);
        org.junit.Assert.assertNotNull(modelNodeList55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[-1, -1, -1, -1, -1, -1, -1, -1]");
    }

    @Test
    public void test10648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10648");
        java.io.InputStream inputStream0 = null;
        org.jboss.dmr.Base64.InputStream inputStream2 = new org.jboss.dmr.Base64.InputStream(inputStream0, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue4 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str5 = longModelValue4.asString();
        byte[] byteArray6 = longModelValue4.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue7 = new org.jboss.dmr.BytesModelValue(byteArray6);
        int int10 = inputStream2.read(byteArray6, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream12 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream2, (-1));
        byte[] byteArray13 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int16 = inputStream2.read(byteArray13, 1, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1" + "'", str5, "1");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test10649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10649");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        boolean boolean8 = bigDecimalModelValue7.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression9 = bigDecimalModelValue7.asExpression();
        org.jboss.dmr.IntModelValue intModelValue11 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long13 = intModelValue11.asLong((long) 'b');
        java.lang.String str14 = intModelValue11.asString();
        long long15 = intModelValue11.asLong();
        long long16 = intModelValue11.asLong();
        org.jboss.dmr.ValueExpression valueExpression17 = intModelValue11.asExpression();
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver18 = new org.jboss.dmr.ValueExpressionResolver();
        java.math.BigDecimal bigDecimal19 = valueExpression17.resolveBigDecimal(valueExpressionResolver18);
        boolean boolean20 = valueExpression9.equals(valueExpression17);
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver21 = org.jboss.dmr.ValueExpressionResolver.DEFAULT_RESOLVER;
        org.jboss.dmr.BooleanModelValue booleanModelValue23 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long24 = booleanModelValue23.asLong();
        org.jboss.dmr.ValueExpression valueExpression25 = booleanModelValue23.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue26 = new org.jboss.dmr.ExpressionValue(valueExpression25);
        java.lang.String str27 = valueExpression25.getExpressionString();
        java.lang.String str28 = valueExpressionResolver21.resolve(valueExpression25);
        java.lang.String str29 = valueExpression17.resolveString(valueExpressionResolver21);
        int int30 = valueExpression17.resolveInt();
        org.jboss.dmr.ModelNode modelNode31 = new org.jboss.dmr.ModelNode(valueExpression17);
        org.jboss.dmr.ModelNode modelNode34 = modelNode31.set("\"[(\\\"hi!\\\" => expression \\\"hi!\\\"),bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }]\"", 97);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean36 = modelNode31.asBoolean(false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(valueExpression9);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 32L + "'", long13 == 32L);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "32" + "'", str14, "32");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 32L + "'", long15 == 32L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(valueExpression17);
        org.junit.Assert.assertNotNull(bigDecimal19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(valueExpressionResolver21);
        org.junit.Assert.assertNotNull(booleanModelValue23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1L + "'", long24 == 1L);
        org.junit.Assert.assertNotNull(valueExpression25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "true" + "'", str27, "true");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "true" + "'", str28, "true");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "32" + "'", str29, "32");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 32 + "'", int30 == 32);
        org.junit.Assert.assertNotNull(modelNode34);
    }

    @Test
    public void test10650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10650");
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode5 = modelNode2.set("hi!", 0.0d);
        org.jboss.dmr.Property property6 = new org.jboss.dmr.Property("", modelNode5);
        boolean boolean8 = modelNode5.equals((java.lang.Object) 100L);
        org.jboss.dmr.Property property10 = new org.jboss.dmr.Property("[(\"hi!\" => 0.0)]", modelNode5, false);
        org.jboss.dmr.Property property11 = property10.clone();
        org.jboss.dmr.Property property12 = property10.clone();
        org.jboss.dmr.ModelNode modelNode13 = property12.getValue();
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(property11);
        org.junit.Assert.assertNotNull(property12);
        org.junit.Assert.assertNotNull(modelNode13);
    }

    @Test
    public void test10651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10651");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode9 = modelNode6.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList10 = modelNode9.asList();
        org.jboss.dmr.ListModelValue listModelValue11 = new org.jboss.dmr.ListModelValue(modelNodeList10);
        java.lang.String str12 = listModelValue11.asString();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList13 = listModelValue11.asList();
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode17 = modelNode14.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList18 = modelNode17.asList();
        org.jboss.dmr.ListModelValue listModelValue19 = new org.jboss.dmr.ListModelValue(modelNodeList18);
        java.lang.String str20 = listModelValue19.asString();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList21 = listModelValue19.asList();
        boolean boolean22 = listModelValue11.equals(listModelValue19);
        org.jboss.dmr.ModelNode modelNode23 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode26 = modelNode23.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList27 = modelNode26.asList();
        org.jboss.dmr.ListModelValue listModelValue28 = new org.jboss.dmr.ListModelValue(modelNodeList27);
        org.jboss.dmr.ModelNode modelNode29 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue28);
        org.jboss.dmr.ModelValue modelValue30 = listModelValue28.resolve();
        int int32 = listModelValue28.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList33 = listModelValue28.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList34 = listModelValue28.asPropertyList();
        org.jboss.dmr.ModelValue modelValue35 = listModelValue28.copy();
        boolean boolean36 = listModelValue19.equals(listModelValue28);
        java.lang.String str37 = listModelValue19.asString();
        boolean boolean38 = listModelValue5.equals(listModelValue19);
        boolean boolean39 = listModelValue19.asBoolean();
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(modelNodeList10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str12, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertNotNull(modelNodeList13);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertNotNull(modelNodeList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str20, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertNotNull(modelNodeList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertNotNull(modelNodeList27);
        org.junit.Assert.assertNotNull(modelValue30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(propertyList33);
        org.junit.Assert.assertNotNull(propertyList34);
        org.junit.Assert.assertNotNull(modelValue35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str37, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test10652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10652");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(modelType0);
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode6 = modelNode3.set("hi!", 0.0d);
        org.jboss.dmr.Property property7 = new org.jboss.dmr.Property("", modelNode6);
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(property7);
        java.lang.String str9 = property7.getName();
        org.jboss.dmr.Property property10 = property7.clone();
        org.jboss.dmr.PropertyModelValue propertyModelValue11 = new org.jboss.dmr.PropertyModelValue(property7);
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode17 = modelNode14.set("hi!", 0.0d);
        org.jboss.dmr.Property property18 = new org.jboss.dmr.Property("", modelNode17);
        java.lang.String[] strArray19 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode20 = modelNode17.get(strArray19);
        org.jboss.dmr.ModelNode modelNode21 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode24 = modelNode21.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList25 = modelNode24.asList();
        org.jboss.dmr.ListModelValue listModelValue26 = new org.jboss.dmr.ListModelValue(modelNodeList25);
        org.jboss.dmr.ModelNode modelNode27 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue26);
        org.jboss.dmr.ModelValue modelValue28 = listModelValue26.resolve();
        int int30 = listModelValue26.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList31 = listModelValue26.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList32 = modelNode20.asPropertyList(propertyList31);
        org.jboss.dmr.ModelNode modelNode34 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode37 = modelNode34.set("hi!", 0.0d);
        org.jboss.dmr.Property property38 = new org.jboss.dmr.Property("", modelNode37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode40 = modelNode37.get(strArray39);
        org.jboss.dmr.ModelNode modelNode41 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode44 = modelNode41.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList45 = modelNode44.asList();
        org.jboss.dmr.ListModelValue listModelValue46 = new org.jboss.dmr.ListModelValue(modelNodeList45);
        org.jboss.dmr.ModelNode modelNode47 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue46);
        org.jboss.dmr.ModelValue modelValue48 = listModelValue46.resolve();
        int int50 = listModelValue46.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList51 = listModelValue46.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList52 = modelNode40.asPropertyList(propertyList51);
        modelNode20.setNoCopy(modelNode40);
        org.jboss.dmr.ModelNode modelNode55 = modelNode40.set((long) 100);
        org.jboss.dmr.ModelType modelType56 = modelNode55.getType();
        boolean boolean58 = modelNode55.has("[97L]");
        org.jboss.dmr.PropertyModelValue propertyModelValue59 = new org.jboss.dmr.PropertyModelValue("Expression \"hi!\"", modelNode55);
        java.util.Set<java.lang.String> strSet60 = propertyModelValue59.getKeys();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList61 = propertyModelValue59.asList();
        boolean boolean62 = propertyModelValue11.equals(propertyModelValue59);
        org.jboss.dmr.ModelNode modelNode64 = new org.jboss.dmr.ModelNode(false);
        org.jboss.dmr.ModelNode modelNode65 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int66 = modelNode65.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode68 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long69 = modelNode68.asLong();
        org.jboss.dmr.ValueExpression valueExpression70 = modelNode68.asExpression();
        java.math.BigDecimal bigDecimal71 = valueExpression70.resolveBigDecimal();
        org.jboss.dmr.ModelNode modelNode72 = modelNode65.set(valueExpression70);
        org.jboss.dmr.ModelNode modelNode74 = modelNode65.set("AQ==");
        boolean boolean75 = modelNode64.equals(modelNode74);
        boolean boolean77 = modelNode64.has((int) 'J');
        boolean boolean78 = propertyModelValue11.equals((java.lang.Object) boolean77);
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType0.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertNotNull(modelNodeList25);
        org.junit.Assert.assertNotNull(modelValue28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(propertyList31);
        org.junit.Assert.assertNotNull(propertyList32);
        org.junit.Assert.assertNotNull(modelNode37);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(modelNode40);
        org.junit.Assert.assertNotNull(modelNode44);
        org.junit.Assert.assertNotNull(modelNodeList45);
        org.junit.Assert.assertNotNull(modelValue48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(propertyList51);
        org.junit.Assert.assertNotNull(propertyList52);
        org.junit.Assert.assertNotNull(modelNode55);
        org.junit.Assert.assertTrue("'" + modelType56 + "' != '" + org.jboss.dmr.ModelType.LONG + "'", modelType56.equals(org.jboss.dmr.ModelType.LONG));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertNotNull(modelNodeList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(int66);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 1L + "'", long69 == 1L);
        org.junit.Assert.assertNotNull(valueExpression70);
        org.junit.Assert.assertNotNull(bigDecimal71);
        org.junit.Assert.assertNotNull(modelNode72);
        org.junit.Assert.assertNotNull(modelNode74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test10653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10653");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int1 = modelNode0.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long4 = modelNode3.asLong();
        org.jboss.dmr.ValueExpression valueExpression5 = modelNode3.asExpression();
        java.math.BigDecimal bigDecimal6 = valueExpression5.resolveBigDecimal();
        org.jboss.dmr.ModelNode modelNode7 = modelNode0.set(valueExpression5);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelType modelType8 = modelNode7.asType();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(valueExpression5);
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertNotNull(modelNode7);
    }

    @Test
    public void test10654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10654");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        java.lang.String str6 = listModelValue5.asString();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList7 = listModelValue5.asList();
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = modelNode11.asList();
        org.jboss.dmr.ListModelValue listModelValue13 = new org.jboss.dmr.ListModelValue(modelNodeList12);
        java.lang.String str14 = listModelValue13.asString();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList15 = listModelValue13.asList();
        boolean boolean16 = listModelValue5.equals(listModelValue13);
        boolean boolean17 = listModelValue5.asBoolean();
        int int19 = listModelValue5.asInt(8);
        java.util.List<org.jboss.dmr.Property> propertyList20 = listModelValue5.asPropertyList();
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str6, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertNotNull(modelNodeList7);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNodeList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str14, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertNotNull(modelNodeList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(propertyList20);
    }

    @Test
    public void test10655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10655");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long2 = doubleModelValue1.asLong();
        boolean boolean3 = doubleModelValue1.asBoolean();
        byte[] byteArray4 = doubleModelValue1.asBytes();
        java.math.BigInteger bigInteger5 = doubleModelValue1.asBigInteger();
        double double7 = doubleModelValue1.asDouble((double) (-1));
        org.jboss.dmr.ModelNode modelNode9 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long10 = modelNode9.asLong();
        org.jboss.dmr.ModelNode modelNode13 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode16 = modelNode13.set("hi!", 0.0d);
        org.jboss.dmr.Property property17 = new org.jboss.dmr.Property("", modelNode16);
        java.lang.String[] strArray18 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode19 = modelNode16.get(strArray18);
        org.jboss.dmr.ModelNode modelNode20 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode23 = modelNode20.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList24 = modelNode23.asList();
        org.jboss.dmr.ListModelValue listModelValue25 = new org.jboss.dmr.ListModelValue(modelNodeList24);
        org.jboss.dmr.ModelNode modelNode26 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue25);
        org.jboss.dmr.ModelValue modelValue27 = listModelValue25.resolve();
        int int29 = listModelValue25.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList30 = listModelValue25.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList31 = modelNode19.asPropertyList(propertyList30);
        org.jboss.dmr.ModelNode modelNode33 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode36 = modelNode33.set("hi!", 0.0d);
        org.jboss.dmr.Property property37 = new org.jboss.dmr.Property("", modelNode36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode39 = modelNode36.get(strArray38);
        org.jboss.dmr.ModelNode modelNode40 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode43 = modelNode40.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList44 = modelNode43.asList();
        org.jboss.dmr.ListModelValue listModelValue45 = new org.jboss.dmr.ListModelValue(modelNodeList44);
        org.jboss.dmr.ModelNode modelNode46 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue45);
        org.jboss.dmr.ModelValue modelValue47 = listModelValue45.resolve();
        int int49 = listModelValue45.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList50 = listModelValue45.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList51 = modelNode39.asPropertyList(propertyList50);
        modelNode19.setNoCopy(modelNode39);
        org.jboss.dmr.ModelNode modelNode53 = modelNode9.set("org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]", modelNode19);
        org.jboss.dmr.ModelNode modelNode55 = modelNode19.set(false);
        org.jboss.dmr.LongModelValue longModelValue57 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str58 = longModelValue57.asString();
        byte[] byteArray59 = longModelValue57.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue60 = new org.jboss.dmr.BytesModelValue(byteArray59);
        java.lang.String str61 = bytesModelValue60.asString();
        int int62 = bytesModelValue60.asInt();
        long long64 = bytesModelValue60.asLong((long) (short) 1);
        long long65 = bytesModelValue60.asLong();
        byte[] byteArray66 = bytesModelValue60.asBytes();
        org.jboss.dmr.ModelNode modelNode67 = modelNode19.set(byteArray66);
        org.jboss.dmr.ModelNode modelNode68 = modelNode67.setEmptyList();
        org.jboss.dmr.ModelType modelType69 = modelNode68.getType();
        org.jboss.dmr.BooleanModelValue booleanModelValue71 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long72 = booleanModelValue71.asLong();
        org.jboss.dmr.ValueExpression valueExpression73 = booleanModelValue71.asExpression();
        java.lang.String str74 = valueExpression73.toString();
        org.jboss.dmr.ModelNode modelNode75 = modelNode68.add(valueExpression73);
        boolean boolean76 = doubleModelValue1.equals((java.lang.Object) modelNode75);
        java.io.InputStream inputStream77 = null;
        org.jboss.dmr.Base64.InputStream inputStream79 = new org.jboss.dmr.Base64.InputStream(inputStream77, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue81 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str82 = longModelValue81.asString();
        byte[] byteArray83 = longModelValue81.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue84 = new org.jboss.dmr.BytesModelValue(byteArray83);
        int int87 = inputStream79.read(byteArray83, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream89 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream79, (-1));
        org.jboss.dmr.Base64.InputStream inputStream90 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream89);
        org.jboss.dmr.Base64.InputStream inputStream91 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream89);
        org.jboss.dmr.Base64.InputStream inputStream93 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream91, 0);
        // The following exception was thrown during execution in test generation
        try {
            modelNode75.readExternal((java.io.InputStream) inputStream91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10L + "'", long2 == 10L);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(bigInteger5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(modelNode23);
        org.junit.Assert.assertNotNull(modelNodeList24);
        org.junit.Assert.assertNotNull(modelValue27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(propertyList30);
        org.junit.Assert.assertNotNull(propertyList31);
        org.junit.Assert.assertNotNull(modelNode36);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(modelNode39);
        org.junit.Assert.assertNotNull(modelNode43);
        org.junit.Assert.assertNotNull(modelNodeList44);
        org.junit.Assert.assertNotNull(modelValue47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(propertyList50);
        org.junit.Assert.assertNotNull(propertyList51);
        org.junit.Assert.assertNotNull(modelNode53);
        org.junit.Assert.assertNotNull(modelNode55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1" + "'", str58, "1");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str61, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 1L + "'", long64 == 1L);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 1L + "'", long65 == 1L);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(modelNode67);
        org.junit.Assert.assertNotNull(modelNode68);
        org.junit.Assert.assertTrue("'" + modelType69 + "' != '" + org.jboss.dmr.ModelType.LIST + "'", modelType69.equals(org.jboss.dmr.ModelType.LIST));
        org.junit.Assert.assertNotNull(booleanModelValue71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 1L + "'", long72 == 1L);
        org.junit.Assert.assertNotNull(valueExpression73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Expression \"true\"" + "'", str74, "Expression \"true\"");
        org.junit.Assert.assertNotNull(modelNode75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "1" + "'", str82, "1");
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
    }

    @Test
    public void test10656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10656");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        boolean boolean4 = objectModelValue0.has((int) 'a');
        boolean boolean6 = objectModelValue0.has("");
        org.jboss.dmr.ObjectModelValue objectModelValue7 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode8 = objectModelValue7.asObject();
        java.util.Set<java.lang.String> strSet9 = objectModelValue7.getKeys();
        boolean boolean11 = objectModelValue7.has((int) 'a');
        boolean boolean12 = objectModelValue0.equals(objectModelValue7);
        org.jboss.dmr.ModelNode modelNode13 = objectModelValue7.asObject();
        java.util.List<org.jboss.dmr.Property> propertyList14 = objectModelValue7.asPropertyList();
        org.jboss.dmr.ObjectModelValue objectModelValue15 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode16 = objectModelValue15.asObject();
        boolean boolean17 = objectModelValue7.equals(objectModelValue15);
        java.lang.String str18 = objectModelValue15.asString();
        java.util.List<org.jboss.dmr.Property> propertyList19 = objectModelValue15.asPropertyList();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList20 = objectModelValue15.asList();
        org.jboss.dmr.ModelValue modelValue22 = objectModelValue15.copy(true);
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(propertyList14);
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{}" + "'", str18, "{}");
        org.junit.Assert.assertNotNull(propertyList19);
        org.junit.Assert.assertNotNull(modelNodeList20);
        org.junit.Assert.assertNotNull(modelValue22);
    }

    @Test
    public void test10657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10657");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) 100);
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode5 = modelNode2.setExpression("hi!", "hi!");
        java.lang.String str6 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode2);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList7 = modelNode2.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode9 = modelNode2.set((double) 0);
        boolean boolean10 = modelNode2.isProtected();
        java.math.BigInteger bigInteger11 = modelNode2.asBigIntegerOrNull();
        boolean boolean12 = doubleModelValue1.equals((java.lang.Object) modelNode2);
        org.jboss.dmr.IntModelValue intModelValue15 = new org.jboss.dmr.IntModelValue(10);
        java.math.BigInteger bigInteger16 = intModelValue15.asBigInteger();
        org.jboss.dmr.ModelNode modelNode17 = modelNode2.set("rO0ABXNyABRqYXZhLm1hdGguQmlnSW50ZWdlcoz8nx+pO/sdAwAGSQAIYml0Q291bnRJAAliaXRM\nZW5ndGhJABNmaXJzdE5vbnplcm9CeXRlTnVtSQAMbG93ZXN0U2V0Qml0SQAGc2lnbnVtWwAJbWFn\nbml0dWRldAACW0J4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHD///////////////7/\n///+AAAAAXVyAAJbQqzzF/gGCFTgAgAAeHAAAAABAXg=", bigInteger16);
        org.jboss.dmr.ModelNode modelNode20 = modelNode2.set("{\n    \"EXPRESSION_VALUE\" : {\n        \"\" : {\n            \"hi!\" : 0.0\n        }\n    }\n}", (long) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.math.BigInteger bigInteger21 = modelNode20.asBigIntegerOrNull();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str6, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList7);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(bigInteger11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(bigInteger16);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertNotNull(modelNode20);
    }

    @Test
    public void test10658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10658");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(modelType0);
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode6 = modelNode3.set("hi!", 0.0d);
        org.jboss.dmr.Property property7 = new org.jboss.dmr.Property("", modelNode6);
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(property7);
        org.jboss.dmr.ModelNode modelNode9 = property7.getValue();
        org.jboss.dmr.PropertyModelValue propertyModelValue10 = new org.jboss.dmr.PropertyModelValue(property7);
        org.jboss.dmr.ModelValue modelValue11 = propertyModelValue10.clone();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = propertyModelValue10.asList();
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode17 = modelNode14.set("hi!", 0.0d);
        java.lang.String str18 = modelNode14.toString();
        org.jboss.dmr.ModelNode modelNode19 = modelNode14.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode21 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode24 = modelNode21.set("hi!", 0.0d);
        org.jboss.dmr.Property property25 = new org.jboss.dmr.Property("", modelNode24);
        org.jboss.dmr.ModelNode modelNode26 = modelNode14.set(property25);
        org.jboss.dmr.PropertyModelValue propertyModelValue28 = new org.jboss.dmr.PropertyModelValue("EXPRESSION_VALUE", modelNode26, false);
        org.jboss.dmr.Property property29 = propertyModelValue28.asProperty();
        boolean boolean30 = propertyModelValue10.equals(propertyModelValue28);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode32 = propertyModelValue28.getChild("-1L");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType0.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(modelValue11);
        org.junit.Assert.assertNotNull(modelNodeList12);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(\"hi!\" => 0.0)" + "'", str18, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertNotNull(property29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test10659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10659");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        int int6 = bigIntegerModelValue4.asInt((int) (short) 1);
        org.jboss.dmr.BooleanModelValue booleanModelValue7 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double8 = booleanModelValue7.asDouble();
        org.jboss.dmr.ModelValue modelValue9 = booleanModelValue7.copy();
        java.math.BigInteger bigInteger10 = booleanModelValue7.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue11 = new org.jboss.dmr.BigIntegerModelValue(bigInteger10);
        int int13 = bigIntegerModelValue11.asInt((int) (short) 1);
        org.jboss.dmr.BooleanModelValue booleanModelValue14 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double15 = booleanModelValue14.asDouble();
        org.jboss.dmr.ModelValue modelValue16 = booleanModelValue14.copy();
        java.math.BigInteger bigInteger17 = booleanModelValue14.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue18 = new org.jboss.dmr.BigIntegerModelValue(bigInteger17);
        java.lang.String str19 = bigIntegerModelValue18.asString();
        java.math.BigInteger bigInteger20 = bigIntegerModelValue18.asBigInteger();
        boolean boolean21 = bigIntegerModelValue11.equals(bigIntegerModelValue18);
        int int22 = bigIntegerModelValue18.asInt();
        boolean boolean23 = bigIntegerModelValue4.equals(bigIntegerModelValue18);
        org.jboss.dmr.BooleanModelValue booleanModelValue24 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double25 = booleanModelValue24.asDouble();
        org.jboss.dmr.ModelValue modelValue26 = booleanModelValue24.copy();
        java.math.BigInteger bigInteger27 = booleanModelValue24.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue28 = new org.jboss.dmr.BigIntegerModelValue(bigInteger27);
        java.lang.String str29 = bigIntegerModelValue28.asString();
        long long31 = bigIntegerModelValue28.asLong(32L);
        double double32 = bigIntegerModelValue28.asDouble();
        long long34 = bigIntegerModelValue28.asLong((long) '4');
        int int36 = bigIntegerModelValue28.asInt(1);
        boolean boolean37 = bigIntegerModelValue28.asBoolean();
        boolean boolean38 = bigIntegerModelValue18.equals(bigIntegerModelValue28);
        boolean boolean40 = bigIntegerModelValue18.asBoolean(false);
        java.io.DataOutput dataOutput41 = null;
        // The following exception was thrown during execution in test generation
        try {
            bigIntegerModelValue18.writeExternal(dataOutput41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanModelValue7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue9);
        org.junit.Assert.assertNotNull(bigInteger10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(booleanModelValue14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue16);
        org.junit.Assert.assertNotNull(bigInteger17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1" + "'", str19, "1");
        org.junit.Assert.assertNotNull(bigInteger20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(booleanModelValue24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue26);
        org.junit.Assert.assertNotNull(bigInteger27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1" + "'", str29, "1");
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1L + "'", long31 == 1L);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1L + "'", long34 == 1L);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test10660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10660");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        boolean boolean4 = objectModelValue0.has((int) 'a');
        boolean boolean6 = objectModelValue0.has("");
        org.jboss.dmr.ObjectModelValue objectModelValue7 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode8 = objectModelValue7.asObject();
        java.util.Set<java.lang.String> strSet9 = objectModelValue7.getKeys();
        boolean boolean11 = objectModelValue7.has((int) 'a');
        boolean boolean12 = objectModelValue0.equals(objectModelValue7);
        org.jboss.dmr.ModelValue modelValue13 = objectModelValue0.resolve();
        java.util.Set<java.lang.String> strSet14 = objectModelValue0.getKeys();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.Property property15 = objectModelValue0.asProperty();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(modelValue13);
        org.junit.Assert.assertNotNull(strSet14);
    }

    @Test
    public void test10661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10661");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(modelType0);
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode6 = modelNode3.set("hi!", 0.0d);
        org.jboss.dmr.Property property7 = new org.jboss.dmr.Property("", modelNode6);
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(property7);
        org.jboss.dmr.PropertyModelValue propertyModelValue9 = new org.jboss.dmr.PropertyModelValue(property7);
        org.jboss.dmr.PropertyModelValue propertyModelValue10 = new org.jboss.dmr.PropertyModelValue(property7);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode12 = propertyModelValue10.getChild((int) 'e');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType0.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
    }

    @Test
    public void test10662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10662");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.setExpression("hi!", "hi!");
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode9 = modelNode6.set("hi!", 0.0d);
        org.jboss.dmr.Property property10 = new org.jboss.dmr.Property("", modelNode9);
        boolean boolean12 = modelNode9.equals((java.lang.Object) 100L);
        boolean boolean13 = modelNode1.equals(modelNode9);
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode18 = modelNode15.set("hi!", 0.0d);
        org.jboss.dmr.Property property19 = new org.jboss.dmr.Property("", modelNode18);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode21 = modelNode18.get(strArray20);
        org.jboss.dmr.ModelNode modelNode22 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int23 = modelNode22.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode24 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode27 = modelNode24.setExpression("hi!", "hi!");
        java.lang.String str28 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode24);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList29 = modelNode24.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode30 = modelNode22.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList29);
        org.jboss.dmr.ModelNode modelNode31 = modelNode21.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList29);
        org.jboss.dmr.ModelNode modelNode32 = modelNode9.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList29);
        org.jboss.dmr.ModelNode modelNode34 = modelNode9.add("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4");
        org.jboss.dmr.PropertyModelValue propertyModelValue36 = new org.jboss.dmr.PropertyModelValue("1.0", modelNode9, false);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList37 = propertyModelValue36.asList();
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(modelNode21);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str28, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList29);
        org.junit.Assert.assertNotNull(modelNode30);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertNotNull(modelNode34);
        org.junit.Assert.assertNotNull(modelNodeList37);
    }

    @Test
    public void test10663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10663");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        org.jboss.dmr.Property property5 = new org.jboss.dmr.Property("", modelNode4);
        java.lang.String[] strArray6 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode7 = modelNode4.get(strArray6);
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = modelNode11.asList();
        org.jboss.dmr.ListModelValue listModelValue13 = new org.jboss.dmr.ListModelValue(modelNodeList12);
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue13);
        org.jboss.dmr.ModelValue modelValue15 = listModelValue13.resolve();
        int int17 = listModelValue13.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList18 = listModelValue13.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList19 = modelNode7.asPropertyList(propertyList18);
        org.jboss.dmr.ModelNode modelNode21 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode24 = modelNode21.set("hi!", 0.0d);
        org.jboss.dmr.Property property25 = new org.jboss.dmr.Property("", modelNode24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode27 = modelNode24.get(strArray26);
        org.jboss.dmr.ModelNode modelNode28 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode31 = modelNode28.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList32 = modelNode31.asList();
        org.jboss.dmr.ListModelValue listModelValue33 = new org.jboss.dmr.ListModelValue(modelNodeList32);
        org.jboss.dmr.ModelNode modelNode34 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue33);
        org.jboss.dmr.ModelValue modelValue35 = listModelValue33.resolve();
        int int37 = listModelValue33.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList38 = listModelValue33.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList39 = modelNode27.asPropertyList(propertyList38);
        modelNode7.setNoCopy(modelNode27);
        org.jboss.dmr.ModelNode modelNode41 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode44 = modelNode41.set("hi!", 0.0d);
        org.jboss.dmr.ModelNode modelNode45 = new org.jboss.dmr.ModelNode();
        java.lang.Long long46 = modelNode45.asLongOrNull();
        org.jboss.dmr.ModelNode[] modelNodeArray47 = new org.jboss.dmr.ModelNode[] { modelNode41, modelNode45 };
        java.util.ArrayList<org.jboss.dmr.ModelNode> modelNodeList48 = new java.util.ArrayList<org.jboss.dmr.ModelNode>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList48, modelNodeArray47);
        org.jboss.dmr.ModelNode modelNode50 = modelNode7.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList48);
        org.jboss.dmr.ModelNode modelNode53 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long54 = modelNode53.asLong();
        org.jboss.dmr.ValueExpression valueExpression55 = modelNode53.asExpression();
        java.math.BigDecimal bigDecimal56 = valueExpression55.resolveBigDecimal();
        org.jboss.dmr.ModelNode modelNode57 = modelNode7.set("true", bigDecimal56);
        java.lang.String str58 = modelNode7.asStringOrNull();
        org.jboss.dmr.ModelNode modelNode60 = new org.jboss.dmr.ModelNode(8);
        org.jboss.dmr.ModelNode modelNode61 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode64 = modelNode61.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList65 = modelNode64.asList();
        org.jboss.dmr.ModelNode modelNode68 = modelNode64.set("Expression \"1\"", (int) (byte) 1);
        org.jboss.dmr.ModelType modelType69 = modelNode64.getType();
        org.jboss.dmr.ModelNode modelNode70 = modelNode60.set(modelNode64);
        org.jboss.dmr.ModelNode modelNode71 = modelNode64.clone();
        modelNode7.setNoCopy(modelNode64);
        org.jboss.dmr.ModelNode modelNode73 = modelNode64.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode74 = modelNode64.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode75 = modelNode64.clone();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode77 = modelNode64.require(52);
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child exists at index [52]");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNodeList12);
        org.junit.Assert.assertNotNull(modelValue15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(propertyList18);
        org.junit.Assert.assertNotNull(propertyList19);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(modelNodeList32);
        org.junit.Assert.assertNotNull(modelValue35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(propertyList38);
        org.junit.Assert.assertNotNull(propertyList39);
        org.junit.Assert.assertNotNull(modelNode44);
        org.junit.Assert.assertNull(long46);
        org.junit.Assert.assertNotNull(modelNodeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(modelNode50);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertNotNull(valueExpression55);
        org.junit.Assert.assertNotNull(bigDecimal56);
        org.junit.Assert.assertNotNull(modelNode57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(\"true\" => big decimal 1.0)" + "'", str58, "(\"true\" => big decimal 1.0)");
        org.junit.Assert.assertNotNull(modelNode64);
        org.junit.Assert.assertNotNull(modelNodeList65);
        org.junit.Assert.assertNotNull(modelNode68);
        org.junit.Assert.assertTrue("'" + modelType69 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType69.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertNotNull(modelNode70);
        org.junit.Assert.assertNotNull(modelNode71);
        org.junit.Assert.assertNotNull(modelNode73);
        org.junit.Assert.assertNotNull(modelNode74);
        org.junit.Assert.assertNotNull(modelNode75);
    }

    @Test
    public void test10664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10664");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) (short) 10);
        java.lang.String str2 = intModelValue1.asString();
        org.jboss.dmr.IntModelValue intModelValue4 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long6 = intModelValue4.asLong((long) 'b');
        java.lang.String str7 = intModelValue4.asString();
        java.math.BigInteger bigInteger8 = intModelValue4.asBigInteger();
        boolean boolean10 = intModelValue4.asBoolean(false);
        org.jboss.dmr.IntModelValue intModelValue12 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long14 = intModelValue12.asLong((long) 'b');
        java.lang.String str15 = intModelValue12.asString();
        boolean boolean16 = intModelValue4.equals(intModelValue12);
        byte[] byteArray17 = intModelValue12.asBytes();
        org.jboss.dmr.IntModelValue intModelValue19 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str20 = intModelValue19.asString();
        double double22 = intModelValue19.asDouble((double) 2);
        int int23 = intModelValue19.asInt();
        byte[] byteArray24 = intModelValue19.asBytes();
        long long25 = intModelValue19.asLong();
        boolean boolean26 = intModelValue12.equals(intModelValue19);
        boolean boolean28 = intModelValue12.has("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3BWwAAAAAeA==");
        boolean boolean29 = intModelValue1.equals(intModelValue12);
        org.jboss.dmr.DoubleModelValue doubleModelValue31 = new org.jboss.dmr.DoubleModelValue((double) (byte) -1);
        org.jboss.dmr.DoubleModelValue doubleModelValue33 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        int int35 = doubleModelValue33.asInt((int) 'l');
        java.math.BigDecimal bigDecimal36 = doubleModelValue33.asBigDecimal();
        boolean boolean37 = doubleModelValue31.equals(doubleModelValue33);
        org.jboss.dmr.ModelNode modelNode39 = new org.jboss.dmr.ModelNode(35L);
        org.jboss.dmr.ModelNode modelNode41 = modelNode39.set((int) '4');
        boolean boolean42 = doubleModelValue33.equals((java.lang.Object) modelNode41);
        org.jboss.dmr.ValueExpression valueExpression43 = doubleModelValue33.asExpression();
        org.jboss.dmr.ValueExpression valueExpression44 = doubleModelValue33.asExpression();
        double double45 = doubleModelValue33.asDouble();
        org.jboss.dmr.ValueExpression valueExpression46 = doubleModelValue33.asExpression();
        org.jboss.dmr.ObjectModelValue objectModelValue47 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode48 = objectModelValue47.asObject();
        org.jboss.dmr.ModelValue modelValue49 = objectModelValue47.protect();
        java.util.List<org.jboss.dmr.Property> propertyList50 = objectModelValue47.asPropertyList();
        org.jboss.dmr.LongModelValue longModelValue52 = new org.jboss.dmr.LongModelValue(97L);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory54 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream55 = null;
        org.jboss.dmr.Base64.InputStream inputStream57 = new org.jboss.dmr.Base64.InputStream(inputStream55, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream58 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream57);
        org.jboss.dmr.stream.ModelReader modelReader59 = modelStreamFactory54.newModelReader((java.io.InputStream) inputStream58);
        java.io.OutputStream outputStream60 = null;
        org.jboss.dmr.Base64.OutputStream outputStream61 = new org.jboss.dmr.Base64.OutputStream(outputStream60);
        org.jboss.dmr.Base64.OutputStream outputStream62 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream61);
        outputStream61.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter65 = modelStreamFactory54.newModelWriter((java.io.OutputStream) outputStream61);
        org.jboss.dmr.stream.ModelWriter modelWriter66 = modelWriter65.writeListStart();
        org.jboss.dmr.IntModelValue intModelValue68 = new org.jboss.dmr.IntModelValue(10);
        byte[] byteArray69 = intModelValue68.asBytes();
        int int71 = intModelValue68.asInt(0);
        java.math.BigInteger bigInteger72 = intModelValue68.asBigInteger();
        org.jboss.dmr.stream.ModelWriter modelWriter73 = modelWriter66.writeBigInteger(bigInteger72);
        org.jboss.dmr.stream.ModelWriter modelWriter74 = modelWriter66.writeListStart();
        longModelValue52.write(modelWriter74);
        objectModelValue47.write(modelWriter74);
        org.jboss.dmr.stream.ModelWriter modelWriter78 = modelWriter74.writeLong((long) (byte) 100);
        doubleModelValue33.write(modelWriter74);
        intModelValue12.write(modelWriter74);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "10" + "'", str2, "10");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 32L + "'", long6 == 32L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "32" + "'", str7, "32");
        org.junit.Assert.assertNotNull(bigInteger8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 32L + "'", long14 == 32L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "32" + "'", str15, "32");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0, 0, 0, 32]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "32" + "'", str20, "32");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 32.0d + "'", double22 == 32.0d);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 32 + "'", int23 == 32);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, 0, 0, 32]");
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 32L + "'", long25 == 32L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertNotNull(bigDecimal36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(modelNode41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(valueExpression43);
        org.junit.Assert.assertNotNull(valueExpression44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 10.0d + "'", double45 == 10.0d);
        org.junit.Assert.assertNotNull(valueExpression46);
        org.junit.Assert.assertNotNull(modelNode48);
        org.junit.Assert.assertNotNull(modelValue49);
        org.junit.Assert.assertNotNull(propertyList50);
        org.junit.Assert.assertNotNull(modelStreamFactory54);
        org.junit.Assert.assertNotNull(modelReader59);
        org.junit.Assert.assertNotNull(modelWriter65);
        org.junit.Assert.assertNotNull(modelWriter66);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[0, 0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 10 + "'", int71 == 10);
        org.junit.Assert.assertNotNull(bigInteger72);
        org.junit.Assert.assertNotNull(modelWriter73);
        org.junit.Assert.assertNotNull(modelWriter74);
        org.junit.Assert.assertNotNull(modelWriter78);
    }

    @Test
    public void test10665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10665");
        java.io.OutputStream outputStream0 = null;
        org.jboss.dmr.Base64.OutputStream outputStream1 = new org.jboss.dmr.Base64.OutputStream(outputStream0);
        outputStream1.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream3 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream1);
        org.jboss.dmr.Base64.OutputStream outputStream4 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream3);
        outputStream4.flushBase64();
        outputStream4.flushBase64();
        outputStream4.resumeEncoding();
        // The following exception was thrown during execution in test generation
        try {
            outputStream4.flush();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10666");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        int int9 = bigDecimalModelValue7.asInt(0);
        java.math.BigInteger bigInteger10 = bigDecimalModelValue7.asBigInteger();
        org.jboss.dmr.ModelNode modelNode12 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long13 = modelNode12.asLong();
        org.jboss.dmr.ValueExpression valueExpression14 = modelNode12.asExpression();
        java.math.BigDecimal bigDecimal15 = valueExpression14.resolveBigDecimal();
        java.lang.String str16 = valueExpression14.getExpressionString();
        java.math.BigDecimal bigDecimal17 = valueExpression14.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue18 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal17);
        boolean boolean19 = bigDecimalModelValue18.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression20 = bigDecimalModelValue18.asExpression();
        int int21 = bigDecimalModelValue18.asInt();
        long long22 = bigDecimalModelValue18.asLong();
        long long24 = bigDecimalModelValue18.asLong(32L);
        boolean boolean25 = bigDecimalModelValue7.equals(bigDecimalModelValue18);
        double double27 = bigDecimalModelValue7.asDouble((double) (short) -1);
        org.jboss.dmr.ModelNode modelNode29 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long30 = modelNode29.asLong();
        org.jboss.dmr.ValueExpression valueExpression31 = modelNode29.asExpression();
        java.math.BigDecimal bigDecimal32 = valueExpression31.resolveBigDecimal();
        java.lang.String str33 = valueExpression31.getExpressionString();
        java.math.BigDecimal bigDecimal34 = valueExpression31.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue35 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal34);
        boolean boolean36 = bigDecimalModelValue35.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression37 = bigDecimalModelValue35.asExpression();
        int int38 = bigDecimalModelValue35.asInt();
        long long39 = bigDecimalModelValue35.asLong();
        long long41 = bigDecimalModelValue35.asLong(32L);
        boolean boolean42 = bigDecimalModelValue7.equals(bigDecimalModelValue35);
        org.jboss.dmr.ValueExpression valueExpression43 = bigDecimalModelValue35.asExpression();
        org.jboss.dmr.ModelNode modelNode44 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode45 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode48 = modelNode45.set("hi!", 0.0d);
        java.lang.String str49 = modelNode45.toString();
        org.jboss.dmr.ModelNode modelNode50 = modelNode45.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode52 = modelNode45.set(100);
        org.jboss.dmr.ModelNode modelNode53 = modelNode44.add(modelNode45);
        org.jboss.dmr.ModelNode modelNode55 = modelNode53.set((double) (-1.0f));
        double double57 = modelNode53.asDouble(1.0d);
        org.jboss.dmr.LongModelValue longModelValue59 = new org.jboss.dmr.LongModelValue(1L);
        long long61 = longModelValue59.asLong((long) (short) 0);
        java.lang.String str62 = longModelValue59.asString();
        org.jboss.dmr.ValueExpression valueExpression63 = longModelValue59.asExpression();
        org.jboss.dmr.ModelNode modelNode64 = modelNode53.set(valueExpression63);
        org.jboss.dmr.IntModelValue intModelValue66 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long68 = intModelValue66.asLong((long) 'b');
        java.lang.String str69 = intModelValue66.asString();
        long long70 = intModelValue66.asLong();
        long long71 = intModelValue66.asLong();
        org.jboss.dmr.ValueExpression valueExpression72 = intModelValue66.asExpression();
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver73 = new org.jboss.dmr.ValueExpressionResolver();
        java.math.BigDecimal bigDecimal74 = valueExpression72.resolveBigDecimal(valueExpressionResolver73);
        java.lang.String str75 = valueExpression63.resolveString(valueExpressionResolver73);
        java.math.BigDecimal bigDecimal76 = valueExpression43.resolveBigDecimal(valueExpressionResolver73);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(bigInteger10);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(valueExpression14);
        org.junit.Assert.assertNotNull(bigDecimal15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1.0" + "'", str16, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(valueExpression20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1L + "'", long24 == 1L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertNotNull(valueExpression31);
        org.junit.Assert.assertNotNull(bigDecimal32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1.0" + "'", str33, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(valueExpression37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1L + "'", long39 == 1L);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(valueExpression43);
        org.junit.Assert.assertNotNull(modelNode48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(\"hi!\" => 0.0)" + "'", str49, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode50);
        org.junit.Assert.assertNotNull(modelNode52);
        org.junit.Assert.assertNotNull(modelNode53);
        org.junit.Assert.assertNotNull(modelNode55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-1.0d) + "'", double57 == (-1.0d));
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 1L + "'", long61 == 1L);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "1" + "'", str62, "1");
        org.junit.Assert.assertNotNull(valueExpression63);
        org.junit.Assert.assertNotNull(modelNode64);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 32L + "'", long68 == 32L);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "32" + "'", str69, "32");
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 32L + "'", long70 == 32L);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 32L + "'", long71 == 32L);
        org.junit.Assert.assertNotNull(valueExpression72);
        org.junit.Assert.assertNotNull(bigDecimal74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "1" + "'", str75, "1");
        org.junit.Assert.assertNotNull(bigDecimal76);
    }

    @Test
    public void test10667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10667");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        org.jboss.dmr.ModelValue modelValue2 = objectModelValue0.protect();
        java.util.List<org.jboss.dmr.Property> propertyList3 = objectModelValue0.asPropertyList();
        java.lang.String str4 = objectModelValue0.asString();
        org.jboss.dmr.ObjectModelValue objectModelValue5 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode6 = objectModelValue5.asObject();
        java.util.Set<java.lang.String> strSet7 = objectModelValue5.getKeys();
        org.jboss.dmr.ModelNode modelNode9 = objectModelValue5.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        int int11 = objectModelValue5.asInt(10);
        org.jboss.dmr.ModelValue modelValue12 = objectModelValue5.copy();
        int int14 = objectModelValue5.asInt((int) (short) 10);
        boolean boolean15 = objectModelValue0.equals(objectModelValue5);
        long long17 = objectModelValue0.asLong((long) 'J');
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(propertyList3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(modelNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(modelValue12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
    }

    @Test
    public void test10668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10668");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        int int6 = bigIntegerModelValue4.asInt((int) (short) 1);
        org.jboss.dmr.BooleanModelValue booleanModelValue7 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double8 = booleanModelValue7.asDouble();
        org.jboss.dmr.ModelValue modelValue9 = booleanModelValue7.copy();
        java.math.BigInteger bigInteger10 = booleanModelValue7.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue11 = new org.jboss.dmr.BigIntegerModelValue(bigInteger10);
        java.lang.String str12 = bigIntegerModelValue11.asString();
        java.math.BigInteger bigInteger13 = bigIntegerModelValue11.asBigInteger();
        boolean boolean14 = bigIntegerModelValue4.equals(bigIntegerModelValue11);
        double double16 = bigIntegerModelValue4.asDouble(0.0d);
        double double18 = bigIntegerModelValue4.asDouble((double) 100.0f);
        java.math.BigInteger bigInteger19 = bigIntegerModelValue4.asBigInteger();
        org.jboss.dmr.ValueExpression valueExpression20 = bigIntegerModelValue4.asExpression();
        java.lang.String str21 = valueExpression20.toString();
        org.jboss.dmr.ExpressionValue expressionValue22 = new org.jboss.dmr.ExpressionValue(valueExpression20);
        org.jboss.dmr.ValueExpression valueExpression23 = expressionValue22.asExpression();
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanModelValue7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue9);
        org.junit.Assert.assertNotNull(bigInteger10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1" + "'", str12, "1");
        org.junit.Assert.assertNotNull(bigInteger13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(bigInteger19);
        org.junit.Assert.assertNotNull(valueExpression20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Expression \"1\"" + "'", str21, "Expression \"1\"");
        org.junit.Assert.assertNotNull(valueExpression23);
    }

    @Test
    public void test10669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10669");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        org.jboss.dmr.Validation.validate(modelNode1, "10.0");
        java.util.List<org.jboss.dmr.Property> propertyList4 = modelNode1.asPropertyList();
        // The following exception was thrown during execution in test generation
        try {
            double double5 = modelNode1.asDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(propertyList4);
    }

    @Test
    public void test10670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10670");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        org.jboss.dmr.ModelValue modelValue2 = objectModelValue0.protect();
        org.jboss.dmr.ModelValue modelValue3 = objectModelValue0.resolve();
        org.jboss.dmr.ModelValue modelValue5 = objectModelValue0.copy(true);
        org.jboss.dmr.ModelNode modelNode7 = objectModelValue0.removeChild("(\"rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3F3AADkV4cHJlc3Np\nb24gIjEiZQADaGkheA==\" => expression \"true\")");
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(modelValue3);
        org.junit.Assert.assertNotNull(modelValue5);
        org.junit.Assert.assertNull(modelNode7);
    }

    @Test
    public void test10671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10671");
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode1 = org.jboss.dmr.ModelNode.fromJSONString("{\"TYPE_MODEL_VALUE\" => undefined,\"[(\\\"hi!\\\" => 0.0)]\" => undefined,\"\\\"(\\\\\\\"hi!\\\\\\\" => 0.0)\\\"\" => undefined}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unexpected character '=' while reading DMR type value");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10672");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue((long) '4');
        java.math.BigDecimal bigDecimal2 = longModelValue1.asBigDecimal();
        int int3 = longModelValue1.asInt();
        org.jboss.dmr.ValueExpression valueExpression4 = longModelValue1.asExpression();
        long long6 = longModelValue1.asLong((long) 1);
        long long7 = longModelValue1.asLong();
        org.jboss.dmr.ModelNode modelNode9 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long10 = modelNode9.asLong();
        org.jboss.dmr.ValueExpression valueExpression11 = modelNode9.asExpression();
        java.math.BigDecimal bigDecimal12 = valueExpression11.resolveBigDecimal();
        java.lang.String str13 = valueExpression11.getExpressionString();
        java.math.BigDecimal bigDecimal14 = valueExpression11.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue15 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal14);
        boolean boolean16 = bigDecimalModelValue15.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression17 = bigDecimalModelValue15.asExpression();
        int int18 = bigDecimalModelValue15.asInt();
        long long19 = bigDecimalModelValue15.asLong();
        long long21 = bigDecimalModelValue15.asLong(32L);
        int int23 = bigDecimalModelValue15.asInt(10);
        java.lang.String str24 = bigDecimalModelValue15.asString();
        boolean boolean25 = bigDecimalModelValue15.asBoolean();
        boolean boolean26 = longModelValue1.equals((java.lang.Object) boolean25);
        long long28 = longModelValue1.asLong(112L);
        org.junit.Assert.assertNotNull(bigDecimal2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertNotNull(valueExpression4);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 52L + "'", long6 == 52L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 52L + "'", long7 == 52L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertNotNull(valueExpression11);
        org.junit.Assert.assertNotNull(bigDecimal12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1.0" + "'", str13, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(valueExpression17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1.0" + "'", str24, "1.0");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 52L + "'", long28 == 52L);
    }

    @Test
    public void test10673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10673");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str2 = longModelValue1.asString();
        byte[] byteArray3 = longModelValue1.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue4 = new org.jboss.dmr.BytesModelValue(byteArray3);
        java.math.BigDecimal bigDecimal5 = bytesModelValue4.asBigDecimal();
        java.math.BigInteger bigInteger6 = bytesModelValue4.asBigInteger();
        java.lang.String str7 = bytesModelValue4.asString();
        java.math.BigInteger bigInteger8 = bytesModelValue4.asBigInteger();
        java.lang.String str9 = bytesModelValue4.asString();
        java.io.OutputStream outputStream10 = null;
        org.jboss.dmr.Base64.OutputStream outputStream11 = new org.jboss.dmr.Base64.OutputStream(outputStream10);
        outputStream11.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream13 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream11);
        org.jboss.dmr.Base64.OutputStream outputStream14 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream13);
        org.jboss.dmr.ModelNode modelNode16 = new org.jboss.dmr.ModelNode("EXPRESSION_VALUE");
        org.jboss.dmr.BooleanModelValue booleanModelValue19 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger20 = booleanModelValue19.asBigInteger();
        byte[] byteArray21 = booleanModelValue19.asBytes();
        org.jboss.dmr.ModelNode modelNode22 = modelNode16.set("expression \"hi!\"", byteArray21);
        outputStream13.write(byteArray21);
        org.jboss.dmr.BytesModelValue bytesModelValue24 = new org.jboss.dmr.BytesModelValue(byteArray21);
        org.jboss.dmr.ModelType modelType25 = bytesModelValue24.getType();
        boolean boolean26 = bytesModelValue4.equals((java.lang.Object) bytesModelValue24);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1" + "'", str2, "1");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(bigDecimal5);
        org.junit.Assert.assertNotNull(bigInteger6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str7, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertNotNull(bigInteger8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str9, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertNotNull(booleanModelValue19);
        org.junit.Assert.assertNotNull(bigInteger20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1]");
        org.junit.Assert.assertNotNull(modelNode22);
        org.junit.Assert.assertTrue("'" + modelType25 + "' != '" + org.jboss.dmr.ModelType.BYTES + "'", modelType25.equals(org.jboss.dmr.ModelType.BYTES));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test10674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10674");
        org.jboss.dmr.BooleanModelValue booleanModelValue1 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray2 = booleanModelValue1.asBytes();
        java.lang.String str3 = booleanModelValue1.asString();
        boolean boolean4 = booleanModelValue1.asBoolean();
        java.math.BigDecimal bigDecimal5 = booleanModelValue1.asBigDecimal();
        org.jboss.dmr.DoubleModelValue doubleModelValue7 = new org.jboss.dmr.DoubleModelValue((double) (short) 0);
        int int9 = doubleModelValue7.asInt((int) (byte) 0);
        boolean boolean10 = booleanModelValue1.equals((java.lang.Object) int9);
        boolean boolean11 = booleanModelValue1.asBoolean();
        org.junit.Assert.assertNotNull(booleanModelValue1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "true" + "'", str3, "true");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(bigDecimal5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test10675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10675");
        org.jboss.dmr.BooleanModelValue booleanModelValue1 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray2 = booleanModelValue1.asBytes();
        java.lang.String str3 = booleanModelValue1.asString();
        int int4 = booleanModelValue1.asInt();
        long long5 = booleanModelValue1.asLong();
        boolean boolean7 = booleanModelValue1.equals((java.lang.Object) '4');
        java.math.BigInteger bigInteger8 = booleanModelValue1.asBigInteger();
        long long10 = booleanModelValue1.asLong((long) 0);
        int int12 = booleanModelValue1.asInt(8);
        org.junit.Assert.assertNotNull(booleanModelValue1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "true" + "'", str3, "true");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(bigInteger8);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }

    @Test
    public void test10676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10676");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode("EXPRESSION_VALUE");
        org.jboss.dmr.BooleanModelValue booleanModelValue4 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger5 = booleanModelValue4.asBigInteger();
        byte[] byteArray6 = booleanModelValue4.asBytes();
        org.jboss.dmr.ModelNode modelNode7 = modelNode1.set("expression \"hi!\"", byteArray6);
        org.jboss.dmr.ModelNode modelNode9 = modelNode7.set("\"rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3GXAAEGV4cHJlc3Np\\nb24gImhpISJiAAAAAQF4\"");
        org.jboss.dmr.BooleanModelValue booleanModelValue12 = org.jboss.dmr.BooleanModelValue.valueOf(false);
        long long14 = booleanModelValue12.asLong((long) 32);
        int int15 = booleanModelValue12.asInt();
        java.math.BigDecimal bigDecimal16 = booleanModelValue12.asBigDecimal();
        org.jboss.dmr.ModelValue modelValue17 = booleanModelValue12.protect();
        org.jboss.dmr.stream.ModelEvent modelEvent18 = org.jboss.dmr.stream.ModelEvent.LONG;
        boolean boolean19 = booleanModelValue12.equals((java.lang.Object) modelEvent18);
        double double20 = booleanModelValue12.asDouble();
        byte[] byteArray21 = booleanModelValue12.asBytes();
        org.jboss.dmr.ModelNode modelNode22 = modelNode9.set("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3CUQ/8AAAAAAAAHg=", byteArray21);
        org.jboss.dmr.ModelNode modelNode25 = modelNode9.setExpression("(\"BYTES_VALUE\" => expression \"1.0\")", "");
        java.util.Set<java.lang.String> strSet26 = modelNode25.keys();
        org.junit.Assert.assertNotNull(booleanModelValue4);
        org.junit.Assert.assertNotNull(bigInteger5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1]");
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(booleanModelValue12);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(bigDecimal16);
        org.junit.Assert.assertNotNull(modelValue17);
        org.junit.Assert.assertTrue("'" + modelEvent18 + "' != '" + org.jboss.dmr.stream.ModelEvent.LONG + "'", modelEvent18.equals(org.jboss.dmr.stream.ModelEvent.LONG));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(modelNode22);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertNotNull(strSet26);
    }

    @Test
    public void test10677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10677");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode2 = modelNode0.set((int) ' ');
        org.jboss.dmr.Validation.validate(modelNode0, "(\"org.jboss.dmr.stream.ModelException: [(\\\"hi!\\\" => 0.0)]\" => expression \"true\")");
        org.junit.Assert.assertNotNull(modelNode2);
    }

    @Test
    public void test10678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10678");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream5 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4);
        org.jboss.dmr.stream.ModelReader modelReader6 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream5);
        java.io.OutputStream outputStream7 = null;
        org.jboss.dmr.Base64.OutputStream outputStream8 = new org.jboss.dmr.Base64.OutputStream(outputStream7);
        org.jboss.dmr.Base64.OutputStream outputStream9 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream8);
        outputStream8.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter12 = modelStreamFactory1.newModelWriter((java.io.OutputStream) outputStream8);
        java.io.OutputStream outputStream13 = null;
        org.jboss.dmr.Base64.OutputStream outputStream14 = new org.jboss.dmr.Base64.OutputStream(outputStream13);
        org.jboss.dmr.Base64.OutputStream outputStream15 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream14);
        org.jboss.dmr.Base64.OutputStream outputStream16 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream15);
        outputStream15.resumeEncoding();
        outputStream15.resumeEncoding();
        org.jboss.dmr.stream.ModelWriter modelWriter19 = modelStreamFactory1.newModelWriter((java.io.OutputStream) outputStream15);
        java.io.Writer writer20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.stream.ModelWriter modelWriter21 = modelStreamFactory1.newModelWriter(writer20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Parameter cannot be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertNotNull(modelReader6);
        org.junit.Assert.assertNotNull(modelWriter12);
        org.junit.Assert.assertNotNull(modelWriter19);
    }

    @Test
    public void test10679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10679");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.FALSE;
        long long1 = booleanModelValue0.asLong();
        byte[] byteArray2 = booleanModelValue0.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue3 = new org.jboss.dmr.BytesModelValue(byteArray2);
        double double4 = bytesModelValue3.asDouble();
        org.jboss.dmr.ObjectModelValue objectModelValue5 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode6 = objectModelValue5.asObject();
        org.jboss.dmr.ModelValue modelValue7 = objectModelValue5.protect();
        java.util.List<org.jboss.dmr.Property> propertyList8 = objectModelValue5.asPropertyList();
        org.jboss.dmr.LongModelValue longModelValue10 = new org.jboss.dmr.LongModelValue(97L);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory12 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream13 = null;
        org.jboss.dmr.Base64.InputStream inputStream15 = new org.jboss.dmr.Base64.InputStream(inputStream13, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream16 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream15);
        org.jboss.dmr.stream.ModelReader modelReader17 = modelStreamFactory12.newModelReader((java.io.InputStream) inputStream16);
        java.io.OutputStream outputStream18 = null;
        org.jboss.dmr.Base64.OutputStream outputStream19 = new org.jboss.dmr.Base64.OutputStream(outputStream18);
        org.jboss.dmr.Base64.OutputStream outputStream20 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream19);
        outputStream19.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter23 = modelStreamFactory12.newModelWriter((java.io.OutputStream) outputStream19);
        org.jboss.dmr.stream.ModelWriter modelWriter24 = modelWriter23.writeListStart();
        org.jboss.dmr.IntModelValue intModelValue26 = new org.jboss.dmr.IntModelValue(10);
        byte[] byteArray27 = intModelValue26.asBytes();
        int int29 = intModelValue26.asInt(0);
        java.math.BigInteger bigInteger30 = intModelValue26.asBigInteger();
        org.jboss.dmr.stream.ModelWriter modelWriter31 = modelWriter24.writeBigInteger(bigInteger30);
        org.jboss.dmr.stream.ModelWriter modelWriter32 = modelWriter24.writeListStart();
        longModelValue10.write(modelWriter32);
        objectModelValue5.write(modelWriter32);
        bytesModelValue3.write(modelWriter32);
        java.math.BigDecimal bigDecimal36 = bytesModelValue3.asBigDecimal();
        double double37 = bytesModelValue3.asDouble();
        long long38 = bytesModelValue3.asLong();
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelValue7);
        org.junit.Assert.assertNotNull(propertyList8);
        org.junit.Assert.assertNotNull(modelStreamFactory12);
        org.junit.Assert.assertNotNull(modelReader17);
        org.junit.Assert.assertNotNull(modelWriter23);
        org.junit.Assert.assertNotNull(modelWriter24);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29 == 10);
        org.junit.Assert.assertNotNull(bigInteger30);
        org.junit.Assert.assertNotNull(modelWriter31);
        org.junit.Assert.assertNotNull(modelWriter32);
        org.junit.Assert.assertNotNull(bigDecimal36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
    }

    @Test
    public void test10680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10680");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue((-1L));
        long long3 = longModelValue1.asLong((long) (byte) -1);
        boolean boolean5 = longModelValue1.asBoolean(false);
        org.jboss.dmr.ValueExpression valueExpression6 = longModelValue1.asExpression();
        org.jboss.dmr.LongModelValue longModelValue8 = new org.jboss.dmr.LongModelValue(1L);
        long long10 = longModelValue8.asLong((long) (short) 0);
        java.lang.String str11 = longModelValue8.asString();
        org.jboss.dmr.ValueExpression valueExpression12 = longModelValue8.asExpression();
        int int13 = longModelValue8.asInt();
        int int14 = longModelValue8.asInt();
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode16 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode19 = modelNode16.set("hi!", 0.0d);
        java.lang.String str20 = modelNode16.toString();
        org.jboss.dmr.ModelNode modelNode21 = modelNode16.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode23 = modelNode16.set(100);
        org.jboss.dmr.ModelNode modelNode24 = modelNode15.add(modelNode16);
        org.jboss.dmr.ModelNode modelNode26 = modelNode24.set((double) (-1.0f));
        java.math.BigInteger bigInteger27 = modelNode24.asBigIntegerOrNull();
        boolean boolean28 = longModelValue8.equals((java.lang.Object) modelNode24);
        byte[] byteArray29 = longModelValue8.asBytes();
        double double30 = longModelValue8.asDouble();
        boolean boolean31 = longModelValue1.equals(longModelValue8);
        boolean boolean33 = longModelValue1.asBoolean(false);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(valueExpression6);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1" + "'", str11, "1");
        org.junit.Assert.assertNotNull(valueExpression12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(\"hi!\" => 0.0)" + "'", str20, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode21);
        org.junit.Assert.assertNotNull(modelNode23);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertNotNull(bigInteger27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test10681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10681");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        org.jboss.dmr.ObjectModelValue objectModelValue2 = null;
        boolean boolean3 = objectModelValue0.equals(objectModelValue2);
        java.lang.String str4 = objectModelValue0.asString();
        org.jboss.dmr.ModelValue modelValue6 = objectModelValue0.copy(false);
        org.jboss.dmr.ModelValue modelValue7 = objectModelValue0.copy();
        org.jboss.dmr.ModelNode modelNode9 = objectModelValue0.getChild("\"(\\\"hi!\\\" => 0.0)\"");
        org.jboss.dmr.ModelNode modelNode11 = modelNode9.get("1.0");
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNotNull(modelValue6);
        org.junit.Assert.assertNotNull(modelValue7);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(modelNode11);
    }

    @Test
    public void test10682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10682");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.lang.String str4 = modelNode0.toString();
        org.jboss.dmr.ModelNode modelNode5 = modelNode0.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode7 = modelNode0.set(100);
        boolean boolean8 = modelNode0.isDefined();
        java.math.BigInteger bigInteger9 = modelNode0.asBigIntegerOrNull();
        java.io.ObjectOutput objectOutput10 = null;
        // The following exception was thrown during execution in test generation
        try {
            modelNode0.writeExternal(objectOutput10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "(\"hi!\" => 0.0)" + "'", str4, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(bigInteger9);
    }

    @Test
    public void test10683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10683");
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode5 = modelNode2.set("hi!", 0.0d);
        org.jboss.dmr.Property property6 = new org.jboss.dmr.Property("", modelNode5);
        boolean boolean8 = modelNode5.equals((java.lang.Object) 100L);
        org.jboss.dmr.Property property10 = new org.jboss.dmr.Property("[(\"hi!\" => 0.0)]", modelNode5, false);
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver12 = org.jboss.dmr.ValueExpressionResolver.DEFAULT_RESOLVER;
        org.jboss.dmr.BooleanModelValue booleanModelValue14 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long15 = booleanModelValue14.asLong();
        org.jboss.dmr.ValueExpression valueExpression16 = booleanModelValue14.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue17 = new org.jboss.dmr.ExpressionValue(valueExpression16);
        java.lang.String str18 = valueExpression16.getExpressionString();
        java.lang.String str19 = valueExpressionResolver12.resolve(valueExpression16);
        org.jboss.dmr.ModelNode modelNode20 = modelNode5.set("1L", valueExpression16);
        org.jboss.dmr.ModelNode modelNode22 = modelNode5.set("H4sIAAAAAAAAAFvzloG1uIhBPL8oXS8rKb+4WC8lt0jPNz8lNccPSMjoLnSZu7jPnoeBoaKgnLG0\nAgDPxTfOMAAAAA==");
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(valueExpressionResolver12);
        org.junit.Assert.assertNotNull(booleanModelValue14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertNotNull(valueExpression16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true" + "'", str18, "true");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "true" + "'", str19, "true");
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(modelNode22);
    }

    @Test
    public void test10684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10684");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        boolean boolean8 = bigDecimalModelValue7.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression9 = bigDecimalModelValue7.asExpression();
        int int10 = bigDecimalModelValue7.asInt();
        java.math.BigDecimal bigDecimal11 = bigDecimalModelValue7.asBigDecimal();
        double double13 = bigDecimalModelValue7.asDouble(4.9E-324d);
        org.jboss.dmr.ValueExpression valueExpression14 = bigDecimalModelValue7.asExpression();
        int int15 = bigDecimalModelValue7.asInt();
        org.jboss.dmr.ObjectModelValue objectModelValue16 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode17 = objectModelValue16.asObject();
        java.util.Set<java.lang.String> strSet18 = objectModelValue16.getKeys();
        org.jboss.dmr.ModelNode modelNode20 = objectModelValue16.removeChild("hi!");
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList21 = objectModelValue16.asList();
        org.jboss.dmr.ModelNode modelNode23 = objectModelValue16.getChild("\"bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }\"");
        org.jboss.dmr.ModelNode modelNode26 = modelNode23.setExpression("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3R3AANW9yZy5qYm9z\ncy5kbXIuc3RyZWFtLk1vZGVsRXhjZXB0aW9uOiBbKCJoaSEiID0+IDAuMCldcAADaGkhRAAAAAAA\nAAAAeA==", "rO0ABXNyABNqYXZhLmxhbmcuQ2hhcmFjdGVyNItH2WsaJngCAAFDAAV2YWx1ZXhwACM=");
        org.jboss.dmr.ModelNode modelNode28 = new org.jboss.dmr.ModelNode("\"(\\\"\\\" => (\\\"hi!\\\" => 0.0))\"");
        org.jboss.dmr.ModelNode modelNode30 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode33 = modelNode30.setExpression("hi!", "hi!");
        java.lang.String str34 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode30);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList35 = modelNode30.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode37 = modelNode30.set((double) 0);
        org.jboss.dmr.ModelNode modelNode38 = modelNode30.clear();
        org.jboss.dmr.IntModelValue intModelValue41 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long43 = intModelValue41.asLong((long) 'b');
        java.lang.String str44 = intModelValue41.asString();
        java.math.BigInteger bigInteger45 = intModelValue41.asBigInteger();
        org.jboss.dmr.ModelNode modelNode46 = modelNode38.add("H4sIAAAAAAAAAAMAAAAAAAAAAAA=", bigInteger45);
        org.jboss.dmr.ModelNode modelNode47 = modelNode28.set("org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]", bigInteger45);
        modelNode26.setNoCopy(modelNode28);
        boolean boolean49 = bigDecimalModelValue7.equals((java.lang.Object) modelNode26);
        java.util.Set<java.lang.String> strSet50 = modelNode26.keys();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(valueExpression9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(bigDecimal11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(valueExpression14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNull(modelNode20);
        org.junit.Assert.assertNotNull(modelNodeList21);
        org.junit.Assert.assertNotNull(modelNode23);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertNotNull(modelNode33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str34, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList35);
        org.junit.Assert.assertNotNull(modelNode37);
        org.junit.Assert.assertNotNull(modelNode38);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 32L + "'", long43 == 32L);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "32" + "'", str44, "32");
        org.junit.Assert.assertNotNull(bigInteger45);
        org.junit.Assert.assertNotNull(modelNode46);
        org.junit.Assert.assertNotNull(modelNode47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strSet50);
    }

    @Test
    public void test10685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10685");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        boolean boolean4 = objectModelValue0.asBoolean(false);
        org.jboss.dmr.ModelNode modelNode6 = objectModelValue0.getChild("H4sIAAAAAAAAAFvzloG1uIhBMCuxLFEvJzEvXc8zryQ1PbVI6NGCJd8b2y2YGBg9GVjLEnNKUyuK\nGAQQ6vxKc5NSi9rWTJXlnvKgm4mBoaKAgYEhBQCU5fZ1UQAAAA==");
        org.jboss.dmr.ModelValue modelValue7 = objectModelValue0.protect();
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelValue7);
    }

    @Test
    public void test10686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10686");
        java.io.InputStream inputStream0 = null;
        org.jboss.dmr.Base64.InputStream inputStream2 = new org.jboss.dmr.Base64.InputStream(inputStream0, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue4 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str5 = longModelValue4.asString();
        byte[] byteArray6 = longModelValue4.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue7 = new org.jboss.dmr.BytesModelValue(byteArray6);
        int int10 = inputStream2.read(byteArray6, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream12 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream2, (-1));
        org.jboss.dmr.Base64.InputStream inputStream13 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream12);
        org.jboss.dmr.Base64.InputStream inputStream15 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream13, 1);
        // The following exception was thrown during execution in test generation
        try {
            long long17 = inputStream15.skip((long) 'I');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1" + "'", str5, "1");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test10687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10687");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(modelType0);
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode6 = modelNode3.set("hi!", 0.0d);
        org.jboss.dmr.Property property7 = new org.jboss.dmr.Property("", modelNode6);
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(property7);
        org.jboss.dmr.PropertyModelValue propertyModelValue9 = new org.jboss.dmr.PropertyModelValue(property7);
        org.jboss.dmr.PropertyModelValue propertyModelValue10 = new org.jboss.dmr.PropertyModelValue(property7);
        org.jboss.dmr.PropertyModelValue propertyModelValue11 = new org.jboss.dmr.PropertyModelValue(property7);
        org.jboss.dmr.Property property12 = propertyModelValue11.asProperty();
        org.jboss.dmr.ModelNode modelNode13 = propertyModelValue11.asObject();
        org.jboss.dmr.ModelNode modelNode16 = new org.jboss.dmr.ModelNode((int) 'a');
        org.jboss.dmr.ModelNode modelNode17 = modelNode16.setEmptyList();
        org.jboss.dmr.ObjectModelValue objectModelValue18 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode19 = objectModelValue18.asObject();
        java.util.Set<java.lang.String> strSet20 = objectModelValue18.getKeys();
        boolean boolean22 = objectModelValue18.has((int) 'a');
        boolean boolean24 = objectModelValue18.has("");
        org.jboss.dmr.ObjectModelValue objectModelValue25 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode26 = objectModelValue25.asObject();
        java.util.Set<java.lang.String> strSet27 = objectModelValue25.getKeys();
        boolean boolean29 = objectModelValue25.has((int) 'a');
        boolean boolean30 = objectModelValue18.equals(objectModelValue25);
        org.jboss.dmr.ModelNode modelNode31 = objectModelValue25.asObject();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList32 = objectModelValue25.asList();
        org.jboss.dmr.ModelNode modelNode33 = modelNode16.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList32);
        org.jboss.dmr.Property property35 = new org.jboss.dmr.Property("bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }", modelNode16, true);
        org.jboss.dmr.ModelNode modelNode36 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode39 = modelNode36.setExpression("hi!", "hi!");
        java.lang.String str40 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode36);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList41 = modelNode36.asListOrEmpty();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList42 = modelNode16.asList(modelNodeList41);
        org.jboss.dmr.ModelNode modelNode45 = modelNode16.setExpression("{ \"35\" : 0.0 }", "{\n    \"org.jboss.dmr.stream.ModelException: [(\\\"hi!\\\" => 0.0)]\" : {\n        \"EXPRESSION_VALUE\" : \"true\"\n    }\n}");
        org.jboss.dmr.LongModelValue longModelValue47 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str48 = longModelValue47.asString();
        byte[] byteArray49 = longModelValue47.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue50 = new org.jboss.dmr.BytesModelValue(byteArray49);
        double double51 = bytesModelValue50.asDouble();
        org.jboss.dmr.ModelNode modelNode53 = new org.jboss.dmr.ModelNode((double) 100);
        org.jboss.dmr.ModelNode modelNode55 = modelNode53.set((int) '#');
        java.lang.Boolean boolean56 = modelNode53.asBooleanOrNull();
        java.lang.String str58 = modelNode53.asString("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        boolean boolean59 = bytesModelValue50.equals((java.lang.Object) modelNode53);
        byte[] byteArray60 = bytesModelValue50.asBytes();
        org.jboss.dmr.ModelNode modelNode61 = modelNode45.set(byteArray60);
        org.jboss.dmr.ModelNode modelNode62 = new org.jboss.dmr.ModelNode(byteArray60);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode63 = modelNode13.add(byteArray60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType0.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(property12);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(modelNodeList32);
        org.junit.Assert.assertNotNull(modelNode33);
        org.junit.Assert.assertNotNull(modelNode39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str40, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList41);
        org.junit.Assert.assertNotNull(modelNodeList42);
        org.junit.Assert.assertNotNull(modelNode45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1" + "'", str48, "1");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4.9E-324d + "'", double51 == 4.9E-324d);
        org.junit.Assert.assertNotNull(modelNode55);
        org.junit.Assert.assertEquals("'" + boolean56 + "' != '" + true + "'", boolean56, true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "35" + "'", str58, "35");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(modelNode61);
    }

    @Test
    public void test10688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10688");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        java.lang.String str5 = modelNode1.toString();
        org.jboss.dmr.ModelNode modelNode6 = modelNode1.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(100);
        org.jboss.dmr.ModelNode modelNode9 = modelNode0.add(modelNode1);
        org.jboss.dmr.ModelNode modelNode10 = modelNode0.resolve();
        org.jboss.dmr.LongModelValue longModelValue13 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str14 = longModelValue13.asString();
        byte[] byteArray15 = longModelValue13.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue16 = new org.jboss.dmr.BytesModelValue(byteArray15);
        java.lang.String str17 = bytesModelValue16.asString();
        int int18 = bytesModelValue16.asInt();
        byte[] byteArray19 = bytesModelValue16.asBytes();
        org.jboss.dmr.ModelNode modelNode20 = modelNode0.add("{ \"BYTES_VALUE\" : \"v/AAAAAAAAA=\" }", byteArray19);
        org.jboss.dmr.ModelNode modelNode21 = modelNode20.clear();
        org.jboss.dmr.ModelNode modelNode23 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode26 = modelNode23.set("hi!", 0.0d);
        org.jboss.dmr.Property property27 = new org.jboss.dmr.Property("", modelNode26);
        java.lang.String[] strArray28 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode29 = modelNode26.get(strArray28);
        org.jboss.dmr.ModelNode modelNode30 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode33 = modelNode30.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList34 = modelNode33.asList();
        org.jboss.dmr.ListModelValue listModelValue35 = new org.jboss.dmr.ListModelValue(modelNodeList34);
        org.jboss.dmr.ModelNode modelNode36 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue35);
        org.jboss.dmr.ModelValue modelValue37 = listModelValue35.resolve();
        int int39 = listModelValue35.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList40 = listModelValue35.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList41 = modelNode29.asPropertyList(propertyList40);
        org.jboss.dmr.ModelNode modelNode43 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode46 = modelNode43.set("hi!", 0.0d);
        org.jboss.dmr.Property property47 = new org.jboss.dmr.Property("", modelNode46);
        java.lang.String[] strArray48 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode49 = modelNode46.get(strArray48);
        org.jboss.dmr.ModelNode modelNode50 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode53 = modelNode50.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList54 = modelNode53.asList();
        org.jboss.dmr.ListModelValue listModelValue55 = new org.jboss.dmr.ListModelValue(modelNodeList54);
        org.jboss.dmr.ModelNode modelNode56 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue55);
        org.jboss.dmr.ModelValue modelValue57 = listModelValue55.resolve();
        int int59 = listModelValue55.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList60 = listModelValue55.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList61 = modelNode49.asPropertyList(propertyList60);
        modelNode29.setNoCopy(modelNode49);
        org.jboss.dmr.ModelNode modelNode64 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode67 = modelNode64.set("hi!", 0.0d);
        org.jboss.dmr.Property property68 = new org.jboss.dmr.Property("", modelNode67);
        java.lang.String[] strArray69 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode70 = modelNode67.get(strArray69);
        org.jboss.dmr.ModelNode modelNode71 = modelNode49.get(strArray69);
        org.jboss.dmr.ModelNode modelNode72 = modelNode20.get(strArray69);
        org.jboss.dmr.ModelNode modelNode75 = modelNode72.set("\"bytes { 0x01 }\"", false);
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(\"hi!\" => 0.0)" + "'", str5, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1" + "'", str14, "1");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str17, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(modelNode21);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(modelNode29);
        org.junit.Assert.assertNotNull(modelNode33);
        org.junit.Assert.assertNotNull(modelNodeList34);
        org.junit.Assert.assertNotNull(modelValue37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(propertyList40);
        org.junit.Assert.assertNotNull(propertyList41);
        org.junit.Assert.assertNotNull(modelNode46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(modelNode49);
        org.junit.Assert.assertNotNull(modelNode53);
        org.junit.Assert.assertNotNull(modelNodeList54);
        org.junit.Assert.assertNotNull(modelValue57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(propertyList60);
        org.junit.Assert.assertNotNull(propertyList61);
        org.junit.Assert.assertNotNull(modelNode67);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(modelNode70);
        org.junit.Assert.assertNotNull(modelNode71);
        org.junit.Assert.assertNotNull(modelNode72);
        org.junit.Assert.assertNotNull(modelNode75);
    }

    @Test
    public void test10689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10689");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((long) 10);
        java.lang.String str3 = modelNode1.asString("true");
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long7 = modelNode6.asLong();
        org.jboss.dmr.ValueExpression valueExpression8 = modelNode6.asExpression();
        java.math.BigDecimal bigDecimal9 = valueExpression8.resolveBigDecimal();
        org.jboss.dmr.ModelNode modelNode10 = new org.jboss.dmr.ModelNode(bigDecimal9);
        org.jboss.dmr.ModelNode modelNode12 = modelNode10.set((double) (byte) 0);
        org.jboss.dmr.ModelNode modelNode13 = modelNode1.setNoCopy("35", modelNode12);
        boolean boolean15 = modelNode12.hasDefined("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3R3AANW9yZy5qYm9z\ncy5kbXIuc3RyZWFtLk1vZGVsRXhjZXB0aW9uOiBbKCJoaSEiID0+IDAuMCldcAADaGkhRAAAAAAA\nAAAAeA==");
        org.jboss.dmr.ModelNode modelNode17 = modelNode12.set("\"bytes {\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01\n}\"");
        org.jboss.dmr.BooleanModelValue booleanModelValue20 = org.jboss.dmr.BooleanModelValue.valueOf(false);
        long long22 = booleanModelValue20.asLong((long) 32);
        int int23 = booleanModelValue20.asInt();
        java.math.BigDecimal bigDecimal24 = booleanModelValue20.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode25 = modelNode12.set("\"\\\"1L\\\"\"", bigDecimal24);
        org.jboss.dmr.ModelNode modelNode27 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long28 = modelNode27.asLong();
        org.jboss.dmr.ModelNode modelNode31 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode34 = modelNode31.set("hi!", 0.0d);
        org.jboss.dmr.Property property35 = new org.jboss.dmr.Property("", modelNode34);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode37 = modelNode34.get(strArray36);
        org.jboss.dmr.ModelNode modelNode38 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode41 = modelNode38.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList42 = modelNode41.asList();
        org.jboss.dmr.ListModelValue listModelValue43 = new org.jboss.dmr.ListModelValue(modelNodeList42);
        org.jboss.dmr.ModelNode modelNode44 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue43);
        org.jboss.dmr.ModelValue modelValue45 = listModelValue43.resolve();
        int int47 = listModelValue43.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList48 = listModelValue43.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList49 = modelNode37.asPropertyList(propertyList48);
        org.jboss.dmr.ModelNode modelNode51 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode54 = modelNode51.set("hi!", 0.0d);
        org.jboss.dmr.Property property55 = new org.jboss.dmr.Property("", modelNode54);
        java.lang.String[] strArray56 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode57 = modelNode54.get(strArray56);
        org.jboss.dmr.ModelNode modelNode58 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode61 = modelNode58.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList62 = modelNode61.asList();
        org.jboss.dmr.ListModelValue listModelValue63 = new org.jboss.dmr.ListModelValue(modelNodeList62);
        org.jboss.dmr.ModelNode modelNode64 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue63);
        org.jboss.dmr.ModelValue modelValue65 = listModelValue63.resolve();
        int int67 = listModelValue63.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList68 = listModelValue63.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList69 = modelNode57.asPropertyList(propertyList68);
        modelNode37.setNoCopy(modelNode57);
        org.jboss.dmr.ModelNode modelNode71 = modelNode27.set("org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]", modelNode37);
        org.jboss.dmr.ModelNode modelNode73 = modelNode37.set(false);
        org.jboss.dmr.ModelNode modelNode76 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long77 = modelNode76.asLong();
        org.jboss.dmr.ModelNode modelNode80 = modelNode76.set("\"\\\"(\\\\\\\"hi!\\\\\\\" => 0.0)\\\"\"", "H4sIAAAAAAAAAAMAAAAAAAAAAAA=");
        org.jboss.dmr.IntModelValue intModelValue83 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long85 = intModelValue83.asLong((long) 'b');
        java.lang.String str86 = intModelValue83.asString();
        long long87 = intModelValue83.asLong();
        long long88 = intModelValue83.asLong();
        org.jboss.dmr.ValueExpression valueExpression89 = intModelValue83.asExpression();
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver90 = new org.jboss.dmr.ValueExpressionResolver();
        java.math.BigDecimal bigDecimal91 = valueExpression89.resolveBigDecimal(valueExpressionResolver90);
        org.jboss.dmr.ModelNode modelNode92 = modelNode76.set("", bigDecimal91);
        org.jboss.dmr.ModelNode modelNode93 = modelNode37.set("", bigDecimal91);
        org.jboss.dmr.ModelNode modelNode94 = new org.jboss.dmr.ModelNode(bigDecimal91);
        org.jboss.dmr.ModelNode modelNode95 = modelNode25.set(bigDecimal91);
        org.jboss.dmr.ModelNode modelNode97 = modelNode25.set("(\"hi!\" => expression \"(\\\"hi!\\\" => 0.0)\")");
        org.jboss.dmr.ModelNode modelNode99 = modelNode97.set(true);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "10" + "'", str3, "10");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertNotNull(valueExpression8);
        org.junit.Assert.assertNotNull(bigDecimal9);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertNotNull(booleanModelValue20);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(bigDecimal24);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertNotNull(modelNode34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(modelNode37);
        org.junit.Assert.assertNotNull(modelNode41);
        org.junit.Assert.assertNotNull(modelNodeList42);
        org.junit.Assert.assertNotNull(modelValue45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(propertyList48);
        org.junit.Assert.assertNotNull(propertyList49);
        org.junit.Assert.assertNotNull(modelNode54);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(modelNode57);
        org.junit.Assert.assertNotNull(modelNode61);
        org.junit.Assert.assertNotNull(modelNodeList62);
        org.junit.Assert.assertNotNull(modelValue65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(propertyList68);
        org.junit.Assert.assertNotNull(propertyList69);
        org.junit.Assert.assertNotNull(modelNode71);
        org.junit.Assert.assertNotNull(modelNode73);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 1L + "'", long77 == 1L);
        org.junit.Assert.assertNotNull(modelNode80);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 32L + "'", long85 == 32L);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "32" + "'", str86, "32");
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 32L + "'", long87 == 32L);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 32L + "'", long88 == 32L);
        org.junit.Assert.assertNotNull(valueExpression89);
        org.junit.Assert.assertNotNull(bigDecimal91);
        org.junit.Assert.assertNotNull(modelNode92);
        org.junit.Assert.assertNotNull(modelNode93);
        org.junit.Assert.assertNotNull(modelNode95);
        org.junit.Assert.assertNotNull(modelNode97);
        org.junit.Assert.assertNotNull(modelNode99);
    }

    @Test
    public void test10690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10690");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str2 = longModelValue1.asString();
        double double4 = longModelValue1.asDouble((double) 32L);
        org.jboss.dmr.ValueExpression valueExpression5 = longModelValue1.asExpression();
        long long7 = longModelValue1.asLong((long) 'a');
        int int9 = longModelValue1.asInt((int) '4');
        java.lang.String str10 = longModelValue1.asString();
        boolean boolean12 = longModelValue1.asBoolean(true);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1" + "'", str2, "1");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(valueExpression5);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1" + "'", str10, "1");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test10691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10691");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        java.lang.String str5 = bigIntegerModelValue4.asString();
        long long7 = bigIntegerModelValue4.asLong(32L);
        double double8 = bigIntegerModelValue4.asDouble();
        long long10 = bigIntegerModelValue4.asLong((long) '4');
        int int12 = bigIntegerModelValue4.asInt(1);
        boolean boolean13 = bigIntegerModelValue4.asBoolean();
        org.jboss.dmr.BooleanModelValue booleanModelValue14 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double15 = booleanModelValue14.asDouble();
        org.jboss.dmr.ModelValue modelValue16 = booleanModelValue14.copy();
        java.math.BigInteger bigInteger17 = booleanModelValue14.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue18 = new org.jboss.dmr.BigIntegerModelValue(bigInteger17);
        long long20 = bigIntegerModelValue18.asLong((long) 'b');
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue21 = null;
        boolean boolean22 = bigIntegerModelValue18.equals(bigIntegerModelValue21);
        boolean boolean23 = bigIntegerModelValue4.equals(bigIntegerModelValue18);
        boolean boolean24 = bigIntegerModelValue4.asBoolean();
        org.jboss.dmr.BooleanModelValue booleanModelValue26 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray27 = booleanModelValue26.asBytes();
        java.lang.String str28 = booleanModelValue26.asString();
        int int29 = booleanModelValue26.asInt();
        long long30 = booleanModelValue26.asLong();
        double double31 = booleanModelValue26.asDouble();
        org.jboss.dmr.ValueExpression valueExpression32 = booleanModelValue26.asExpression();
        boolean boolean33 = bigIntegerModelValue4.equals((java.lang.Object) booleanModelValue26);
        java.io.PrintWriter printWriter34 = null;
        // The following exception was thrown during execution in test generation
        try {
            bigIntegerModelValue4.format(printWriter34, (int) 'p', false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1" + "'", str5, "1");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanModelValue14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue16);
        org.junit.Assert.assertNotNull(bigInteger17);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(booleanModelValue26);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "true" + "'", str28, "true");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(valueExpression32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test10692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10692");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode("EXPRESSION_VALUE");
        boolean boolean3 = modelNode1.has("PROPERTY_VALUE");
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.setEmptyObject();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(modelNode4);
    }

    @Test
    public void test10693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10693");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.setExpression("hi!", "hi!");
        java.lang.String str4 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode0);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList5 = modelNode0.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode7 = modelNode0.set((double) 0);
        org.jboss.dmr.ModelNode modelNode8 = modelNode0.clear();
        int int10 = modelNode8.asInt(112);
        org.jboss.dmr.ModelNode modelNode11 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode14 = modelNode11.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList15 = modelNode14.asList();
        org.jboss.dmr.ModelNode modelNode18 = modelNode14.setExpression("hi!", "(\"hi!\" => 0.0)");
        java.util.Set<java.lang.String> strSet19 = modelNode18.keys();
        boolean boolean20 = modelNode8.equals(modelNode18);
        org.jboss.dmr.ModelNode modelNode23 = new org.jboss.dmr.ModelNode("EXPRESSION_VALUE");
        boolean boolean25 = modelNode23.has("PROPERTY_VALUE");
        boolean boolean26 = modelNode23.isProtected();
        org.jboss.dmr.ModelNode modelNode27 = modelNode18.setNoCopy("1", modelNode23);
        org.jboss.dmr.ModelType modelType28 = modelNode27.getType();
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str4, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList5);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 112 + "'", int10 == 112);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(modelNodeList15);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertTrue("'" + modelType28 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType28.equals(org.jboss.dmr.ModelType.PROPERTY));
    }

    @Test
    public void test10694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10694");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str2 = longModelValue1.asString();
        byte[] byteArray3 = longModelValue1.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue4 = new org.jboss.dmr.BytesModelValue(byteArray3);
        java.lang.String str5 = bytesModelValue4.asString();
        int int6 = bytesModelValue4.asInt();
        byte[] byteArray7 = bytesModelValue4.asBytes();
        org.jboss.dmr.LongModelValue longModelValue9 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str10 = longModelValue9.asString();
        byte[] byteArray11 = longModelValue9.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue12 = new org.jboss.dmr.BytesModelValue(byteArray11);
        java.lang.String str13 = bytesModelValue12.asString();
        int int14 = bytesModelValue12.asInt();
        int int15 = bytesModelValue12.asInt();
        org.jboss.dmr.LongModelValue longModelValue17 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str18 = longModelValue17.asString();
        byte[] byteArray19 = longModelValue17.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue20 = new org.jboss.dmr.BytesModelValue(byteArray19);
        double double21 = bytesModelValue20.asDouble();
        boolean boolean22 = bytesModelValue12.equals(bytesModelValue20);
        byte[] byteArray23 = bytesModelValue20.asBytes();
        java.math.BigInteger bigInteger24 = bytesModelValue20.asBigInteger();
        boolean boolean25 = bytesModelValue4.equals(bytesModelValue20);
        int int27 = bytesModelValue20.asInt((int) 'J');
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory29 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream30 = null;
        org.jboss.dmr.Base64.InputStream inputStream32 = new org.jboss.dmr.Base64.InputStream(inputStream30, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream33 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream32);
        org.jboss.dmr.stream.ModelReader modelReader34 = modelStreamFactory29.newModelReader((java.io.InputStream) inputStream33);
        java.io.OutputStream outputStream35 = null;
        org.jboss.dmr.Base64.OutputStream outputStream36 = new org.jboss.dmr.Base64.OutputStream(outputStream35);
        org.jboss.dmr.Base64.OutputStream outputStream37 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream36);
        outputStream36.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter40 = modelStreamFactory29.newModelWriter((java.io.OutputStream) outputStream36);
        org.jboss.dmr.stream.ModelWriter modelWriter41 = modelWriter40.writeListStart();
        bytesModelValue20.write(modelWriter41);
        org.jboss.dmr.stream.ModelWriter modelWriter43 = modelWriter41.writeUndefined();
        org.jboss.dmr.stream.ModelWriter modelWriter45 = modelWriter41.writeString("H4sIAAAAAAAAAAMAAAAAAAAAAAA=");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1" + "'", str2, "1");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str5, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1" + "'", str10, "1");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str13, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1" + "'", str18, "1");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.9E-324d + "'", double21 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(bigInteger24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(modelStreamFactory29);
        org.junit.Assert.assertNotNull(modelReader34);
        org.junit.Assert.assertNotNull(modelWriter40);
        org.junit.Assert.assertNotNull(modelWriter41);
        org.junit.Assert.assertNotNull(modelWriter43);
        org.junit.Assert.assertNotNull(modelWriter45);
    }

    @Test
    public void test10695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10695");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory3 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream4 = null;
        org.jboss.dmr.Base64.InputStream inputStream6 = new org.jboss.dmr.Base64.InputStream(inputStream4, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue8 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str9 = longModelValue8.asString();
        byte[] byteArray10 = longModelValue8.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue11 = new org.jboss.dmr.BytesModelValue(byteArray10);
        int int14 = inputStream6.read(byteArray10, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream16 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream6, (-1));
        org.jboss.dmr.stream.ModelReader modelReader17 = modelStreamFactory3.newModelReader((java.io.InputStream) inputStream16);
        java.io.InputStream inputStream18 = null;
        org.jboss.dmr.Base64.InputStream inputStream20 = new org.jboss.dmr.Base64.InputStream(inputStream18, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream21 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream20);
        org.jboss.dmr.Base64.InputStream inputStream22 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream20);
        org.jboss.dmr.stream.ModelReader modelReader23 = modelStreamFactory3.newModelReader((java.io.InputStream) inputStream20);
        java.io.InputStream inputStream24 = null;
        org.jboss.dmr.Base64.InputStream inputStream26 = new org.jboss.dmr.Base64.InputStream(inputStream24, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue28 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str29 = longModelValue28.asString();
        byte[] byteArray30 = longModelValue28.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue31 = new org.jboss.dmr.BytesModelValue(byteArray30);
        int int34 = inputStream26.read(byteArray30, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream36 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream26, (-1));
        org.jboss.dmr.Base64.InputStream inputStream38 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream26, (int) 'p');
        org.jboss.dmr.Base64.InputStream inputStream39 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream38);
        org.jboss.dmr.stream.ModelReader modelReader40 = modelStreamFactory3.newModelReader((java.io.InputStream) inputStream38);
        org.jboss.dmr.stream.ModelReader modelReader41 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream38);
        java.io.OutputStream outputStream42 = null;
        org.jboss.dmr.Base64.OutputStream outputStream43 = new org.jboss.dmr.Base64.OutputStream(outputStream42);
        outputStream43.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream45 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream43);
        org.jboss.dmr.Base64.OutputStream outputStream47 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream45, (int) (byte) -1);
        org.jboss.dmr.Base64.OutputStream outputStream48 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream47);
        outputStream48.resumeEncoding();
        outputStream48.flushBase64();
        org.jboss.dmr.stream.ModelWriter modelWriter51 = modelStreamFactory1.newModelWriter((java.io.OutputStream) outputStream48);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory53 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream54 = null;
        org.jboss.dmr.Base64.InputStream inputStream56 = new org.jboss.dmr.Base64.InputStream(inputStream54, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue58 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str59 = longModelValue58.asString();
        byte[] byteArray60 = longModelValue58.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue61 = new org.jboss.dmr.BytesModelValue(byteArray60);
        int int64 = inputStream56.read(byteArray60, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream66 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream56, (-1));
        org.jboss.dmr.stream.ModelReader modelReader67 = modelStreamFactory53.newModelReader((java.io.InputStream) inputStream66);
        java.io.InputStream inputStream68 = null;
        org.jboss.dmr.Base64.InputStream inputStream70 = new org.jboss.dmr.Base64.InputStream(inputStream68, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue72 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str73 = longModelValue72.asString();
        byte[] byteArray74 = longModelValue72.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue75 = new org.jboss.dmr.BytesModelValue(byteArray74);
        int int78 = inputStream70.read(byteArray74, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.stream.ModelReader modelReader79 = modelStreamFactory53.newModelReader((java.io.InputStream) inputStream70);
        org.jboss.dmr.Base64.InputStream inputStream81 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream70, (int) (byte) -1);
        org.jboss.dmr.stream.ModelReader modelReader82 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream70);
        org.jboss.dmr.Base64.InputStream inputStream83 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream70);
        // The following exception was thrown during execution in test generation
        try {
            inputStream83.mark((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertNotNull(modelStreamFactory3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1" + "'", str9, "1");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(modelReader17);
        org.junit.Assert.assertNotNull(modelReader23);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1" + "'", str29, "1");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(modelReader40);
        org.junit.Assert.assertNotNull(modelReader41);
        org.junit.Assert.assertNotNull(modelWriter51);
        org.junit.Assert.assertNotNull(modelStreamFactory53);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "1" + "'", str59, "1");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(modelReader67);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "1" + "'", str73, "1");
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(modelReader79);
        org.junit.Assert.assertNotNull(modelReader82);
    }

    @Test
    public void test10696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10696");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        boolean boolean5 = objectModelValue0.asBoolean();
        org.jboss.dmr.ModelNode modelNode7 = objectModelValue0.getChild("1L");
        org.jboss.dmr.ObjectModelValue objectModelValue8 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode9 = objectModelValue8.asObject();
        java.util.Set<java.lang.String> strSet10 = objectModelValue8.getKeys();
        org.jboss.dmr.ModelNode modelNode12 = objectModelValue8.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        boolean boolean13 = objectModelValue8.asBoolean();
        int int15 = objectModelValue8.asInt((int) 'b');
        int int17 = objectModelValue8.asInt((int) '#');
        boolean boolean18 = objectModelValue0.equals(objectModelValue8);
        org.jboss.dmr.ModelValue modelValue19 = objectModelValue8.resolve();
        org.jboss.dmr.ModelNode modelNode21 = objectModelValue8.removeChild("\"bytes {\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01\n}\"");
        org.jboss.dmr.ModelNode modelNode23 = objectModelValue8.getChild("");
        org.jboss.dmr.ObjectModelValue objectModelValue24 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode25 = objectModelValue24.asObject();
        java.util.Set<java.lang.String> strSet26 = objectModelValue24.getKeys();
        boolean boolean28 = objectModelValue24.has((int) 'a');
        boolean boolean30 = objectModelValue24.has("");
        org.jboss.dmr.ObjectModelValue objectModelValue31 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode32 = objectModelValue31.asObject();
        java.util.Set<java.lang.String> strSet33 = objectModelValue31.getKeys();
        boolean boolean35 = objectModelValue31.has((int) 'a');
        boolean boolean36 = objectModelValue24.equals(objectModelValue31);
        org.jboss.dmr.ModelNode modelNode37 = objectModelValue31.asObject();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList38 = objectModelValue31.asList();
        org.jboss.dmr.ObjectModelValue objectModelValue39 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode40 = objectModelValue39.asObject();
        org.jboss.dmr.ModelValue modelValue41 = objectModelValue39.protect();
        long long42 = objectModelValue39.asLong();
        boolean boolean44 = objectModelValue39.has("(\"(\\\"\\\" => (\\\"hi!\\\" => 0.0))\" => expression \"\")");
        boolean boolean45 = objectModelValue39.asBoolean();
        boolean boolean46 = objectModelValue31.equals(objectModelValue39);
        boolean boolean47 = objectModelValue8.equals(objectModelValue31);
        boolean boolean49 = objectModelValue31.asBoolean(false);
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(modelNode4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNull(modelNode12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(modelValue19);
        org.junit.Assert.assertNull(modelNode21);
        org.junit.Assert.assertNotNull(modelNode23);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(modelNode37);
        org.junit.Assert.assertNotNull(modelNodeList38);
        org.junit.Assert.assertNotNull(modelNode40);
        org.junit.Assert.assertNotNull(modelValue41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test10697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10697");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isBigInteger();
        boolean boolean17 = modelReader15.isLong();
        boolean boolean18 = modelReader15.isBigDecimal();
        boolean boolean19 = modelReader15.isUndefined();
        boolean boolean20 = modelReader15.isUndefined();
        boolean boolean21 = modelReader15.isListStart();
        boolean boolean22 = modelReader15.isListStart();
        boolean boolean23 = modelReader15.isUndefined();
        boolean boolean24 = modelReader15.isString();
        boolean boolean25 = modelReader15.isBigDecimal();
        boolean boolean26 = modelReader15.isLong();
        boolean boolean27 = modelReader15.isUndefined();
        boolean boolean28 = modelReader15.isBoolean();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test10698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10698");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long3 = intModelValue1.asLong((long) '#');
        org.jboss.dmr.IntModelValue intModelValue5 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long7 = intModelValue5.asLong((long) 'b');
        java.lang.String str8 = intModelValue5.asString();
        boolean boolean9 = intModelValue1.equals(intModelValue5);
        int int10 = intModelValue5.asInt();
        int int12 = intModelValue5.asInt(32);
        org.jboss.dmr.DoubleModelValue doubleModelValue14 = new org.jboss.dmr.DoubleModelValue((double) (byte) -1);
        org.jboss.dmr.DoubleModelValue doubleModelValue16 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        int int18 = doubleModelValue16.asInt((int) 'l');
        java.math.BigDecimal bigDecimal19 = doubleModelValue16.asBigDecimal();
        boolean boolean20 = doubleModelValue14.equals(doubleModelValue16);
        boolean boolean21 = intModelValue5.equals((java.lang.Object) doubleModelValue14);
        org.jboss.dmr.IntModelValue intModelValue23 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str24 = intModelValue23.asString();
        double double26 = intModelValue23.asDouble((double) 2);
        java.math.BigDecimal bigDecimal27 = intModelValue23.asBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue28 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal27);
        long long29 = bigDecimalModelValue28.asLong();
        long long30 = bigDecimalModelValue28.asLong();
        int int32 = bigDecimalModelValue28.asInt((-1));
        boolean boolean33 = intModelValue5.equals((java.lang.Object) bigDecimalModelValue28);
        java.math.BigDecimal bigDecimal34 = bigDecimalModelValue28.asBigDecimal();
        java.io.PrintWriter printWriter35 = null;
        // The following exception was thrown during execution in test generation
        try {
            bigDecimalModelValue28.format(printWriter35, (int) (byte) 100, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 32L + "'", long3 == 32L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 32L + "'", long7 == 32L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "32" + "'", str8, "32");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertNotNull(bigDecimal19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "32" + "'", str24, "32");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 32.0d + "'", double26 == 32.0d);
        org.junit.Assert.assertNotNull(bigDecimal27);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 32L + "'", long29 == 32L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 32L + "'", long30 == 32L);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 32 + "'", int32 == 32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bigDecimal34);
    }

    @Test
    public void test10699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10699");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isBigInteger();
        boolean boolean17 = modelReader15.isLong();
        boolean boolean18 = modelReader15.isBigDecimal();
        boolean boolean19 = modelReader15.isUndefined();
        boolean boolean20 = modelReader15.isUndefined();
        boolean boolean21 = modelReader15.hasNext();
        boolean boolean22 = modelReader15.isExpression();
        boolean boolean23 = modelReader15.isListStart();
        boolean boolean24 = modelReader15.isPropertyStart();
        boolean boolean25 = modelReader15.isBoolean();
        boolean boolean26 = modelReader15.isString();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test10700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10700");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isLong();
        boolean boolean17 = modelReader15.isBigInteger();
        boolean boolean18 = modelReader15.isObjectEnd();
        boolean boolean19 = modelReader15.isBytes();
        boolean boolean20 = modelReader15.isBigDecimal();
        // The following exception was thrown during execution in test generation
        try {
            double double21 = modelReader15.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Current event isn't double");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test10701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10701");
        org.jboss.dmr.stream.ModelException modelException1 = new org.jboss.dmr.stream.ModelException("H4sIAAAAAAAAAPv/HwIAHN9EIQgAAAA=");
    }

    @Test
    public void test10702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10702");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        int int6 = bigIntegerModelValue4.asInt((int) (short) 1);
        long long8 = bigIntegerModelValue4.asLong(11975582L);
        java.math.BigInteger bigInteger9 = bigIntegerModelValue4.asBigInteger();
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1L + "'", long8 == 1L);
        org.junit.Assert.assertNotNull(bigInteger9);
    }

    @Test
    public void test10703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10703");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(modelType0);
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode6 = modelNode3.set("hi!", 0.0d);
        org.jboss.dmr.Property property7 = new org.jboss.dmr.Property("", modelNode6);
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(property7);
        org.jboss.dmr.ModelNode modelNode9 = property7.getValue();
        org.jboss.dmr.PropertyModelValue propertyModelValue10 = new org.jboss.dmr.PropertyModelValue(property7);
        java.util.List<org.jboss.dmr.Property> propertyList11 = propertyModelValue10.asPropertyList();
        org.jboss.dmr.ModelNode modelNode13 = propertyModelValue10.getChild((int) (short) 0);
        boolean boolean15 = propertyModelValue10.has("(\"hi!\" => 0.0)");
        org.jboss.dmr.ModelNode modelNode16 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) propertyModelValue10);
        org.jboss.dmr.ModelNode modelNode18 = modelNode16.setExpression("");
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType0.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(propertyList11);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(modelNode18);
    }

    @Test
    public void test10704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10704");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream5 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4);
        org.jboss.dmr.stream.ModelReader modelReader6 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream5);
        java.io.InputStream inputStream7 = null;
        org.jboss.dmr.Base64.InputStream inputStream9 = new org.jboss.dmr.Base64.InputStream(inputStream7, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream11 = new org.jboss.dmr.Base64.InputStream(inputStream7, (int) (byte) 100);
        org.jboss.dmr.Base64.InputStream inputStream12 = new org.jboss.dmr.Base64.InputStream(inputStream7);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream(inputStream7, 0);
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory17 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream18 = null;
        org.jboss.dmr.Base64.InputStream inputStream20 = new org.jboss.dmr.Base64.InputStream(inputStream18, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream21 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream20);
        org.jboss.dmr.stream.ModelReader modelReader22 = modelStreamFactory17.newModelReader((java.io.InputStream) inputStream21);
        java.io.OutputStream outputStream23 = null;
        org.jboss.dmr.Base64.OutputStream outputStream24 = new org.jboss.dmr.Base64.OutputStream(outputStream23);
        org.jboss.dmr.Base64.OutputStream outputStream25 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream24);
        outputStream24.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter28 = modelStreamFactory17.newModelWriter((java.io.OutputStream) outputStream24);
        java.io.OutputStream outputStream29 = null;
        org.jboss.dmr.Base64.OutputStream outputStream30 = new org.jboss.dmr.Base64.OutputStream(outputStream29);
        outputStream30.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream32 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream30);
        org.jboss.dmr.Base64.OutputStream outputStream34 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream32, (int) (byte) -1);
        org.jboss.dmr.Base64.OutputStream outputStream35 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream34);
        outputStream35.resumeEncoding();
        outputStream35.flushBase64();
        org.jboss.dmr.stream.ModelWriter modelWriter38 = modelStreamFactory17.newModelWriter((java.io.OutputStream) outputStream35);
        java.io.InputStream inputStream39 = null;
        org.jboss.dmr.Base64.InputStream inputStream41 = new org.jboss.dmr.Base64.InputStream(inputStream39, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue43 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str44 = longModelValue43.asString();
        byte[] byteArray45 = longModelValue43.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue46 = new org.jboss.dmr.BytesModelValue(byteArray45);
        int int49 = inputStream41.read(byteArray45, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream51 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream41, (-1));
        org.jboss.dmr.Base64.InputStream inputStream53 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream41, (int) 'p');
        org.jboss.dmr.stream.ModelReader modelReader54 = modelStreamFactory17.newModelReader((java.io.InputStream) inputStream41);
        org.jboss.dmr.Base64.InputStream inputStream56 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream41, 10);
        org.jboss.dmr.stream.ModelReader modelReader57 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream56);
        java.io.Reader reader58 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.stream.ModelReader modelReader59 = modelStreamFactory1.newModelReader(reader58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Parameter cannot be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertNotNull(modelReader6);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertNotNull(modelStreamFactory17);
        org.junit.Assert.assertNotNull(modelReader22);
        org.junit.Assert.assertNotNull(modelWriter28);
        org.junit.Assert.assertNotNull(modelWriter38);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1" + "'", str44, "1");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(modelReader54);
        org.junit.Assert.assertNotNull(modelReader57);
    }

    @Test
    public void test10705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10705");
        org.jboss.dmr.ExpressionValue expressionValue1 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue3 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean4 = expressionValue1.equals(expressionValue3);
        org.jboss.dmr.ExpressionValue expressionValue6 = new org.jboss.dmr.ExpressionValue("1");
        org.jboss.dmr.ValueExpression valueExpression7 = expressionValue6.asExpression();
        boolean boolean8 = expressionValue1.equals(expressionValue6);
        org.jboss.dmr.ObjectModelValue objectModelValue9 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode10 = objectModelValue9.asObject();
        java.util.Set<java.lang.String> strSet11 = objectModelValue9.getKeys();
        org.jboss.dmr.ModelNode modelNode13 = objectModelValue9.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        int int15 = objectModelValue9.asInt(10);
        boolean boolean16 = expressionValue6.equals((java.lang.Object) objectModelValue9);
        java.io.PrintWriter printWriter17 = null;
        // The following exception was thrown during execution in test generation
        try {
            expressionValue6.format(printWriter17, 32, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(valueExpression7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(modelNode13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test10706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10706");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(false);
        int int3 = modelNode1.asInt(2);
        org.jboss.dmr.ModelNode modelNode5 = modelNode1.set(52);
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode10 = modelNode7.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList11 = modelNode10.asList();
        org.jboss.dmr.ListModelValue listModelValue12 = new org.jboss.dmr.ListModelValue(modelNodeList11);
        org.jboss.dmr.ModelNode modelNode13 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue12);
        org.jboss.dmr.ModelValue modelValue14 = listModelValue12.resolve();
        int int16 = listModelValue12.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList17 = listModelValue12.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList18 = listModelValue12.asPropertyList();
        org.jboss.dmr.ModelNode modelNode20 = listModelValue12.getChild((int) (short) 0);
        org.jboss.dmr.ModelNode modelNode21 = modelNode20.resolve();
        org.jboss.dmr.ModelNode modelNode22 = modelNode5.set("EXPRESSION_VALUE", modelNode21);
        org.jboss.dmr.ModelNode modelNode25 = modelNode5.set("1", (double) 1.0f);
        org.jboss.dmr.ModelNode modelNode27 = org.jboss.dmr.ModelNode.fromJSONString("1.0");
        org.jboss.dmr.ModelNode modelNode28 = modelNode27.setEmptyObject();
        modelNode25.setNoCopy(modelNode27);
        java.lang.String str31 = modelNode27.asString("10.0");
        org.jboss.dmr.ModelNode modelNode33 = modelNode27.setExpression("[(\"[(\\\"H4sIAAAAAAAAAAMAAAAAAAAAAAA=\\\" => big integer 32)]\" => expression \"52\"),(\"AQ==\" => false),(\"\" => (\"hi!\" => 0.0)),big integer 1]");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertNotNull(modelNodeList11);
        org.junit.Assert.assertNotNull(modelValue14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(propertyList17);
        org.junit.Assert.assertNotNull(propertyList18);
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(modelNode21);
        org.junit.Assert.assertNotNull(modelNode22);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertNotNull(modelNode28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{}" + "'", str31, "{}");
        org.junit.Assert.assertNotNull(modelNode33);
    }

    @Test
    public void test10707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10707");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue((long) 35);
    }

    @Test
    public void test10708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10708");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue((-1L));
        long long3 = longModelValue1.asLong((long) (byte) -1);
        boolean boolean5 = longModelValue1.asBoolean(false);
        java.io.OutputStream outputStream6 = null;
        org.jboss.dmr.Base64.OutputStream outputStream7 = new org.jboss.dmr.Base64.OutputStream(outputStream6);
        outputStream7.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream9 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream7);
        org.jboss.dmr.Base64.OutputStream outputStream11 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream9, (int) (byte) -1);
        org.jboss.dmr.Base64.OutputStream outputStream12 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream11);
        outputStream12.resumeEncoding();
        boolean boolean14 = longModelValue1.equals((java.lang.Object) outputStream12);
        long long16 = longModelValue1.asLong((long) 'p');
        org.jboss.dmr.ObjectModelValue objectModelValue17 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode18 = objectModelValue17.asObject();
        java.util.Set<java.lang.String> strSet19 = objectModelValue17.getKeys();
        boolean boolean21 = objectModelValue17.has((int) 'a');
        boolean boolean23 = objectModelValue17.has("");
        org.jboss.dmr.ObjectModelValue objectModelValue24 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode25 = objectModelValue24.asObject();
        java.util.Set<java.lang.String> strSet26 = objectModelValue24.getKeys();
        boolean boolean28 = objectModelValue24.has((int) 'a');
        boolean boolean29 = objectModelValue17.equals(objectModelValue24);
        int int30 = objectModelValue24.asInt();
        org.jboss.dmr.ObjectModelValue objectModelValue31 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode32 = objectModelValue31.asObject();
        org.jboss.dmr.ModelValue modelValue33 = objectModelValue31.copy();
        int int35 = objectModelValue31.asInt((int) (short) 100);
        java.util.List<org.jboss.dmr.Property> propertyList36 = objectModelValue31.asPropertyList();
        java.lang.String str37 = objectModelValue31.asString();
        boolean boolean38 = objectModelValue24.equals(objectModelValue31);
        boolean boolean39 = longModelValue1.equals((java.lang.Object) boolean38);
        org.jboss.dmr.ModelNode modelNode41 = new org.jboss.dmr.ModelNode(1L);
        org.jboss.dmr.LongModelValue longModelValue43 = new org.jboss.dmr.LongModelValue(1L);
        int int45 = longModelValue43.asInt((int) (byte) 0);
        java.math.BigInteger bigInteger46 = longModelValue43.asBigInteger();
        org.jboss.dmr.ModelNode modelNode47 = modelNode41.set(bigInteger46);
        boolean boolean48 = longModelValue1.equals((java.lang.Object) bigInteger46);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertNotNull(modelValue33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(propertyList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "{}" + "'", str37, "{}");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(bigInteger46);
        org.junit.Assert.assertNotNull(modelNode47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test10709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10709");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(10);
        org.jboss.dmr.ModelNode modelNode2 = modelNode1.resolve();
        org.jboss.dmr.Validation.validate(modelNode1, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3R3AANW9yZy5qYm9z\ncy5kbXIuc3RyZWFtLk1vZGVsRXhjZXB0aW9uOiBbKCJoaSEiID0+IDAuMCldcAADaGkhRAAAAAAA\nAAAAeA==");
        org.jboss.dmr.ModelNode modelNode5 = modelNode1.clone();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode7 = modelNode1.add(0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode2);
        org.junit.Assert.assertNotNull(modelNode5);
    }

    @Test
    public void test10710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10710");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("rO0ABXA=");
        // The following exception was thrown during execution in test generation
        try {
            java.math.BigInteger bigInteger2 = stringModelValue1.asBigInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"rO0ABXA=\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10711");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        int int6 = bigIntegerModelValue4.asInt((int) (short) 1);
        org.jboss.dmr.BooleanModelValue booleanModelValue7 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double8 = booleanModelValue7.asDouble();
        org.jboss.dmr.ModelValue modelValue9 = booleanModelValue7.copy();
        java.math.BigInteger bigInteger10 = booleanModelValue7.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue11 = new org.jboss.dmr.BigIntegerModelValue(bigInteger10);
        int int13 = bigIntegerModelValue11.asInt((int) (short) 1);
        org.jboss.dmr.BooleanModelValue booleanModelValue14 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double15 = booleanModelValue14.asDouble();
        org.jboss.dmr.ModelValue modelValue16 = booleanModelValue14.copy();
        java.math.BigInteger bigInteger17 = booleanModelValue14.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue18 = new org.jboss.dmr.BigIntegerModelValue(bigInteger17);
        java.lang.String str19 = bigIntegerModelValue18.asString();
        java.math.BigInteger bigInteger20 = bigIntegerModelValue18.asBigInteger();
        boolean boolean21 = bigIntegerModelValue11.equals(bigIntegerModelValue18);
        int int22 = bigIntegerModelValue18.asInt();
        boolean boolean23 = bigIntegerModelValue4.equals(bigIntegerModelValue18);
        int int24 = bigIntegerModelValue4.asInt();
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanModelValue7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue9);
        org.junit.Assert.assertNotNull(bigInteger10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(booleanModelValue14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue16);
        org.junit.Assert.assertNotNull(bigInteger17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1" + "'", str19, "1");
        org.junit.Assert.assertNotNull(bigInteger20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
    }

    @Test
    public void test10712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10712");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long3 = intModelValue1.asLong((long) '#');
        org.jboss.dmr.IntModelValue intModelValue5 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long7 = intModelValue5.asLong((long) 'b');
        java.lang.String str8 = intModelValue5.asString();
        boolean boolean9 = intModelValue1.equals(intModelValue5);
        int int10 = intModelValue5.asInt();
        int int12 = intModelValue5.asInt(32);
        org.jboss.dmr.DoubleModelValue doubleModelValue14 = new org.jboss.dmr.DoubleModelValue((double) (byte) -1);
        org.jboss.dmr.DoubleModelValue doubleModelValue16 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        int int18 = doubleModelValue16.asInt((int) 'l');
        java.math.BigDecimal bigDecimal19 = doubleModelValue16.asBigDecimal();
        boolean boolean20 = doubleModelValue14.equals(doubleModelValue16);
        boolean boolean21 = intModelValue5.equals((java.lang.Object) doubleModelValue14);
        int int23 = doubleModelValue14.asInt((int) (byte) 0);
        int int25 = doubleModelValue14.asInt(3);
        org.jboss.dmr.ValueExpression valueExpression26 = doubleModelValue14.asExpression();
        org.jboss.dmr.ModelNode modelNode27 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode30 = modelNode27.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList31 = modelNode30.asList();
        org.jboss.dmr.ListModelValue listModelValue32 = new org.jboss.dmr.ListModelValue(modelNodeList31);
        org.jboss.dmr.ModelNode modelNode33 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue32);
        org.jboss.dmr.ModelValue modelValue34 = listModelValue32.resolve();
        int int36 = listModelValue32.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList37 = listModelValue32.asPropertyList();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList38 = listModelValue32.asList();
        long long39 = listModelValue32.asLong();
        int int41 = listModelValue32.asInt((int) 'b');
        org.jboss.dmr.ModelNode modelNode42 = listModelValue32.asObject();
        org.jboss.dmr.Validation.validate(modelNode42, "{ \"TYPE_MODEL_VALUE\" : \"BYTES\" }");
        boolean boolean45 = doubleModelValue14.equals((java.lang.Object) modelNode42);
        java.lang.String str46 = doubleModelValue14.asString();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 32L + "'", long3 == 32L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 32L + "'", long7 == 32L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "32" + "'", str8, "32");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertNotNull(bigDecimal19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(valueExpression26);
        org.junit.Assert.assertNotNull(modelNode30);
        org.junit.Assert.assertNotNull(modelNodeList31);
        org.junit.Assert.assertNotNull(modelValue34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(propertyList37);
        org.junit.Assert.assertNotNull(modelNodeList38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1L + "'", long39 == 1L);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(modelNode42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "-1.0" + "'", str46, "-1.0");
    }

    @Test
    public void test10713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10713");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.removeChild("1");
        boolean boolean5 = objectModelValue0.asBoolean();
        org.jboss.dmr.ObjectModelValue objectModelValue6 = new org.jboss.dmr.ObjectModelValue();
        long long8 = objectModelValue6.asLong((long) (-1));
        boolean boolean9 = objectModelValue0.equals(objectModelValue6);
        boolean boolean11 = objectModelValue0.asBoolean(true);
        java.util.Set<java.lang.String> strSet12 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelValue modelValue13 = objectModelValue0.copy();
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(modelNode4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(modelValue13);
    }

    @Test
    public void test10714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10714");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        double double6 = bigIntegerModelValue4.asDouble((double) 'b');
        java.lang.String str7 = bigIntegerModelValue4.asString();
        org.jboss.dmr.ValueExpression valueExpression8 = bigIntegerModelValue4.asExpression();
        boolean boolean10 = bigIntegerModelValue4.asBoolean(true);
        boolean boolean11 = bigIntegerModelValue4.asBoolean();
        boolean boolean13 = bigIntegerModelValue4.asBoolean(false);
        double double15 = bigIntegerModelValue4.asDouble((double) (-1.0f));
        double double17 = bigIntegerModelValue4.asDouble((double) 'e');
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(valueExpression8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
    }

    @Test
    public void test10715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10715");
        java.io.InputStream inputStream0 = null;
        org.jboss.dmr.Base64.InputStream inputStream2 = new org.jboss.dmr.Base64.InputStream(inputStream0, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue4 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str5 = longModelValue4.asString();
        byte[] byteArray6 = longModelValue4.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue7 = new org.jboss.dmr.BytesModelValue(byteArray6);
        int int10 = inputStream2.read(byteArray6, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream12 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream2, (-1));
        org.jboss.dmr.Base64.InputStream inputStream13 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream12);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream12);
        org.jboss.dmr.Base64.InputStream inputStream16 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream14, 0);
        // The following exception was thrown during execution in test generation
        try {
            long long18 = inputStream14.skip(1L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1" + "'", str5, "1");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test10716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10716");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.setExpression("hi!", "hi!");
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode9 = modelNode6.set("hi!", 0.0d);
        org.jboss.dmr.Property property10 = new org.jboss.dmr.Property("", modelNode9);
        boolean boolean12 = modelNode9.equals((java.lang.Object) 100L);
        boolean boolean13 = modelNode1.equals(modelNode9);
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode18 = modelNode15.set("hi!", 0.0d);
        org.jboss.dmr.Property property19 = new org.jboss.dmr.Property("", modelNode18);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode21 = modelNode18.get(strArray20);
        org.jboss.dmr.ModelNode modelNode22 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int23 = modelNode22.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode24 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode27 = modelNode24.setExpression("hi!", "hi!");
        java.lang.String str28 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode24);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList29 = modelNode24.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode30 = modelNode22.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList29);
        org.jboss.dmr.ModelNode modelNode31 = modelNode21.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList29);
        org.jboss.dmr.ModelNode modelNode32 = modelNode9.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList29);
        org.jboss.dmr.ModelNode modelNode34 = modelNode9.add("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4");
        org.jboss.dmr.PropertyModelValue propertyModelValue36 = new org.jboss.dmr.PropertyModelValue("1.0", modelNode9, false);
        java.io.InputStream inputStream37 = null;
        org.jboss.dmr.Base64.InputStream inputStream39 = new org.jboss.dmr.Base64.InputStream(inputStream37, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue41 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str42 = longModelValue41.asString();
        byte[] byteArray43 = longModelValue41.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue44 = new org.jboss.dmr.BytesModelValue(byteArray43);
        int int47 = inputStream39.read(byteArray43, (int) (short) 1, (int) (byte) -1);
        java.lang.String str48 = org.jboss.dmr.Base64.encodeBytes(byteArray43);
        org.jboss.dmr.ModelNode modelNode49 = modelNode9.set(byteArray43);
        org.jboss.dmr.LongModelValue longModelValue51 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str52 = longModelValue51.asString();
        byte[] byteArray53 = longModelValue51.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue54 = new org.jboss.dmr.BytesModelValue(byteArray53);
        java.lang.String str55 = bytesModelValue54.asString();
        int int56 = bytesModelValue54.asInt();
        int int57 = bytesModelValue54.asInt();
        org.jboss.dmr.LongModelValue longModelValue59 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str60 = longModelValue59.asString();
        byte[] byteArray61 = longModelValue59.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue62 = new org.jboss.dmr.BytesModelValue(byteArray61);
        double double63 = bytesModelValue62.asDouble();
        boolean boolean64 = bytesModelValue54.equals(bytesModelValue62);
        byte[] byteArray65 = bytesModelValue62.asBytes();
        java.math.BigDecimal bigDecimal66 = bytesModelValue62.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode67 = modelNode49.set(bigDecimal66);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode69 = modelNode67.require("(\"(\\\"\\\\\\\"(\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\" => 0.0)\\\\\\\"\\\" => (\\\"[(\\\\\\\"hi!\\\\\\\" => 0.0)]\\\" => PROPERTY))\" => undefined)");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child '(\"(\\\"\\\\\\\"(\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\" => 0.0)\\\\\\\"\\\" => (\\\"[(\\\\\\\"hi!\\\\\\\" => 0.0)]\\\" => PROPERTY))\" => undefined)' exists");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(modelNode21);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str28, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList29);
        org.junit.Assert.assertNotNull(modelNode30);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertNotNull(modelNode34);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1" + "'", str42, "1");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AAAAAAAAAAE=" + "'", str48, "AAAAAAAAAAE=");
        org.junit.Assert.assertNotNull(modelNode49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1" + "'", str52, "1");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str55, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "1" + "'", str60, "1");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 4.9E-324d + "'", double63 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(bigDecimal66);
        org.junit.Assert.assertNotNull(modelNode67);
    }

    @Test
    public void test10717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10717");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue5);
        org.jboss.dmr.ModelValue modelValue7 = listModelValue5.resolve();
        int int9 = listModelValue5.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList10 = listModelValue5.asPropertyList();
        long long12 = listModelValue5.asLong((long) ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode13 = listModelValue5.addChild();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertNotNull(modelValue7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(propertyList10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
    }

    @Test
    public void test10718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10718");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(modelType0);
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode6 = modelNode3.set("hi!", 0.0d);
        org.jboss.dmr.Property property7 = new org.jboss.dmr.Property("", modelNode6);
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(property7);
        org.jboss.dmr.PropertyModelValue propertyModelValue9 = new org.jboss.dmr.PropertyModelValue(property7);
        org.jboss.dmr.PropertyModelValue propertyModelValue10 = new org.jboss.dmr.PropertyModelValue(property7);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList11 = propertyModelValue10.asList();
        org.jboss.dmr.ModelValue modelValue12 = propertyModelValue10.resolve();
        java.io.DataOutput dataOutput13 = null;
        // The following exception was thrown during execution in test generation
        try {
            propertyModelValue10.writeExternal(dataOutput13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType0.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNodeList11);
        org.junit.Assert.assertNotNull(modelValue12);
    }

    @Test
    public void test10719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10719");
        org.jboss.dmr.ObjectModelValue objectModelValue2 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode3 = objectModelValue2.asObject();
        org.jboss.dmr.ModelNode modelNode5 = objectModelValue2.getChild("TYPE_MODEL_VALUE");
        org.jboss.dmr.ModelNode modelNode7 = objectModelValue2.getChild("[(\"hi!\" => 0.0)]");
        org.jboss.dmr.Property property8 = new org.jboss.dmr.Property("PROPERTY_VALUE", modelNode7);
        boolean boolean10 = modelNode7.asBoolean(false);
        org.jboss.dmr.ModelNode modelNode12 = modelNode7.set("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        org.jboss.dmr.Property property13 = new org.jboss.dmr.Property("{\n    \"\\\"\\\\\\\"1L\\\\\\\"\\\"\" : 0\n}", modelNode7);
        org.jboss.dmr.ModelNode modelNode14 = property13.getValue();
        org.jboss.dmr.PropertyModelValue propertyModelValue15 = new org.jboss.dmr.PropertyModelValue(property13);
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNode14);
    }

    @Test
    public void test10720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10720");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        java.lang.String str2 = doubleModelValue1.asString();
        byte[] byteArray3 = doubleModelValue1.asBytes();
        boolean boolean5 = doubleModelValue1.has("(\"H4sIAAAAAAAAAAMAAAAAAAAAAAA=\" => 2)");
        org.jboss.dmr.ModelValue modelValue6 = doubleModelValue1.clone();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "10.0" + "'", str2, "10.0");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(modelValue6);
    }

    @Test
    public void test10721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10721");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.PROPERTY;
        char char1 = modelType0.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue2 = org.jboss.dmr.TypeModelValue.of(modelType0);
        boolean boolean3 = typeModelValue2.asBoolean();
        org.jboss.dmr.BooleanModelValue booleanModelValue5 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray6 = booleanModelValue5.asBytes();
        java.lang.String str7 = booleanModelValue5.asString();
        int int8 = booleanModelValue5.asInt();
        boolean boolean9 = typeModelValue2.equals((java.lang.Object) booleanModelValue5);
        org.jboss.dmr.ModelType modelType10 = org.jboss.dmr.ModelType.PROPERTY;
        char char11 = modelType10.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue12 = org.jboss.dmr.TypeModelValue.of(modelType10);
        org.jboss.dmr.ModelType modelType13 = org.jboss.dmr.ModelType.PROPERTY;
        char char14 = modelType13.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue15 = org.jboss.dmr.TypeModelValue.of(modelType13);
        boolean boolean16 = typeModelValue12.equals(typeModelValue15);
        java.lang.String str17 = typeModelValue15.asString();
        org.jboss.dmr.ModelType modelType18 = org.jboss.dmr.ModelType.PROPERTY;
        char char19 = modelType18.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue20 = org.jboss.dmr.TypeModelValue.of(modelType18);
        org.jboss.dmr.ModelType modelType21 = org.jboss.dmr.ModelType.PROPERTY;
        char char22 = modelType21.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue23 = org.jboss.dmr.TypeModelValue.of(modelType21);
        boolean boolean24 = typeModelValue20.equals(typeModelValue23);
        java.lang.String str25 = typeModelValue23.asString();
        boolean boolean27 = typeModelValue23.asBoolean(true);
        boolean boolean28 = typeModelValue15.equals(typeModelValue23);
        org.jboss.dmr.ValueExpression valueExpression29 = typeModelValue23.asExpression();
        org.jboss.dmr.ModelType modelType30 = org.jboss.dmr.ModelType.PROPERTY;
        char char31 = modelType30.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue32 = org.jboss.dmr.TypeModelValue.of(modelType30);
        boolean boolean33 = typeModelValue32.asBoolean();
        boolean boolean34 = typeModelValue23.equals(typeModelValue32);
        boolean boolean35 = typeModelValue2.equals(typeModelValue23);
        java.io.PrintWriter printWriter36 = null;
        // The following exception was thrown during execution in test generation
        try {
            typeModelValue2.formatAsJSON(printWriter36, 5, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType0.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char1 + "' != '" + 'p' + "'", char1 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(booleanModelValue5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "true" + "'", str7, "true");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + modelType10 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType10.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char11 + "' != '" + 'p' + "'", char11 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue12);
        org.junit.Assert.assertTrue("'" + modelType13 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType13.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char14 + "' != '" + 'p' + "'", char14 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PROPERTY" + "'", str17, "PROPERTY");
        org.junit.Assert.assertTrue("'" + modelType18 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType18.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char19 + "' != '" + 'p' + "'", char19 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue20);
        org.junit.Assert.assertTrue("'" + modelType21 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType21.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char22 + "' != '" + 'p' + "'", char22 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "PROPERTY" + "'", str25, "PROPERTY");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(valueExpression29);
        org.junit.Assert.assertTrue("'" + modelType30 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType30.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char31 + "' != '" + 'p' + "'", char31 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test10722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10722");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        java.lang.String str2 = doubleModelValue1.asString();
        byte[] byteArray3 = doubleModelValue1.asBytes();
        org.jboss.dmr.ValueExpression valueExpression4 = doubleModelValue1.asExpression();
        int int6 = doubleModelValue1.asInt((int) (byte) -1);
        int int7 = doubleModelValue1.asInt();
        double double8 = doubleModelValue1.asDouble();
        org.jboss.dmr.ModelValue modelValue9 = doubleModelValue1.protect();
        boolean boolean10 = doubleModelValue1.asBoolean();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "10.0" + "'", str2, "10.0");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(valueExpression4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertNotNull(modelValue9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test10723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10723");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ModelType modelType5 = modelNode3.getType();
        org.jboss.dmr.TypeModelValue typeModelValue6 = org.jboss.dmr.TypeModelValue.of(modelType5);
        org.jboss.dmr.ValueExpression valueExpression7 = typeModelValue6.asExpression();
        org.jboss.dmr.ValueExpression valueExpression8 = typeModelValue6.asExpression();
        java.io.PrintWriter printWriter9 = null;
        // The following exception was thrown during execution in test generation
        try {
            typeModelValue6.formatAsJSON(printWriter9, (int) 'p', false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertTrue("'" + modelType5 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType5.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertNotNull(typeModelValue6);
        org.junit.Assert.assertNotNull(valueExpression7);
        org.junit.Assert.assertNotNull(valueExpression8);
    }

    @Test
    public void test10724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10724");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        double double6 = bigIntegerModelValue4.asDouble((double) 'b');
        java.lang.String str7 = bigIntegerModelValue4.asString();
        org.jboss.dmr.ValueExpression valueExpression8 = bigIntegerModelValue4.asExpression();
        boolean boolean10 = bigIntegerModelValue4.asBoolean(true);
        boolean boolean11 = bigIntegerModelValue4.asBoolean();
        boolean boolean12 = bigIntegerModelValue4.asBoolean();
        java.lang.String str13 = bigIntegerModelValue4.asString();
        org.jboss.dmr.ValueExpression valueExpression14 = bigIntegerModelValue4.asExpression();
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(valueExpression8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1" + "'", str13, "1");
        org.junit.Assert.assertNotNull(valueExpression14);
    }

    @Test
    public void test10725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10725");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode5 = modelNode2.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList6 = modelNode5.asList();
        org.jboss.dmr.ListModelValue listModelValue7 = new org.jboss.dmr.ListModelValue(modelNodeList6);
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue7);
        org.jboss.dmr.ModelValue modelValue9 = listModelValue7.resolve();
        int int11 = listModelValue7.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList12 = listModelValue7.asPropertyList();
        boolean boolean13 = intModelValue1.equals((java.lang.Object) listModelValue7);
        java.math.BigDecimal bigDecimal14 = intModelValue1.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode16 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode19 = modelNode16.set("hi!", 0.0d);
        java.lang.String str20 = modelNode16.toString();
        org.jboss.dmr.ModelNode modelNode21 = modelNode16.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode23 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode26 = modelNode23.set("hi!", 0.0d);
        org.jboss.dmr.Property property27 = new org.jboss.dmr.Property("", modelNode26);
        org.jboss.dmr.ModelNode modelNode28 = modelNode16.set(property27);
        org.jboss.dmr.PropertyModelValue propertyModelValue30 = new org.jboss.dmr.PropertyModelValue("EXPRESSION_VALUE", modelNode28, false);
        java.util.Set<java.lang.String> strSet31 = propertyModelValue30.getKeys();
        java.util.List<org.jboss.dmr.Property> propertyList32 = propertyModelValue30.asPropertyList();
        java.util.Set<java.lang.String> strSet33 = propertyModelValue30.getKeys();
        org.jboss.dmr.ModelNode modelNode35 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode38 = modelNode35.setExpression("hi!", "hi!");
        org.jboss.dmr.ModelNode modelNode40 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode43 = modelNode40.set("hi!", 0.0d);
        org.jboss.dmr.Property property44 = new org.jboss.dmr.Property("", modelNode43);
        boolean boolean46 = modelNode43.equals((java.lang.Object) 100L);
        boolean boolean47 = modelNode35.equals(modelNode43);
        org.jboss.dmr.ModelNode modelNode49 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode52 = modelNode49.set("hi!", 0.0d);
        org.jboss.dmr.Property property53 = new org.jboss.dmr.Property("", modelNode52);
        java.lang.String[] strArray54 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode55 = modelNode52.get(strArray54);
        org.jboss.dmr.ModelNode modelNode56 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int57 = modelNode56.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode58 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode61 = modelNode58.setExpression("hi!", "hi!");
        java.lang.String str62 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode58);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList63 = modelNode58.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode64 = modelNode56.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList63);
        org.jboss.dmr.ModelNode modelNode65 = modelNode55.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList63);
        org.jboss.dmr.ModelNode modelNode66 = modelNode43.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList63);
        org.jboss.dmr.ModelNode modelNode68 = modelNode43.add("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4");
        org.jboss.dmr.ModelType modelType69 = modelNode68.getType();
        byte[] byteArray72 = org.jboss.dmr.Base64.decode("true");
        org.jboss.dmr.ModelNode modelNode73 = modelNode68.set("\"(\\\"hi!\\\" => 0.0)\"", byteArray72);
        org.jboss.dmr.PropertyModelValue propertyModelValue74 = new org.jboss.dmr.PropertyModelValue("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]", modelNode73);
        boolean boolean75 = propertyModelValue30.equals(propertyModelValue74);
        boolean boolean76 = intModelValue1.equals((java.lang.Object) propertyModelValue74);
        java.io.PrintWriter printWriter77 = null;
        // The following exception was thrown during execution in test generation
        try {
            propertyModelValue74.formatAsJSON(printWriter77, (-1), false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(modelNodeList6);
        org.junit.Assert.assertNotNull(modelValue9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(propertyList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(bigDecimal14);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(\"hi!\" => 0.0)" + "'", str20, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode21);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertNotNull(modelNode28);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(propertyList32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(modelNode38);
        org.junit.Assert.assertNotNull(modelNode43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(modelNode52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(modelNode55);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(modelNode61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str62, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList63);
        org.junit.Assert.assertNotNull(modelNode64);
        org.junit.Assert.assertNotNull(modelNode65);
        org.junit.Assert.assertNotNull(modelNode66);
        org.junit.Assert.assertNotNull(modelNode68);
        org.junit.Assert.assertTrue("'" + modelType69 + "' != '" + org.jboss.dmr.ModelType.LIST + "'", modelType69.equals(org.jboss.dmr.ModelType.LIST));
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[-74, -69, -98]");
        org.junit.Assert.assertNotNull(modelNode73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test10726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10726");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        org.jboss.dmr.ModelValue modelValue6 = objectModelValue0.copy(false);
        int int7 = objectModelValue0.asInt();
        java.lang.String str8 = objectModelValue0.asString();
        boolean boolean9 = objectModelValue0.asBoolean();
        java.util.Set<java.lang.String> strSet10 = objectModelValue0.getKeys();
        org.jboss.dmr.ObjectModelValue objectModelValue11 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode12 = objectModelValue11.asObject();
        java.util.Set<java.lang.String> strSet13 = objectModelValue11.getKeys();
        boolean boolean15 = objectModelValue11.has((int) 'a');
        boolean boolean17 = objectModelValue11.has("");
        org.jboss.dmr.ObjectModelValue objectModelValue18 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode19 = objectModelValue18.asObject();
        java.util.Set<java.lang.String> strSet20 = objectModelValue18.getKeys();
        boolean boolean22 = objectModelValue18.has((int) 'a');
        boolean boolean23 = objectModelValue11.equals(objectModelValue18);
        org.jboss.dmr.ModelNode modelNode25 = objectModelValue11.getChild("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AloAeA==");
        boolean boolean26 = objectModelValue0.equals(objectModelValue11);
        boolean boolean27 = objectModelValue11.asBoolean();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList28 = objectModelValue11.asList();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode30 = objectModelValue11.requireChild("\"(\\\"hi!\\\" => 0.0)\"");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child '\"(\\\"hi!\\\" => 0.0)\"' exists");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(modelNode4);
        org.junit.Assert.assertNotNull(modelValue6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{}" + "'", str8, "{}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(modelNodeList28);
    }

    @Test
    public void test10727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10727");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue((long) '4');
        java.math.BigDecimal bigDecimal2 = longModelValue1.asBigDecimal();
        int int3 = longModelValue1.asInt();
        org.jboss.dmr.ValueExpression valueExpression4 = longModelValue1.asExpression();
        int int6 = longModelValue1.asInt((int) 'p');
        org.jboss.dmr.ModelNode modelNode9 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode12 = modelNode9.set("hi!", 0.0d);
        org.jboss.dmr.Property property13 = new org.jboss.dmr.Property("", modelNode12);
        boolean boolean15 = modelNode12.equals((java.lang.Object) 100L);
        org.jboss.dmr.Property property17 = new org.jboss.dmr.Property("[(\"hi!\" => 0.0)]", modelNode12, false);
        org.jboss.dmr.Property property18 = property17.clone();
        boolean boolean19 = longModelValue1.equals((java.lang.Object) property17);
        int int20 = longModelValue1.asInt();
        org.junit.Assert.assertNotNull(bigDecimal2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertNotNull(valueExpression4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
    }

    @Test
    public void test10728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10728");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue(0);
        org.jboss.dmr.IntModelValue intModelValue3 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long5 = intModelValue3.asLong((long) 'b');
        java.lang.String str6 = intModelValue3.asString();
        java.math.BigInteger bigInteger7 = intModelValue3.asBigInteger();
        boolean boolean9 = intModelValue3.asBoolean(false);
        org.jboss.dmr.IntModelValue intModelValue11 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long13 = intModelValue11.asLong((long) 'b');
        java.lang.String str14 = intModelValue11.asString();
        boolean boolean15 = intModelValue3.equals(intModelValue11);
        int int17 = intModelValue11.asInt(112);
        double double18 = intModelValue11.asDouble();
        java.lang.String str19 = intModelValue11.asString();
        boolean boolean20 = intModelValue1.equals(intModelValue11);
        org.jboss.dmr.ValueExpression valueExpression21 = intModelValue11.asExpression();
        org.jboss.dmr.ModelNode modelNode22 = new org.jboss.dmr.ModelNode(valueExpression21);
        org.jboss.dmr.ModelNode modelNode23 = new org.jboss.dmr.ModelNode(valueExpression21);
        int int24 = valueExpression21.resolveInt();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 32L + "'", long5 == 32L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "32" + "'", str6, "32");
        org.junit.Assert.assertNotNull(bigInteger7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 32L + "'", long13 == 32L);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "32" + "'", str14, "32");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 32.0d + "'", double18 == 32.0d);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "32" + "'", str19, "32");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(valueExpression21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 32 + "'", int24 == 32);
    }

    @Test
    public void test10729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10729");
        org.jboss.dmr.BooleanModelValue booleanModelValue1 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long2 = booleanModelValue1.asLong();
        int int3 = booleanModelValue1.asInt();
        double double5 = booleanModelValue1.asDouble((double) 32);
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode9 = modelNode6.setExpression("hi!", "hi!");
        java.lang.String str10 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode6);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList11 = modelNode6.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode13 = modelNode6.set((double) 0);
        boolean boolean14 = modelNode6.isProtected();
        boolean boolean16 = modelNode6.hasDefined("[(\"hi!\" => 0.0)]");
        org.jboss.dmr.ModelNode modelNode19 = modelNode6.set("hi!", (long) (short) 100);
        boolean boolean20 = booleanModelValue1.equals((java.lang.Object) modelNode19);
        int int22 = booleanModelValue1.asInt((int) 'a');
        long long24 = booleanModelValue1.asLong(35L);
        org.junit.Assert.assertNotNull(booleanModelValue1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str10, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList11);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1L + "'", long24 == 1L);
    }

    @Test
    public void test10730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10730");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        org.jboss.dmr.ModelValue modelValue2 = objectModelValue0.copy();
        boolean boolean3 = objectModelValue0.asBoolean();
        java.lang.String str4 = objectModelValue0.asString();
        org.jboss.dmr.ObjectModelValue objectModelValue5 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode6 = objectModelValue5.asObject();
        java.util.Set<java.lang.String> strSet7 = objectModelValue5.getKeys();
        boolean boolean9 = objectModelValue5.has((int) 'a');
        boolean boolean11 = objectModelValue5.has("");
        org.jboss.dmr.ObjectModelValue objectModelValue12 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode13 = objectModelValue12.asObject();
        java.util.Set<java.lang.String> strSet14 = objectModelValue12.getKeys();
        boolean boolean16 = objectModelValue12.has((int) 'a');
        boolean boolean17 = objectModelValue5.equals(objectModelValue12);
        org.jboss.dmr.ModelNode modelNode18 = objectModelValue12.asObject();
        java.util.List<org.jboss.dmr.Property> propertyList19 = objectModelValue12.asPropertyList();
        org.jboss.dmr.ObjectModelValue objectModelValue20 = new org.jboss.dmr.ObjectModelValue();
        boolean boolean21 = objectModelValue20.asBoolean();
        int int23 = objectModelValue20.asInt(0);
        org.jboss.dmr.ModelValue modelValue25 = objectModelValue20.copy(false);
        boolean boolean26 = objectModelValue12.equals(objectModelValue20);
        boolean boolean27 = objectModelValue0.equals(objectModelValue12);
        org.jboss.dmr.ModelValue modelValue29 = objectModelValue12.copy(true);
        boolean boolean30 = objectModelValue12.asBoolean();
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertNotNull(propertyList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(modelValue25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(modelValue29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test10731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10731");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.setExpression("hi!", "hi!");
        java.lang.String str4 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode0);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList5 = modelNode0.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode7 = modelNode0.set((double) 0);
        org.jboss.dmr.ModelNode modelNode8 = org.jboss.dmr.ModelNode.ZERO_LONG;
        boolean boolean10 = modelNode8.asBoolean(false);
        org.jboss.dmr.ModelType modelType11 = modelNode8.getType();
        org.jboss.dmr.ModelNode modelNode12 = modelNode0.set(modelType11);
        org.jboss.dmr.ModelNode modelNode14 = modelNode12.set("expression \"true\"");
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str4, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList5);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + modelType11 + "' != '" + org.jboss.dmr.ModelType.LONG + "'", modelType11.equals(org.jboss.dmr.ModelType.LONG));
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNode14);
    }

    @Test
    public void test10732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10732");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.lang.String str4 = modelNode0.toString();
        org.jboss.dmr.ModelNode modelNode5 = modelNode0.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode7 = modelNode0.set(100);
        org.jboss.dmr.ModelNode modelNode10 = new org.jboss.dmr.ModelNode((double) 100);
        org.jboss.dmr.ModelNode modelNode12 = modelNode10.set((int) '#');
        org.jboss.dmr.ModelNode modelNode13 = modelNode0.setNoCopy("EXPRESSION_VALUE", modelNode12);
        org.jboss.dmr.ModelNode modelNode14 = modelNode13.setEmptyList();
        org.jboss.dmr.ModelNode modelNode15 = modelNode14.add();
        org.jboss.dmr.ModelNode modelNode16 = modelNode14.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode17 = modelNode14.clear();
        org.jboss.dmr.BooleanModelValue booleanModelValue20 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long21 = booleanModelValue20.asLong();
        org.jboss.dmr.ValueExpression valueExpression22 = booleanModelValue20.asExpression();
        java.lang.String str23 = valueExpression22.toString();
        org.jboss.dmr.ExpressionValue expressionValue25 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ValueExpression valueExpression26 = expressionValue25.asExpression();
        boolean boolean27 = valueExpression22.equals(valueExpression26);
        java.lang.String str28 = valueExpression26.resolveString();
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver29 = new org.jboss.dmr.ValueExpressionResolver();
        java.lang.String str30 = valueExpression26.resolveString(valueExpressionResolver29);
        org.jboss.dmr.ModelNode modelNode31 = modelNode17.set("AAAAZA==", valueExpression26);
        org.jboss.dmr.ObjectModelValue objectModelValue33 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode34 = objectModelValue33.asObject();
        org.jboss.dmr.ModelNode modelNode36 = objectModelValue33.getChild("TYPE_MODEL_VALUE");
        org.jboss.dmr.ModelNode modelNode38 = objectModelValue33.getChild("[(\"hi!\" => 0.0)]");
        org.jboss.dmr.Property property39 = new org.jboss.dmr.Property("PROPERTY_VALUE", modelNode38);
        org.jboss.dmr.Property property40 = property39.clone();
        org.jboss.dmr.ModelNode modelNode41 = property40.getValue();
        org.jboss.dmr.ModelNode modelNode42 = modelNode17.set(property40);
        org.jboss.dmr.ModelNode modelNode43 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode44 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode47 = modelNode44.set("hi!", 0.0d);
        java.lang.String str48 = modelNode44.toString();
        org.jboss.dmr.ModelNode modelNode49 = modelNode44.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode51 = modelNode44.set(100);
        org.jboss.dmr.ModelNode modelNode52 = modelNode43.add(modelNode44);
        int int54 = modelNode44.asInt(2);
        org.jboss.dmr.ModelType modelType56 = org.jboss.dmr.ModelType.BYTES;
        org.jboss.dmr.ModelNode modelNode57 = modelNode44.set("[(\"hi!\" => 0.0)]", modelType56);
        org.jboss.dmr.TypeModelValue typeModelValue58 = org.jboss.dmr.TypeModelValue.of(modelType56);
        org.jboss.dmr.ModelNode modelNode59 = modelNode17.set(modelType56);
        org.jboss.dmr.ModelNode modelNode61 = modelNode17.set((long) 'a');
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "(\"hi!\" => 0.0)" + "'", str4, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(modelNode15);
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertNotNull(booleanModelValue20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertNotNull(valueExpression22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Expression \"true\"" + "'", str23, "Expression \"true\"");
        org.junit.Assert.assertNotNull(valueExpression26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(modelNode34);
        org.junit.Assert.assertNotNull(modelNode36);
        org.junit.Assert.assertNotNull(modelNode38);
        org.junit.Assert.assertNotNull(property40);
        org.junit.Assert.assertNotNull(modelNode41);
        org.junit.Assert.assertNotNull(modelNode42);
        org.junit.Assert.assertNotNull(modelNode47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(\"hi!\" => 0.0)" + "'", str48, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode49);
        org.junit.Assert.assertNotNull(modelNode51);
        org.junit.Assert.assertNotNull(modelNode52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        org.junit.Assert.assertTrue("'" + modelType56 + "' != '" + org.jboss.dmr.ModelType.BYTES + "'", modelType56.equals(org.jboss.dmr.ModelType.BYTES));
        org.junit.Assert.assertNotNull(modelNode57);
        org.junit.Assert.assertNotNull(typeModelValue58);
        org.junit.Assert.assertNotNull(modelNode59);
        org.junit.Assert.assertNotNull(modelNode61);
    }

    @Test
    public void test10733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10733");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.removeChild("hi!");
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList5 = objectModelValue0.asList();
        org.jboss.dmr.ModelNode modelNode7 = objectModelValue0.getChild("\"bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }\"");
        org.jboss.dmr.ModelType modelType9 = org.jboss.dmr.ModelType.DOUBLE;
        org.jboss.dmr.ModelNode modelNode10 = new org.jboss.dmr.ModelNode(modelType9);
        org.jboss.dmr.LongModelValue longModelValue13 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str14 = longModelValue13.asString();
        byte[] byteArray15 = longModelValue13.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue16 = new org.jboss.dmr.BytesModelValue(byteArray15);
        java.lang.String str17 = bytesModelValue16.asString();
        int int18 = bytesModelValue16.asInt();
        long long20 = bytesModelValue16.asLong((long) (short) 1);
        long long21 = bytesModelValue16.asLong();
        java.math.BigDecimal bigDecimal22 = bytesModelValue16.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode23 = modelNode10.set("32", bigDecimal22);
        org.jboss.dmr.Property property24 = modelNode23.asProperty();
        org.jboss.dmr.ModelNode modelNode25 = modelNode7.setNoCopy("rO0ABXNyABFqYXZhLmxhbmcuSW50ZWdlchLioKT3gYc4AgABSQAFdmFsdWV4cgAQamF2YS5sYW5n\nLk51bWJlcoaslR0LlOCLAgAAeHAAAABk", modelNode23);
        org.jboss.dmr.LongModelValue longModelValue27 = new org.jboss.dmr.LongModelValue(1L);
        int int29 = longModelValue27.asInt((int) (byte) 0);
        java.math.BigInteger bigInteger30 = longModelValue27.asBigInteger();
        org.jboss.dmr.LongModelValue longModelValue32 = new org.jboss.dmr.LongModelValue((-1L));
        long long34 = longModelValue32.asLong((long) (byte) -1);
        int int36 = longModelValue32.asInt(0);
        boolean boolean37 = longModelValue27.equals((java.lang.Object) longModelValue32);
        byte[] byteArray38 = longModelValue32.asBytes();
        java.lang.String str40 = org.jboss.dmr.Base64.encodeBytes(byteArray38, (int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode41 = modelNode23.add(byteArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNodeList5);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertTrue("'" + modelType9 + "' != '" + org.jboss.dmr.ModelType.DOUBLE + "'", modelType9.equals(org.jboss.dmr.ModelType.DOUBLE));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1" + "'", str14, "1");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str17, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertNotNull(bigDecimal22);
        org.junit.Assert.assertNotNull(modelNode23);
        org.junit.Assert.assertNotNull(property24);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(bigInteger30);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-1, -1, -1, -1, -1, -1, -1, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "H4sIAAAAAAAAAPv/HwIAHN9EIQgAAAA=" + "'", str40, "H4sIAAAAAAAAAPv/HwIAHN9EIQgAAAA=");
    }

    @Test
    public void test10734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10734");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        byte[] byteArray2 = stringModelValue1.asBytes();
        org.jboss.dmr.StringModelValue stringModelValue4 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        org.jboss.dmr.ValueExpression valueExpression5 = stringModelValue4.asExpression();
        boolean boolean7 = stringModelValue4.equals((java.lang.Object) (-1.0d));
        java.lang.String str8 = stringModelValue4.asString();
        org.jboss.dmr.stream.ModelEvent modelEvent9 = org.jboss.dmr.stream.ModelEvent.UNDEFINED;
        boolean boolean10 = stringModelValue4.equals((java.lang.Object) modelEvent9);
        org.jboss.dmr.StringModelValue stringModelValue12 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.StringModelValue stringModelValue14 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.StringModelValue stringModelValue16 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        boolean boolean17 = stringModelValue14.equals(stringModelValue16);
        byte[] byteArray18 = stringModelValue16.asBytes();
        java.lang.Object obj19 = null;
        boolean boolean20 = stringModelValue16.equals(obj19);
        boolean boolean22 = stringModelValue16.equals((java.lang.Object) "TYPE_MODEL_VALUE");
        boolean boolean23 = stringModelValue12.equals(stringModelValue16);
        boolean boolean24 = stringModelValue4.equals(stringModelValue16);
        boolean boolean25 = stringModelValue1.equals(stringModelValue16);
        org.jboss.dmr.StringModelValue stringModelValue27 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        org.jboss.dmr.ValueExpression valueExpression28 = stringModelValue27.asExpression();
        boolean boolean30 = stringModelValue27.equals((java.lang.Object) (-1.0d));
        java.lang.String str31 = stringModelValue27.asString();
        org.jboss.dmr.stream.ModelEvent modelEvent32 = org.jboss.dmr.stream.ModelEvent.UNDEFINED;
        boolean boolean33 = stringModelValue27.equals((java.lang.Object) modelEvent32);
        org.jboss.dmr.StringModelValue stringModelValue35 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.StringModelValue stringModelValue37 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.StringModelValue stringModelValue39 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        boolean boolean40 = stringModelValue37.equals(stringModelValue39);
        byte[] byteArray41 = stringModelValue39.asBytes();
        java.lang.Object obj42 = null;
        boolean boolean43 = stringModelValue39.equals(obj42);
        boolean boolean45 = stringModelValue39.equals((java.lang.Object) "TYPE_MODEL_VALUE");
        boolean boolean46 = stringModelValue35.equals(stringModelValue39);
        boolean boolean47 = stringModelValue27.equals(stringModelValue39);
        boolean boolean48 = stringModelValue1.equals(stringModelValue39);
        org.jboss.dmr.StringModelValue stringModelValue50 = new org.jboss.dmr.StringModelValue("");
        boolean boolean51 = stringModelValue1.equals(stringModelValue50);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory53 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream54 = null;
        org.jboss.dmr.Base64.InputStream inputStream56 = new org.jboss.dmr.Base64.InputStream(inputStream54, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream57 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream56);
        org.jboss.dmr.stream.ModelReader modelReader58 = modelStreamFactory53.newModelReader((java.io.InputStream) inputStream57);
        java.io.OutputStream outputStream59 = null;
        org.jboss.dmr.Base64.OutputStream outputStream60 = new org.jboss.dmr.Base64.OutputStream(outputStream59);
        org.jboss.dmr.Base64.OutputStream outputStream61 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream60);
        outputStream60.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter64 = modelStreamFactory53.newModelWriter((java.io.OutputStream) outputStream60);
        org.jboss.dmr.stream.ModelWriter modelWriter65 = modelWriter64.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter67 = modelWriter64.writeInt((int) '4');
        org.jboss.dmr.stream.ModelWriter modelWriter69 = modelWriter67.writeBoolean(true);
        org.jboss.dmr.stream.ModelWriter modelWriter71 = modelWriter67.writeBoolean(true);
        org.jboss.dmr.stream.ModelWriter modelWriter73 = modelWriter67.writeString("(\"true\" => INT)");
        stringModelValue1.write(modelWriter73);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[40, 34, 34, 32, 61, 62, 32, 40, 34, 104, 105, 33, 34, 32, 61, 62, 32, 48, 46, 48, 41, 41]");
        org.junit.Assert.assertNotNull(valueExpression5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(\"\" => (\"hi!\" => 0.0))" + "'", str8, "(\"\" => (\"hi!\" => 0.0))");
        org.junit.Assert.assertTrue("'" + modelEvent9 + "' != '" + org.jboss.dmr.stream.ModelEvent.UNDEFINED + "'", modelEvent9.equals(org.jboss.dmr.stream.ModelEvent.UNDEFINED));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[40, 34, 34, 32, 61, 62, 32, 40, 34, 104, 105, 33, 34, 32, 61, 62, 32, 48, 46, 48, 41, 41]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(valueExpression28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(\"\" => (\"hi!\" => 0.0))" + "'", str31, "(\"\" => (\"hi!\" => 0.0))");
        org.junit.Assert.assertTrue("'" + modelEvent32 + "' != '" + org.jboss.dmr.stream.ModelEvent.UNDEFINED + "'", modelEvent32.equals(org.jboss.dmr.stream.ModelEvent.UNDEFINED));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[40, 34, 34, 32, 61, 62, 32, 40, 34, 104, 105, 33, 34, 32, 61, 62, 32, 48, 46, 48, 41, 41]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(modelStreamFactory53);
        org.junit.Assert.assertNotNull(modelReader58);
        org.junit.Assert.assertNotNull(modelWriter64);
        org.junit.Assert.assertNotNull(modelWriter65);
        org.junit.Assert.assertNotNull(modelWriter67);
        org.junit.Assert.assertNotNull(modelWriter69);
        org.junit.Assert.assertNotNull(modelWriter71);
        org.junit.Assert.assertNotNull(modelWriter73);
    }

    @Test
    public void test10735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10735");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        java.lang.String str6 = listModelValue5.asString();
        long long7 = listModelValue5.asLong();
        int int9 = listModelValue5.asInt((int) '4');
        org.jboss.dmr.ModelValue modelValue10 = listModelValue5.protect();
        org.jboss.dmr.ModelValue modelValue11 = listModelValue5.protect();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = listModelValue5.asList();
        org.jboss.dmr.ModelNode modelNode13 = listModelValue5.asObject();
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode17 = modelNode14.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList18 = modelNode17.asList();
        org.jboss.dmr.ModelType modelType19 = modelNode17.getType();
        org.jboss.dmr.TypeModelValue typeModelValue20 = org.jboss.dmr.TypeModelValue.of(modelType19);
        org.jboss.dmr.ValueExpression valueExpression21 = typeModelValue20.asExpression();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode22 = modelNode13.add(valueExpression21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str6, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(modelValue10);
        org.junit.Assert.assertNotNull(modelValue11);
        org.junit.Assert.assertNotNull(modelNodeList12);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertNotNull(modelNodeList18);
        org.junit.Assert.assertTrue("'" + modelType19 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType19.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertNotNull(typeModelValue20);
        org.junit.Assert.assertNotNull(valueExpression21);
    }

    @Test
    public void test10736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10736");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        int int9 = bigDecimalModelValue7.asInt(0);
        int int10 = bigDecimalModelValue7.asInt();
        int int11 = bigDecimalModelValue7.asInt();
        java.lang.String str12 = bigDecimalModelValue7.asString();
        long long14 = bigDecimalModelValue7.asLong((long) 52);
        java.math.BigDecimal bigDecimal15 = bigDecimalModelValue7.asBigDecimal();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1.0" + "'", str12, "1.0");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(bigDecimal15);
    }

    @Test
    public void test10737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10737");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long2 = doubleModelValue1.asLong();
        boolean boolean4 = doubleModelValue1.asBoolean(true);
        boolean boolean6 = doubleModelValue1.asBoolean(false);
        int int7 = doubleModelValue1.asInt();
        int int8 = doubleModelValue1.asInt();
        java.io.DataOutput dataOutput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            doubleModelValue1.writeExternal(dataOutput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10L + "'", long2 == 10L);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
    }

    @Test
    public void test10738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10738");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.lang.String str4 = modelNode0.toString();
        org.jboss.dmr.ModelNode modelNode5 = modelNode0.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode7 = modelNode0.set(100);
        java.lang.String str9 = modelNode0.toJSONString(true);
        org.jboss.dmr.ModelNode modelNode12 = modelNode0.set("BYTES_VALUE", (long) (short) 1);
        org.jboss.dmr.DoubleModelValue doubleModelValue15 = new org.jboss.dmr.DoubleModelValue((double) (byte) -1);
        org.jboss.dmr.DoubleModelValue doubleModelValue17 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        int int19 = doubleModelValue17.asInt((int) 'l');
        java.math.BigDecimal bigDecimal20 = doubleModelValue17.asBigDecimal();
        boolean boolean21 = doubleModelValue15.equals(doubleModelValue17);
        org.jboss.dmr.ModelNode modelNode23 = new org.jboss.dmr.ModelNode(35L);
        org.jboss.dmr.ModelNode modelNode25 = modelNode23.set((int) '4');
        boolean boolean26 = doubleModelValue17.equals((java.lang.Object) modelNode25);
        org.jboss.dmr.ValueExpression valueExpression27 = doubleModelValue17.asExpression();
        org.jboss.dmr.ValueExpression valueExpression28 = doubleModelValue17.asExpression();
        java.math.BigDecimal bigDecimal29 = valueExpression28.resolveBigDecimal();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode30 = modelNode12.add("{ \"EXPRESSION_VALUE\" : \"hi!\" }", bigDecimal29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "(\"hi!\" => 0.0)" + "'", str4, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "100" + "'", str9, "100");
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(bigDecimal20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(valueExpression27);
        org.junit.Assert.assertNotNull(valueExpression28);
        org.junit.Assert.assertNotNull(bigDecimal29);
    }

    @Test
    public void test10739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10739");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        org.jboss.dmr.ModelValue modelValue2 = objectModelValue0.copy();
        int int4 = objectModelValue0.asInt((int) (short) 100);
        org.jboss.dmr.ModelValue modelValue5 = objectModelValue0.protect();
        int int6 = objectModelValue0.asInt();
        org.jboss.dmr.ModelValue modelValue7 = objectModelValue0.resolve();
        java.lang.String str8 = objectModelValue0.asString();
        boolean boolean10 = objectModelValue0.has("\"PROPERTY_VALUE\"");
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(modelValue5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(modelValue7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{}" + "'", str8, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test10740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10740");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long3 = intModelValue1.asLong((long) 'b');
        java.lang.String str4 = intModelValue1.asString();
        java.math.BigInteger bigInteger5 = intModelValue1.asBigInteger();
        double double7 = intModelValue1.asDouble(0.0d);
        double double8 = intModelValue1.asDouble();
        boolean boolean9 = intModelValue1.asBoolean();
        double double10 = intModelValue1.asDouble();
        byte[] byteArray11 = intModelValue1.asBytes();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = intModelValue1.asList();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 32L + "'", long3 == 32L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "32" + "'", str4, "32");
        org.junit.Assert.assertNotNull(bigInteger5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 32.0d + "'", double7 == 32.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 32.0d + "'", double8 == 32.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 32.0d + "'", double10 == 32.0d);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, 0, 32]");
    }

    @Test
    public void test10741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10741");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue5);
        org.jboss.dmr.ModelValue modelValue7 = listModelValue5.resolve();
        int int9 = listModelValue5.asInt((int) (byte) 100);
        boolean boolean10 = listModelValue5.asBoolean();
        org.jboss.dmr.ModelNode[] modelNodeArray11 = org.jboss.dmr.ListModelValue.NO_NODES;
        boolean boolean12 = listModelValue5.equals((java.lang.Object) modelNodeArray11);
        long long13 = listModelValue5.asLong();
        boolean boolean15 = listModelValue5.asBoolean(true);
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertNotNull(modelValue7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(modelNodeArray11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test10742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10742");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        boolean boolean4 = objectModelValue0.has((int) 'a');
        boolean boolean6 = objectModelValue0.has("");
        org.jboss.dmr.ObjectModelValue objectModelValue7 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode8 = objectModelValue7.asObject();
        java.util.Set<java.lang.String> strSet9 = objectModelValue7.getKeys();
        boolean boolean11 = objectModelValue7.has((int) 'a');
        boolean boolean12 = objectModelValue0.equals(objectModelValue7);
        org.jboss.dmr.ModelNode modelNode13 = objectModelValue7.asObject();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList14 = objectModelValue7.asList();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList15 = objectModelValue7.asList();
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNodeList14);
        org.junit.Assert.assertNotNull(modelNodeList15);
    }

    @Test
    public void test10743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10743");
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long3 = modelNode2.asLong();
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode9 = modelNode6.set("hi!", 0.0d);
        org.jboss.dmr.Property property10 = new org.jboss.dmr.Property("", modelNode9);
        java.lang.String[] strArray11 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode12 = modelNode9.get(strArray11);
        org.jboss.dmr.ModelNode modelNode13 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode16 = modelNode13.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList17 = modelNode16.asList();
        org.jboss.dmr.ListModelValue listModelValue18 = new org.jboss.dmr.ListModelValue(modelNodeList17);
        org.jboss.dmr.ModelNode modelNode19 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue18);
        org.jboss.dmr.ModelValue modelValue20 = listModelValue18.resolve();
        int int22 = listModelValue18.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList23 = listModelValue18.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList24 = modelNode12.asPropertyList(propertyList23);
        org.jboss.dmr.ModelNode modelNode26 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode29 = modelNode26.set("hi!", 0.0d);
        org.jboss.dmr.Property property30 = new org.jboss.dmr.Property("", modelNode29);
        java.lang.String[] strArray31 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode32 = modelNode29.get(strArray31);
        org.jboss.dmr.ModelNode modelNode33 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode36 = modelNode33.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList37 = modelNode36.asList();
        org.jboss.dmr.ListModelValue listModelValue38 = new org.jboss.dmr.ListModelValue(modelNodeList37);
        org.jboss.dmr.ModelNode modelNode39 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue38);
        org.jboss.dmr.ModelValue modelValue40 = listModelValue38.resolve();
        int int42 = listModelValue38.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList43 = listModelValue38.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList44 = modelNode32.asPropertyList(propertyList43);
        modelNode12.setNoCopy(modelNode32);
        org.jboss.dmr.ModelNode modelNode46 = modelNode2.set("org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]", modelNode12);
        boolean boolean47 = modelNode12.isDefined();
        org.jboss.dmr.PropertyModelValue propertyModelValue49 = new org.jboss.dmr.PropertyModelValue("rO0ABXNyAB1vcmcuamJvc3MuZG1yLlZhbHVlRXhwcmVzc2lvbvwmn+JujpBcDAAAeHB3BQADaGkh\neA==", modelNode12, true);
        java.util.List<org.jboss.dmr.Property> propertyList50 = propertyModelValue49.asPropertyList();
        org.jboss.dmr.ModelValue modelValue51 = propertyModelValue49.protect();
        org.jboss.dmr.ModelValue modelValue52 = modelValue51.copy();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 1L + "'", long3 == 1L);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertNotNull(modelNodeList17);
        org.junit.Assert.assertNotNull(modelValue20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(propertyList23);
        org.junit.Assert.assertNotNull(propertyList24);
        org.junit.Assert.assertNotNull(modelNode29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertNotNull(modelNode36);
        org.junit.Assert.assertNotNull(modelNodeList37);
        org.junit.Assert.assertNotNull(modelValue40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(propertyList43);
        org.junit.Assert.assertNotNull(propertyList44);
        org.junit.Assert.assertNotNull(modelNode46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(propertyList50);
        org.junit.Assert.assertNotNull(modelValue51);
        org.junit.Assert.assertNotNull(modelValue52);
    }

    @Test
    public void test10744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10744");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str2 = intModelValue1.asString();
        double double4 = intModelValue1.asDouble((double) 100);
        java.math.BigInteger bigInteger5 = intModelValue1.asBigInteger();
        org.jboss.dmr.IntModelValue intModelValue7 = new org.jboss.dmr.IntModelValue((-1));
        boolean boolean8 = intModelValue1.equals(intModelValue7);
        org.jboss.dmr.ModelNode modelNode10 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long11 = modelNode10.asLong();
        org.jboss.dmr.ValueExpression valueExpression12 = modelNode10.asExpression();
        java.math.BigDecimal bigDecimal13 = valueExpression12.resolveBigDecimal();
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode(bigDecimal13);
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode(bigDecimal13);
        boolean boolean16 = intModelValue1.equals((java.lang.Object) bigDecimal13);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "32" + "'", str2, "32");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 32.0d + "'", double4 == 32.0d);
        org.junit.Assert.assertNotNull(bigInteger5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertNotNull(valueExpression12);
        org.junit.Assert.assertNotNull(bigDecimal13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test10745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10745");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue(10);
        double double3 = intModelValue1.asDouble((double) 100);
        boolean boolean5 = intModelValue1.asBoolean(false);
        org.jboss.dmr.IntModelValue intModelValue7 = new org.jboss.dmr.IntModelValue((int) ' ');
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = modelNode11.asList();
        org.jboss.dmr.ListModelValue listModelValue13 = new org.jboss.dmr.ListModelValue(modelNodeList12);
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue13);
        org.jboss.dmr.ModelValue modelValue15 = listModelValue13.resolve();
        int int17 = listModelValue13.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList18 = listModelValue13.asPropertyList();
        boolean boolean19 = intModelValue7.equals((java.lang.Object) listModelValue13);
        double double20 = intModelValue7.asDouble();
        double double21 = intModelValue7.asDouble();
        byte[] byteArray22 = intModelValue7.asBytes();
        boolean boolean23 = intModelValue1.equals(intModelValue7);
        java.lang.String str24 = intModelValue7.asString();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 10.0d + "'", double3 == 10.0d);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNodeList12);
        org.junit.Assert.assertNotNull(modelValue15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(propertyList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 32.0d + "'", double20 == 32.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 32.0d + "'", double21 == 32.0d);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0, 0, 0, 32]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "32" + "'", str24, "32");
    }

    @Test
    public void test10746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10746");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isLong();
        boolean boolean17 = modelReader15.isBigInteger();
        boolean boolean18 = modelReader15.isObjectEnd();
        boolean boolean19 = modelReader15.isListEnd();
        boolean boolean20 = modelReader15.isPropertyEnd();
        boolean boolean21 = modelReader15.isPropertyEnd();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.stream.ModelEvent modelEvent22 = modelReader15.next();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test10747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10747");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        boolean boolean7 = listModelValue5.asBoolean(true);
        int int9 = listModelValue5.asInt((int) (byte) -1);
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test10748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10748");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.removeChild("hi!");
        java.lang.String str5 = objectModelValue0.asString();
        org.jboss.dmr.ModelNode modelNode7 = objectModelValue0.getChild("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3CUQ/8AAAAAAAAHg=");
        java.util.Set<java.lang.String> strSet8 = objectModelValue0.getKeys();
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(modelNode4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{}" + "'", str5, "{}");
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(strSet8);
    }

    @Test
    public void test10749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10749");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        java.io.DataOutput dataOutput2 = null;
        // The following exception was thrown during execution in test generation
        try {
            stringModelValue1.writeExternal(dataOutput2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10750");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        org.jboss.dmr.ModelValue modelValue6 = objectModelValue0.copy(false);
        int int7 = objectModelValue0.asInt();
        java.lang.String str8 = objectModelValue0.asString();
        boolean boolean9 = objectModelValue0.asBoolean();
        java.util.Set<java.lang.String> strSet10 = objectModelValue0.getKeys();
        org.jboss.dmr.ObjectModelValue objectModelValue11 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode12 = objectModelValue11.asObject();
        java.util.Set<java.lang.String> strSet13 = objectModelValue11.getKeys();
        boolean boolean15 = objectModelValue11.has((int) 'a');
        boolean boolean17 = objectModelValue11.has("");
        org.jboss.dmr.ObjectModelValue objectModelValue18 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode19 = objectModelValue18.asObject();
        java.util.Set<java.lang.String> strSet20 = objectModelValue18.getKeys();
        boolean boolean22 = objectModelValue18.has((int) 'a');
        boolean boolean23 = objectModelValue11.equals(objectModelValue18);
        org.jboss.dmr.ModelNode modelNode25 = objectModelValue11.getChild("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AloAeA==");
        boolean boolean26 = objectModelValue0.equals(objectModelValue11);
        boolean boolean28 = objectModelValue11.has("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3BWwAAAAAeA==");
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList29 = objectModelValue11.asList();
        java.io.PrintWriter printWriter30 = null;
        // The following exception was thrown during execution in test generation
        try {
            objectModelValue11.formatAsJSON(printWriter30, 35, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(modelNode4);
        org.junit.Assert.assertNotNull(modelValue6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{}" + "'", str8, "{}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(modelNodeList29);
    }

    @Test
    public void test10751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10751");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        boolean boolean8 = bigDecimalModelValue7.asBoolean();
        long long9 = bigDecimalModelValue7.asLong();
        boolean boolean11 = bigDecimalModelValue7.asBoolean(true);
        java.math.BigInteger bigInteger12 = bigDecimalModelValue7.asBigInteger();
        org.jboss.dmr.ValueExpression valueExpression13 = bigDecimalModelValue7.asExpression();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(bigInteger12);
        org.junit.Assert.assertNotNull(valueExpression13);
    }

    @Test
    public void test10752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10752");
        org.jboss.dmr.BooleanModelValue booleanModelValue1 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long2 = booleanModelValue1.asLong();
        int int3 = booleanModelValue1.asInt();
        int int5 = booleanModelValue1.asInt(1);
        double double6 = booleanModelValue1.asDouble();
        long long8 = booleanModelValue1.asLong((long) '4');
        byte[] byteArray9 = booleanModelValue1.asBytes();
        org.jboss.dmr.ModelNode modelNode10 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode13 = modelNode10.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList14 = modelNode13.asList();
        org.jboss.dmr.ModelType modelType15 = modelNode13.getType();
        org.jboss.dmr.TypeModelValue typeModelValue16 = org.jboss.dmr.TypeModelValue.of(modelType15);
        java.lang.String str17 = typeModelValue16.asString();
        java.lang.String str18 = typeModelValue16.asString();
        org.jboss.dmr.ModelNode modelNode19 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode22 = modelNode19.setExpression("hi!", "hi!");
        java.lang.String str23 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode19);
        boolean boolean25 = modelNode19.hasDefined((-1));
        org.jboss.dmr.BooleanModelValue booleanModelValue26 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double27 = booleanModelValue26.asDouble();
        org.jboss.dmr.ModelValue modelValue28 = booleanModelValue26.copy();
        java.math.BigInteger bigInteger29 = booleanModelValue26.asBigInteger();
        org.jboss.dmr.ModelNode modelNode30 = new org.jboss.dmr.ModelNode(bigInteger29);
        org.jboss.dmr.ModelNode modelNode31 = new org.jboss.dmr.ModelNode(bigInteger29);
        org.jboss.dmr.ModelNode modelNode32 = modelNode19.set(bigInteger29);
        org.jboss.dmr.ModelNode modelNode33 = new org.jboss.dmr.ModelNode(bigInteger29);
        org.jboss.dmr.ModelType modelType34 = modelNode33.getType();
        boolean boolean35 = typeModelValue16.equals((java.lang.Object) modelType34);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory37 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream38 = null;
        org.jboss.dmr.Base64.InputStream inputStream40 = new org.jboss.dmr.Base64.InputStream(inputStream38, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream41 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream40);
        org.jboss.dmr.stream.ModelReader modelReader42 = modelStreamFactory37.newModelReader((java.io.InputStream) inputStream41);
        java.io.OutputStream outputStream43 = null;
        org.jboss.dmr.Base64.OutputStream outputStream44 = new org.jboss.dmr.Base64.OutputStream(outputStream43);
        org.jboss.dmr.Base64.OutputStream outputStream45 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream44);
        outputStream44.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter48 = modelStreamFactory37.newModelWriter((java.io.OutputStream) outputStream44);
        org.jboss.dmr.stream.ModelWriter modelWriter49 = modelWriter48.writeListStart();
        org.jboss.dmr.ModelNode modelNode51 = new org.jboss.dmr.ModelNode(true);
        org.jboss.dmr.ModelNode modelNode52 = modelNode51.resolve();
        java.lang.String str53 = modelNode51.asString();
        org.jboss.dmr.ModelNode modelNode55 = modelNode51.set((long) 52);
        org.jboss.dmr.ModelNode modelNode57 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode60 = modelNode57.setExpression("hi!", "hi!");
        java.lang.String str61 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode57);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList62 = modelNode57.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode64 = modelNode57.set((double) 0);
        org.jboss.dmr.ModelType modelType66 = org.jboss.dmr.ModelType.PROPERTY;
        char char67 = modelType66.getTypeChar();
        org.jboss.dmr.ModelNode modelNode68 = modelNode57.set("[(\"hi!\" => 0.0)]", modelType66);
        org.jboss.dmr.Property property69 = new org.jboss.dmr.Property("\"(\\\"hi!\\\" => 0.0)\"", modelNode68);
        org.jboss.dmr.ModelNode modelNode70 = modelNode55.set(property69);
        org.jboss.dmr.ModelNode modelNode72 = modelNode55.set(false);
        boolean boolean73 = modelNode72.isProtected();
        org.jboss.dmr.ModelType modelType75 = org.jboss.dmr.ModelType.PROPERTY;
        char char76 = modelType75.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue77 = org.jboss.dmr.TypeModelValue.of(modelType75);
        char char78 = modelType75.getTypeChar();
        org.jboss.dmr.ModelNode modelNode79 = modelNode72.set("rO0ABXQAByJbOTdMXSI=", modelType75);
        org.jboss.dmr.stream.ModelWriter modelWriter80 = modelWriter49.writeType(modelType75);
        typeModelValue16.write(modelWriter49);
        org.jboss.dmr.stream.ModelWriter modelWriter82 = modelWriter49.writeObjectStart();
        // The following exception was thrown during execution in test generation
        try {
            booleanModelValue1.write(modelWriter49);
            org.junit.Assert.fail("Expected exception of type org.jboss.dmr.stream.ModelException; message: Expecting OBJECT_END or STRING");
        } catch (org.jboss.dmr.stream.ModelException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanModelValue1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1L + "'", long8 == 1L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[1]");
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNodeList14);
        org.junit.Assert.assertTrue("'" + modelType15 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType15.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertNotNull(typeModelValue16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PROPERTY" + "'", str17, "PROPERTY");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PROPERTY" + "'", str18, "PROPERTY");
        org.junit.Assert.assertNotNull(modelNode22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str23, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(booleanModelValue26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue28);
        org.junit.Assert.assertNotNull(bigInteger29);
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertTrue("'" + modelType34 + "' != '" + org.jboss.dmr.ModelType.BIG_INTEGER + "'", modelType34.equals(org.jboss.dmr.ModelType.BIG_INTEGER));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(modelStreamFactory37);
        org.junit.Assert.assertNotNull(modelReader42);
        org.junit.Assert.assertNotNull(modelWriter48);
        org.junit.Assert.assertNotNull(modelWriter49);
        org.junit.Assert.assertNotNull(modelNode52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "true" + "'", str53, "true");
        org.junit.Assert.assertNotNull(modelNode55);
        org.junit.Assert.assertNotNull(modelNode60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str61, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList62);
        org.junit.Assert.assertNotNull(modelNode64);
        org.junit.Assert.assertTrue("'" + modelType66 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType66.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char67 + "' != '" + 'p' + "'", char67 == 'p');
        org.junit.Assert.assertNotNull(modelNode68);
        org.junit.Assert.assertNotNull(modelNode70);
        org.junit.Assert.assertNotNull(modelNode72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + modelType75 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType75.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char76 + "' != '" + 'p' + "'", char76 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue77);
        org.junit.Assert.assertTrue("'" + char78 + "' != '" + 'p' + "'", char78 == 'p');
        org.junit.Assert.assertNotNull(modelNode79);
        org.junit.Assert.assertNotNull(modelWriter80);
        org.junit.Assert.assertNotNull(modelWriter82);
    }

    @Test
    public void test10753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10753");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isBigInteger();
        boolean boolean17 = modelReader15.isLong();
        boolean boolean18 = modelReader15.isBigDecimal();
        boolean boolean19 = modelReader15.isUndefined();
        boolean boolean20 = modelReader15.isUndefined();
        boolean boolean21 = modelReader15.isListStart();
        boolean boolean22 = modelReader15.isListStart();
        boolean boolean23 = modelReader15.isUndefined();
        boolean boolean24 = modelReader15.isString();
        boolean boolean25 = modelReader15.isExpression();
        boolean boolean26 = modelReader15.hasNext();
        boolean boolean27 = modelReader15.isBytes();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test10754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10754");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isBigInteger();
        boolean boolean17 = modelReader15.isLong();
        boolean boolean18 = modelReader15.isBigDecimal();
        boolean boolean19 = modelReader15.isUndefined();
        boolean boolean20 = modelReader15.isUndefined();
        boolean boolean21 = modelReader15.isListStart();
        boolean boolean22 = modelReader15.isListStart();
        boolean boolean23 = modelReader15.isListEnd();
        boolean boolean24 = modelReader15.isUndefined();
        boolean boolean25 = modelReader15.isPropertyEnd();
        boolean boolean26 = modelReader15.isPropertyEnd();
        boolean boolean27 = modelReader15.isInt();
        boolean boolean28 = modelReader15.isBytes();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test10755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10755");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.removeChild("hi!");
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList5 = objectModelValue0.asList();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList6 = objectModelValue0.asList();
        org.jboss.dmr.ModelValue modelValue7 = objectModelValue0.protect();
        org.jboss.dmr.ModelValue modelValue8 = objectModelValue0.resolve();
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNodeList5);
        org.junit.Assert.assertNotNull(modelNodeList6);
        org.junit.Assert.assertNotNull(modelValue7);
        org.junit.Assert.assertNotNull(modelValue8);
    }

    @Test
    public void test10756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10756");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue(10);
        byte[] byteArray2 = intModelValue1.asBytes();
        int int4 = intModelValue1.asInt(0);
        org.jboss.dmr.ModelType modelType5 = intModelValue1.getType();
        int int6 = intModelValue1.asInt();
        long long7 = intModelValue1.asLong();
        org.jboss.dmr.ValueExpression valueExpression8 = intModelValue1.asExpression();
        long long10 = intModelValue1.asLong((long) (short) 0);
        java.lang.Class<?> wildcardClass11 = intModelValue1.getClass();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0, 0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
        org.junit.Assert.assertTrue("'" + modelType5 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType5.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertNotNull(valueExpression8);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10L + "'", long10 == 10L);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test10757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10757");
        org.jboss.dmr.ExpressionValue expressionValue1 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue3 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean4 = expressionValue1.equals(expressionValue3);
        org.jboss.dmr.ExpressionValue expressionValue6 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue8 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean9 = expressionValue6.equals(expressionValue8);
        boolean boolean10 = expressionValue1.equals(expressionValue8);
        org.jboss.dmr.ValueExpression valueExpression11 = expressionValue8.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue13 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ValueExpression valueExpression14 = expressionValue13.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue16 = new org.jboss.dmr.ExpressionValue("hi!");
        java.lang.String str17 = expressionValue16.toString();
        org.jboss.dmr.ModelNode modelNode19 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode22 = modelNode19.set("hi!", 0.0d);
        org.jboss.dmr.Property property23 = new org.jboss.dmr.Property("", modelNode22);
        boolean boolean24 = expressionValue16.equals((java.lang.Object) property23);
        boolean boolean25 = expressionValue13.equals(expressionValue16);
        boolean boolean26 = expressionValue8.equals((java.lang.Object) boolean25);
        org.jboss.dmr.ValueExpression valueExpression27 = expressionValue8.asExpression();
        org.jboss.dmr.ModelNode modelNode28 = new org.jboss.dmr.ModelNode(valueExpression27);
        org.jboss.dmr.ModelNode modelNode31 = modelNode28.set("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3GXAAEGV4cHJlc3Np\nb24gImhpISJiAAAAAQF4", "\"(\\\"\\\" => (\\\"hi!\\\" => 0.0))\"");
        org.jboss.dmr.ModelNode modelNode32 = modelNode31.clone();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(valueExpression11);
        org.junit.Assert.assertNotNull(valueExpression14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "expression \"hi!\"" + "'", str17, "expression \"hi!\"");
        org.junit.Assert.assertNotNull(modelNode22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(valueExpression27);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(modelNode32);
    }

    @Test
    public void test10758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10758");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue(10.0d);
        org.jboss.dmr.ModelValue modelValue2 = doubleModelValue1.protect();
        double double4 = doubleModelValue1.asDouble((double) 0);
        double double6 = doubleModelValue1.asDouble((double) 10.0f);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 10.0d + "'", double4 == 10.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
    }

    @Test
    public void test10759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10759");
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode5 = modelNode2.set("hi!", 0.0d);
        org.jboss.dmr.Property property6 = new org.jboss.dmr.Property("", modelNode5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode8 = modelNode5.get(strArray7);
        org.jboss.dmr.ModelNode modelNode9 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode12 = modelNode9.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList13 = modelNode12.asList();
        org.jboss.dmr.ListModelValue listModelValue14 = new org.jboss.dmr.ListModelValue(modelNodeList13);
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue14);
        org.jboss.dmr.ModelValue modelValue16 = listModelValue14.resolve();
        int int18 = listModelValue14.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList19 = listModelValue14.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList20 = modelNode8.asPropertyList(propertyList19);
        org.jboss.dmr.ModelNode modelNode22 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode25 = modelNode22.set("hi!", 0.0d);
        org.jboss.dmr.Property property26 = new org.jboss.dmr.Property("", modelNode25);
        java.lang.String[] strArray27 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode28 = modelNode25.get(strArray27);
        org.jboss.dmr.ModelNode modelNode29 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode32 = modelNode29.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList33 = modelNode32.asList();
        org.jboss.dmr.ListModelValue listModelValue34 = new org.jboss.dmr.ListModelValue(modelNodeList33);
        org.jboss.dmr.ModelNode modelNode35 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue34);
        org.jboss.dmr.ModelValue modelValue36 = listModelValue34.resolve();
        int int38 = listModelValue34.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList39 = listModelValue34.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList40 = modelNode28.asPropertyList(propertyList39);
        modelNode8.setNoCopy(modelNode28);
        org.jboss.dmr.ModelNode modelNode43 = modelNode28.set((long) 100);
        org.jboss.dmr.ModelType modelType44 = modelNode43.getType();
        boolean boolean46 = modelNode43.has("[97L]");
        org.jboss.dmr.PropertyModelValue propertyModelValue47 = new org.jboss.dmr.PropertyModelValue("Expression \"hi!\"", modelNode43);
        java.util.Set<java.lang.String> strSet48 = propertyModelValue47.getKeys();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList49 = propertyModelValue47.asList();
        org.jboss.dmr.IntModelValue intModelValue51 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str52 = intModelValue51.asString();
        double double54 = intModelValue51.asDouble((double) 2);
        java.math.BigInteger bigInteger55 = intModelValue51.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue56 = new org.jboss.dmr.BigIntegerModelValue(bigInteger55);
        int int57 = bigIntegerModelValue56.asInt();
        boolean boolean58 = propertyModelValue47.equals((java.lang.Object) bigIntegerModelValue56);
        org.jboss.dmr.BooleanModelValue booleanModelValue59 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double60 = booleanModelValue59.asDouble();
        org.jboss.dmr.ModelValue modelValue61 = booleanModelValue59.copy();
        java.math.BigInteger bigInteger62 = booleanModelValue59.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue63 = new org.jboss.dmr.BigIntegerModelValue(bigInteger62);
        double double65 = bigIntegerModelValue63.asDouble((double) 'b');
        int int66 = bigIntegerModelValue63.asInt();
        org.jboss.dmr.ValueExpression valueExpression67 = bigIntegerModelValue63.asExpression();
        boolean boolean68 = bigIntegerModelValue56.equals(bigIntegerModelValue63);
        int int69 = bigIntegerModelValue63.asInt();
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNodeList13);
        org.junit.Assert.assertNotNull(modelValue16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(propertyList19);
        org.junit.Assert.assertNotNull(propertyList20);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(modelNode28);
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertNotNull(modelNodeList33);
        org.junit.Assert.assertNotNull(modelValue36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(propertyList39);
        org.junit.Assert.assertNotNull(propertyList40);
        org.junit.Assert.assertNotNull(modelNode43);
        org.junit.Assert.assertTrue("'" + modelType44 + "' != '" + org.jboss.dmr.ModelType.LONG + "'", modelType44.equals(org.jboss.dmr.ModelType.LONG));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNotNull(modelNodeList49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "32" + "'", str52, "32");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 32.0d + "'", double54 == 32.0d);
        org.junit.Assert.assertNotNull(bigInteger55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 32 + "'", int57 == 32);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(booleanModelValue59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue61);
        org.junit.Assert.assertNotNull(bigInteger62);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(valueExpression67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
    }

    @Test
    public void test10760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10760");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        java.lang.String str5 = bigIntegerModelValue4.asString();
        long long7 = bigIntegerModelValue4.asLong(32L);
        double double8 = bigIntegerModelValue4.asDouble();
        org.jboss.dmr.BooleanModelValue booleanModelValue9 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double10 = booleanModelValue9.asDouble();
        org.jboss.dmr.ModelValue modelValue11 = booleanModelValue9.copy();
        java.math.BigInteger bigInteger12 = booleanModelValue9.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue13 = new org.jboss.dmr.BigIntegerModelValue(bigInteger12);
        double double15 = bigIntegerModelValue13.asDouble((double) 'b');
        boolean boolean16 = bigIntegerModelValue4.equals(bigIntegerModelValue13);
        long long17 = bigIntegerModelValue4.asLong();
        int int18 = bigIntegerModelValue4.asInt();
        org.jboss.dmr.DoubleModelValue doubleModelValue20 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long21 = doubleModelValue20.asLong();
        boolean boolean23 = doubleModelValue20.asBoolean(true);
        byte[] byteArray24 = doubleModelValue20.asBytes();
        byte[] byteArray25 = doubleModelValue20.asBytes();
        boolean boolean26 = bigIntegerModelValue4.equals((java.lang.Object) byteArray25);
        org.jboss.dmr.BytesModelValue bytesModelValue27 = new org.jboss.dmr.BytesModelValue(byteArray25);
        org.jboss.dmr.LongModelValue longModelValue29 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str30 = longModelValue29.asString();
        double double32 = longModelValue29.asDouble((double) 32L);
        org.jboss.dmr.ValueExpression valueExpression33 = longModelValue29.asExpression();
        org.jboss.dmr.LongModelValue longModelValue35 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str36 = longModelValue35.asString();
        byte[] byteArray37 = longModelValue35.asBytes();
        org.jboss.dmr.ModelNode modelNode39 = new org.jboss.dmr.ModelNode(false);
        int int41 = modelNode39.asInt(2);
        org.jboss.dmr.ModelNode modelNode43 = modelNode39.set(52);
        boolean boolean44 = longModelValue35.equals((java.lang.Object) modelNode39);
        boolean boolean45 = longModelValue29.equals(longModelValue35);
        boolean boolean46 = bytesModelValue27.equals((java.lang.Object) longModelValue29);
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1" + "'", str5, "1");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(booleanModelValue9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue11);
        org.junit.Assert.assertNotNull(bigInteger12);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10L + "'", long21 == 10L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1" + "'", str30, "1");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(valueExpression33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1" + "'", str36, "1");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(modelNode43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test10761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10761");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isBigInteger();
        boolean boolean17 = modelReader15.isLong();
        boolean boolean18 = modelReader15.isBigDecimal();
        boolean boolean19 = modelReader15.isUndefined();
        boolean boolean20 = modelReader15.isUndefined();
        boolean boolean21 = modelReader15.isObjectStart();
        boolean boolean22 = modelReader15.isObjectEnd();
        boolean boolean23 = modelReader15.isBytes();
        boolean boolean24 = modelReader15.isDouble();
        boolean boolean25 = modelReader15.isBigInteger();
        boolean boolean26 = modelReader15.isObjectEnd();
        boolean boolean27 = modelReader15.isBoolean();
        boolean boolean28 = modelReader15.isExpression();
        boolean boolean29 = modelReader15.isDouble();
        boolean boolean30 = modelReader15.isObjectStart();
        // The following exception was thrown during execution in test generation
        try {
            double double31 = modelReader15.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Current event isn't double");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test10762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10762");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        java.io.InputStream inputStream16 = null;
        org.jboss.dmr.Base64.InputStream inputStream18 = new org.jboss.dmr.Base64.InputStream(inputStream16, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream19 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream18);
        org.jboss.dmr.Base64.InputStream inputStream20 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream19);
        org.jboss.dmr.stream.ModelReader modelReader21 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream20);
        // The following exception was thrown during execution in test generation
        try {
            inputStream20.reset();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertNotNull(modelReader21);
    }

    @Test
    public void test10763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10763");
        org.jboss.dmr.BooleanModelValue booleanModelValue1 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger2 = booleanModelValue1.asBigInteger();
        int int3 = booleanModelValue1.asInt();
        java.io.DataOutput dataOutput4 = null;
        // The following exception was thrown during execution in test generation
        try {
            booleanModelValue1.writeExternal(dataOutput4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanModelValue1);
        org.junit.Assert.assertNotNull(bigInteger2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    }

    @Test
    public void test10764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10764");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(modelType0);
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode6 = modelNode3.set("hi!", 0.0d);
        org.jboss.dmr.Property property7 = new org.jboss.dmr.Property("", modelNode6);
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(property7);
        org.jboss.dmr.ModelNode modelNode9 = property7.getValue();
        org.jboss.dmr.PropertyModelValue propertyModelValue10 = new org.jboss.dmr.PropertyModelValue(property7);
        org.jboss.dmr.BooleanModelValue booleanModelValue12 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray13 = booleanModelValue12.asBytes();
        boolean boolean14 = propertyModelValue10.equals((java.lang.Object) byteArray13);
        org.jboss.dmr.ModelNode modelNode16 = propertyModelValue10.getChild((int) (short) 0);
        java.io.OutputStream outputStream17 = null;
        org.jboss.dmr.Base64.OutputStream outputStream18 = new org.jboss.dmr.Base64.OutputStream(outputStream17);
        org.jboss.dmr.Base64.OutputStream outputStream19 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream18);
        org.jboss.dmr.Base64.OutputStream outputStream20 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream19);
        outputStream20.flushBase64();
        // The following exception was thrown during execution in test generation
        try {
            modelNode16.writeExternal((java.io.OutputStream) outputStream20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType0.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(booleanModelValue12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[1]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(modelNode16);
    }

    @Test
    public void test10765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10765");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue5);
        org.jboss.dmr.ModelValue modelValue7 = listModelValue5.resolve();
        int int9 = listModelValue5.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList10 = listModelValue5.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList11 = listModelValue5.asPropertyList();
        org.jboss.dmr.ModelNode modelNode13 = listModelValue5.getChild((int) (short) 0);
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode18 = modelNode15.set("hi!", 0.0d);
        java.lang.String str19 = modelNode15.toString();
        org.jboss.dmr.ModelNode modelNode20 = modelNode15.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode22 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode25 = modelNode22.set("hi!", 0.0d);
        org.jboss.dmr.Property property26 = new org.jboss.dmr.Property("", modelNode25);
        org.jboss.dmr.ModelNode modelNode27 = modelNode15.set(property26);
        org.jboss.dmr.PropertyModelValue propertyModelValue29 = new org.jboss.dmr.PropertyModelValue("EXPRESSION_VALUE", modelNode27, false);
        org.jboss.dmr.Property property30 = propertyModelValue29.asProperty();
        boolean boolean31 = listModelValue5.equals((java.lang.Object) propertyModelValue29);
        org.jboss.dmr.ModelType modelType32 = org.jboss.dmr.ModelType.PROPERTY;
        char char33 = modelType32.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue34 = org.jboss.dmr.TypeModelValue.of(modelType32);
        org.jboss.dmr.ModelType modelType35 = org.jboss.dmr.ModelType.PROPERTY;
        char char36 = modelType35.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue37 = org.jboss.dmr.TypeModelValue.of(modelType35);
        boolean boolean38 = typeModelValue34.equals(typeModelValue37);
        java.lang.String str39 = typeModelValue37.asString();
        org.jboss.dmr.ModelNode modelNode40 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode43 = modelNode40.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList44 = modelNode43.asList();
        org.jboss.dmr.ListModelValue listModelValue45 = new org.jboss.dmr.ListModelValue(modelNodeList44);
        org.jboss.dmr.ModelNode modelNode46 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue45);
        org.jboss.dmr.ModelValue modelValue47 = listModelValue45.resolve();
        int int49 = listModelValue45.asInt((int) (byte) 100);
        boolean boolean50 = listModelValue45.asBoolean();
        org.jboss.dmr.ModelNode[] modelNodeArray51 = org.jboss.dmr.ListModelValue.NO_NODES;
        boolean boolean52 = listModelValue45.equals((java.lang.Object) modelNodeArray51);
        boolean boolean53 = typeModelValue37.equals((java.lang.Object) listModelValue45);
        org.jboss.dmr.ModelValue modelValue54 = listModelValue45.resolve();
        org.jboss.dmr.ModelValue modelValue55 = listModelValue45.protect();
        java.lang.Throwable throwable57 = null;
        org.jboss.dmr.stream.ModelException modelException58 = new org.jboss.dmr.stream.ModelException("[(\"hi!\" => 0.0)]", throwable57);
        org.jboss.dmr.stream.ModelException modelException59 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException58);
        java.lang.Throwable throwable61 = null;
        org.jboss.dmr.stream.ModelException modelException62 = new org.jboss.dmr.stream.ModelException("[(\"hi!\" => 0.0)]", throwable61);
        org.jboss.dmr.stream.ModelException modelException63 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException62);
        modelException58.addSuppressed((java.lang.Throwable) modelException62);
        boolean boolean65 = listModelValue45.equals((java.lang.Object) modelException58);
        boolean boolean66 = listModelValue5.equals(listModelValue45);
        org.jboss.dmr.LongModelValue longModelValue68 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str69 = longModelValue68.asString();
        byte[] byteArray70 = longModelValue68.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue71 = new org.jboss.dmr.BytesModelValue(byteArray70);
        java.lang.String str72 = bytesModelValue71.asString();
        int int73 = bytesModelValue71.asInt();
        long long75 = bytesModelValue71.asLong((long) (short) 1);
        long long76 = bytesModelValue71.asLong();
        byte[] byteArray77 = bytesModelValue71.asBytes();
        double double78 = bytesModelValue71.asDouble();
        java.math.BigDecimal bigDecimal79 = bytesModelValue71.asBigDecimal();
        boolean boolean80 = listModelValue5.equals((java.lang.Object) bytesModelValue71);
        org.jboss.dmr.ModelNode modelNode81 = listModelValue5.asObject();
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertNotNull(modelValue7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(propertyList10);
        org.junit.Assert.assertNotNull(propertyList11);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(\"hi!\" => 0.0)" + "'", str19, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertNotNull(property30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + modelType32 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType32.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char33 + "' != '" + 'p' + "'", char33 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue34);
        org.junit.Assert.assertTrue("'" + modelType35 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType35.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char36 + "' != '" + 'p' + "'", char36 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "PROPERTY" + "'", str39, "PROPERTY");
        org.junit.Assert.assertNotNull(modelNode43);
        org.junit.Assert.assertNotNull(modelNodeList44);
        org.junit.Assert.assertNotNull(modelValue47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(modelNodeArray51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(modelValue54);
        org.junit.Assert.assertNotNull(modelValue55);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "1" + "'", str69, "1");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str72, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 1L + "'", long75 == 1L);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 1L + "'", long76 == 1L);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 4.9E-324d + "'", double78 == 4.9E-324d);
        org.junit.Assert.assertNotNull(bigDecimal79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(modelNode81);
    }

    @Test
    public void test10766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10766");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isBigInteger();
        boolean boolean17 = modelReader15.isLong();
        boolean boolean18 = modelReader15.isBigDecimal();
        boolean boolean19 = modelReader15.isUndefined();
        boolean boolean20 = modelReader15.isUndefined();
        boolean boolean21 = modelReader15.isObjectStart();
        boolean boolean22 = modelReader15.isObjectEnd();
        boolean boolean23 = modelReader15.isListEnd();
        boolean boolean24 = modelReader15.isPropertyStart();
        boolean boolean25 = modelReader15.isObjectEnd();
        boolean boolean26 = modelReader15.isExpression();
        boolean boolean27 = modelReader15.isObjectEnd();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test10767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10767");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ModelType modelType5 = modelNode3.getType();
        org.jboss.dmr.TypeModelValue typeModelValue6 = org.jboss.dmr.TypeModelValue.of(modelType5);
        boolean boolean8 = typeModelValue6.asBoolean(false);
        java.lang.String str9 = typeModelValue6.asString();
        boolean boolean10 = typeModelValue6.asBoolean();
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertTrue("'" + modelType5 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType5.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertNotNull(typeModelValue6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PROPERTY" + "'", str9, "PROPERTY");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test10768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10768");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(modelType0);
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode6 = modelNode3.set("hi!", 0.0d);
        org.jboss.dmr.Property property7 = new org.jboss.dmr.Property("", modelNode6);
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(property7);
        java.lang.String str9 = property7.getName();
        org.jboss.dmr.Property property10 = property7.clone();
        org.jboss.dmr.PropertyModelValue propertyModelValue11 = new org.jboss.dmr.PropertyModelValue(property10);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = propertyModelValue11.asList();
        org.jboss.dmr.ListModelValue listModelValue13 = new org.jboss.dmr.ListModelValue(modelNodeList12);
        long long15 = listModelValue13.asLong((long) (short) 100);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory17 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream18 = null;
        org.jboss.dmr.Base64.InputStream inputStream20 = new org.jboss.dmr.Base64.InputStream(inputStream18, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream21 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream20);
        org.jboss.dmr.stream.ModelReader modelReader22 = modelStreamFactory17.newModelReader((java.io.InputStream) inputStream21);
        java.io.OutputStream outputStream23 = null;
        org.jboss.dmr.Base64.OutputStream outputStream24 = new org.jboss.dmr.Base64.OutputStream(outputStream23);
        org.jboss.dmr.Base64.OutputStream outputStream25 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream24);
        outputStream24.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter28 = modelStreamFactory17.newModelWriter((java.io.OutputStream) outputStream24);
        org.jboss.dmr.stream.ModelWriter modelWriter29 = modelWriter28.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter31 = modelWriter28.writeInt((int) '4');
        org.jboss.dmr.stream.ModelWriter modelWriter33 = modelWriter31.writeBoolean(true);
        org.jboss.dmr.stream.ModelWriter modelWriter35 = modelWriter31.writeBoolean(true);
        listModelValue13.write(modelWriter35);
        boolean boolean37 = listModelValue13.asBoolean();
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType0.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(modelNodeList12);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertNotNull(modelStreamFactory17);
        org.junit.Assert.assertNotNull(modelReader22);
        org.junit.Assert.assertNotNull(modelWriter28);
        org.junit.Assert.assertNotNull(modelWriter29);
        org.junit.Assert.assertNotNull(modelWriter31);
        org.junit.Assert.assertNotNull(modelWriter33);
        org.junit.Assert.assertNotNull(modelWriter35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test10769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10769");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        org.jboss.dmr.Property property5 = new org.jboss.dmr.Property("", modelNode4);
        java.lang.String[] strArray6 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode7 = modelNode4.get(strArray6);
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = modelNode11.asList();
        org.jboss.dmr.ListModelValue listModelValue13 = new org.jboss.dmr.ListModelValue(modelNodeList12);
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue13);
        org.jboss.dmr.ModelValue modelValue15 = listModelValue13.resolve();
        int int17 = listModelValue13.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList18 = listModelValue13.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList19 = modelNode7.asPropertyList(propertyList18);
        org.jboss.dmr.ModelNode modelNode22 = modelNode7.setExpression("\"(\\\"hi!\\\" => 0.0)\"", "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.jboss.dmr.ModelNode modelNode25 = modelNode7.set("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AloAeA==", (double) 0.0f);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean27 = modelNode25.asBoolean(true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNodeList12);
        org.junit.Assert.assertNotNull(modelValue15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(propertyList18);
        org.junit.Assert.assertNotNull(propertyList19);
        org.junit.Assert.assertNotNull(modelNode22);
        org.junit.Assert.assertNotNull(modelNode25);
    }

    @Test
    public void test10770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10770");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        boolean boolean5 = objectModelValue0.asBoolean();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.Property property6 = objectModelValue0.asProperty();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(modelNode4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test10771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10771");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        org.jboss.dmr.Property property5 = new org.jboss.dmr.Property("", modelNode4);
        java.lang.String[] strArray6 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode7 = modelNode4.get(strArray6);
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = modelNode11.asList();
        org.jboss.dmr.ListModelValue listModelValue13 = new org.jboss.dmr.ListModelValue(modelNodeList12);
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue13);
        org.jboss.dmr.ModelValue modelValue15 = listModelValue13.resolve();
        int int17 = listModelValue13.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList18 = listModelValue13.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList19 = modelNode7.asPropertyList(propertyList18);
        org.jboss.dmr.ModelNode modelNode21 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode24 = modelNode21.set("hi!", 0.0d);
        org.jboss.dmr.Property property25 = new org.jboss.dmr.Property("", modelNode24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode27 = modelNode24.get(strArray26);
        org.jboss.dmr.ModelNode modelNode28 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode31 = modelNode28.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList32 = modelNode31.asList();
        org.jboss.dmr.ListModelValue listModelValue33 = new org.jboss.dmr.ListModelValue(modelNodeList32);
        org.jboss.dmr.ModelNode modelNode34 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue33);
        org.jboss.dmr.ModelValue modelValue35 = listModelValue33.resolve();
        int int37 = listModelValue33.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList38 = listModelValue33.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList39 = modelNode27.asPropertyList(propertyList38);
        modelNode7.setNoCopy(modelNode27);
        org.jboss.dmr.ModelNode modelNode41 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode44 = modelNode41.set("hi!", 0.0d);
        org.jboss.dmr.ModelNode modelNode45 = new org.jboss.dmr.ModelNode();
        java.lang.Long long46 = modelNode45.asLongOrNull();
        org.jboss.dmr.ModelNode[] modelNodeArray47 = new org.jboss.dmr.ModelNode[] { modelNode41, modelNode45 };
        java.util.ArrayList<org.jboss.dmr.ModelNode> modelNodeList48 = new java.util.ArrayList<org.jboss.dmr.ModelNode>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList48, modelNodeArray47);
        org.jboss.dmr.ModelNode modelNode50 = modelNode7.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList48);
        org.jboss.dmr.ModelNode modelNode53 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long54 = modelNode53.asLong();
        org.jboss.dmr.ValueExpression valueExpression55 = modelNode53.asExpression();
        java.math.BigDecimal bigDecimal56 = valueExpression55.resolveBigDecimal();
        org.jboss.dmr.ModelNode modelNode57 = modelNode7.set("true", bigDecimal56);
        org.jboss.dmr.ModelNode modelNode59 = modelNode57.set(false);
        org.jboss.dmr.ModelType modelType60 = modelNode57.getType();
        char char61 = modelType60.getTypeChar();
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNodeList12);
        org.junit.Assert.assertNotNull(modelValue15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(propertyList18);
        org.junit.Assert.assertNotNull(propertyList19);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(modelNodeList32);
        org.junit.Assert.assertNotNull(modelValue35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(propertyList38);
        org.junit.Assert.assertNotNull(propertyList39);
        org.junit.Assert.assertNotNull(modelNode44);
        org.junit.Assert.assertNull(long46);
        org.junit.Assert.assertNotNull(modelNodeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(modelNode50);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertNotNull(valueExpression55);
        org.junit.Assert.assertNotNull(bigDecimal56);
        org.junit.Assert.assertNotNull(modelNode57);
        org.junit.Assert.assertNotNull(modelNode59);
        org.junit.Assert.assertTrue("'" + modelType60 + "' != '" + org.jboss.dmr.ModelType.BOOLEAN + "'", modelType60.equals(org.jboss.dmr.ModelType.BOOLEAN));
        org.junit.Assert.assertTrue("'" + char61 + "' != '" + 'Z' + "'", char61 == 'Z');
    }

    @Test
    public void test10772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10772");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isBigInteger();
        boolean boolean17 = modelReader15.isString();
        boolean boolean18 = modelReader15.isObjectEnd();
        boolean boolean19 = modelReader15.isBigInteger();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test10773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10773");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        java.lang.String str5 = bigIntegerModelValue4.asString();
        long long7 = bigIntegerModelValue4.asLong(32L);
        double double8 = bigIntegerModelValue4.asDouble();
        long long10 = bigIntegerModelValue4.asLong((long) '4');
        int int12 = bigIntegerModelValue4.asInt(1);
        boolean boolean13 = bigIntegerModelValue4.asBoolean();
        java.math.BigDecimal bigDecimal14 = bigIntegerModelValue4.asBigDecimal();
        org.jboss.dmr.ValueExpression valueExpression15 = bigIntegerModelValue4.asExpression();
        java.lang.String str16 = bigIntegerModelValue4.asString();
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1" + "'", str5, "1");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(bigDecimal14);
        org.junit.Assert.assertNotNull(valueExpression15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1" + "'", str16, "1");
    }

    @Test
    public void test10774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10774");
        org.jboss.dmr.ExpressionValue expressionValue1 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue3 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean4 = expressionValue1.equals(expressionValue3);
        org.jboss.dmr.ExpressionValue expressionValue6 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue8 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean9 = expressionValue6.equals(expressionValue8);
        boolean boolean10 = expressionValue1.equals(expressionValue8);
        org.jboss.dmr.ValueExpression valueExpression11 = expressionValue8.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue13 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ValueExpression valueExpression14 = expressionValue13.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue16 = new org.jboss.dmr.ExpressionValue("hi!");
        java.lang.String str17 = expressionValue16.toString();
        org.jboss.dmr.ModelNode modelNode19 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode22 = modelNode19.set("hi!", 0.0d);
        org.jboss.dmr.Property property23 = new org.jboss.dmr.Property("", modelNode22);
        boolean boolean24 = expressionValue16.equals((java.lang.Object) property23);
        boolean boolean25 = expressionValue13.equals(expressionValue16);
        boolean boolean26 = expressionValue8.equals((java.lang.Object) boolean25);
        org.jboss.dmr.ValueExpression valueExpression27 = expressionValue8.asExpression();
        org.jboss.dmr.ModelNode modelNode28 = new org.jboss.dmr.ModelNode(valueExpression27);
        org.jboss.dmr.ModelNode modelNode31 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode34 = modelNode31.set("hi!", 0.0d);
        org.jboss.dmr.Property property35 = new org.jboss.dmr.Property("", modelNode34);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode37 = modelNode34.get(strArray36);
        org.jboss.dmr.ModelNode modelNode39 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int40 = modelNode39.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode41 = modelNode39.clone();
        org.jboss.dmr.ModelNode modelNode42 = modelNode37.setNoCopy("35", modelNode41);
        org.jboss.dmr.ModelType modelType43 = modelNode41.getType();
        org.jboss.dmr.ModelNode modelNode44 = modelNode28.set("TYPE_MODEL_VALUE", modelType43);
        org.jboss.dmr.TypeModelValue typeModelValue45 = org.jboss.dmr.TypeModelValue.of(modelType43);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory47 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream48 = null;
        org.jboss.dmr.Base64.InputStream inputStream50 = new org.jboss.dmr.Base64.InputStream(inputStream48, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream51 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream50);
        org.jboss.dmr.stream.ModelReader modelReader52 = modelStreamFactory47.newModelReader((java.io.InputStream) inputStream51);
        java.io.OutputStream outputStream53 = null;
        org.jboss.dmr.Base64.OutputStream outputStream54 = new org.jboss.dmr.Base64.OutputStream(outputStream53);
        org.jboss.dmr.Base64.OutputStream outputStream55 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream54);
        outputStream54.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter58 = modelStreamFactory47.newModelWriter((java.io.OutputStream) outputStream54);
        org.jboss.dmr.stream.ModelWriter modelWriter59 = modelWriter58.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter61 = modelWriter58.writeInt((int) '4');
        org.jboss.dmr.stream.ModelWriter modelWriter63 = modelWriter61.writeBoolean(true);
        org.jboss.dmr.stream.ModelWriter modelWriter65 = modelWriter61.writeBoolean(true);
        org.jboss.dmr.stream.ModelWriter modelWriter67 = modelWriter65.writeLong((long) 0);
        org.jboss.dmr.stream.ModelWriter modelWriter69 = modelWriter67.writeString("(\"\\\"bytes {\\\\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01\\\\n}\\\"\" => INT)");
        org.jboss.dmr.stream.ModelWriter modelWriter71 = modelWriter69.writeExpression("H4sIAAAAAAAAAFvzloG1uIhBPL8oXS8rKb+4WC8lt0jPNz8lNccPSMjoLnSZu7jPnoeBoaKgnLG0\nAgDPxTfOMAAAAA==");
        typeModelValue45.write(modelWriter71);
        org.jboss.dmr.ValueExpression valueExpression73 = typeModelValue45.asExpression();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(valueExpression11);
        org.junit.Assert.assertNotNull(valueExpression14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "expression \"hi!\"" + "'", str17, "expression \"hi!\"");
        org.junit.Assert.assertNotNull(modelNode22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(valueExpression27);
        org.junit.Assert.assertNotNull(modelNode34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(modelNode37);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(modelNode41);
        org.junit.Assert.assertNotNull(modelNode42);
        org.junit.Assert.assertTrue("'" + modelType43 + "' != '" + org.jboss.dmr.ModelType.UNDEFINED + "'", modelType43.equals(org.jboss.dmr.ModelType.UNDEFINED));
        org.junit.Assert.assertNotNull(modelNode44);
        org.junit.Assert.assertNotNull(typeModelValue45);
        org.junit.Assert.assertNotNull(modelStreamFactory47);
        org.junit.Assert.assertNotNull(modelReader52);
        org.junit.Assert.assertNotNull(modelWriter58);
        org.junit.Assert.assertNotNull(modelWriter59);
        org.junit.Assert.assertNotNull(modelWriter61);
        org.junit.Assert.assertNotNull(modelWriter63);
        org.junit.Assert.assertNotNull(modelWriter65);
        org.junit.Assert.assertNotNull(modelWriter67);
        org.junit.Assert.assertNotNull(modelWriter69);
        org.junit.Assert.assertNotNull(modelWriter71);
        org.junit.Assert.assertNotNull(valueExpression73);
    }

    @Test
    public void test10775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10775");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str2 = intModelValue1.asString();
        org.jboss.dmr.LongModelValue longModelValue4 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str5 = longModelValue4.asString();
        double double7 = longModelValue4.asDouble((double) 32L);
        int int9 = longModelValue4.asInt((int) (short) 10);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory11 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream12 = null;
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream(inputStream12, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream15 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream14);
        org.jboss.dmr.stream.ModelReader modelReader16 = modelStreamFactory11.newModelReader((java.io.InputStream) inputStream15);
        java.io.OutputStream outputStream17 = null;
        org.jboss.dmr.Base64.OutputStream outputStream18 = new org.jboss.dmr.Base64.OutputStream(outputStream17);
        org.jboss.dmr.Base64.OutputStream outputStream19 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream18);
        outputStream18.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter22 = modelStreamFactory11.newModelWriter((java.io.OutputStream) outputStream18);
        org.jboss.dmr.stream.ModelWriter modelWriter23 = modelWriter22.writeListStart();
        longModelValue4.write(modelWriter22);
        org.jboss.dmr.stream.ModelWriter modelWriter26 = modelWriter22.writeBoolean(false);
        intModelValue1.write(modelWriter26);
        double double28 = intModelValue1.asDouble();
        org.jboss.dmr.IntModelValue intModelValue30 = new org.jboss.dmr.IntModelValue((int) 'p');
        java.math.BigDecimal bigDecimal31 = intModelValue30.asBigDecimal();
        boolean boolean32 = intModelValue30.asBoolean();
        boolean boolean33 = intModelValue1.equals(intModelValue30);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "32" + "'", str2, "32");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1" + "'", str5, "1");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(modelStreamFactory11);
        org.junit.Assert.assertNotNull(modelReader16);
        org.junit.Assert.assertNotNull(modelWriter22);
        org.junit.Assert.assertNotNull(modelWriter23);
        org.junit.Assert.assertNotNull(modelWriter26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 32.0d + "'", double28 == 32.0d);
        org.junit.Assert.assertNotNull(bigDecimal31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test10776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10776");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode("(\"EXPRESSION_VALUE\" => (\"\" => (\"hi!\" => 0.0)))");
        org.jboss.dmr.LongModelValue longModelValue3 = new org.jboss.dmr.LongModelValue((-1L));
        long long5 = longModelValue3.asLong((long) (byte) -1);
        int int7 = longModelValue3.asInt(0);
        org.jboss.dmr.ValueExpression valueExpression8 = longModelValue3.asExpression();
        org.jboss.dmr.ValueExpression valueExpression9 = longModelValue3.asExpression();
        org.jboss.dmr.ModelNode modelNode10 = modelNode1.set(valueExpression9);
        org.jboss.dmr.ModelNode modelNode12 = modelNode1.set((long) 32);
        boolean boolean14 = modelNode12.hasDefined((int) 'I');
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(valueExpression8);
        org.junit.Assert.assertNotNull(valueExpression9);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test10777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10777");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory17 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream18 = null;
        org.jboss.dmr.Base64.InputStream inputStream20 = new org.jboss.dmr.Base64.InputStream(inputStream18, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream21 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream20);
        org.jboss.dmr.stream.ModelReader modelReader22 = modelStreamFactory17.newModelReader((java.io.InputStream) inputStream21);
        java.io.OutputStream outputStream23 = null;
        org.jboss.dmr.Base64.OutputStream outputStream24 = new org.jboss.dmr.Base64.OutputStream(outputStream23);
        org.jboss.dmr.Base64.OutputStream outputStream25 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream24);
        outputStream24.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter28 = modelStreamFactory17.newModelWriter((java.io.OutputStream) outputStream24);
        java.io.OutputStream outputStream29 = null;
        org.jboss.dmr.Base64.OutputStream outputStream30 = new org.jboss.dmr.Base64.OutputStream(outputStream29);
        outputStream30.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream32 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream30);
        org.jboss.dmr.Base64.OutputStream outputStream34 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream32, (int) (byte) -1);
        org.jboss.dmr.Base64.OutputStream outputStream35 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream34);
        outputStream35.resumeEncoding();
        outputStream35.flushBase64();
        org.jboss.dmr.stream.ModelWriter modelWriter38 = modelStreamFactory17.newModelWriter((java.io.OutputStream) outputStream35);
        java.io.InputStream inputStream39 = null;
        org.jboss.dmr.Base64.InputStream inputStream41 = new org.jboss.dmr.Base64.InputStream(inputStream39, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue43 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str44 = longModelValue43.asString();
        byte[] byteArray45 = longModelValue43.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue46 = new org.jboss.dmr.BytesModelValue(byteArray45);
        int int49 = inputStream41.read(byteArray45, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream51 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream41, (-1));
        org.jboss.dmr.Base64.InputStream inputStream53 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream41, (int) 'p');
        org.jboss.dmr.stream.ModelReader modelReader54 = modelStreamFactory17.newModelReader((java.io.InputStream) inputStream41);
        org.jboss.dmr.Base64.InputStream inputStream56 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream41, 10);
        org.jboss.dmr.stream.ModelReader modelReader57 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream41);
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertNotNull(modelStreamFactory17);
        org.junit.Assert.assertNotNull(modelReader22);
        org.junit.Assert.assertNotNull(modelWriter28);
        org.junit.Assert.assertNotNull(modelWriter38);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1" + "'", str44, "1");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(modelReader54);
        org.junit.Assert.assertNotNull(modelReader57);
    }

    @Test
    public void test10778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10778");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(true);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.Base64.InputStream inputStream16 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (int) 'p');
        org.jboss.dmr.Base64.InputStream inputStream17 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream16);
        org.jboss.dmr.stream.ModelReader modelReader18 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream16);
        java.io.Reader reader19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.stream.ModelReader modelReader20 = modelStreamFactory1.newModelReader(reader19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Parameter cannot be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader18);
    }

    @Test
    public void test10779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10779");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.PROPERTY;
        char char1 = modelType0.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue2 = org.jboss.dmr.TypeModelValue.of(modelType0);
        boolean boolean3 = typeModelValue2.asBoolean();
        boolean boolean5 = typeModelValue2.asBoolean(true);
        org.jboss.dmr.IntModelValue intModelValue7 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long9 = intModelValue7.asLong((long) '#');
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory11 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream12 = null;
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream(inputStream12, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue16 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str17 = longModelValue16.asString();
        byte[] byteArray18 = longModelValue16.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue19 = new org.jboss.dmr.BytesModelValue(byteArray18);
        int int22 = inputStream14.read(byteArray18, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream24 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream14, (-1));
        org.jboss.dmr.stream.ModelReader modelReader25 = modelStreamFactory11.newModelReader((java.io.InputStream) inputStream24);
        java.io.InputStream inputStream26 = null;
        org.jboss.dmr.Base64.InputStream inputStream28 = new org.jboss.dmr.Base64.InputStream(inputStream26, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream29 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream28);
        org.jboss.dmr.Base64.InputStream inputStream30 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream28);
        org.jboss.dmr.stream.ModelReader modelReader31 = modelStreamFactory11.newModelReader((java.io.InputStream) inputStream28);
        java.io.InputStream inputStream32 = null;
        org.jboss.dmr.Base64.InputStream inputStream34 = new org.jboss.dmr.Base64.InputStream(inputStream32, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream35 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream34);
        org.jboss.dmr.stream.ModelReader modelReader36 = modelStreamFactory11.newModelReader((java.io.InputStream) inputStream34);
        java.io.OutputStream outputStream37 = null;
        org.jboss.dmr.Base64.OutputStream outputStream38 = new org.jboss.dmr.Base64.OutputStream(outputStream37);
        outputStream38.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream40 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream38);
        org.jboss.dmr.Base64.OutputStream outputStream41 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream40);
        outputStream40.flushBase64();
        org.jboss.dmr.Base64.OutputStream outputStream43 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream40);
        org.jboss.dmr.Base64.OutputStream outputStream44 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream40);
        org.jboss.dmr.stream.ModelWriter modelWriter45 = modelStreamFactory11.newModelWriter((java.io.OutputStream) outputStream44);
        intModelValue7.write(modelWriter45);
        org.jboss.dmr.ValueExpression valueExpression47 = intModelValue7.asExpression();
        boolean boolean48 = typeModelValue2.equals((java.lang.Object) valueExpression47);
        org.jboss.dmr.BooleanModelValue booleanModelValue49 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double50 = booleanModelValue49.asDouble();
        org.jboss.dmr.ModelValue modelValue51 = booleanModelValue49.copy();
        java.math.BigInteger bigInteger52 = booleanModelValue49.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue53 = new org.jboss.dmr.BigIntegerModelValue(bigInteger52);
        int int55 = bigIntegerModelValue53.asInt((int) (short) 1);
        org.jboss.dmr.BooleanModelValue booleanModelValue56 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double57 = booleanModelValue56.asDouble();
        org.jboss.dmr.ModelValue modelValue58 = booleanModelValue56.copy();
        java.math.BigInteger bigInteger59 = booleanModelValue56.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue60 = new org.jboss.dmr.BigIntegerModelValue(bigInteger59);
        java.lang.String str61 = bigIntegerModelValue60.asString();
        java.math.BigInteger bigInteger62 = bigIntegerModelValue60.asBigInteger();
        boolean boolean63 = bigIntegerModelValue53.equals(bigIntegerModelValue60);
        double double65 = bigIntegerModelValue53.asDouble(0.0d);
        double double67 = bigIntegerModelValue53.asDouble((double) 100.0f);
        java.math.BigInteger bigInteger68 = bigIntegerModelValue53.asBigInteger();
        org.jboss.dmr.ValueExpression valueExpression69 = bigIntegerModelValue53.asExpression();
        java.lang.String str70 = valueExpression69.toString();
        org.jboss.dmr.BooleanModelValue booleanModelValue71 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double72 = booleanModelValue71.asDouble();
        org.jboss.dmr.ModelValue modelValue73 = booleanModelValue71.copy();
        java.math.BigInteger bigInteger74 = booleanModelValue71.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue75 = new org.jboss.dmr.BigIntegerModelValue(bigInteger74);
        java.lang.String str76 = bigIntegerModelValue75.asString();
        long long78 = bigIntegerModelValue75.asLong(32L);
        double double79 = bigIntegerModelValue75.asDouble();
        long long81 = bigIntegerModelValue75.asLong((long) '4');
        org.jboss.dmr.ValueExpression valueExpression82 = bigIntegerModelValue75.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue83 = new org.jboss.dmr.ExpressionValue(valueExpression82);
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver84 = new org.jboss.dmr.ValueExpressionResolver();
        java.lang.String str86 = valueExpressionResolver84.resolvePart("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        java.math.BigDecimal bigDecimal87 = valueExpression82.resolveBigDecimal(valueExpressionResolver84);
        org.jboss.dmr.BooleanModelValue booleanModelValue89 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray90 = booleanModelValue89.asBytes();
        org.jboss.dmr.ValueExpression valueExpression91 = booleanModelValue89.asExpression();
        java.lang.String str92 = valueExpression91.resolveString();
        java.lang.String str93 = valueExpressionResolver84.resolve(valueExpression91);
        long long94 = valueExpression69.resolveLong(valueExpressionResolver84);
        int int95 = valueExpression47.resolveInt(valueExpressionResolver84);
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType0.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char1 + "' != '" + 'p' + "'", char1 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 32L + "'", long9 == 32L);
        org.junit.Assert.assertNotNull(modelStreamFactory11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1" + "'", str17, "1");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(modelReader25);
        org.junit.Assert.assertNotNull(modelReader31);
        org.junit.Assert.assertNotNull(modelReader36);
        org.junit.Assert.assertNotNull(modelWriter45);
        org.junit.Assert.assertNotNull(valueExpression47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(booleanModelValue49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue51);
        org.junit.Assert.assertNotNull(bigInteger52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(booleanModelValue56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue58);
        org.junit.Assert.assertNotNull(bigInteger59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "1" + "'", str61, "1");
        org.junit.Assert.assertNotNull(bigInteger62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(bigInteger68);
        org.junit.Assert.assertNotNull(valueExpression69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Expression \"1\"" + "'", str70, "Expression \"1\"");
        org.junit.Assert.assertNotNull(booleanModelValue71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue73);
        org.junit.Assert.assertNotNull(bigInteger74);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "1" + "'", str76, "1");
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 1L + "'", long78 == 1L);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 1L + "'", long81 == 1L);
        org.junit.Assert.assertNotNull(valueExpression82);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNotNull(bigDecimal87);
        org.junit.Assert.assertNotNull(booleanModelValue89);
        org.junit.Assert.assertNotNull(byteArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray90), "[1]");
        org.junit.Assert.assertNotNull(valueExpression91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "true" + "'", str92, "true");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "true" + "'", str93, "true");
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 1L + "'", long94 == 1L);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 32 + "'", int95 == 32);
    }

    @Test
    public void test10780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10780");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(false);
        int int3 = modelNode1.asInt(2);
        org.jboss.dmr.ModelNode modelNode5 = modelNode1.set(52);
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode10 = modelNode7.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList11 = modelNode10.asList();
        org.jboss.dmr.ListModelValue listModelValue12 = new org.jboss.dmr.ListModelValue(modelNodeList11);
        org.jboss.dmr.ModelNode modelNode13 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue12);
        org.jboss.dmr.ModelValue modelValue14 = listModelValue12.resolve();
        int int16 = listModelValue12.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList17 = listModelValue12.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList18 = listModelValue12.asPropertyList();
        org.jboss.dmr.ModelNode modelNode20 = listModelValue12.getChild((int) (short) 0);
        org.jboss.dmr.ModelNode modelNode21 = modelNode20.resolve();
        org.jboss.dmr.ModelNode modelNode22 = modelNode5.set("EXPRESSION_VALUE", modelNode21);
        org.jboss.dmr.ModelNode modelNode25 = modelNode5.set("\"[97L]\"", "");
        boolean boolean27 = modelNode5.has(3);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertNotNull(modelNodeList11);
        org.junit.Assert.assertNotNull(modelValue14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(propertyList17);
        org.junit.Assert.assertNotNull(propertyList18);
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(modelNode21);
        org.junit.Assert.assertNotNull(modelNode22);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test10781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10781");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.StringModelValue stringModelValue3 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        boolean boolean4 = stringModelValue1.equals(stringModelValue3);
        byte[] byteArray5 = stringModelValue3.asBytes();
        java.lang.Object obj6 = null;
        boolean boolean7 = stringModelValue3.equals(obj6);
        byte[] byteArray8 = stringModelValue3.asBytes();
        // The following exception was thrown during execution in test generation
        try {
            java.math.BigInteger bigInteger9 = stringModelValue3.asBigInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"(\"\" \"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[40, 34, 34, 32, 61, 62, 32, 40, 34, 104, 105, 33, 34, 32, 61, 62, 32, 48, 46, 48, 41, 41]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[40, 34, 34, 32, 61, 62, 32, 40, 34, 104, 105, 33, 34, 32, 61, 62, 32, 48, 46, 48, 41, 41]");
    }

    @Test
    public void test10782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10782");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isInt();
        boolean boolean17 = modelReader15.isObjectStart();
        boolean boolean18 = modelReader15.isPropertyStart();
        boolean boolean19 = modelReader15.isDouble();
        boolean boolean20 = modelReader15.isBigInteger();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test10783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10783");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        org.jboss.dmr.Property property5 = new org.jboss.dmr.Property("", modelNode4);
        java.lang.String[] strArray6 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode7 = modelNode4.get(strArray6);
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = modelNode11.asList();
        org.jboss.dmr.ListModelValue listModelValue13 = new org.jboss.dmr.ListModelValue(modelNodeList12);
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue13);
        org.jboss.dmr.ModelValue modelValue15 = listModelValue13.resolve();
        int int17 = listModelValue13.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList18 = listModelValue13.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList19 = modelNode7.asPropertyList(propertyList18);
        org.jboss.dmr.ModelNode modelNode21 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode24 = modelNode21.set("hi!", 0.0d);
        org.jboss.dmr.Property property25 = new org.jboss.dmr.Property("", modelNode24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode27 = modelNode24.get(strArray26);
        org.jboss.dmr.ModelNode modelNode28 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode31 = modelNode28.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList32 = modelNode31.asList();
        org.jboss.dmr.ListModelValue listModelValue33 = new org.jboss.dmr.ListModelValue(modelNodeList32);
        org.jboss.dmr.ModelNode modelNode34 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue33);
        org.jboss.dmr.ModelValue modelValue35 = listModelValue33.resolve();
        int int37 = listModelValue33.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList38 = listModelValue33.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList39 = modelNode27.asPropertyList(propertyList38);
        modelNode7.setNoCopy(modelNode27);
        boolean boolean41 = modelNode27.isProtected();
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory43 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory45 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream46 = null;
        org.jboss.dmr.Base64.InputStream inputStream48 = new org.jboss.dmr.Base64.InputStream(inputStream46, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue50 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str51 = longModelValue50.asString();
        byte[] byteArray52 = longModelValue50.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue53 = new org.jboss.dmr.BytesModelValue(byteArray52);
        int int56 = inputStream48.read(byteArray52, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream58 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream48, (-1));
        org.jboss.dmr.stream.ModelReader modelReader59 = modelStreamFactory45.newModelReader((java.io.InputStream) inputStream58);
        java.io.InputStream inputStream60 = null;
        org.jboss.dmr.Base64.InputStream inputStream62 = new org.jboss.dmr.Base64.InputStream(inputStream60, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream63 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream62);
        org.jboss.dmr.Base64.InputStream inputStream64 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream62);
        org.jboss.dmr.stream.ModelReader modelReader65 = modelStreamFactory45.newModelReader((java.io.InputStream) inputStream62);
        java.io.InputStream inputStream66 = null;
        org.jboss.dmr.Base64.InputStream inputStream68 = new org.jboss.dmr.Base64.InputStream(inputStream66, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue70 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str71 = longModelValue70.asString();
        byte[] byteArray72 = longModelValue70.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue73 = new org.jboss.dmr.BytesModelValue(byteArray72);
        int int76 = inputStream68.read(byteArray72, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream78 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream68, (-1));
        org.jboss.dmr.Base64.InputStream inputStream80 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream68, (int) 'p');
        org.jboss.dmr.Base64.InputStream inputStream81 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream80);
        org.jboss.dmr.stream.ModelReader modelReader82 = modelStreamFactory45.newModelReader((java.io.InputStream) inputStream80);
        org.jboss.dmr.stream.ModelReader modelReader83 = modelStreamFactory43.newModelReader((java.io.InputStream) inputStream80);
        java.io.OutputStream outputStream84 = null;
        org.jboss.dmr.Base64.OutputStream outputStream85 = new org.jboss.dmr.Base64.OutputStream(outputStream84);
        outputStream85.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream87 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream85);
        org.jboss.dmr.Base64.OutputStream outputStream88 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream87);
        outputStream88.flushBase64();
        outputStream88.flushBase64();
        outputStream88.flushBase64();
        org.jboss.dmr.stream.ModelWriter modelWriter92 = modelStreamFactory43.newModelWriter((java.io.OutputStream) outputStream88);
        org.jboss.dmr.Base64.OutputStream outputStream93 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream88);
        // The following exception was thrown during execution in test generation
        try {
            modelNode27.writeExternal((java.io.OutputStream) outputStream88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNodeList12);
        org.junit.Assert.assertNotNull(modelValue15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(propertyList18);
        org.junit.Assert.assertNotNull(propertyList19);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(modelNodeList32);
        org.junit.Assert.assertNotNull(modelValue35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(propertyList38);
        org.junit.Assert.assertNotNull(propertyList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(modelStreamFactory43);
        org.junit.Assert.assertNotNull(modelStreamFactory45);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1" + "'", str51, "1");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(modelReader59);
        org.junit.Assert.assertNotNull(modelReader65);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "1" + "'", str71, "1");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(modelReader82);
        org.junit.Assert.assertNotNull(modelReader83);
        org.junit.Assert.assertNotNull(modelWriter92);
    }

    @Test
    public void test10784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10784");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        java.lang.String str5 = modelNode1.toString();
        org.jboss.dmr.ModelNode modelNode6 = modelNode1.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(100);
        org.jboss.dmr.ModelNode modelNode9 = modelNode0.add(modelNode1);
        int int11 = modelNode1.asInt(2);
        org.jboss.dmr.ModelNode modelNode14 = modelNode1.setExpression("H4sIAAAAAAAAANNQUlKwtVPQUMrIVASzDPQMNDUBLH2F1RYAAAA=", "rO0ABX5yABdvcmcuamJvc3MuZG1yLk1vZGVsVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5F\nbnVtAAAAAAAAAAASAAB4cHQAC0JJR19ERUNJTUFM");
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(\"hi!\" => 0.0)" + "'", str5, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertNotNull(modelNode14);
    }

    @Test
    public void test10785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10785");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        java.lang.String str6 = listModelValue5.asString();
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.BooleanModelValue booleanModelValue9 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger10 = booleanModelValue9.asBigInteger();
        org.jboss.dmr.ModelNode modelNode11 = modelNode7.add(bigInteger10);
        java.lang.String str13 = modelNode11.toJSONString(false);
        boolean boolean14 = listModelValue5.equals((java.lang.Object) false);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList15 = listModelValue5.asList();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet16 = listModelValue5.getKeys();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str6, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertNotNull(booleanModelValue9);
        org.junit.Assert.assertNotNull(bigInteger10);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(modelNodeList15);
    }

    @Test
    public void test10786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10786");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.PROPERTY;
        char char1 = modelType0.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue2 = org.jboss.dmr.TypeModelValue.of(modelType0);
        org.jboss.dmr.ModelType modelType3 = org.jboss.dmr.ModelType.PROPERTY;
        char char4 = modelType3.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue5 = org.jboss.dmr.TypeModelValue.of(modelType3);
        org.jboss.dmr.ModelType modelType6 = org.jboss.dmr.ModelType.PROPERTY;
        char char7 = modelType6.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue8 = org.jboss.dmr.TypeModelValue.of(modelType6);
        boolean boolean9 = typeModelValue5.equals(typeModelValue8);
        java.lang.String str10 = typeModelValue8.asString();
        org.jboss.dmr.ModelType modelType11 = org.jboss.dmr.ModelType.PROPERTY;
        char char12 = modelType11.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue13 = org.jboss.dmr.TypeModelValue.of(modelType11);
        org.jboss.dmr.ModelType modelType14 = org.jboss.dmr.ModelType.PROPERTY;
        char char15 = modelType14.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue16 = org.jboss.dmr.TypeModelValue.of(modelType14);
        boolean boolean17 = typeModelValue13.equals(typeModelValue16);
        java.lang.String str18 = typeModelValue16.asString();
        boolean boolean20 = typeModelValue16.asBoolean(true);
        boolean boolean21 = typeModelValue8.equals(typeModelValue16);
        org.jboss.dmr.ValueExpression valueExpression22 = typeModelValue16.asExpression();
        org.jboss.dmr.ModelType modelType23 = org.jboss.dmr.ModelType.PROPERTY;
        char char24 = modelType23.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue25 = org.jboss.dmr.TypeModelValue.of(modelType23);
        org.jboss.dmr.ModelType modelType26 = org.jboss.dmr.ModelType.PROPERTY;
        char char27 = modelType26.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue28 = org.jboss.dmr.TypeModelValue.of(modelType26);
        boolean boolean29 = typeModelValue25.equals(typeModelValue28);
        boolean boolean30 = typeModelValue16.equals(typeModelValue25);
        org.jboss.dmr.ModelType modelType31 = org.jboss.dmr.ModelType.PROPERTY;
        char char32 = modelType31.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue33 = org.jboss.dmr.TypeModelValue.of(modelType31);
        boolean boolean34 = typeModelValue33.asBoolean();
        boolean boolean35 = typeModelValue16.equals(typeModelValue33);
        org.jboss.dmr.ValueExpression valueExpression36 = typeModelValue33.asExpression();
        boolean boolean37 = typeModelValue2.equals(typeModelValue33);
        boolean boolean38 = typeModelValue33.asBoolean();
        java.lang.String str39 = typeModelValue33.asString();
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType0.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char1 + "' != '" + 'p' + "'", char1 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue2);
        org.junit.Assert.assertTrue("'" + modelType3 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType3.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char4 + "' != '" + 'p' + "'", char4 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue5);
        org.junit.Assert.assertTrue("'" + modelType6 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType6.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char7 + "' != '" + 'p' + "'", char7 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PROPERTY" + "'", str10, "PROPERTY");
        org.junit.Assert.assertTrue("'" + modelType11 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType11.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char12 + "' != '" + 'p' + "'", char12 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue13);
        org.junit.Assert.assertTrue("'" + modelType14 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType14.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char15 + "' != '" + 'p' + "'", char15 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PROPERTY" + "'", str18, "PROPERTY");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(valueExpression22);
        org.junit.Assert.assertTrue("'" + modelType23 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType23.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char24 + "' != '" + 'p' + "'", char24 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue25);
        org.junit.Assert.assertTrue("'" + modelType26 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType26.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char27 + "' != '" + 'p' + "'", char27 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + modelType31 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType31.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char32 + "' != '" + 'p' + "'", char32 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(valueExpression36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "PROPERTY" + "'", str39, "PROPERTY");
    }

    @Test
    public void test10787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10787");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        double double2 = intModelValue1.asDouble();
        int int3 = intModelValue1.asInt();
        org.jboss.dmr.ValueExpression valueExpression4 = intModelValue1.asExpression();
        org.jboss.dmr.ModelNode modelNode5 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode8 = modelNode5.setExpression("hi!", "hi!");
        org.jboss.dmr.ModelNode modelNode10 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode13 = modelNode10.set("hi!", 0.0d);
        org.jboss.dmr.Property property14 = new org.jboss.dmr.Property("", modelNode13);
        boolean boolean16 = modelNode13.equals((java.lang.Object) 100L);
        boolean boolean17 = modelNode5.equals(modelNode13);
        org.jboss.dmr.ModelNode modelNode19 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode22 = modelNode19.set("hi!", 0.0d);
        org.jboss.dmr.Property property23 = new org.jboss.dmr.Property("", modelNode22);
        java.lang.String[] strArray24 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode25 = modelNode22.get(strArray24);
        org.jboss.dmr.ModelNode modelNode26 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int27 = modelNode26.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode28 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode31 = modelNode28.setExpression("hi!", "hi!");
        java.lang.String str32 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode28);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList33 = modelNode28.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode34 = modelNode26.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList33);
        org.jboss.dmr.ModelNode modelNode35 = modelNode25.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList33);
        org.jboss.dmr.ModelNode modelNode36 = modelNode13.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList33);
        org.jboss.dmr.ModelNode modelNode38 = modelNode13.add("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4");
        org.jboss.dmr.ModelNode modelNode40 = modelNode13.add(false);
        org.jboss.dmr.ModelType modelType41 = org.jboss.dmr.ModelType.PROPERTY;
        char char42 = modelType41.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue43 = org.jboss.dmr.TypeModelValue.of(modelType41);
        org.jboss.dmr.ModelType modelType44 = org.jboss.dmr.ModelType.PROPERTY;
        char char45 = modelType44.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue46 = org.jboss.dmr.TypeModelValue.of(modelType44);
        boolean boolean47 = typeModelValue43.equals(typeModelValue46);
        java.lang.String str48 = typeModelValue46.asString();
        org.jboss.dmr.ValueExpression valueExpression49 = typeModelValue46.asExpression();
        org.jboss.dmr.ModelType modelType50 = typeModelValue46.asType();
        boolean boolean52 = typeModelValue46.asBoolean(false);
        boolean boolean53 = modelNode40.equals((java.lang.Object) typeModelValue46);
        org.jboss.dmr.ExpressionValue expressionValue55 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue57 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean58 = expressionValue55.equals(expressionValue57);
        org.jboss.dmr.ExpressionValue expressionValue60 = new org.jboss.dmr.ExpressionValue("1");
        org.jboss.dmr.ValueExpression valueExpression61 = expressionValue60.asExpression();
        boolean boolean62 = expressionValue55.equals(expressionValue60);
        java.lang.String str63 = expressionValue55.asString();
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory65 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream66 = null;
        org.jboss.dmr.Base64.InputStream inputStream68 = new org.jboss.dmr.Base64.InputStream(inputStream66, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream69 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream68);
        org.jboss.dmr.stream.ModelReader modelReader70 = modelStreamFactory65.newModelReader((java.io.InputStream) inputStream69);
        java.io.OutputStream outputStream71 = null;
        org.jboss.dmr.Base64.OutputStream outputStream72 = new org.jboss.dmr.Base64.OutputStream(outputStream71);
        org.jboss.dmr.Base64.OutputStream outputStream73 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream72);
        outputStream72.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter76 = modelStreamFactory65.newModelWriter((java.io.OutputStream) outputStream72);
        org.jboss.dmr.stream.ModelWriter modelWriter77 = modelWriter76.writeListStart();
        expressionValue55.write(modelWriter77);
        typeModelValue46.write(modelWriter77);
        intModelValue1.write(modelWriter77);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.stream.ModelWriter modelWriter81 = modelWriter77.writePropertyEnd();
            org.junit.Assert.fail("Expected exception of type org.jboss.dmr.stream.ModelException; message: Expecting ',' or LIST_END");
        } catch (org.jboss.dmr.stream.ModelException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 32.0d + "'", double2 == 32.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 32 + "'", int3 == 32);
        org.junit.Assert.assertNotNull(valueExpression4);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(modelNode22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str32, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList33);
        org.junit.Assert.assertNotNull(modelNode34);
        org.junit.Assert.assertNotNull(modelNode35);
        org.junit.Assert.assertNotNull(modelNode36);
        org.junit.Assert.assertNotNull(modelNode38);
        org.junit.Assert.assertNotNull(modelNode40);
        org.junit.Assert.assertTrue("'" + modelType41 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType41.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char42 + "' != '" + 'p' + "'", char42 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue43);
        org.junit.Assert.assertTrue("'" + modelType44 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType44.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char45 + "' != '" + 'p' + "'", char45 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "PROPERTY" + "'", str48, "PROPERTY");
        org.junit.Assert.assertNotNull(valueExpression49);
        org.junit.Assert.assertTrue("'" + modelType50 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType50.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(valueExpression61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertNotNull(modelStreamFactory65);
        org.junit.Assert.assertNotNull(modelReader70);
        org.junit.Assert.assertNotNull(modelWriter76);
        org.junit.Assert.assertNotNull(modelWriter77);
    }

    @Test
    public void test10788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10788");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        java.math.BigInteger bigInteger1 = booleanModelValue0.asBigInteger();
        boolean boolean2 = booleanModelValue0.asBoolean();
        long long4 = booleanModelValue0.asLong(100L);
        long long5 = booleanModelValue0.asLong();
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertNotNull(bigInteger1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
    }

    @Test
    public void test10789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10789");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str2 = longModelValue1.asString();
        byte[] byteArray3 = longModelValue1.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue4 = new org.jboss.dmr.BytesModelValue(byteArray3);
        double double5 = bytesModelValue4.asDouble();
        java.math.BigDecimal bigDecimal6 = bytesModelValue4.asBigDecimal();
        double double8 = bytesModelValue4.asDouble((double) (-1.0f));
        double double9 = bytesModelValue4.asDouble();
        byte[] byteArray10 = bytesModelValue4.asBytes();
        org.jboss.dmr.LongModelValue longModelValue12 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str13 = longModelValue12.asString();
        byte[] byteArray14 = longModelValue12.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue15 = new org.jboss.dmr.BytesModelValue(byteArray14);
        java.lang.String str16 = bytesModelValue15.asString();
        int int17 = bytesModelValue15.asInt();
        int int18 = bytesModelValue15.asInt();
        org.jboss.dmr.LongModelValue longModelValue20 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str21 = longModelValue20.asString();
        byte[] byteArray22 = longModelValue20.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue23 = new org.jboss.dmr.BytesModelValue(byteArray22);
        double double24 = bytesModelValue23.asDouble();
        boolean boolean25 = bytesModelValue15.equals(bytesModelValue23);
        byte[] byteArray26 = bytesModelValue23.asBytes();
        java.math.BigInteger bigInteger27 = bytesModelValue23.asBigInteger();
        int int29 = bytesModelValue23.asInt((-1));
        long long31 = bytesModelValue23.asLong((long) 100);
        boolean boolean32 = bytesModelValue4.equals(bytesModelValue23);
        int int34 = bytesModelValue4.asInt(112);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1" + "'", str2, "1");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.9E-324d + "'", double5 == 4.9E-324d);
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 4.9E-324d + "'", double8 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 4.9E-324d + "'", double9 == 4.9E-324d);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1" + "'", str13, "1");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str16, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1" + "'", str21, "1");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4.9E-324d + "'", double24 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(bigInteger27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1L + "'", long31 == 1L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
    }

    @Test
    public void test10790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10790");
        org.jboss.dmr.ExpressionValue expressionValue1 = new org.jboss.dmr.ExpressionValue("expression \"(\\\"\\\" => (\\\"hi!\\\" => 0.0))\"");
    }

    @Test
    public void test10791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10791");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode("EXPRESSION_VALUE");
        org.jboss.dmr.ModelNode modelNode2 = modelNode1.clear();
        boolean boolean4 = modelNode1.has((int) '#');
        org.jboss.dmr.ModelNode modelNode7 = modelNode1.add("BYTES_VALUE", "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4");
        org.jboss.dmr.ModelNode modelNode8 = modelNode7.clone();
        org.jboss.dmr.ModelNode modelNode10 = modelNode7.add((long) 35);
        org.junit.Assert.assertNotNull(modelNode2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode10);
    }

    @Test
    public void test10792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10792");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        int int6 = bigIntegerModelValue4.asInt((int) (short) 1);
        int int7 = bigIntegerModelValue4.asInt();
        java.lang.String str8 = bigIntegerModelValue4.asString();
        org.jboss.dmr.IntModelValue intModelValue10 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str11 = intModelValue10.asString();
        double double13 = intModelValue10.asDouble((double) 2);
        int int14 = intModelValue10.asInt();
        boolean boolean15 = intModelValue10.asBoolean();
        boolean boolean16 = bigIntegerModelValue4.equals((java.lang.Object) boolean15);
        double double17 = bigIntegerModelValue4.asDouble();
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1" + "'", str8, "1");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "32" + "'", str11, "32");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 32.0d + "'", double13 == 32.0d);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 32 + "'", int14 == 32);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
    }

    @Test
    public void test10793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10793");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        java.io.InputStream inputStream16 = null;
        org.jboss.dmr.Base64.InputStream inputStream18 = new org.jboss.dmr.Base64.InputStream(inputStream16, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue20 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str21 = longModelValue20.asString();
        byte[] byteArray22 = longModelValue20.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue23 = new org.jboss.dmr.BytesModelValue(byteArray22);
        int int26 = inputStream18.read(byteArray22, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.stream.ModelReader modelReader27 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream18);
        boolean boolean28 = modelReader27.isListStart();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1" + "'", str21, "1");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(modelReader27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test10794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10794");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        boolean boolean5 = objectModelValue0.asBoolean();
        org.jboss.dmr.LongModelValue longModelValue7 = new org.jboss.dmr.LongModelValue(1L);
        long long8 = longModelValue7.asLong();
        byte[] byteArray9 = longModelValue7.asBytes();
        java.lang.String str10 = longModelValue7.toString();
        boolean boolean11 = objectModelValue0.equals((java.lang.Object) longModelValue7);
        int int13 = objectModelValue0.asInt((int) (short) 1);
        int int15 = objectModelValue0.asInt((int) 'i');
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(modelNode4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1L + "'", long8 == 1L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1L" + "'", str10, "1L");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test10795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10795");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        java.lang.String str6 = listModelValue5.asString();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList7 = listModelValue5.asList();
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = modelNode11.asList();
        org.jboss.dmr.ListModelValue listModelValue13 = new org.jboss.dmr.ListModelValue(modelNodeList12);
        java.lang.String str14 = listModelValue13.asString();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList15 = listModelValue13.asList();
        boolean boolean16 = listModelValue5.equals(listModelValue13);
        boolean boolean17 = listModelValue5.asBoolean();
        int int19 = listModelValue5.asInt(8);
        boolean boolean20 = listModelValue5.asBoolean();
        org.jboss.dmr.ModelValue modelValue21 = listModelValue5.protect();
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str6, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertNotNull(modelNodeList7);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNodeList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str14, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertNotNull(modelNodeList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(modelValue21);
    }

    @Test
    public void test10796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10796");
        org.jboss.dmr.ExpressionValue expressionValue1 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue3 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean4 = expressionValue1.equals(expressionValue3);
        org.jboss.dmr.ExpressionValue expressionValue6 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue8 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean9 = expressionValue6.equals(expressionValue8);
        boolean boolean10 = expressionValue1.equals(expressionValue8);
        org.jboss.dmr.ValueExpression valueExpression11 = expressionValue8.asExpression();
        org.jboss.dmr.ModelNode modelNode13 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long14 = modelNode13.asLong();
        org.jboss.dmr.ModelNode modelNode17 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode20 = modelNode17.set("hi!", 0.0d);
        org.jboss.dmr.Property property21 = new org.jboss.dmr.Property("", modelNode20);
        java.lang.String[] strArray22 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode23 = modelNode20.get(strArray22);
        org.jboss.dmr.ModelNode modelNode24 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode27 = modelNode24.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList28 = modelNode27.asList();
        org.jboss.dmr.ListModelValue listModelValue29 = new org.jboss.dmr.ListModelValue(modelNodeList28);
        org.jboss.dmr.ModelNode modelNode30 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue29);
        org.jboss.dmr.ModelValue modelValue31 = listModelValue29.resolve();
        int int33 = listModelValue29.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList34 = listModelValue29.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList35 = modelNode23.asPropertyList(propertyList34);
        org.jboss.dmr.ModelNode modelNode37 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode40 = modelNode37.set("hi!", 0.0d);
        org.jboss.dmr.Property property41 = new org.jboss.dmr.Property("", modelNode40);
        java.lang.String[] strArray42 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode43 = modelNode40.get(strArray42);
        org.jboss.dmr.ModelNode modelNode44 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode47 = modelNode44.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList48 = modelNode47.asList();
        org.jboss.dmr.ListModelValue listModelValue49 = new org.jboss.dmr.ListModelValue(modelNodeList48);
        org.jboss.dmr.ModelNode modelNode50 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue49);
        org.jboss.dmr.ModelValue modelValue51 = listModelValue49.resolve();
        int int53 = listModelValue49.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList54 = listModelValue49.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList55 = modelNode43.asPropertyList(propertyList54);
        modelNode23.setNoCopy(modelNode43);
        org.jboss.dmr.ModelNode modelNode57 = modelNode13.set("org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]", modelNode23);
        boolean boolean58 = modelNode23.isDefined();
        boolean boolean59 = expressionValue8.equals((java.lang.Object) boolean58);
        org.jboss.dmr.ModelValue modelValue60 = expressionValue8.clone();
        java.io.PrintWriter printWriter61 = null;
        // The following exception was thrown during execution in test generation
        try {
            expressionValue8.formatAsJSON(printWriter61, (int) (short) 10, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(valueExpression11);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(modelNode23);
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertNotNull(modelNodeList28);
        org.junit.Assert.assertNotNull(modelValue31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(propertyList34);
        org.junit.Assert.assertNotNull(propertyList35);
        org.junit.Assert.assertNotNull(modelNode40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(modelNode43);
        org.junit.Assert.assertNotNull(modelNode47);
        org.junit.Assert.assertNotNull(modelNodeList48);
        org.junit.Assert.assertNotNull(modelValue51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(propertyList54);
        org.junit.Assert.assertNotNull(propertyList55);
        org.junit.Assert.assertNotNull(modelNode57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(modelValue60);
    }

    @Test
    public void test10797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10797");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str2 = longModelValue1.asString();
        byte[] byteArray3 = longModelValue1.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue4 = new org.jboss.dmr.BytesModelValue(byteArray3);
        java.lang.String str5 = bytesModelValue4.asString();
        int int6 = bytesModelValue4.asInt();
        int int7 = bytesModelValue4.asInt();
        org.jboss.dmr.LongModelValue longModelValue9 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str10 = longModelValue9.asString();
        byte[] byteArray11 = longModelValue9.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue12 = new org.jboss.dmr.BytesModelValue(byteArray11);
        double double13 = bytesModelValue12.asDouble();
        boolean boolean14 = bytesModelValue4.equals(bytesModelValue12);
        org.jboss.dmr.LongModelValue longModelValue16 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str17 = longModelValue16.asString();
        byte[] byteArray18 = longModelValue16.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue19 = new org.jboss.dmr.BytesModelValue(byteArray18);
        boolean boolean20 = bytesModelValue12.equals(bytesModelValue19);
        long long22 = bytesModelValue19.asLong((long) (byte) 100);
        org.jboss.dmr.ModelType modelType23 = bytesModelValue19.getType();
        org.jboss.dmr.LongModelValue longModelValue25 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str26 = longModelValue25.asString();
        byte[] byteArray27 = longModelValue25.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue28 = new org.jboss.dmr.BytesModelValue(byteArray27);
        java.lang.String str29 = bytesModelValue28.asString();
        int int30 = bytesModelValue28.asInt();
        int int31 = bytesModelValue28.asInt();
        org.jboss.dmr.LongModelValue longModelValue33 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str34 = longModelValue33.asString();
        byte[] byteArray35 = longModelValue33.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue36 = new org.jboss.dmr.BytesModelValue(byteArray35);
        double double37 = bytesModelValue36.asDouble();
        boolean boolean38 = bytesModelValue28.equals(bytesModelValue36);
        byte[] byteArray39 = bytesModelValue36.asBytes();
        java.math.BigInteger bigInteger40 = bytesModelValue36.asBigInteger();
        java.lang.String str41 = bytesModelValue36.asString();
        int int42 = bytesModelValue36.asInt();
        java.math.BigDecimal bigDecimal43 = bytesModelValue36.asBigDecimal();
        double double45 = bytesModelValue36.asDouble((double) 'I');
        boolean boolean46 = bytesModelValue19.equals(bytesModelValue36);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1" + "'", str2, "1");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str5, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1" + "'", str10, "1");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.9E-324d + "'", double13 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1" + "'", str17, "1");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertTrue("'" + modelType23 + "' != '" + org.jboss.dmr.ModelType.BYTES + "'", modelType23.equals(org.jboss.dmr.ModelType.BYTES));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1" + "'", str26, "1");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str29, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1" + "'", str34, "1");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.9E-324d + "'", double37 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(bigInteger40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str41, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(bigDecimal43);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 4.9E-324d + "'", double45 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test10798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10798");
        org.jboss.dmr.ModelValue modelValue0 = null;
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(modelValue0);
        java.io.ObjectOutput objectOutput2 = null;
        // The following exception was thrown during execution in test generation
        try {
            modelNode1.writeExternal(objectOutput2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10799");
        org.jboss.dmr.BooleanModelValue booleanModelValue1 = org.jboss.dmr.BooleanModelValue.valueOf(false);
        long long3 = booleanModelValue1.asLong((long) 32);
        int int4 = booleanModelValue1.asInt();
        double double6 = booleanModelValue1.asDouble((double) 1.0f);
        java.math.BigInteger bigInteger7 = booleanModelValue1.asBigInteger();
        int int9 = booleanModelValue1.asInt((int) (short) 1);
        java.math.BigInteger bigInteger10 = booleanModelValue1.asBigInteger();
        java.math.BigInteger bigInteger11 = booleanModelValue1.asBigInteger();
        org.jboss.dmr.ModelNode modelNode12 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode15 = modelNode12.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList16 = modelNode15.asList();
        org.jboss.dmr.ListModelValue listModelValue17 = new org.jboss.dmr.ListModelValue(modelNodeList16);
        org.jboss.dmr.ModelNode modelNode18 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue17);
        org.jboss.dmr.ModelValue modelValue19 = listModelValue17.resolve();
        int int21 = listModelValue17.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList22 = listModelValue17.asPropertyList();
        org.jboss.dmr.ModelValue modelValue23 = listModelValue17.clone();
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory25 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream26 = null;
        org.jboss.dmr.Base64.InputStream inputStream28 = new org.jboss.dmr.Base64.InputStream(inputStream26, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue30 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str31 = longModelValue30.asString();
        byte[] byteArray32 = longModelValue30.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue33 = new org.jboss.dmr.BytesModelValue(byteArray32);
        int int36 = inputStream28.read(byteArray32, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream38 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream28, (-1));
        org.jboss.dmr.stream.ModelReader modelReader39 = modelStreamFactory25.newModelReader((java.io.InputStream) inputStream38);
        java.io.InputStream inputStream40 = null;
        org.jboss.dmr.Base64.InputStream inputStream42 = new org.jboss.dmr.Base64.InputStream(inputStream40, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream43 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream42);
        org.jboss.dmr.Base64.InputStream inputStream44 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream42);
        org.jboss.dmr.stream.ModelReader modelReader45 = modelStreamFactory25.newModelReader((java.io.InputStream) inputStream42);
        java.io.InputStream inputStream46 = null;
        org.jboss.dmr.Base64.InputStream inputStream48 = new org.jboss.dmr.Base64.InputStream(inputStream46, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream49 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream48);
        org.jboss.dmr.stream.ModelReader modelReader50 = modelStreamFactory25.newModelReader((java.io.InputStream) inputStream48);
        java.io.OutputStream outputStream51 = null;
        org.jboss.dmr.Base64.OutputStream outputStream52 = new org.jboss.dmr.Base64.OutputStream(outputStream51);
        outputStream52.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream54 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream52);
        org.jboss.dmr.Base64.OutputStream outputStream55 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream54);
        outputStream54.flushBase64();
        org.jboss.dmr.Base64.OutputStream outputStream57 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream54);
        org.jboss.dmr.Base64.OutputStream outputStream58 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream54);
        org.jboss.dmr.stream.ModelWriter modelWriter59 = modelStreamFactory25.newModelWriter((java.io.OutputStream) outputStream58);
        listModelValue17.write(modelWriter59);
        // The following exception was thrown during execution in test generation
        try {
            booleanModelValue1.write(modelWriter59);
            org.junit.Assert.fail("Expected exception of type org.jboss.dmr.stream.ModelException; message: Expecting EOF");
        } catch (org.jboss.dmr.stream.ModelException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanModelValue1);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(bigInteger7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(bigInteger10);
        org.junit.Assert.assertNotNull(bigInteger11);
        org.junit.Assert.assertNotNull(modelNode15);
        org.junit.Assert.assertNotNull(modelNodeList16);
        org.junit.Assert.assertNotNull(modelValue19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(propertyList22);
        org.junit.Assert.assertNotNull(modelValue23);
        org.junit.Assert.assertNotNull(modelStreamFactory25);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1" + "'", str31, "1");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(modelReader39);
        org.junit.Assert.assertNotNull(modelReader45);
        org.junit.Assert.assertNotNull(modelReader50);
        org.junit.Assert.assertNotNull(modelWriter59);
    }

    @Test
    public void test10800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10800");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream5 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4);
        org.jboss.dmr.stream.ModelReader modelReader6 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream5);
        boolean boolean7 = modelReader6.isObjectStart();
        boolean boolean8 = modelReader6.isListStart();
        boolean boolean9 = modelReader6.isBigInteger();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertNotNull(modelReader6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test10801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10801");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        java.lang.String str5 = modelNode1.toString();
        org.jboss.dmr.ModelNode modelNode6 = modelNode1.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(100);
        org.jboss.dmr.ModelNode modelNode9 = modelNode0.add(modelNode1);
        int int11 = modelNode1.asInt(2);
        org.jboss.dmr.ModelType modelType13 = org.jboss.dmr.ModelType.BYTES;
        org.jboss.dmr.ModelNode modelNode14 = modelNode1.set("[(\"hi!\" => 0.0)]", modelType13);
        org.jboss.dmr.TypeModelValue typeModelValue15 = org.jboss.dmr.TypeModelValue.of(modelType13);
        org.jboss.dmr.ModelValue modelValue16 = typeModelValue15.clone();
        org.jboss.dmr.ModelType modelType17 = typeModelValue15.asType();
        org.jboss.dmr.BooleanModelValue booleanModelValue18 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double19 = booleanModelValue18.asDouble();
        org.jboss.dmr.ModelValue modelValue20 = booleanModelValue18.copy();
        java.math.BigInteger bigInteger21 = booleanModelValue18.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue22 = new org.jboss.dmr.BigIntegerModelValue(bigInteger21);
        java.lang.String str23 = bigIntegerModelValue22.asString();
        java.math.BigInteger bigInteger24 = bigIntegerModelValue22.asBigInteger();
        org.jboss.dmr.ModelNode modelNode25 = new org.jboss.dmr.ModelNode(bigInteger24);
        org.jboss.dmr.LongModelValue longModelValue27 = new org.jboss.dmr.LongModelValue((-1L));
        long long29 = longModelValue27.asLong((long) (byte) -1);
        int int31 = longModelValue27.asInt(0);
        org.jboss.dmr.ValueExpression valueExpression32 = longModelValue27.asExpression();
        org.jboss.dmr.ModelNode modelNode33 = modelNode25.set(valueExpression32);
        boolean boolean34 = typeModelValue15.equals((java.lang.Object) modelNode33);
        // The following exception was thrown during execution in test generation
        try {
            int int35 = modelNode33.asInt();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(\"hi!\" => 0.0)" + "'", str5, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertTrue("'" + modelType13 + "' != '" + org.jboss.dmr.ModelType.BYTES + "'", modelType13.equals(org.jboss.dmr.ModelType.BYTES));
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(typeModelValue15);
        org.junit.Assert.assertNotNull(modelValue16);
        org.junit.Assert.assertTrue("'" + modelType17 + "' != '" + org.jboss.dmr.ModelType.BYTES + "'", modelType17.equals(org.jboss.dmr.ModelType.BYTES));
        org.junit.Assert.assertNotNull(booleanModelValue18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue20);
        org.junit.Assert.assertNotNull(bigInteger21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1" + "'", str23, "1");
        org.junit.Assert.assertNotNull(bigInteger24);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(valueExpression32);
        org.junit.Assert.assertNotNull(modelNode33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test10802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10802");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3R3AANW9yZy5qYm9z\ncy5kbXIuc3RyZWFtLk1vZGVsRXhjZXB0aW9uOiBbKCJoaSEiID0+IDAuMCldcAADaGkhRAAAAAAA\nAAAAeA==");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory3 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream4 = null;
        org.jboss.dmr.Base64.InputStream inputStream6 = new org.jboss.dmr.Base64.InputStream(inputStream4, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue8 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str9 = longModelValue8.asString();
        byte[] byteArray10 = longModelValue8.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue11 = new org.jboss.dmr.BytesModelValue(byteArray10);
        int int14 = inputStream6.read(byteArray10, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream16 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream6, (-1));
        org.jboss.dmr.stream.ModelReader modelReader17 = modelStreamFactory3.newModelReader((java.io.InputStream) inputStream16);
        java.io.InputStream inputStream18 = null;
        org.jboss.dmr.Base64.InputStream inputStream20 = new org.jboss.dmr.Base64.InputStream(inputStream18, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream21 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream20);
        org.jboss.dmr.Base64.InputStream inputStream22 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream20);
        org.jboss.dmr.stream.ModelReader modelReader23 = modelStreamFactory3.newModelReader((java.io.InputStream) inputStream20);
        java.io.InputStream inputStream24 = null;
        org.jboss.dmr.Base64.InputStream inputStream26 = new org.jboss.dmr.Base64.InputStream(inputStream24, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream27 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream26);
        org.jboss.dmr.stream.ModelReader modelReader28 = modelStreamFactory3.newModelReader((java.io.InputStream) inputStream26);
        java.io.OutputStream outputStream29 = null;
        org.jboss.dmr.Base64.OutputStream outputStream30 = new org.jboss.dmr.Base64.OutputStream(outputStream29);
        outputStream30.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream32 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream30);
        org.jboss.dmr.Base64.OutputStream outputStream33 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream32);
        outputStream32.flushBase64();
        org.jboss.dmr.Base64.OutputStream outputStream35 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream32);
        org.jboss.dmr.Base64.OutputStream outputStream36 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream32);
        org.jboss.dmr.stream.ModelWriter modelWriter37 = modelStreamFactory3.newModelWriter((java.io.OutputStream) outputStream36);
        stringModelValue1.write(modelWriter37);
        byte[] byteArray39 = stringModelValue1.asBytes();
        org.jboss.dmr.StringModelValue stringModelValue41 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        byte[] byteArray42 = stringModelValue41.asBytes();
        org.jboss.dmr.LongModelValue longModelValue44 = new org.jboss.dmr.LongModelValue(1L);
        java.math.BigDecimal bigDecimal45 = longModelValue44.asBigDecimal();
        byte[] byteArray46 = longModelValue44.asBytes();
        boolean boolean47 = stringModelValue41.equals((java.lang.Object) byteArray46);
        org.jboss.dmr.StringModelValue stringModelValue49 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.StringModelValue stringModelValue51 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        boolean boolean52 = stringModelValue49.equals(stringModelValue51);
        byte[] byteArray53 = stringModelValue51.asBytes();
        java.lang.Object obj54 = null;
        boolean boolean55 = stringModelValue51.equals(obj54);
        byte[] byteArray56 = stringModelValue51.asBytes();
        boolean boolean57 = stringModelValue41.equals(stringModelValue51);
        org.jboss.dmr.ValueExpression valueExpression58 = stringModelValue51.asExpression();
        boolean boolean59 = stringModelValue1.equals(stringModelValue51);
        byte[] byteArray60 = stringModelValue1.asBytes();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean62 = stringModelValue1.asBoolean(true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1" + "'", str9, "1");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(modelReader17);
        org.junit.Assert.assertNotNull(modelReader23);
        org.junit.Assert.assertNotNull(modelReader28);
        org.junit.Assert.assertNotNull(modelWriter37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[114, 79, 48, 65, 66, 88, 78, 121, 65, 66, 100, 118, 99, 109, 99, 117, 97, 109, 74, 118, 99, 51, 77, 117, 90, 71, 49, 121, 76, 107, 49, 118, 90, 71, 86, 115, 84, 109, 57, 107, 90, 82, 119, 116, 111, 85, 83, 100, 111, 52, 52, 47, 68, 65, 65, 65, 101, 72, 66, 51, 82, 51, 65, 65, 78, 87, 57, 121, 90, 121, 53, 113, 89, 109, 57, 122, 10, 99, 121, 53, 107, 98, 88, 73, 117, 99, 51, 82, 121, 90, 87, 70, 116, 76, 107, 49, 118, 90, 71, 86, 115, 82, 88, 104, 106, 90, 88, 66, 48, 97, 87, 57, 117, 79, 105, 66, 98, 75, 67, 74, 111, 97, 83, 69, 105, 73, 68, 48, 43, 73, 68, 65, 117, 77, 67, 108, 100, 99, 65, 65, 68, 97, 71, 107, 104, 82, 65, 65, 65, 65, 65, 65, 65, 10, 65, 65, 65, 65, 101, 65, 61, 61]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 32, 34, 116, 114, 117, 101, 34]");
        org.junit.Assert.assertNotNull(bigDecimal45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[40, 34, 34, 32, 61, 62, 32, 40, 34, 104, 105, 33, 34, 32, 61, 62, 32, 48, 46, 48, 41, 41]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[40, 34, 34, 32, 61, 62, 32, 40, 34, 104, 105, 33, 34, 32, 61, 62, 32, 48, 46, 48, 41, 41]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(valueExpression58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[114, 79, 48, 65, 66, 88, 78, 121, 65, 66, 100, 118, 99, 109, 99, 117, 97, 109, 74, 118, 99, 51, 77, 117, 90, 71, 49, 121, 76, 107, 49, 118, 90, 71, 86, 115, 84, 109, 57, 107, 90, 82, 119, 116, 111, 85, 83, 100, 111, 52, 52, 47, 68, 65, 65, 65, 101, 72, 66, 51, 82, 51, 65, 65, 78, 87, 57, 121, 90, 121, 53, 113, 89, 109, 57, 122, 10, 99, 121, 53, 107, 98, 88, 73, 117, 99, 51, 82, 121, 90, 87, 70, 116, 76, 107, 49, 118, 90, 71, 86, 115, 82, 88, 104, 106, 90, 88, 66, 48, 97, 87, 57, 117, 79, 105, 66, 98, 75, 67, 74, 111, 97, 83, 69, 105, 73, 68, 48, 43, 73, 68, 65, 117, 77, 67, 108, 100, 99, 65, 65, 68, 97, 71, 107, 104, 82, 65, 65, 65, 65, 65, 65, 65, 10, 65, 65, 65, 65, 101, 65, 61, 61]");
    }

    @Test
    public void test10803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10803");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str2 = intModelValue1.asString();
        double double4 = intModelValue1.asDouble((double) 2);
        java.math.BigDecimal bigDecimal5 = intModelValue1.asBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue6 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal5);
        long long8 = bigDecimalModelValue6.asLong((long) 's');
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "32" + "'", str2, "32");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 32.0d + "'", double4 == 32.0d);
        org.junit.Assert.assertNotNull(bigDecimal5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 32L + "'", long8 == 32L);
    }

    @Test
    public void test10804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10804");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(modelType0);
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode6 = modelNode3.set("hi!", 0.0d);
        org.jboss.dmr.Property property7 = new org.jboss.dmr.Property("", modelNode6);
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(property7);
        org.jboss.dmr.ModelNode modelNode9 = property7.getValue();
        org.jboss.dmr.PropertyModelValue propertyModelValue10 = new org.jboss.dmr.PropertyModelValue(property7);
        java.util.List<org.jboss.dmr.Property> propertyList11 = propertyModelValue10.asPropertyList();
        org.jboss.dmr.ModelNode modelNode13 = propertyModelValue10.getChild((int) (short) 0);
        org.jboss.dmr.ModelNode modelNode14 = modelNode13.setEmptyList();
        org.jboss.dmr.BooleanModelValue booleanModelValue17 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long18 = booleanModelValue17.asLong();
        org.jboss.dmr.ValueExpression valueExpression19 = booleanModelValue17.asExpression();
        java.lang.String str20 = valueExpression19.toString();
        org.jboss.dmr.ExpressionValue expressionValue22 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ValueExpression valueExpression23 = expressionValue22.asExpression();
        boolean boolean24 = valueExpression19.equals(valueExpression23);
        org.jboss.dmr.LongModelValue longModelValue26 = new org.jboss.dmr.LongModelValue((long) '4');
        java.math.BigDecimal bigDecimal27 = longModelValue26.asBigDecimal();
        int int28 = longModelValue26.asInt();
        org.jboss.dmr.ValueExpression valueExpression29 = longModelValue26.asExpression();
        boolean boolean30 = valueExpression23.equals(valueExpression29);
        int int31 = valueExpression29.resolveInt();
        org.jboss.dmr.ExpressionValue expressionValue33 = new org.jboss.dmr.ExpressionValue("1");
        org.jboss.dmr.ValueExpression valueExpression34 = expressionValue33.asExpression();
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver35 = new org.jboss.dmr.ValueExpressionResolver();
        java.lang.String str36 = valueExpression34.resolveString(valueExpressionResolver35);
        java.math.BigInteger bigInteger37 = valueExpression29.resolveBigInteger(valueExpressionResolver35);
        org.jboss.dmr.ModelNode modelNode38 = modelNode13.add("[(\"H4sIAAAAAAAAAAMAAAAAAAAAAAA=\" => big integer 32)]", valueExpression29);
        org.jboss.dmr.ModelNode modelNode41 = modelNode38.set("H4sIAAAAAAAAAAMAAAAAAAAAAAA=", 2);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode43 = modelNode41.remove((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType0.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(propertyList11);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(booleanModelValue17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(valueExpression19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Expression \"true\"" + "'", str20, "Expression \"true\"");
        org.junit.Assert.assertNotNull(valueExpression23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(bigDecimal27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNotNull(valueExpression29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNotNull(valueExpression34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1" + "'", str36, "1");
        org.junit.Assert.assertNotNull(bigInteger37);
        org.junit.Assert.assertNotNull(modelNode38);
        org.junit.Assert.assertNotNull(modelNode41);
    }

    @Test
    public void test10805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10805");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        org.jboss.dmr.ModelValue modelValue6 = objectModelValue0.copy(false);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode7 = modelValue6.addChild();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(modelNode4);
        org.junit.Assert.assertNotNull(modelValue6);
    }

    @Test
    public void test10806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10806");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 0);
        byte[] byteArray2 = doubleModelValue1.asBytes();
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) doubleModelValue1);
        org.jboss.dmr.DoubleModelValue doubleModelValue4 = null;
        boolean boolean5 = doubleModelValue1.equals(doubleModelValue4);
        org.jboss.dmr.ObjectModelValue objectModelValue6 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode7 = objectModelValue6.asObject();
        java.util.Set<java.lang.String> strSet8 = objectModelValue6.getKeys();
        org.jboss.dmr.ModelNode modelNode10 = objectModelValue6.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        boolean boolean11 = objectModelValue6.asBoolean();
        org.jboss.dmr.ModelNode modelNode13 = objectModelValue6.getChild("1L");
        org.jboss.dmr.ObjectModelValue objectModelValue14 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode15 = objectModelValue14.asObject();
        java.util.Set<java.lang.String> strSet16 = objectModelValue14.getKeys();
        org.jboss.dmr.ModelNode modelNode18 = objectModelValue14.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        boolean boolean19 = objectModelValue14.asBoolean();
        int int21 = objectModelValue14.asInt((int) 'b');
        int int23 = objectModelValue14.asInt((int) '#');
        boolean boolean24 = objectModelValue6.equals(objectModelValue14);
        int int25 = objectModelValue14.asInt();
        java.util.Set<java.lang.String> strSet26 = objectModelValue14.getKeys();
        org.jboss.dmr.ModelValue modelValue27 = objectModelValue14.resolve();
        boolean boolean28 = doubleModelValue1.equals((java.lang.Object) objectModelValue14);
        boolean boolean30 = doubleModelValue1.has("true");
        double double31 = doubleModelValue1.asDouble();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(modelNode10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(modelNode18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(modelValue27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
    }

    @Test
    public void test10807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10807");
        org.jboss.dmr.BooleanModelValue booleanModelValue1 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray2 = booleanModelValue1.asBytes();
        java.lang.String str3 = booleanModelValue1.asString();
        int int4 = booleanModelValue1.asInt();
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        java.lang.String str10 = bytesModelValue9.asString();
        int int11 = bytesModelValue9.asInt();
        byte[] byteArray12 = bytesModelValue9.asBytes();
        org.jboss.dmr.LongModelValue longModelValue14 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str15 = longModelValue14.asString();
        byte[] byteArray16 = longModelValue14.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue17 = new org.jboss.dmr.BytesModelValue(byteArray16);
        java.lang.String str18 = bytesModelValue17.asString();
        int int19 = bytesModelValue17.asInt();
        int int20 = bytesModelValue17.asInt();
        org.jboss.dmr.LongModelValue longModelValue22 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str23 = longModelValue22.asString();
        byte[] byteArray24 = longModelValue22.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue25 = new org.jboss.dmr.BytesModelValue(byteArray24);
        double double26 = bytesModelValue25.asDouble();
        boolean boolean27 = bytesModelValue17.equals(bytesModelValue25);
        byte[] byteArray28 = bytesModelValue25.asBytes();
        java.math.BigInteger bigInteger29 = bytesModelValue25.asBigInteger();
        boolean boolean30 = bytesModelValue9.equals(bytesModelValue25);
        int int32 = bytesModelValue25.asInt((int) 'J');
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory34 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream35 = null;
        org.jboss.dmr.Base64.InputStream inputStream37 = new org.jboss.dmr.Base64.InputStream(inputStream35, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream38 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream37);
        org.jboss.dmr.stream.ModelReader modelReader39 = modelStreamFactory34.newModelReader((java.io.InputStream) inputStream38);
        java.io.OutputStream outputStream40 = null;
        org.jboss.dmr.Base64.OutputStream outputStream41 = new org.jboss.dmr.Base64.OutputStream(outputStream40);
        org.jboss.dmr.Base64.OutputStream outputStream42 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream41);
        outputStream41.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter45 = modelStreamFactory34.newModelWriter((java.io.OutputStream) outputStream41);
        org.jboss.dmr.stream.ModelWriter modelWriter46 = modelWriter45.writeListStart();
        bytesModelValue25.write(modelWriter46);
        org.jboss.dmr.BooleanModelValue booleanModelValue49 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray50 = booleanModelValue49.asBytes();
        java.lang.String str51 = booleanModelValue49.asString();
        int int52 = booleanModelValue49.asInt();
        long long53 = booleanModelValue49.asLong();
        boolean boolean55 = booleanModelValue49.equals((java.lang.Object) '4');
        java.math.BigInteger bigInteger56 = booleanModelValue49.asBigInteger();
        java.lang.String str57 = booleanModelValue49.asString();
        byte[] byteArray58 = booleanModelValue49.asBytes();
        java.lang.String str60 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) byteArray58, 10);
        org.jboss.dmr.stream.ModelWriter modelWriter61 = modelWriter46.writeBytes(byteArray58);
        booleanModelValue1.write(modelWriter61);
        int int63 = booleanModelValue1.asInt();
        org.junit.Assert.assertNotNull(booleanModelValue1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "true" + "'", str3, "true");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str10, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1" + "'", str15, "1");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str18, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1" + "'", str23, "1");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4.9E-324d + "'", double26 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(bigInteger29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(modelStreamFactory34);
        org.junit.Assert.assertNotNull(modelReader39);
        org.junit.Assert.assertNotNull(modelWriter45);
        org.junit.Assert.assertNotNull(modelWriter46);
        org.junit.Assert.assertNotNull(booleanModelValue49);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "true" + "'", str51, "true");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 1L + "'", long53 == 1L);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(bigInteger56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "true" + "'", str57, "true");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "H4sIAAAAAAAAAFvzloG1tIiBKdppzWfxH2wcIQ+YGBgqChgYGBgZASVtzhAcAAAA" + "'", str60, "H4sIAAAAAAAAAFvzloG1tIiBKdppzWfxH2wcIQ+YGBgqChgYGBgZASVtzhAcAAAA");
        org.junit.Assert.assertNotNull(modelWriter61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
    }

    @Test
    public void test10808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10808");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        java.lang.String str5 = modelNode1.toString();
        org.jboss.dmr.ModelNode modelNode6 = modelNode1.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(100);
        org.jboss.dmr.ModelNode modelNode9 = modelNode0.add(modelNode1);
        org.jboss.dmr.ModelNode modelNode12 = new org.jboss.dmr.ModelNode((double) 100);
        org.jboss.dmr.ModelNode modelNode14 = modelNode12.set((int) '#');
        org.jboss.dmr.ModelNode modelNode15 = modelNode1.setNoCopy("1.0", modelNode12);
        long long17 = modelNode12.asLong((long) 112);
        org.jboss.dmr.ModelNode modelNode20 = modelNode12.set("35", "\"1L\"");
        java.lang.String str22 = modelNode20.asString("{ \"\" : { \"hi!\" : 0.0 } }");
        java.io.PrintWriter printWriter23 = null;
        // The following exception was thrown during execution in test generation
        try {
            modelNode20.format(printWriter23, 32, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(\"hi!\" => 0.0)" + "'", str5, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(modelNode15);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 35L + "'", long17 == 35L);
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(\"35\" => \"\\\"1L\\\"\")" + "'", str22, "(\"35\" => \"\\\"1L\\\"\")");
    }

    @Test
    public void test10809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10809");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue5);
        org.jboss.dmr.ModelValue modelValue7 = listModelValue5.resolve();
        int int9 = listModelValue5.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList10 = listModelValue5.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList11 = listModelValue5.asPropertyList();
        java.lang.String str12 = listModelValue5.asString();
        org.jboss.dmr.ModelNode modelNode13 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode16 = modelNode13.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList17 = modelNode16.asList();
        org.jboss.dmr.ListModelValue listModelValue18 = new org.jboss.dmr.ListModelValue(modelNodeList17);
        java.lang.String str19 = listModelValue18.asString();
        long long20 = listModelValue18.asLong();
        int int22 = listModelValue18.asInt((int) '4');
        org.jboss.dmr.ModelValue modelValue23 = listModelValue18.protect();
        boolean boolean25 = listModelValue18.has((int) (short) 100);
        org.jboss.dmr.ModelValue modelValue26 = listModelValue18.resolve();
        boolean boolean27 = listModelValue18.asBoolean();
        java.util.List<org.jboss.dmr.Property> propertyList28 = listModelValue18.asPropertyList();
        boolean boolean29 = listModelValue5.equals((java.lang.Object) listModelValue18);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode31 = listModelValue5.getChild(35);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertNotNull(modelValue7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(propertyList10);
        org.junit.Assert.assertNotNull(propertyList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str12, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertNotNull(modelNodeList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str19, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(modelValue23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(modelValue26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(propertyList28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test10810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10810");
        org.jboss.dmr.ExpressionValue expressionValue1 = new org.jboss.dmr.ExpressionValue("Expression \"hi!\"");
        java.lang.String str2 = expressionValue1.asString();
        java.lang.String str3 = expressionValue1.asString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Expression \"hi!\"" + "'", str2, "Expression \"hi!\"");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Expression \"hi!\"" + "'", str3, "Expression \"hi!\"");
    }

    @Test
    public void test10811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10811");
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long3 = modelNode2.asLong();
        org.jboss.dmr.ValueExpression valueExpression4 = modelNode2.asExpression();
        java.math.BigDecimal bigDecimal5 = valueExpression4.resolveBigDecimal();
        org.jboss.dmr.BooleanModelValue booleanModelValue7 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long8 = booleanModelValue7.asLong();
        org.jboss.dmr.ValueExpression valueExpression9 = booleanModelValue7.asExpression();
        boolean boolean11 = valueExpression9.equals((java.lang.Object) 'p');
        boolean boolean12 = valueExpression4.equals(valueExpression9);
        org.jboss.dmr.ModelNode modelNode13 = new org.jboss.dmr.ModelNode(valueExpression4);
        org.jboss.dmr.Property property15 = new org.jboss.dmr.Property("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]", modelNode13, false);
        org.jboss.dmr.ModelNode modelNode18 = modelNode13.set("rO0ABXQAUXJPMEFCWE55QUJkdmNtY3VhbUp2YzNNdVpHMXlMazF2WkdWc1RtOWtaUnd0b1VTZG80\nNC9EQUFBZUhCM0RIQUFBMmhwSVdVQUEyaHAKSVhnPQ==", 0L);
        org.jboss.dmr.StringModelValue stringModelValue20 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.StringModelValue stringModelValue22 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        boolean boolean23 = stringModelValue20.equals(stringModelValue22);
        byte[] byteArray24 = stringModelValue22.asBytes();
        org.jboss.dmr.ModelNode modelNode25 = modelNode13.set(byteArray24);
        java.lang.String str26 = modelNode25.asStringOrNull();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 1L + "'", long3 == 1L);
        org.junit.Assert.assertNotNull(valueExpression4);
        org.junit.Assert.assertNotNull(bigDecimal5);
        org.junit.Assert.assertNotNull(booleanModelValue7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1L + "'", long8 == 1L);
        org.junit.Assert.assertNotNull(valueExpression9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[40, 34, 34, 32, 61, 62, 32, 40, 34, 104, 105, 33, 34, 32, 61, 62, 32, 48, 46, 48, 41, 41]");
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "bytes { 0x28, 0x22, 0x22, 0x20, 0x3d, 0x3e, 0x20, 0x28, 0x22, 0x68, 0x69, 0x21, 0x22, 0x20, 0x3d, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29 }" + "'", str26, "bytes { 0x28, 0x22, 0x22, 0x20, 0x3d, 0x3e, 0x20, 0x28, 0x22, 0x68, 0x69, 0x21, 0x22, 0x20, 0x3d, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29 }");
    }

    @Test
    public void test10812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10812");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long2 = doubleModelValue1.asLong();
        boolean boolean3 = doubleModelValue1.asBoolean();
        byte[] byteArray4 = doubleModelValue1.asBytes();
        int int6 = doubleModelValue1.asInt((int) ' ');
        boolean boolean7 = doubleModelValue1.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression8 = doubleModelValue1.asExpression();
        org.jboss.dmr.BooleanModelValue booleanModelValue10 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long11 = booleanModelValue10.asLong();
        org.jboss.dmr.ValueExpression valueExpression12 = booleanModelValue10.asExpression();
        java.lang.String str13 = valueExpression12.toString();
        org.jboss.dmr.ExpressionValue expressionValue15 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ValueExpression valueExpression16 = expressionValue15.asExpression();
        boolean boolean17 = valueExpression12.equals(valueExpression16);
        org.jboss.dmr.LongModelValue longModelValue19 = new org.jboss.dmr.LongModelValue((long) '4');
        java.math.BigDecimal bigDecimal20 = longModelValue19.asBigDecimal();
        int int21 = longModelValue19.asInt();
        org.jboss.dmr.ValueExpression valueExpression22 = longModelValue19.asExpression();
        boolean boolean23 = valueExpression16.equals(valueExpression22);
        int int24 = valueExpression22.resolveInt();
        org.jboss.dmr.BooleanModelValue booleanModelValue26 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long27 = booleanModelValue26.asLong();
        org.jboss.dmr.ValueExpression valueExpression28 = booleanModelValue26.asExpression();
        java.lang.String str29 = valueExpression28.toString();
        org.jboss.dmr.ExpressionValue expressionValue31 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ValueExpression valueExpression32 = expressionValue31.asExpression();
        boolean boolean33 = valueExpression28.equals(valueExpression32);
        java.lang.String str34 = valueExpression32.resolveString();
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver35 = new org.jboss.dmr.ValueExpressionResolver();
        java.lang.String str36 = valueExpression32.resolveString(valueExpressionResolver35);
        java.lang.String str37 = valueExpression22.resolveString(valueExpressionResolver35);
        java.lang.String str38 = valueExpression8.resolveString(valueExpressionResolver35);
        java.lang.String str40 = valueExpressionResolver35.resolvePart("(\"org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\\\"hi!\\\" => 0.0)]\" => (\"hi!\" => 0.0))");
        org.jboss.dmr.BooleanModelValue booleanModelValue42 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long43 = booleanModelValue42.asLong();
        org.jboss.dmr.ValueExpression valueExpression44 = booleanModelValue42.asExpression();
        boolean boolean46 = valueExpression44.equals((java.lang.Object) 'p');
        org.jboss.dmr.ExpressionValue expressionValue47 = new org.jboss.dmr.ExpressionValue(valueExpression44);
        org.jboss.dmr.BooleanModelValue booleanModelValue48 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double49 = booleanModelValue48.asDouble();
        org.jboss.dmr.ModelValue modelValue50 = booleanModelValue48.copy();
        java.math.BigInteger bigInteger51 = booleanModelValue48.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue52 = new org.jboss.dmr.BigIntegerModelValue(bigInteger51);
        double double54 = bigIntegerModelValue52.asDouble((double) 'b');
        int int55 = bigIntegerModelValue52.asInt();
        org.jboss.dmr.ValueExpression valueExpression56 = bigIntegerModelValue52.asExpression();
        boolean boolean57 = valueExpression44.equals((java.lang.Object) valueExpression56);
        org.jboss.dmr.BooleanModelValue booleanModelValue58 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double59 = booleanModelValue58.asDouble();
        org.jboss.dmr.ModelValue modelValue60 = booleanModelValue58.copy();
        java.math.BigInteger bigInteger61 = booleanModelValue58.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue62 = new org.jboss.dmr.BigIntegerModelValue(bigInteger61);
        double double64 = bigIntegerModelValue62.asDouble((double) 'b');
        java.lang.String str65 = bigIntegerModelValue62.asString();
        org.jboss.dmr.ValueExpression valueExpression66 = bigIntegerModelValue62.asExpression();
        boolean boolean68 = bigIntegerModelValue62.asBoolean(true);
        org.jboss.dmr.BooleanModelValue booleanModelValue70 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long71 = booleanModelValue70.asLong();
        org.jboss.dmr.ValueExpression valueExpression72 = booleanModelValue70.asExpression();
        java.lang.String str73 = valueExpression72.toString();
        org.jboss.dmr.ExpressionValue expressionValue75 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ValueExpression valueExpression76 = expressionValue75.asExpression();
        boolean boolean77 = valueExpression72.equals(valueExpression76);
        org.jboss.dmr.LongModelValue longModelValue79 = new org.jboss.dmr.LongModelValue((long) '4');
        java.math.BigDecimal bigDecimal80 = longModelValue79.asBigDecimal();
        int int81 = longModelValue79.asInt();
        org.jboss.dmr.ValueExpression valueExpression82 = longModelValue79.asExpression();
        boolean boolean83 = valueExpression76.equals(valueExpression82);
        int int84 = valueExpression82.resolveInt();
        org.jboss.dmr.ExpressionValue expressionValue86 = new org.jboss.dmr.ExpressionValue("1");
        org.jboss.dmr.ValueExpression valueExpression87 = expressionValue86.asExpression();
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver88 = new org.jboss.dmr.ValueExpressionResolver();
        java.lang.String str89 = valueExpression87.resolveString(valueExpressionResolver88);
        java.math.BigInteger bigInteger90 = valueExpression82.resolveBigInteger(valueExpressionResolver88);
        java.lang.String str92 = valueExpressionResolver88.resolvePart("1L");
        java.lang.String str94 = valueExpressionResolver88.resolvePart("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AloAeA==");
        boolean boolean95 = bigIntegerModelValue62.equals((java.lang.Object) valueExpressionResolver88);
        java.lang.String str97 = valueExpressionResolver88.resolvePart("(\"hi!\" => 0.0)");
        java.lang.String str98 = valueExpression56.resolveString(valueExpressionResolver88);
        java.lang.String str99 = valueExpressionResolver35.resolve(valueExpression56);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10L + "'", long2 == 10L);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(valueExpression8);
        org.junit.Assert.assertNotNull(booleanModelValue10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertNotNull(valueExpression12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Expression \"true\"" + "'", str13, "Expression \"true\"");
        org.junit.Assert.assertNotNull(valueExpression16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(bigDecimal20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(valueExpression22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(booleanModelValue26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertNotNull(valueExpression28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Expression \"true\"" + "'", str29, "Expression \"true\"");
        org.junit.Assert.assertNotNull(valueExpression32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "52" + "'", str37, "52");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "10.0" + "'", str38, "10.0");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(booleanModelValue42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
        org.junit.Assert.assertNotNull(valueExpression44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(booleanModelValue48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue50);
        org.junit.Assert.assertNotNull(bigInteger51);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(valueExpression56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(booleanModelValue58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue60);
        org.junit.Assert.assertNotNull(bigInteger61);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "1" + "'", str65, "1");
        org.junit.Assert.assertNotNull(valueExpression66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(booleanModelValue70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 1L + "'", long71 == 1L);
        org.junit.Assert.assertNotNull(valueExpression72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Expression \"true\"" + "'", str73, "Expression \"true\"");
        org.junit.Assert.assertNotNull(valueExpression76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(bigDecimal80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 52 + "'", int81 == 52);
        org.junit.Assert.assertNotNull(valueExpression82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 52 + "'", int84 == 52);
        org.junit.Assert.assertNotNull(valueExpression87);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "1" + "'", str89, "1");
        org.junit.Assert.assertNotNull(bigInteger90);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertNull(str94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNull(str97);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "1" + "'", str98, "1");
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "1" + "'", str99, "1");
    }

    @Test
    public void test10813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10813");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(1);
    }

    @Test
    public void test10814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10814");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue5);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList7 = modelNode6.asList();
        org.jboss.dmr.ListModelValue listModelValue8 = new org.jboss.dmr.ListModelValue(modelNodeList7);
        long long9 = listModelValue8.asLong();
        long long10 = listModelValue8.asLong();
        boolean boolean12 = listModelValue8.asBoolean(false);
        org.jboss.dmr.LongModelValue longModelValue14 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str15 = longModelValue14.asString();
        byte[] byteArray16 = longModelValue14.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue17 = new org.jboss.dmr.BytesModelValue(byteArray16);
        java.lang.String str18 = bytesModelValue17.asString();
        int int19 = bytesModelValue17.asInt();
        int int20 = bytesModelValue17.asInt();
        org.jboss.dmr.LongModelValue longModelValue22 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str23 = longModelValue22.asString();
        byte[] byteArray24 = longModelValue22.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue25 = new org.jboss.dmr.BytesModelValue(byteArray24);
        double double26 = bytesModelValue25.asDouble();
        boolean boolean27 = bytesModelValue17.equals(bytesModelValue25);
        org.jboss.dmr.LongModelValue longModelValue29 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str30 = longModelValue29.asString();
        byte[] byteArray31 = longModelValue29.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue32 = new org.jboss.dmr.BytesModelValue(byteArray31);
        boolean boolean33 = bytesModelValue25.equals(bytesModelValue32);
        java.math.BigInteger bigInteger34 = bytesModelValue32.asBigInteger();
        double double36 = bytesModelValue32.asDouble((double) 32);
        boolean boolean37 = listModelValue8.equals((java.lang.Object) bytesModelValue32);
        java.lang.String str38 = bytesModelValue32.asString();
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertNotNull(modelNodeList7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1" + "'", str15, "1");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str18, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1" + "'", str23, "1");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4.9E-324d + "'", double26 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1" + "'", str30, "1");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(bigInteger34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.9E-324d + "'", double36 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str38, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
    }

    @Test
    public void test10815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10815");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str2 = intModelValue1.asString();
        double double4 = intModelValue1.asDouble((double) 2);
        java.math.BigDecimal bigDecimal5 = intModelValue1.asBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue6 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal5);
        long long7 = bigDecimalModelValue6.asLong();
        long long8 = bigDecimalModelValue6.asLong();
        int int10 = bigDecimalModelValue6.asInt((-1));
        boolean boolean11 = bigDecimalModelValue6.asBoolean();
        java.lang.String str12 = bigDecimalModelValue6.asString();
        java.lang.String str13 = bigDecimalModelValue6.asString();
        org.jboss.dmr.ValueExpression valueExpression14 = bigDecimalModelValue6.asExpression();
        long long15 = bigDecimalModelValue6.asLong();
        java.io.DataOutput dataOutput16 = null;
        // The following exception was thrown during execution in test generation
        try {
            bigDecimalModelValue6.writeExternal(dataOutput16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "32" + "'", str2, "32");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 32.0d + "'", double4 == 32.0d);
        org.junit.Assert.assertNotNull(bigDecimal5);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 32L + "'", long7 == 32L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 32L + "'", long8 == 32L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "32" + "'", str12, "32");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "32" + "'", str13, "32");
        org.junit.Assert.assertNotNull(valueExpression14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 32L + "'", long15 == 32L);
    }

    @Test
    public void test10816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10816");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isBigInteger();
        boolean boolean17 = modelReader15.isInt();
        boolean boolean18 = modelReader15.isBigDecimal();
        boolean boolean19 = modelReader15.isUndefined();
        // The following exception was thrown during execution in test generation
        try {
            java.math.BigDecimal bigDecimal20 = modelReader15.getBigDecimal();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Current event isn't big decimal");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test10817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10817");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isLong();
        boolean boolean17 = modelReader15.isBigDecimal();
        boolean boolean18 = modelReader15.isBoolean();
        boolean boolean19 = modelReader15.isPropertyEnd();
        boolean boolean20 = modelReader15.isBigDecimal();
        boolean boolean21 = modelReader15.isBigInteger();
        boolean boolean22 = modelReader15.isBigInteger();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test10818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10818");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isLong();
        boolean boolean17 = modelReader15.isBigDecimal();
        boolean boolean18 = modelReader15.isUndefined();
        boolean boolean19 = modelReader15.isBigDecimal();
        boolean boolean20 = modelReader15.isPropertyEnd();
        boolean boolean21 = modelReader15.isExpression();
        boolean boolean22 = modelReader15.isUndefined();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test10819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10819");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long2 = doubleModelValue1.asLong();
        boolean boolean3 = doubleModelValue1.asBoolean();
        byte[] byteArray4 = doubleModelValue1.asBytes();
        java.math.BigInteger bigInteger5 = doubleModelValue1.asBigInteger();
        double double6 = doubleModelValue1.asDouble();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10L + "'", long2 == 10L);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(bigInteger5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
    }

    @Test
    public void test10820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10820");
        org.jboss.dmr.ExpressionValue expressionValue1 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue3 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean4 = expressionValue1.equals(expressionValue3);
        org.jboss.dmr.ExpressionValue expressionValue6 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue8 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean9 = expressionValue6.equals(expressionValue8);
        boolean boolean10 = expressionValue1.equals(expressionValue8);
        org.jboss.dmr.ValueExpression valueExpression11 = expressionValue8.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue13 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ValueExpression valueExpression14 = expressionValue13.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue16 = new org.jboss.dmr.ExpressionValue("hi!");
        java.lang.String str17 = expressionValue16.toString();
        org.jboss.dmr.ModelNode modelNode19 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode22 = modelNode19.set("hi!", 0.0d);
        org.jboss.dmr.Property property23 = new org.jboss.dmr.Property("", modelNode22);
        boolean boolean24 = expressionValue16.equals((java.lang.Object) property23);
        boolean boolean25 = expressionValue13.equals(expressionValue16);
        boolean boolean26 = expressionValue8.equals((java.lang.Object) boolean25);
        org.jboss.dmr.ValueExpression valueExpression27 = expressionValue8.asExpression();
        org.jboss.dmr.ModelNode modelNode28 = new org.jboss.dmr.ModelNode(valueExpression27);
        org.jboss.dmr.ModelNode modelNode29 = modelNode28.setEmptyList();
        org.jboss.dmr.ModelNode modelNode31 = modelNode29.set((double) 11975582L);
        byte[] byteArray32 = modelNode31.asBytes();
        org.jboss.dmr.ModelNode modelNode33 = new org.jboss.dmr.ModelNode(byteArray32);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(valueExpression11);
        org.junit.Assert.assertNotNull(valueExpression14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "expression \"hi!\"" + "'", str17, "expression \"hi!\"");
        org.junit.Assert.assertNotNull(modelNode22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(valueExpression27);
        org.junit.Assert.assertNotNull(modelNode29);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[65, 102, -41, 115, -64, 0, 0, 0]");
    }

    @Test
    public void test10821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10821");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        java.lang.String str5 = bigIntegerModelValue4.asString();
        long long7 = bigIntegerModelValue4.asLong(32L);
        double double8 = bigIntegerModelValue4.asDouble();
        org.jboss.dmr.BooleanModelValue booleanModelValue9 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double10 = booleanModelValue9.asDouble();
        org.jboss.dmr.ModelValue modelValue11 = booleanModelValue9.copy();
        java.math.BigInteger bigInteger12 = booleanModelValue9.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue13 = new org.jboss.dmr.BigIntegerModelValue(bigInteger12);
        double double15 = bigIntegerModelValue13.asDouble((double) 'b');
        boolean boolean16 = bigIntegerModelValue4.equals(bigIntegerModelValue13);
        boolean boolean18 = bigIntegerModelValue13.equals((java.lang.Object) "35");
        java.math.BigDecimal bigDecimal19 = bigIntegerModelValue13.asBigDecimal();
        double double21 = bigIntegerModelValue13.asDouble((double) 4413000076175092009L);
        org.jboss.dmr.BooleanModelValue booleanModelValue23 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger24 = booleanModelValue23.asBigInteger();
        java.math.BigInteger bigInteger25 = booleanModelValue23.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue26 = new org.jboss.dmr.BigIntegerModelValue(bigInteger25);
        org.jboss.dmr.BooleanModelValue booleanModelValue27 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double28 = booleanModelValue27.asDouble();
        org.jboss.dmr.ModelValue modelValue29 = booleanModelValue27.copy();
        java.math.BigInteger bigInteger30 = booleanModelValue27.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue31 = new org.jboss.dmr.BigIntegerModelValue(bigInteger30);
        int int33 = bigIntegerModelValue31.asInt((int) (short) 1);
        org.jboss.dmr.BooleanModelValue booleanModelValue34 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double35 = booleanModelValue34.asDouble();
        org.jboss.dmr.ModelValue modelValue36 = booleanModelValue34.copy();
        java.math.BigInteger bigInteger37 = booleanModelValue34.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue38 = new org.jboss.dmr.BigIntegerModelValue(bigInteger37);
        java.lang.String str39 = bigIntegerModelValue38.asString();
        java.math.BigInteger bigInteger40 = bigIntegerModelValue38.asBigInteger();
        boolean boolean41 = bigIntegerModelValue31.equals(bigIntegerModelValue38);
        double double43 = bigIntegerModelValue31.asDouble(0.0d);
        long long45 = bigIntegerModelValue31.asLong((long) 52);
        boolean boolean47 = bigIntegerModelValue31.asBoolean(false);
        boolean boolean48 = bigIntegerModelValue26.equals(bigIntegerModelValue31);
        boolean boolean49 = bigIntegerModelValue13.equals(bigIntegerModelValue31);
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1" + "'", str5, "1");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(booleanModelValue9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue11);
        org.junit.Assert.assertNotNull(bigInteger12);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(bigDecimal19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(booleanModelValue23);
        org.junit.Assert.assertNotNull(bigInteger24);
        org.junit.Assert.assertNotNull(bigInteger25);
        org.junit.Assert.assertNotNull(booleanModelValue27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue29);
        org.junit.Assert.assertNotNull(bigInteger30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(booleanModelValue34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue36);
        org.junit.Assert.assertNotNull(bigInteger37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1" + "'", str39, "1");
        org.junit.Assert.assertNotNull(bigInteger40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test10822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10822");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        java.io.InputStream inputStream16 = null;
        org.jboss.dmr.Base64.InputStream inputStream18 = new org.jboss.dmr.Base64.InputStream(inputStream16, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream19 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream18);
        byte[] byteArray21 = org.jboss.dmr.Base64.decode("true");
        boolean boolean23 = org.jboss.dmr.Base64.encodeToFile(byteArray21, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3R3AANW9yZy5qYm9z\ncy5kbXIuc3RyZWFtLk1vZGVsRXhjZXB0aW9uOiBbKCJoaSEiID0+IDAuMCldcAADaGkhRAAAAAAA\nAAAAeA==");
        int int26 = inputStream18.read(byteArray21, (int) 'l', 0);
        org.jboss.dmr.stream.ModelReader modelReader27 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream18);
        org.jboss.dmr.LongModelValue longModelValue29 = new org.jboss.dmr.LongModelValue((-1L));
        long long31 = longModelValue29.asLong((long) (byte) -1);
        boolean boolean33 = longModelValue29.asBoolean(false);
        java.io.OutputStream outputStream34 = null;
        org.jboss.dmr.Base64.OutputStream outputStream35 = new org.jboss.dmr.Base64.OutputStream(outputStream34);
        outputStream35.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream37 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream35);
        org.jboss.dmr.Base64.OutputStream outputStream39 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream37, (int) (byte) -1);
        org.jboss.dmr.Base64.OutputStream outputStream40 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream39);
        outputStream40.resumeEncoding();
        boolean boolean42 = longModelValue29.equals((java.lang.Object) outputStream40);
        org.jboss.dmr.Base64.OutputStream outputStream44 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream40, (int) (short) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter45 = modelStreamFactory1.newModelWriter((java.io.OutputStream) outputStream40);
        org.jboss.dmr.ModelNode modelNode47 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long48 = modelNode47.asLong();
        org.jboss.dmr.ValueExpression valueExpression49 = modelNode47.asExpression();
        java.math.BigDecimal bigDecimal50 = valueExpression49.resolveBigDecimal();
        java.lang.String str51 = valueExpression49.getExpressionString();
        java.math.BigDecimal bigDecimal52 = valueExpression49.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue53 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal52);
        int int55 = bigDecimalModelValue53.asInt(0);
        java.math.BigInteger bigInteger56 = bigDecimalModelValue53.asBigInteger();
        org.jboss.dmr.stream.ModelWriter modelWriter57 = modelWriter45.writeBigInteger(bigInteger56);
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-74, -69, -98]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(modelReader27);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(modelWriter45);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertNotNull(valueExpression49);
        org.junit.Assert.assertNotNull(bigDecimal50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1.0" + "'", str51, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(bigInteger56);
        org.junit.Assert.assertNotNull(modelWriter57);
    }

    @Test
    public void test10823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10823");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.ModelNode modelNode4 = new org.jboss.dmr.ModelNode(bigInteger3);
        org.jboss.dmr.ModelNode modelNode7 = modelNode4.set("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4", (int) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode10 = modelNode7.add("", "{\"TYPE_MODEL_VALUE\" => undefined,\"[(\\\"hi!\\\" => 0.0)]\" => undefined}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertNotNull(modelNode7);
    }

    @Test
    public void test10824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10824");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        org.jboss.dmr.ModelValue modelValue2 = objectModelValue0.copy();
        org.jboss.dmr.ObjectModelValue objectModelValue3 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue3.asObject();
        java.util.Set<java.lang.String> strSet5 = objectModelValue3.getKeys();
        org.jboss.dmr.ModelNode modelNode7 = objectModelValue3.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        boolean boolean8 = objectModelValue3.asBoolean();
        int int10 = objectModelValue3.asInt((int) 'b');
        org.jboss.dmr.ModelNode modelNode11 = objectModelValue3.asObject();
        boolean boolean12 = objectModelValue0.equals(objectModelValue3);
        boolean boolean14 = objectModelValue3.asBoolean(false);
        org.jboss.dmr.LongModelValue longModelValue16 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str17 = longModelValue16.asString();
        byte[] byteArray18 = longModelValue16.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue19 = new org.jboss.dmr.BytesModelValue(byteArray18);
        double double20 = bytesModelValue19.asDouble();
        org.jboss.dmr.ModelNode modelNode22 = new org.jboss.dmr.ModelNode((double) 100);
        org.jboss.dmr.ModelNode modelNode24 = modelNode22.set((int) '#');
        java.lang.Boolean boolean25 = modelNode22.asBooleanOrNull();
        java.lang.String str27 = modelNode22.asString("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        boolean boolean28 = bytesModelValue19.equals((java.lang.Object) modelNode22);
        int int30 = bytesModelValue19.asInt(52);
        double double31 = bytesModelValue19.asDouble();
        org.jboss.dmr.ModelNode modelNode32 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode33 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode36 = modelNode33.set("hi!", 0.0d);
        java.lang.String str37 = modelNode33.toString();
        org.jboss.dmr.ModelNode modelNode38 = modelNode33.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode40 = modelNode33.set(100);
        org.jboss.dmr.ModelNode modelNode41 = modelNode32.add(modelNode33);
        int int43 = modelNode33.asInt(2);
        org.jboss.dmr.ModelType modelType45 = org.jboss.dmr.ModelType.BYTES;
        org.jboss.dmr.ModelNode modelNode46 = modelNode33.set("[(\"hi!\" => 0.0)]", modelType45);
        org.jboss.dmr.TypeModelValue typeModelValue47 = org.jboss.dmr.TypeModelValue.of(modelType45);
        boolean boolean48 = bytesModelValue19.equals((java.lang.Object) modelType45);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory50 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream51 = null;
        org.jboss.dmr.Base64.InputStream inputStream53 = new org.jboss.dmr.Base64.InputStream(inputStream51, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream54 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream53);
        org.jboss.dmr.stream.ModelReader modelReader55 = modelStreamFactory50.newModelReader((java.io.InputStream) inputStream54);
        java.io.OutputStream outputStream56 = null;
        org.jboss.dmr.Base64.OutputStream outputStream57 = new org.jboss.dmr.Base64.OutputStream(outputStream56);
        org.jboss.dmr.Base64.OutputStream outputStream58 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream57);
        outputStream57.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter61 = modelStreamFactory50.newModelWriter((java.io.OutputStream) outputStream57);
        org.jboss.dmr.stream.ModelWriter modelWriter62 = modelWriter61.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter64 = modelWriter61.writeInt((int) '4');
        org.jboss.dmr.ModelNode modelNode65 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode68 = modelNode65.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList69 = modelNode68.asList();
        org.jboss.dmr.ListModelValue listModelValue70 = new org.jboss.dmr.ListModelValue(modelNodeList69);
        org.jboss.dmr.ModelNode modelNode71 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue70);
        org.jboss.dmr.ModelValue modelValue72 = listModelValue70.resolve();
        int int74 = listModelValue70.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList75 = listModelValue70.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList76 = listModelValue70.asPropertyList();
        java.lang.String str77 = listModelValue70.asString();
        int int78 = listModelValue70.asInt();
        java.lang.String str79 = listModelValue70.asString();
        org.jboss.dmr.ModelType modelType80 = org.jboss.dmr.ModelType.DOUBLE;
        org.jboss.dmr.ModelNode modelNode81 = new org.jboss.dmr.ModelNode(modelType80);
        boolean boolean82 = listModelValue70.equals((java.lang.Object) modelType80);
        org.jboss.dmr.TypeModelValue typeModelValue83 = org.jboss.dmr.TypeModelValue.of(modelType80);
        org.jboss.dmr.TypeModelValue typeModelValue84 = org.jboss.dmr.TypeModelValue.of(modelType80);
        org.jboss.dmr.stream.ModelWriter modelWriter85 = modelWriter61.writeType(modelType80);
        bytesModelValue19.write(modelWriter61);
        org.jboss.dmr.stream.ModelWriter modelWriter87 = modelWriter61.writePropertyStart();
        // The following exception was thrown during execution in test generation
        try {
            objectModelValue3.write(modelWriter87);
            org.junit.Assert.fail("Expected exception of type org.jboss.dmr.stream.ModelException; message: Expecting STRING");
        } catch (org.jboss.dmr.stream.ModelException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(modelNode7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1" + "'", str17, "1");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.9E-324d + "'", double20 == 4.9E-324d);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertEquals("'" + boolean25 + "' != '" + true + "'", boolean25, true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "35" + "'", str27, "35");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.9E-324d + "'", double31 == 4.9E-324d);
        org.junit.Assert.assertNotNull(modelNode36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(\"hi!\" => 0.0)" + "'", str37, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode38);
        org.junit.Assert.assertNotNull(modelNode40);
        org.junit.Assert.assertNotNull(modelNode41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        org.junit.Assert.assertTrue("'" + modelType45 + "' != '" + org.jboss.dmr.ModelType.BYTES + "'", modelType45.equals(org.jboss.dmr.ModelType.BYTES));
        org.junit.Assert.assertNotNull(modelNode46);
        org.junit.Assert.assertNotNull(typeModelValue47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(modelStreamFactory50);
        org.junit.Assert.assertNotNull(modelReader55);
        org.junit.Assert.assertNotNull(modelWriter61);
        org.junit.Assert.assertNotNull(modelWriter62);
        org.junit.Assert.assertNotNull(modelWriter64);
        org.junit.Assert.assertNotNull(modelNode68);
        org.junit.Assert.assertNotNull(modelNodeList69);
        org.junit.Assert.assertNotNull(modelValue72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(propertyList75);
        org.junit.Assert.assertNotNull(propertyList76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str77, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str79, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + modelType80 + "' != '" + org.jboss.dmr.ModelType.DOUBLE + "'", modelType80.equals(org.jboss.dmr.ModelType.DOUBLE));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(typeModelValue83);
        org.junit.Assert.assertNotNull(typeModelValue84);
        org.junit.Assert.assertNotNull(modelWriter85);
        org.junit.Assert.assertNotNull(modelWriter87);
    }

    @Test
    public void test10825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10825");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        boolean boolean4 = objectModelValue0.has((int) 'a');
        boolean boolean6 = objectModelValue0.has("");
        org.jboss.dmr.ObjectModelValue objectModelValue7 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode8 = objectModelValue7.asObject();
        java.util.Set<java.lang.String> strSet9 = objectModelValue7.getKeys();
        boolean boolean11 = objectModelValue7.has((int) 'a');
        boolean boolean12 = objectModelValue0.equals(objectModelValue7);
        org.jboss.dmr.ModelNode modelNode13 = objectModelValue7.asObject();
        java.util.List<org.jboss.dmr.Property> propertyList14 = objectModelValue7.asPropertyList();
        int int15 = objectModelValue7.asInt();
        org.jboss.dmr.ModelNode modelNode16 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode19 = modelNode16.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList20 = modelNode19.asList();
        org.jboss.dmr.ListModelValue listModelValue21 = new org.jboss.dmr.ListModelValue(modelNodeList20);
        java.lang.String str22 = listModelValue21.asString();
        long long23 = listModelValue21.asLong();
        int int25 = listModelValue21.asInt((int) '4');
        int int27 = listModelValue21.asInt((int) (short) -1);
        org.jboss.dmr.ModelNode modelNode28 = listModelValue21.asObject();
        boolean boolean30 = listModelValue21.asBoolean(true);
        org.jboss.dmr.ModelNode modelNode31 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode34 = modelNode31.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList35 = modelNode34.asList();
        org.jboss.dmr.ListModelValue listModelValue36 = new org.jboss.dmr.ListModelValue(modelNodeList35);
        org.jboss.dmr.ModelNode modelNode37 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue36);
        org.jboss.dmr.ModelValue modelValue38 = listModelValue36.resolve();
        int int40 = listModelValue36.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList41 = listModelValue36.asPropertyList();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList42 = listModelValue36.asList();
        long long43 = listModelValue36.asLong();
        boolean boolean44 = listModelValue21.equals(listModelValue36);
        int int46 = listModelValue36.asInt((int) (byte) -1);
        boolean boolean47 = objectModelValue7.equals((java.lang.Object) listModelValue36);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.Property property48 = listModelValue36.asProperty();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(propertyList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(modelNodeList20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str22, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(modelNode28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(modelNode34);
        org.junit.Assert.assertNotNull(modelNodeList35);
        org.junit.Assert.assertNotNull(modelValue38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(propertyList41);
        org.junit.Assert.assertNotNull(modelNodeList42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test10826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10826");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        int int6 = bigIntegerModelValue4.asInt((int) (short) 1);
        org.jboss.dmr.BooleanModelValue booleanModelValue7 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double8 = booleanModelValue7.asDouble();
        org.jboss.dmr.ModelValue modelValue9 = booleanModelValue7.copy();
        java.math.BigInteger bigInteger10 = booleanModelValue7.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue11 = new org.jboss.dmr.BigIntegerModelValue(bigInteger10);
        int int13 = bigIntegerModelValue11.asInt((int) (short) 1);
        org.jboss.dmr.BooleanModelValue booleanModelValue14 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double15 = booleanModelValue14.asDouble();
        org.jboss.dmr.ModelValue modelValue16 = booleanModelValue14.copy();
        java.math.BigInteger bigInteger17 = booleanModelValue14.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue18 = new org.jboss.dmr.BigIntegerModelValue(bigInteger17);
        java.lang.String str19 = bigIntegerModelValue18.asString();
        java.math.BigInteger bigInteger20 = bigIntegerModelValue18.asBigInteger();
        boolean boolean21 = bigIntegerModelValue11.equals(bigIntegerModelValue18);
        int int22 = bigIntegerModelValue18.asInt();
        boolean boolean23 = bigIntegerModelValue4.equals(bigIntegerModelValue18);
        java.math.BigInteger bigInteger24 = bigIntegerModelValue18.asBigInteger();
        org.jboss.dmr.BooleanModelValue booleanModelValue25 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double26 = booleanModelValue25.asDouble();
        org.jboss.dmr.ModelValue modelValue27 = booleanModelValue25.copy();
        java.math.BigInteger bigInteger28 = booleanModelValue25.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue29 = new org.jboss.dmr.BigIntegerModelValue(bigInteger28);
        java.lang.String str30 = bigIntegerModelValue29.asString();
        java.math.BigInteger bigInteger31 = bigIntegerModelValue29.asBigInteger();
        long long32 = bigIntegerModelValue29.asLong();
        org.jboss.dmr.BooleanModelValue booleanModelValue33 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double34 = booleanModelValue33.asDouble();
        org.jboss.dmr.ModelValue modelValue35 = booleanModelValue33.copy();
        java.math.BigInteger bigInteger36 = booleanModelValue33.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue37 = new org.jboss.dmr.BigIntegerModelValue(bigInteger36);
        int int39 = bigIntegerModelValue37.asInt((int) (short) 1);
        int int40 = bigIntegerModelValue37.asInt();
        org.jboss.dmr.BooleanModelValue booleanModelValue41 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double42 = booleanModelValue41.asDouble();
        org.jboss.dmr.ModelValue modelValue43 = booleanModelValue41.copy();
        java.math.BigInteger bigInteger44 = booleanModelValue41.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue45 = new org.jboss.dmr.BigIntegerModelValue(bigInteger44);
        double double47 = bigIntegerModelValue45.asDouble((double) 'b');
        java.lang.String str48 = bigIntegerModelValue45.asString();
        org.jboss.dmr.ValueExpression valueExpression49 = bigIntegerModelValue45.asExpression();
        boolean boolean51 = bigIntegerModelValue45.asBoolean(true);
        org.jboss.dmr.BooleanModelValue booleanModelValue52 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double53 = booleanModelValue52.asDouble();
        org.jboss.dmr.ModelValue modelValue54 = booleanModelValue52.copy();
        java.math.BigInteger bigInteger55 = booleanModelValue52.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue56 = new org.jboss.dmr.BigIntegerModelValue(bigInteger55);
        java.lang.String str57 = bigIntegerModelValue56.asString();
        long long59 = bigIntegerModelValue56.asLong(32L);
        double double60 = bigIntegerModelValue56.asDouble();
        org.jboss.dmr.BooleanModelValue booleanModelValue61 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double62 = booleanModelValue61.asDouble();
        org.jboss.dmr.ModelValue modelValue63 = booleanModelValue61.copy();
        java.math.BigInteger bigInteger64 = booleanModelValue61.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue65 = new org.jboss.dmr.BigIntegerModelValue(bigInteger64);
        double double67 = bigIntegerModelValue65.asDouble((double) 'b');
        boolean boolean68 = bigIntegerModelValue56.equals(bigIntegerModelValue65);
        org.jboss.dmr.BooleanModelValue booleanModelValue69 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double70 = booleanModelValue69.asDouble();
        org.jboss.dmr.ModelValue modelValue71 = booleanModelValue69.copy();
        java.math.BigInteger bigInteger72 = booleanModelValue69.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue73 = new org.jboss.dmr.BigIntegerModelValue(bigInteger72);
        long long75 = bigIntegerModelValue73.asLong((long) 'b');
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue76 = null;
        boolean boolean77 = bigIntegerModelValue73.equals(bigIntegerModelValue76);
        boolean boolean78 = bigIntegerModelValue56.equals(bigIntegerModelValue73);
        java.math.BigDecimal bigDecimal79 = bigIntegerModelValue56.asBigDecimal();
        boolean boolean80 = bigIntegerModelValue45.equals(bigIntegerModelValue56);
        int int82 = bigIntegerModelValue56.asInt((int) (byte) -1);
        boolean boolean83 = bigIntegerModelValue37.equals(bigIntegerModelValue56);
        boolean boolean84 = bigIntegerModelValue29.equals(bigIntegerModelValue56);
        boolean boolean86 = bigIntegerModelValue56.asBoolean(false);
        boolean boolean87 = bigIntegerModelValue18.equals(bigIntegerModelValue56);
        java.lang.String str88 = bigIntegerModelValue18.asString();
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanModelValue7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue9);
        org.junit.Assert.assertNotNull(bigInteger10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(booleanModelValue14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue16);
        org.junit.Assert.assertNotNull(bigInteger17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1" + "'", str19, "1");
        org.junit.Assert.assertNotNull(bigInteger20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(bigInteger24);
        org.junit.Assert.assertNotNull(booleanModelValue25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue27);
        org.junit.Assert.assertNotNull(bigInteger28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1" + "'", str30, "1");
        org.junit.Assert.assertNotNull(bigInteger31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertNotNull(booleanModelValue33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue35);
        org.junit.Assert.assertNotNull(bigInteger36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(booleanModelValue41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue43);
        org.junit.Assert.assertNotNull(bigInteger44);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1" + "'", str48, "1");
        org.junit.Assert.assertNotNull(valueExpression49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(booleanModelValue52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue54);
        org.junit.Assert.assertNotNull(bigInteger55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "1" + "'", str57, "1");
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 1L + "'", long59 == 1L);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(booleanModelValue61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue63);
        org.junit.Assert.assertNotNull(bigInteger64);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(booleanModelValue69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue71);
        org.junit.Assert.assertNotNull(bigInteger72);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 1L + "'", long75 == 1L);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(bigDecimal79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "1" + "'", str88, "1");
    }

    @Test
    public void test10827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10827");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("[big integer 1,big integer 1]");
        org.jboss.dmr.StringModelValue stringModelValue3 = new org.jboss.dmr.StringModelValue("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3GXAAEGV4cHJlc3Np\nb24gImhpISJiAAAAAQF4");
        org.jboss.dmr.StringModelValue stringModelValue5 = new org.jboss.dmr.StringModelValue("AA==");
        boolean boolean6 = stringModelValue3.equals(stringModelValue5);
        boolean boolean7 = stringModelValue1.equals(stringModelValue5);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = stringModelValue1.asBoolean(false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test10828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10828");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long3 = intModelValue1.asLong((long) 'b');
        java.lang.String str4 = intModelValue1.asString();
        java.math.BigDecimal bigDecimal5 = intModelValue1.asBigDecimal();
        java.math.BigInteger bigInteger6 = intModelValue1.asBigInteger();
        int int8 = intModelValue1.asInt(112);
        int int9 = intModelValue1.asInt();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 32L + "'", long3 == 32L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "32" + "'", str4, "32");
        org.junit.Assert.assertNotNull(bigDecimal5);
        org.junit.Assert.assertNotNull(bigInteger6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 32 + "'", int8 == 32);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
    }

    @Test
    public void test10829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10829");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        int int9 = bigDecimalModelValue7.asInt(0);
        java.math.BigInteger bigInteger10 = bigDecimalModelValue7.asBigInteger();
        java.math.BigDecimal bigDecimal11 = bigDecimalModelValue7.asBigDecimal();
        java.math.BigInteger bigInteger12 = bigDecimalModelValue7.asBigInteger();
        org.jboss.dmr.ModelNode modelNode13 = new org.jboss.dmr.ModelNode(bigInteger12);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode16 = modelNode13.add("112.0", (double) 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(bigInteger10);
        org.junit.Assert.assertNotNull(bigDecimal11);
        org.junit.Assert.assertNotNull(bigInteger12);
    }

    @Test
    public void test10830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10830");
        java.lang.Throwable throwable2 = null;
        org.jboss.dmr.stream.ModelException modelException3 = new org.jboss.dmr.stream.ModelException("[(\"hi!\" => 0.0)]", throwable2);
        org.jboss.dmr.stream.ModelException modelException4 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException3);
        org.jboss.dmr.stream.ModelException modelException5 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException3);
        org.jboss.dmr.stream.ModelException modelException6 = new org.jboss.dmr.stream.ModelException("100", (java.lang.Throwable) modelException3);
    }

    @Test
    public void test10831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10831");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        java.lang.Long long1 = modelNode0.asLongOrNull();
        java.lang.String str2 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode0);
        org.jboss.dmr.ModelType modelType4 = org.jboss.dmr.ModelType.LONG;
        org.jboss.dmr.ModelNode modelNode5 = modelNode0.set("rO0ABXNyABFqYXZhLmxhbmcuSW50ZWdlchLioKT3gYc4AgABSQAFdmFsdWV4cgAQamF2YS5sYW5n\nLk51bWJlcoaslR0LlOCLAgAAeHAAAABk", modelType4);
        modelNode5.protect();
        java.lang.String str8 = modelNode5.asString("org.jboss.dmr.stream.ModelException: (\"\\\"bytes {\\\\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01\\\\n}\\\"\" => INT)");
        org.jboss.dmr.ModelNode modelNode11 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long12 = modelNode11.asLong();
        org.jboss.dmr.ValueExpression valueExpression13 = modelNode11.asExpression();
        java.math.BigDecimal bigDecimal14 = valueExpression13.resolveBigDecimal();
        java.lang.String str15 = valueExpression13.getExpressionString();
        java.math.BigDecimal bigDecimal16 = valueExpression13.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue17 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal16);
        boolean boolean18 = bigDecimalModelValue17.asBoolean();
        long long19 = bigDecimalModelValue17.asLong();
        java.lang.String str20 = bigDecimalModelValue17.asString();
        org.jboss.dmr.ModelNode modelNode22 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long23 = modelNode22.asLong();
        org.jboss.dmr.ValueExpression valueExpression24 = modelNode22.asExpression();
        java.math.BigDecimal bigDecimal25 = valueExpression24.resolveBigDecimal();
        java.lang.String str26 = valueExpression24.getExpressionString();
        java.math.BigDecimal bigDecimal27 = valueExpression24.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue28 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal27);
        boolean boolean29 = bigDecimalModelValue28.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression30 = bigDecimalModelValue28.asExpression();
        int int31 = bigDecimalModelValue28.asInt();
        long long32 = bigDecimalModelValue28.asLong();
        boolean boolean33 = bigDecimalModelValue17.equals(bigDecimalModelValue28);
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue34 = null;
        boolean boolean35 = bigDecimalModelValue28.equals(bigDecimalModelValue34);
        java.math.BigDecimal bigDecimal36 = bigDecimalModelValue28.asBigDecimal();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode37 = modelNode5.add("BYTES_VALUE", bigDecimal36);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4" + "'", str2, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4");
        org.junit.Assert.assertTrue("'" + modelType4 + "' != '" + org.jboss.dmr.ModelType.LONG + "'", modelType4.equals(org.jboss.dmr.ModelType.LONG));
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(\"rO0ABXNyABFqYXZhLmxhbmcuSW50ZWdlchLioKT3gYc4AgABSQAFdmFsdWV4cgAQamF2YS5sYW5n\nLk51bWJlcoaslR0LlOCLAgAAeHAAAABk\" => LONG)" + "'", str8, "(\"rO0ABXNyABFqYXZhLmxhbmcuSW50ZWdlchLioKT3gYc4AgABSQAFdmFsdWV4cgAQamF2YS5sYW5n\nLk51bWJlcoaslR0LlOCLAgAAeHAAAABk\" => LONG)");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertNotNull(valueExpression13);
        org.junit.Assert.assertNotNull(bigDecimal14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1.0" + "'", str15, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1.0" + "'", str20, "1.0");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertNotNull(valueExpression24);
        org.junit.Assert.assertNotNull(bigDecimal25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1.0" + "'", str26, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(valueExpression30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(bigDecimal36);
    }

    @Test
    public void test10832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10832");
        org.jboss.dmr.ExpressionValue expressionValue1 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue3 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean4 = expressionValue1.equals(expressionValue3);
        org.jboss.dmr.ExpressionValue expressionValue6 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue8 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean9 = expressionValue6.equals(expressionValue8);
        boolean boolean10 = expressionValue1.equals(expressionValue8);
        org.jboss.dmr.ModelNode modelNode12 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long13 = modelNode12.asLong();
        org.jboss.dmr.ValueExpression valueExpression14 = modelNode12.asExpression();
        boolean boolean15 = expressionValue8.equals((java.lang.Object) modelNode12);
        java.lang.String str16 = expressionValue8.asString();
        java.lang.String str17 = expressionValue8.asString();
        java.io.PrintWriter printWriter18 = null;
        // The following exception was thrown during execution in test generation
        try {
            expressionValue8.formatAsJSON(printWriter18, 97, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(valueExpression14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test10833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10833");
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode5 = modelNode2.set("hi!", 0.0d);
        org.jboss.dmr.Property property6 = new org.jboss.dmr.Property("", modelNode5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode8 = modelNode5.get(strArray7);
        org.jboss.dmr.ModelNode modelNode9 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode12 = modelNode9.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList13 = modelNode12.asList();
        org.jboss.dmr.ListModelValue listModelValue14 = new org.jboss.dmr.ListModelValue(modelNodeList13);
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue14);
        org.jboss.dmr.ModelValue modelValue16 = listModelValue14.resolve();
        int int18 = listModelValue14.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList19 = listModelValue14.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList20 = modelNode8.asPropertyList(propertyList19);
        org.jboss.dmr.ModelNode modelNode22 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode25 = modelNode22.set("hi!", 0.0d);
        org.jboss.dmr.Property property26 = new org.jboss.dmr.Property("", modelNode25);
        java.lang.String[] strArray27 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode28 = modelNode25.get(strArray27);
        org.jboss.dmr.ModelNode modelNode29 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode32 = modelNode29.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList33 = modelNode32.asList();
        org.jboss.dmr.ListModelValue listModelValue34 = new org.jboss.dmr.ListModelValue(modelNodeList33);
        org.jboss.dmr.ModelNode modelNode35 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue34);
        org.jboss.dmr.ModelValue modelValue36 = listModelValue34.resolve();
        int int38 = listModelValue34.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList39 = listModelValue34.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList40 = modelNode28.asPropertyList(propertyList39);
        modelNode8.setNoCopy(modelNode28);
        org.jboss.dmr.ModelNode modelNode43 = modelNode28.set((long) 100);
        org.jboss.dmr.ModelNode modelNode46 = modelNode28.set("(\"hi!\" => 0.0)", (int) (short) -1);
        org.jboss.dmr.PropertyModelValue propertyModelValue47 = new org.jboss.dmr.PropertyModelValue("\"35\"", modelNode46);
        org.jboss.dmr.ModelType modelType48 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode49 = new org.jboss.dmr.ModelNode(modelType48);
        org.jboss.dmr.ModelNode modelNode51 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode54 = modelNode51.set("hi!", 0.0d);
        org.jboss.dmr.Property property55 = new org.jboss.dmr.Property("", modelNode54);
        org.jboss.dmr.ModelNode modelNode56 = modelNode49.set(property55);
        org.jboss.dmr.PropertyModelValue propertyModelValue57 = new org.jboss.dmr.PropertyModelValue(property55);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList58 = propertyModelValue57.asList();
        org.jboss.dmr.ModelValue modelValue59 = propertyModelValue57.protect();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList60 = propertyModelValue57.asList();
        boolean boolean61 = propertyModelValue47.equals(propertyModelValue57);
        org.jboss.dmr.ModelNode modelNode63 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode66 = modelNode63.set("hi!", 0.0d);
        java.lang.String str67 = modelNode63.toString();
        org.jboss.dmr.ModelNode modelNode68 = modelNode63.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode70 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode73 = modelNode70.set("hi!", 0.0d);
        org.jboss.dmr.Property property74 = new org.jboss.dmr.Property("", modelNode73);
        org.jboss.dmr.ModelNode modelNode75 = modelNode63.set(property74);
        org.jboss.dmr.PropertyModelValue propertyModelValue77 = new org.jboss.dmr.PropertyModelValue("EXPRESSION_VALUE", modelNode75, false);
        org.jboss.dmr.Property property78 = propertyModelValue77.asProperty();
        org.jboss.dmr.LongModelValue longModelValue80 = new org.jboss.dmr.LongModelValue((long) (byte) -1);
        double double82 = longModelValue80.asDouble(0.0d);
        org.jboss.dmr.LongModelValue longModelValue84 = new org.jboss.dmr.LongModelValue((-1L));
        long long86 = longModelValue84.asLong((long) (byte) -1);
        byte[] byteArray87 = longModelValue84.asBytes();
        boolean boolean88 = longModelValue80.equals(longModelValue84);
        org.jboss.dmr.LongModelValue longModelValue90 = new org.jboss.dmr.LongModelValue(1L);
        long long92 = longModelValue90.asLong((long) (short) 0);
        java.math.BigInteger bigInteger93 = longModelValue90.asBigInteger();
        boolean boolean94 = longModelValue84.equals(longModelValue90);
        boolean boolean95 = propertyModelValue77.equals((java.lang.Object) longModelValue90);
        boolean boolean96 = propertyModelValue57.equals(propertyModelValue77);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode98 = propertyModelValue77.getChild((int) 'Z');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNodeList13);
        org.junit.Assert.assertNotNull(modelValue16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(propertyList19);
        org.junit.Assert.assertNotNull(propertyList20);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(modelNode28);
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertNotNull(modelNodeList33);
        org.junit.Assert.assertNotNull(modelValue36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(propertyList39);
        org.junit.Assert.assertNotNull(propertyList40);
        org.junit.Assert.assertNotNull(modelNode43);
        org.junit.Assert.assertNotNull(modelNode46);
        org.junit.Assert.assertTrue("'" + modelType48 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType48.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode54);
        org.junit.Assert.assertNotNull(modelNode56);
        org.junit.Assert.assertNotNull(modelNodeList58);
        org.junit.Assert.assertNotNull(modelValue59);
        org.junit.Assert.assertNotNull(modelNodeList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(modelNode66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(\"hi!\" => 0.0)" + "'", str67, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode68);
        org.junit.Assert.assertNotNull(modelNode73);
        org.junit.Assert.assertNotNull(modelNode75);
        org.junit.Assert.assertNotNull(property78);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-1.0d) + "'", double82 == (-1.0d));
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + (-1L) + "'", long86 == (-1L));
        org.junit.Assert.assertNotNull(byteArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray87), "[-1, -1, -1, -1, -1, -1, -1, -1]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 1L + "'", long92 == 1L);
        org.junit.Assert.assertNotNull(bigInteger93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test10834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10834");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) 100);
        org.jboss.dmr.ModelNode modelNode4 = new org.jboss.dmr.ModelNode(false);
        org.jboss.dmr.DoubleModelValue doubleModelValue6 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long7 = doubleModelValue6.asLong();
        boolean boolean8 = doubleModelValue6.asBoolean();
        byte[] byteArray9 = doubleModelValue6.asBytes();
        org.jboss.dmr.ModelNode modelNode10 = modelNode4.set(byteArray9);
        org.jboss.dmr.ModelNode modelNode11 = modelNode1.set("\"rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3GXAAEGV4cHJlc3Np\\nb24gImhpISJiAAAAAQF4\"", byteArray9);
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver13 = new org.jboss.dmr.ValueExpressionResolver();
        java.lang.String str15 = valueExpressionResolver13.resolvePart("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        java.lang.String str17 = valueExpressionResolver13.resolvePart("1.0");
        org.jboss.dmr.ModelType modelType18 = org.jboss.dmr.ModelType.PROPERTY;
        char char19 = modelType18.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue20 = org.jboss.dmr.TypeModelValue.of(modelType18);
        org.jboss.dmr.ModelType modelType21 = org.jboss.dmr.ModelType.PROPERTY;
        char char22 = modelType21.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue23 = org.jboss.dmr.TypeModelValue.of(modelType21);
        boolean boolean24 = typeModelValue20.equals(typeModelValue23);
        java.lang.String str25 = typeModelValue23.asString();
        org.jboss.dmr.ModelType modelType26 = org.jboss.dmr.ModelType.PROPERTY;
        char char27 = modelType26.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue28 = org.jboss.dmr.TypeModelValue.of(modelType26);
        org.jboss.dmr.ModelType modelType29 = org.jboss.dmr.ModelType.PROPERTY;
        char char30 = modelType29.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue31 = org.jboss.dmr.TypeModelValue.of(modelType29);
        boolean boolean32 = typeModelValue28.equals(typeModelValue31);
        java.lang.String str33 = typeModelValue31.asString();
        boolean boolean35 = typeModelValue31.asBoolean(true);
        boolean boolean36 = typeModelValue23.equals(typeModelValue31);
        org.jboss.dmr.ValueExpression valueExpression37 = typeModelValue31.asExpression();
        org.jboss.dmr.ModelType modelType38 = org.jboss.dmr.ModelType.PROPERTY;
        char char39 = modelType38.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue40 = org.jboss.dmr.TypeModelValue.of(modelType38);
        org.jboss.dmr.ModelType modelType41 = org.jboss.dmr.ModelType.PROPERTY;
        char char42 = modelType41.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue43 = org.jboss.dmr.TypeModelValue.of(modelType41);
        boolean boolean44 = typeModelValue40.equals(typeModelValue43);
        boolean boolean45 = typeModelValue31.equals(typeModelValue40);
        org.jboss.dmr.ModelType modelType46 = org.jboss.dmr.ModelType.PROPERTY;
        char char47 = modelType46.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue48 = org.jboss.dmr.TypeModelValue.of(modelType46);
        boolean boolean49 = typeModelValue48.asBoolean();
        boolean boolean50 = typeModelValue31.equals(typeModelValue48);
        org.jboss.dmr.ValueExpression valueExpression51 = typeModelValue48.asExpression();
        java.lang.String str52 = valueExpressionResolver13.resolve(valueExpression51);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode53 = modelNode1.add("rO0ABXQAUXJPMEFCWE55QUJkdmNtY3VhbUp2YzNNdVpHMXlMazF2WkdWc1RtOWtaUnd0b1VTZG80\nNC9EQUFBZUhCM0RIQUFBMmhwSVdVQUEyaHAKSVhnPQ==", valueExpression51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + modelType18 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType18.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char19 + "' != '" + 'p' + "'", char19 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue20);
        org.junit.Assert.assertTrue("'" + modelType21 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType21.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char22 + "' != '" + 'p' + "'", char22 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "PROPERTY" + "'", str25, "PROPERTY");
        org.junit.Assert.assertTrue("'" + modelType26 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType26.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char27 + "' != '" + 'p' + "'", char27 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue28);
        org.junit.Assert.assertTrue("'" + modelType29 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType29.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char30 + "' != '" + 'p' + "'", char30 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PROPERTY" + "'", str33, "PROPERTY");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(valueExpression37);
        org.junit.Assert.assertTrue("'" + modelType38 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType38.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char39 + "' != '" + 'p' + "'", char39 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue40);
        org.junit.Assert.assertTrue("'" + modelType41 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType41.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char42 + "' != '" + 'p' + "'", char42 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + modelType46 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType46.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char47 + "' != '" + 'p' + "'", char47 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(valueExpression51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "PROPERTY" + "'", str52, "PROPERTY");
    }

    @Test
    public void test10835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10835");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.setExpression("hi!", "hi!");
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode9 = modelNode6.set("hi!", 0.0d);
        org.jboss.dmr.Property property10 = new org.jboss.dmr.Property("", modelNode9);
        boolean boolean12 = modelNode9.equals((java.lang.Object) 100L);
        boolean boolean13 = modelNode1.equals(modelNode9);
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode18 = modelNode15.set("hi!", 0.0d);
        org.jboss.dmr.Property property19 = new org.jboss.dmr.Property("", modelNode18);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode21 = modelNode18.get(strArray20);
        org.jboss.dmr.ModelNode modelNode22 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int23 = modelNode22.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode24 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode27 = modelNode24.setExpression("hi!", "hi!");
        java.lang.String str28 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode24);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList29 = modelNode24.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode30 = modelNode22.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList29);
        org.jboss.dmr.ModelNode modelNode31 = modelNode21.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList29);
        org.jboss.dmr.ModelNode modelNode32 = modelNode9.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList29);
        org.jboss.dmr.ModelNode modelNode34 = modelNode9.add("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4");
        org.jboss.dmr.ModelType modelType35 = modelNode34.getType();
        byte[] byteArray38 = org.jboss.dmr.Base64.decode("true");
        org.jboss.dmr.ModelNode modelNode39 = modelNode34.set("\"(\\\"hi!\\\" => 0.0)\"", byteArray38);
        org.jboss.dmr.PropertyModelValue propertyModelValue40 = new org.jboss.dmr.PropertyModelValue("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]", modelNode39);
        org.jboss.dmr.ModelValue modelValue41 = propertyModelValue40.protect();
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(modelNode21);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str28, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList29);
        org.junit.Assert.assertNotNull(modelNode30);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertNotNull(modelNode34);
        org.junit.Assert.assertTrue("'" + modelType35 + "' != '" + org.jboss.dmr.ModelType.LIST + "'", modelType35.equals(org.jboss.dmr.ModelType.LIST));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-74, -69, -98]");
        org.junit.Assert.assertNotNull(modelNode39);
        org.junit.Assert.assertNotNull(modelValue41);
    }

    @Test
    public void test10836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10836");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.DOUBLE;
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(modelType0);
        org.jboss.dmr.LongModelValue longModelValue4 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str5 = longModelValue4.asString();
        byte[] byteArray6 = longModelValue4.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue7 = new org.jboss.dmr.BytesModelValue(byteArray6);
        java.lang.String str8 = bytesModelValue7.asString();
        int int9 = bytesModelValue7.asInt();
        long long11 = bytesModelValue7.asLong((long) (short) 1);
        long long12 = bytesModelValue7.asLong();
        java.math.BigDecimal bigDecimal13 = bytesModelValue7.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode14 = modelNode1.set("32", bigDecimal13);
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue15 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal13);
        boolean boolean16 = bigDecimalModelValue15.asBoolean();
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.DOUBLE + "'", modelType0.equals(org.jboss.dmr.ModelType.DOUBLE));
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1" + "'", str5, "1");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str8, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertNotNull(bigDecimal13);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test10837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10837");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        org.jboss.dmr.ModelNode modelNode6 = objectModelValue0.removeChild("true");
        int int7 = objectModelValue0.asInt();
        org.jboss.dmr.ModelValue modelValue9 = objectModelValue0.copy(true);
        int int11 = objectModelValue0.asInt((int) ' ');
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(modelNode4);
        org.junit.Assert.assertNull(modelNode6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(modelValue9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test10838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10838");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue5);
        org.jboss.dmr.ModelValue modelValue7 = listModelValue5.resolve();
        int int9 = listModelValue5.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList10 = listModelValue5.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList11 = listModelValue5.asPropertyList();
        org.jboss.dmr.ModelValue modelValue12 = listModelValue5.copy();
        org.jboss.dmr.ModelValue modelValue13 = listModelValue5.copy();
        org.jboss.dmr.ModelValue modelValue14 = listModelValue5.protect();
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertNotNull(modelValue7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(propertyList10);
        org.junit.Assert.assertNotNull(propertyList11);
        org.junit.Assert.assertNotNull(modelValue12);
        org.junit.Assert.assertNotNull(modelValue13);
        org.junit.Assert.assertNotNull(modelValue14);
    }

    @Test
    public void test10839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10839");
        org.jboss.dmr.ExpressionValue expressionValue1 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue3 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean4 = expressionValue1.equals(expressionValue3);
        org.jboss.dmr.ExpressionValue expressionValue6 = new org.jboss.dmr.ExpressionValue("1");
        org.jboss.dmr.ValueExpression valueExpression7 = expressionValue6.asExpression();
        boolean boolean8 = expressionValue1.equals(expressionValue6);
        org.jboss.dmr.ValueExpression valueExpression9 = expressionValue6.asExpression();
        java.lang.String str10 = expressionValue6.asString();
        java.io.PrintWriter printWriter11 = null;
        // The following exception was thrown during execution in test generation
        try {
            expressionValue6.format(printWriter11, (int) 'J', false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(valueExpression7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(valueExpression9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1" + "'", str10, "1");
    }

    @Test
    public void test10840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10840");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("BYTES_VALUE");
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) stringModelValue1);
        java.lang.String str3 = stringModelValue1.asString();
        java.lang.String str4 = stringModelValue1.asString();
        // The following exception was thrown during execution in test generation
        try {
            java.math.BigDecimal bigDecimal5 = stringModelValue1.asBigDecimal();
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: null");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "BYTES_VALUE" + "'", str3, "BYTES_VALUE");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "BYTES_VALUE" + "'", str4, "BYTES_VALUE");
    }

    @Test
    public void test10841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10841");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        org.jboss.dmr.ModelNode modelNode5 = objectModelValue0.asObject();
        org.jboss.dmr.ModelNode modelNode6 = objectModelValue0.asObject();
        boolean boolean8 = objectModelValue0.has("bytes {\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01\n}");
        java.util.List<org.jboss.dmr.Property> propertyList9 = objectModelValue0.asPropertyList();
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(propertyList9);
    }

    @Test
    public void test10842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10842");
        java.lang.Throwable throwable1 = null;
        org.jboss.dmr.stream.ModelException modelException2 = new org.jboss.dmr.stream.ModelException("[(\"hi!\" => 0.0)]", throwable1);
        org.jboss.dmr.stream.ModelException modelException3 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException2);
        org.jboss.dmr.stream.ModelException modelException4 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException2);
        java.lang.Throwable throwable6 = null;
        org.jboss.dmr.stream.ModelException modelException7 = new org.jboss.dmr.stream.ModelException("[(\"hi!\" => 0.0)]", throwable6);
        org.jboss.dmr.stream.ModelException modelException8 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException7);
        java.lang.Throwable throwable10 = null;
        org.jboss.dmr.stream.ModelException modelException11 = new org.jboss.dmr.stream.ModelException("[(\"hi!\" => 0.0)]", throwable10);
        org.jboss.dmr.stream.ModelException modelException12 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException11);
        modelException7.addSuppressed((java.lang.Throwable) modelException11);
        java.lang.Throwable[] throwableArray14 = modelException11.getSuppressed();
        modelException4.addSuppressed((java.lang.Throwable) modelException11);
        org.jboss.dmr.stream.ModelException modelException16 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException4);
        java.lang.Throwable throwable19 = null;
        org.jboss.dmr.stream.ModelException modelException20 = new org.jboss.dmr.stream.ModelException("[(\"hi!\" => 0.0)]", throwable19);
        org.jboss.dmr.stream.ModelException modelException21 = new org.jboss.dmr.stream.ModelException(throwable19);
        java.lang.Throwable throwable23 = null;
        org.jboss.dmr.stream.ModelException modelException24 = new org.jboss.dmr.stream.ModelException("[(\"hi!\" => 0.0)]", throwable23);
        modelException21.addSuppressed((java.lang.Throwable) modelException24);
        org.jboss.dmr.stream.ModelException modelException26 = new org.jboss.dmr.stream.ModelException("{\n    \"hi!\" : {\n        \"EXPRESSION_VALUE\" : \"hi!\"\n    }\n}", (java.lang.Throwable) modelException24);
        org.jboss.dmr.stream.ModelException modelException27 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException26);
        java.lang.Throwable throwable31 = null;
        org.jboss.dmr.stream.ModelException modelException32 = new org.jboss.dmr.stream.ModelException("[(\"hi!\" => 0.0)]", throwable31);
        org.jboss.dmr.stream.ModelException modelException33 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException32);
        org.jboss.dmr.stream.ModelException modelException34 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException32);
        org.jboss.dmr.stream.ModelException modelException35 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException34);
        org.jboss.dmr.stream.ModelException modelException36 = new org.jboss.dmr.stream.ModelException("(\"hi!\" => expression \"hi!\")", (java.lang.Throwable) modelException35);
        org.jboss.dmr.stream.ModelException modelException37 = new org.jboss.dmr.stream.ModelException("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3GXAAEGV4cHJlc3Np\nb24gImhpISJiAAAAAQF4", (java.lang.Throwable) modelException35);
        java.lang.Throwable throwable39 = null;
        org.jboss.dmr.stream.ModelException modelException40 = new org.jboss.dmr.stream.ModelException("[(\"hi!\" => 0.0)]", throwable39);
        org.jboss.dmr.stream.ModelException modelException41 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException40);
        org.jboss.dmr.stream.ModelException modelException42 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException40);
        java.lang.Throwable throwable44 = null;
        org.jboss.dmr.stream.ModelException modelException45 = new org.jboss.dmr.stream.ModelException("[(\"hi!\" => 0.0)]", throwable44);
        org.jboss.dmr.stream.ModelException modelException46 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException45);
        java.lang.Throwable throwable48 = null;
        org.jboss.dmr.stream.ModelException modelException49 = new org.jboss.dmr.stream.ModelException("[(\"hi!\" => 0.0)]", throwable48);
        org.jboss.dmr.stream.ModelException modelException50 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException49);
        modelException45.addSuppressed((java.lang.Throwable) modelException49);
        java.lang.Throwable[] throwableArray52 = modelException49.getSuppressed();
        modelException42.addSuppressed((java.lang.Throwable) modelException49);
        modelException37.addSuppressed((java.lang.Throwable) modelException42);
        org.jboss.dmr.stream.ModelException modelException55 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException42);
        modelException27.addSuppressed((java.lang.Throwable) modelException55);
        modelException4.addSuppressed((java.lang.Throwable) modelException55);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray52);
    }

    @Test
    public void test10843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10843");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long2 = doubleModelValue1.asLong();
        boolean boolean4 = doubleModelValue1.asBoolean(true);
        boolean boolean6 = doubleModelValue1.asBoolean(false);
        java.lang.String str7 = doubleModelValue1.toString();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10L + "'", long2 == 10L);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "10.0" + "'", str7, "10.0");
    }

    @Test
    public void test10844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10844");
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode(true);
        org.jboss.dmr.PropertyModelValue propertyModelValue3 = new org.jboss.dmr.PropertyModelValue("0.0", modelNode2);
        org.jboss.dmr.ModelNode modelNode5 = modelNode2.set((double) 100L);
        java.lang.Boolean boolean6 = modelNode5.asBooleanOrNull();
        org.jboss.dmr.LongModelValue longModelValue8 = new org.jboss.dmr.LongModelValue(1L);
        long long10 = longModelValue8.asLong((long) (short) 0);
        java.lang.String str11 = longModelValue8.asString();
        org.jboss.dmr.ValueExpression valueExpression12 = longModelValue8.asExpression();
        long long13 = longModelValue8.asLong();
        java.math.BigInteger bigInteger14 = longModelValue8.asBigInteger();
        java.math.BigDecimal bigDecimal15 = longModelValue8.asBigDecimal();
        org.jboss.dmr.ValueExpression valueExpression16 = longModelValue8.asExpression();
        org.jboss.dmr.ValueExpression valueExpression17 = longModelValue8.asExpression();
        org.jboss.dmr.ModelNode modelNode18 = modelNode5.set(valueExpression17);
        org.jboss.dmr.ModelNode modelNode21 = modelNode18.set("\"[(\\\"hi!\\\" => expression \\\"hi!\\\"),bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }]\"", false);
        org.jboss.dmr.BooleanModelValue booleanModelValue24 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        org.jboss.dmr.ValueExpression valueExpression25 = booleanModelValue24.asExpression();
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory27 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream28 = null;
        org.jboss.dmr.Base64.InputStream inputStream30 = new org.jboss.dmr.Base64.InputStream(inputStream28, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream31 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream30);
        org.jboss.dmr.stream.ModelReader modelReader32 = modelStreamFactory27.newModelReader((java.io.InputStream) inputStream31);
        java.io.OutputStream outputStream33 = null;
        org.jboss.dmr.Base64.OutputStream outputStream34 = new org.jboss.dmr.Base64.OutputStream(outputStream33);
        org.jboss.dmr.Base64.OutputStream outputStream35 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream34);
        outputStream34.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter38 = modelStreamFactory27.newModelWriter((java.io.OutputStream) outputStream34);
        org.jboss.dmr.stream.ModelWriter modelWriter39 = modelWriter38.writeListStart();
        org.jboss.dmr.IntModelValue intModelValue41 = new org.jboss.dmr.IntModelValue(10);
        byte[] byteArray42 = intModelValue41.asBytes();
        int int44 = intModelValue41.asInt(0);
        java.math.BigInteger bigInteger45 = intModelValue41.asBigInteger();
        org.jboss.dmr.stream.ModelWriter modelWriter46 = modelWriter39.writeBigInteger(bigInteger45);
        org.jboss.dmr.stream.ModelWriter modelWriter47 = modelWriter39.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter49 = modelWriter47.writeLong((long) (short) -1);
        booleanModelValue24.write(modelWriter47);
        java.math.BigInteger bigInteger51 = booleanModelValue24.asBigInteger();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode52 = modelNode18.add("\"bytes { 0x01 }\"", bigInteger51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + true + "'", boolean6, true);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1" + "'", str11, "1");
        org.junit.Assert.assertNotNull(valueExpression12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(bigInteger14);
        org.junit.Assert.assertNotNull(bigDecimal15);
        org.junit.Assert.assertNotNull(valueExpression16);
        org.junit.Assert.assertNotNull(valueExpression17);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertNotNull(modelNode21);
        org.junit.Assert.assertNotNull(booleanModelValue24);
        org.junit.Assert.assertNotNull(valueExpression25);
        org.junit.Assert.assertNotNull(modelStreamFactory27);
        org.junit.Assert.assertNotNull(modelReader32);
        org.junit.Assert.assertNotNull(modelWriter38);
        org.junit.Assert.assertNotNull(modelWriter39);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[0, 0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
        org.junit.Assert.assertNotNull(bigInteger45);
        org.junit.Assert.assertNotNull(modelWriter46);
        org.junit.Assert.assertNotNull(modelWriter47);
        org.junit.Assert.assertNotNull(modelWriter49);
        org.junit.Assert.assertNotNull(bigInteger51);
    }

    @Test
    public void test10845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10845");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str2 = longModelValue1.asString();
        double double4 = longModelValue1.asDouble((double) 32L);
        org.jboss.dmr.ValueExpression valueExpression5 = longModelValue1.asExpression();
        long long7 = longModelValue1.asLong((long) 'a');
        int int9 = longModelValue1.asInt((int) '4');
        java.lang.String str10 = longModelValue1.asString();
        long long11 = longModelValue1.asLong();
        java.math.BigInteger bigInteger12 = longModelValue1.asBigInteger();
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long15 = modelNode14.asLong();
        org.jboss.dmr.ValueExpression valueExpression16 = modelNode14.asExpression();
        java.math.BigDecimal bigDecimal17 = valueExpression16.resolveBigDecimal();
        java.lang.String str18 = valueExpression16.getExpressionString();
        java.math.BigDecimal bigDecimal19 = valueExpression16.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue20 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal19);
        int int22 = bigDecimalModelValue20.asInt(0);
        java.math.BigInteger bigInteger23 = bigDecimalModelValue20.asBigInteger();
        org.jboss.dmr.ModelNode modelNode25 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long26 = modelNode25.asLong();
        org.jboss.dmr.ValueExpression valueExpression27 = modelNode25.asExpression();
        java.math.BigDecimal bigDecimal28 = valueExpression27.resolveBigDecimal();
        java.lang.String str29 = valueExpression27.getExpressionString();
        java.math.BigDecimal bigDecimal30 = valueExpression27.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue31 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal30);
        boolean boolean32 = bigDecimalModelValue31.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression33 = bigDecimalModelValue31.asExpression();
        int int34 = bigDecimalModelValue31.asInt();
        long long35 = bigDecimalModelValue31.asLong();
        long long37 = bigDecimalModelValue31.asLong(32L);
        boolean boolean38 = bigDecimalModelValue20.equals(bigDecimalModelValue31);
        org.jboss.dmr.ValueExpression valueExpression39 = bigDecimalModelValue31.asExpression();
        java.math.BigInteger bigInteger40 = bigDecimalModelValue31.asBigInteger();
        boolean boolean41 = longModelValue1.equals((java.lang.Object) bigInteger40);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1" + "'", str2, "1");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(valueExpression5);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1" + "'", str10, "1");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertNotNull(bigInteger12);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertNotNull(valueExpression16);
        org.junit.Assert.assertNotNull(bigDecimal17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1.0" + "'", str18, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(bigInteger23);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertNotNull(valueExpression27);
        org.junit.Assert.assertNotNull(bigDecimal28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1.0" + "'", str29, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(valueExpression33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(valueExpression39);
        org.junit.Assert.assertNotNull(bigInteger40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test10846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10846");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.PROPERTY;
        char char1 = modelType0.getTypeChar();
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode(modelType0);
        org.jboss.dmr.LongModelValue longModelValue5 = new org.jboss.dmr.LongModelValue(1L);
        java.math.BigDecimal bigDecimal6 = longModelValue5.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode7 = modelNode2.set("[(\"hi!\" => 0.0)]", bigDecimal6);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode9 = modelNode7.insert((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType0.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char1 + "' != '" + 'p' + "'", char1 == 'p');
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertNotNull(modelNode7);
    }

    @Test
    public void test10847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10847");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.PROPERTY;
        char char1 = modelType0.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue2 = org.jboss.dmr.TypeModelValue.of(modelType0);
        org.jboss.dmr.ModelType modelType3 = org.jboss.dmr.ModelType.PROPERTY;
        char char4 = modelType3.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue5 = org.jboss.dmr.TypeModelValue.of(modelType3);
        boolean boolean6 = typeModelValue2.equals(typeModelValue5);
        java.lang.String str7 = typeModelValue5.asString();
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = modelNode11.asList();
        org.jboss.dmr.ListModelValue listModelValue13 = new org.jboss.dmr.ListModelValue(modelNodeList12);
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue13);
        org.jboss.dmr.ModelValue modelValue15 = listModelValue13.resolve();
        int int17 = listModelValue13.asInt((int) (byte) 100);
        boolean boolean18 = listModelValue13.asBoolean();
        org.jboss.dmr.ModelNode[] modelNodeArray19 = org.jboss.dmr.ListModelValue.NO_NODES;
        boolean boolean20 = listModelValue13.equals((java.lang.Object) modelNodeArray19);
        boolean boolean21 = typeModelValue5.equals((java.lang.Object) listModelValue13);
        org.jboss.dmr.ModelValue modelValue22 = listModelValue13.resolve();
        org.jboss.dmr.ModelValue modelValue23 = listModelValue13.protect();
        java.lang.Throwable throwable25 = null;
        org.jboss.dmr.stream.ModelException modelException26 = new org.jboss.dmr.stream.ModelException("[(\"hi!\" => 0.0)]", throwable25);
        org.jboss.dmr.stream.ModelException modelException27 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException26);
        java.lang.Throwable throwable29 = null;
        org.jboss.dmr.stream.ModelException modelException30 = new org.jboss.dmr.stream.ModelException("[(\"hi!\" => 0.0)]", throwable29);
        org.jboss.dmr.stream.ModelException modelException31 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException30);
        modelException26.addSuppressed((java.lang.Throwable) modelException30);
        boolean boolean33 = listModelValue13.equals((java.lang.Object) modelException26);
        java.util.List<org.jboss.dmr.Property> propertyList34 = listModelValue13.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList35 = listModelValue13.asPropertyList();
        java.lang.String str36 = listModelValue13.asString();
        java.io.PrintWriter printWriter37 = null;
        // The following exception was thrown during execution in test generation
        try {
            listModelValue13.formatAsJSON(printWriter37, 0, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType0.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char1 + "' != '" + 'p' + "'", char1 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue2);
        org.junit.Assert.assertTrue("'" + modelType3 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType3.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char4 + "' != '" + 'p' + "'", char4 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PROPERTY" + "'", str7, "PROPERTY");
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNodeList12);
        org.junit.Assert.assertNotNull(modelValue15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(modelNodeArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(modelValue22);
        org.junit.Assert.assertNotNull(modelValue23);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(propertyList34);
        org.junit.Assert.assertNotNull(propertyList35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str36, "[(\"hi!\" => 0.0)]");
    }

    @Test
    public void test10848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10848");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isLong();
        boolean boolean17 = modelReader15.isBigDecimal();
        boolean boolean18 = modelReader15.isBoolean();
        boolean boolean19 = modelReader15.isPropertyEnd();
        boolean boolean20 = modelReader15.hasNext();
        boolean boolean21 = modelReader15.isBigDecimal();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test10849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10849");
        byte[] byteArray1 = org.jboss.dmr.Base64.decode("true");
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode(byteArray1);
        org.jboss.dmr.ModelNode modelNode4 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode7 = modelNode4.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList8 = modelNode7.asList();
        org.jboss.dmr.ModelType modelType9 = modelNode7.getType();
        org.jboss.dmr.TypeModelValue typeModelValue10 = org.jboss.dmr.TypeModelValue.of(modelType9);
        org.jboss.dmr.ValueExpression valueExpression11 = typeModelValue10.asExpression();
        org.jboss.dmr.ValueExpression valueExpression12 = typeModelValue10.asExpression();
        org.jboss.dmr.ModelNode modelNode13 = modelNode2.set("(\"Expression \\\"true\\\"\" => (\"hi!\" => 0.0))", valueExpression12);
        org.jboss.dmr.ModelType modelType14 = modelNode13.getType();
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory16 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream17 = null;
        org.jboss.dmr.Base64.InputStream inputStream19 = new org.jboss.dmr.Base64.InputStream(inputStream17, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream20 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream19);
        org.jboss.dmr.stream.ModelReader modelReader21 = modelStreamFactory16.newModelReader((java.io.InputStream) inputStream20);
        java.io.OutputStream outputStream22 = null;
        org.jboss.dmr.Base64.OutputStream outputStream23 = new org.jboss.dmr.Base64.OutputStream(outputStream22);
        org.jboss.dmr.Base64.OutputStream outputStream24 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream23);
        outputStream23.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter27 = modelStreamFactory16.newModelWriter((java.io.OutputStream) outputStream23);
        java.io.OutputStream outputStream28 = null;
        org.jboss.dmr.Base64.OutputStream outputStream29 = new org.jboss.dmr.Base64.OutputStream(outputStream28);
        org.jboss.dmr.Base64.OutputStream outputStream30 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream29);
        org.jboss.dmr.Base64.OutputStream outputStream31 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream30);
        outputStream30.resumeEncoding();
        outputStream30.resumeEncoding();
        org.jboss.dmr.stream.ModelWriter modelWriter34 = modelStreamFactory16.newModelWriter((java.io.OutputStream) outputStream30);
        modelNode13.write(modelWriter34);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.stream.ModelWriter modelWriter37 = modelWriter34.writeLong(0L);
            org.junit.Assert.fail("Expected exception of type org.jboss.dmr.stream.ModelException; message: Expecting EOF");
        } catch (org.jboss.dmr.stream.ModelException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-74, -69, -98]");
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNodeList8);
        org.junit.Assert.assertTrue("'" + modelType9 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType9.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertNotNull(typeModelValue10);
        org.junit.Assert.assertNotNull(valueExpression11);
        org.junit.Assert.assertNotNull(valueExpression12);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertTrue("'" + modelType14 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType14.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertNotNull(modelStreamFactory16);
        org.junit.Assert.assertNotNull(modelReader21);
        org.junit.Assert.assertNotNull(modelWriter27);
        org.junit.Assert.assertNotNull(modelWriter34);
    }

    @Test
    public void test10850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10850");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isPropertyStart();
        boolean boolean17 = modelReader15.isInt();
        boolean boolean18 = modelReader15.isPropertyEnd();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test10851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10851");
        org.jboss.dmr.ExpressionValue expressionValue1 = new org.jboss.dmr.ExpressionValue("hi!");
        java.lang.String str2 = expressionValue1.toString();
        org.jboss.dmr.ModelNode modelNode4 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode7 = modelNode4.set("hi!", 0.0d);
        org.jboss.dmr.Property property8 = new org.jboss.dmr.Property("", modelNode7);
        boolean boolean9 = expressionValue1.equals((java.lang.Object) property8);
        org.jboss.dmr.ModelValue modelValue10 = expressionValue1.copy();
        org.jboss.dmr.ModelValue modelValue11 = expressionValue1.resolve();
        java.lang.String str12 = expressionValue1.asString();
        org.jboss.dmr.ValueExpression valueExpression13 = expressionValue1.asExpression();
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory15 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream16 = null;
        org.jboss.dmr.Base64.InputStream inputStream18 = new org.jboss.dmr.Base64.InputStream(inputStream16, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream19 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream18);
        org.jboss.dmr.stream.ModelReader modelReader20 = modelStreamFactory15.newModelReader((java.io.InputStream) inputStream19);
        java.io.OutputStream outputStream21 = null;
        org.jboss.dmr.Base64.OutputStream outputStream22 = new org.jboss.dmr.Base64.OutputStream(outputStream21);
        org.jboss.dmr.Base64.OutputStream outputStream23 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream22);
        outputStream22.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter26 = modelStreamFactory15.newModelWriter((java.io.OutputStream) outputStream22);
        org.jboss.dmr.stream.ModelWriter modelWriter27 = modelWriter26.writeListStart();
        org.jboss.dmr.IntModelValue intModelValue29 = new org.jboss.dmr.IntModelValue(10);
        byte[] byteArray30 = intModelValue29.asBytes();
        int int32 = intModelValue29.asInt(0);
        java.math.BigInteger bigInteger33 = intModelValue29.asBigInteger();
        org.jboss.dmr.stream.ModelWriter modelWriter34 = modelWriter27.writeBigInteger(bigInteger33);
        org.jboss.dmr.stream.ModelWriter modelWriter36 = modelWriter34.writeExpression("TYPE");
        expressionValue1.write(modelWriter36);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "expression \"hi!\"" + "'", str2, "expression \"hi!\"");
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(modelValue10);
        org.junit.Assert.assertNotNull(modelValue11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(valueExpression13);
        org.junit.Assert.assertNotNull(modelStreamFactory15);
        org.junit.Assert.assertNotNull(modelReader20);
        org.junit.Assert.assertNotNull(modelWriter26);
        org.junit.Assert.assertNotNull(modelWriter27);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertNotNull(bigInteger33);
        org.junit.Assert.assertNotNull(modelWriter34);
        org.junit.Assert.assertNotNull(modelWriter36);
    }

    @Test
    public void test10852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10852");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        java.lang.String str6 = listModelValue5.asString();
        long long7 = listModelValue5.asLong();
        java.lang.String str8 = listModelValue5.asString();
        org.jboss.dmr.ModelNode modelNode9 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode12 = modelNode9.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList13 = modelNode12.asList();
        org.jboss.dmr.ListModelValue listModelValue14 = new org.jboss.dmr.ListModelValue(modelNodeList13);
        java.lang.String str15 = listModelValue14.asString();
        long long16 = listModelValue14.asLong();
        int int18 = listModelValue14.asInt((int) '4');
        org.jboss.dmr.ModelValue modelValue19 = listModelValue14.protect();
        boolean boolean21 = listModelValue14.has((int) (short) 100);
        boolean boolean22 = listModelValue5.equals(listModelValue14);
        java.util.List<org.jboss.dmr.Property> propertyList23 = listModelValue14.asPropertyList();
        org.jboss.dmr.ModelValue modelValue24 = listModelValue14.protect();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode25 = listModelValue14.addChild();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str6, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str8, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNodeList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str15, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(modelValue19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(propertyList23);
        org.junit.Assert.assertNotNull(modelValue24);
    }

    @Test
    public void test10853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10853");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str2 = intModelValue1.asString();
        double double4 = intModelValue1.asDouble((double) 2);
        java.math.BigDecimal bigDecimal5 = intModelValue1.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode(bigDecimal5);
        org.jboss.dmr.ModelNode modelNode7 = modelNode6.clear();
        org.jboss.dmr.BooleanModelValue booleanModelValue10 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long11 = booleanModelValue10.asLong();
        org.jboss.dmr.ValueExpression valueExpression12 = booleanModelValue10.asExpression();
        boolean boolean14 = valueExpression12.equals((java.lang.Object) 'p');
        org.jboss.dmr.ExpressionValue expressionValue15 = new org.jboss.dmr.ExpressionValue(valueExpression12);
        org.jboss.dmr.ModelNode modelNode16 = new org.jboss.dmr.ModelNode(valueExpression12);
        org.jboss.dmr.ModelNode modelNode17 = modelNode6.set("112.0", modelNode16);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode19 = modelNode16.insert(0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "32" + "'", str2, "32");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 32.0d + "'", double4 == 32.0d);
        org.junit.Assert.assertNotNull(bigDecimal5);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(booleanModelValue10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertNotNull(valueExpression12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(modelNode17);
    }

    @Test
    public void test10854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10854");
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode1 = org.jboss.dmr.ModelNode.fromBase64String("big integer 1");
            org.junit.Assert.fail("Expected exception of type java.io.InvalidObjectException; message: Invalid type character 'n'");
        } catch (java.io.InvalidObjectException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10855");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.StringModelValue stringModelValue3 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.StringModelValue stringModelValue5 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        boolean boolean6 = stringModelValue3.equals(stringModelValue5);
        byte[] byteArray7 = stringModelValue5.asBytes();
        java.lang.Object obj8 = null;
        boolean boolean9 = stringModelValue5.equals(obj8);
        boolean boolean11 = stringModelValue5.equals((java.lang.Object) "TYPE_MODEL_VALUE");
        boolean boolean12 = stringModelValue1.equals(stringModelValue5);
        java.lang.String str13 = stringModelValue1.asString();
        java.io.PrintWriter printWriter14 = null;
        // The following exception was thrown during execution in test generation
        try {
            stringModelValue1.formatAsJSON(printWriter14, 97, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[40, 34, 34, 32, 61, 62, 32, 40, 34, 104, 105, 33, 34, 32, 61, 62, 32, 48, 46, 48, 41, 41]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Expression \"true\"" + "'", str13, "Expression \"true\"");
    }

    @Test
    public void test10856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10856");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.PROPERTY;
        char char1 = modelType0.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue2 = org.jboss.dmr.TypeModelValue.of(modelType0);
        boolean boolean3 = typeModelValue2.asBoolean();
        java.lang.String str4 = typeModelValue2.asString();
        boolean boolean6 = typeModelValue2.asBoolean(false);
        boolean boolean8 = typeModelValue2.asBoolean(false);
        boolean boolean10 = typeModelValue2.asBoolean(false);
        java.io.DataOutput dataOutput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            typeModelValue2.writeExternal(dataOutput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType0.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char1 + "' != '" + 'p' + "'", char1 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PROPERTY" + "'", str4, "PROPERTY");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test10857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10857");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue((long) '#');
        java.math.BigDecimal bigDecimal2 = longModelValue1.asBigDecimal();
        double double4 = longModelValue1.asDouble((double) 35L);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory6 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream7 = null;
        org.jboss.dmr.Base64.InputStream inputStream9 = new org.jboss.dmr.Base64.InputStream(inputStream7, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream10 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream9);
        org.jboss.dmr.stream.ModelReader modelReader11 = modelStreamFactory6.newModelReader((java.io.InputStream) inputStream10);
        java.io.OutputStream outputStream12 = null;
        org.jboss.dmr.Base64.OutputStream outputStream13 = new org.jboss.dmr.Base64.OutputStream(outputStream12);
        org.jboss.dmr.Base64.OutputStream outputStream14 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream13);
        outputStream13.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter17 = modelStreamFactory6.newModelWriter((java.io.OutputStream) outputStream13);
        org.jboss.dmr.stream.ModelWriter modelWriter18 = modelWriter17.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter20 = modelWriter17.writeInt((int) '4');
        org.jboss.dmr.stream.ModelWriter modelWriter22 = modelWriter20.writeBoolean(true);
        org.jboss.dmr.stream.ModelWriter modelWriter24 = modelWriter20.writeBoolean(true);
        org.jboss.dmr.stream.ModelWriter modelWriter26 = modelWriter20.writeString("(\"true\" => INT)");
        org.jboss.dmr.stream.ModelWriter modelWriter28 = modelWriter26.writeDouble((double) (short) 0);
        longModelValue1.write(modelWriter26);
        int int31 = longModelValue1.asInt((int) 'a');
        org.junit.Assert.assertNotNull(bigDecimal2);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 35.0d + "'", double4 == 35.0d);
        org.junit.Assert.assertNotNull(modelStreamFactory6);
        org.junit.Assert.assertNotNull(modelReader11);
        org.junit.Assert.assertNotNull(modelWriter17);
        org.junit.Assert.assertNotNull(modelWriter18);
        org.junit.Assert.assertNotNull(modelWriter20);
        org.junit.Assert.assertNotNull(modelWriter22);
        org.junit.Assert.assertNotNull(modelWriter24);
        org.junit.Assert.assertNotNull(modelWriter26);
        org.junit.Assert.assertNotNull(modelWriter28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 35 + "'", int31 == 35);
    }

    @Test
    public void test10858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10858");
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode5 = modelNode2.set("hi!", 0.0d);
        org.jboss.dmr.Property property6 = new org.jboss.dmr.Property("", modelNode5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode8 = modelNode5.get(strArray7);
        org.jboss.dmr.ModelNode modelNode9 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode12 = modelNode9.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList13 = modelNode12.asList();
        org.jboss.dmr.ListModelValue listModelValue14 = new org.jboss.dmr.ListModelValue(modelNodeList13);
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue14);
        org.jboss.dmr.ModelValue modelValue16 = listModelValue14.resolve();
        int int18 = listModelValue14.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList19 = listModelValue14.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList20 = modelNode8.asPropertyList(propertyList19);
        org.jboss.dmr.ModelNode modelNode23 = modelNode8.setExpression("\"(\\\"hi!\\\" => 0.0)\"", "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.jboss.dmr.ModelNode modelNode26 = modelNode8.set("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AloAeA==", (double) 0.0f);
        boolean boolean28 = modelNode8.hasDefined((int) 'b');
        org.jboss.dmr.ModelNode modelNode31 = modelNode8.set("Expression \"hi!\"", false);
        boolean boolean32 = modelNode8.isProtected();
        org.jboss.dmr.ModelNode modelNode35 = modelNode8.setExpression("[{ \"hi!\" : { \"EXPRESSION_VALUE\" : \"hi!\" } },\"rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4\"]", "(\"rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=\" => (\"hi!\" => expression \"hi!\"))");
        org.jboss.dmr.Property property36 = new org.jboss.dmr.Property("(\"(\\\"org.jboss.dmr.stream.ModelException: [(\\\\\\\"hi!\\\\\\\" => 0.0)]\\\" => expression \\\"true\\\")\" => (\"hi!\" => 100L))", modelNode35);
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNodeList13);
        org.junit.Assert.assertNotNull(modelValue16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(propertyList19);
        org.junit.Assert.assertNotNull(propertyList20);
        org.junit.Assert.assertNotNull(modelNode23);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(modelNode35);
    }

    @Test
    public void test10859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10859");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(modelType0);
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode6 = modelNode3.set("hi!", 0.0d);
        org.jboss.dmr.Property property7 = new org.jboss.dmr.Property("", modelNode6);
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(property7);
        org.jboss.dmr.PropertyModelValue propertyModelValue9 = new org.jboss.dmr.PropertyModelValue(property7);
        org.jboss.dmr.ModelValue modelValue10 = propertyModelValue9.copy();
        org.jboss.dmr.ModelNode modelNode11 = propertyModelValue9.asObject();
        java.util.Set<java.lang.String> strSet12 = propertyModelValue9.getKeys();
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType0.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelValue10);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(strSet12);
    }

    @Test
    public void test10860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10860");
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode1 = org.jboss.dmr.ModelNode.fromJSONString("H4sIAAAAAAAAANNQUlKwtVPQUMrIVASzDPQMNDUBLH2F1RYAAAA=");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unexpected character 'H' while reading DMR stream");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10861");
        org.jboss.dmr.ExpressionValue expressionValue1 = new org.jboss.dmr.ExpressionValue("(\"[1]\" => big decimal 1)");
    }

    @Test
    public void test10862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10862");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        long long2 = objectModelValue0.asLong((long) (-1));
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.getChild("[(\"H4sIAAAAAAAAAAMAAAAAAAAAAAA=\" => big integer 32)]");
        java.lang.String str5 = objectModelValue0.asString();
        int int6 = objectModelValue0.asInt();
        java.io.PrintWriter printWriter7 = null;
        // The following exception was thrown during execution in test generation
        try {
            objectModelValue0.format(printWriter7, 0, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{\"[(\\\"H4sIAAAAAAAAAAMAAAAAAAAAAAA=\\\" => big integer 32)]\" => undefined}" + "'", str5, "{\"[(\\\"H4sIAAAAAAAAAAMAAAAAAAAAAAA=\\\" => big integer 32)]\" => undefined}");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }

    @Test
    public void test10863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10863");
        org.jboss.dmr.ModelNode modelNode1 = org.jboss.dmr.ModelNode.fromString("bytes {\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01\n}");
        org.jboss.dmr.ModelNode modelNode3 = modelNode1.set((int) (short) 100);
        org.jboss.dmr.ModelNode modelNode4 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode7 = modelNode4.set("hi!", 0.0d);
        java.lang.String str8 = modelNode4.toString();
        org.jboss.dmr.ModelNode modelNode9 = modelNode4.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode11 = modelNode4.set(100);
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode((double) 100);
        org.jboss.dmr.ModelNode modelNode16 = modelNode14.set((int) '#');
        org.jboss.dmr.ModelNode modelNode17 = modelNode4.setNoCopy("EXPRESSION_VALUE", modelNode16);
        org.jboss.dmr.ModelNode modelNode18 = modelNode17.setEmptyList();
        modelNode1.setNoCopy(modelNode18);
        org.jboss.dmr.ModelNode modelNode20 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode21 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode24 = modelNode21.set("hi!", 0.0d);
        java.lang.String str25 = modelNode21.toString();
        org.jboss.dmr.ModelNode modelNode26 = modelNode21.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode28 = modelNode21.set(100);
        org.jboss.dmr.ModelNode modelNode29 = modelNode20.add(modelNode21);
        org.jboss.dmr.ModelNode modelNode31 = modelNode29.set((double) (-1.0f));
        byte[] byteArray32 = modelNode31.asBytesOrNull();
        org.jboss.dmr.ModelNode modelNode33 = modelNode1.set(byteArray32);
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(\"hi!\" => 0.0)" + "'", str8, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(\"hi!\" => 0.0)" + "'", str25, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertNotNull(modelNode28);
        org.junit.Assert.assertNotNull(modelNode29);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-65, -16, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(modelNode33);
    }

    @Test
    public void test10864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10864");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue(10);
        boolean boolean3 = intModelValue1.asBoolean(false);
        byte[] byteArray4 = intModelValue1.asBytes();
        java.lang.String str5 = intModelValue1.asString();
        java.lang.String str6 = intModelValue1.asString();
        boolean boolean7 = intModelValue1.asBoolean();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[0, 0, 0, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "10" + "'", str5, "10");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "10" + "'", str6, "10");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test10865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10865");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str2 = longModelValue1.asString();
        byte[] byteArray3 = longModelValue1.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue4 = new org.jboss.dmr.BytesModelValue(byteArray3);
        double double5 = bytesModelValue4.asDouble();
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode((double) 100);
        org.jboss.dmr.ModelNode modelNode9 = modelNode7.set((int) '#');
        java.lang.Boolean boolean10 = modelNode7.asBooleanOrNull();
        java.lang.String str12 = modelNode7.asString("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        boolean boolean13 = bytesModelValue4.equals((java.lang.Object) modelNode7);
        int int15 = bytesModelValue4.asInt(52);
        double double16 = bytesModelValue4.asDouble();
        org.jboss.dmr.ModelNode modelNode17 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode18 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode21 = modelNode18.set("hi!", 0.0d);
        java.lang.String str22 = modelNode18.toString();
        org.jboss.dmr.ModelNode modelNode23 = modelNode18.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode25 = modelNode18.set(100);
        org.jboss.dmr.ModelNode modelNode26 = modelNode17.add(modelNode18);
        int int28 = modelNode18.asInt(2);
        org.jboss.dmr.ModelType modelType30 = org.jboss.dmr.ModelType.BYTES;
        org.jboss.dmr.ModelNode modelNode31 = modelNode18.set("[(\"hi!\" => 0.0)]", modelType30);
        org.jboss.dmr.TypeModelValue typeModelValue32 = org.jboss.dmr.TypeModelValue.of(modelType30);
        boolean boolean33 = bytesModelValue4.equals((java.lang.Object) modelType30);
        org.jboss.dmr.ObjectModelValue objectModelValue34 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode35 = objectModelValue34.asObject();
        java.util.Set<java.lang.String> strSet36 = objectModelValue34.getKeys();
        org.jboss.dmr.ModelNode modelNode38 = objectModelValue34.removeChild("hi!");
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList39 = objectModelValue34.asList();
        org.jboss.dmr.ModelValue modelValue40 = objectModelValue34.resolve();
        boolean boolean41 = bytesModelValue4.equals((java.lang.Object) modelValue40);
        java.lang.String str42 = bytesModelValue4.asString();
        java.math.BigInteger bigInteger43 = bytesModelValue4.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue44 = new org.jboss.dmr.BigIntegerModelValue(bigInteger43);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1" + "'", str2, "1");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.9E-324d + "'", double5 == 4.9E-324d);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertEquals("'" + boolean10 + "' != '" + true + "'", boolean10, true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "35" + "'", str12, "35");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.9E-324d + "'", double16 == 4.9E-324d);
        org.junit.Assert.assertNotNull(modelNode21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(\"hi!\" => 0.0)" + "'", str22, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode23);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        org.junit.Assert.assertTrue("'" + modelType30 + "' != '" + org.jboss.dmr.ModelType.BYTES + "'", modelType30.equals(org.jboss.dmr.ModelType.BYTES));
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(typeModelValue32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(modelNode35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNull(modelNode38);
        org.junit.Assert.assertNotNull(modelNodeList39);
        org.junit.Assert.assertNotNull(modelValue40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str42, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertNotNull(bigInteger43);
    }

    @Test
    public void test10866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10866");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.setExpression("hi!", "hi!");
        java.lang.String str4 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode0);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList5 = modelNode0.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode7 = modelNode0.set((double) 0);
        org.jboss.dmr.ModelNode modelNode8 = modelNode0.clear();
        int int10 = modelNode8.asInt(112);
        java.lang.String str12 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode8, (int) 'b');
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode("EXPRESSION_VALUE");
        org.jboss.dmr.BooleanModelValue booleanModelValue17 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger18 = booleanModelValue17.asBigInteger();
        byte[] byteArray19 = booleanModelValue17.asBytes();
        org.jboss.dmr.ModelNode modelNode20 = modelNode14.set("expression \"hi!\"", byteArray19);
        org.jboss.dmr.ModelNode modelNode22 = modelNode20.setExpression("undefined");
        org.jboss.dmr.ModelNode modelNode23 = modelNode8.add(modelNode22);
        boolean boolean25 = modelNode8.hasDefined("(\"Expression \\\"true\\\"\" => (\"org.jboss.dmr.stream.ModelException: [(\\\"hi!\\\" => 0.0)]\" => (\"hi!\" => 0.0)))");
        org.jboss.dmr.ModelNode modelNode28 = modelNode8.set("Expression \"10.0\"", 112);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode30 = modelNode28.remove(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str4, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList5);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 112 + "'", int10 == 112);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "H4sIAAAAAAAAAFvzloG1uIhBPL8oXS8rKb+4WC8lt0jPNz8lNccPSMjoLnSZu7jPnoeBoaKgnLG0\nAgDPxTfOMAAAAA==" + "'", str12, "H4sIAAAAAAAAAFvzloG1uIhBPL8oXS8rKb+4WC8lt0jPNz8lNccPSMjoLnSZu7jPnoeBoaKgnLG0\nAgDPxTfOMAAAAA==");
        org.junit.Assert.assertNotNull(booleanModelValue17);
        org.junit.Assert.assertNotNull(bigInteger18);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1]");
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(modelNode22);
        org.junit.Assert.assertNotNull(modelNode23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(modelNode28);
    }

    @Test
    public void test10867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10867");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        java.lang.String str5 = modelNode1.toString();
        org.jboss.dmr.ModelNode modelNode6 = modelNode1.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(100);
        org.jboss.dmr.ModelNode modelNode11 = new org.jboss.dmr.ModelNode((double) 100);
        org.jboss.dmr.ModelNode modelNode13 = modelNode11.set((int) '#');
        org.jboss.dmr.ModelNode modelNode14 = modelNode1.setNoCopy("EXPRESSION_VALUE", modelNode13);
        org.jboss.dmr.ModelNode modelNode17 = modelNode1.setExpression("(\"\" => (\"hi!\" => 0.0))", "");
        org.jboss.dmr.PropertyModelValue propertyModelValue18 = new org.jboss.dmr.PropertyModelValue("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3R3AANW9yZy5qYm9z\ncy5kbXIuc3RyZWFtLk1vZGVsRXhjZXB0aW9uOiBbKCJoaSEiID0+IDAuMCldcAADaGkhRAAAAAAA\nAAAAeA==", modelNode17);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelType modelType19 = modelNode17.asType();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(\"hi!\" => 0.0)" + "'", str5, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(modelNode17);
    }

    @Test
    public void test10868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10868");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        java.lang.String str6 = listModelValue5.asString();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList7 = listModelValue5.asList();
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = modelNode11.asList();
        org.jboss.dmr.ListModelValue listModelValue13 = new org.jboss.dmr.ListModelValue(modelNodeList12);
        java.lang.String str14 = listModelValue13.asString();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList15 = listModelValue13.asList();
        boolean boolean16 = listModelValue5.equals(listModelValue13);
        org.jboss.dmr.ModelValue modelValue17 = listModelValue5.copy();
        boolean boolean19 = listModelValue5.asBoolean(true);
        boolean boolean21 = listModelValue5.has(32);
        org.jboss.dmr.ModelValue modelValue22 = listModelValue5.protect();
        long long24 = listModelValue5.asLong((long) (short) 10);
        boolean boolean25 = listModelValue5.asBoolean();
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str6, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertNotNull(modelNodeList7);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNodeList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str14, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertNotNull(modelNodeList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(modelValue17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(modelValue22);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1L + "'", long24 == 1L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test10869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10869");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        org.jboss.dmr.ModelNode modelNode3 = objectModelValue0.getChild("TYPE_MODEL_VALUE");
        org.jboss.dmr.ModelNode modelNode5 = objectModelValue0.getChild("[(\"hi!\" => 0.0)]");
        java.util.List<org.jboss.dmr.Property> propertyList6 = objectModelValue0.asPropertyList();
        org.jboss.dmr.ModelNode modelNode8 = objectModelValue0.getChild("\"(\\\"hi!\\\" => 0.0)\"");
        java.lang.String str9 = objectModelValue0.asString();
        org.jboss.dmr.ModelNode modelNode11 = objectModelValue0.getChild("rO0ABXQADEFBQUFBQUFBQUFFPQ==");
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(propertyList6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{\"TYPE_MODEL_VALUE\" => undefined,\"[(\\\"hi!\\\" => 0.0)]\" => undefined,\"\\\"(\\\\\\\"hi!\\\\\\\" => 0.0)\\\"\" => undefined}" + "'", str9, "{\"TYPE_MODEL_VALUE\" => undefined,\"[(\\\"hi!\\\" => 0.0)]\" => undefined,\"\\\"(\\\\\\\"hi!\\\\\\\" => 0.0)\\\"\" => undefined}");
        org.junit.Assert.assertNotNull(modelNode11);
    }

    @Test
    public void test10870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10870");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue(0.0d);
        java.lang.String str2 = doubleModelValue1.asString();
        int int3 = doubleModelValue1.asInt();
        org.jboss.dmr.DoubleModelValue doubleModelValue5 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long6 = doubleModelValue5.asLong();
        boolean boolean7 = doubleModelValue5.asBoolean();
        byte[] byteArray8 = doubleModelValue5.asBytes();
        int int10 = doubleModelValue5.asInt((int) ' ');
        boolean boolean11 = doubleModelValue5.asBoolean();
        java.math.BigInteger bigInteger12 = doubleModelValue5.asBigInteger();
        org.jboss.dmr.DoubleModelValue doubleModelValue14 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long15 = doubleModelValue14.asLong();
        boolean boolean16 = doubleModelValue5.equals(doubleModelValue14);
        boolean boolean17 = doubleModelValue1.equals(doubleModelValue5);
        int int18 = doubleModelValue5.asInt();
        double double19 = doubleModelValue5.asDouble();
        long long21 = doubleModelValue5.asLong((long) 'l');
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0.0" + "'", str2, "0.0");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10L + "'", long6 == 10L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(bigInteger12);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10L + "'", long15 == 10L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10L + "'", long21 == 10L);
    }

    @Test
    public void test10871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10871");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long3 = intModelValue1.asLong((long) '#');
        org.jboss.dmr.IntModelValue intModelValue5 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long7 = intModelValue5.asLong((long) 'b');
        java.lang.String str8 = intModelValue5.asString();
        boolean boolean9 = intModelValue1.equals(intModelValue5);
        boolean boolean11 = intModelValue5.asBoolean(true);
        int int12 = intModelValue5.asInt();
        int int13 = intModelValue5.asInt();
        double double15 = intModelValue5.asDouble((double) 'p');
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 32L + "'", long3 == 32L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 32L + "'", long7 == 32L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "32" + "'", str8, "32");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 32.0d + "'", double15 == 32.0d);
    }

    @Test
    public void test10872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10872");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str2 = intModelValue1.asString();
        long long3 = intModelValue1.asLong();
        org.jboss.dmr.ModelValue modelValue4 = intModelValue1.protect();
        java.lang.String str5 = intModelValue1.asString();
        double double6 = intModelValue1.asDouble();
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        org.jboss.dmr.Property property12 = new org.jboss.dmr.Property("", modelNode11);
        java.lang.String[] strArray13 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode14 = modelNode11.get(strArray13);
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode18 = modelNode15.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList19 = modelNode18.asList();
        org.jboss.dmr.ListModelValue listModelValue20 = new org.jboss.dmr.ListModelValue(modelNodeList19);
        org.jboss.dmr.ModelNode modelNode21 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue20);
        org.jboss.dmr.ModelValue modelValue22 = listModelValue20.resolve();
        int int24 = listModelValue20.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList25 = listModelValue20.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList26 = modelNode14.asPropertyList(propertyList25);
        boolean boolean28 = modelNode14.has(0);
        boolean boolean29 = intModelValue1.equals((java.lang.Object) boolean28);
        java.math.BigDecimal bigDecimal30 = intModelValue1.asBigDecimal();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "32" + "'", str2, "32");
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 32L + "'", long3 == 32L);
        org.junit.Assert.assertNotNull(modelValue4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "32" + "'", str5, "32");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 32.0d + "'", double6 == 32.0d);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertNotNull(modelNodeList19);
        org.junit.Assert.assertNotNull(modelValue22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(propertyList25);
        org.junit.Assert.assertNotNull(propertyList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(bigDecimal30);
    }

    @Test
    public void test10873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10873");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue((long) '4');
        java.math.BigDecimal bigDecimal2 = longModelValue1.asBigDecimal();
        int int3 = longModelValue1.asInt();
        org.jboss.dmr.ValueExpression valueExpression4 = longModelValue1.asExpression();
        long long6 = longModelValue1.asLong((long) 1);
        long long7 = longModelValue1.asLong();
        org.jboss.dmr.ModelNode modelNode9 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long10 = modelNode9.asLong();
        org.jboss.dmr.ValueExpression valueExpression11 = modelNode9.asExpression();
        java.math.BigDecimal bigDecimal12 = valueExpression11.resolveBigDecimal();
        java.lang.String str13 = valueExpression11.getExpressionString();
        java.math.BigDecimal bigDecimal14 = valueExpression11.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue15 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal14);
        boolean boolean16 = bigDecimalModelValue15.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression17 = bigDecimalModelValue15.asExpression();
        int int18 = bigDecimalModelValue15.asInt();
        long long19 = bigDecimalModelValue15.asLong();
        long long21 = bigDecimalModelValue15.asLong(32L);
        int int23 = bigDecimalModelValue15.asInt(10);
        java.lang.String str24 = bigDecimalModelValue15.asString();
        boolean boolean25 = bigDecimalModelValue15.asBoolean();
        boolean boolean26 = longModelValue1.equals((java.lang.Object) boolean25);
        double double27 = longModelValue1.asDouble();
        org.junit.Assert.assertNotNull(bigDecimal2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertNotNull(valueExpression4);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 52L + "'", long6 == 52L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 52L + "'", long7 == 52L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertNotNull(valueExpression11);
        org.junit.Assert.assertNotNull(bigDecimal12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1.0" + "'", str13, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(valueExpression17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1.0" + "'", str24, "1.0");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 52.0d + "'", double27 == 52.0d);
    }

    @Test
    public void test10874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10874");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        org.jboss.dmr.Validation.validate(modelNode0, "[(\"hi!\" => 0.0)]");
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode9 = modelNode6.setExpression("hi!", "hi!");
        java.lang.String str10 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode6);
        boolean boolean12 = modelNode6.hasDefined((-1));
        org.jboss.dmr.BooleanModelValue booleanModelValue13 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double14 = booleanModelValue13.asDouble();
        org.jboss.dmr.ModelValue modelValue15 = booleanModelValue13.copy();
        java.math.BigInteger bigInteger16 = booleanModelValue13.asBigInteger();
        org.jboss.dmr.ModelNode modelNode17 = new org.jboss.dmr.ModelNode(bigInteger16);
        org.jboss.dmr.ModelNode modelNode18 = new org.jboss.dmr.ModelNode(bigInteger16);
        org.jboss.dmr.ModelNode modelNode19 = modelNode6.set(bigInteger16);
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue20 = new org.jboss.dmr.BigIntegerModelValue(bigInteger16);
        org.jboss.dmr.ModelNode modelNode21 = modelNode0.set(bigInteger16);
        java.math.BigDecimal bigDecimal22 = modelNode0.asBigDecimalOrNull();
        org.jboss.dmr.DoubleModelValue doubleModelValue25 = new org.jboss.dmr.DoubleModelValue((double) (short) 0);
        byte[] byteArray26 = doubleModelValue25.asBytes();
        org.jboss.dmr.ModelNode modelNode27 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) doubleModelValue25);
        org.jboss.dmr.DoubleModelValue doubleModelValue28 = null;
        boolean boolean29 = doubleModelValue25.equals(doubleModelValue28);
        org.jboss.dmr.ObjectModelValue objectModelValue30 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode31 = objectModelValue30.asObject();
        java.util.Set<java.lang.String> strSet32 = objectModelValue30.getKeys();
        org.jboss.dmr.ModelNode modelNode34 = objectModelValue30.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        boolean boolean35 = objectModelValue30.asBoolean();
        org.jboss.dmr.ModelNode modelNode37 = objectModelValue30.getChild("1L");
        org.jboss.dmr.ObjectModelValue objectModelValue38 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode39 = objectModelValue38.asObject();
        java.util.Set<java.lang.String> strSet40 = objectModelValue38.getKeys();
        org.jboss.dmr.ModelNode modelNode42 = objectModelValue38.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        boolean boolean43 = objectModelValue38.asBoolean();
        int int45 = objectModelValue38.asInt((int) 'b');
        int int47 = objectModelValue38.asInt((int) '#');
        boolean boolean48 = objectModelValue30.equals(objectModelValue38);
        int int49 = objectModelValue38.asInt();
        java.util.Set<java.lang.String> strSet50 = objectModelValue38.getKeys();
        org.jboss.dmr.ModelValue modelValue51 = objectModelValue38.resolve();
        boolean boolean52 = doubleModelValue25.equals((java.lang.Object) objectModelValue38);
        org.jboss.dmr.ModelNode modelNode53 = objectModelValue38.asObject();
        org.jboss.dmr.Property property55 = new org.jboss.dmr.Property("(\"rO0ABXNyABFqYXZhLmxhbmcuSW50ZWdlchLioKT3gYc4AgABSQAFdmFsdWV4cgAQamF2YS5sYW5n\nLk51bWJlcoaslR0LlOCLAgAAeHAAAABk\" => LONG)", modelNode53, false);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode56 = modelNode0.add(property55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str10, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(booleanModelValue13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue15);
        org.junit.Assert.assertNotNull(bigInteger16);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(modelNode21);
        org.junit.Assert.assertNotNull(bigDecimal22);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNull(modelNode34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(modelNode37);
        org.junit.Assert.assertNotNull(modelNode39);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNull(modelNode42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNotNull(modelValue51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(modelNode53);
    }

    @Test
    public void test10875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10875");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        org.jboss.dmr.Validation.validate(modelNode1, "10.0");
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue((long) '4');
        java.math.BigDecimal bigDecimal7 = longModelValue6.asBigDecimal();
        int int8 = longModelValue6.asInt();
        org.jboss.dmr.ValueExpression valueExpression9 = longModelValue6.asExpression();
        long long11 = longModelValue6.asLong((long) 1);
        java.math.BigInteger bigInteger12 = longModelValue6.asBigInteger();
        org.jboss.dmr.ModelNode modelNode13 = modelNode1.set("[2L]", bigInteger12);
        // The following exception was thrown during execution in test generation
        try {
            long long14 = modelNode1.asLong();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(bigDecimal7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNotNull(valueExpression9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 52L + "'", long11 == 52L);
        org.junit.Assert.assertNotNull(bigInteger12);
        org.junit.Assert.assertNotNull(modelNode13);
    }

    @Test
    public void test10876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10876");
        java.io.InputStream inputStream0 = null;
        org.jboss.dmr.Base64.InputStream inputStream2 = new org.jboss.dmr.Base64.InputStream(inputStream0, (int) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            int int3 = inputStream2.read();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10877");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.StringModelValue stringModelValue3 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        boolean boolean4 = stringModelValue1.equals(stringModelValue3);
        org.jboss.dmr.StringModelValue stringModelValue6 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        boolean boolean7 = stringModelValue3.equals(stringModelValue6);
        org.jboss.dmr.ValueExpression valueExpression8 = stringModelValue6.asExpression();
        org.jboss.dmr.StringModelValue stringModelValue10 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        org.jboss.dmr.ValueExpression valueExpression11 = stringModelValue10.asExpression();
        boolean boolean13 = stringModelValue10.equals((java.lang.Object) (-1.0d));
        java.lang.String str14 = stringModelValue10.asString();
        org.jboss.dmr.stream.ModelEvent modelEvent15 = org.jboss.dmr.stream.ModelEvent.UNDEFINED;
        boolean boolean16 = stringModelValue10.equals((java.lang.Object) modelEvent15);
        org.jboss.dmr.StringModelValue stringModelValue18 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.StringModelValue stringModelValue20 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.StringModelValue stringModelValue22 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        boolean boolean23 = stringModelValue20.equals(stringModelValue22);
        byte[] byteArray24 = stringModelValue22.asBytes();
        java.lang.Object obj25 = null;
        boolean boolean26 = stringModelValue22.equals(obj25);
        boolean boolean28 = stringModelValue22.equals((java.lang.Object) "TYPE_MODEL_VALUE");
        boolean boolean29 = stringModelValue18.equals(stringModelValue22);
        boolean boolean30 = stringModelValue10.equals(stringModelValue22);
        boolean boolean31 = stringModelValue6.equals(stringModelValue10);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory33 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream34 = null;
        org.jboss.dmr.Base64.InputStream inputStream36 = new org.jboss.dmr.Base64.InputStream(inputStream34, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream37 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream36);
        org.jboss.dmr.stream.ModelReader modelReader38 = modelStreamFactory33.newModelReader((java.io.InputStream) inputStream37);
        java.io.OutputStream outputStream39 = null;
        org.jboss.dmr.Base64.OutputStream outputStream40 = new org.jboss.dmr.Base64.OutputStream(outputStream39);
        org.jboss.dmr.Base64.OutputStream outputStream41 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream40);
        outputStream40.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter44 = modelStreamFactory33.newModelWriter((java.io.OutputStream) outputStream40);
        org.jboss.dmr.stream.ModelWriter modelWriter45 = modelWriter44.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter47 = modelWriter45.writeInt((int) (byte) 10);
        java.io.InputStream inputStream48 = null;
        org.jboss.dmr.Base64.InputStream inputStream50 = new org.jboss.dmr.Base64.InputStream(inputStream48, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue52 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str53 = longModelValue52.asString();
        byte[] byteArray54 = longModelValue52.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue55 = new org.jboss.dmr.BytesModelValue(byteArray54);
        int int58 = inputStream50.read(byteArray54, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter59 = modelWriter47.writeBytes(byteArray54);
        org.jboss.dmr.ModelNode modelNode61 = org.jboss.dmr.ModelNode.fromString("\"rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3GXAAEGV4cHJlc3Np\\nb24gImhpISJiAAAAAQF4\"");
        org.jboss.dmr.ModelNode modelNode63 = modelNode61.setExpression("AAAAIA==");
        org.jboss.dmr.ModelNode modelNode66 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long67 = modelNode66.asLong();
        org.jboss.dmr.ValueExpression valueExpression68 = modelNode66.asExpression();
        java.math.BigDecimal bigDecimal69 = valueExpression68.resolveBigDecimal();
        java.lang.String str70 = valueExpression68.getExpressionString();
        java.math.BigDecimal bigDecimal71 = valueExpression68.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue72 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal71);
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue73 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal71);
        org.jboss.dmr.ModelNode modelNode74 = modelNode61.set("\"(\\\"\\\" => (\\\"hi!\\\" => 0.0))\"", bigDecimal71);
        org.jboss.dmr.stream.ModelWriter modelWriter75 = modelWriter59.writeBigDecimal(bigDecimal71);
        org.jboss.dmr.stream.ModelWriter modelWriter77 = modelWriter59.writeExpression("(\"(\\\"\\\" => (\\\"hi!\\\" => 0.0))\" => expression \"\")");
        org.jboss.dmr.IntModelValue intModelValue79 = new org.jboss.dmr.IntModelValue((int) ' ');
        org.jboss.dmr.ModelNode modelNode80 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode83 = modelNode80.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList84 = modelNode83.asList();
        org.jboss.dmr.ListModelValue listModelValue85 = new org.jboss.dmr.ListModelValue(modelNodeList84);
        org.jboss.dmr.ModelNode modelNode86 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue85);
        org.jboss.dmr.ModelValue modelValue87 = listModelValue85.resolve();
        int int89 = listModelValue85.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList90 = listModelValue85.asPropertyList();
        boolean boolean91 = intModelValue79.equals((java.lang.Object) listModelValue85);
        double double92 = intModelValue79.asDouble();
        long long94 = intModelValue79.asLong(1L);
        java.math.BigDecimal bigDecimal95 = intModelValue79.asBigDecimal();
        org.jboss.dmr.stream.ModelWriter modelWriter96 = modelWriter77.writeBigDecimal(bigDecimal95);
        stringModelValue10.write(modelWriter96);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(valueExpression8);
        org.junit.Assert.assertNotNull(valueExpression11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(\"\" => (\"hi!\" => 0.0))" + "'", str14, "(\"\" => (\"hi!\" => 0.0))");
        org.junit.Assert.assertTrue("'" + modelEvent15 + "' != '" + org.jboss.dmr.stream.ModelEvent.UNDEFINED + "'", modelEvent15.equals(org.jboss.dmr.stream.ModelEvent.UNDEFINED));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[40, 34, 34, 32, 61, 62, 32, 40, 34, 104, 105, 33, 34, 32, 61, 62, 32, 48, 46, 48, 41, 41]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(modelStreamFactory33);
        org.junit.Assert.assertNotNull(modelReader38);
        org.junit.Assert.assertNotNull(modelWriter44);
        org.junit.Assert.assertNotNull(modelWriter45);
        org.junit.Assert.assertNotNull(modelWriter47);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "1" + "'", str53, "1");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(modelWriter59);
        org.junit.Assert.assertNotNull(modelNode61);
        org.junit.Assert.assertNotNull(modelNode63);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 1L + "'", long67 == 1L);
        org.junit.Assert.assertNotNull(valueExpression68);
        org.junit.Assert.assertNotNull(bigDecimal69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "1.0" + "'", str70, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal71);
        org.junit.Assert.assertNotNull(modelNode74);
        org.junit.Assert.assertNotNull(modelWriter75);
        org.junit.Assert.assertNotNull(modelWriter77);
        org.junit.Assert.assertNotNull(modelNode83);
        org.junit.Assert.assertNotNull(modelNodeList84);
        org.junit.Assert.assertNotNull(modelValue87);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertNotNull(propertyList90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 32.0d + "'", double92 == 32.0d);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 32L + "'", long94 == 32L);
        org.junit.Assert.assertNotNull(bigDecimal95);
        org.junit.Assert.assertNotNull(modelWriter96);
    }

    @Test
    public void test10878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10878");
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode("EXPRESSION_VALUE");
        org.jboss.dmr.ModelNode modelNode3 = modelNode2.clear();
        boolean boolean5 = modelNode2.has((int) '#');
        org.jboss.dmr.ModelNode modelNode8 = modelNode2.add("BYTES_VALUE", "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4");
        org.jboss.dmr.ModelNode modelNode10 = modelNode2.set("1");
        org.jboss.dmr.PropertyModelValue propertyModelValue12 = new org.jboss.dmr.PropertyModelValue("[2L]", modelNode2, false);
        org.jboss.dmr.ModelNode modelNode14 = propertyModelValue12.getChild(0);
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertNotNull(modelNode14);
    }

    @Test
    public void test10879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10879");
        org.jboss.dmr.BooleanModelValue booleanModelValue1 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray2 = booleanModelValue1.asBytes();
        java.lang.String str3 = booleanModelValue1.asString();
        java.lang.String str4 = booleanModelValue1.asString();
        long long6 = booleanModelValue1.asLong(3L);
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.setExpression("hi!", "hi!");
        java.lang.String str12 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode8);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList13 = modelNode8.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode15 = modelNode8.set((double) 0);
        org.jboss.dmr.ModelType modelType17 = org.jboss.dmr.ModelType.PROPERTY;
        char char18 = modelType17.getTypeChar();
        org.jboss.dmr.ModelNode modelNode19 = modelNode8.set("[(\"hi!\" => 0.0)]", modelType17);
        org.jboss.dmr.PropertyModelValue propertyModelValue21 = new org.jboss.dmr.PropertyModelValue("(\"BYTES_VALUE\" => expression \"1.0\")", modelNode19, true);
        boolean boolean22 = booleanModelValue1.equals((java.lang.Object) true);
        org.junit.Assert.assertNotNull(booleanModelValue1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "true" + "'", str3, "true");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "true" + "'", str4, "true");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str12, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList13);
        org.junit.Assert.assertNotNull(modelNode15);
        org.junit.Assert.assertTrue("'" + modelType17 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType17.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + 'p' + "'", char18 == 'p');
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test10880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10880");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.setExpression("hi!", "hi!");
        java.lang.String str4 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode0);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList5 = modelNode0.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode7 = modelNode0.set((double) 0);
        org.jboss.dmr.ModelNode modelNode8 = modelNode0.clear();
        int int10 = modelNode8.asInt(112);
        org.jboss.dmr.ModelNode modelNode11 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode14 = modelNode11.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList15 = modelNode14.asList();
        org.jboss.dmr.ModelNode modelNode18 = modelNode14.setExpression("hi!", "(\"hi!\" => 0.0)");
        java.util.Set<java.lang.String> strSet19 = modelNode18.keys();
        boolean boolean20 = modelNode8.equals(modelNode18);
        org.jboss.dmr.ModelNode modelNode23 = modelNode8.add("[{\n    \"rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\\nIXg=\" : {\n        \"hi!\" : {\n            \"EXPRESSION_VALUE\" : \"hi!\"\n        }\n    }\n}]", (int) (byte) 1);
        org.jboss.dmr.ModelNode modelNode26 = modelNode8.add("org.jboss.dmr.stream.ModelException: \"Expression \\\"true\\\"\"", "[(\"hi!\" => 0.0)]");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet27 = modelNode8.keys();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str4, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList5);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 112 + "'", int10 == 112);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(modelNodeList15);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(modelNode23);
        org.junit.Assert.assertNotNull(modelNode26);
    }

    @Test
    public void test10881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10881");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode("H4sIAAAAAAAAAFvzloG1tIiBKdppzWfxH2wcIQ+YGBgqChgYGBgZASVtzhAcAAAA");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Long long2 = modelNode1.asLongOrNull();
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"H4sIAAAAAAAAAFvzloG1tIiBKdppzWfxH2wcIQ+YGBgqChgYGBgZASVtzhAcAAAA\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10882");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isPropertyStart();
        boolean boolean17 = modelReader15.isType();
        boolean boolean18 = modelReader15.isListStart();
        boolean boolean19 = modelReader15.isPropertyStart();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.stream.ModelEvent modelEvent20 = modelReader15.next();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test10883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10883");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        java.lang.String str6 = listModelValue5.asString();
        long long7 = listModelValue5.asLong();
        int int9 = listModelValue5.asInt((int) '4');
        org.jboss.dmr.ModelValue modelValue10 = listModelValue5.protect();
        boolean boolean12 = listModelValue5.asBoolean(true);
        int int14 = listModelValue5.asInt(1);
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode18 = modelNode15.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList19 = modelNode18.asList();
        org.jboss.dmr.ListModelValue listModelValue20 = new org.jboss.dmr.ListModelValue(modelNodeList19);
        org.jboss.dmr.ModelNode modelNode21 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue20);
        org.jboss.dmr.ModelValue modelValue22 = listModelValue20.resolve();
        int int24 = listModelValue20.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList25 = listModelValue20.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList26 = listModelValue20.asPropertyList();
        org.jboss.dmr.ModelNode modelNode28 = listModelValue20.getChild((int) (short) 0);
        boolean boolean29 = listModelValue20.asBoolean();
        org.jboss.dmr.ModelValue modelValue30 = listModelValue20.copy();
        boolean boolean31 = listModelValue5.equals(listModelValue20);
        boolean boolean32 = listModelValue5.asBoolean();
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str6, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(modelValue10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertNotNull(modelNodeList19);
        org.junit.Assert.assertNotNull(modelValue22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(propertyList25);
        org.junit.Assert.assertNotNull(propertyList26);
        org.junit.Assert.assertNotNull(modelNode28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(modelValue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test10884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10884");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        int int3 = longModelValue1.asInt((int) (byte) 0);
        java.math.BigInteger bigInteger4 = longModelValue1.asBigInteger();
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue((-1L));
        long long8 = longModelValue6.asLong((long) (byte) -1);
        int int10 = longModelValue6.asInt(0);
        boolean boolean11 = longModelValue1.equals((java.lang.Object) longModelValue6);
        byte[] byteArray12 = longModelValue6.asBytes();
        long long13 = longModelValue6.asLong();
        double double15 = longModelValue6.asDouble(100.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(bigInteger4);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, -1, -1, -1, -1, -1, -1, -1]");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1.0d) + "'", double15 == (-1.0d));
    }

    @Test
    public void test10885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10885");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        boolean boolean4 = objectModelValue0.has((int) 'a');
        boolean boolean6 = objectModelValue0.has("");
        org.jboss.dmr.ObjectModelValue objectModelValue7 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode8 = objectModelValue7.asObject();
        java.util.Set<java.lang.String> strSet9 = objectModelValue7.getKeys();
        boolean boolean11 = objectModelValue7.has((int) 'a');
        boolean boolean12 = objectModelValue0.equals(objectModelValue7);
        org.jboss.dmr.ModelNode modelNode13 = objectModelValue7.asObject();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList14 = objectModelValue7.asList();
        org.jboss.dmr.ObjectModelValue objectModelValue15 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode16 = objectModelValue15.asObject();
        org.jboss.dmr.ModelValue modelValue17 = objectModelValue15.protect();
        long long18 = objectModelValue15.asLong();
        boolean boolean20 = objectModelValue15.has("(\"(\\\"\\\" => (\\\"hi!\\\" => 0.0))\" => expression \"\")");
        boolean boolean21 = objectModelValue15.asBoolean();
        boolean boolean22 = objectModelValue7.equals(objectModelValue15);
        org.jboss.dmr.ModelValue modelValue24 = objectModelValue15.copy(false);
        int int26 = objectModelValue15.asInt(97);
        org.jboss.dmr.ModelValue modelValue27 = objectModelValue15.copy();
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNodeList14);
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertNotNull(modelValue17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(modelValue24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(modelValue27);
    }

    @Test
    public void test10886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10886");
        org.jboss.dmr.BooleanModelValue booleanModelValue1 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray2 = booleanModelValue1.asBytes();
        java.lang.String str3 = booleanModelValue1.asString();
        int int4 = booleanModelValue1.asInt();
        long long5 = booleanModelValue1.asLong();
        boolean boolean7 = booleanModelValue1.equals((java.lang.Object) '4');
        long long9 = booleanModelValue1.asLong((long) (short) 0);
        org.jboss.dmr.BooleanModelValue booleanModelValue11 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long12 = booleanModelValue11.asLong();
        org.jboss.dmr.ValueExpression valueExpression13 = booleanModelValue11.asExpression();
        java.lang.String str14 = valueExpression13.toString();
        org.jboss.dmr.ExpressionValue expressionValue16 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ValueExpression valueExpression17 = expressionValue16.asExpression();
        boolean boolean18 = valueExpression13.equals(valueExpression17);
        java.lang.String str19 = valueExpression17.resolveString();
        boolean boolean20 = booleanModelValue1.equals((java.lang.Object) str19);
        int int21 = booleanModelValue1.asInt();
        java.math.BigInteger bigInteger22 = booleanModelValue1.asBigInteger();
        int int24 = booleanModelValue1.asInt(8);
        org.junit.Assert.assertNotNull(booleanModelValue1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "true" + "'", str3, "true");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertNotNull(booleanModelValue11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertNotNull(valueExpression13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Expression \"true\"" + "'", str14, "Expression \"true\"");
        org.junit.Assert.assertNotNull(valueExpression17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(bigInteger22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
    }

    @Test
    public void test10887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10887");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.setExpression("hi!", "hi!");
        org.jboss.dmr.ModelNode modelNode4 = modelNode3.setEmptyList();
        org.jboss.dmr.ModelNode modelNode5 = modelNode3.asObject();
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        java.lang.String str12 = modelNode8.toString();
        org.jboss.dmr.ModelNode modelNode13 = modelNode8.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode15 = modelNode8.set(100);
        org.jboss.dmr.ModelNode modelNode16 = modelNode7.add(modelNode8);
        org.jboss.dmr.Property property17 = new org.jboss.dmr.Property("", modelNode8);
        java.lang.String str18 = property17.getName();
        org.jboss.dmr.ModelNode modelNode19 = modelNode5.set(property17);
        org.jboss.dmr.Validation.validate(modelNode5, "PROPERTY");
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(\"hi!\" => 0.0)" + "'", str12, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode15);
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(modelNode19);
    }

    @Test
    public void test10888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10888");
        org.jboss.dmr.BooleanModelValue booleanModelValue1 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger2 = booleanModelValue1.asBigInteger();
        byte[] byteArray3 = booleanModelValue1.asBytes();
        boolean boolean4 = booleanModelValue1.asBoolean();
        java.lang.String str5 = booleanModelValue1.toString();
        long long6 = booleanModelValue1.asLong();
        org.jboss.dmr.ValueExpression valueExpression7 = booleanModelValue1.asExpression();
        long long8 = booleanModelValue1.asLong();
        org.junit.Assert.assertNotNull(booleanModelValue1);
        org.junit.Assert.assertNotNull(bigInteger2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "true" + "'", str5, "true");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertNotNull(valueExpression7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1L + "'", long8 == 1L);
    }

    @Test
    public void test10889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10889");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        boolean boolean4 = objectModelValue0.has((int) 'a');
        boolean boolean6 = objectModelValue0.has("");
        org.jboss.dmr.ObjectModelValue objectModelValue7 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode8 = objectModelValue7.asObject();
        java.util.Set<java.lang.String> strSet9 = objectModelValue7.getKeys();
        boolean boolean11 = objectModelValue7.has((int) 'a');
        boolean boolean12 = objectModelValue0.equals(objectModelValue7);
        org.jboss.dmr.ModelNode modelNode13 = objectModelValue7.asObject();
        java.util.List<org.jboss.dmr.Property> propertyList14 = objectModelValue7.asPropertyList();
        long long16 = objectModelValue7.asLong((long) (byte) 100);
        org.jboss.dmr.ModelValue modelValue17 = objectModelValue7.resolve();
        org.jboss.dmr.BooleanModelValue booleanModelValue18 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double19 = booleanModelValue18.asDouble();
        org.jboss.dmr.ModelValue modelValue20 = booleanModelValue18.copy();
        java.math.BigInteger bigInteger21 = booleanModelValue18.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue22 = new org.jboss.dmr.BigIntegerModelValue(bigInteger21);
        java.lang.String str23 = bigIntegerModelValue22.asString();
        long long25 = bigIntegerModelValue22.asLong(32L);
        double double26 = bigIntegerModelValue22.asDouble();
        org.jboss.dmr.BooleanModelValue booleanModelValue27 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double28 = booleanModelValue27.asDouble();
        org.jboss.dmr.ModelValue modelValue29 = booleanModelValue27.copy();
        java.math.BigInteger bigInteger30 = booleanModelValue27.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue31 = new org.jboss.dmr.BigIntegerModelValue(bigInteger30);
        double double33 = bigIntegerModelValue31.asDouble((double) 'b');
        boolean boolean34 = bigIntegerModelValue22.equals(bigIntegerModelValue31);
        boolean boolean36 = bigIntegerModelValue31.equals((java.lang.Object) "35");
        java.io.OutputStream outputStream37 = null;
        org.jboss.dmr.Base64.OutputStream outputStream38 = new org.jboss.dmr.Base64.OutputStream(outputStream37);
        outputStream38.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream40 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream38);
        org.jboss.dmr.Base64.OutputStream outputStream41 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream40);
        boolean boolean42 = bigIntegerModelValue31.equals((java.lang.Object) outputStream41);
        boolean boolean43 = objectModelValue7.equals((java.lang.Object) bigIntegerModelValue31);
        boolean boolean44 = bigIntegerModelValue31.asBoolean();
        double double45 = bigIntegerModelValue31.asDouble();
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(propertyList14);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(modelValue17);
        org.junit.Assert.assertNotNull(booleanModelValue18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue20);
        org.junit.Assert.assertNotNull(bigInteger21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1" + "'", str23, "1");
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(booleanModelValue27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue29);
        org.junit.Assert.assertNotNull(bigInteger30);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
    }

    @Test
    public void test10890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10890");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) (short) 10);
        java.lang.String str2 = intModelValue1.asString();
        org.jboss.dmr.IntModelValue intModelValue4 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long6 = intModelValue4.asLong((long) 'b');
        java.lang.String str7 = intModelValue4.asString();
        java.math.BigInteger bigInteger8 = intModelValue4.asBigInteger();
        boolean boolean10 = intModelValue4.asBoolean(false);
        org.jboss.dmr.IntModelValue intModelValue12 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long14 = intModelValue12.asLong((long) 'b');
        java.lang.String str15 = intModelValue12.asString();
        boolean boolean16 = intModelValue4.equals(intModelValue12);
        byte[] byteArray17 = intModelValue12.asBytes();
        org.jboss.dmr.IntModelValue intModelValue19 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str20 = intModelValue19.asString();
        double double22 = intModelValue19.asDouble((double) 2);
        int int23 = intModelValue19.asInt();
        byte[] byteArray24 = intModelValue19.asBytes();
        long long25 = intModelValue19.asLong();
        boolean boolean26 = intModelValue12.equals(intModelValue19);
        boolean boolean28 = intModelValue12.has("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3BWwAAAAAeA==");
        boolean boolean29 = intModelValue1.equals(intModelValue12);
        double double31 = intModelValue1.asDouble((double) 73L);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "10" + "'", str2, "10");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 32L + "'", long6 == 32L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "32" + "'", str7, "32");
        org.junit.Assert.assertNotNull(bigInteger8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 32L + "'", long14 == 32L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "32" + "'", str15, "32");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0, 0, 0, 32]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "32" + "'", str20, "32");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 32.0d + "'", double22 == 32.0d);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 32 + "'", int23 == 32);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, 0, 0, 32]");
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 32L + "'", long25 == 32L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 10.0d + "'", double31 == 10.0d);
    }

    @Test
    public void test10891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10891");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        boolean boolean8 = bigDecimalModelValue7.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression9 = bigDecimalModelValue7.asExpression();
        int int10 = bigDecimalModelValue7.asInt();
        java.math.BigDecimal bigDecimal11 = bigDecimalModelValue7.asBigDecimal();
        double double13 = bigDecimalModelValue7.asDouble(4.9E-324d);
        org.jboss.dmr.ValueExpression valueExpression14 = bigDecimalModelValue7.asExpression();
        // The following exception was thrown during execution in test generation
        try {
            int int15 = valueExpression14.resolveInt();
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"1.0\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(valueExpression9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(bigDecimal11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(valueExpression14);
    }

    @Test
    public void test10892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10892");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        int int9 = bigDecimalModelValue7.asInt(0);
        int int10 = bigDecimalModelValue7.asInt();
        int int11 = bigDecimalModelValue7.asInt();
        java.lang.String str12 = bigDecimalModelValue7.asString();
        java.lang.String str13 = bigDecimalModelValue7.asString();
        long long14 = bigDecimalModelValue7.asLong();
        java.math.BigInteger bigInteger15 = bigDecimalModelValue7.asBigInteger();
        int int16 = bigDecimalModelValue7.asInt();
        org.jboss.dmr.ModelNode modelNode17 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode20 = modelNode17.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList21 = modelNode20.asList();
        org.jboss.dmr.ModelNode modelNode24 = modelNode20.setExpression("hi!", "(\"hi!\" => 0.0)");
        org.jboss.dmr.Property property25 = modelNode20.asProperty();
        java.lang.String str26 = modelNode20.asStringOrNull();
        modelNode20.protect();
        boolean boolean28 = bigDecimalModelValue7.equals((java.lang.Object) modelNode20);
        // The following exception was thrown during execution in test generation
        try {
            int int30 = modelNode20.asInt((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1.0" + "'", str12, "1.0");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1.0" + "'", str13, "1.0");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(bigInteger15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(modelNodeList21);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertNotNull(property25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(\"hi!\" => expression \"(\\\"hi!\\\" => 0.0)\")" + "'", str26, "(\"hi!\" => expression \"(\\\"hi!\\\" => 0.0)\")");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test10893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10893");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        org.jboss.dmr.Property property5 = new org.jboss.dmr.Property("", modelNode4);
        java.lang.String[] strArray6 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode7 = modelNode4.get(strArray6);
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int9 = modelNode8.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode10 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode13 = modelNode10.setExpression("hi!", "hi!");
        java.lang.String str14 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode10);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList15 = modelNode10.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode16 = modelNode8.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList15);
        org.jboss.dmr.ModelNode modelNode17 = modelNode7.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList15);
        boolean boolean19 = modelNode17.hasDefined("");
        modelNode17.protect();
        java.io.DataInputStream dataInputStream21 = null;
        // The following exception was thrown during execution in test generation
        try {
            modelNode17.readExternal(dataInputStream21);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str14, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList15);
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test10894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10894");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        org.jboss.dmr.ModelValue modelValue2 = objectModelValue0.protect();
        java.util.List<org.jboss.dmr.Property> propertyList3 = objectModelValue0.asPropertyList();
        org.jboss.dmr.ModelValue modelValue4 = objectModelValue0.copy();
        org.jboss.dmr.ModelNode modelNode6 = objectModelValue0.getChild("Expression \"1\"");
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList7 = objectModelValue0.asList();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray8 = objectModelValue0.asBytes();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(propertyList3);
        org.junit.Assert.assertNotNull(modelValue4);
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNodeList7);
    }

    @Test
    public void test10895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10895");
        org.jboss.dmr.stream.ModelException modelException2 = new org.jboss.dmr.stream.ModelException("");
        java.lang.Throwable throwable4 = null;
        org.jboss.dmr.stream.ModelException modelException5 = new org.jboss.dmr.stream.ModelException("[(\"hi!\" => 0.0)]", throwable4);
        org.jboss.dmr.stream.ModelException modelException6 = new org.jboss.dmr.stream.ModelException(throwable4);
        java.lang.Throwable[] throwableArray7 = modelException6.getSuppressed();
        modelException2.addSuppressed((java.lang.Throwable) modelException6);
        org.jboss.dmr.stream.ModelException modelException9 = new org.jboss.dmr.stream.ModelException("(\"expression \\\"1\\\"\" => 73)", (java.lang.Throwable) modelException6);
        org.jboss.dmr.stream.ModelException modelException10 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException6);
        org.junit.Assert.assertNotNull(throwableArray7);
    }

    @Test
    public void test10896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10896");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        java.lang.String str5 = modelNode1.toString();
        org.jboss.dmr.ModelNode modelNode6 = modelNode1.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(100);
        org.jboss.dmr.ModelNode modelNode9 = modelNode0.add(modelNode1);
        int int11 = modelNode1.asInt(2);
        org.jboss.dmr.ModelType modelType13 = org.jboss.dmr.ModelType.BYTES;
        org.jboss.dmr.ModelNode modelNode14 = modelNode1.set("[(\"hi!\" => 0.0)]", modelType13);
        org.jboss.dmr.TypeModelValue typeModelValue15 = org.jboss.dmr.TypeModelValue.of(modelType13);
        org.jboss.dmr.ModelValue modelValue16 = typeModelValue15.clone();
        org.jboss.dmr.ModelType modelType17 = typeModelValue15.asType();
        org.jboss.dmr.BooleanModelValue booleanModelValue18 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double19 = booleanModelValue18.asDouble();
        org.jboss.dmr.ModelValue modelValue20 = booleanModelValue18.copy();
        java.math.BigInteger bigInteger21 = booleanModelValue18.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue22 = new org.jboss.dmr.BigIntegerModelValue(bigInteger21);
        java.lang.String str23 = bigIntegerModelValue22.asString();
        java.math.BigInteger bigInteger24 = bigIntegerModelValue22.asBigInteger();
        org.jboss.dmr.ModelNode modelNode25 = new org.jboss.dmr.ModelNode(bigInteger24);
        org.jboss.dmr.LongModelValue longModelValue27 = new org.jboss.dmr.LongModelValue((-1L));
        long long29 = longModelValue27.asLong((long) (byte) -1);
        int int31 = longModelValue27.asInt(0);
        org.jboss.dmr.ValueExpression valueExpression32 = longModelValue27.asExpression();
        org.jboss.dmr.ModelNode modelNode33 = modelNode25.set(valueExpression32);
        boolean boolean34 = typeModelValue15.equals((java.lang.Object) modelNode33);
        java.io.DataOutput dataOutput35 = null;
        // The following exception was thrown during execution in test generation
        try {
            typeModelValue15.writeExternal(dataOutput35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(\"hi!\" => 0.0)" + "'", str5, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertTrue("'" + modelType13 + "' != '" + org.jboss.dmr.ModelType.BYTES + "'", modelType13.equals(org.jboss.dmr.ModelType.BYTES));
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(typeModelValue15);
        org.junit.Assert.assertNotNull(modelValue16);
        org.junit.Assert.assertTrue("'" + modelType17 + "' != '" + org.jboss.dmr.ModelType.BYTES + "'", modelType17.equals(org.jboss.dmr.ModelType.BYTES));
        org.junit.Assert.assertNotNull(booleanModelValue18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue20);
        org.junit.Assert.assertNotNull(bigInteger21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1" + "'", str23, "1");
        org.junit.Assert.assertNotNull(bigInteger24);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(valueExpression32);
        org.junit.Assert.assertNotNull(modelNode33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test10897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10897");
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long3 = modelNode2.asLong();
        org.jboss.dmr.ValueExpression valueExpression4 = modelNode2.asExpression();
        java.math.BigDecimal bigDecimal5 = valueExpression4.resolveBigDecimal();
        org.jboss.dmr.BooleanModelValue booleanModelValue7 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long8 = booleanModelValue7.asLong();
        org.jboss.dmr.ValueExpression valueExpression9 = booleanModelValue7.asExpression();
        boolean boolean11 = valueExpression9.equals((java.lang.Object) 'p');
        boolean boolean12 = valueExpression4.equals(valueExpression9);
        org.jboss.dmr.ModelNode modelNode13 = new org.jboss.dmr.ModelNode(valueExpression4);
        org.jboss.dmr.Property property15 = new org.jboss.dmr.Property("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]", modelNode13, false);
        org.jboss.dmr.PropertyModelValue propertyModelValue16 = new org.jboss.dmr.PropertyModelValue(property15);
        java.util.List<org.jboss.dmr.Property> propertyList17 = propertyModelValue16.asPropertyList();
        org.jboss.dmr.ModelNode modelNode19 = propertyModelValue16.requireChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        org.jboss.dmr.ModelNode modelNode20 = propertyModelValue16.asObject();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 1L + "'", long3 == 1L);
        org.junit.Assert.assertNotNull(valueExpression4);
        org.junit.Assert.assertNotNull(bigDecimal5);
        org.junit.Assert.assertNotNull(booleanModelValue7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1L + "'", long8 == 1L);
        org.junit.Assert.assertNotNull(valueExpression9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(propertyList17);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(modelNode20);
    }

    @Test
    public void test10898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10898");
        org.jboss.dmr.BooleanModelValue booleanModelValue1 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long2 = booleanModelValue1.asLong();
        int int3 = booleanModelValue1.asInt();
        int int5 = booleanModelValue1.asInt(1);
        double double6 = booleanModelValue1.asDouble();
        java.math.BigDecimal bigDecimal7 = booleanModelValue1.asBigDecimal();
        double double9 = booleanModelValue1.asDouble((double) 's');
        org.junit.Assert.assertNotNull(booleanModelValue1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(bigDecimal7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
    }

    @Test
    public void test10899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10899");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        int int6 = bigIntegerModelValue4.asInt((int) (short) 1);
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode10 = modelNode7.set("hi!", 0.0d);
        java.lang.String str11 = modelNode7.toString();
        org.jboss.dmr.ModelNode modelNode12 = modelNode7.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode14 = modelNode7.set(100);
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode18 = modelNode15.set("hi!", 0.0d);
        java.lang.String str19 = modelNode15.toString();
        org.jboss.dmr.ModelNode modelNode20 = modelNode15.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode22 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode25 = modelNode22.set("hi!", 0.0d);
        org.jboss.dmr.Property property26 = new org.jboss.dmr.Property("", modelNode25);
        org.jboss.dmr.ModelNode modelNode27 = modelNode15.set(property26);
        java.lang.String str28 = modelNode27.asString();
        org.jboss.dmr.ModelNode modelNode29 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode32 = modelNode29.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList33 = modelNode32.asList();
        org.jboss.dmr.ListModelValue listModelValue34 = new org.jboss.dmr.ListModelValue(modelNodeList33);
        org.jboss.dmr.ModelNode modelNode35 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue34);
        org.jboss.dmr.ModelValue modelValue36 = listModelValue34.resolve();
        int int38 = listModelValue34.asInt((int) (byte) 100);
        boolean boolean39 = listModelValue34.asBoolean();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList40 = listModelValue34.asList();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList41 = modelNode27.asList(modelNodeList40);
        org.jboss.dmr.ModelNode modelNode42 = modelNode14.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList40);
        boolean boolean43 = bigIntegerModelValue4.equals((java.lang.Object) modelNode14);
        int int44 = bigIntegerModelValue4.asInt();
        int int45 = bigIntegerModelValue4.asInt();
        boolean boolean46 = bigIntegerModelValue4.asBoolean();
        double double48 = bigIntegerModelValue4.asDouble((double) 32);
        org.jboss.dmr.ModelValue modelValue49 = bigIntegerModelValue4.resolve();
        boolean boolean51 = bigIntegerModelValue4.asBoolean(false);
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(\"hi!\" => 0.0)" + "'", str11, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(\"hi!\" => 0.0)" + "'", str19, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(\"\" => (\"hi!\" => 0.0))" + "'", str28, "(\"\" => (\"hi!\" => 0.0))");
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertNotNull(modelNodeList33);
        org.junit.Assert.assertNotNull(modelValue36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(modelNodeList40);
        org.junit.Assert.assertNotNull(modelNodeList41);
        org.junit.Assert.assertNotNull(modelNode42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test10900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10900");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream5 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4);
        org.jboss.dmr.stream.ModelReader modelReader6 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream5);
        java.io.OutputStream outputStream7 = null;
        org.jboss.dmr.Base64.OutputStream outputStream8 = new org.jboss.dmr.Base64.OutputStream(outputStream7);
        org.jboss.dmr.Base64.OutputStream outputStream9 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream8);
        outputStream8.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter12 = modelStreamFactory1.newModelWriter((java.io.OutputStream) outputStream8);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory14 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream15 = null;
        org.jboss.dmr.Base64.InputStream inputStream17 = new org.jboss.dmr.Base64.InputStream(inputStream15, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue19 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str20 = longModelValue19.asString();
        byte[] byteArray21 = longModelValue19.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue22 = new org.jboss.dmr.BytesModelValue(byteArray21);
        int int25 = inputStream17.read(byteArray21, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream27 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream17, (-1));
        org.jboss.dmr.stream.ModelReader modelReader28 = modelStreamFactory14.newModelReader((java.io.InputStream) inputStream27);
        java.io.InputStream inputStream29 = null;
        org.jboss.dmr.Base64.InputStream inputStream31 = new org.jboss.dmr.Base64.InputStream(inputStream29, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream32 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream31);
        byte[] byteArray34 = org.jboss.dmr.Base64.decode("true");
        boolean boolean36 = org.jboss.dmr.Base64.encodeToFile(byteArray34, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3R3AANW9yZy5qYm9z\ncy5kbXIuc3RyZWFtLk1vZGVsRXhjZXB0aW9uOiBbKCJoaSEiID0+IDAuMCldcAADaGkhRAAAAAAA\nAAAAeA==");
        int int39 = inputStream31.read(byteArray34, (int) 'l', 0);
        org.jboss.dmr.stream.ModelReader modelReader40 = modelStreamFactory14.newModelReader((java.io.InputStream) inputStream31);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory42 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream43 = null;
        org.jboss.dmr.Base64.InputStream inputStream45 = new org.jboss.dmr.Base64.InputStream(inputStream43, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream46 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream45);
        org.jboss.dmr.stream.ModelReader modelReader47 = modelStreamFactory42.newModelReader((java.io.InputStream) inputStream46);
        java.io.OutputStream outputStream48 = null;
        org.jboss.dmr.Base64.OutputStream outputStream49 = new org.jboss.dmr.Base64.OutputStream(outputStream48);
        org.jboss.dmr.Base64.OutputStream outputStream50 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream49);
        outputStream49.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter53 = modelStreamFactory42.newModelWriter((java.io.OutputStream) outputStream49);
        outputStream49.write(2);
        org.jboss.dmr.stream.ModelWriter modelWriter56 = modelStreamFactory14.newModelWriter((java.io.OutputStream) outputStream49);
        org.jboss.dmr.stream.ModelWriter modelWriter57 = modelStreamFactory1.newModelWriter((java.io.OutputStream) outputStream49);
        java.io.InputStream inputStream58 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.stream.ModelReader modelReader59 = modelStreamFactory1.newModelReader(inputStream58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Parameter cannot be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertNotNull(modelReader6);
        org.junit.Assert.assertNotNull(modelWriter12);
        org.junit.Assert.assertNotNull(modelStreamFactory14);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1" + "'", str20, "1");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(modelReader28);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[-74, -69, -98]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(modelReader40);
        org.junit.Assert.assertNotNull(modelStreamFactory42);
        org.junit.Assert.assertNotNull(modelReader47);
        org.junit.Assert.assertNotNull(modelWriter53);
        org.junit.Assert.assertNotNull(modelWriter56);
        org.junit.Assert.assertNotNull(modelWriter57);
    }

    @Test
    public void test10901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10901");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        java.lang.String str2 = doubleModelValue1.asString();
        byte[] byteArray3 = doubleModelValue1.asBytes();
        org.jboss.dmr.ValueExpression valueExpression4 = doubleModelValue1.asExpression();
        java.lang.String str5 = valueExpression4.getExpressionString();
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long8 = modelNode7.asLong();
        org.jboss.dmr.ValueExpression valueExpression9 = modelNode7.asExpression();
        java.math.BigDecimal bigDecimal10 = valueExpression9.resolveBigDecimal();
        java.lang.String str11 = valueExpression9.getExpressionString();
        java.math.BigDecimal bigDecimal12 = valueExpression9.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue13 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal12);
        boolean boolean14 = bigDecimalModelValue13.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression15 = bigDecimalModelValue13.asExpression();
        int int16 = bigDecimalModelValue13.asInt();
        java.math.BigDecimal bigDecimal17 = bigDecimalModelValue13.asBigDecimal();
        long long19 = bigDecimalModelValue13.asLong((long) 'p');
        boolean boolean20 = valueExpression4.equals((java.lang.Object) bigDecimalModelValue13);
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver21 = org.jboss.dmr.ValueExpressionResolver.DEFAULT_RESOLVER;
        org.jboss.dmr.ValueExpression valueExpression23 = new org.jboss.dmr.ValueExpression("(\"org.jboss.dmr.stream.ModelException: [(\\\"hi!\\\" => 0.0)]\" => (\"hi!\" => 0.0))");
        java.lang.String str24 = valueExpressionResolver21.resolve(valueExpression23);
        org.jboss.dmr.ModelNode modelNode27 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode30 = modelNode27.set("hi!", 0.0d);
        org.jboss.dmr.Property property31 = new org.jboss.dmr.Property("", modelNode30);
        boolean boolean33 = modelNode30.equals((java.lang.Object) 100L);
        org.jboss.dmr.Property property35 = new org.jboss.dmr.Property("[(\"hi!\" => 0.0)]", modelNode30, false);
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver37 = org.jboss.dmr.ValueExpressionResolver.DEFAULT_RESOLVER;
        org.jboss.dmr.BooleanModelValue booleanModelValue39 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long40 = booleanModelValue39.asLong();
        org.jboss.dmr.ValueExpression valueExpression41 = booleanModelValue39.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue42 = new org.jboss.dmr.ExpressionValue(valueExpression41);
        java.lang.String str43 = valueExpression41.getExpressionString();
        java.lang.String str44 = valueExpressionResolver37.resolve(valueExpression41);
        org.jboss.dmr.ModelNode modelNode45 = modelNode30.set("1L", valueExpression41);
        java.lang.String str46 = valueExpressionResolver21.resolve(valueExpression41);
        // The following exception was thrown during execution in test generation
        try {
            java.math.BigInteger bigInteger47 = valueExpression4.resolveBigInteger(valueExpressionResolver21);
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"10.0\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "10.0" + "'", str2, "10.0");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(valueExpression4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "10.0" + "'", str5, "10.0");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1L + "'", long8 == 1L);
        org.junit.Assert.assertNotNull(valueExpression9);
        org.junit.Assert.assertNotNull(bigDecimal10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0" + "'", str11, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(valueExpression15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(bigDecimal17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(valueExpressionResolver21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(\"org.jboss.dmr.stream.ModelException: [(\\\"hi!\\\" => 0.0)]\" => (\"hi!\" => 0.0))" + "'", str24, "(\"org.jboss.dmr.stream.ModelException: [(\\\"hi!\\\" => 0.0)]\" => (\"hi!\" => 0.0))");
        org.junit.Assert.assertNotNull(modelNode30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(valueExpressionResolver37);
        org.junit.Assert.assertNotNull(booleanModelValue39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1L + "'", long40 == 1L);
        org.junit.Assert.assertNotNull(valueExpression41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "true" + "'", str43, "true");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "true" + "'", str44, "true");
        org.junit.Assert.assertNotNull(modelNode45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "true" + "'", str46, "true");
    }

    @Test
    public void test10902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10902");
        org.jboss.dmr.ModelNodeFactory modelNodeFactory0 = org.jboss.dmr.ModelNodeFactory.INSTANCE;
        org.jboss.dmr.ModelNode modelNode3 = modelNodeFactory0.readFrom("10.0", false);
        org.jboss.dmr.ModelNode modelNode6 = modelNodeFactory0.readFrom("0.0", true);
        java.io.InputStream inputStream7 = null;
        org.jboss.dmr.Base64.InputStream inputStream9 = new org.jboss.dmr.Base64.InputStream(inputStream7, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream10 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream9);
        org.jboss.dmr.Base64.InputStream inputStream11 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream10);
        org.jboss.dmr.Base64.InputStream inputStream13 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream10, (int) '#');
        org.jboss.dmr.Base64.InputStream inputStream15 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream13, (int) 'b');
        java.nio.charset.Charset charset16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode18 = modelNodeFactory0.readFrom((java.io.InputStream) inputStream13, charset16, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Parameter cannot be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNodeFactory0);
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNode6);
    }

    @Test
    public void test10903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10903");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isLong();
        boolean boolean17 = modelReader15.isBigDecimal();
        boolean boolean18 = modelReader15.isBoolean();
        boolean boolean19 = modelReader15.isPropertyEnd();
        boolean boolean20 = modelReader15.isBigDecimal();
        boolean boolean21 = modelReader15.isObjectEnd();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test10904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10904");
        org.jboss.dmr.ModelNode modelNode1 = org.jboss.dmr.ModelNode.fromJSONString("1.0");
        org.jboss.dmr.ModelNode modelNode2 = modelNode1.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode4 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode7 = modelNode4.set("hi!", 0.0d);
        org.jboss.dmr.Property property8 = new org.jboss.dmr.Property("", modelNode7);
        java.lang.String[] strArray9 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode10 = modelNode7.get(strArray9);
        org.jboss.dmr.ModelNode modelNode11 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode14 = modelNode11.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList15 = modelNode14.asList();
        org.jboss.dmr.ListModelValue listModelValue16 = new org.jboss.dmr.ListModelValue(modelNodeList15);
        org.jboss.dmr.ModelNode modelNode17 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue16);
        org.jboss.dmr.ModelValue modelValue18 = listModelValue16.resolve();
        int int20 = listModelValue16.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList21 = listModelValue16.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList22 = modelNode10.asPropertyList(propertyList21);
        org.jboss.dmr.ModelNode modelNode24 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode27 = modelNode24.set("hi!", 0.0d);
        org.jboss.dmr.Property property28 = new org.jboss.dmr.Property("", modelNode27);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode30 = modelNode27.get(strArray29);
        org.jboss.dmr.ModelNode modelNode31 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode34 = modelNode31.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList35 = modelNode34.asList();
        org.jboss.dmr.ListModelValue listModelValue36 = new org.jboss.dmr.ListModelValue(modelNodeList35);
        org.jboss.dmr.ModelNode modelNode37 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue36);
        org.jboss.dmr.ModelValue modelValue38 = listModelValue36.resolve();
        int int40 = listModelValue36.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList41 = listModelValue36.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList42 = modelNode30.asPropertyList(propertyList41);
        modelNode10.setNoCopy(modelNode30);
        boolean boolean44 = modelNode30.isProtected();
        org.jboss.dmr.ModelNode modelNode47 = modelNode30.set("", (double) 8);
        org.jboss.dmr.ModelNode modelNode50 = new org.jboss.dmr.ModelNode(1L);
        org.jboss.dmr.ValueExpression valueExpression51 = modelNode50.asExpression();
        org.jboss.dmr.ModelNode modelNode52 = modelNode47.set("rO0ABXNyABNqYXZhLmxhbmcuQ2hhcmFjdGVyNItH2WsaJngCAAFDAAV2YWx1ZXhwACM=", valueExpression51);
        java.lang.String str53 = valueExpression51.resolveString();
        java.math.BigDecimal bigDecimal54 = valueExpression51.resolveBigDecimal();
        org.jboss.dmr.ModelNode modelNode55 = modelNode2.set(bigDecimal54);
        org.jboss.dmr.BooleanModelValue booleanModelValue57 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long58 = booleanModelValue57.asLong();
        org.jboss.dmr.ValueExpression valueExpression59 = booleanModelValue57.asExpression();
        java.lang.String str60 = valueExpression59.toString();
        org.jboss.dmr.ExpressionValue expressionValue62 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ValueExpression valueExpression63 = expressionValue62.asExpression();
        boolean boolean64 = valueExpression59.equals(valueExpression63);
        org.jboss.dmr.LongModelValue longModelValue66 = new org.jboss.dmr.LongModelValue((long) '4');
        java.math.BigDecimal bigDecimal67 = longModelValue66.asBigDecimal();
        int int68 = longModelValue66.asInt();
        org.jboss.dmr.ValueExpression valueExpression69 = longModelValue66.asExpression();
        boolean boolean70 = valueExpression63.equals(valueExpression69);
        org.jboss.dmr.StringModelValue stringModelValue72 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.StringModelValue stringModelValue74 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        boolean boolean75 = stringModelValue72.equals(stringModelValue74);
        byte[] byteArray76 = stringModelValue74.asBytes();
        org.jboss.dmr.ValueExpression valueExpression77 = stringModelValue74.asExpression();
        boolean boolean78 = valueExpression69.equals(valueExpression77);
        org.jboss.dmr.ModelNode modelNode79 = modelNode2.set(valueExpression77);
        java.lang.String str80 = modelNode79.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode81 = modelNode79.asObject();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(modelNode2);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(modelNodeList15);
        org.junit.Assert.assertNotNull(modelValue18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(propertyList21);
        org.junit.Assert.assertNotNull(propertyList22);
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(modelNode30);
        org.junit.Assert.assertNotNull(modelNode34);
        org.junit.Assert.assertNotNull(modelNodeList35);
        org.junit.Assert.assertNotNull(modelValue38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(propertyList41);
        org.junit.Assert.assertNotNull(propertyList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(modelNode47);
        org.junit.Assert.assertNotNull(valueExpression51);
        org.junit.Assert.assertNotNull(modelNode52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "1" + "'", str53, "1");
        org.junit.Assert.assertNotNull(bigDecimal54);
        org.junit.Assert.assertNotNull(modelNode55);
        org.junit.Assert.assertNotNull(booleanModelValue57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 1L + "'", long58 == 1L);
        org.junit.Assert.assertNotNull(valueExpression59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Expression \"true\"" + "'", str60, "Expression \"true\"");
        org.junit.Assert.assertNotNull(valueExpression63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(bigDecimal67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 52 + "'", int68 == 52);
        org.junit.Assert.assertNotNull(valueExpression69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[40, 34, 34, 32, 61, 62, 32, 40, 34, 104, 105, 33, 34, 32, 61, 62, 32, 48, 46, 48, 41, 41]");
        org.junit.Assert.assertNotNull(valueExpression77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(modelNode79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "expression \"(\\\"\\\" => (\\\"hi!\\\" => 0.0))\"" + "'", str80, "expression \"(\\\"\\\" => (\\\"hi!\\\" => 0.0))\"");
    }

    @Test
    public void test10905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10905");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(35L);
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.BooleanModelValue booleanModelValue5 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger6 = booleanModelValue5.asBigInteger();
        org.jboss.dmr.ModelNode modelNode7 = modelNode3.add(bigInteger6);
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode(bigInteger6);
        org.jboss.dmr.ModelType modelType10 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode11 = new org.jboss.dmr.ModelNode(modelType10);
        org.jboss.dmr.ModelNode modelNode12 = modelNode8.set("true", modelType10);
        org.jboss.dmr.ModelNode modelNode13 = modelNode1.set("\"bytes {\\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01\\n}\"", modelType10);
        java.lang.String str14 = modelNode13.asString();
        org.jboss.dmr.ModelType modelType15 = org.jboss.dmr.ModelType.PROPERTY;
        char char16 = modelType15.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue17 = org.jboss.dmr.TypeModelValue.of(modelType15);
        org.jboss.dmr.ModelType modelType18 = org.jboss.dmr.ModelType.PROPERTY;
        char char19 = modelType18.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue20 = org.jboss.dmr.TypeModelValue.of(modelType18);
        boolean boolean21 = typeModelValue17.equals(typeModelValue20);
        java.lang.String str22 = typeModelValue20.asString();
        org.jboss.dmr.ValueExpression valueExpression23 = typeModelValue20.asExpression();
        org.jboss.dmr.ModelType modelType24 = typeModelValue20.asType();
        boolean boolean26 = typeModelValue20.asBoolean(true);
        java.lang.String str27 = typeModelValue20.asString();
        java.lang.String str28 = typeModelValue20.asString();
        org.jboss.dmr.ValueExpression valueExpression29 = typeModelValue20.asExpression();
        org.jboss.dmr.ModelNode modelNode30 = modelNode13.set(valueExpression29);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.jboss.dmr.Property> propertyList31 = modelNode30.asPropertyListOrEmpty();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanModelValue5);
        org.junit.Assert.assertNotNull(bigInteger6);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertTrue("'" + modelType10 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType10.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(\"\\\"bytes {\\\\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01\\\\n}\\\"\" => INT)" + "'", str14, "(\"\\\"bytes {\\\\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01\\\\n}\\\"\" => INT)");
        org.junit.Assert.assertTrue("'" + modelType15 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType15.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char16 + "' != '" + 'p' + "'", char16 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue17);
        org.junit.Assert.assertTrue("'" + modelType18 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType18.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char19 + "' != '" + 'p' + "'", char19 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PROPERTY" + "'", str22, "PROPERTY");
        org.junit.Assert.assertNotNull(valueExpression23);
        org.junit.Assert.assertTrue("'" + modelType24 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType24.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PROPERTY" + "'", str27, "PROPERTY");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "PROPERTY" + "'", str28, "PROPERTY");
        org.junit.Assert.assertNotNull(valueExpression29);
        org.junit.Assert.assertNotNull(modelNode30);
    }

    @Test
    public void test10906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10906");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.setExpression("hi!", "hi!");
        org.jboss.dmr.ModelNode modelNode5 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode8 = modelNode5.set("hi!", 0.0d);
        org.jboss.dmr.Property property9 = new org.jboss.dmr.Property("", modelNode8);
        boolean boolean11 = modelNode8.equals((java.lang.Object) 100L);
        boolean boolean12 = modelNode0.equals(modelNode8);
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode17 = modelNode14.set("hi!", 0.0d);
        org.jboss.dmr.Property property18 = new org.jboss.dmr.Property("", modelNode17);
        java.lang.String[] strArray19 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode20 = modelNode17.get(strArray19);
        org.jboss.dmr.ModelNode modelNode21 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int22 = modelNode21.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode23 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode26 = modelNode23.setExpression("hi!", "hi!");
        java.lang.String str27 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode23);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList28 = modelNode23.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode29 = modelNode21.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList28);
        org.jboss.dmr.ModelNode modelNode30 = modelNode20.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList28);
        org.jboss.dmr.ModelNode modelNode31 = modelNode8.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList28);
        org.jboss.dmr.ModelNode modelNode33 = modelNode8.add("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4");
        java.lang.Boolean boolean34 = modelNode8.asBooleanOrNull();
        org.jboss.dmr.BooleanModelValue booleanModelValue36 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray37 = booleanModelValue36.asBytes();
        java.lang.String str38 = booleanModelValue36.asString();
        int int39 = booleanModelValue36.asInt();
        long long40 = booleanModelValue36.asLong();
        boolean boolean42 = booleanModelValue36.equals((java.lang.Object) '4');
        long long43 = booleanModelValue36.asLong();
        java.math.BigInteger bigInteger44 = booleanModelValue36.asBigInteger();
        org.jboss.dmr.ModelNode modelNode45 = modelNode8.set(bigInteger44);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelType modelType46 = modelNode8.asType();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str27, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList28);
        org.junit.Assert.assertNotNull(modelNode29);
        org.junit.Assert.assertNotNull(modelNode30);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(modelNode33);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + true + "'", boolean34, true);
        org.junit.Assert.assertNotNull(booleanModelValue36);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "true" + "'", str38, "true");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1L + "'", long40 == 1L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
        org.junit.Assert.assertNotNull(bigInteger44);
        org.junit.Assert.assertNotNull(modelNode45);
    }

    @Test
    public void test10907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10907");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ModelNode modelNode5 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode8 = modelNode5.set("hi!", 0.0d);
        org.jboss.dmr.Property property9 = new org.jboss.dmr.Property("", modelNode8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.get(strArray10);
        org.jboss.dmr.ModelNode modelNode12 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode15 = modelNode12.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList16 = modelNode15.asList();
        org.jboss.dmr.ListModelValue listModelValue17 = new org.jboss.dmr.ListModelValue(modelNodeList16);
        org.jboss.dmr.ModelNode modelNode18 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue17);
        org.jboss.dmr.ModelValue modelValue19 = listModelValue17.resolve();
        int int21 = listModelValue17.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList22 = listModelValue17.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList23 = modelNode11.asPropertyList(propertyList22);
        org.jboss.dmr.ModelNode modelNode25 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode28 = modelNode25.set("hi!", 0.0d);
        org.jboss.dmr.Property property29 = new org.jboss.dmr.Property("", modelNode28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode31 = modelNode28.get(strArray30);
        org.jboss.dmr.ModelNode modelNode32 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode35 = modelNode32.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList36 = modelNode35.asList();
        org.jboss.dmr.ListModelValue listModelValue37 = new org.jboss.dmr.ListModelValue(modelNodeList36);
        org.jboss.dmr.ModelNode modelNode38 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue37);
        org.jboss.dmr.ModelValue modelValue39 = listModelValue37.resolve();
        int int41 = listModelValue37.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList42 = listModelValue37.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList43 = modelNode31.asPropertyList(propertyList42);
        modelNode11.setNoCopy(modelNode31);
        org.jboss.dmr.ModelNode modelNode45 = modelNode1.set("org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]", modelNode11);
        org.jboss.dmr.ModelNode modelNode47 = modelNode11.set(false);
        org.jboss.dmr.LongModelValue longModelValue49 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str50 = longModelValue49.asString();
        byte[] byteArray51 = longModelValue49.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue52 = new org.jboss.dmr.BytesModelValue(byteArray51);
        java.lang.String str53 = bytesModelValue52.asString();
        int int54 = bytesModelValue52.asInt();
        long long56 = bytesModelValue52.asLong((long) (short) 1);
        long long57 = bytesModelValue52.asLong();
        byte[] byteArray58 = bytesModelValue52.asBytes();
        org.jboss.dmr.ModelNode modelNode59 = modelNode11.set(byteArray58);
        org.jboss.dmr.ModelNode modelNode60 = modelNode59.setEmptyList();
        java.lang.String str61 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode59);
        boolean boolean63 = modelNode59.has((int) (byte) -1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNode15);
        org.junit.Assert.assertNotNull(modelNodeList16);
        org.junit.Assert.assertNotNull(modelValue19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(propertyList22);
        org.junit.Assert.assertNotNull(propertyList23);
        org.junit.Assert.assertNotNull(modelNode28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(modelNode35);
        org.junit.Assert.assertNotNull(modelNodeList36);
        org.junit.Assert.assertNotNull(modelValue39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(propertyList42);
        org.junit.Assert.assertNotNull(propertyList43);
        org.junit.Assert.assertNotNull(modelNode45);
        org.junit.Assert.assertNotNull(modelNode47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1" + "'", str50, "1");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str53, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 1L + "'", long56 == 1L);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 1L + "'", long57 == 1L);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(modelNode59);
        org.junit.Assert.assertNotNull(modelNode60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3BWwAAAAAeA==" + "'", str61, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3BWwAAAAAeA==");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test10908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10908");
        java.io.InputStream inputStream0 = null;
        org.jboss.dmr.Base64.InputStream inputStream2 = new org.jboss.dmr.Base64.InputStream(inputStream0, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream3 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream2);
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream3);
        org.jboss.dmr.Base64.InputStream inputStream6 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream3, (int) '#');
        org.jboss.dmr.Base64.InputStream inputStream8 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream6, (int) 'b');
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = inputStream6.markSupported();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10909");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        int int6 = bigIntegerModelValue4.asInt((int) (short) 1);
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode10 = modelNode7.set("hi!", 0.0d);
        java.lang.String str11 = modelNode7.toString();
        org.jboss.dmr.ModelNode modelNode12 = modelNode7.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode14 = modelNode7.set(100);
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode18 = modelNode15.set("hi!", 0.0d);
        java.lang.String str19 = modelNode15.toString();
        org.jboss.dmr.ModelNode modelNode20 = modelNode15.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode22 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode25 = modelNode22.set("hi!", 0.0d);
        org.jboss.dmr.Property property26 = new org.jboss.dmr.Property("", modelNode25);
        org.jboss.dmr.ModelNode modelNode27 = modelNode15.set(property26);
        java.lang.String str28 = modelNode27.asString();
        org.jboss.dmr.ModelNode modelNode29 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode32 = modelNode29.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList33 = modelNode32.asList();
        org.jboss.dmr.ListModelValue listModelValue34 = new org.jboss.dmr.ListModelValue(modelNodeList33);
        org.jboss.dmr.ModelNode modelNode35 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue34);
        org.jboss.dmr.ModelValue modelValue36 = listModelValue34.resolve();
        int int38 = listModelValue34.asInt((int) (byte) 100);
        boolean boolean39 = listModelValue34.asBoolean();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList40 = listModelValue34.asList();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList41 = modelNode27.asList(modelNodeList40);
        org.jboss.dmr.ModelNode modelNode42 = modelNode14.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList40);
        boolean boolean43 = bigIntegerModelValue4.equals((java.lang.Object) modelNode14);
        org.jboss.dmr.ModelType modelType44 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode45 = new org.jboss.dmr.ModelNode(modelType44);
        org.jboss.dmr.ModelNode modelNode47 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode50 = modelNode47.set("hi!", 0.0d);
        org.jboss.dmr.Property property51 = new org.jboss.dmr.Property("", modelNode50);
        org.jboss.dmr.ModelNode modelNode52 = modelNode45.set(property51);
        org.jboss.dmr.PropertyModelValue propertyModelValue53 = new org.jboss.dmr.PropertyModelValue(property51);
        org.jboss.dmr.PropertyModelValue propertyModelValue54 = new org.jboss.dmr.PropertyModelValue(property51);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList55 = propertyModelValue54.asList();
        boolean boolean56 = bigIntegerModelValue4.equals((java.lang.Object) propertyModelValue54);
        double double58 = bigIntegerModelValue4.asDouble((double) 10);
        java.math.BigInteger bigInteger59 = bigIntegerModelValue4.asBigInteger();
        java.math.BigInteger bigInteger60 = bigIntegerModelValue4.asBigInteger();
        org.jboss.dmr.ModelNode modelNode61 = new org.jboss.dmr.ModelNode(bigInteger60);
        org.jboss.dmr.ModelNode modelNode64 = new org.jboss.dmr.ModelNode("(\"EXPRESSION_VALUE\" => (\"\" => (\"hi!\" => 0.0)))");
        org.jboss.dmr.LongModelValue longModelValue66 = new org.jboss.dmr.LongModelValue((-1L));
        long long68 = longModelValue66.asLong((long) (byte) -1);
        int int70 = longModelValue66.asInt(0);
        org.jboss.dmr.ValueExpression valueExpression71 = longModelValue66.asExpression();
        org.jboss.dmr.ValueExpression valueExpression72 = longModelValue66.asExpression();
        org.jboss.dmr.ModelNode modelNode73 = modelNode64.set(valueExpression72);
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver74 = org.jboss.dmr.ValueExpressionResolver.DEFAULT_RESOLVER;
        org.jboss.dmr.BooleanModelValue booleanModelValue76 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long77 = booleanModelValue76.asLong();
        org.jboss.dmr.ValueExpression valueExpression78 = booleanModelValue76.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue79 = new org.jboss.dmr.ExpressionValue(valueExpression78);
        java.lang.String str80 = valueExpression78.getExpressionString();
        java.lang.String str81 = valueExpressionResolver74.resolve(valueExpression78);
        java.lang.String str83 = valueExpressionResolver74.resolvePart("rO0ABX5yABdvcmcuamJvc3MuZG1yLk1vZGVsVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5F\nbnVtAAAAAAAAAAASAAB4cHQACFBST1BFUlRZ");
        java.lang.String str85 = valueExpressionResolver74.resolvePart("rO0ABXNyABNqYXZhLmxhbmcuQ2hhcmFjdGVyNItH2WsaJngCAAFDAAV2YWx1ZXhwACM=");
        int int86 = valueExpression72.resolveInt(valueExpressionResolver74);
        int int87 = valueExpression72.resolveInt();
        org.jboss.dmr.ModelNode modelNode88 = modelNode61.set("\"[{}]\"", valueExpression72);
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(\"hi!\" => 0.0)" + "'", str11, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(\"hi!\" => 0.0)" + "'", str19, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(\"\" => (\"hi!\" => 0.0))" + "'", str28, "(\"\" => (\"hi!\" => 0.0))");
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertNotNull(modelNodeList33);
        org.junit.Assert.assertNotNull(modelValue36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(modelNodeList40);
        org.junit.Assert.assertNotNull(modelNodeList41);
        org.junit.Assert.assertNotNull(modelNode42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + modelType44 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType44.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode50);
        org.junit.Assert.assertNotNull(modelNode52);
        org.junit.Assert.assertNotNull(modelNodeList55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(bigInteger59);
        org.junit.Assert.assertNotNull(bigInteger60);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + (-1L) + "'", long68 == (-1L));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(valueExpression71);
        org.junit.Assert.assertNotNull(valueExpression72);
        org.junit.Assert.assertNotNull(modelNode73);
        org.junit.Assert.assertNotNull(valueExpressionResolver74);
        org.junit.Assert.assertNotNull(booleanModelValue76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 1L + "'", long77 == 1L);
        org.junit.Assert.assertNotNull(valueExpression78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "true" + "'", str80, "true");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "true" + "'", str81, "true");
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(modelNode88);
    }

    @Test
    public void test10910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10910");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str2 = longModelValue1.asString();
        byte[] byteArray3 = longModelValue1.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue4 = new org.jboss.dmr.BytesModelValue(byteArray3);
        java.lang.String str5 = bytesModelValue4.asString();
        int int6 = bytesModelValue4.asInt();
        int int7 = bytesModelValue4.asInt();
        org.jboss.dmr.LongModelValue longModelValue9 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str10 = longModelValue9.asString();
        byte[] byteArray11 = longModelValue9.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue12 = new org.jboss.dmr.BytesModelValue(byteArray11);
        double double13 = bytesModelValue12.asDouble();
        boolean boolean14 = bytesModelValue4.equals(bytesModelValue12);
        org.jboss.dmr.LongModelValue longModelValue16 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str17 = longModelValue16.asString();
        byte[] byteArray18 = longModelValue16.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue19 = new org.jboss.dmr.BytesModelValue(byteArray18);
        boolean boolean20 = bytesModelValue12.equals(bytesModelValue19);
        long long21 = bytesModelValue12.asLong();
        int int23 = bytesModelValue12.asInt(8);
        long long24 = bytesModelValue12.asLong();
        long long25 = bytesModelValue12.asLong();
        long long26 = bytesModelValue12.asLong();
        java.io.PrintWriter printWriter27 = null;
        // The following exception was thrown during execution in test generation
        try {
            bytesModelValue12.formatAsJSON(printWriter27, (int) (short) 100, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1" + "'", str2, "1");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str5, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1" + "'", str10, "1");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.9E-324d + "'", double13 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1" + "'", str17, "1");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1L + "'", long24 == 1L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
    }

    @Test
    public void test10911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10911");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        org.jboss.dmr.ModelValue modelValue2 = objectModelValue0.protect();
        java.util.List<org.jboss.dmr.Property> propertyList3 = objectModelValue0.asPropertyList();
        org.jboss.dmr.ModelValue modelValue4 = objectModelValue0.copy();
        long long5 = objectModelValue0.asLong();
        java.util.Set<java.lang.String> strSet6 = objectModelValue0.getKeys();
        org.jboss.dmr.LongModelValue longModelValue8 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str9 = longModelValue8.asString();
        byte[] byteArray10 = longModelValue8.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue11 = new org.jboss.dmr.BytesModelValue(byteArray10);
        double double12 = bytesModelValue11.asDouble();
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode((double) 100);
        org.jboss.dmr.ModelNode modelNode16 = modelNode14.set((int) '#');
        java.lang.Boolean boolean17 = modelNode14.asBooleanOrNull();
        java.lang.String str19 = modelNode14.asString("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        boolean boolean20 = bytesModelValue11.equals((java.lang.Object) modelNode14);
        int int22 = bytesModelValue11.asInt(52);
        double double23 = bytesModelValue11.asDouble();
        org.jboss.dmr.ModelNode modelNode24 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode25 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode28 = modelNode25.set("hi!", 0.0d);
        java.lang.String str29 = modelNode25.toString();
        org.jboss.dmr.ModelNode modelNode30 = modelNode25.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode32 = modelNode25.set(100);
        org.jboss.dmr.ModelNode modelNode33 = modelNode24.add(modelNode25);
        int int35 = modelNode25.asInt(2);
        org.jboss.dmr.ModelType modelType37 = org.jboss.dmr.ModelType.BYTES;
        org.jboss.dmr.ModelNode modelNode38 = modelNode25.set("[(\"hi!\" => 0.0)]", modelType37);
        org.jboss.dmr.TypeModelValue typeModelValue39 = org.jboss.dmr.TypeModelValue.of(modelType37);
        boolean boolean40 = bytesModelValue11.equals((java.lang.Object) modelType37);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory42 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream43 = null;
        org.jboss.dmr.Base64.InputStream inputStream45 = new org.jboss.dmr.Base64.InputStream(inputStream43, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream46 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream45);
        org.jboss.dmr.stream.ModelReader modelReader47 = modelStreamFactory42.newModelReader((java.io.InputStream) inputStream46);
        java.io.OutputStream outputStream48 = null;
        org.jboss.dmr.Base64.OutputStream outputStream49 = new org.jboss.dmr.Base64.OutputStream(outputStream48);
        org.jboss.dmr.Base64.OutputStream outputStream50 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream49);
        outputStream49.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter53 = modelStreamFactory42.newModelWriter((java.io.OutputStream) outputStream49);
        org.jboss.dmr.stream.ModelWriter modelWriter54 = modelWriter53.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter56 = modelWriter53.writeInt((int) '4');
        org.jboss.dmr.ModelNode modelNode57 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode60 = modelNode57.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList61 = modelNode60.asList();
        org.jboss.dmr.ListModelValue listModelValue62 = new org.jboss.dmr.ListModelValue(modelNodeList61);
        org.jboss.dmr.ModelNode modelNode63 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue62);
        org.jboss.dmr.ModelValue modelValue64 = listModelValue62.resolve();
        int int66 = listModelValue62.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList67 = listModelValue62.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList68 = listModelValue62.asPropertyList();
        java.lang.String str69 = listModelValue62.asString();
        int int70 = listModelValue62.asInt();
        java.lang.String str71 = listModelValue62.asString();
        org.jboss.dmr.ModelType modelType72 = org.jboss.dmr.ModelType.DOUBLE;
        org.jboss.dmr.ModelNode modelNode73 = new org.jboss.dmr.ModelNode(modelType72);
        boolean boolean74 = listModelValue62.equals((java.lang.Object) modelType72);
        org.jboss.dmr.TypeModelValue typeModelValue75 = org.jboss.dmr.TypeModelValue.of(modelType72);
        org.jboss.dmr.TypeModelValue typeModelValue76 = org.jboss.dmr.TypeModelValue.of(modelType72);
        org.jboss.dmr.stream.ModelWriter modelWriter77 = modelWriter53.writeType(modelType72);
        bytesModelValue11.write(modelWriter53);
        org.jboss.dmr.stream.ModelWriter modelWriter79 = modelWriter53.writePropertyStart();
        // The following exception was thrown during execution in test generation
        try {
            objectModelValue0.write(modelWriter53);
            org.junit.Assert.fail("Expected exception of type org.jboss.dmr.stream.ModelException; message: Expecting STRING");
        } catch (org.jboss.dmr.stream.ModelException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(propertyList3);
        org.junit.Assert.assertNotNull(modelValue4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1" + "'", str9, "1");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.9E-324d + "'", double12 == 4.9E-324d);
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + true + "'", boolean17, true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "35" + "'", str19, "35");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.9E-324d + "'", double23 == 4.9E-324d);
        org.junit.Assert.assertNotNull(modelNode28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(\"hi!\" => 0.0)" + "'", str29, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode30);
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertNotNull(modelNode33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        org.junit.Assert.assertTrue("'" + modelType37 + "' != '" + org.jboss.dmr.ModelType.BYTES + "'", modelType37.equals(org.jboss.dmr.ModelType.BYTES));
        org.junit.Assert.assertNotNull(modelNode38);
        org.junit.Assert.assertNotNull(typeModelValue39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(modelStreamFactory42);
        org.junit.Assert.assertNotNull(modelReader47);
        org.junit.Assert.assertNotNull(modelWriter53);
        org.junit.Assert.assertNotNull(modelWriter54);
        org.junit.Assert.assertNotNull(modelWriter56);
        org.junit.Assert.assertNotNull(modelNode60);
        org.junit.Assert.assertNotNull(modelNodeList61);
        org.junit.Assert.assertNotNull(modelValue64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(propertyList67);
        org.junit.Assert.assertNotNull(propertyList68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str69, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str71, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + modelType72 + "' != '" + org.jboss.dmr.ModelType.DOUBLE + "'", modelType72.equals(org.jboss.dmr.ModelType.DOUBLE));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(typeModelValue75);
        org.junit.Assert.assertNotNull(typeModelValue76);
        org.junit.Assert.assertNotNull(modelWriter77);
        org.junit.Assert.assertNotNull(modelWriter79);
    }

    @Test
    public void test10912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10912");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str2 = longModelValue1.asString();
        byte[] byteArray3 = longModelValue1.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue4 = new org.jboss.dmr.BytesModelValue(byteArray3);
        double double5 = bytesModelValue4.asDouble();
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode((double) 100);
        org.jboss.dmr.ModelNode modelNode9 = modelNode7.set((int) '#');
        java.lang.Boolean boolean10 = modelNode7.asBooleanOrNull();
        java.lang.String str12 = modelNode7.asString("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        boolean boolean13 = bytesModelValue4.equals((java.lang.Object) modelNode7);
        byte[] byteArray14 = bytesModelValue4.asBytes();
        org.jboss.dmr.BooleanModelValue booleanModelValue16 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray17 = booleanModelValue16.asBytes();
        org.jboss.dmr.ValueExpression valueExpression18 = booleanModelValue16.asExpression();
        double double20 = booleanModelValue16.asDouble((double) 10);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory22 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream23 = null;
        org.jboss.dmr.Base64.InputStream inputStream25 = new org.jboss.dmr.Base64.InputStream(inputStream23, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream26 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream25);
        org.jboss.dmr.stream.ModelReader modelReader27 = modelStreamFactory22.newModelReader((java.io.InputStream) inputStream26);
        java.io.OutputStream outputStream28 = null;
        org.jboss.dmr.Base64.OutputStream outputStream29 = new org.jboss.dmr.Base64.OutputStream(outputStream28);
        org.jboss.dmr.Base64.OutputStream outputStream30 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream29);
        outputStream29.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter33 = modelStreamFactory22.newModelWriter((java.io.OutputStream) outputStream29);
        org.jboss.dmr.stream.ModelWriter modelWriter34 = modelWriter33.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter36 = modelWriter33.writeInt((int) '4');
        org.jboss.dmr.stream.ModelWriter modelWriter38 = modelWriter36.writeBoolean(true);
        org.jboss.dmr.stream.ModelWriter modelWriter40 = modelWriter36.writeBoolean(true);
        org.jboss.dmr.stream.ModelWriter modelWriter42 = modelWriter40.writeLong(100L);
        booleanModelValue16.write(modelWriter40);
        bytesModelValue4.write(modelWriter40);
        int int45 = bytesModelValue4.asInt();
        long long46 = bytesModelValue4.asLong();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1" + "'", str2, "1");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.9E-324d + "'", double5 == 4.9E-324d);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertEquals("'" + boolean10 + "' != '" + true + "'", boolean10, true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "35" + "'", str12, "35");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(booleanModelValue16);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[1]");
        org.junit.Assert.assertNotNull(valueExpression18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(modelStreamFactory22);
        org.junit.Assert.assertNotNull(modelReader27);
        org.junit.Assert.assertNotNull(modelWriter33);
        org.junit.Assert.assertNotNull(modelWriter34);
        org.junit.Assert.assertNotNull(modelWriter36);
        org.junit.Assert.assertNotNull(modelWriter38);
        org.junit.Assert.assertNotNull(modelWriter40);
        org.junit.Assert.assertNotNull(modelWriter42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1L + "'", long46 == 1L);
    }

    @Test
    public void test10913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10913");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        java.lang.String str6 = modelNode3.asString("true");
        org.jboss.dmr.ModelNode modelNode8 = modelNode3.set((double) 'a');
        long long9 = modelNode3.asLong();
        org.jboss.dmr.ModelType modelType11 = org.jboss.dmr.ModelType.PROPERTY;
        char char12 = modelType11.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue13 = org.jboss.dmr.TypeModelValue.of(modelType11);
        org.jboss.dmr.ModelType modelType14 = org.jboss.dmr.ModelType.PROPERTY;
        char char15 = modelType14.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue16 = org.jboss.dmr.TypeModelValue.of(modelType14);
        boolean boolean17 = typeModelValue13.equals(typeModelValue16);
        java.lang.String str18 = typeModelValue16.asString();
        org.jboss.dmr.ModelType modelType19 = org.jboss.dmr.ModelType.PROPERTY;
        char char20 = modelType19.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue21 = org.jboss.dmr.TypeModelValue.of(modelType19);
        org.jboss.dmr.ModelType modelType22 = org.jboss.dmr.ModelType.PROPERTY;
        char char23 = modelType22.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue24 = org.jboss.dmr.TypeModelValue.of(modelType22);
        boolean boolean25 = typeModelValue21.equals(typeModelValue24);
        java.lang.String str26 = typeModelValue24.asString();
        boolean boolean28 = typeModelValue24.asBoolean(true);
        boolean boolean29 = typeModelValue16.equals(typeModelValue24);
        org.jboss.dmr.ValueExpression valueExpression30 = typeModelValue24.asExpression();
        org.jboss.dmr.ValueExpression valueExpression31 = typeModelValue24.asExpression();
        org.jboss.dmr.ModelNode modelNode32 = modelNode3.set("\"[1]\"", valueExpression31);
        java.lang.String str33 = valueExpression31.getExpressionString();
        org.jboss.dmr.ModelNode modelNode34 = new org.jboss.dmr.ModelNode(valueExpression31);
        org.jboss.dmr.ModelType modelType35 = org.jboss.dmr.ModelType.BIG_INTEGER;
        org.jboss.dmr.ModelNode modelNode36 = modelNode34.set(modelType35);
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "(\"hi!\" => 0.0)" + "'", str6, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 97L + "'", long9 == 97L);
        org.junit.Assert.assertTrue("'" + modelType11 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType11.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char12 + "' != '" + 'p' + "'", char12 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue13);
        org.junit.Assert.assertTrue("'" + modelType14 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType14.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char15 + "' != '" + 'p' + "'", char15 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PROPERTY" + "'", str18, "PROPERTY");
        org.junit.Assert.assertTrue("'" + modelType19 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType19.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char20 + "' != '" + 'p' + "'", char20 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue21);
        org.junit.Assert.assertTrue("'" + modelType22 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType22.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char23 + "' != '" + 'p' + "'", char23 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "PROPERTY" + "'", str26, "PROPERTY");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(valueExpression30);
        org.junit.Assert.assertNotNull(valueExpression31);
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PROPERTY" + "'", str33, "PROPERTY");
        org.junit.Assert.assertTrue("'" + modelType35 + "' != '" + org.jboss.dmr.ModelType.BIG_INTEGER + "'", modelType35.equals(org.jboss.dmr.ModelType.BIG_INTEGER));
        org.junit.Assert.assertNotNull(modelNode36);
    }

    @Test
    public void test10914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10914");
        org.jboss.dmr.BooleanModelValue booleanModelValue1 = org.jboss.dmr.BooleanModelValue.valueOf(false);
        long long3 = booleanModelValue1.asLong((long) 32);
        int int4 = booleanModelValue1.asInt();
        org.jboss.dmr.ModelNode modelNode5 = org.jboss.dmr.ModelNode.FALSE;
        boolean boolean6 = booleanModelValue1.equals((java.lang.Object) modelNode5);
        org.jboss.dmr.ModelType modelType7 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode(modelType7);
        org.jboss.dmr.ModelNode modelNode10 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode13 = modelNode10.set("hi!", 0.0d);
        org.jboss.dmr.Property property14 = new org.jboss.dmr.Property("", modelNode13);
        org.jboss.dmr.ModelNode modelNode15 = modelNode8.set(property14);
        org.jboss.dmr.ModelNode modelNode16 = property14.getValue();
        org.jboss.dmr.PropertyModelValue propertyModelValue17 = new org.jboss.dmr.PropertyModelValue(property14);
        java.util.List<org.jboss.dmr.Property> propertyList18 = propertyModelValue17.asPropertyList();
        org.jboss.dmr.ModelNode modelNode20 = propertyModelValue17.getChild((int) (short) 0);
        org.jboss.dmr.ModelNode modelNode21 = modelNode20.setEmptyList();
        boolean boolean23 = modelNode21.asBoolean(false);
        int int25 = modelNode21.asInt((int) (byte) -1);
        org.jboss.dmr.ModelNode modelNode28 = modelNode21.set("AAAAAAAAAAE=", "");
        boolean boolean29 = modelNode5.equals(modelNode21);
        org.jboss.dmr.ModelNode modelNode31 = modelNode21.setExpression("{}");
        org.jboss.dmr.ModelNode modelNode33 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode34 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode37 = modelNode34.set("hi!", 0.0d);
        java.lang.String str38 = modelNode34.toString();
        org.jboss.dmr.ModelNode modelNode39 = modelNode34.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode41 = modelNode34.set(100);
        org.jboss.dmr.ModelNode modelNode42 = modelNode33.add(modelNode34);
        org.jboss.dmr.LongModelValue longModelValue45 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str46 = longModelValue45.asString();
        byte[] byteArray47 = longModelValue45.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue48 = new org.jboss.dmr.BytesModelValue(byteArray47);
        java.lang.String str49 = bytesModelValue48.asString();
        int int50 = bytesModelValue48.asInt();
        long long52 = bytesModelValue48.asLong((long) (short) 1);
        int int53 = bytesModelValue48.asInt();
        int int54 = bytesModelValue48.asInt();
        byte[] byteArray55 = bytesModelValue48.asBytes();
        org.jboss.dmr.ModelNode modelNode56 = modelNode33.add("", byteArray55);
        org.jboss.dmr.ModelNode modelNode57 = modelNode31.set("rO0ABXQAEUV4cHJlc3Npb24gInRydWUi", byteArray55);
        org.junit.Assert.assertNotNull(booleanModelValue1);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + modelType7 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType7.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode15);
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertNotNull(propertyList18);
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(modelNode21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(modelNode28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(modelNode37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(\"hi!\" => 0.0)" + "'", str38, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode39);
        org.junit.Assert.assertNotNull(modelNode41);
        org.junit.Assert.assertNotNull(modelNode42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1" + "'", str46, "1");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str49, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1L + "'", long52 == 1L);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(modelNode56);
        org.junit.Assert.assertNotNull(modelNode57);
    }

    @Test
    public void test10915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10915");
        org.jboss.dmr.ExpressionValue expressionValue1 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue3 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean4 = expressionValue1.equals(expressionValue3);
        org.jboss.dmr.ExpressionValue expressionValue6 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue8 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean9 = expressionValue6.equals(expressionValue8);
        boolean boolean10 = expressionValue1.equals(expressionValue8);
        org.jboss.dmr.ModelValue modelValue11 = expressionValue1.resolve();
        java.lang.String str12 = expressionValue1.asString();
        org.jboss.dmr.ModelValue modelValue13 = expressionValue1.resolve();
        java.lang.String str14 = expressionValue1.asString();
        java.lang.Object obj15 = null;
        boolean boolean16 = expressionValue1.equals(obj15);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(modelValue11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(modelValue13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test10916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10916");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((long) 10);
        java.lang.String str3 = modelNode1.asString("true");
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long7 = modelNode6.asLong();
        org.jboss.dmr.ValueExpression valueExpression8 = modelNode6.asExpression();
        java.math.BigDecimal bigDecimal9 = valueExpression8.resolveBigDecimal();
        org.jboss.dmr.ModelNode modelNode10 = new org.jboss.dmr.ModelNode(bigDecimal9);
        org.jboss.dmr.ModelNode modelNode12 = modelNode10.set((double) (byte) 0);
        org.jboss.dmr.ModelNode modelNode13 = modelNode1.setNoCopy("35", modelNode12);
        boolean boolean15 = modelNode12.hasDefined("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3R3AANW9yZy5qYm9z\ncy5kbXIuc3RyZWFtLk1vZGVsRXhjZXB0aW9uOiBbKCJoaSEiID0+IDAuMCldcAADaGkhRAAAAAAA\nAAAAeA==");
        org.jboss.dmr.ModelNode modelNode17 = new org.jboss.dmr.ModelNode("EXPRESSION_VALUE");
        org.jboss.dmr.ModelNode modelNode18 = modelNode17.clear();
        boolean boolean20 = modelNode17.has((int) '#');
        org.jboss.dmr.ModelNode modelNode23 = modelNode17.add("BYTES_VALUE", "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4");
        boolean boolean25 = modelNode23.has((int) (short) 10);
        boolean boolean27 = modelNode23.has("H4sIAAAAAAAAANv/gQEMALshig4IAAAA");
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList28 = modelNode23.asList();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode30 = modelNode12.insert(modelNode23, 52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "10" + "'", str3, "10");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertNotNull(valueExpression8);
        org.junit.Assert.assertNotNull(bigDecimal9);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(modelNode23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(modelNodeList28);
    }

    @Test
    public void test10917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10917");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long2 = doubleModelValue1.asLong();
        boolean boolean4 = doubleModelValue1.asBoolean(true);
        int int5 = doubleModelValue1.asInt();
        org.jboss.dmr.LongModelValue longModelValue7 = new org.jboss.dmr.LongModelValue(1L);
        long long9 = longModelValue7.asLong((long) (short) 0);
        double double10 = longModelValue7.asDouble();
        boolean boolean11 = doubleModelValue1.equals((java.lang.Object) longModelValue7);
        boolean boolean12 = longModelValue7.asBoolean();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10L + "'", long2 == 10L);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test10918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10918");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3R3AANW9yZy5qYm9z\ncy5kbXIuc3RyZWFtLk1vZGVsRXhjZXB0aW9uOiBbKCJoaSEiID0+IDAuMCldcAADaGkhRAAAAAAA\nAAAAeA==");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory3 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream4 = null;
        org.jboss.dmr.Base64.InputStream inputStream6 = new org.jboss.dmr.Base64.InputStream(inputStream4, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue8 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str9 = longModelValue8.asString();
        byte[] byteArray10 = longModelValue8.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue11 = new org.jboss.dmr.BytesModelValue(byteArray10);
        int int14 = inputStream6.read(byteArray10, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream16 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream6, (-1));
        org.jboss.dmr.stream.ModelReader modelReader17 = modelStreamFactory3.newModelReader((java.io.InputStream) inputStream16);
        java.io.InputStream inputStream18 = null;
        org.jboss.dmr.Base64.InputStream inputStream20 = new org.jboss.dmr.Base64.InputStream(inputStream18, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream21 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream20);
        org.jboss.dmr.Base64.InputStream inputStream22 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream20);
        org.jboss.dmr.stream.ModelReader modelReader23 = modelStreamFactory3.newModelReader((java.io.InputStream) inputStream20);
        java.io.InputStream inputStream24 = null;
        org.jboss.dmr.Base64.InputStream inputStream26 = new org.jboss.dmr.Base64.InputStream(inputStream24, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream27 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream26);
        org.jboss.dmr.stream.ModelReader modelReader28 = modelStreamFactory3.newModelReader((java.io.InputStream) inputStream26);
        java.io.OutputStream outputStream29 = null;
        org.jboss.dmr.Base64.OutputStream outputStream30 = new org.jboss.dmr.Base64.OutputStream(outputStream29);
        outputStream30.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream32 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream30);
        org.jboss.dmr.Base64.OutputStream outputStream33 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream32);
        outputStream32.flushBase64();
        org.jboss.dmr.Base64.OutputStream outputStream35 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream32);
        org.jboss.dmr.Base64.OutputStream outputStream36 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream32);
        org.jboss.dmr.stream.ModelWriter modelWriter37 = modelStreamFactory3.newModelWriter((java.io.OutputStream) outputStream36);
        stringModelValue1.write(modelWriter37);
        byte[] byteArray39 = stringModelValue1.asBytes();
        java.lang.String str43 = org.jboss.dmr.Base64.encodeBytes(byteArray39, (int) 'J', (int) (short) 0, (int) 'J');
        org.junit.Assert.assertNotNull(modelStreamFactory3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1" + "'", str9, "1");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(modelReader17);
        org.junit.Assert.assertNotNull(modelReader23);
        org.junit.Assert.assertNotNull(modelReader28);
        org.junit.Assert.assertNotNull(modelWriter37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[114, 79, 48, 65, 66, 88, 78, 121, 65, 66, 100, 118, 99, 109, 99, 117, 97, 109, 74, 118, 99, 51, 77, 117, 90, 71, 49, 121, 76, 107, 49, 118, 90, 71, 86, 115, 84, 109, 57, 107, 90, 82, 119, 116, 111, 85, 83, 100, 111, 52, 52, 47, 68, 65, 65, 65, 101, 72, 66, 51, 82, 51, 65, 65, 78, 87, 57, 121, 90, 121, 53, 113, 89, 109, 57, 122, 10, 99, 121, 53, 107, 98, 88, 73, 117, 99, 51, 82, 121, 90, 87, 70, 116, 76, 107, 49, 118, 90, 71, 86, 115, 82, 88, 104, 106, 90, 88, 66, 48, 97, 87, 57, 117, 79, 105, 66, 98, 75, 67, 74, 111, 97, 83, 69, 105, 73, 68, 48, 43, 73, 68, 65, 117, 77, 67, 108, 100, 99, 65, 65, 68, 97, 71, 107, 104, 82, 65, 65, 65, 65, 65, 65, 65, 10, 65, 65, 65, 65, 101, 65, 61, 61]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "H4sIAAAAAAAAAAMAAAAAAAAAAAA=" + "'", str43, "H4sIAAAAAAAAAAMAAAAAAAAAAAA=");
    }

    @Test
    public void test10919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10919");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ModelNode modelNode5 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode8 = modelNode5.set("hi!", 0.0d);
        org.jboss.dmr.Property property9 = new org.jboss.dmr.Property("", modelNode8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.get(strArray10);
        org.jboss.dmr.ModelNode modelNode12 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode15 = modelNode12.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList16 = modelNode15.asList();
        org.jboss.dmr.ListModelValue listModelValue17 = new org.jboss.dmr.ListModelValue(modelNodeList16);
        org.jboss.dmr.ModelNode modelNode18 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue17);
        org.jboss.dmr.ModelValue modelValue19 = listModelValue17.resolve();
        int int21 = listModelValue17.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList22 = listModelValue17.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList23 = modelNode11.asPropertyList(propertyList22);
        org.jboss.dmr.ModelNode modelNode25 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode28 = modelNode25.set("hi!", 0.0d);
        org.jboss.dmr.Property property29 = new org.jboss.dmr.Property("", modelNode28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode31 = modelNode28.get(strArray30);
        org.jboss.dmr.ModelNode modelNode32 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode35 = modelNode32.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList36 = modelNode35.asList();
        org.jboss.dmr.ListModelValue listModelValue37 = new org.jboss.dmr.ListModelValue(modelNodeList36);
        org.jboss.dmr.ModelNode modelNode38 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue37);
        org.jboss.dmr.ModelValue modelValue39 = listModelValue37.resolve();
        int int41 = listModelValue37.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList42 = listModelValue37.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList43 = modelNode31.asPropertyList(propertyList42);
        modelNode11.setNoCopy(modelNode31);
        org.jboss.dmr.ModelNode modelNode45 = modelNode1.set("org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]", modelNode11);
        org.jboss.dmr.ModelNode modelNode47 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode50 = modelNode47.set("hi!", 0.0d);
        org.jboss.dmr.Property property51 = new org.jboss.dmr.Property("", modelNode50);
        java.lang.String[] strArray52 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode53 = modelNode50.get(strArray52);
        org.jboss.dmr.ModelNode modelNode54 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int55 = modelNode54.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode56 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode59 = modelNode56.setExpression("hi!", "hi!");
        java.lang.String str60 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode56);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList61 = modelNode56.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode62 = modelNode54.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList61);
        org.jboss.dmr.ModelNode modelNode63 = modelNode53.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList61);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList64 = modelNode1.asList(modelNodeList61);
        modelNode1.protect();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode68 = modelNode1.add("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3BW8AAAAAeA==", 0);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNode15);
        org.junit.Assert.assertNotNull(modelNodeList16);
        org.junit.Assert.assertNotNull(modelValue19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(propertyList22);
        org.junit.Assert.assertNotNull(propertyList23);
        org.junit.Assert.assertNotNull(modelNode28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(modelNode35);
        org.junit.Assert.assertNotNull(modelNodeList36);
        org.junit.Assert.assertNotNull(modelValue39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(propertyList42);
        org.junit.Assert.assertNotNull(propertyList43);
        org.junit.Assert.assertNotNull(modelNode45);
        org.junit.Assert.assertNotNull(modelNode50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(modelNode53);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNotNull(modelNode59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str60, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList61);
        org.junit.Assert.assertNotNull(modelNode62);
        org.junit.Assert.assertNotNull(modelNode63);
        org.junit.Assert.assertNotNull(modelNodeList64);
    }

    @Test
    public void test10920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10920");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(modelType0);
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode6 = modelNode3.set("hi!", 0.0d);
        org.jboss.dmr.Property property7 = new org.jboss.dmr.Property("", modelNode6);
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(property7);
        org.jboss.dmr.PropertyModelValue propertyModelValue9 = new org.jboss.dmr.PropertyModelValue(property7);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList10 = propertyModelValue9.asList();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelType modelType11 = propertyModelValue9.asType();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType0.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNodeList10);
    }

    @Test
    public void test10921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10921");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.DOUBLE;
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(modelType0);
        java.lang.String str3 = modelNode1.asString("[{}]");
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.DOUBLE + "'", modelType0.equals(org.jboss.dmr.ModelType.DOUBLE));
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "DOUBLE" + "'", str3, "DOUBLE");
    }

    @Test
    public void test10922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10922");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        boolean boolean8 = bigDecimalModelValue7.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression9 = bigDecimalModelValue7.asExpression();
        int int11 = bigDecimalModelValue7.asInt((int) '#');
        org.jboss.dmr.ModelType modelType12 = org.jboss.dmr.ModelType.PROPERTY;
        char char13 = modelType12.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue14 = org.jboss.dmr.TypeModelValue.of(modelType12);
        boolean boolean15 = typeModelValue14.asBoolean();
        org.jboss.dmr.BooleanModelValue booleanModelValue17 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray18 = booleanModelValue17.asBytes();
        java.lang.String str19 = booleanModelValue17.asString();
        int int20 = booleanModelValue17.asInt();
        boolean boolean21 = typeModelValue14.equals((java.lang.Object) booleanModelValue17);
        long long23 = booleanModelValue17.asLong((long) (-1));
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory25 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream26 = null;
        org.jboss.dmr.Base64.InputStream inputStream28 = new org.jboss.dmr.Base64.InputStream(inputStream26, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream29 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream28);
        org.jboss.dmr.stream.ModelReader modelReader30 = modelStreamFactory25.newModelReader((java.io.InputStream) inputStream29);
        java.io.OutputStream outputStream31 = null;
        org.jboss.dmr.Base64.OutputStream outputStream32 = new org.jboss.dmr.Base64.OutputStream(outputStream31);
        org.jboss.dmr.Base64.OutputStream outputStream33 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream32);
        outputStream32.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter36 = modelStreamFactory25.newModelWriter((java.io.OutputStream) outputStream32);
        org.jboss.dmr.stream.ModelWriter modelWriter37 = modelWriter36.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter39 = modelWriter36.writeInt((int) '4');
        org.jboss.dmr.stream.ModelWriter modelWriter41 = modelWriter36.writeDouble((double) 100.0f);
        org.jboss.dmr.stream.ModelWriter modelWriter43 = modelWriter36.writeDouble((double) '#');
        booleanModelValue17.write(modelWriter36);
        bigDecimalModelValue7.write(modelWriter36);
        boolean boolean46 = bigDecimalModelValue7.asBoolean();
        int int48 = bigDecimalModelValue7.asInt((int) 'b');
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(valueExpression9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + modelType12 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType12.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char13 + "' != '" + 'p' + "'", char13 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(booleanModelValue17);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "true" + "'", str19, "true");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertNotNull(modelStreamFactory25);
        org.junit.Assert.assertNotNull(modelReader30);
        org.junit.Assert.assertNotNull(modelWriter36);
        org.junit.Assert.assertNotNull(modelWriter37);
        org.junit.Assert.assertNotNull(modelWriter39);
        org.junit.Assert.assertNotNull(modelWriter41);
        org.junit.Assert.assertNotNull(modelWriter43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
    }

    @Test
    public void test10923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10923");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isLong();
        boolean boolean17 = modelReader15.isExpression();
        boolean boolean18 = modelReader15.isListEnd();
        boolean boolean19 = modelReader15.isBoolean();
        boolean boolean20 = modelReader15.isDouble();
        // The following exception was thrown during execution in test generation
        try {
            long long21 = modelReader15.getLong();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Current event isn't long");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test10924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10924");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.setExpression("hi!", "hi!");
        java.lang.String str5 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode1);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList6 = modelNode1.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set((double) 0);
        org.jboss.dmr.ModelType modelType10 = org.jboss.dmr.ModelType.PROPERTY;
        char char11 = modelType10.getTypeChar();
        org.jboss.dmr.ModelNode modelNode12 = modelNode1.set("[(\"hi!\" => 0.0)]", modelType10);
        org.jboss.dmr.Property property13 = new org.jboss.dmr.Property("\"(\\\"hi!\\\" => 0.0)\"", modelNode12);
        java.lang.String str14 = modelNode12.asStringOrNull();
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str5, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertTrue("'" + modelType10 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType10.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char11 + "' != '" + 'p' + "'", char11 == 'p');
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(\"[(\\\"hi!\\\" => 0.0)]\" => PROPERTY)" + "'", str14, "(\"[(\\\"hi!\\\" => 0.0)]\" => PROPERTY)");
    }

    @Test
    public void test10925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10925");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue5);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList7 = modelNode6.asList();
        org.jboss.dmr.ListModelValue listModelValue8 = new org.jboss.dmr.ListModelValue(modelNodeList7);
        int int10 = listModelValue8.asInt((int) ' ');
        boolean boolean12 = listModelValue8.asBoolean(false);
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertNotNull(modelNodeList7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test10926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10926");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode("EXPRESSION_VALUE");
        org.jboss.dmr.ModelNode modelNode2 = modelNode1.clear();
        org.jboss.dmr.ModelNode modelNode4 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.BooleanModelValue booleanModelValue6 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger7 = booleanModelValue6.asBigInteger();
        org.jboss.dmr.ModelNode modelNode8 = modelNode4.add(bigInteger7);
        org.jboss.dmr.ModelNode modelNode9 = new org.jboss.dmr.ModelNode(bigInteger7);
        boolean boolean10 = modelNode9.isProtected();
        org.jboss.dmr.ModelNode modelNode11 = modelNode9.clone();
        org.jboss.dmr.ModelNode modelNode13 = modelNode9.set((long) (-1));
        org.jboss.dmr.ModelNode modelNode14 = modelNode2.setNoCopy("(\"true\" => big decimal 1.0)", modelNode9);
        org.jboss.dmr.ModelNode modelNode17 = modelNode14.set("\"org.jboss.dmr.stream.ModelException: \\\"35\\\"\"", "{\n    \"TYPE_MODEL_VALUE\" => undefined,\n    \"[(\\\"hi!\\\" => 0.0)]\" => undefined,\n    \"\\\"(\\\\\\\"hi!\\\\\\\" => 0.0)\\\"\" => undefined\n}");
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode19 = modelNode14.add(0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode2);
        org.junit.Assert.assertNotNull(booleanModelValue6);
        org.junit.Assert.assertNotNull(bigInteger7);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(modelNode17);
    }

    @Test
    public void test10927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10927");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long3 = intModelValue1.asLong((long) 'b');
        java.lang.String str4 = intModelValue1.asString();
        java.math.BigInteger bigInteger5 = intModelValue1.asBigInteger();
        byte[] byteArray6 = intModelValue1.asBytes();
        boolean boolean8 = intModelValue1.has("[1]");
        long long10 = intModelValue1.asLong((long) (byte) 10);
        org.jboss.dmr.ModelNode modelNode11 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) intModelValue1);
        java.math.BigDecimal bigDecimal12 = intModelValue1.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode13 = new org.jboss.dmr.ModelNode(bigDecimal12);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.jboss.dmr.ModelNode> modelNodeList14 = modelNode13.asListOrEmpty();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 32L + "'", long3 == 32L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "32" + "'", str4, "32");
        org.junit.Assert.assertNotNull(bigInteger5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 0, 0, 32]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 32L + "'", long10 == 32L);
        org.junit.Assert.assertNotNull(bigDecimal12);
    }

    @Test
    public void test10928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10928");
        java.lang.Throwable throwable1 = null;
        org.jboss.dmr.stream.ModelException modelException2 = new org.jboss.dmr.stream.ModelException("[(\"hi!\" => 0.0)]", throwable1);
        org.jboss.dmr.stream.ModelException modelException3 = new org.jboss.dmr.stream.ModelException(throwable1);
        java.lang.Throwable[] throwableArray4 = modelException3.getSuppressed();
        org.jboss.dmr.stream.ModelException modelException5 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException3);
        org.junit.Assert.assertNotNull(throwableArray4);
    }

    @Test
    public void test10929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10929");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode("org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
    }

    @Test
    public void test10930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10930");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        org.jboss.dmr.ValueExpression valueExpression2 = stringModelValue1.asExpression();
        boolean boolean4 = stringModelValue1.equals((java.lang.Object) (-1.0d));
        java.lang.String str5 = stringModelValue1.asString();
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.BooleanModelValue booleanModelValue8 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger9 = booleanModelValue8.asBigInteger();
        org.jboss.dmr.ModelNode modelNode10 = modelNode6.add(bigInteger9);
        boolean boolean11 = stringModelValue1.equals((java.lang.Object) modelNode10);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory13 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream14 = null;
        org.jboss.dmr.Base64.InputStream inputStream16 = new org.jboss.dmr.Base64.InputStream(inputStream14, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue18 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str19 = longModelValue18.asString();
        byte[] byteArray20 = longModelValue18.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue21 = new org.jboss.dmr.BytesModelValue(byteArray20);
        int int24 = inputStream16.read(byteArray20, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream26 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream16, (-1));
        org.jboss.dmr.stream.ModelReader modelReader27 = modelStreamFactory13.newModelReader((java.io.InputStream) inputStream26);
        boolean boolean28 = modelReader27.isBigInteger();
        boolean boolean29 = modelReader27.isLong();
        boolean boolean30 = modelReader27.isBigDecimal();
        boolean boolean31 = modelReader27.isUndefined();
        boolean boolean32 = modelReader27.isUndefined();
        boolean boolean33 = modelReader27.hasNext();
        boolean boolean34 = modelReader27.isExpression();
        boolean boolean35 = modelReader27.isListStart();
        boolean boolean36 = stringModelValue1.equals((java.lang.Object) boolean35);
        // The following exception was thrown during execution in test generation
        try {
            java.math.BigDecimal bigDecimal37 = stringModelValue1.asBigDecimal();
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: null");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(valueExpression2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(\"\" => (\"hi!\" => 0.0))" + "'", str5, "(\"\" => (\"hi!\" => 0.0))");
        org.junit.Assert.assertNotNull(booleanModelValue8);
        org.junit.Assert.assertNotNull(bigInteger9);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(modelStreamFactory13);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1" + "'", str19, "1");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(modelReader27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test10931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10931");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(35L);
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode6 = modelNode3.setExpression("hi!", "hi!");
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList7 = modelNode6.asListOrEmpty();
        org.jboss.dmr.PropertyModelValue propertyModelValue9 = new org.jboss.dmr.PropertyModelValue("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=", modelNode6, false);
        boolean boolean11 = propertyModelValue9.has("10.0");
        org.jboss.dmr.ModelNode modelNode13 = propertyModelValue9.getChild(0);
        org.jboss.dmr.ModelValue modelValue14 = propertyModelValue9.resolve();
        org.jboss.dmr.ModelNode modelNode16 = propertyModelValue9.getChild((int) (short) 0);
        org.jboss.dmr.ModelNode modelNode18 = modelNode16.set((double) 0L);
        org.jboss.dmr.ModelNode modelNode19 = modelNode1.set(modelNode16);
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNodeList7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelValue14);
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertNotNull(modelNode19);
    }

    @Test
    public void test10932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10932");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(true);
        org.jboss.dmr.ModelNode modelNode2 = modelNode1.resolve();
        java.lang.String str3 = modelNode1.asString();
        org.jboss.dmr.ModelNode modelNode5 = modelNode1.set((long) 52);
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode10 = modelNode7.setExpression("hi!", "hi!");
        java.lang.String str11 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode7);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = modelNode7.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode14 = modelNode7.set((double) 0);
        org.jboss.dmr.ModelType modelType16 = org.jboss.dmr.ModelType.PROPERTY;
        char char17 = modelType16.getTypeChar();
        org.jboss.dmr.ModelNode modelNode18 = modelNode7.set("[(\"hi!\" => 0.0)]", modelType16);
        org.jboss.dmr.Property property19 = new org.jboss.dmr.Property("\"(\\\"hi!\\\" => 0.0)\"", modelNode18);
        org.jboss.dmr.ModelNode modelNode20 = modelNode5.set(property19);
        org.jboss.dmr.ModelNode modelNode22 = modelNode5.set(false);
        boolean boolean23 = modelNode22.isProtected();
        org.jboss.dmr.ModelType modelType25 = org.jboss.dmr.ModelType.PROPERTY;
        char char26 = modelType25.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue27 = org.jboss.dmr.TypeModelValue.of(modelType25);
        char char28 = modelType25.getTypeChar();
        org.jboss.dmr.ModelNode modelNode29 = modelNode22.set("rO0ABXQAByJbOTdMXSI=", modelType25);
        org.jboss.dmr.ModelNode modelNode32 = modelNode29.set("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: {\n    \"hi!\" : {\n        \"EXPRESSION_VALUE\" : \"hi!\"\n    }\n}", (double) 'a');
        org.jboss.dmr.BooleanModelValue booleanModelValue33 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double34 = booleanModelValue33.asDouble();
        org.jboss.dmr.ModelValue modelValue35 = booleanModelValue33.copy();
        java.math.BigInteger bigInteger36 = booleanModelValue33.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue37 = new org.jboss.dmr.BigIntegerModelValue(bigInteger36);
        long long39 = bigIntegerModelValue37.asLong((long) 'b');
        boolean boolean41 = bigIntegerModelValue37.asBoolean(false);
        org.jboss.dmr.ValueExpression valueExpression42 = bigIntegerModelValue37.asExpression();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode43 = modelNode29.add(valueExpression42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "true" + "'", str3, "true");
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str11, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList12);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertTrue("'" + modelType16 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType16.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char17 + "' != '" + 'p' + "'", char17 == 'p');
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(modelNode22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + modelType25 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType25.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char26 + "' != '" + 'p' + "'", char26 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue27);
        org.junit.Assert.assertTrue("'" + char28 + "' != '" + 'p' + "'", char28 == 'p');
        org.junit.Assert.assertNotNull(modelNode29);
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertNotNull(booleanModelValue33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue35);
        org.junit.Assert.assertNotNull(bigInteger36);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1L + "'", long39 == 1L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(valueExpression42);
    }

    @Test
    public void test10933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10933");
        java.io.OutputStream outputStream0 = null;
        org.jboss.dmr.Base64.OutputStream outputStream1 = new org.jboss.dmr.Base64.OutputStream(outputStream0);
        outputStream1.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream3 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream1);
        org.jboss.dmr.Base64.OutputStream outputStream5 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream3, (int) (byte) -1);
        org.jboss.dmr.Base64.OutputStream outputStream6 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream5);
        outputStream6.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream9 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream6, 0);
        outputStream6.write((int) ' ');
    }

    @Test
    public void test10934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10934");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(modelType0);
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode6 = modelNode3.set("hi!", 0.0d);
        org.jboss.dmr.Property property7 = new org.jboss.dmr.Property("", modelNode6);
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(property7);
        org.jboss.dmr.PropertyModelValue propertyModelValue9 = new org.jboss.dmr.PropertyModelValue(property7);
        org.jboss.dmr.ModelNode modelNode10 = propertyModelValue9.asObject();
        java.lang.String str11 = propertyModelValue9.asString();
        org.jboss.dmr.ModelNode modelNode12 = propertyModelValue9.asObject();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ValueExpression valueExpression13 = modelNode12.asExpression();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType0.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(\"\" => (\"hi!\" => 0.0))" + "'", str11, "(\"\" => (\"hi!\" => 0.0))");
        org.junit.Assert.assertNotNull(modelNode12);
    }

    @Test
    public void test10935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10935");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(false);
        int int3 = modelNode1.asInt(2);
        org.jboss.dmr.ModelNode modelNode5 = modelNode1.set(52);
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set("\"(\\\"rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4\\\" => (\\\"hi!\\\" => 0.0))\"", 32L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(modelNode8);
    }

    @Test
    public void test10936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10936");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.BooleanModelValue booleanModelValue2 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger3 = booleanModelValue2.asBigInteger();
        org.jboss.dmr.ModelNode modelNode4 = modelNode0.add(bigInteger3);
        org.jboss.dmr.ModelNode modelNode6 = modelNode0.add((double) 100);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList7 = modelNode6.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode9 = modelNode6.set("(\"EXPRESSION_VALUE\" => 0.0)");
        org.jboss.dmr.StringModelValue stringModelValue11 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.StringModelValue stringModelValue13 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        boolean boolean14 = stringModelValue11.equals(stringModelValue13);
        byte[] byteArray15 = stringModelValue13.asBytes();
        boolean boolean17 = org.jboss.dmr.Base64.encodeToFile(byteArray15, "org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        boolean boolean19 = org.jboss.dmr.Base64.encodeToFile(byteArray15, "\"TYPE_MODEL_VALUE\"");
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode20 = modelNode6.add(byteArray15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanModelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNodeList7);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[40, 34, 34, 32, 61, 62, 32, 40, 34, 104, 105, 33, 34, 32, 61, 62, 32, 48, 46, 48, 41, 41]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test10937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10937");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str2 = longModelValue1.asString();
        double double4 = longModelValue1.asDouble((double) 32L);
        org.jboss.dmr.ValueExpression valueExpression5 = longModelValue1.asExpression();
        long long7 = longModelValue1.asLong((long) 'a');
        int int9 = longModelValue1.asInt((int) '4');
        java.lang.String str10 = longModelValue1.asString();
        long long11 = longModelValue1.asLong();
        java.math.BigInteger bigInteger12 = longModelValue1.asBigInteger();
        double double14 = longModelValue1.asDouble((double) 'p');
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory16 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream17 = null;
        org.jboss.dmr.Base64.InputStream inputStream19 = new org.jboss.dmr.Base64.InputStream(inputStream17, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream20 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream19);
        org.jboss.dmr.stream.ModelReader modelReader21 = modelStreamFactory16.newModelReader((java.io.InputStream) inputStream20);
        java.io.OutputStream outputStream22 = null;
        org.jboss.dmr.Base64.OutputStream outputStream23 = new org.jboss.dmr.Base64.OutputStream(outputStream22);
        org.jboss.dmr.Base64.OutputStream outputStream24 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream23);
        outputStream23.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter27 = modelStreamFactory16.newModelWriter((java.io.OutputStream) outputStream23);
        org.jboss.dmr.stream.ModelWriter modelWriter29 = modelWriter27.writeDouble((double) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            longModelValue1.write(modelWriter27);
            org.junit.Assert.fail("Expected exception of type org.jboss.dmr.stream.ModelException; message: Expecting EOF");
        } catch (org.jboss.dmr.stream.ModelException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1" + "'", str2, "1");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(valueExpression5);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1" + "'", str10, "1");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertNotNull(bigInteger12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(modelStreamFactory16);
        org.junit.Assert.assertNotNull(modelReader21);
        org.junit.Assert.assertNotNull(modelWriter27);
        org.junit.Assert.assertNotNull(modelWriter29);
    }

    @Test
    public void test10938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10938");
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode1 = org.jboss.dmr.ModelNode.fromJSONString("H4sIAAAAAAAAAHNQYQADAAsATXcIAAAA");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unexpected character 'H' while reading DMR stream");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10939");
        org.jboss.dmr.ExpressionValue expressionValue1 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue3 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean4 = expressionValue1.equals(expressionValue3);
        org.jboss.dmr.ExpressionValue expressionValue6 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue8 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean9 = expressionValue6.equals(expressionValue8);
        boolean boolean10 = expressionValue1.equals(expressionValue8);
        org.jboss.dmr.ValueExpression valueExpression11 = expressionValue8.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue13 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ValueExpression valueExpression14 = expressionValue13.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue16 = new org.jboss.dmr.ExpressionValue("hi!");
        java.lang.String str17 = expressionValue16.toString();
        org.jboss.dmr.ModelNode modelNode19 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode22 = modelNode19.set("hi!", 0.0d);
        org.jboss.dmr.Property property23 = new org.jboss.dmr.Property("", modelNode22);
        boolean boolean24 = expressionValue16.equals((java.lang.Object) property23);
        boolean boolean25 = expressionValue13.equals(expressionValue16);
        boolean boolean26 = expressionValue8.equals((java.lang.Object) boolean25);
        boolean boolean28 = expressionValue8.equals((java.lang.Object) 8);
        org.jboss.dmr.ModelValue modelValue29 = expressionValue8.resolve();
        org.jboss.dmr.ExpressionValue expressionValue31 = new org.jboss.dmr.ExpressionValue("");
        boolean boolean32 = expressionValue8.equals(expressionValue31);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(valueExpression11);
        org.junit.Assert.assertNotNull(valueExpression14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "expression \"hi!\"" + "'", str17, "expression \"hi!\"");
        org.junit.Assert.assertNotNull(modelNode22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(modelValue29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test10940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10940");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        long long3 = longModelValue1.asLong((long) (short) 0);
        java.lang.String str4 = longModelValue1.asString();
        byte[] byteArray5 = longModelValue1.asBytes();
        java.math.BigInteger bigInteger6 = longModelValue1.asBigInteger();
        boolean boolean8 = longModelValue1.has("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3LWwAAAACcAAAcAAD\naGkhRAAAAAAAAAAAcAAOKCJoaSEiID0+IDAuMClkAAIzMng=");
        long long9 = longModelValue1.asLong();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 1L + "'", long3 == 1L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1" + "'", str4, "1");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(bigInteger6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
    }

    @Test
    public void test10941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10941");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue((long) (byte) -1);
        double double3 = longModelValue1.asDouble(0.0d);
        org.jboss.dmr.LongModelValue longModelValue5 = new org.jboss.dmr.LongModelValue((-1L));
        long long7 = longModelValue5.asLong((long) (byte) -1);
        byte[] byteArray8 = longModelValue5.asBytes();
        boolean boolean9 = longModelValue1.equals(longModelValue5);
        org.jboss.dmr.LongModelValue longModelValue11 = new org.jboss.dmr.LongModelValue(1L);
        long long13 = longModelValue11.asLong((long) (short) 0);
        java.math.BigInteger bigInteger14 = longModelValue11.asBigInteger();
        boolean boolean15 = longModelValue5.equals(longModelValue11);
        int int16 = longModelValue5.asInt();
        org.jboss.dmr.ValueExpression valueExpression17 = longModelValue5.asExpression();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + (-1.0d) + "'", double3 == (-1.0d));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -1, -1, -1, -1, -1, -1, -1]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(bigInteger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(valueExpression17);
    }

    @Test
    public void test10942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10942");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("(\"org.jboss.dmr.stream.ModelException: [(\\\"hi!\\\" => 0.0)]\" => (\"hi!\" => 0.0))", (int) (short) 0);
        org.jboss.dmr.ModelType modelType5 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode(modelType5);
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        org.jboss.dmr.Property property12 = new org.jboss.dmr.Property("", modelNode11);
        org.jboss.dmr.ModelNode modelNode13 = modelNode6.set(property12);
        org.jboss.dmr.ModelNode modelNode14 = property12.getValue();
        org.jboss.dmr.PropertyModelValue propertyModelValue15 = new org.jboss.dmr.PropertyModelValue(property12);
        java.util.List<org.jboss.dmr.Property> propertyList16 = propertyModelValue15.asPropertyList();
        boolean boolean17 = modelNode1.equals((java.lang.Object) propertyModelValue15);
        // The following exception was thrown during execution in test generation
        try {
            java.math.BigDecimal bigDecimal18 = modelNode1.asBigDecimal();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertTrue("'" + modelType5 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType5.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(propertyList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test10943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10943");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isLong();
        boolean boolean17 = modelReader15.isBigInteger();
        boolean boolean18 = modelReader15.isObjectEnd();
        boolean boolean19 = modelReader15.isObjectEnd();
        boolean boolean20 = modelReader15.isObjectStart();
        // The following exception was thrown during execution in test generation
        try {
            int int21 = modelReader15.getInt();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Current event isn't int");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test10944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10944");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        org.jboss.dmr.Property property5 = new org.jboss.dmr.Property("", modelNode4);
        java.lang.String[] strArray6 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode7 = modelNode4.get(strArray6);
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = modelNode11.asList();
        org.jboss.dmr.ListModelValue listModelValue13 = new org.jboss.dmr.ListModelValue(modelNodeList12);
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue13);
        org.jboss.dmr.ModelValue modelValue15 = listModelValue13.resolve();
        int int17 = listModelValue13.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList18 = listModelValue13.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList19 = modelNode7.asPropertyList(propertyList18);
        org.jboss.dmr.ModelNode modelNode22 = modelNode7.setExpression("\"(\\\"hi!\\\" => 0.0)\"", "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.jboss.dmr.ModelNode modelNode25 = modelNode7.set("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AloAeA==", (double) 0.0f);
        org.jboss.dmr.ModelNode modelNode28 = modelNode7.set("100.0", false);
        org.jboss.dmr.ModelNode modelNode30 = modelNode28.set(112.0d);
        org.jboss.dmr.Validation.validate(modelNode28, "rO0ABXNyABRqYXZhLm1hdGguQmlnRGVjaW1hbFTHFVf5gShPAwACSQAFc2NhbGVMAAZpbnRWYWx0\nABZMamF2YS9tYXRoL0JpZ0ludGVnZXI7eHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhw\nAAAAAHNyABRqYXZhLm1hdGguQmlnSW50ZWdlcoz8nx+pO/sdAwAGSQAIYml0Q291bnRJAAliaXRM\nZW5ndGhJABNmaXJzdE5vbnplcm9CeXRlTnVtSQAMbG93ZXN0U2V0Qml0SQAGc2lnbnVtWwAJbWFn\nbml0dWRldAACW0J4cQB+AAL///////////////7////+AAAAAXVyAAJbQqzzF/gGCFTgAgAAeHAA\nAAABIHh4");
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNodeList12);
        org.junit.Assert.assertNotNull(modelValue15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(propertyList18);
        org.junit.Assert.assertNotNull(propertyList19);
        org.junit.Assert.assertNotNull(modelNode22);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertNotNull(modelNode28);
        org.junit.Assert.assertNotNull(modelNode30);
    }

    @Test
    public void test10945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10945");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        java.lang.String str6 = listModelValue5.asString();
        long long7 = listModelValue5.asLong();
        int int9 = listModelValue5.asInt((int) '4');
        int int11 = listModelValue5.asInt((int) (short) -1);
        org.jboss.dmr.ModelNode modelNode12 = listModelValue5.asObject();
        boolean boolean14 = listModelValue5.asBoolean(true);
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode18 = modelNode15.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList19 = modelNode18.asList();
        org.jboss.dmr.ListModelValue listModelValue20 = new org.jboss.dmr.ListModelValue(modelNodeList19);
        org.jboss.dmr.ModelNode modelNode21 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue20);
        org.jboss.dmr.ModelValue modelValue22 = listModelValue20.resolve();
        int int24 = listModelValue20.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList25 = listModelValue20.asPropertyList();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList26 = listModelValue20.asList();
        long long27 = listModelValue20.asLong();
        boolean boolean28 = listModelValue5.equals(listModelValue20);
        long long30 = listModelValue20.asLong((long) (byte) 10);
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str6, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertNotNull(modelNodeList19);
        org.junit.Assert.assertNotNull(modelValue22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(propertyList25);
        org.junit.Assert.assertNotNull(modelNodeList26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
    }

    @Test
    public void test10946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10946");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((long) 10);
        java.lang.String str3 = modelNode1.asString("true");
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long7 = modelNode6.asLong();
        org.jboss.dmr.ValueExpression valueExpression8 = modelNode6.asExpression();
        java.math.BigDecimal bigDecimal9 = valueExpression8.resolveBigDecimal();
        org.jboss.dmr.ModelNode modelNode10 = new org.jboss.dmr.ModelNode(bigDecimal9);
        org.jboss.dmr.ModelNode modelNode12 = modelNode10.set((double) (byte) 0);
        org.jboss.dmr.ModelNode modelNode13 = modelNode1.setNoCopy("35", modelNode12);
        boolean boolean15 = modelNode12.hasDefined("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3R3AANW9yZy5qYm9z\ncy5kbXIuc3RyZWFtLk1vZGVsRXhjZXB0aW9uOiBbKCJoaSEiID0+IDAuMCldcAADaGkhRAAAAAAA\nAAAAeA==");
        org.jboss.dmr.ModelNode modelNode17 = modelNode12.set("\"bytes {\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01\n}\"");
        org.jboss.dmr.LongModelValue longModelValue19 = new org.jboss.dmr.LongModelValue(1L);
        long long21 = longModelValue19.asLong((long) (short) 0);
        java.lang.String str22 = longModelValue19.asString();
        org.jboss.dmr.ValueExpression valueExpression23 = longModelValue19.asExpression();
        long long24 = longModelValue19.asLong();
        java.math.BigInteger bigInteger25 = longModelValue19.asBigInteger();
        org.jboss.dmr.ModelNode modelNode26 = modelNode12.set(bigInteger25);
        org.jboss.dmr.ObjectModelValue objectModelValue27 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode28 = objectModelValue27.asObject();
        java.util.Set<java.lang.String> strSet29 = objectModelValue27.getKeys();
        boolean boolean31 = objectModelValue27.has((int) 'a');
        boolean boolean33 = objectModelValue27.has("");
        org.jboss.dmr.ObjectModelValue objectModelValue34 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode35 = objectModelValue34.asObject();
        java.util.Set<java.lang.String> strSet36 = objectModelValue34.getKeys();
        boolean boolean38 = objectModelValue34.has((int) 'a');
        boolean boolean39 = objectModelValue27.equals(objectModelValue34);
        org.jboss.dmr.ModelNode modelNode40 = objectModelValue34.asObject();
        org.jboss.dmr.ModelNode modelNode42 = objectModelValue34.getChild("(\"EXPRESSION_VALUE\" => (\"\" => (\"hi!\" => 0.0)))");
        java.lang.Integer int43 = modelNode42.asIntOrNull();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode45 = modelNode26.insert(modelNode42, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "10" + "'", str3, "10");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertNotNull(valueExpression8);
        org.junit.Assert.assertNotNull(bigDecimal9);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1" + "'", str22, "1");
        org.junit.Assert.assertNotNull(valueExpression23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1L + "'", long24 == 1L);
        org.junit.Assert.assertNotNull(bigInteger25);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertNotNull(modelNode28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(modelNode35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(modelNode40);
        org.junit.Assert.assertNotNull(modelNode42);
        org.junit.Assert.assertNull(int43);
    }

    @Test
    public void test10947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10947");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        double double9 = bigDecimalModelValue7.asDouble((double) 'p');
        boolean boolean10 = bigDecimalModelValue7.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression11 = bigDecimalModelValue7.asExpression();
        org.jboss.dmr.ModelValue modelValue12 = bigDecimalModelValue7.resolve();
        org.jboss.dmr.LongModelValue longModelValue14 = new org.jboss.dmr.LongModelValue((-1L));
        long long16 = longModelValue14.asLong((long) (byte) -1);
        int int18 = longModelValue14.asInt(0);
        byte[] byteArray19 = longModelValue14.asBytes();
        boolean boolean20 = modelValue12.equals((java.lang.Object) byteArray19);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(valueExpression11);
        org.junit.Assert.assertNotNull(modelValue12);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, -1, -1, -1, -1, -1, -1, -1]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test10948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10948");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode("EXPRESSION_VALUE");
        org.jboss.dmr.BooleanModelValue booleanModelValue4 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger5 = booleanModelValue4.asBigInteger();
        byte[] byteArray6 = booleanModelValue4.asBytes();
        org.jboss.dmr.ModelNode modelNode7 = modelNode1.set("expression \"hi!\"", byteArray6);
        org.jboss.dmr.ModelNode modelNode8 = modelNode7.clear();
        org.jboss.dmr.ModelNode modelNode9 = modelNode7.clone();
        org.jboss.dmr.ModelNode modelNode10 = modelNode7.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode12 = new org.jboss.dmr.ModelNode(false);
        int int14 = modelNode12.asInt(2);
        org.jboss.dmr.ModelNode modelNode16 = modelNode12.set(52);
        org.jboss.dmr.ModelNode modelNode18 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode21 = modelNode18.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList22 = modelNode21.asList();
        org.jboss.dmr.ListModelValue listModelValue23 = new org.jboss.dmr.ListModelValue(modelNodeList22);
        org.jboss.dmr.ModelNode modelNode24 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue23);
        org.jboss.dmr.ModelValue modelValue25 = listModelValue23.resolve();
        int int27 = listModelValue23.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList28 = listModelValue23.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList29 = listModelValue23.asPropertyList();
        org.jboss.dmr.ModelNode modelNode31 = listModelValue23.getChild((int) (short) 0);
        org.jboss.dmr.ModelNode modelNode32 = modelNode31.resolve();
        org.jboss.dmr.ModelNode modelNode33 = modelNode16.set("EXPRESSION_VALUE", modelNode32);
        org.jboss.dmr.ModelNode modelNode36 = modelNode16.set("\"[97L]\"", "");
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode37 = modelNode7.addNoCopy(modelNode36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanModelValue4);
        org.junit.Assert.assertNotNull(bigInteger5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1]");
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertNotNull(modelNode21);
        org.junit.Assert.assertNotNull(modelNodeList22);
        org.junit.Assert.assertNotNull(modelValue25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(propertyList28);
        org.junit.Assert.assertNotNull(propertyList29);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertNotNull(modelNode33);
        org.junit.Assert.assertNotNull(modelNode36);
    }

    @Test
    public void test10949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10949");
        org.jboss.dmr.ModelNodeFactory modelNodeFactory0 = org.jboss.dmr.ModelNodeFactory.INSTANCE;
        org.jboss.dmr.ModelNode modelNode3 = modelNodeFactory0.readFrom("10.0", false);
        org.jboss.dmr.ModelNode modelNode6 = modelNodeFactory0.readFrom("0.0", true);
        org.jboss.dmr.ModelNode modelNode9 = modelNodeFactory0.readFrom("(\"hi!\" => expression \"hi!\")", false);
        java.io.InputStream inputStream10 = null;
        org.jboss.dmr.Base64.InputStream inputStream12 = new org.jboss.dmr.Base64.InputStream(inputStream10, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream13 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream12);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream12);
        java.nio.charset.Charset charset15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode17 = modelNodeFactory0.readFrom((java.io.InputStream) inputStream12, charset15, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Parameter cannot be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNodeFactory0);
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode9);
    }

    @Test
    public void test10950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10950");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isBigInteger();
        boolean boolean17 = modelReader15.isLong();
        boolean boolean18 = modelReader15.isBigDecimal();
        boolean boolean19 = modelReader15.isUndefined();
        boolean boolean20 = modelReader15.isUndefined();
        boolean boolean21 = modelReader15.isListStart();
        boolean boolean22 = modelReader15.isPropertyStart();
        boolean boolean23 = modelReader15.isObjectEnd();
        boolean boolean24 = modelReader15.isListEnd();
        boolean boolean25 = modelReader15.isObjectStart();
        // The following exception was thrown during execution in test generation
        try {
            double double26 = modelReader15.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Current event isn't double");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test10951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10951");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        java.lang.String str5 = modelNode1.toString();
        org.jboss.dmr.ModelNode modelNode6 = modelNode1.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(100);
        org.jboss.dmr.ModelNode modelNode9 = modelNode0.add(modelNode1);
        org.jboss.dmr.ModelNode modelNode10 = modelNode0.resolve();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode12 = modelNode0.get("(\"TYPE_MODEL_VALUE\" => bytes {\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01\n})");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(\"hi!\" => 0.0)" + "'", str5, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(modelNode10);
    }

    @Test
    public void test10952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10952");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue5);
        org.jboss.dmr.ModelValue modelValue7 = listModelValue5.resolve();
        int int9 = listModelValue5.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList10 = listModelValue5.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList11 = listModelValue5.asPropertyList();
        org.jboss.dmr.ModelNode modelNode13 = listModelValue5.getChild((int) (short) 0);
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode18 = modelNode15.set("hi!", 0.0d);
        java.lang.String str19 = modelNode15.toString();
        org.jboss.dmr.ModelNode modelNode20 = modelNode15.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode22 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode25 = modelNode22.set("hi!", 0.0d);
        org.jboss.dmr.Property property26 = new org.jboss.dmr.Property("", modelNode25);
        org.jboss.dmr.ModelNode modelNode27 = modelNode15.set(property26);
        org.jboss.dmr.PropertyModelValue propertyModelValue29 = new org.jboss.dmr.PropertyModelValue("EXPRESSION_VALUE", modelNode27, false);
        org.jboss.dmr.Property property30 = propertyModelValue29.asProperty();
        boolean boolean31 = listModelValue5.equals((java.lang.Object) propertyModelValue29);
        java.util.List<org.jboss.dmr.Property> propertyList32 = listModelValue5.asPropertyList();
        org.jboss.dmr.ModelNode modelNode33 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode36 = modelNode33.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList37 = modelNode36.asList();
        org.jboss.dmr.ListModelValue listModelValue38 = new org.jboss.dmr.ListModelValue(modelNodeList37);
        org.jboss.dmr.ModelNode modelNode39 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue38);
        org.jboss.dmr.ModelNode modelNode40 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode43 = modelNode40.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList44 = modelNode43.asList();
        org.jboss.dmr.ListModelValue listModelValue45 = new org.jboss.dmr.ListModelValue(modelNodeList44);
        java.lang.String str46 = listModelValue45.asString();
        long long47 = listModelValue45.asLong();
        int int49 = listModelValue45.asInt((int) '4');
        org.jboss.dmr.ModelValue modelValue50 = listModelValue45.protect();
        boolean boolean51 = listModelValue38.equals(listModelValue45);
        org.jboss.dmr.ModelValue modelValue52 = listModelValue38.protect();
        boolean boolean53 = listModelValue5.equals(listModelValue38);
        boolean boolean55 = listModelValue38.has((int) (byte) -1);
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertNotNull(modelValue7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(propertyList10);
        org.junit.Assert.assertNotNull(propertyList11);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(\"hi!\" => 0.0)" + "'", str19, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertNotNull(property30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(propertyList32);
        org.junit.Assert.assertNotNull(modelNode36);
        org.junit.Assert.assertNotNull(modelNodeList37);
        org.junit.Assert.assertNotNull(modelNode43);
        org.junit.Assert.assertNotNull(modelNodeList44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str46, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1L + "'", long47 == 1L);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(modelValue50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(modelValue52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test10953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10953");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue((long) 32);
        java.math.BigInteger bigInteger2 = longModelValue1.asBigInteger();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode4 = longModelValue1.removeChild("(\"\" => big integer 1)");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(bigInteger2);
    }

    @Test
    public void test10954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10954");
        org.jboss.dmr.BooleanModelValue booleanModelValue1 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray2 = booleanModelValue1.asBytes();
        java.lang.String str3 = booleanModelValue1.asString();
        int int4 = booleanModelValue1.asInt();
        org.jboss.dmr.ModelType modelType5 = org.jboss.dmr.ModelType.STRING;
        boolean boolean6 = booleanModelValue1.equals((java.lang.Object) modelType5);
        java.math.BigInteger bigInteger7 = booleanModelValue1.asBigInteger();
        long long9 = booleanModelValue1.asLong((long) 0);
        org.junit.Assert.assertNotNull(booleanModelValue1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "true" + "'", str3, "true");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + modelType5 + "' != '" + org.jboss.dmr.ModelType.STRING + "'", modelType5.equals(org.jboss.dmr.ModelType.STRING));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(bigInteger7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
    }

    @Test
    public void test10955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10955");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.PROPERTY;
        char char1 = modelType0.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue2 = org.jboss.dmr.TypeModelValue.of(modelType0);
        org.jboss.dmr.ModelType modelType3 = org.jboss.dmr.ModelType.PROPERTY;
        char char4 = modelType3.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue5 = org.jboss.dmr.TypeModelValue.of(modelType3);
        boolean boolean6 = typeModelValue2.equals(typeModelValue5);
        java.lang.String str7 = typeModelValue5.asString();
        org.jboss.dmr.ModelType modelType8 = org.jboss.dmr.ModelType.PROPERTY;
        char char9 = modelType8.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue10 = org.jboss.dmr.TypeModelValue.of(modelType8);
        org.jboss.dmr.ModelType modelType11 = org.jboss.dmr.ModelType.PROPERTY;
        char char12 = modelType11.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue13 = org.jboss.dmr.TypeModelValue.of(modelType11);
        boolean boolean14 = typeModelValue10.equals(typeModelValue13);
        java.lang.String str15 = typeModelValue13.asString();
        boolean boolean17 = typeModelValue13.asBoolean(true);
        boolean boolean18 = typeModelValue5.equals(typeModelValue13);
        org.jboss.dmr.ValueExpression valueExpression19 = typeModelValue13.asExpression();
        org.jboss.dmr.ModelType modelType20 = org.jboss.dmr.ModelType.PROPERTY;
        char char21 = modelType20.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue22 = org.jboss.dmr.TypeModelValue.of(modelType20);
        org.jboss.dmr.ModelType modelType23 = org.jboss.dmr.ModelType.PROPERTY;
        char char24 = modelType23.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue25 = org.jboss.dmr.TypeModelValue.of(modelType23);
        boolean boolean26 = typeModelValue22.equals(typeModelValue25);
        boolean boolean27 = typeModelValue13.equals(typeModelValue22);
        org.jboss.dmr.ValueExpression valueExpression28 = typeModelValue22.asExpression();
        org.jboss.dmr.ValueExpression valueExpression29 = typeModelValue22.asExpression();
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType0.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char1 + "' != '" + 'p' + "'", char1 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue2);
        org.junit.Assert.assertTrue("'" + modelType3 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType3.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char4 + "' != '" + 'p' + "'", char4 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PROPERTY" + "'", str7, "PROPERTY");
        org.junit.Assert.assertTrue("'" + modelType8 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType8.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char9 + "' != '" + 'p' + "'", char9 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue10);
        org.junit.Assert.assertTrue("'" + modelType11 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType11.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char12 + "' != '" + 'p' + "'", char12 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PROPERTY" + "'", str15, "PROPERTY");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(valueExpression19);
        org.junit.Assert.assertTrue("'" + modelType20 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType20.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char21 + "' != '" + 'p' + "'", char21 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue22);
        org.junit.Assert.assertTrue("'" + modelType23 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType23.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char24 + "' != '" + 'p' + "'", char24 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(valueExpression28);
        org.junit.Assert.assertNotNull(valueExpression29);
    }

    @Test
    public void test10956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10956");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue((long) (byte) -1);
        double double3 = longModelValue1.asDouble(0.0d);
        org.jboss.dmr.LongModelValue longModelValue5 = new org.jboss.dmr.LongModelValue((-1L));
        long long7 = longModelValue5.asLong((long) (byte) -1);
        byte[] byteArray8 = longModelValue5.asBytes();
        boolean boolean9 = longModelValue1.equals(longModelValue5);
        org.jboss.dmr.LongModelValue longModelValue11 = new org.jboss.dmr.LongModelValue(1L);
        long long13 = longModelValue11.asLong((long) (short) 0);
        java.math.BigInteger bigInteger14 = longModelValue11.asBigInteger();
        boolean boolean15 = longModelValue5.equals(longModelValue11);
        java.lang.String str16 = longModelValue11.asString();
        int int17 = longModelValue11.asInt();
        long long18 = longModelValue11.asLong();
        boolean boolean20 = longModelValue11.asBoolean(false);
        org.jboss.dmr.DoubleModelValue doubleModelValue22 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long23 = doubleModelValue22.asLong();
        boolean boolean24 = doubleModelValue22.asBoolean();
        byte[] byteArray25 = doubleModelValue22.asBytes();
        int int27 = doubleModelValue22.asInt((int) ' ');
        byte[] byteArray28 = doubleModelValue22.asBytes();
        org.jboss.dmr.ModelNode modelNode29 = new org.jboss.dmr.ModelNode(byteArray28);
        boolean boolean30 = longModelValue11.equals((java.lang.Object) byteArray28);
        boolean boolean32 = org.jboss.dmr.Base64.encodeToFile(byteArray28, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.jboss.dmr.ModelNode modelNode33 = new org.jboss.dmr.ModelNode(byteArray28);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + (-1.0d) + "'", double3 == (-1.0d));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -1, -1, -1, -1, -1, -1, -1]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(bigInteger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1" + "'", str16, "1");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 10L + "'", long23 == 10L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test10957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10957");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        java.lang.String str5 = modelNode1.toString();
        org.jboss.dmr.ModelNode modelNode6 = modelNode1.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(100);
        org.jboss.dmr.ModelNode modelNode11 = new org.jboss.dmr.ModelNode((double) 100);
        org.jboss.dmr.ModelNode modelNode13 = modelNode11.set((int) '#');
        org.jboss.dmr.ModelNode modelNode14 = modelNode1.setNoCopy("EXPRESSION_VALUE", modelNode13);
        org.jboss.dmr.ModelNode modelNode15 = modelNode14.resolve();
        org.jboss.dmr.ModelType modelType16 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode17 = new org.jboss.dmr.ModelNode(modelType16);
        org.jboss.dmr.ModelNode modelNode19 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode22 = modelNode19.set("hi!", 0.0d);
        org.jboss.dmr.Property property23 = new org.jboss.dmr.Property("", modelNode22);
        org.jboss.dmr.ModelNode modelNode24 = modelNode17.set(property23);
        org.jboss.dmr.PropertyModelValue propertyModelValue25 = new org.jboss.dmr.PropertyModelValue(property23);
        org.jboss.dmr.PropertyModelValue propertyModelValue26 = new org.jboss.dmr.PropertyModelValue(property23);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList27 = propertyModelValue26.asList();
        org.jboss.dmr.ModelNode modelNode28 = modelNode15.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList27);
        org.jboss.dmr.LongModelValue longModelValue31 = new org.jboss.dmr.LongModelValue(1L);
        int int33 = longModelValue31.asInt((int) (byte) 0);
        org.jboss.dmr.LongModelValue longModelValue35 = new org.jboss.dmr.LongModelValue((-1L));
        long long37 = longModelValue35.asLong((long) (byte) -1);
        double double39 = longModelValue35.asDouble((double) 10.0f);
        boolean boolean40 = longModelValue31.equals(longModelValue35);
        org.jboss.dmr.ModelType modelType41 = longModelValue31.getType();
        org.jboss.dmr.ModelNode modelNode42 = modelNode28.set("{ \"35\" : 0.0 }", modelType41);
        org.jboss.dmr.ModelNode modelNode43 = new org.jboss.dmr.ModelNode(modelType41);
        org.jboss.dmr.ModelNode modelNode44 = new org.jboss.dmr.ModelNode(modelType41);
        org.jboss.dmr.Property property46 = new org.jboss.dmr.Property("(\"true\" => expression \"true\")", modelNode44, true);
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(\"hi!\" => 0.0)" + "'", str5, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(modelNode15);
        org.junit.Assert.assertTrue("'" + modelType16 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType16.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode22);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertNotNull(modelNodeList27);
        org.junit.Assert.assertNotNull(modelNode28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1.0d) + "'", double39 == (-1.0d));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + modelType41 + "' != '" + org.jboss.dmr.ModelType.LONG + "'", modelType41.equals(org.jboss.dmr.ModelType.LONG));
        org.junit.Assert.assertNotNull(modelNode42);
    }

    @Test
    public void test10958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10958");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.PROPERTY;
        char char1 = modelType0.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue2 = org.jboss.dmr.TypeModelValue.of(modelType0);
        org.jboss.dmr.ModelType modelType3 = org.jboss.dmr.ModelType.PROPERTY;
        char char4 = modelType3.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue5 = org.jboss.dmr.TypeModelValue.of(modelType3);
        boolean boolean6 = typeModelValue2.equals(typeModelValue5);
        java.lang.String str7 = typeModelValue5.asString();
        org.jboss.dmr.ModelType modelType8 = org.jboss.dmr.ModelType.PROPERTY;
        char char9 = modelType8.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue10 = org.jboss.dmr.TypeModelValue.of(modelType8);
        org.jboss.dmr.ModelType modelType11 = org.jboss.dmr.ModelType.PROPERTY;
        char char12 = modelType11.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue13 = org.jboss.dmr.TypeModelValue.of(modelType11);
        boolean boolean14 = typeModelValue10.equals(typeModelValue13);
        java.lang.String str15 = typeModelValue13.asString();
        boolean boolean17 = typeModelValue13.asBoolean(true);
        boolean boolean18 = typeModelValue5.equals(typeModelValue13);
        org.jboss.dmr.ValueExpression valueExpression19 = typeModelValue13.asExpression();
        org.jboss.dmr.ValueExpression valueExpression20 = typeModelValue13.asExpression();
        boolean boolean21 = typeModelValue13.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression22 = typeModelValue13.asExpression();
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType0.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char1 + "' != '" + 'p' + "'", char1 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue2);
        org.junit.Assert.assertTrue("'" + modelType3 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType3.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char4 + "' != '" + 'p' + "'", char4 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PROPERTY" + "'", str7, "PROPERTY");
        org.junit.Assert.assertTrue("'" + modelType8 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType8.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char9 + "' != '" + 'p' + "'", char9 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue10);
        org.junit.Assert.assertTrue("'" + modelType11 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType11.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char12 + "' != '" + 'p' + "'", char12 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PROPERTY" + "'", str15, "PROPERTY");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(valueExpression19);
        org.junit.Assert.assertNotNull(valueExpression20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(valueExpression22);
    }

    @Test
    public void test10959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10959");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        java.lang.String str6 = modelNode3.asString("true");
        org.jboss.dmr.BooleanModelValue booleanModelValue9 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long10 = booleanModelValue9.asLong();
        org.jboss.dmr.ValueExpression valueExpression11 = booleanModelValue9.asExpression();
        java.lang.String str12 = valueExpression11.toString();
        org.jboss.dmr.ExpressionValue expressionValue14 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ValueExpression valueExpression15 = expressionValue14.asExpression();
        boolean boolean16 = valueExpression11.equals(valueExpression15);
        java.lang.String str17 = valueExpression15.resolveString();
        org.jboss.dmr.ModelNode modelNode18 = modelNode3.set("Expression \"1\"", valueExpression15);
        org.jboss.dmr.ModelNode modelNode19 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode22 = modelNode19.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList23 = modelNode22.asList();
        org.jboss.dmr.ModelNode modelNode26 = modelNode22.set("Expression \"1\"", (int) (byte) 1);
        org.jboss.dmr.ModelType modelType27 = modelNode22.getType();
        org.jboss.dmr.ModelNode modelNode28 = modelNode18.set(modelType27);
        java.lang.String str29 = modelNode28.asString();
        java.lang.Boolean boolean30 = modelNode28.asBooleanOrNull();
        modelNode28.protect();
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "(\"hi!\" => 0.0)" + "'", str6, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(booleanModelValue9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertNotNull(valueExpression11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Expression \"true\"" + "'", str12, "Expression \"true\"");
        org.junit.Assert.assertNotNull(valueExpression15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertNotNull(modelNode22);
        org.junit.Assert.assertNotNull(modelNodeList23);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertTrue("'" + modelType27 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType27.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertNotNull(modelNode28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PROPERTY" + "'", str29, "PROPERTY");
        org.junit.Assert.assertEquals("'" + boolean30 + "' != '" + true + "'", boolean30, true);
    }

    @Test
    public void test10960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10960");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        java.lang.String str5 = modelNode1.toString();
        org.jboss.dmr.ModelNode modelNode6 = modelNode1.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(100);
        org.jboss.dmr.ModelNode modelNode11 = new org.jboss.dmr.ModelNode((double) 100);
        org.jboss.dmr.ModelNode modelNode13 = modelNode11.set((int) '#');
        org.jboss.dmr.ModelNode modelNode14 = modelNode1.setNoCopy("EXPRESSION_VALUE", modelNode13);
        org.jboss.dmr.PropertyModelValue propertyModelValue15 = new org.jboss.dmr.PropertyModelValue("Expression \"true\"", modelNode1);
        org.jboss.dmr.ModelType modelType16 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode17 = new org.jboss.dmr.ModelNode(modelType16);
        org.jboss.dmr.ModelNode modelNode19 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode22 = modelNode19.set("hi!", 0.0d);
        org.jboss.dmr.Property property23 = new org.jboss.dmr.Property("", modelNode22);
        org.jboss.dmr.ModelNode modelNode24 = modelNode17.set(property23);
        org.jboss.dmr.ModelNode modelNode25 = property23.getValue();
        org.jboss.dmr.PropertyModelValue propertyModelValue26 = new org.jboss.dmr.PropertyModelValue(property23);
        org.jboss.dmr.ModelValue modelValue27 = propertyModelValue26.protect();
        org.jboss.dmr.ModelValue modelValue28 = propertyModelValue26.resolve();
        boolean boolean29 = propertyModelValue15.equals(propertyModelValue26);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode31 = propertyModelValue26.getChild("false");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(\"hi!\" => 0.0)" + "'", str5, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertTrue("'" + modelType16 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType16.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode22);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertNotNull(modelValue27);
        org.junit.Assert.assertNotNull(modelValue28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test10961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10961");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        java.lang.String str2 = stringModelValue1.toString();
        byte[] byteArray3 = stringModelValue1.asBytes();
        org.jboss.dmr.ModelNode modelNode4 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode7 = modelNode4.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList8 = modelNode7.asList();
        org.jboss.dmr.ListModelValue listModelValue9 = new org.jboss.dmr.ListModelValue(modelNodeList8);
        java.lang.String str10 = listModelValue9.asString();
        boolean boolean12 = listModelValue9.equals((java.lang.Object) true);
        boolean boolean13 = listModelValue9.asBoolean();
        long long15 = listModelValue9.asLong((long) (short) 1);
        org.jboss.dmr.ModelNode modelNode16 = listModelValue9.asObject();
        int int17 = listModelValue9.asInt();
        long long18 = listModelValue9.asLong();
        org.jboss.dmr.ModelValue modelValue19 = listModelValue9.resolve();
        boolean boolean20 = stringModelValue1.equals((java.lang.Object) listModelValue9);
        // The following exception was thrown during execution in test generation
        try {
            double double21 = stringModelValue1.asDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"(\"\" => (\"hi!\" => 0.0))\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"(\\\"\\\" => (\\\"hi!\\\" => 0.0))\"" + "'", str2, "\"(\\\"\\\" => (\\\"hi!\\\" => 0.0))\"");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[40, 34, 34, 32, 61, 62, 32, 40, 34, 104, 105, 33, 34, 32, 61, 62, 32, 48, 46, 48, 41, 41]");
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNodeList8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str10, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(modelValue19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test10962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10962");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long2 = doubleModelValue1.asLong();
        boolean boolean3 = doubleModelValue1.asBoolean();
        byte[] byteArray4 = doubleModelValue1.asBytes();
        int int6 = doubleModelValue1.asInt((int) ' ');
        boolean boolean7 = doubleModelValue1.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression8 = doubleModelValue1.asExpression();
        org.jboss.dmr.BooleanModelValue booleanModelValue10 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long11 = booleanModelValue10.asLong();
        org.jboss.dmr.ValueExpression valueExpression12 = booleanModelValue10.asExpression();
        java.lang.String str13 = valueExpression12.toString();
        org.jboss.dmr.ExpressionValue expressionValue15 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ValueExpression valueExpression16 = expressionValue15.asExpression();
        boolean boolean17 = valueExpression12.equals(valueExpression16);
        org.jboss.dmr.LongModelValue longModelValue19 = new org.jboss.dmr.LongModelValue((long) '4');
        java.math.BigDecimal bigDecimal20 = longModelValue19.asBigDecimal();
        int int21 = longModelValue19.asInt();
        org.jboss.dmr.ValueExpression valueExpression22 = longModelValue19.asExpression();
        boolean boolean23 = valueExpression16.equals(valueExpression22);
        int int24 = valueExpression22.resolveInt();
        org.jboss.dmr.BooleanModelValue booleanModelValue26 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long27 = booleanModelValue26.asLong();
        org.jboss.dmr.ValueExpression valueExpression28 = booleanModelValue26.asExpression();
        java.lang.String str29 = valueExpression28.toString();
        org.jboss.dmr.ExpressionValue expressionValue31 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ValueExpression valueExpression32 = expressionValue31.asExpression();
        boolean boolean33 = valueExpression28.equals(valueExpression32);
        java.lang.String str34 = valueExpression32.resolveString();
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver35 = new org.jboss.dmr.ValueExpressionResolver();
        java.lang.String str36 = valueExpression32.resolveString(valueExpressionResolver35);
        java.lang.String str37 = valueExpression22.resolveString(valueExpressionResolver35);
        java.lang.String str38 = valueExpression8.resolveString(valueExpressionResolver35);
        org.jboss.dmr.ModelNode modelNode40 = new org.jboss.dmr.ModelNode("(\"EXPRESSION_VALUE\" => (\"\" => (\"hi!\" => 0.0)))");
        org.jboss.dmr.LongModelValue longModelValue42 = new org.jboss.dmr.LongModelValue((-1L));
        long long44 = longModelValue42.asLong((long) (byte) -1);
        int int46 = longModelValue42.asInt(0);
        org.jboss.dmr.ValueExpression valueExpression47 = longModelValue42.asExpression();
        org.jboss.dmr.ValueExpression valueExpression48 = longModelValue42.asExpression();
        org.jboss.dmr.ModelNode modelNode49 = modelNode40.set(valueExpression48);
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver50 = org.jboss.dmr.ValueExpressionResolver.DEFAULT_RESOLVER;
        org.jboss.dmr.BooleanModelValue booleanModelValue52 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long53 = booleanModelValue52.asLong();
        org.jboss.dmr.ValueExpression valueExpression54 = booleanModelValue52.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue55 = new org.jboss.dmr.ExpressionValue(valueExpression54);
        java.lang.String str56 = valueExpression54.getExpressionString();
        java.lang.String str57 = valueExpressionResolver50.resolve(valueExpression54);
        java.lang.String str59 = valueExpressionResolver50.resolvePart("rO0ABX5yABdvcmcuamJvc3MuZG1yLk1vZGVsVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5F\nbnVtAAAAAAAAAAASAAB4cHQACFBST1BFUlRZ");
        java.lang.String str61 = valueExpressionResolver50.resolvePart("rO0ABXNyABNqYXZhLmxhbmcuQ2hhcmFjdGVyNItH2WsaJngCAAFDAAV2YWx1ZXhwACM=");
        int int62 = valueExpression48.resolveInt(valueExpressionResolver50);
        java.lang.String str64 = valueExpressionResolver50.resolvePart("bytes {\n    0x01\n}");
        // The following exception was thrown during execution in test generation
        try {
            java.math.BigInteger bigInteger65 = valueExpression8.resolveBigInteger(valueExpressionResolver50);
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"10.0\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10L + "'", long2 == 10L);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(valueExpression8);
        org.junit.Assert.assertNotNull(booleanModelValue10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertNotNull(valueExpression12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Expression \"true\"" + "'", str13, "Expression \"true\"");
        org.junit.Assert.assertNotNull(valueExpression16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(bigDecimal20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(valueExpression22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(booleanModelValue26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertNotNull(valueExpression28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Expression \"true\"" + "'", str29, "Expression \"true\"");
        org.junit.Assert.assertNotNull(valueExpression32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "52" + "'", str37, "52");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "10.0" + "'", str38, "10.0");
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(valueExpression47);
        org.junit.Assert.assertNotNull(valueExpression48);
        org.junit.Assert.assertNotNull(modelNode49);
        org.junit.Assert.assertNotNull(valueExpressionResolver50);
        org.junit.Assert.assertNotNull(booleanModelValue52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 1L + "'", long53 == 1L);
        org.junit.Assert.assertNotNull(valueExpression54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "true" + "'", str56, "true");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "true" + "'", str57, "true");
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(str64);
    }

    @Test
    public void test10963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10963");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode("\"{\\n    \\\"BYTES_VALUE\\\" : \\\"AAAAAAAAAAE=\\\"\\n}\"");
    }

    @Test
    public void test10964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10964");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue5);
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode10 = modelNode7.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList11 = modelNode10.asList();
        org.jboss.dmr.ListModelValue listModelValue12 = new org.jboss.dmr.ListModelValue(modelNodeList11);
        java.lang.String str13 = listModelValue12.asString();
        long long14 = listModelValue12.asLong();
        int int16 = listModelValue12.asInt((int) '4');
        org.jboss.dmr.ModelValue modelValue17 = listModelValue12.protect();
        boolean boolean18 = listModelValue5.equals(listModelValue12);
        org.jboss.dmr.ModelValue modelValue19 = listModelValue5.protect();
        org.jboss.dmr.ModelValue modelValue20 = listModelValue5.resolve();
        java.io.PrintWriter printWriter21 = null;
        // The following exception was thrown during execution in test generation
        try {
            listModelValue5.formatAsJSON(printWriter21, (int) ' ', true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertNotNull(modelNodeList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str13, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(modelValue17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(modelValue19);
        org.junit.Assert.assertNotNull(modelValue20);
    }

    @Test
    public void test10965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10965");
        org.jboss.dmr.ModelNode modelNode1 = org.jboss.dmr.ModelNode.fromJSONString("1.0");
        org.jboss.dmr.ModelNode modelNode3 = modelNode1.set("expression \"hi!\"");
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode6 = modelNode3.add("AAAAZA==", false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(modelNode3);
    }

    @Test
    public void test10966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10966");
        org.jboss.dmr.BooleanModelValue booleanModelValue1 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray2 = booleanModelValue1.asBytes();
        java.lang.String str3 = booleanModelValue1.asString();
        int int4 = booleanModelValue1.asInt();
        long long5 = booleanModelValue1.asLong();
        boolean boolean7 = booleanModelValue1.equals((java.lang.Object) '4');
        java.math.BigInteger bigInteger8 = booleanModelValue1.asBigInteger();
        java.lang.String str9 = booleanModelValue1.asString();
        java.math.BigInteger bigInteger10 = booleanModelValue1.asBigInteger();
        java.lang.String str11 = booleanModelValue1.asString();
        int int12 = booleanModelValue1.asInt();
        long long13 = booleanModelValue1.asLong();
        boolean boolean14 = booleanModelValue1.asBoolean();
        double double16 = booleanModelValue1.asDouble((double) (byte) -1);
        org.junit.Assert.assertNotNull(booleanModelValue1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "true" + "'", str3, "true");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(bigInteger8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true" + "'", str9, "true");
        org.junit.Assert.assertNotNull(bigInteger10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "true" + "'", str11, "true");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
    }

    @Test
    public void test10967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10967");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream5 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4);
        org.jboss.dmr.stream.ModelReader modelReader6 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream5);
        java.io.OutputStream outputStream7 = null;
        org.jboss.dmr.Base64.OutputStream outputStream8 = new org.jboss.dmr.Base64.OutputStream(outputStream7);
        org.jboss.dmr.Base64.OutputStream outputStream9 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream8);
        outputStream8.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter12 = modelStreamFactory1.newModelWriter((java.io.OutputStream) outputStream8);
        org.jboss.dmr.stream.ModelWriter modelWriter13 = modelWriter12.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter15 = modelWriter13.writeInt((int) (byte) 10);
        org.jboss.dmr.stream.ModelWriter modelWriter16 = modelWriter15.writeListEnd();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.stream.ModelWriter modelWriter18 = modelWriter15.writeInt((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type org.jboss.dmr.stream.ModelException; message: Expecting EOF");
        } catch (org.jboss.dmr.stream.ModelException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertNotNull(modelReader6);
        org.junit.Assert.assertNotNull(modelWriter12);
        org.junit.Assert.assertNotNull(modelWriter13);
        org.junit.Assert.assertNotNull(modelWriter15);
        org.junit.Assert.assertNotNull(modelWriter16);
    }

    @Test
    public void test10968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10968");
        org.jboss.dmr.ExpressionValue expressionValue1 = new org.jboss.dmr.ExpressionValue("TYPE_MODEL_VALUE");
        java.lang.Object obj2 = new java.lang.Object();
        boolean boolean3 = expressionValue1.equals(obj2);
        org.jboss.dmr.StringModelValue stringModelValue5 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.ValueExpression valueExpression6 = stringModelValue5.asExpression();
        org.jboss.dmr.StringModelValue stringModelValue8 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory10 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream11 = null;
        org.jboss.dmr.Base64.InputStream inputStream13 = new org.jboss.dmr.Base64.InputStream(inputStream11, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream13);
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory10.newModelReader((java.io.InputStream) inputStream14);
        java.io.OutputStream outputStream16 = null;
        org.jboss.dmr.Base64.OutputStream outputStream17 = new org.jboss.dmr.Base64.OutputStream(outputStream16);
        org.jboss.dmr.Base64.OutputStream outputStream18 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream17);
        outputStream17.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter21 = modelStreamFactory10.newModelWriter((java.io.OutputStream) outputStream17);
        org.jboss.dmr.stream.ModelWriter modelWriter22 = modelWriter21.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter24 = modelWriter22.writeInt((int) (byte) 10);
        stringModelValue8.write(modelWriter24);
        org.jboss.dmr.stream.ModelWriter modelWriter27 = modelWriter24.writeBoolean(false);
        stringModelValue5.write(modelWriter27);
        expressionValue1.write(modelWriter27);
        java.io.PrintWriter printWriter30 = null;
        // The following exception was thrown during execution in test generation
        try {
            expressionValue1.format(printWriter30, (int) 'J', true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(valueExpression6);
        org.junit.Assert.assertNotNull(modelStreamFactory10);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertNotNull(modelWriter21);
        org.junit.Assert.assertNotNull(modelWriter22);
        org.junit.Assert.assertNotNull(modelWriter24);
        org.junit.Assert.assertNotNull(modelWriter27);
    }

    @Test
    public void test10969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10969");
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode1 = org.jboss.dmr.ModelNode.fromString("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unexpected character 'h' while reading DMR stream");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10970");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long3 = intModelValue1.asLong((long) 'b');
        java.lang.String str4 = intModelValue1.asString();
        java.math.BigDecimal bigDecimal5 = intModelValue1.asBigDecimal();
        long long6 = intModelValue1.asLong();
        boolean boolean7 = intModelValue1.asBoolean();
        int int8 = intModelValue1.asInt();
        org.jboss.dmr.ModelValue modelValue9 = intModelValue1.resolve();
        java.lang.String str10 = intModelValue1.asString();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 32L + "'", long3 == 32L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "32" + "'", str4, "32");
        org.junit.Assert.assertNotNull(bigDecimal5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 32L + "'", long6 == 32L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 32 + "'", int8 == 32);
        org.junit.Assert.assertNotNull(modelValue9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "32" + "'", str10, "32");
    }

    @Test
    public void test10971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10971");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.PROPERTY;
        char char1 = modelType0.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue2 = org.jboss.dmr.TypeModelValue.of(modelType0);
        org.jboss.dmr.ModelType modelType3 = org.jboss.dmr.ModelType.PROPERTY;
        char char4 = modelType3.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue5 = org.jboss.dmr.TypeModelValue.of(modelType3);
        boolean boolean6 = typeModelValue2.equals(typeModelValue5);
        java.lang.String str7 = typeModelValue5.asString();
        org.jboss.dmr.ModelType modelType8 = org.jboss.dmr.ModelType.PROPERTY;
        char char9 = modelType8.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue10 = org.jboss.dmr.TypeModelValue.of(modelType8);
        org.jboss.dmr.ModelType modelType11 = org.jboss.dmr.ModelType.PROPERTY;
        char char12 = modelType11.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue13 = org.jboss.dmr.TypeModelValue.of(modelType11);
        boolean boolean14 = typeModelValue10.equals(typeModelValue13);
        java.lang.String str15 = typeModelValue13.asString();
        boolean boolean17 = typeModelValue13.asBoolean(true);
        boolean boolean18 = typeModelValue5.equals(typeModelValue13);
        org.jboss.dmr.ValueExpression valueExpression19 = typeModelValue13.asExpression();
        org.jboss.dmr.ModelType modelType20 = org.jboss.dmr.ModelType.PROPERTY;
        char char21 = modelType20.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue22 = org.jboss.dmr.TypeModelValue.of(modelType20);
        org.jboss.dmr.ModelType modelType23 = org.jboss.dmr.ModelType.PROPERTY;
        char char24 = modelType23.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue25 = org.jboss.dmr.TypeModelValue.of(modelType23);
        boolean boolean26 = typeModelValue22.equals(typeModelValue25);
        boolean boolean27 = typeModelValue13.equals(typeModelValue22);
        java.lang.String str28 = typeModelValue13.asString();
        org.jboss.dmr.ValueExpression valueExpression29 = typeModelValue13.asExpression();
        java.lang.String str30 = typeModelValue13.asString();
        boolean boolean32 = typeModelValue13.asBoolean(false);
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType0.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char1 + "' != '" + 'p' + "'", char1 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue2);
        org.junit.Assert.assertTrue("'" + modelType3 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType3.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char4 + "' != '" + 'p' + "'", char4 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PROPERTY" + "'", str7, "PROPERTY");
        org.junit.Assert.assertTrue("'" + modelType8 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType8.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char9 + "' != '" + 'p' + "'", char9 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue10);
        org.junit.Assert.assertTrue("'" + modelType11 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType11.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char12 + "' != '" + 'p' + "'", char12 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PROPERTY" + "'", str15, "PROPERTY");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(valueExpression19);
        org.junit.Assert.assertTrue("'" + modelType20 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType20.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char21 + "' != '" + 'p' + "'", char21 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue22);
        org.junit.Assert.assertTrue("'" + modelType23 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType23.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char24 + "' != '" + 'p' + "'", char24 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "PROPERTY" + "'", str28, "PROPERTY");
        org.junit.Assert.assertNotNull(valueExpression29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PROPERTY" + "'", str30, "PROPERTY");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test10972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10972");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        java.lang.String str6 = listModelValue5.asString();
        long long7 = listModelValue5.asLong();
        int int9 = listModelValue5.asInt((int) '4');
        int int11 = listModelValue5.asInt((int) (short) -1);
        java.io.PrintWriter printWriter12 = null;
        // The following exception was thrown during execution in test generation
        try {
            listModelValue5.format(printWriter12, 3, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str6, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
    }

    @Test
    public void test10973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10973");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long3 = intModelValue1.asLong((long) 'b');
        java.lang.String str4 = intModelValue1.asString();
        java.math.BigDecimal bigDecimal5 = intModelValue1.asBigDecimal();
        long long6 = intModelValue1.asLong();
        org.jboss.dmr.IntModelValue intModelValue8 = new org.jboss.dmr.IntModelValue(10);
        byte[] byteArray9 = intModelValue8.asBytes();
        int int11 = intModelValue8.asInt(0);
        org.jboss.dmr.ModelType modelType12 = intModelValue8.getType();
        int int13 = intModelValue8.asInt();
        boolean boolean14 = intModelValue1.equals(intModelValue8);
        boolean boolean16 = intModelValue8.asBoolean(true);
        java.lang.String str17 = intModelValue8.toString();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 32L + "'", long3 == 32L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "32" + "'", str4, "32");
        org.junit.Assert.assertNotNull(bigDecimal5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 32L + "'", long6 == 32L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[0, 0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertTrue("'" + modelType12 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType12.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "10" + "'", str17, "10");
    }

    @Test
    public void test10974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10974");
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode((int) 'a');
        org.jboss.dmr.ModelNode modelNode4 = modelNode3.setEmptyList();
        org.jboss.dmr.ObjectModelValue objectModelValue5 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode6 = objectModelValue5.asObject();
        java.util.Set<java.lang.String> strSet7 = objectModelValue5.getKeys();
        boolean boolean9 = objectModelValue5.has((int) 'a');
        boolean boolean11 = objectModelValue5.has("");
        org.jboss.dmr.ObjectModelValue objectModelValue12 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode13 = objectModelValue12.asObject();
        java.util.Set<java.lang.String> strSet14 = objectModelValue12.getKeys();
        boolean boolean16 = objectModelValue12.has((int) 'a');
        boolean boolean17 = objectModelValue5.equals(objectModelValue12);
        org.jboss.dmr.ModelNode modelNode18 = objectModelValue12.asObject();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList19 = objectModelValue12.asList();
        org.jboss.dmr.ModelNode modelNode20 = modelNode3.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList19);
        org.jboss.dmr.Property property22 = new org.jboss.dmr.Property("bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }", modelNode3, true);
        org.jboss.dmr.ModelNode modelNode24 = modelNode3.add(2);
        org.jboss.dmr.ModelNode modelNode26 = modelNode24.set(10.0d);
        org.jboss.dmr.ModelNode modelNode29 = modelNode26.set("//////////8=", (int) (short) 10);
        org.jboss.dmr.Property property31 = new org.jboss.dmr.Property("H4sIAAAAAAAAAGNgYFAAANT/KhoEAAAA", modelNode29, false);
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertNotNull(modelNodeList19);
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertNotNull(modelNode29);
    }

    @Test
    public void test10975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10975");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode("EXPRESSION_VALUE");
        org.jboss.dmr.BooleanModelValue booleanModelValue4 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger5 = booleanModelValue4.asBigInteger();
        byte[] byteArray6 = booleanModelValue4.asBytes();
        org.jboss.dmr.ModelNode modelNode7 = modelNode1.set("expression \"hi!\"", byteArray6);
        org.jboss.dmr.ModelNode modelNode8 = modelNode7.resolve();
        org.jboss.dmr.BooleanModelValue booleanModelValue9 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double10 = booleanModelValue9.asDouble();
        org.jboss.dmr.ModelValue modelValue11 = booleanModelValue9.copy();
        java.math.BigInteger bigInteger12 = booleanModelValue9.asBigInteger();
        org.jboss.dmr.ModelNode modelNode13 = new org.jboss.dmr.ModelNode(bigInteger12);
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode(bigInteger12);
        org.jboss.dmr.ModelNode modelNode15 = modelNode7.set(bigInteger12);
        java.lang.String str16 = modelNode7.toString();
        org.jboss.dmr.ModelNode modelNode20 = new org.jboss.dmr.ModelNode(112);
        org.jboss.dmr.Property property22 = new org.jboss.dmr.Property("{}", modelNode20, true);
        java.lang.String str23 = modelNode20.asStringOrNull();
        org.jboss.dmr.ModelNode modelNode24 = modelNode7.setNoCopy("100", modelNode20);
        org.junit.Assert.assertNotNull(booleanModelValue4);
        org.junit.Assert.assertNotNull(bigInteger5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1]");
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(booleanModelValue9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue11);
        org.junit.Assert.assertNotNull(bigInteger12);
        org.junit.Assert.assertNotNull(modelNode15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "big integer 1" + "'", str16, "big integer 1");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "112" + "'", str23, "112");
        org.junit.Assert.assertNotNull(modelNode24);
    }

    @Test
    public void test10976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10976");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((long) 10);
        java.lang.String str3 = modelNode1.asString("true");
        org.jboss.dmr.ModelNode modelNode5 = modelNode1.set((double) 100);
        org.jboss.dmr.ModelNode modelNode7 = modelNode1.set(0);
        org.jboss.dmr.ExpressionValue expressionValue9 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue11 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean12 = expressionValue9.equals(expressionValue11);
        org.jboss.dmr.ExpressionValue expressionValue14 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue16 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean17 = expressionValue14.equals(expressionValue16);
        boolean boolean18 = expressionValue9.equals(expressionValue16);
        org.jboss.dmr.ValueExpression valueExpression19 = expressionValue16.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue21 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ValueExpression valueExpression22 = expressionValue21.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue24 = new org.jboss.dmr.ExpressionValue("hi!");
        java.lang.String str25 = expressionValue24.toString();
        org.jboss.dmr.ModelNode modelNode27 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode30 = modelNode27.set("hi!", 0.0d);
        org.jboss.dmr.Property property31 = new org.jboss.dmr.Property("", modelNode30);
        boolean boolean32 = expressionValue24.equals((java.lang.Object) property31);
        boolean boolean33 = expressionValue21.equals(expressionValue24);
        boolean boolean34 = expressionValue16.equals((java.lang.Object) boolean33);
        org.jboss.dmr.ValueExpression valueExpression35 = expressionValue16.asExpression();
        org.jboss.dmr.ModelNode modelNode36 = new org.jboss.dmr.ModelNode(valueExpression35);
        org.jboss.dmr.DoubleModelValue doubleModelValue39 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        int int41 = doubleModelValue39.asInt((int) 'l');
        java.math.BigDecimal bigDecimal42 = doubleModelValue39.asBigDecimal();
        byte[] byteArray43 = doubleModelValue39.asBytes();
        double double45 = doubleModelValue39.asDouble(1.0d);
        java.lang.String str46 = doubleModelValue39.asString();
        byte[] byteArray47 = doubleModelValue39.asBytes();
        org.jboss.dmr.ModelNode modelNode48 = modelNode36.set("Expression \"true\"", byteArray47);
        boolean boolean49 = modelNode7.equals((java.lang.Object) byteArray47);
        boolean boolean51 = org.jboss.dmr.Base64.encodeToFile(byteArray47, "32");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "10" + "'", str3, "10");
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(valueExpression19);
        org.junit.Assert.assertNotNull(valueExpression22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "expression \"hi!\"" + "'", str25, "expression \"hi!\"");
        org.junit.Assert.assertNotNull(modelNode30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(valueExpression35);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertNotNull(bigDecimal42);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 10.0d + "'", double45 == 10.0d);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "10.0" + "'", str46, "10.0");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(modelNode48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test10977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10977");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((long) 10);
        java.lang.String str3 = modelNode1.asString("true");
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long7 = modelNode6.asLong();
        org.jboss.dmr.ValueExpression valueExpression8 = modelNode6.asExpression();
        java.math.BigDecimal bigDecimal9 = valueExpression8.resolveBigDecimal();
        org.jboss.dmr.ModelNode modelNode10 = new org.jboss.dmr.ModelNode(bigDecimal9);
        org.jboss.dmr.ModelNode modelNode12 = modelNode10.set((double) (byte) 0);
        org.jboss.dmr.ModelNode modelNode13 = modelNode1.setNoCopy("35", modelNode12);
        org.jboss.dmr.ModelNode modelNode16 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode19 = modelNode16.set("hi!", 0.0d);
        org.jboss.dmr.Property property20 = new org.jboss.dmr.Property("", modelNode19);
        boolean boolean22 = modelNode19.hasDefined((int) (short) -1);
        org.jboss.dmr.ModelNode modelNode23 = modelNode13.setNoCopy("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4", modelNode19);
        org.jboss.dmr.ModelNode modelNode24 = modelNode13.resolve();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "10" + "'", str3, "10");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertNotNull(valueExpression8);
        org.junit.Assert.assertNotNull(bigDecimal9);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(modelNode23);
        org.junit.Assert.assertNotNull(modelNode24);
    }

    @Test
    public void test10978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10978");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str2 = longModelValue1.asString();
        byte[] byteArray3 = longModelValue1.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue4 = new org.jboss.dmr.BytesModelValue(byteArray3);
        java.lang.String str5 = bytesModelValue4.asString();
        int int6 = bytesModelValue4.asInt();
        byte[] byteArray7 = bytesModelValue4.asBytes();
        org.jboss.dmr.LongModelValue longModelValue9 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str10 = longModelValue9.asString();
        byte[] byteArray11 = longModelValue9.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue12 = new org.jboss.dmr.BytesModelValue(byteArray11);
        java.lang.String str13 = bytesModelValue12.asString();
        int int14 = bytesModelValue12.asInt();
        int int15 = bytesModelValue12.asInt();
        org.jboss.dmr.LongModelValue longModelValue17 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str18 = longModelValue17.asString();
        byte[] byteArray19 = longModelValue17.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue20 = new org.jboss.dmr.BytesModelValue(byteArray19);
        double double21 = bytesModelValue20.asDouble();
        boolean boolean22 = bytesModelValue12.equals(bytesModelValue20);
        byte[] byteArray23 = bytesModelValue20.asBytes();
        java.math.BigInteger bigInteger24 = bytesModelValue20.asBigInteger();
        boolean boolean25 = bytesModelValue4.equals(bytesModelValue20);
        byte[] byteArray26 = bytesModelValue20.asBytes();
        org.jboss.dmr.LongModelValue longModelValue28 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str29 = longModelValue28.asString();
        byte[] byteArray30 = longModelValue28.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue31 = new org.jboss.dmr.BytesModelValue(byteArray30);
        java.lang.String str32 = bytesModelValue31.asString();
        int int33 = bytesModelValue31.asInt();
        long long35 = bytesModelValue31.asLong((long) (short) 1);
        int int36 = bytesModelValue31.asInt();
        int int37 = bytesModelValue31.asInt();
        byte[] byteArray38 = bytesModelValue31.asBytes();
        org.jboss.dmr.LongModelValue longModelValue40 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str41 = longModelValue40.asString();
        byte[] byteArray42 = longModelValue40.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue43 = new org.jboss.dmr.BytesModelValue(byteArray42);
        java.lang.String str44 = bytesModelValue43.asString();
        int int45 = bytesModelValue43.asInt();
        long long47 = bytesModelValue43.asLong((long) (short) 1);
        int int48 = bytesModelValue43.asInt();
        double double49 = bytesModelValue43.asDouble();
        boolean boolean50 = bytesModelValue31.equals(bytesModelValue43);
        boolean boolean51 = bytesModelValue20.equals(bytesModelValue31);
        int int52 = bytesModelValue20.asInt();
        org.jboss.dmr.LongModelValue longModelValue54 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str55 = longModelValue54.asString();
        byte[] byteArray56 = longModelValue54.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue57 = new org.jboss.dmr.BytesModelValue(byteArray56);
        java.lang.String str58 = bytesModelValue57.asString();
        int int59 = bytesModelValue57.asInt();
        int int60 = bytesModelValue57.asInt();
        org.jboss.dmr.LongModelValue longModelValue62 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str63 = longModelValue62.asString();
        byte[] byteArray64 = longModelValue62.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue65 = new org.jboss.dmr.BytesModelValue(byteArray64);
        double double66 = bytesModelValue65.asDouble();
        boolean boolean67 = bytesModelValue57.equals(bytesModelValue65);
        org.jboss.dmr.LongModelValue longModelValue69 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str70 = longModelValue69.asString();
        byte[] byteArray71 = longModelValue69.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue72 = new org.jboss.dmr.BytesModelValue(byteArray71);
        boolean boolean73 = bytesModelValue65.equals(bytesModelValue72);
        double double75 = bytesModelValue72.asDouble((double) 52);
        boolean boolean76 = bytesModelValue20.equals(bytesModelValue72);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1" + "'", str2, "1");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str5, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1" + "'", str10, "1");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str13, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1" + "'", str18, "1");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.9E-324d + "'", double21 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(bigInteger24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1" + "'", str29, "1");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str32, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1" + "'", str41, "1");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str44, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1L + "'", long47 == 1L);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4.9E-324d + "'", double49 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "1" + "'", str55, "1");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str58, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "1" + "'", str63, "1");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 4.9E-324d + "'", double66 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "1" + "'", str70, "1");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 4.9E-324d + "'", double75 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test10979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10979");
        org.jboss.dmr.ModelType modelType1 = org.jboss.dmr.ModelType.PROPERTY;
        char char2 = modelType1.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue3 = org.jboss.dmr.TypeModelValue.of(modelType1);
        org.jboss.dmr.ModelType modelType4 = org.jboss.dmr.ModelType.PROPERTY;
        char char5 = modelType4.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue6 = org.jboss.dmr.TypeModelValue.of(modelType4);
        boolean boolean7 = typeModelValue3.equals(typeModelValue6);
        java.lang.String str8 = typeModelValue6.asString();
        org.jboss.dmr.ModelNode modelNode9 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode12 = modelNode9.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList13 = modelNode12.asList();
        org.jboss.dmr.ListModelValue listModelValue14 = new org.jboss.dmr.ListModelValue(modelNodeList13);
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue14);
        org.jboss.dmr.ModelValue modelValue16 = listModelValue14.resolve();
        int int18 = listModelValue14.asInt((int) (byte) 100);
        boolean boolean19 = listModelValue14.asBoolean();
        org.jboss.dmr.ModelNode[] modelNodeArray20 = org.jboss.dmr.ListModelValue.NO_NODES;
        boolean boolean21 = listModelValue14.equals((java.lang.Object) modelNodeArray20);
        boolean boolean22 = typeModelValue6.equals((java.lang.Object) listModelValue14);
        org.jboss.dmr.ModelValue modelValue23 = listModelValue14.resolve();
        org.jboss.dmr.ModelValue modelValue24 = listModelValue14.protect();
        java.lang.Throwable throwable26 = null;
        org.jboss.dmr.stream.ModelException modelException27 = new org.jboss.dmr.stream.ModelException("[(\"hi!\" => 0.0)]", throwable26);
        org.jboss.dmr.stream.ModelException modelException28 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException27);
        java.lang.Throwable throwable30 = null;
        org.jboss.dmr.stream.ModelException modelException31 = new org.jboss.dmr.stream.ModelException("[(\"hi!\" => 0.0)]", throwable30);
        org.jboss.dmr.stream.ModelException modelException32 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException31);
        modelException27.addSuppressed((java.lang.Throwable) modelException31);
        boolean boolean34 = listModelValue14.equals((java.lang.Object) modelException27);
        org.jboss.dmr.stream.ModelException modelException35 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException27);
        java.lang.Throwable[] throwableArray36 = modelException35.getSuppressed();
        org.jboss.dmr.stream.ModelException modelException37 = new org.jboss.dmr.stream.ModelException("{ \"BYTES_VALUE\" : { \"EXPRESSION_VALUE\" : \"1.0\" } }", (java.lang.Throwable) modelException35);
        org.jboss.dmr.stream.ModelException modelException38 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException35);
        java.lang.Throwable[] throwableArray39 = modelException35.getSuppressed();
        org.junit.Assert.assertTrue("'" + modelType1 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType1.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char2 + "' != '" + 'p' + "'", char2 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue3);
        org.junit.Assert.assertTrue("'" + modelType4 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType4.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char5 + "' != '" + 'p' + "'", char5 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PROPERTY" + "'", str8, "PROPERTY");
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNodeList13);
        org.junit.Assert.assertNotNull(modelValue16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(modelNodeArray20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(modelValue23);
        org.junit.Assert.assertNotNull(modelValue24);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray39);
    }

    @Test
    public void test10980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10980");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        java.lang.String str6 = listModelValue5.asString();
        long long7 = listModelValue5.asLong();
        int int9 = listModelValue5.asInt((int) '4');
        org.jboss.dmr.ModelValue modelValue10 = listModelValue5.protect();
        org.jboss.dmr.ModelValue modelValue11 = listModelValue5.protect();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = listModelValue5.asList();
        long long14 = listModelValue5.asLong((long) (short) 100);
        org.jboss.dmr.ModelNode modelNode15 = listModelValue5.asObject();
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str6, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(modelValue10);
        org.junit.Assert.assertNotNull(modelValue11);
        org.junit.Assert.assertNotNull(modelNodeList12);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(modelNode15);
    }

    @Test
    public void test10981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10981");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 0);
        byte[] byteArray2 = doubleModelValue1.asBytes();
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) doubleModelValue1);
        double double4 = doubleModelValue1.asDouble();
        int int6 = doubleModelValue1.asInt((int) (short) 100);
        boolean boolean8 = doubleModelValue1.asBoolean(false);
        java.lang.String str9 = doubleModelValue1.asString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "0.0" + "'", str9, "0.0");
    }

    @Test
    public void test10982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10982");
        org.jboss.dmr.BooleanModelValue booleanModelValue1 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray2 = booleanModelValue1.asBytes();
        java.lang.String str3 = booleanModelValue1.asString();
        boolean boolean4 = booleanModelValue1.asBoolean();
        java.math.BigDecimal bigDecimal5 = booleanModelValue1.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode10 = modelNode7.set("hi!", 0.0d);
        org.jboss.dmr.Property property11 = new org.jboss.dmr.Property("", modelNode10);
        boolean boolean13 = modelNode10.hasDefined((int) (short) -1);
        boolean boolean14 = booleanModelValue1.equals((java.lang.Object) modelNode10);
        byte[] byteArray15 = booleanModelValue1.asBytes();
        java.lang.String str16 = booleanModelValue1.asString();
        org.junit.Assert.assertNotNull(booleanModelValue1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "true" + "'", str3, "true");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(bigDecimal5);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "true" + "'", str16, "true");
    }

    @Test
    public void test10983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10983");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((long) 10);
        java.lang.String str3 = modelNode1.asString("true");
        org.jboss.dmr.ModelNode modelNode6 = modelNode1.set("expression \"hi!\"", (int) (short) -1);
        java.util.Set<java.lang.String> strSet7 = modelNode6.keys();
        modelNode6.protect();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode10 = modelNode6.require("100.0");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child '100.0' exists");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "10" + "'", str3, "10");
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test10984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10984");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("(\"org.jboss.dmr.stream.ModelException: [(\\\"hi!\\\" => 0.0)]\" => (\"hi!\" => 0.0))", (int) (short) 0);
        org.jboss.dmr.ModelType modelType5 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode(modelType5);
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        org.jboss.dmr.Property property12 = new org.jboss.dmr.Property("", modelNode11);
        org.jboss.dmr.ModelNode modelNode13 = modelNode6.set(property12);
        org.jboss.dmr.ModelNode modelNode14 = property12.getValue();
        org.jboss.dmr.PropertyModelValue propertyModelValue15 = new org.jboss.dmr.PropertyModelValue(property12);
        java.util.List<org.jboss.dmr.Property> propertyList16 = propertyModelValue15.asPropertyList();
        boolean boolean17 = modelNode1.equals((java.lang.Object) propertyModelValue15);
        java.io.PrintWriter printWriter18 = null;
        // The following exception was thrown during execution in test generation
        try {
            propertyModelValue15.formatAsJSON(printWriter18, 32, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertTrue("'" + modelType5 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType5.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(propertyList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test10985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10985");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(false);
        int int3 = modelNode1.asInt(2);
        org.jboss.dmr.ModelNode modelNode5 = modelNode1.set(52);
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode10 = modelNode7.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList11 = modelNode10.asList();
        org.jboss.dmr.ListModelValue listModelValue12 = new org.jboss.dmr.ListModelValue(modelNodeList11);
        org.jboss.dmr.ModelNode modelNode13 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue12);
        org.jboss.dmr.ModelValue modelValue14 = listModelValue12.resolve();
        int int16 = listModelValue12.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList17 = listModelValue12.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList18 = listModelValue12.asPropertyList();
        org.jboss.dmr.ModelNode modelNode20 = listModelValue12.getChild((int) (short) 0);
        org.jboss.dmr.ModelNode modelNode21 = modelNode20.resolve();
        org.jboss.dmr.ModelNode modelNode22 = modelNode5.set("EXPRESSION_VALUE", modelNode21);
        org.jboss.dmr.ModelNode modelNode24 = modelNode21.set(true);
        org.jboss.dmr.ModelNode modelNode25 = modelNode24.resolve();
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory27 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream28 = null;
        org.jboss.dmr.Base64.InputStream inputStream30 = new org.jboss.dmr.Base64.InputStream(inputStream28, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue32 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str33 = longModelValue32.asString();
        byte[] byteArray34 = longModelValue32.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue35 = new org.jboss.dmr.BytesModelValue(byteArray34);
        int int38 = inputStream30.read(byteArray34, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream40 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream30, (-1));
        org.jboss.dmr.stream.ModelReader modelReader41 = modelStreamFactory27.newModelReader((java.io.InputStream) inputStream40);
        java.io.InputStream inputStream42 = null;
        org.jboss.dmr.Base64.InputStream inputStream44 = new org.jboss.dmr.Base64.InputStream(inputStream42, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream45 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream44);
        org.jboss.dmr.Base64.InputStream inputStream46 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream44);
        org.jboss.dmr.stream.ModelReader modelReader47 = modelStreamFactory27.newModelReader((java.io.InputStream) inputStream44);
        java.io.InputStream inputStream48 = null;
        org.jboss.dmr.Base64.InputStream inputStream50 = new org.jboss.dmr.Base64.InputStream(inputStream48, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue52 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str53 = longModelValue52.asString();
        byte[] byteArray54 = longModelValue52.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue55 = new org.jboss.dmr.BytesModelValue(byteArray54);
        int int58 = inputStream50.read(byteArray54, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream60 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream50, (-1));
        org.jboss.dmr.Base64.InputStream inputStream62 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream50, (int) 'p');
        org.jboss.dmr.Base64.InputStream inputStream63 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream62);
        org.jboss.dmr.stream.ModelReader modelReader64 = modelStreamFactory27.newModelReader((java.io.InputStream) inputStream62);
        java.io.OutputStream outputStream65 = null;
        org.jboss.dmr.Base64.OutputStream outputStream66 = new org.jboss.dmr.Base64.OutputStream(outputStream65);
        outputStream66.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream68 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream66);
        org.jboss.dmr.Base64.OutputStream outputStream69 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream68);
        outputStream69.flushBase64();
        outputStream69.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream72 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream69);
        org.jboss.dmr.Base64.OutputStream outputStream74 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream72, 0);
        org.jboss.dmr.Base64.OutputStream outputStream75 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream74);
        org.jboss.dmr.stream.ModelWriter modelWriter76 = modelStreamFactory27.newModelWriter((java.io.OutputStream) outputStream75);
        modelNode25.writeExternal((java.io.OutputStream) outputStream75);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertNotNull(modelNodeList11);
        org.junit.Assert.assertNotNull(modelValue14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(propertyList17);
        org.junit.Assert.assertNotNull(propertyList18);
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(modelNode21);
        org.junit.Assert.assertNotNull(modelNode22);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertNotNull(modelStreamFactory27);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1" + "'", str33, "1");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(modelReader41);
        org.junit.Assert.assertNotNull(modelReader47);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "1" + "'", str53, "1");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(modelReader64);
        org.junit.Assert.assertNotNull(modelWriter76);
    }

    @Test
    public void test10986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10986");
        org.jboss.dmr.ExpressionValue expressionValue1 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ValueExpression valueExpression2 = expressionValue1.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue4 = new org.jboss.dmr.ExpressionValue("hi!");
        java.lang.String str5 = expressionValue4.toString();
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode10 = modelNode7.set("hi!", 0.0d);
        org.jboss.dmr.Property property11 = new org.jboss.dmr.Property("", modelNode10);
        boolean boolean12 = expressionValue4.equals((java.lang.Object) property11);
        boolean boolean13 = expressionValue1.equals(expressionValue4);
        java.lang.String str14 = expressionValue4.asString();
        java.io.PrintWriter printWriter15 = null;
        // The following exception was thrown during execution in test generation
        try {
            expressionValue4.format(printWriter15, (int) 'b', true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(valueExpression2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "expression \"hi!\"" + "'", str5, "expression \"hi!\"");
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test10987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10987");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        org.jboss.dmr.ModelValue modelValue2 = objectModelValue0.protect();
        java.util.List<org.jboss.dmr.Property> propertyList3 = objectModelValue0.asPropertyList();
        org.jboss.dmr.ModelValue modelValue4 = objectModelValue0.copy();
        boolean boolean5 = objectModelValue0.asBoolean();
        boolean boolean7 = objectModelValue0.has("rO0ABXQAUXJPMEFCWE55QUJkdmNtY3VhbUp2YzNNdVpHMXlMazF2WkdWc1RtOWtaUnd0b1VTZG80\nNC9EQUFBZUhCM0RIQUFBMmhwSVdVQUEyaHAKSVhnPQ==");
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        java.lang.Long long9 = modelNode8.asLongOrNull();
        java.lang.String str10 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode8);
        org.jboss.dmr.ModelType modelType12 = org.jboss.dmr.ModelType.LONG;
        org.jboss.dmr.ModelNode modelNode13 = modelNode8.set("rO0ABXNyABFqYXZhLmxhbmcuSW50ZWdlchLioKT3gYc4AgABSQAFdmFsdWV4cgAQamF2YS5sYW5n\nLk51bWJlcoaslR0LlOCLAgAAeHAAAABk", modelType12);
        java.lang.String str15 = modelNode8.toJSONString(false);
        org.jboss.dmr.ModelNode modelNode18 = modelNode8.setExpression("bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }", "H4sIAAAAAAAAAFvzloG1uIhBICuxLFEvJzEvXc8lvzQpJ7Vh8yEvzezfLEwMjC4MrGWJOaWpFSjK/Epzk1KL2tZMleWe8qCbiYGhosD+AwMYAAAkVvhKVAAAAA==");
        boolean boolean19 = objectModelValue0.equals((java.lang.Object) modelNode8);
        java.lang.String str20 = objectModelValue0.asString();
        long long21 = objectModelValue0.asLong();
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(propertyList3);
        org.junit.Assert.assertNotNull(modelValue4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4" + "'", str10, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4");
        org.junit.Assert.assertTrue("'" + modelType12 + "' != '" + org.jboss.dmr.ModelType.LONG + "'", modelType12.equals(org.jboss.dmr.ModelType.LONG));
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{\n    \"rO0ABXNyABFqYXZhLmxhbmcuSW50ZWdlchLioKT3gYc4AgABSQAFdmFsdWV4cgAQamF2YS5sYW5n\\nLk51bWJlcoaslR0LlOCLAgAAeHAAAABk\" : {\n        \"TYPE_MODEL_VALUE\" : \"LONG\"\n    }\n}" + "'", str15, "{\n    \"rO0ABXNyABFqYXZhLmxhbmcuSW50ZWdlchLioKT3gYc4AgABSQAFdmFsdWV4cgAQamF2YS5sYW5n\\nLk51bWJlcoaslR0LlOCLAgAAeHAAAABk\" : {\n        \"TYPE_MODEL_VALUE\" : \"LONG\"\n    }\n}");
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{}" + "'", str20, "{}");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
    }

    @Test
    public void test10988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10988");
        org.jboss.dmr.ModelNodeFactory modelNodeFactory0 = org.jboss.dmr.ModelNodeFactory.INSTANCE;
        org.jboss.dmr.ModelNode modelNode3 = modelNodeFactory0.readFrom("10.0", false);
        org.jboss.dmr.ModelNode modelNode6 = modelNodeFactory0.readFrom("100", false);
        java.io.InputStream inputStream7 = null;
        org.jboss.dmr.Base64.InputStream inputStream9 = new org.jboss.dmr.Base64.InputStream(inputStream7, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream10 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream9);
        org.jboss.dmr.Base64.InputStream inputStream11 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream9);
        org.jboss.dmr.Base64.InputStream inputStream13 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream11, (int) (short) 10);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream13);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode16 = modelNodeFactory0.readFrom((java.io.InputStream) inputStream13, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNodeFactory0);
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNode6);
    }

    @Test
    public void test10989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10989");
        org.jboss.dmr.BooleanModelValue booleanModelValue1 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double2 = booleanModelValue1.asDouble();
        org.jboss.dmr.ModelValue modelValue3 = booleanModelValue1.copy();
        java.math.BigInteger bigInteger4 = booleanModelValue1.asBigInteger();
        org.jboss.dmr.ModelNode modelNode5 = new org.jboss.dmr.ModelNode(bigInteger4);
        org.jboss.dmr.IntModelValue intModelValue7 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str8 = intModelValue7.asString();
        double double10 = intModelValue7.asDouble((double) 2);
        java.math.BigDecimal bigDecimal11 = intModelValue7.asBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue12 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal11);
        org.jboss.dmr.ModelNode modelNode13 = modelNode5.set(bigDecimal11);
        org.jboss.dmr.Property property14 = new org.jboss.dmr.Property("org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]", modelNode13);
        boolean boolean15 = modelNode13.asBoolean();
        org.jboss.dmr.ModelNode modelNode17 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.BooleanModelValue booleanModelValue19 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger20 = booleanModelValue19.asBigInteger();
        org.jboss.dmr.ModelNode modelNode21 = modelNode17.add(bigInteger20);
        org.jboss.dmr.ModelNode modelNode22 = new org.jboss.dmr.ModelNode(bigInteger20);
        org.jboss.dmr.ModelNode modelNode24 = modelNode22.setExpression("rO0ABX5yABdvcmcuamJvc3MuZG1yLk1vZGVsVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5F\nbnVtAAAAAAAAAAASAAB4cHQACFBST1BFUlRZ");
        org.jboss.dmr.ModelNode modelNode25 = modelNode13.set("(\"-1\" => bytes {\n    0x01\n})", modelNode22);
        org.jboss.dmr.ModelNode modelNode28 = modelNode25.setExpression("", "(\"35\" => 0.0)");
        org.junit.Assert.assertNotNull(booleanModelValue1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue3);
        org.junit.Assert.assertNotNull(bigInteger4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "32" + "'", str8, "32");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 32.0d + "'", double10 == 32.0d);
        org.junit.Assert.assertNotNull(bigDecimal11);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(booleanModelValue19);
        org.junit.Assert.assertNotNull(bigInteger20);
        org.junit.Assert.assertNotNull(modelNode21);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertNotNull(modelNode28);
    }

    @Test
    public void test10990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10990");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.PROPERTY;
        char char1 = modelType0.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue2 = org.jboss.dmr.TypeModelValue.of(modelType0);
        org.jboss.dmr.ModelType modelType3 = org.jboss.dmr.ModelType.PROPERTY;
        char char4 = modelType3.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue5 = org.jboss.dmr.TypeModelValue.of(modelType3);
        boolean boolean6 = typeModelValue2.equals(typeModelValue5);
        java.lang.String str7 = typeModelValue5.asString();
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = modelNode11.asList();
        org.jboss.dmr.ListModelValue listModelValue13 = new org.jboss.dmr.ListModelValue(modelNodeList12);
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue13);
        org.jboss.dmr.ModelValue modelValue15 = listModelValue13.resolve();
        int int17 = listModelValue13.asInt((int) (byte) 100);
        boolean boolean18 = listModelValue13.asBoolean();
        org.jboss.dmr.ModelNode[] modelNodeArray19 = org.jboss.dmr.ListModelValue.NO_NODES;
        boolean boolean20 = listModelValue13.equals((java.lang.Object) modelNodeArray19);
        boolean boolean21 = typeModelValue5.equals((java.lang.Object) listModelValue13);
        boolean boolean22 = typeModelValue5.asBoolean();
        java.lang.String str23 = typeModelValue5.asString();
        org.jboss.dmr.ModelValue modelValue24 = typeModelValue5.resolve();
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType0.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char1 + "' != '" + 'p' + "'", char1 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue2);
        org.junit.Assert.assertTrue("'" + modelType3 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType3.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char4 + "' != '" + 'p' + "'", char4 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PROPERTY" + "'", str7, "PROPERTY");
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNodeList12);
        org.junit.Assert.assertNotNull(modelValue15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(modelNodeArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PROPERTY" + "'", str23, "PROPERTY");
        org.junit.Assert.assertNotNull(modelValue24);
    }

    @Test
    public void test10991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10991");
        java.io.OutputStream outputStream0 = null;
        org.jboss.dmr.Base64.OutputStream outputStream1 = new org.jboss.dmr.Base64.OutputStream(outputStream0);
        outputStream1.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream3 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream1);
        org.jboss.dmr.Base64.OutputStream outputStream4 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream3);
        outputStream3.flushBase64();
        org.jboss.dmr.Base64.OutputStream outputStream6 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream3);
        org.jboss.dmr.Base64.OutputStream outputStream7 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream3);
        outputStream7.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream9 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream7);
        org.jboss.dmr.IntModelValue intModelValue11 = new org.jboss.dmr.IntModelValue(0);
        boolean boolean12 = intModelValue11.asBoolean();
        java.math.BigDecimal bigDecimal13 = intModelValue11.asBigDecimal();
        byte[] byteArray14 = intModelValue11.asBytes();
        // The following exception was thrown during execution in test generation
        try {
            outputStream7.write(byteArray14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(bigDecimal13);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 0, 0, 0]");
    }

    @Test
    public void test10992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10992");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str2 = longModelValue1.asString();
        double double4 = longModelValue1.asDouble((double) 32L);
        org.jboss.dmr.ValueExpression valueExpression5 = longModelValue1.asExpression();
        long long7 = longModelValue1.asLong((long) 'a');
        int int9 = longModelValue1.asInt((int) '4');
        java.lang.String str10 = longModelValue1.asString();
        long long11 = longModelValue1.asLong();
        double double12 = longModelValue1.asDouble();
        long long14 = longModelValue1.asLong(11975582L);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1" + "'", str2, "1");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(valueExpression5);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1" + "'", str10, "1");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
    }

    @Test
    public void test10993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10993");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 0);
        byte[] byteArray2 = doubleModelValue1.asBytes();
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) doubleModelValue1);
        org.jboss.dmr.DoubleModelValue doubleModelValue4 = null;
        boolean boolean5 = doubleModelValue1.equals(doubleModelValue4);
        org.jboss.dmr.ObjectModelValue objectModelValue6 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode7 = objectModelValue6.asObject();
        java.util.Set<java.lang.String> strSet8 = objectModelValue6.getKeys();
        org.jboss.dmr.ModelNode modelNode10 = objectModelValue6.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        boolean boolean11 = objectModelValue6.asBoolean();
        org.jboss.dmr.ModelNode modelNode13 = objectModelValue6.getChild("1L");
        org.jboss.dmr.ObjectModelValue objectModelValue14 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode15 = objectModelValue14.asObject();
        java.util.Set<java.lang.String> strSet16 = objectModelValue14.getKeys();
        org.jboss.dmr.ModelNode modelNode18 = objectModelValue14.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        boolean boolean19 = objectModelValue14.asBoolean();
        int int21 = objectModelValue14.asInt((int) 'b');
        int int23 = objectModelValue14.asInt((int) '#');
        boolean boolean24 = objectModelValue6.equals(objectModelValue14);
        int int25 = objectModelValue14.asInt();
        java.util.Set<java.lang.String> strSet26 = objectModelValue14.getKeys();
        org.jboss.dmr.ModelValue modelValue27 = objectModelValue14.resolve();
        boolean boolean28 = doubleModelValue1.equals((java.lang.Object) objectModelValue14);
        org.jboss.dmr.ModelNode modelNode29 = objectModelValue14.asObject();
        int int31 = modelNode29.asInt((int) '4');
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(modelNode10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(modelNode18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(modelValue27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(modelNode29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test10994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10994");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        long long3 = longModelValue1.asLong((long) (short) 0);
        java.lang.String str4 = longModelValue1.asString();
        byte[] byteArray5 = longModelValue1.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue6 = new org.jboss.dmr.BytesModelValue(byteArray5);
        long long7 = bytesModelValue6.asLong();
        int int9 = bytesModelValue6.asInt((int) '4');
        boolean boolean11 = bytesModelValue6.has((int) 'Z');
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 1L + "'", long3 == 1L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1" + "'", str4, "1");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test10995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10995");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue5);
        long long7 = listModelValue5.asLong();
        java.util.List<org.jboss.dmr.Property> propertyList8 = listModelValue5.asPropertyList();
        org.jboss.dmr.ModelValue modelValue9 = listModelValue5.protect();
        org.jboss.dmr.ModelValue modelValue10 = modelValue9.protect();
        // The following exception was thrown during execution in test generation
        try {
            double double11 = modelValue10.asDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertNotNull(propertyList8);
        org.junit.Assert.assertNotNull(modelValue9);
        org.junit.Assert.assertNotNull(modelValue10);
    }

    @Test
    public void test10996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10996");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        java.lang.String str5 = modelNode1.toString();
        org.jboss.dmr.ModelNode modelNode6 = modelNode1.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(100);
        org.jboss.dmr.ModelNode modelNode9 = modelNode0.add(modelNode1);
        org.jboss.dmr.ModelNode modelNode10 = modelNode0.resolve();
        org.jboss.dmr.ModelType modelType11 = org.jboss.dmr.ModelType.PROPERTY;
        char char12 = modelType11.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue13 = org.jboss.dmr.TypeModelValue.of(modelType11);
        org.jboss.dmr.ModelType modelType14 = org.jboss.dmr.ModelType.PROPERTY;
        char char15 = modelType14.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue16 = org.jboss.dmr.TypeModelValue.of(modelType14);
        boolean boolean17 = typeModelValue13.equals(typeModelValue16);
        java.lang.String str18 = typeModelValue16.asString();
        org.jboss.dmr.ModelType modelType19 = org.jboss.dmr.ModelType.PROPERTY;
        char char20 = modelType19.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue21 = org.jboss.dmr.TypeModelValue.of(modelType19);
        org.jboss.dmr.ModelType modelType22 = org.jboss.dmr.ModelType.PROPERTY;
        char char23 = modelType22.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue24 = org.jboss.dmr.TypeModelValue.of(modelType22);
        boolean boolean25 = typeModelValue21.equals(typeModelValue24);
        java.lang.String str26 = typeModelValue24.asString();
        boolean boolean28 = typeModelValue24.asBoolean(true);
        boolean boolean29 = typeModelValue16.equals(typeModelValue24);
        org.jboss.dmr.ValueExpression valueExpression30 = typeModelValue24.asExpression();
        org.jboss.dmr.ValueExpression valueExpression31 = typeModelValue24.asExpression();
        org.jboss.dmr.BooleanModelValue booleanModelValue33 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long34 = booleanModelValue33.asLong();
        org.jboss.dmr.ValueExpression valueExpression35 = booleanModelValue33.asExpression();
        boolean boolean37 = valueExpression35.equals((java.lang.Object) 'p');
        org.jboss.dmr.ExpressionValue expressionValue38 = new org.jboss.dmr.ExpressionValue(valueExpression35);
        org.jboss.dmr.BooleanModelValue booleanModelValue39 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double40 = booleanModelValue39.asDouble();
        org.jboss.dmr.ModelValue modelValue41 = booleanModelValue39.copy();
        java.math.BigInteger bigInteger42 = booleanModelValue39.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue43 = new org.jboss.dmr.BigIntegerModelValue(bigInteger42);
        double double45 = bigIntegerModelValue43.asDouble((double) 'b');
        int int46 = bigIntegerModelValue43.asInt();
        org.jboss.dmr.ValueExpression valueExpression47 = bigIntegerModelValue43.asExpression();
        boolean boolean48 = valueExpression35.equals((java.lang.Object) valueExpression47);
        boolean boolean49 = valueExpression31.equals(valueExpression35);
        org.jboss.dmr.ModelNode modelNode50 = modelNode10.set(valueExpression31);
        org.jboss.dmr.ModelType modelType51 = org.jboss.dmr.ModelType.DOUBLE;
        org.jboss.dmr.ModelNode modelNode52 = new org.jboss.dmr.ModelNode(modelType51);
        org.jboss.dmr.ModelNode modelNode53 = new org.jboss.dmr.ModelNode(modelType51);
        modelNode53.protect();
        org.jboss.dmr.ModelNode modelNode55 = modelNode10.set(modelNode53);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode56 = modelNode53.setEmptyList();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(\"hi!\" => 0.0)" + "'", str5, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertTrue("'" + modelType11 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType11.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char12 + "' != '" + 'p' + "'", char12 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue13);
        org.junit.Assert.assertTrue("'" + modelType14 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType14.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char15 + "' != '" + 'p' + "'", char15 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PROPERTY" + "'", str18, "PROPERTY");
        org.junit.Assert.assertTrue("'" + modelType19 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType19.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char20 + "' != '" + 'p' + "'", char20 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue21);
        org.junit.Assert.assertTrue("'" + modelType22 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType22.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char23 + "' != '" + 'p' + "'", char23 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "PROPERTY" + "'", str26, "PROPERTY");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(valueExpression30);
        org.junit.Assert.assertNotNull(valueExpression31);
        org.junit.Assert.assertNotNull(booleanModelValue33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1L + "'", long34 == 1L);
        org.junit.Assert.assertNotNull(valueExpression35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(booleanModelValue39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue41);
        org.junit.Assert.assertNotNull(bigInteger42);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(valueExpression47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(modelNode50);
        org.junit.Assert.assertTrue("'" + modelType51 + "' != '" + org.jboss.dmr.ModelType.DOUBLE + "'", modelType51.equals(org.jboss.dmr.ModelType.DOUBLE));
        org.junit.Assert.assertNotNull(modelNode55);
    }

    @Test
    public void test10997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10997");
        org.jboss.dmr.IntModelValue intModelValue2 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str3 = intModelValue2.asString();
        double double5 = intModelValue2.asDouble((double) 100);
        java.math.BigInteger bigInteger6 = intModelValue2.asBigInteger();
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode(bigInteger6);
        boolean boolean9 = modelNode7.hasDefined((int) '4');
        org.jboss.dmr.ModelNode modelNode10 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode13 = modelNode10.setExpression("hi!", "hi!");
        java.lang.String str14 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode10);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList15 = modelNode10.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode17 = modelNode10.set((double) 0);
        org.jboss.dmr.ModelNode modelNode18 = modelNode10.clear();
        org.jboss.dmr.ObjectModelValue objectModelValue19 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode20 = objectModelValue19.asObject();
        java.util.Set<java.lang.String> strSet21 = objectModelValue19.getKeys();
        org.jboss.dmr.ModelNode modelNode23 = objectModelValue19.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        boolean boolean24 = objectModelValue19.asBoolean();
        int int26 = objectModelValue19.asInt((int) 'b');
        org.jboss.dmr.ModelNode modelNode27 = objectModelValue19.asObject();
        java.util.Set<java.lang.String> strSet28 = modelNode27.keys();
        org.jboss.dmr.ModelNode modelNode29 = modelNode10.add(modelNode27);
        org.jboss.dmr.ModelNode modelNode30 = modelNode10.resolve();
        org.jboss.dmr.ModelNode modelNode31 = modelNode30.setEmptyList();
        org.jboss.dmr.ModelNode modelNode32 = modelNode7.set(modelNode30);
        org.jboss.dmr.Property property34 = new org.jboss.dmr.Property("\"true\"", modelNode7, true);
        org.jboss.dmr.ModelNode modelNode37 = modelNode7.add("\"[(\\\"hi!\\\" => expression \\\"hi!\\\"),bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }]\"", (int) (byte) 100);
        org.jboss.dmr.BooleanModelValue booleanModelValue40 = org.jboss.dmr.BooleanModelValue.valueOf(false);
        byte[] byteArray41 = booleanModelValue40.asBytes();
        org.jboss.dmr.ModelNode modelNode42 = modelNode37.set("rO0ABXQAA2hpIQ==", byteArray41);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "32" + "'", str3, "32");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 32.0d + "'", double5 == 32.0d);
        org.junit.Assert.assertNotNull(bigInteger6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str14, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList15);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNull(modelNode23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(modelNode29);
        org.junit.Assert.assertNotNull(modelNode30);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertNotNull(modelNode37);
        org.junit.Assert.assertNotNull(booleanModelValue40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[0]");
        org.junit.Assert.assertNotNull(modelNode42);
    }

    @Test
    public void test10998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10998");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((int) (short) 100);
        java.io.ObjectInput objectInput2 = null;
        // The following exception was thrown during execution in test generation
        try {
            modelNode1.readExternal(objectInput2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10999");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(11975582L);
    }

    @Test
    public void test11000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test11000");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ModelType modelType5 = modelNode3.getType();
        org.jboss.dmr.TypeModelValue typeModelValue6 = org.jboss.dmr.TypeModelValue.of(modelType5);
        boolean boolean8 = typeModelValue6.asBoolean(false);
        boolean boolean10 = typeModelValue6.asBoolean(false);
        boolean boolean11 = typeModelValue6.asBoolean();
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertTrue("'" + modelType5 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType5.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertNotNull(typeModelValue6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }
}

