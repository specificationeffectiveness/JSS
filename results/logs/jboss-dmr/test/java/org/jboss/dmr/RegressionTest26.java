package org.jboss.dmr;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest26 {

    public static boolean debug = false;

    @Test
    public void test13001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13001");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        org.jboss.dmr.Validation.validate(modelNode0, "[(\"hi!\" => 0.0)]");
        org.jboss.dmr.ModelType modelType6 = modelNode0.getType();
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode(modelType6);
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertTrue("'" + modelType6 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType6.equals(org.jboss.dmr.ModelType.PROPERTY));
    }

    @Test
    public void test13002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13002");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        int int9 = bigDecimalModelValue7.asInt(0);
        int int10 = bigDecimalModelValue7.asInt();
        int int11 = bigDecimalModelValue7.asInt();
        java.math.BigDecimal bigDecimal12 = bigDecimalModelValue7.asBigDecimal();
        boolean boolean14 = bigDecimalModelValue7.asBoolean(true);
        java.math.BigDecimal bigDecimal15 = bigDecimalModelValue7.asBigDecimal();
        java.math.BigInteger bigInteger16 = bigDecimalModelValue7.asBigInteger();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(bigDecimal12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(bigDecimal15);
        org.junit.Assert.assertNotNull(bigInteger16);
    }

    @Test
    public void test13003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13003");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isBigInteger();
        boolean boolean17 = modelReader15.isLong();
        boolean boolean18 = modelReader15.isBigDecimal();
        boolean boolean19 = modelReader15.isUndefined();
        boolean boolean20 = modelReader15.isUndefined();
        boolean boolean21 = modelReader15.isListStart();
        boolean boolean22 = modelReader15.isListStart();
        boolean boolean23 = modelReader15.isUndefined();
        boolean boolean24 = modelReader15.isBytes();
        boolean boolean25 = modelReader15.isPropertyEnd();
        boolean boolean26 = modelReader15.isDouble();
        boolean boolean27 = modelReader15.isPropertyStart();
        boolean boolean28 = modelReader15.isListStart();
        boolean boolean29 = modelReader15.isListEnd();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelType modelType30 = modelReader15.getType();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Current event isn't type");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test13004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13004");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        int int9 = bigDecimalModelValue7.asInt(0);
        java.math.BigInteger bigInteger10 = bigDecimalModelValue7.asBigInteger();
        boolean boolean12 = bigDecimalModelValue7.asBoolean(true);
        org.jboss.dmr.ValueExpression valueExpression13 = bigDecimalModelValue7.asExpression();
        long long15 = bigDecimalModelValue7.asLong((long) (byte) -1);
        long long17 = bigDecimalModelValue7.asLong((long) 100);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(bigInteger10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(valueExpression13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
    }

    @Test
    public void test13005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13005");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.setExpression("hi!", "hi!");
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList5 = modelNode4.asListOrEmpty();
        org.jboss.dmr.PropertyModelValue propertyModelValue7 = new org.jboss.dmr.PropertyModelValue("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=", modelNode4, false);
        boolean boolean9 = propertyModelValue7.has("10.0");
        org.jboss.dmr.ModelNode modelNode11 = propertyModelValue7.getChild(0);
        org.jboss.dmr.ModelValue modelValue12 = propertyModelValue7.resolve();
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long15 = modelNode14.asLong();
        org.jboss.dmr.ValueExpression valueExpression16 = modelNode14.asExpression();
        java.math.BigDecimal bigDecimal17 = valueExpression16.resolveBigDecimal();
        org.jboss.dmr.ModelNode modelNode18 = new org.jboss.dmr.ModelNode(bigDecimal17);
        org.jboss.dmr.ModelNode modelNode19 = new org.jboss.dmr.ModelNode(bigDecimal17);
        boolean boolean20 = propertyModelValue7.equals((java.lang.Object) modelNode19);
        org.jboss.dmr.ModelNode modelNode23 = modelNode19.setExpression("(\"Expression \\\"1\\\"\" => (\"org.jboss.dmr.stream.ModelException: [(\\\"hi!\\\" => 0.0)]\" => BYTES))", "big decimal 1");
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode25 = modelNode23.add((long) 's');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNodeList5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelValue12);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertNotNull(valueExpression16);
        org.junit.Assert.assertNotNull(bigDecimal17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(modelNode23);
    }

    @Test
    public void test13006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13006");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        java.lang.String str5 = modelNode1.toString();
        org.jboss.dmr.ModelNode modelNode6 = modelNode1.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        org.jboss.dmr.Property property12 = new org.jboss.dmr.Property("", modelNode11);
        org.jboss.dmr.ModelNode modelNode13 = modelNode1.set(property12);
        org.jboss.dmr.PropertyModelValue propertyModelValue15 = new org.jboss.dmr.PropertyModelValue("EXPRESSION_VALUE", modelNode13, false);
        boolean boolean17 = modelNode13.has(2);
        // The following exception was thrown during execution in test generation
        try {
            java.math.BigDecimal bigDecimal18 = modelNode13.asBigDecimal();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(\"hi!\" => 0.0)" + "'", str5, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test13007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13007");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        boolean boolean8 = bigDecimalModelValue7.asBoolean();
        long long9 = bigDecimalModelValue7.asLong();
        boolean boolean11 = bigDecimalModelValue7.asBoolean(false);
        int int12 = bigDecimalModelValue7.asInt();
        org.jboss.dmr.ValueExpression valueExpression13 = bigDecimalModelValue7.asExpression();
        org.jboss.dmr.ValueExpression valueExpression14 = bigDecimalModelValue7.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue15 = new org.jboss.dmr.ExpressionValue(valueExpression14);
        java.lang.String str16 = expressionValue15.asString();
        org.jboss.dmr.ModelValue modelValue17 = expressionValue15.resolve();
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory19 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream20 = null;
        org.jboss.dmr.Base64.InputStream inputStream22 = new org.jboss.dmr.Base64.InputStream(inputStream20, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream23 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream22);
        org.jboss.dmr.stream.ModelReader modelReader24 = modelStreamFactory19.newModelReader((java.io.InputStream) inputStream23);
        java.io.OutputStream outputStream25 = null;
        org.jboss.dmr.Base64.OutputStream outputStream26 = new org.jboss.dmr.Base64.OutputStream(outputStream25);
        org.jboss.dmr.Base64.OutputStream outputStream27 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream26);
        outputStream26.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter30 = modelStreamFactory19.newModelWriter((java.io.OutputStream) outputStream26);
        org.jboss.dmr.stream.ModelWriter modelWriter31 = modelWriter30.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter33 = modelWriter30.writeLong((long) 'J');
        expressionValue15.write(modelWriter33);
        org.jboss.dmr.ValueExpression valueExpression35 = expressionValue15.asExpression();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(valueExpression13);
        org.junit.Assert.assertNotNull(valueExpression14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1.0" + "'", str16, "1.0");
        org.junit.Assert.assertNotNull(modelValue17);
        org.junit.Assert.assertNotNull(modelStreamFactory19);
        org.junit.Assert.assertNotNull(modelReader24);
        org.junit.Assert.assertNotNull(modelWriter30);
        org.junit.Assert.assertNotNull(modelWriter31);
        org.junit.Assert.assertNotNull(modelWriter33);
        org.junit.Assert.assertNotNull(valueExpression35);
    }

    @Test
    public void test13008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13008");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        java.io.InputStream inputStream16 = null;
        org.jboss.dmr.Base64.InputStream inputStream18 = new org.jboss.dmr.Base64.InputStream(inputStream16, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream19 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream18);
        byte[] byteArray21 = org.jboss.dmr.Base64.decode("true");
        boolean boolean23 = org.jboss.dmr.Base64.encodeToFile(byteArray21, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3R3AANW9yZy5qYm9z\ncy5kbXIuc3RyZWFtLk1vZGVsRXhjZXB0aW9uOiBbKCJoaSEiID0+IDAuMCldcAADaGkhRAAAAAAA\nAAAAeA==");
        int int26 = inputStream18.read(byteArray21, (int) 'l', 0);
        org.jboss.dmr.stream.ModelReader modelReader27 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream18);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory29 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream30 = null;
        org.jboss.dmr.Base64.InputStream inputStream32 = new org.jboss.dmr.Base64.InputStream(inputStream30, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream33 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream32);
        org.jboss.dmr.stream.ModelReader modelReader34 = modelStreamFactory29.newModelReader((java.io.InputStream) inputStream33);
        java.io.OutputStream outputStream35 = null;
        org.jboss.dmr.Base64.OutputStream outputStream36 = new org.jboss.dmr.Base64.OutputStream(outputStream35);
        org.jboss.dmr.Base64.OutputStream outputStream37 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream36);
        outputStream36.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter40 = modelStreamFactory29.newModelWriter((java.io.OutputStream) outputStream36);
        outputStream36.write(2);
        org.jboss.dmr.stream.ModelWriter modelWriter43 = modelStreamFactory1.newModelWriter((java.io.OutputStream) outputStream36);
        // The following exception was thrown during execution in test generation
        try {
            outputStream36.write((int) 'b');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-74, -69, -98]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(modelReader27);
        org.junit.Assert.assertNotNull(modelStreamFactory29);
        org.junit.Assert.assertNotNull(modelReader34);
        org.junit.Assert.assertNotNull(modelWriter40);
        org.junit.Assert.assertNotNull(modelWriter43);
    }

    @Test
    public void test13009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13009");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.removeChild("hi!");
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList5 = objectModelValue0.asList();
        org.jboss.dmr.ModelNode modelNode7 = objectModelValue0.getChild("\"bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }\"");
        java.util.Set<java.lang.String> strSet8 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelValue modelValue9 = objectModelValue0.clone();
        org.jboss.dmr.ExpressionValue expressionValue11 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue13 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean14 = expressionValue11.equals(expressionValue13);
        org.jboss.dmr.ExpressionValue expressionValue16 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue18 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean19 = expressionValue16.equals(expressionValue18);
        boolean boolean20 = expressionValue11.equals(expressionValue18);
        org.jboss.dmr.ValueExpression valueExpression21 = expressionValue18.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue23 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ValueExpression valueExpression24 = expressionValue23.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue26 = new org.jboss.dmr.ExpressionValue("hi!");
        java.lang.String str27 = expressionValue26.toString();
        org.jboss.dmr.ModelNode modelNode29 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode32 = modelNode29.set("hi!", 0.0d);
        org.jboss.dmr.Property property33 = new org.jboss.dmr.Property("", modelNode32);
        boolean boolean34 = expressionValue26.equals((java.lang.Object) property33);
        boolean boolean35 = expressionValue23.equals(expressionValue26);
        boolean boolean36 = expressionValue18.equals((java.lang.Object) boolean35);
        boolean boolean38 = expressionValue18.equals((java.lang.Object) 8);
        org.jboss.dmr.ModelValue modelValue39 = expressionValue18.resolve();
        boolean boolean40 = objectModelValue0.equals((java.lang.Object) expressionValue18);
        java.lang.String str41 = expressionValue18.asString();
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory43 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream44 = null;
        org.jboss.dmr.Base64.InputStream inputStream46 = new org.jboss.dmr.Base64.InputStream(inputStream44, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream47 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream46);
        org.jboss.dmr.stream.ModelReader modelReader48 = modelStreamFactory43.newModelReader((java.io.InputStream) inputStream47);
        java.io.OutputStream outputStream49 = null;
        org.jboss.dmr.Base64.OutputStream outputStream50 = new org.jboss.dmr.Base64.OutputStream(outputStream49);
        org.jboss.dmr.Base64.OutputStream outputStream51 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream50);
        outputStream50.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter54 = modelStreamFactory43.newModelWriter((java.io.OutputStream) outputStream50);
        org.jboss.dmr.stream.ModelWriter modelWriter55 = modelWriter54.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter57 = modelWriter54.writeInt((int) '4');
        org.jboss.dmr.ModelNode modelNode58 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode61 = modelNode58.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList62 = modelNode61.asList();
        org.jboss.dmr.ListModelValue listModelValue63 = new org.jboss.dmr.ListModelValue(modelNodeList62);
        org.jboss.dmr.ModelNode modelNode64 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue63);
        org.jboss.dmr.ModelValue modelValue65 = listModelValue63.resolve();
        int int67 = listModelValue63.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList68 = listModelValue63.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList69 = listModelValue63.asPropertyList();
        java.lang.String str70 = listModelValue63.asString();
        int int71 = listModelValue63.asInt();
        java.lang.String str72 = listModelValue63.asString();
        org.jboss.dmr.ModelType modelType73 = org.jboss.dmr.ModelType.DOUBLE;
        org.jboss.dmr.ModelNode modelNode74 = new org.jboss.dmr.ModelNode(modelType73);
        boolean boolean75 = listModelValue63.equals((java.lang.Object) modelType73);
        org.jboss.dmr.TypeModelValue typeModelValue76 = org.jboss.dmr.TypeModelValue.of(modelType73);
        org.jboss.dmr.TypeModelValue typeModelValue77 = org.jboss.dmr.TypeModelValue.of(modelType73);
        org.jboss.dmr.stream.ModelWriter modelWriter78 = modelWriter54.writeType(modelType73);
        expressionValue18.write(modelWriter78);
        java.io.DataOutput dataOutput80 = null;
        // The following exception was thrown during execution in test generation
        try {
            expressionValue18.writeExternal(dataOutput80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNodeList5);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(modelValue9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(valueExpression21);
        org.junit.Assert.assertNotNull(valueExpression24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "expression \"hi!\"" + "'", str27, "expression \"hi!\"");
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(modelValue39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(modelStreamFactory43);
        org.junit.Assert.assertNotNull(modelReader48);
        org.junit.Assert.assertNotNull(modelWriter54);
        org.junit.Assert.assertNotNull(modelWriter55);
        org.junit.Assert.assertNotNull(modelWriter57);
        org.junit.Assert.assertNotNull(modelNode61);
        org.junit.Assert.assertNotNull(modelNodeList62);
        org.junit.Assert.assertNotNull(modelValue65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(propertyList68);
        org.junit.Assert.assertNotNull(propertyList69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str70, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str72, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + modelType73 + "' != '" + org.jboss.dmr.ModelType.DOUBLE + "'", modelType73.equals(org.jboss.dmr.ModelType.DOUBLE));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(typeModelValue76);
        org.junit.Assert.assertNotNull(typeModelValue77);
        org.junit.Assert.assertNotNull(modelWriter78);
    }

    @Test
    public void test13010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13010");
        java.lang.String str1 = org.jboss.dmr.ValueExpression.quote("AAAAAAAAAAE=");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "AAAAAAAAAAE=" + "'", str1, "AAAAAAAAAAE=");
    }

    @Test
    public void test13011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13011");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        double double6 = bigIntegerModelValue4.asDouble((double) 'b');
        double double8 = bigIntegerModelValue4.asDouble((double) 'J');
        java.math.BigDecimal bigDecimal9 = bigIntegerModelValue4.asBigDecimal();
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(bigDecimal9);
    }

    @Test
    public void test13012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13012");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        int int9 = bigDecimalModelValue7.asInt(0);
        java.math.BigInteger bigInteger10 = bigDecimalModelValue7.asBigInteger();
        boolean boolean11 = bigDecimalModelValue7.asBoolean();
        org.jboss.dmr.LongModelValue longModelValue13 = new org.jboss.dmr.LongModelValue(1L);
        int int15 = longModelValue13.asInt((int) (byte) 0);
        org.jboss.dmr.LongModelValue longModelValue17 = new org.jboss.dmr.LongModelValue((-1L));
        long long19 = longModelValue17.asLong((long) (byte) -1);
        double double21 = longModelValue17.asDouble((double) 10.0f);
        boolean boolean22 = longModelValue13.equals(longModelValue17);
        byte[] byteArray23 = longModelValue17.asBytes();
        org.jboss.dmr.ModelNode modelNode24 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) longModelValue17);
        boolean boolean25 = bigDecimalModelValue7.equals((java.lang.Object) modelNode24);
        org.jboss.dmr.ValueExpression valueExpression26 = bigDecimalModelValue7.asExpression();
        boolean boolean27 = bigDecimalModelValue7.asBoolean();
        int int29 = bigDecimalModelValue7.asInt((int) ' ');
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(bigInteger10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1.0d) + "'", double21 == (-1.0d));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, -1, -1, -1, -1, -1, -1, -1]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(valueExpression26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
    }

    @Test
    public void test13013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13013");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str2 = intModelValue1.asString();
        double double4 = intModelValue1.asDouble((double) 2);
        java.math.BigInteger bigInteger5 = intModelValue1.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue6 = new org.jboss.dmr.BigIntegerModelValue(bigInteger5);
        int int7 = bigIntegerModelValue6.asInt();
        boolean boolean8 = bigIntegerModelValue6.asBoolean();
        java.io.PrintWriter printWriter9 = null;
        // The following exception was thrown during execution in test generation
        try {
            bigIntegerModelValue6.format(printWriter9, (int) (byte) 0, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "32" + "'", str2, "32");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 32.0d + "'", double4 == 32.0d);
        org.junit.Assert.assertNotNull(bigInteger5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 32 + "'", int7 == 32);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test13014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13014");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.setExpression("hi!", "hi!");
        org.jboss.dmr.ModelNode modelNode5 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode8 = modelNode5.set("hi!", 0.0d);
        org.jboss.dmr.Property property9 = new org.jboss.dmr.Property("", modelNode8);
        boolean boolean11 = modelNode8.equals((java.lang.Object) 100L);
        boolean boolean12 = modelNode0.equals(modelNode8);
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode17 = modelNode14.set("hi!", 0.0d);
        org.jboss.dmr.Property property18 = new org.jboss.dmr.Property("", modelNode17);
        java.lang.String[] strArray19 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode20 = modelNode17.get(strArray19);
        org.jboss.dmr.ModelNode modelNode21 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int22 = modelNode21.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode23 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode26 = modelNode23.setExpression("hi!", "hi!");
        java.lang.String str27 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode23);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList28 = modelNode23.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode29 = modelNode21.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList28);
        org.jboss.dmr.ModelNode modelNode30 = modelNode20.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList28);
        org.jboss.dmr.ModelNode modelNode31 = modelNode8.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList28);
        org.jboss.dmr.ModelNode modelNode33 = modelNode8.add("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4");
        org.jboss.dmr.ModelNode modelNode35 = modelNode8.add(false);
        org.jboss.dmr.StringModelValue stringModelValue38 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.StringModelValue stringModelValue40 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        boolean boolean41 = stringModelValue38.equals(stringModelValue40);
        byte[] byteArray42 = stringModelValue40.asBytes();
        org.jboss.dmr.ModelNode modelNode43 = new org.jboss.dmr.ModelNode(byteArray42);
        org.jboss.dmr.ModelNode modelNode44 = modelNode8.add("H4sIAAAAAAAAAFvzloG1tIiBKdppzWfxH2wcIQ+YGBgqChgYGBgZASVtzhAcAAAA", byteArray42);
        org.jboss.dmr.LongModelValue longModelValue46 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str47 = longModelValue46.asString();
        org.jboss.dmr.ValueExpression valueExpression48 = longModelValue46.asExpression();
        long long49 = valueExpression48.resolveLong();
        java.math.BigDecimal bigDecimal50 = valueExpression48.resolveBigDecimal();
        org.jboss.dmr.ModelNode modelNode51 = modelNode44.add(valueExpression48);
        boolean boolean52 = modelNode44.asBoolean();
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str27, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList28);
        org.junit.Assert.assertNotNull(modelNode29);
        org.junit.Assert.assertNotNull(modelNode30);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(modelNode33);
        org.junit.Assert.assertNotNull(modelNode35);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[40, 34, 34, 32, 61, 62, 32, 40, 34, 104, 105, 33, 34, 32, 61, 62, 32, 48, 46, 48, 41, 41]");
        org.junit.Assert.assertNotNull(modelNode44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1" + "'", str47, "1");
        org.junit.Assert.assertNotNull(valueExpression48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 1L + "'", long49 == 1L);
        org.junit.Assert.assertNotNull(bigDecimal50);
        org.junit.Assert.assertNotNull(modelNode51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test13015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13015");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue5);
        org.jboss.dmr.ModelValue modelValue7 = listModelValue5.resolve();
        int int9 = listModelValue5.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList10 = listModelValue5.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList11 = listModelValue5.asPropertyList();
        org.jboss.dmr.ModelNode modelNode13 = listModelValue5.getChild((int) (short) 0);
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode18 = modelNode15.set("hi!", 0.0d);
        java.lang.String str19 = modelNode15.toString();
        org.jboss.dmr.ModelNode modelNode20 = modelNode15.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode22 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode25 = modelNode22.set("hi!", 0.0d);
        org.jboss.dmr.Property property26 = new org.jboss.dmr.Property("", modelNode25);
        org.jboss.dmr.ModelNode modelNode27 = modelNode15.set(property26);
        org.jboss.dmr.PropertyModelValue propertyModelValue29 = new org.jboss.dmr.PropertyModelValue("EXPRESSION_VALUE", modelNode27, false);
        org.jboss.dmr.Property property30 = propertyModelValue29.asProperty();
        boolean boolean31 = listModelValue5.equals((java.lang.Object) propertyModelValue29);
        org.jboss.dmr.ModelValue modelValue32 = listModelValue5.copy();
        org.jboss.dmr.ModelValue modelValue33 = listModelValue5.copy();
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertNotNull(modelValue7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(propertyList10);
        org.junit.Assert.assertNotNull(propertyList11);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(\"hi!\" => 0.0)" + "'", str19, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertNotNull(property30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(modelValue32);
        org.junit.Assert.assertNotNull(modelValue33);
    }

    @Test
    public void test13016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13016");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.setExpression("hi!", "hi!");
        java.lang.String str4 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode0);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList5 = modelNode0.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode7 = modelNode0.set((double) 0);
        org.jboss.dmr.ModelNode modelNode8 = modelNode0.clear();
        int int10 = modelNode8.asInt(112);
        org.jboss.dmr.ModelNode modelNode11 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode14 = modelNode11.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList15 = modelNode14.asList();
        org.jboss.dmr.ModelNode modelNode18 = modelNode14.setExpression("hi!", "(\"hi!\" => 0.0)");
        java.util.Set<java.lang.String> strSet19 = modelNode18.keys();
        boolean boolean20 = modelNode8.equals(modelNode18);
        org.jboss.dmr.ModelNode modelNode22 = modelNode8.add((long) (short) -1);
        org.jboss.dmr.ObjectModelValue objectModelValue23 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode24 = objectModelValue23.asObject();
        java.util.Set<java.lang.String> strSet25 = objectModelValue23.getKeys();
        org.jboss.dmr.ModelNode modelNode27 = objectModelValue23.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        boolean boolean28 = objectModelValue23.asBoolean();
        org.jboss.dmr.ModelNode modelNode30 = objectModelValue23.getChild("1L");
        org.jboss.dmr.ObjectModelValue objectModelValue31 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode32 = objectModelValue31.asObject();
        java.util.Set<java.lang.String> strSet33 = objectModelValue31.getKeys();
        org.jboss.dmr.ModelNode modelNode35 = objectModelValue31.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        boolean boolean36 = objectModelValue31.asBoolean();
        int int38 = objectModelValue31.asInt((int) 'b');
        int int40 = objectModelValue31.asInt((int) '#');
        boolean boolean41 = objectModelValue23.equals(objectModelValue31);
        int int42 = objectModelValue31.asInt();
        java.util.Set<java.lang.String> strSet43 = objectModelValue31.getKeys();
        long long45 = objectModelValue31.asLong((long) 0);
        org.jboss.dmr.ModelType modelType46 = org.jboss.dmr.ModelType.DOUBLE;
        org.jboss.dmr.ModelNode modelNode47 = new org.jboss.dmr.ModelNode(modelType46);
        org.jboss.dmr.LongModelValue longModelValue50 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str51 = longModelValue50.asString();
        byte[] byteArray52 = longModelValue50.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue53 = new org.jboss.dmr.BytesModelValue(byteArray52);
        java.lang.String str54 = bytesModelValue53.asString();
        int int55 = bytesModelValue53.asInt();
        long long57 = bytesModelValue53.asLong((long) (short) 1);
        long long58 = bytesModelValue53.asLong();
        java.math.BigDecimal bigDecimal59 = bytesModelValue53.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode60 = modelNode47.set("32", bigDecimal59);
        boolean boolean61 = objectModelValue31.equals((java.lang.Object) bigDecimal59);
        org.jboss.dmr.ModelNode modelNode62 = modelNode22.set(bigDecimal59);
        org.jboss.dmr.LongModelValue longModelValue64 = new org.jboss.dmr.LongModelValue((-1L));
        long long66 = longModelValue64.asLong((long) (byte) -1);
        java.math.BigDecimal bigDecimal67 = longModelValue64.asBigDecimal();
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory69 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream70 = null;
        org.jboss.dmr.Base64.InputStream inputStream72 = new org.jboss.dmr.Base64.InputStream(inputStream70, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream73 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream72);
        org.jboss.dmr.stream.ModelReader modelReader74 = modelStreamFactory69.newModelReader((java.io.InputStream) inputStream73);
        java.io.OutputStream outputStream75 = null;
        org.jboss.dmr.Base64.OutputStream outputStream76 = new org.jboss.dmr.Base64.OutputStream(outputStream75);
        org.jboss.dmr.Base64.OutputStream outputStream77 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream76);
        outputStream76.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter80 = modelStreamFactory69.newModelWriter((java.io.OutputStream) outputStream76);
        org.jboss.dmr.stream.ModelWriter modelWriter81 = modelWriter80.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter83 = modelWriter81.writeInt((int) (byte) 10);
        longModelValue64.write(modelWriter81);
        modelNode22.write(modelWriter81);
        org.jboss.dmr.stream.ModelWriter modelWriter86 = modelWriter81.writeListStart();
        org.jboss.dmr.ModelNode modelNode87 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode88 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode91 = modelNode88.set("hi!", 0.0d);
        java.lang.String str92 = modelNode88.toString();
        org.jboss.dmr.ModelNode modelNode93 = modelNode88.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode95 = modelNode88.set(100);
        org.jboss.dmr.ModelNode modelNode96 = modelNode87.add(modelNode88);
        byte[] byteArray97 = modelNode88.asBytesOrNull();
        java.lang.String str98 = org.jboss.dmr.Base64.encodeBytes(byteArray97);
        org.jboss.dmr.stream.ModelWriter modelWriter99 = modelWriter86.writeBytes(byteArray97);
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str4, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList5);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 112 + "'", int10 == 112);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(modelNodeList15);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(modelNode22);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNull(modelNode27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(modelNode30);
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNull(modelNode35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertTrue("'" + modelType46 + "' != '" + org.jboss.dmr.ModelType.DOUBLE + "'", modelType46.equals(org.jboss.dmr.ModelType.DOUBLE));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1" + "'", str51, "1");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str54, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 1L + "'", long57 == 1L);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 1L + "'", long58 == 1L);
        org.junit.Assert.assertNotNull(bigDecimal59);
        org.junit.Assert.assertNotNull(modelNode60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(modelNode62);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-1L) + "'", long66 == (-1L));
        org.junit.Assert.assertNotNull(bigDecimal67);
        org.junit.Assert.assertNotNull(modelStreamFactory69);
        org.junit.Assert.assertNotNull(modelReader74);
        org.junit.Assert.assertNotNull(modelWriter80);
        org.junit.Assert.assertNotNull(modelWriter81);
        org.junit.Assert.assertNotNull(modelWriter83);
        org.junit.Assert.assertNotNull(modelWriter86);
        org.junit.Assert.assertNotNull(modelNode91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "(\"hi!\" => 0.0)" + "'", str92, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode93);
        org.junit.Assert.assertNotNull(modelNode95);
        org.junit.Assert.assertNotNull(modelNode96);
        org.junit.Assert.assertNotNull(byteArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray97), "[0, 0, 0, 100]");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "AAAAZA==" + "'", str98, "AAAAZA==");
        org.junit.Assert.assertNotNull(modelWriter99);
    }

    @Test
    public void test13017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13017");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(modelType0);
        // The following exception was thrown during execution in test generation
        try {
            java.math.BigDecimal bigDecimal2 = modelNode1.asBigDecimalOrNull();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType0.equals(org.jboss.dmr.ModelType.INT));
    }

    @Test
    public void test13018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13018");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(true);
        org.jboss.dmr.ModelNode modelNode2 = modelNode1.resolve();
        java.lang.String str3 = modelNode1.asString();
        boolean boolean4 = modelNode1.isProtected();
        org.junit.Assert.assertNotNull(modelNode2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "true" + "'", str3, "true");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test13019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13019");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        double double9 = bigDecimalModelValue7.asDouble((double) 'p');
        int int10 = bigDecimalModelValue7.asInt();
        int int12 = bigDecimalModelValue7.asInt(3);
        org.jboss.dmr.DoubleModelValue doubleModelValue14 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        int int16 = doubleModelValue14.asInt((int) 'l');
        java.math.BigDecimal bigDecimal17 = doubleModelValue14.asBigDecimal();
        byte[] byteArray18 = doubleModelValue14.asBytes();
        double double20 = doubleModelValue14.asDouble(1.0d);
        java.math.BigInteger bigInteger21 = doubleModelValue14.asBigInteger();
        org.jboss.dmr.DoubleModelValue doubleModelValue23 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        java.lang.String str24 = doubleModelValue23.asString();
        long long26 = doubleModelValue23.asLong((long) (short) -1);
        double double28 = doubleModelValue23.asDouble(0.0d);
        java.math.BigInteger bigInteger29 = doubleModelValue23.asBigInteger();
        double double30 = doubleModelValue23.asDouble();
        java.math.BigDecimal bigDecimal31 = doubleModelValue23.asBigDecimal();
        byte[] byteArray32 = doubleModelValue23.asBytes();
        java.lang.String str33 = doubleModelValue23.asString();
        boolean boolean34 = doubleModelValue14.equals(doubleModelValue23);
        org.jboss.dmr.ValueExpression valueExpression35 = doubleModelValue14.asExpression();
        java.lang.String str36 = doubleModelValue14.asString();
        int int38 = doubleModelValue14.asInt((int) (byte) 1);
        boolean boolean39 = bigDecimalModelValue7.equals((java.lang.Object) (byte) 1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertNotNull(bigDecimal17);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 10.0d + "'", double20 == 10.0d);
        org.junit.Assert.assertNotNull(bigInteger21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "10.0" + "'", str24, "10.0");
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 10L + "'", long26 == 10L);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertNotNull(bigInteger29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertNotNull(bigDecimal31);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "10.0" + "'", str33, "10.0");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(valueExpression35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "10.0" + "'", str36, "10.0");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10 + "'", int38 == 10);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test13020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13020");
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode(true);
        org.jboss.dmr.ModelNode modelNode3 = modelNode2.resolve();
        java.lang.String str4 = modelNode3.toString();
        org.jboss.dmr.ModelNode modelNode6 = modelNode3.set(32.0d);
        org.jboss.dmr.PropertyModelValue propertyModelValue8 = new org.jboss.dmr.PropertyModelValue("org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]", modelNode3, true);
        org.jboss.dmr.ModelNode modelNode9 = modelNode3.resolve();
        org.jboss.dmr.Validation.validate(modelNode3, "{\n    \"rO0ABXNyABFqYXZhLmxhbmcuSW50ZWdlchLioKT3gYc4AgABSQAFdmFsdWV4cgAQamF2YS5sYW5n\\nLk51bWJlcoaslR0LlOCLAgAAeHAAAABk\" : {\n        \"TYPE_MODEL_VALUE\" : \"LONG\"\n    }\n}");
        java.math.BigDecimal bigDecimal12 = modelNode3.asBigDecimal();
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "true" + "'", str4, "true");
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(bigDecimal12);
    }

    @Test
    public void test13021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13021");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        java.io.InputStream inputStream16 = null;
        org.jboss.dmr.Base64.InputStream inputStream18 = new org.jboss.dmr.Base64.InputStream(inputStream16, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream19 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream18);
        org.jboss.dmr.Base64.InputStream inputStream20 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream19);
        org.jboss.dmr.stream.ModelReader modelReader21 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream20);
        boolean boolean22 = modelReader21.isBytes();
        boolean boolean23 = modelReader21.isListStart();
        boolean boolean24 = modelReader21.isBoolean();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertNotNull(modelReader21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test13022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13022");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        java.lang.String str6 = modelNode3.asString("true");
        org.jboss.dmr.BooleanModelValue booleanModelValue9 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long10 = booleanModelValue9.asLong();
        org.jboss.dmr.ValueExpression valueExpression11 = booleanModelValue9.asExpression();
        java.lang.String str12 = valueExpression11.toString();
        org.jboss.dmr.ExpressionValue expressionValue14 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ValueExpression valueExpression15 = expressionValue14.asExpression();
        boolean boolean16 = valueExpression11.equals(valueExpression15);
        java.lang.String str17 = valueExpression15.resolveString();
        org.jboss.dmr.ModelNode modelNode18 = modelNode3.set("Expression \"1\"", valueExpression15);
        org.jboss.dmr.ModelNode modelNode19 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode22 = modelNode19.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList23 = modelNode22.asList();
        org.jboss.dmr.ModelNode modelNode26 = modelNode22.set("Expression \"1\"", (int) (byte) 1);
        org.jboss.dmr.ModelType modelType27 = modelNode22.getType();
        org.jboss.dmr.ModelNode modelNode28 = modelNode18.set(modelType27);
        java.lang.String str29 = modelNode28.asString();
        boolean boolean31 = modelNode28.hasDefined(52);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory33 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream34 = null;
        org.jboss.dmr.Base64.InputStream inputStream36 = new org.jboss.dmr.Base64.InputStream(inputStream34, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream37 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream36);
        org.jboss.dmr.stream.ModelReader modelReader38 = modelStreamFactory33.newModelReader((java.io.InputStream) inputStream37);
        java.io.OutputStream outputStream39 = null;
        org.jboss.dmr.Base64.OutputStream outputStream40 = new org.jboss.dmr.Base64.OutputStream(outputStream39);
        org.jboss.dmr.Base64.OutputStream outputStream41 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream40);
        outputStream40.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter44 = modelStreamFactory33.newModelWriter((java.io.OutputStream) outputStream40);
        org.jboss.dmr.stream.ModelWriter modelWriter45 = modelWriter44.writeListStart();
        org.jboss.dmr.IntModelValue intModelValue47 = new org.jboss.dmr.IntModelValue(10);
        byte[] byteArray48 = intModelValue47.asBytes();
        int int50 = intModelValue47.asInt(0);
        java.math.BigInteger bigInteger51 = intModelValue47.asBigInteger();
        org.jboss.dmr.stream.ModelWriter modelWriter52 = modelWriter45.writeBigInteger(bigInteger51);
        byte[] byteArray53 = new byte[] {};
        java.lang.String str55 = org.jboss.dmr.Base64.encodeBytes(byteArray53, (int) '#');
        org.jboss.dmr.stream.ModelWriter modelWriter56 = modelWriter45.writeBytes(byteArray53);
        modelNode28.write(modelWriter45);
        org.jboss.dmr.stream.ModelWriter modelWriter59 = modelWriter45.writeString("rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51\nbWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAIw==");
        org.jboss.dmr.stream.ModelWriter modelWriter60 = modelWriter45.writeListStart();
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "(\"hi!\" => 0.0)" + "'", str6, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(booleanModelValue9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertNotNull(valueExpression11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Expression \"true\"" + "'", str12, "Expression \"true\"");
        org.junit.Assert.assertNotNull(valueExpression15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertNotNull(modelNode22);
        org.junit.Assert.assertNotNull(modelNodeList23);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertTrue("'" + modelType27 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType27.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertNotNull(modelNode28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PROPERTY" + "'", str29, "PROPERTY");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(modelStreamFactory33);
        org.junit.Assert.assertNotNull(modelReader38);
        org.junit.Assert.assertNotNull(modelWriter44);
        org.junit.Assert.assertNotNull(modelWriter45);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10 + "'", int50 == 10);
        org.junit.Assert.assertNotNull(bigInteger51);
        org.junit.Assert.assertNotNull(modelWriter52);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "H4sIAAAAAAAAAAMAAAAAAAAAAAA=" + "'", str55, "H4sIAAAAAAAAAAMAAAAAAAAAAAA=");
        org.junit.Assert.assertNotNull(modelWriter56);
        org.junit.Assert.assertNotNull(modelWriter59);
        org.junit.Assert.assertNotNull(modelWriter60);
    }

    @Test
    public void test13023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13023");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        org.jboss.dmr.ModelValue modelValue2 = objectModelValue0.copy();
        int int4 = objectModelValue0.asInt((int) (short) 100);
        org.jboss.dmr.ModelValue modelValue5 = objectModelValue0.protect();
        long long6 = objectModelValue0.asLong();
        java.util.List<org.jboss.dmr.Property> propertyList7 = objectModelValue0.asPropertyList();
        org.jboss.dmr.ModelNode modelNode9 = objectModelValue0.removeChild("H4sIAAAAAAAAAFvzloG1uIhBPL8oXS8rKb+4WC8lt0jPNz8lNccPSMjoLnSZu7jPnoeBoaKg3L6A\nwRRVYXFJUWpiLkS9a0VyakFJZn6elUK0hlJGpqKSgq2dgoGegWZsKgNLSVFpagUAnFgggG4AAAA=");
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(modelValue5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(propertyList7);
        org.junit.Assert.assertNull(modelNode9);
    }

    @Test
    public void test13024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13024");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str2 = longModelValue1.asString();
        byte[] byteArray3 = longModelValue1.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue4 = new org.jboss.dmr.BytesModelValue(byteArray3);
        java.lang.String str5 = bytesModelValue4.asString();
        int int6 = bytesModelValue4.asInt();
        int int8 = bytesModelValue4.asInt((int) 'a');
        double double10 = bytesModelValue4.asDouble((double) '#');
        long long12 = bytesModelValue4.asLong((long) 'p');
        int int13 = bytesModelValue4.asInt();
        org.jboss.dmr.IntModelValue intModelValue15 = new org.jboss.dmr.IntModelValue((int) ' ');
        org.jboss.dmr.ModelNode modelNode16 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode19 = modelNode16.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList20 = modelNode19.asList();
        org.jboss.dmr.ListModelValue listModelValue21 = new org.jboss.dmr.ListModelValue(modelNodeList20);
        org.jboss.dmr.ModelNode modelNode22 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue21);
        org.jboss.dmr.ModelValue modelValue23 = listModelValue21.resolve();
        int int25 = listModelValue21.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList26 = listModelValue21.asPropertyList();
        boolean boolean27 = intModelValue15.equals((java.lang.Object) listModelValue21);
        double double28 = intModelValue15.asDouble();
        java.lang.String str29 = intModelValue15.asString();
        boolean boolean30 = bytesModelValue4.equals((java.lang.Object) intModelValue15);
        int int32 = bytesModelValue4.asInt((int) (byte) 0);
        java.io.DataOutput dataOutput33 = null;
        // The following exception was thrown during execution in test generation
        try {
            bytesModelValue4.writeExternal(dataOutput33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1" + "'", str2, "1");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str5, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 4.9E-324d + "'", double10 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(modelNodeList20);
        org.junit.Assert.assertNotNull(modelValue23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(propertyList26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 32.0d + "'", double28 == 32.0d);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "32" + "'", str29, "32");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
    }

    @Test
    public void test13025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13025");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isBigInteger();
        boolean boolean17 = modelReader15.isLong();
        boolean boolean18 = modelReader15.isBigDecimal();
        boolean boolean19 = modelReader15.isUndefined();
        boolean boolean20 = modelReader15.isUndefined();
        boolean boolean21 = modelReader15.isObjectStart();
        boolean boolean22 = modelReader15.isObjectEnd();
        boolean boolean23 = modelReader15.isBytes();
        boolean boolean24 = modelReader15.isDouble();
        boolean boolean25 = modelReader15.isPropertyEnd();
        boolean boolean26 = modelReader15.isType();
        // The following exception was thrown during execution in test generation
        try {
            modelReader15.close();
            org.junit.Assert.fail("Expected exception of type org.jboss.dmr.stream.ModelException; message: Uncomplete DMR stream have been read");
        } catch (org.jboss.dmr.stream.ModelException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test13026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13026");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isBigInteger();
        boolean boolean17 = modelReader15.isLong();
        boolean boolean18 = modelReader15.isBigDecimal();
        boolean boolean19 = modelReader15.isUndefined();
        boolean boolean20 = modelReader15.isUndefined();
        boolean boolean21 = modelReader15.isListStart();
        boolean boolean22 = modelReader15.isListStart();
        boolean boolean23 = modelReader15.isUndefined();
        boolean boolean24 = modelReader15.isString();
        boolean boolean25 = modelReader15.isBigDecimal();
        boolean boolean26 = modelReader15.isLong();
        boolean boolean27 = modelReader15.isBytes();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test13027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13027");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.lang.String str4 = modelNode0.toString();
        org.jboss.dmr.ModelNode modelNode5 = modelNode0.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode7 = modelNode0.set(100);
        org.jboss.dmr.ModelNode modelNode10 = new org.jboss.dmr.ModelNode((double) 100);
        org.jboss.dmr.ModelNode modelNode12 = modelNode10.set((int) '#');
        org.jboss.dmr.ModelNode modelNode13 = modelNode0.setNoCopy("EXPRESSION_VALUE", modelNode12);
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode17 = modelNode14.set("hi!", 0.0d);
        java.lang.String str18 = modelNode14.toString();
        org.jboss.dmr.ModelNode modelNode19 = modelNode14.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode21 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode24 = modelNode21.set("hi!", 0.0d);
        org.jboss.dmr.Property property25 = new org.jboss.dmr.Property("", modelNode24);
        org.jboss.dmr.ModelNode modelNode26 = modelNode14.set(property25);
        java.lang.String str27 = modelNode26.asString();
        org.jboss.dmr.ModelNode modelNode28 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode31 = modelNode28.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList32 = modelNode31.asList();
        org.jboss.dmr.ListModelValue listModelValue33 = new org.jboss.dmr.ListModelValue(modelNodeList32);
        org.jboss.dmr.ModelNode modelNode34 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue33);
        org.jboss.dmr.ModelValue modelValue35 = listModelValue33.resolve();
        int int37 = listModelValue33.asInt((int) (byte) 100);
        boolean boolean38 = listModelValue33.asBoolean();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList39 = listModelValue33.asList();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList40 = modelNode26.asList(modelNodeList39);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList41 = modelNode13.asList(modelNodeList39);
        org.jboss.dmr.ListModelValue listModelValue42 = new org.jboss.dmr.ListModelValue(modelNodeList41);
        long long43 = listModelValue42.asLong();
        long long45 = listModelValue42.asLong((long) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode47 = listModelValue42.getChild(97);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "(\"hi!\" => 0.0)" + "'", str4, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(\"hi!\" => 0.0)" + "'", str18, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(\"\" => (\"hi!\" => 0.0))" + "'", str27, "(\"\" => (\"hi!\" => 0.0))");
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(modelNodeList32);
        org.junit.Assert.assertNotNull(modelValue35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(modelNodeList39);
        org.junit.Assert.assertNotNull(modelNodeList40);
        org.junit.Assert.assertNotNull(modelNodeList41);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
    }

    @Test
    public void test13028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13028");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) 2L);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelType modelType2 = modelNode1.asType();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13029");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.PROPERTY;
        char char1 = modelType0.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue2 = org.jboss.dmr.TypeModelValue.of(modelType0);
        org.jboss.dmr.ModelType modelType3 = org.jboss.dmr.ModelType.PROPERTY;
        char char4 = modelType3.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue5 = org.jboss.dmr.TypeModelValue.of(modelType3);
        boolean boolean6 = typeModelValue2.equals(typeModelValue5);
        java.lang.String str7 = typeModelValue5.asString();
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = modelNode11.asList();
        org.jboss.dmr.ListModelValue listModelValue13 = new org.jboss.dmr.ListModelValue(modelNodeList12);
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue13);
        org.jboss.dmr.ModelValue modelValue15 = listModelValue13.resolve();
        int int17 = listModelValue13.asInt((int) (byte) 100);
        boolean boolean18 = listModelValue13.asBoolean();
        org.jboss.dmr.ModelNode[] modelNodeArray19 = org.jboss.dmr.ListModelValue.NO_NODES;
        boolean boolean20 = listModelValue13.equals((java.lang.Object) modelNodeArray19);
        boolean boolean21 = typeModelValue5.equals((java.lang.Object) listModelValue13);
        org.jboss.dmr.ValueExpression valueExpression22 = typeModelValue5.asExpression();
        org.jboss.dmr.BooleanModelValue booleanModelValue23 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double24 = booleanModelValue23.asDouble();
        org.jboss.dmr.ModelValue modelValue25 = booleanModelValue23.copy();
        java.math.BigInteger bigInteger26 = booleanModelValue23.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue27 = new org.jboss.dmr.BigIntegerModelValue(bigInteger26);
        int int29 = bigIntegerModelValue27.asInt((int) (short) 1);
        org.jboss.dmr.BooleanModelValue booleanModelValue30 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double31 = booleanModelValue30.asDouble();
        org.jboss.dmr.ModelValue modelValue32 = booleanModelValue30.copy();
        java.math.BigInteger bigInteger33 = booleanModelValue30.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue34 = new org.jboss.dmr.BigIntegerModelValue(bigInteger33);
        java.lang.String str35 = bigIntegerModelValue34.asString();
        java.math.BigInteger bigInteger36 = bigIntegerModelValue34.asBigInteger();
        boolean boolean37 = bigIntegerModelValue27.equals(bigIntegerModelValue34);
        double double39 = bigIntegerModelValue27.asDouble(0.0d);
        double double41 = bigIntegerModelValue27.asDouble((double) 100.0f);
        java.math.BigInteger bigInteger42 = bigIntegerModelValue27.asBigInteger();
        org.jboss.dmr.ValueExpression valueExpression43 = bigIntegerModelValue27.asExpression();
        java.lang.String str44 = valueExpression43.toString();
        org.jboss.dmr.BooleanModelValue booleanModelValue45 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double46 = booleanModelValue45.asDouble();
        org.jboss.dmr.ModelValue modelValue47 = booleanModelValue45.copy();
        java.math.BigInteger bigInteger48 = booleanModelValue45.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue49 = new org.jboss.dmr.BigIntegerModelValue(bigInteger48);
        java.lang.String str50 = bigIntegerModelValue49.asString();
        long long52 = bigIntegerModelValue49.asLong(32L);
        double double53 = bigIntegerModelValue49.asDouble();
        long long55 = bigIntegerModelValue49.asLong((long) '4');
        org.jboss.dmr.ValueExpression valueExpression56 = bigIntegerModelValue49.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue57 = new org.jboss.dmr.ExpressionValue(valueExpression56);
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver58 = new org.jboss.dmr.ValueExpressionResolver();
        java.lang.String str60 = valueExpressionResolver58.resolvePart("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        java.math.BigDecimal bigDecimal61 = valueExpression56.resolveBigDecimal(valueExpressionResolver58);
        org.jboss.dmr.BooleanModelValue booleanModelValue63 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray64 = booleanModelValue63.asBytes();
        org.jboss.dmr.ValueExpression valueExpression65 = booleanModelValue63.asExpression();
        java.lang.String str66 = valueExpression65.resolveString();
        java.lang.String str67 = valueExpressionResolver58.resolve(valueExpression65);
        long long68 = valueExpression43.resolveLong(valueExpressionResolver58);
        // The following exception was thrown during execution in test generation
        try {
            java.math.BigDecimal bigDecimal69 = valueExpression22.resolveBigDecimal(valueExpressionResolver58);
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: null");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType0.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char1 + "' != '" + 'p' + "'", char1 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue2);
        org.junit.Assert.assertTrue("'" + modelType3 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType3.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char4 + "' != '" + 'p' + "'", char4 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PROPERTY" + "'", str7, "PROPERTY");
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNodeList12);
        org.junit.Assert.assertNotNull(modelValue15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(modelNodeArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(valueExpression22);
        org.junit.Assert.assertNotNull(booleanModelValue23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue25);
        org.junit.Assert.assertNotNull(bigInteger26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(booleanModelValue30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue32);
        org.junit.Assert.assertNotNull(bigInteger33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1" + "'", str35, "1");
        org.junit.Assert.assertNotNull(bigInteger36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(bigInteger42);
        org.junit.Assert.assertNotNull(valueExpression43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Expression \"1\"" + "'", str44, "Expression \"1\"");
        org.junit.Assert.assertNotNull(booleanModelValue45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue47);
        org.junit.Assert.assertNotNull(bigInteger48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1" + "'", str50, "1");
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1L + "'", long52 == 1L);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 1L + "'", long55 == 1L);
        org.junit.Assert.assertNotNull(valueExpression56);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(bigDecimal61);
        org.junit.Assert.assertNotNull(booleanModelValue63);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1]");
        org.junit.Assert.assertNotNull(valueExpression65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "true" + "'", str66, "true");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "true" + "'", str67, "true");
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 1L + "'", long68 == 1L);
    }

    @Test
    public void test13030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13030");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.StringModelValue stringModelValue3 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        boolean boolean4 = stringModelValue1.equals(stringModelValue3);
        byte[] byteArray5 = stringModelValue3.asBytes();
        boolean boolean7 = org.jboss.dmr.Base64.encodeToFile(byteArray5, "org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        boolean boolean9 = org.jboss.dmr.Base64.encodeToFile(byteArray5, "\"TYPE_MODEL_VALUE\"");
        org.jboss.dmr.BytesModelValue bytesModelValue10 = new org.jboss.dmr.BytesModelValue(byteArray5);
        org.jboss.dmr.LongModelValue longModelValue12 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str13 = longModelValue12.asString();
        byte[] byteArray14 = longModelValue12.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue15 = new org.jboss.dmr.BytesModelValue(byteArray14);
        java.lang.String str16 = bytesModelValue15.asString();
        int int17 = bytesModelValue15.asInt();
        int int18 = bytesModelValue15.asInt();
        org.jboss.dmr.LongModelValue longModelValue20 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str21 = longModelValue20.asString();
        byte[] byteArray22 = longModelValue20.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue23 = new org.jboss.dmr.BytesModelValue(byteArray22);
        double double24 = bytesModelValue23.asDouble();
        boolean boolean25 = bytesModelValue15.equals(bytesModelValue23);
        org.jboss.dmr.LongModelValue longModelValue27 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str28 = longModelValue27.asString();
        byte[] byteArray29 = longModelValue27.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue30 = new org.jboss.dmr.BytesModelValue(byteArray29);
        boolean boolean31 = bytesModelValue23.equals(bytesModelValue30);
        long long32 = bytesModelValue23.asLong();
        int int34 = bytesModelValue23.asInt(8);
        long long35 = bytesModelValue23.asLong();
        boolean boolean36 = bytesModelValue10.equals(bytesModelValue23);
        long long38 = bytesModelValue23.asLong((long) 52);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[40, 34, 34, 32, 61, 62, 32, 40, 34, 104, 105, 33, 34, 32, 61, 62, 32, 48, 46, 48, 41, 41]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1" + "'", str13, "1");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str16, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1" + "'", str21, "1");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4.9E-324d + "'", double24 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1" + "'", str28, "1");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
    }

    @Test
    public void test13031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13031");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue((long) '4');
        java.math.BigDecimal bigDecimal2 = longModelValue1.asBigDecimal();
        int int3 = longModelValue1.asInt();
        org.jboss.dmr.ValueExpression valueExpression4 = longModelValue1.asExpression();
        double double5 = longModelValue1.asDouble();
        org.jboss.dmr.LongModelValue longModelValue7 = new org.jboss.dmr.LongModelValue(1L);
        long long9 = longModelValue7.asLong((long) (short) 0);
        java.lang.String str10 = longModelValue7.asString();
        byte[] byteArray11 = longModelValue7.asBytes();
        org.jboss.dmr.ModelType modelType12 = longModelValue7.getType();
        long long14 = longModelValue7.asLong(1L);
        boolean boolean15 = longModelValue1.equals(longModelValue7);
        int int16 = longModelValue1.asInt();
        java.io.DataOutput dataOutput17 = null;
        // The following exception was thrown during execution in test generation
        try {
            longModelValue1.writeExternal(dataOutput17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(bigDecimal2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertNotNull(valueExpression4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 52.0d + "'", double5 == 52.0d);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1" + "'", str10, "1");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + modelType12 + "' != '" + org.jboss.dmr.ModelType.LONG + "'", modelType12.equals(org.jboss.dmr.ModelType.LONG));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
    }

    @Test
    public void test13032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13032");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("\"(\\\"\\\" => (\\\"hi!\\\" => 0.0))\"");
        java.lang.String str2 = stringModelValue1.asString();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean3 = stringModelValue1.asBoolean();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"(\\\"\\\" => (\\\"hi!\\\" => 0.0))\"" + "'", str2, "\"(\\\"\\\" => (\\\"hi!\\\" => 0.0))\"");
    }

    @Test
    public void test13033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13033");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode("\"AAAAIA==\"");
    }

    @Test
    public void test13034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13034");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        boolean boolean8 = bigDecimalModelValue7.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression9 = bigDecimalModelValue7.asExpression();
        org.jboss.dmr.IntModelValue intModelValue11 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long13 = intModelValue11.asLong((long) 'b');
        java.lang.String str14 = intModelValue11.asString();
        long long15 = intModelValue11.asLong();
        long long16 = intModelValue11.asLong();
        org.jboss.dmr.ValueExpression valueExpression17 = intModelValue11.asExpression();
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver18 = new org.jboss.dmr.ValueExpressionResolver();
        java.math.BigDecimal bigDecimal19 = valueExpression17.resolveBigDecimal(valueExpressionResolver18);
        boolean boolean20 = valueExpression9.equals(valueExpression17);
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver21 = org.jboss.dmr.ValueExpressionResolver.DEFAULT_RESOLVER;
        org.jboss.dmr.BooleanModelValue booleanModelValue23 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long24 = booleanModelValue23.asLong();
        org.jboss.dmr.ValueExpression valueExpression25 = booleanModelValue23.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue26 = new org.jboss.dmr.ExpressionValue(valueExpression25);
        java.lang.String str27 = valueExpression25.getExpressionString();
        java.lang.String str28 = valueExpressionResolver21.resolve(valueExpression25);
        java.lang.String str29 = valueExpression17.resolveString(valueExpressionResolver21);
        int int30 = valueExpression17.resolveInt();
        org.jboss.dmr.ModelNode modelNode31 = new org.jboss.dmr.ModelNode(valueExpression17);
        org.jboss.dmr.ModelNode modelNode34 = modelNode31.set("AAAAIA==", false);
        org.jboss.dmr.ModelNode modelNode36 = modelNode31.set(false);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(valueExpression9);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 32L + "'", long13 == 32L);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "32" + "'", str14, "32");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 32L + "'", long15 == 32L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(valueExpression17);
        org.junit.Assert.assertNotNull(bigDecimal19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(valueExpressionResolver21);
        org.junit.Assert.assertNotNull(booleanModelValue23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1L + "'", long24 == 1L);
        org.junit.Assert.assertNotNull(valueExpression25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "true" + "'", str27, "true");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "true" + "'", str28, "true");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "32" + "'", str29, "32");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 32 + "'", int30 == 32);
        org.junit.Assert.assertNotNull(modelNode34);
        org.junit.Assert.assertNotNull(modelNode36);
    }

    @Test
    public void test13035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13035");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("35");
        org.jboss.dmr.StringModelValue stringModelValue3 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory5 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream6 = null;
        org.jboss.dmr.Base64.InputStream inputStream8 = new org.jboss.dmr.Base64.InputStream(inputStream6, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream9 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream8);
        org.jboss.dmr.stream.ModelReader modelReader10 = modelStreamFactory5.newModelReader((java.io.InputStream) inputStream9);
        java.io.OutputStream outputStream11 = null;
        org.jboss.dmr.Base64.OutputStream outputStream12 = new org.jboss.dmr.Base64.OutputStream(outputStream11);
        org.jboss.dmr.Base64.OutputStream outputStream13 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream12);
        outputStream12.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter16 = modelStreamFactory5.newModelWriter((java.io.OutputStream) outputStream12);
        org.jboss.dmr.stream.ModelWriter modelWriter17 = modelWriter16.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter19 = modelWriter17.writeInt((int) (byte) 10);
        stringModelValue3.write(modelWriter19);
        org.jboss.dmr.stream.ModelWriter modelWriter22 = modelWriter19.writeBoolean(false);
        org.jboss.dmr.stream.ModelWriter modelWriter23 = modelWriter22.writePropertyStart();
        stringModelValue1.write(modelWriter23);
        org.junit.Assert.assertNotNull(modelStreamFactory5);
        org.junit.Assert.assertNotNull(modelReader10);
        org.junit.Assert.assertNotNull(modelWriter16);
        org.junit.Assert.assertNotNull(modelWriter17);
        org.junit.Assert.assertNotNull(modelWriter19);
        org.junit.Assert.assertNotNull(modelWriter22);
        org.junit.Assert.assertNotNull(modelWriter23);
    }

    @Test
    public void test13036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13036");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode("1L");
        org.jboss.dmr.ModelType modelType3 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode4 = new org.jboss.dmr.ModelNode(modelType3);
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode9 = modelNode6.set("hi!", 0.0d);
        org.jboss.dmr.Property property10 = new org.jboss.dmr.Property("", modelNode9);
        org.jboss.dmr.ModelNode modelNode11 = modelNode4.set(property10);
        org.jboss.dmr.ModelNode modelNode12 = property10.getValue();
        org.jboss.dmr.PropertyModelValue propertyModelValue13 = new org.jboss.dmr.PropertyModelValue(property10);
        org.jboss.dmr.BooleanModelValue booleanModelValue15 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray16 = booleanModelValue15.asBytes();
        boolean boolean17 = propertyModelValue13.equals((java.lang.Object) byteArray16);
        org.jboss.dmr.ModelNode modelNode18 = modelNode1.set("(\"rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4\" => (\"hi!\" => 0.0))", byteArray16);
        java.lang.String str19 = modelNode1.asString();
        org.junit.Assert.assertTrue("'" + modelType3 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType3.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(booleanModelValue15);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[1]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(\"(\\\"rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4\\\" => (\\\"hi!\\\" => 0.0))\" => bytes {\n    0x01\n})" + "'", str19, "(\"(\\\"rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4\\\" => (\\\"hi!\\\" => 0.0))\" => bytes {\n    0x01\n})");
    }

    @Test
    public void test13037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13037");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isLong();
        boolean boolean17 = modelReader15.isBigDecimal();
        boolean boolean18 = modelReader15.isUndefined();
        boolean boolean19 = modelReader15.isBytes();
        boolean boolean20 = modelReader15.isDouble();
        boolean boolean21 = modelReader15.isString();
        // The following exception was thrown during execution in test generation
        try {
            long long22 = modelReader15.getLong();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Current event isn't long");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test13038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13038");
        org.jboss.dmr.ExpressionValue expressionValue1 = new org.jboss.dmr.ExpressionValue("AAAAAAAAAAo=");
        java.lang.String str3 = expressionValue1.toJSONString(true);
        org.jboss.dmr.ExpressionValue expressionValue4 = null;
        boolean boolean5 = expressionValue1.equals(expressionValue4);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{ \"EXPRESSION_VALUE\" : \"AAAAAAAAAAo=\" }" + "'", str3, "{ \"EXPRESSION_VALUE\" : \"AAAAAAAAAAo=\" }");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test13039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13039");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isBigInteger();
        boolean boolean17 = modelReader15.isString();
        boolean boolean18 = modelReader15.isObjectEnd();
        boolean boolean19 = modelReader15.isBoolean();
        boolean boolean20 = modelReader15.isUndefined();
        boolean boolean21 = modelReader15.isBoolean();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test13040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13040");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        double double2 = intModelValue1.asDouble();
        int int3 = intModelValue1.asInt();
        org.jboss.dmr.ValueExpression valueExpression4 = intModelValue1.asExpression();
        org.jboss.dmr.ModelNode modelNode5 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode8 = modelNode5.setExpression("hi!", "hi!");
        org.jboss.dmr.ModelNode modelNode10 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode13 = modelNode10.set("hi!", 0.0d);
        org.jboss.dmr.Property property14 = new org.jboss.dmr.Property("", modelNode13);
        boolean boolean16 = modelNode13.equals((java.lang.Object) 100L);
        boolean boolean17 = modelNode5.equals(modelNode13);
        org.jboss.dmr.ModelNode modelNode19 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode22 = modelNode19.set("hi!", 0.0d);
        org.jboss.dmr.Property property23 = new org.jboss.dmr.Property("", modelNode22);
        java.lang.String[] strArray24 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode25 = modelNode22.get(strArray24);
        org.jboss.dmr.ModelNode modelNode26 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int27 = modelNode26.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode28 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode31 = modelNode28.setExpression("hi!", "hi!");
        java.lang.String str32 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode28);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList33 = modelNode28.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode34 = modelNode26.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList33);
        org.jboss.dmr.ModelNode modelNode35 = modelNode25.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList33);
        org.jboss.dmr.ModelNode modelNode36 = modelNode13.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList33);
        org.jboss.dmr.ModelNode modelNode38 = modelNode13.add("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4");
        org.jboss.dmr.ModelNode modelNode40 = modelNode13.add(false);
        org.jboss.dmr.ModelType modelType41 = org.jboss.dmr.ModelType.PROPERTY;
        char char42 = modelType41.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue43 = org.jboss.dmr.TypeModelValue.of(modelType41);
        org.jboss.dmr.ModelType modelType44 = org.jboss.dmr.ModelType.PROPERTY;
        char char45 = modelType44.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue46 = org.jboss.dmr.TypeModelValue.of(modelType44);
        boolean boolean47 = typeModelValue43.equals(typeModelValue46);
        java.lang.String str48 = typeModelValue46.asString();
        org.jboss.dmr.ValueExpression valueExpression49 = typeModelValue46.asExpression();
        org.jboss.dmr.ModelType modelType50 = typeModelValue46.asType();
        boolean boolean52 = typeModelValue46.asBoolean(false);
        boolean boolean53 = modelNode40.equals((java.lang.Object) typeModelValue46);
        org.jboss.dmr.ExpressionValue expressionValue55 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue57 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean58 = expressionValue55.equals(expressionValue57);
        org.jboss.dmr.ExpressionValue expressionValue60 = new org.jboss.dmr.ExpressionValue("1");
        org.jboss.dmr.ValueExpression valueExpression61 = expressionValue60.asExpression();
        boolean boolean62 = expressionValue55.equals(expressionValue60);
        java.lang.String str63 = expressionValue55.asString();
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory65 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream66 = null;
        org.jboss.dmr.Base64.InputStream inputStream68 = new org.jboss.dmr.Base64.InputStream(inputStream66, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream69 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream68);
        org.jboss.dmr.stream.ModelReader modelReader70 = modelStreamFactory65.newModelReader((java.io.InputStream) inputStream69);
        java.io.OutputStream outputStream71 = null;
        org.jboss.dmr.Base64.OutputStream outputStream72 = new org.jboss.dmr.Base64.OutputStream(outputStream71);
        org.jboss.dmr.Base64.OutputStream outputStream73 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream72);
        outputStream72.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter76 = modelStreamFactory65.newModelWriter((java.io.OutputStream) outputStream72);
        org.jboss.dmr.stream.ModelWriter modelWriter77 = modelWriter76.writeListStart();
        expressionValue55.write(modelWriter77);
        typeModelValue46.write(modelWriter77);
        intModelValue1.write(modelWriter77);
        int int82 = intModelValue1.asInt(8);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 32.0d + "'", double2 == 32.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 32 + "'", int3 == 32);
        org.junit.Assert.assertNotNull(valueExpression4);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(modelNode22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str32, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList33);
        org.junit.Assert.assertNotNull(modelNode34);
        org.junit.Assert.assertNotNull(modelNode35);
        org.junit.Assert.assertNotNull(modelNode36);
        org.junit.Assert.assertNotNull(modelNode38);
        org.junit.Assert.assertNotNull(modelNode40);
        org.junit.Assert.assertTrue("'" + modelType41 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType41.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char42 + "' != '" + 'p' + "'", char42 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue43);
        org.junit.Assert.assertTrue("'" + modelType44 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType44.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char45 + "' != '" + 'p' + "'", char45 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "PROPERTY" + "'", str48, "PROPERTY");
        org.junit.Assert.assertNotNull(valueExpression49);
        org.junit.Assert.assertTrue("'" + modelType50 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType50.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(valueExpression61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertNotNull(modelStreamFactory65);
        org.junit.Assert.assertNotNull(modelReader70);
        org.junit.Assert.assertNotNull(modelWriter76);
        org.junit.Assert.assertNotNull(modelWriter77);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 32 + "'", int82 == 32);
    }

    @Test
    public void test13041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13041");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(modelType0);
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode6 = modelNode3.set("hi!", 0.0d);
        org.jboss.dmr.Property property7 = new org.jboss.dmr.Property("", modelNode6);
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(property7);
        org.jboss.dmr.PropertyModelValue propertyModelValue9 = new org.jboss.dmr.PropertyModelValue(property7);
        org.jboss.dmr.PropertyModelValue propertyModelValue10 = new org.jboss.dmr.PropertyModelValue(property7);
        org.jboss.dmr.ModelValue modelValue11 = propertyModelValue10.protect();
        org.jboss.dmr.ModelValue modelValue12 = propertyModelValue10.protect();
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType0.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelValue11);
        org.junit.Assert.assertNotNull(modelValue12);
    }

    @Test
    public void test13042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13042");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        java.lang.String str6 = listModelValue5.asString();
        long long7 = listModelValue5.asLong();
        java.lang.String str8 = listModelValue5.asString();
        org.jboss.dmr.ModelValue modelValue9 = listModelValue5.copy();
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory11 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream12 = null;
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream(inputStream12, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue16 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str17 = longModelValue16.asString();
        byte[] byteArray18 = longModelValue16.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue19 = new org.jboss.dmr.BytesModelValue(byteArray18);
        int int22 = inputStream14.read(byteArray18, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream24 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream14, (-1));
        org.jboss.dmr.stream.ModelReader modelReader25 = modelStreamFactory11.newModelReader((java.io.InputStream) inputStream24);
        boolean boolean26 = modelReader25.isBigInteger();
        boolean boolean27 = modelReader25.isLong();
        boolean boolean28 = modelReader25.isBigDecimal();
        boolean boolean29 = modelReader25.isUndefined();
        boolean boolean30 = modelReader25.isUndefined();
        boolean boolean31 = modelReader25.isObjectStart();
        boolean boolean32 = modelReader25.isObjectEnd();
        boolean boolean33 = modelReader25.isBytes();
        boolean boolean34 = modelReader25.isDouble();
        boolean boolean35 = modelReader25.isBigInteger();
        boolean boolean36 = modelReader25.isDouble();
        boolean boolean37 = modelReader25.isObjectStart();
        boolean boolean38 = modelReader25.isPropertyStart();
        boolean boolean39 = listModelValue5.equals((java.lang.Object) modelReader25);
        org.jboss.dmr.ModelValue modelValue40 = listModelValue5.copy();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode42 = listModelValue5.insertChild((int) 'J');
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str6, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str8, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertNotNull(modelValue9);
        org.junit.Assert.assertNotNull(modelStreamFactory11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1" + "'", str17, "1");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(modelReader25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(modelValue40);
    }

    @Test
    public void test13043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13043");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        byte[] byteArray2 = stringModelValue1.asBytes();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean4 = stringModelValue1.asBoolean(false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[111, 114, 103, 46, 106, 98, 111, 115, 115, 46, 100, 109, 114, 46, 115, 116, 114, 101, 97, 109, 46, 77, 111, 100, 101, 108, 69, 120, 99, 101, 112, 116, 105, 111, 110, 58, 32, 111, 114, 103, 46, 106, 98, 111, 115, 115, 46, 100, 109, 114, 46, 115, 116, 114, 101, 97, 109, 46, 77, 111, 100, 101, 108, 69, 120, 99, 101, 112, 116, 105, 111, 110, 58, 32, 111, 114, 103, 46, 106, 98, 111, 115, 115, 46, 100, 109, 114, 46, 115, 116, 114, 101, 97, 109, 46, 77, 111, 100, 101, 108, 69, 120, 99, 101, 112, 116, 105, 111, 110, 58, 32, 91, 40, 34, 104, 105, 33, 34, 32, 61, 62, 32, 48, 46, 48, 41, 93]");
    }

    @Test
    public void test13044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13044");
        org.jboss.dmr.ModelNode modelNode1 = org.jboss.dmr.ModelNode.fromString("\"{\n    \\\"EXPRESSION_VALUE\\\" : 35\n}\"");
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("", true);
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(modelNode4);
    }

    @Test
    public void test13045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13045");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        int int3 = longModelValue1.asInt((int) (byte) 0);
        org.jboss.dmr.LongModelValue longModelValue5 = new org.jboss.dmr.LongModelValue((-1L));
        long long7 = longModelValue5.asLong((long) (byte) -1);
        double double9 = longModelValue5.asDouble((double) 10.0f);
        boolean boolean10 = longModelValue1.equals(longModelValue5);
        byte[] byteArray11 = longModelValue5.asBytes();
        org.jboss.dmr.ModelNode modelNode12 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) longModelValue5);
        byte[] byteArray13 = longModelValue5.asBytes();
        org.jboss.dmr.ValueExpression valueExpression14 = longModelValue5.asExpression();
        int int15 = valueExpression14.resolveInt();
        org.jboss.dmr.DoubleModelValue doubleModelValue17 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long18 = doubleModelValue17.asLong();
        long long20 = doubleModelValue17.asLong((long) 32);
        org.jboss.dmr.ModelValue modelValue21 = doubleModelValue17.protect();
        int int22 = doubleModelValue17.asInt();
        boolean boolean23 = valueExpression14.equals((java.lang.Object) doubleModelValue17);
        double double24 = doubleModelValue17.asDouble();
        org.jboss.dmr.ValueExpression valueExpression25 = doubleModelValue17.asExpression();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1.0d) + "'", double9 == (-1.0d));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, -1, -1, -1, -1, -1, -1, -1]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, -1, -1, -1, -1, -1, -1, -1]");
        org.junit.Assert.assertNotNull(valueExpression14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 10L + "'", long18 == 10L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNotNull(modelValue21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 10.0d + "'", double24 == 10.0d);
        org.junit.Assert.assertNotNull(valueExpression25);
    }

    @Test
    public void test13046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13046");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        boolean boolean8 = bigDecimalModelValue7.asBoolean();
        long long9 = bigDecimalModelValue7.asLong();
        org.jboss.dmr.IntModelValue intModelValue11 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str12 = intModelValue11.asString();
        double double14 = intModelValue11.asDouble((double) 2);
        java.math.BigDecimal bigDecimal15 = intModelValue11.asBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue16 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal15);
        boolean boolean17 = bigDecimalModelValue7.equals(bigDecimalModelValue16);
        boolean boolean19 = bigDecimalModelValue7.asBoolean(false);
        int int21 = bigDecimalModelValue7.asInt(3);
        java.lang.String str22 = bigDecimalModelValue7.asString();
        int int23 = bigDecimalModelValue7.asInt();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "32" + "'", str12, "32");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 32.0d + "'", double14 == 32.0d);
        org.junit.Assert.assertNotNull(bigDecimal15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1.0" + "'", str22, "1.0");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
    }

    @Test
    public void test13047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13047");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        int int9 = bigDecimalModelValue7.asInt(0);
        int int10 = bigDecimalModelValue7.asInt();
        int int11 = bigDecimalModelValue7.asInt();
        java.math.BigInteger bigInteger12 = bigDecimalModelValue7.asBigInteger();
        java.math.BigInteger bigInteger13 = bigDecimalModelValue7.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue14 = new org.jboss.dmr.BigIntegerModelValue(bigInteger13);
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) bigIntegerModelValue14);
        long long17 = bigIntegerModelValue14.asLong((long) 3);
        org.jboss.dmr.ValueExpression valueExpression18 = bigIntegerModelValue14.asExpression();
        int int19 = bigIntegerModelValue14.asInt();
        int int21 = bigIntegerModelValue14.asInt((int) (short) 100);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(bigInteger12);
        org.junit.Assert.assertNotNull(bigInteger13);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNotNull(valueExpression18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
    }

    @Test
    public void test13048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13048");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        double double6 = bigIntegerModelValue4.asDouble((double) 'b');
        java.lang.String str7 = bigIntegerModelValue4.asString();
        org.jboss.dmr.ValueExpression valueExpression8 = bigIntegerModelValue4.asExpression();
        java.lang.String str9 = bigIntegerModelValue4.asString();
        org.jboss.dmr.ValueExpression valueExpression10 = bigIntegerModelValue4.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue12 = new org.jboss.dmr.ExpressionValue("1");
        org.jboss.dmr.ValueExpression valueExpression13 = expressionValue12.asExpression();
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver14 = new org.jboss.dmr.ValueExpressionResolver();
        java.lang.String str15 = valueExpression13.resolveString(valueExpressionResolver14);
        java.lang.String str17 = valueExpressionResolver14.resolvePart("\"[97L]\"");
        java.lang.String str18 = valueExpression10.resolveString(valueExpressionResolver14);
        java.io.ObjectOutput objectOutput19 = null;
        // The following exception was thrown during execution in test generation
        try {
            valueExpression10.writeExternal(objectOutput19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(valueExpression8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1" + "'", str9, "1");
        org.junit.Assert.assertNotNull(valueExpression10);
        org.junit.Assert.assertNotNull(valueExpression13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1" + "'", str15, "1");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1" + "'", str18, "1");
    }

    @Test
    public void test13049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13049");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        java.lang.String str2 = stringModelValue1.toString();
        org.jboss.dmr.ModelNode modelNode4 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long5 = modelNode4.asLong();
        org.jboss.dmr.ValueExpression valueExpression6 = modelNode4.asExpression();
        java.math.BigDecimal bigDecimal7 = valueExpression6.resolveBigDecimal();
        java.lang.String str8 = valueExpression6.getExpressionString();
        java.math.BigDecimal bigDecimal9 = valueExpression6.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue10 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal9);
        int int12 = bigDecimalModelValue10.asInt(0);
        boolean boolean13 = bigDecimalModelValue10.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression14 = bigDecimalModelValue10.asExpression();
        boolean boolean15 = stringModelValue1.equals((java.lang.Object) bigDecimalModelValue10);
        double double16 = bigDecimalModelValue10.asDouble();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"(\\\"\\\" => (\\\"hi!\\\" => 0.0))\"" + "'", str2, "\"(\\\"\\\" => (\\\"hi!\\\" => 0.0))\"");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertNotNull(valueExpression6);
        org.junit.Assert.assertNotNull(bigDecimal7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1.0" + "'", str8, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(valueExpression14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
    }

    @Test
    public void test13050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13050");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        boolean boolean5 = objectModelValue0.asBoolean();
        int int7 = objectModelValue0.asInt((int) 'b');
        int int8 = objectModelValue0.asInt();
        java.lang.String str9 = objectModelValue0.asString();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode11 = objectModelValue0.requireChild("{}");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child '{}' exists");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(modelNode4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
    }

    @Test
    public void test13051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13051");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        int int6 = bigIntegerModelValue4.asInt((int) (short) 1);
        org.jboss.dmr.BooleanModelValue booleanModelValue7 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double8 = booleanModelValue7.asDouble();
        org.jboss.dmr.ModelValue modelValue9 = booleanModelValue7.copy();
        java.math.BigInteger bigInteger10 = booleanModelValue7.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue11 = new org.jboss.dmr.BigIntegerModelValue(bigInteger10);
        java.lang.String str12 = bigIntegerModelValue11.asString();
        java.math.BigInteger bigInteger13 = bigIntegerModelValue11.asBigInteger();
        boolean boolean14 = bigIntegerModelValue4.equals(bigIntegerModelValue11);
        double double16 = bigIntegerModelValue4.asDouble(0.0d);
        double double18 = bigIntegerModelValue4.asDouble((double) 100.0f);
        java.math.BigInteger bigInteger19 = bigIntegerModelValue4.asBigInteger();
        java.math.BigInteger bigInteger20 = bigIntegerModelValue4.asBigInteger();
        org.jboss.dmr.BooleanModelValue booleanModelValue22 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray23 = booleanModelValue22.asBytes();
        java.lang.String str24 = booleanModelValue22.asString();
        int int25 = booleanModelValue22.asInt();
        long long26 = booleanModelValue22.asLong();
        boolean boolean28 = booleanModelValue22.equals((java.lang.Object) '4');
        java.math.BigInteger bigInteger29 = booleanModelValue22.asBigInteger();
        java.math.BigInteger bigInteger30 = booleanModelValue22.asBigInteger();
        java.math.BigDecimal bigDecimal31 = booleanModelValue22.asBigDecimal();
        boolean boolean32 = bigIntegerModelValue4.equals((java.lang.Object) bigDecimal31);
        int int34 = bigIntegerModelValue4.asInt((int) (short) -1);
        java.math.BigInteger bigInteger35 = bigIntegerModelValue4.asBigInteger();
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanModelValue7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue9);
        org.junit.Assert.assertNotNull(bigInteger10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1" + "'", str12, "1");
        org.junit.Assert.assertNotNull(bigInteger13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(bigInteger19);
        org.junit.Assert.assertNotNull(bigInteger20);
        org.junit.Assert.assertNotNull(booleanModelValue22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "true" + "'", str24, "true");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(bigInteger29);
        org.junit.Assert.assertNotNull(bigInteger30);
        org.junit.Assert.assertNotNull(bigDecimal31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(bigInteger35);
    }

    @Test
    public void test13052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13052");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory3 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream4 = null;
        org.jboss.dmr.Base64.InputStream inputStream6 = new org.jboss.dmr.Base64.InputStream(inputStream4, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue8 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str9 = longModelValue8.asString();
        byte[] byteArray10 = longModelValue8.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue11 = new org.jboss.dmr.BytesModelValue(byteArray10);
        int int14 = inputStream6.read(byteArray10, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream16 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream6, (-1));
        org.jboss.dmr.stream.ModelReader modelReader17 = modelStreamFactory3.newModelReader((java.io.InputStream) inputStream16);
        java.io.InputStream inputStream18 = null;
        org.jboss.dmr.Base64.InputStream inputStream20 = new org.jboss.dmr.Base64.InputStream(inputStream18, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream21 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream20);
        org.jboss.dmr.Base64.InputStream inputStream22 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream20);
        org.jboss.dmr.stream.ModelReader modelReader23 = modelStreamFactory3.newModelReader((java.io.InputStream) inputStream20);
        java.io.InputStream inputStream24 = null;
        org.jboss.dmr.Base64.InputStream inputStream26 = new org.jboss.dmr.Base64.InputStream(inputStream24, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue28 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str29 = longModelValue28.asString();
        byte[] byteArray30 = longModelValue28.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue31 = new org.jboss.dmr.BytesModelValue(byteArray30);
        int int34 = inputStream26.read(byteArray30, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream36 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream26, (-1));
        org.jboss.dmr.Base64.InputStream inputStream38 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream26, (int) 'p');
        org.jboss.dmr.Base64.InputStream inputStream39 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream38);
        org.jboss.dmr.stream.ModelReader modelReader40 = modelStreamFactory3.newModelReader((java.io.InputStream) inputStream38);
        org.jboss.dmr.stream.ModelReader modelReader41 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream38);
        boolean boolean42 = modelReader41.isLong();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertNotNull(modelStreamFactory3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1" + "'", str9, "1");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(modelReader17);
        org.junit.Assert.assertNotNull(modelReader23);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1" + "'", str29, "1");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(modelReader40);
        org.junit.Assert.assertNotNull(modelReader41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test13053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13053");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue(0);
        org.jboss.dmr.IntModelValue intModelValue3 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long5 = intModelValue3.asLong((long) 'b');
        java.lang.String str6 = intModelValue3.asString();
        java.math.BigInteger bigInteger7 = intModelValue3.asBigInteger();
        boolean boolean9 = intModelValue3.asBoolean(false);
        org.jboss.dmr.IntModelValue intModelValue11 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long13 = intModelValue11.asLong((long) 'b');
        java.lang.String str14 = intModelValue11.asString();
        boolean boolean15 = intModelValue3.equals(intModelValue11);
        int int17 = intModelValue11.asInt(112);
        double double18 = intModelValue11.asDouble();
        java.lang.String str19 = intModelValue11.asString();
        boolean boolean20 = intModelValue1.equals(intModelValue11);
        long long21 = intModelValue1.asLong();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 32L + "'", long5 == 32L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "32" + "'", str6, "32");
        org.junit.Assert.assertNotNull(bigInteger7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 32L + "'", long13 == 32L);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "32" + "'", str14, "32");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 32.0d + "'", double18 == 32.0d);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "32" + "'", str19, "32");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
    }

    @Test
    public void test13054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13054");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long3 = intModelValue1.asLong((long) 'b');
        java.lang.String str4 = intModelValue1.asString();
        long long5 = intModelValue1.asLong();
        long long6 = intModelValue1.asLong();
        org.jboss.dmr.ValueExpression valueExpression7 = intModelValue1.asExpression();
        org.jboss.dmr.IntModelValue intModelValue9 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long11 = intModelValue9.asLong((long) 'b');
        java.lang.String str12 = intModelValue9.asString();
        java.math.BigInteger bigInteger13 = intModelValue9.asBigInteger();
        boolean boolean15 = intModelValue9.asBoolean(false);
        org.jboss.dmr.IntModelValue intModelValue17 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long19 = intModelValue17.asLong((long) 'b');
        java.lang.String str20 = intModelValue17.asString();
        boolean boolean21 = intModelValue9.equals(intModelValue17);
        int int23 = intModelValue17.asInt(112);
        double double24 = intModelValue17.asDouble();
        boolean boolean25 = intModelValue1.equals(intModelValue17);
        double double27 = intModelValue1.asDouble((double) (-1L));
        boolean boolean28 = intModelValue1.asBoolean();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 32L + "'", long3 == 32L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "32" + "'", str4, "32");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 32L + "'", long5 == 32L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 32L + "'", long6 == 32L);
        org.junit.Assert.assertNotNull(valueExpression7);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 32L + "'", long11 == 32L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "32" + "'", str12, "32");
        org.junit.Assert.assertNotNull(bigInteger13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 32L + "'", long19 == 32L);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "32" + "'", str20, "32");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 32 + "'", int23 == 32);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 32.0d + "'", double24 == 32.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 32.0d + "'", double27 == 32.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test13055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13055");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str2 = intModelValue1.asString();
        double double4 = intModelValue1.asDouble((double) 2);
        java.math.BigDecimal bigDecimal5 = intModelValue1.asBigDecimal();
        long long6 = intModelValue1.asLong();
        double double7 = intModelValue1.asDouble();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "32" + "'", str2, "32");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 32.0d + "'", double4 == 32.0d);
        org.junit.Assert.assertNotNull(bigDecimal5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 32L + "'", long6 == 32L);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 32.0d + "'", double7 == 32.0d);
    }

    @Test
    public void test13056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13056");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(modelType0);
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode6 = modelNode3.set("hi!", 0.0d);
        org.jboss.dmr.Property property7 = new org.jboss.dmr.Property("", modelNode6);
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(property7);
        org.jboss.dmr.PropertyModelValue propertyModelValue9 = new org.jboss.dmr.PropertyModelValue(property7);
        org.jboss.dmr.ModelNode modelNode10 = propertyModelValue9.asObject();
        org.jboss.dmr.ModelNode modelNode11 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) propertyModelValue9);
        boolean boolean13 = modelNode11.has((int) (short) 10);
        org.jboss.dmr.ModelNode modelNode16 = new org.jboss.dmr.ModelNode((long) 10);
        java.lang.String str18 = modelNode16.asString("true");
        org.jboss.dmr.Property property19 = new org.jboss.dmr.Property("H4sIAAAAAAAAAAMAAAAAAAAAAAA=", modelNode16);
        org.jboss.dmr.ModelNode modelNode20 = modelNode16.clone();
        org.jboss.dmr.ModelNode modelNode23 = new org.jboss.dmr.ModelNode((int) 'a');
        org.jboss.dmr.ModelNode modelNode24 = modelNode23.setEmptyList();
        org.jboss.dmr.ObjectModelValue objectModelValue25 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode26 = objectModelValue25.asObject();
        java.util.Set<java.lang.String> strSet27 = objectModelValue25.getKeys();
        boolean boolean29 = objectModelValue25.has((int) 'a');
        boolean boolean31 = objectModelValue25.has("");
        org.jboss.dmr.ObjectModelValue objectModelValue32 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode33 = objectModelValue32.asObject();
        java.util.Set<java.lang.String> strSet34 = objectModelValue32.getKeys();
        boolean boolean36 = objectModelValue32.has((int) 'a');
        boolean boolean37 = objectModelValue25.equals(objectModelValue32);
        org.jboss.dmr.ModelNode modelNode38 = objectModelValue32.asObject();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList39 = objectModelValue32.asList();
        org.jboss.dmr.ModelNode modelNode40 = modelNode23.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList39);
        org.jboss.dmr.Property property42 = new org.jboss.dmr.Property("bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }", modelNode23, true);
        org.jboss.dmr.Property property43 = property42.clone();
        java.lang.String str44 = property42.getName();
        org.jboss.dmr.ModelNode modelNode45 = modelNode20.set(property42);
        org.jboss.dmr.ModelNode modelNode46 = modelNode11.set(property42);
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType0.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "10" + "'", str18, "10");
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(modelNode33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(modelNode38);
        org.junit.Assert.assertNotNull(modelNodeList39);
        org.junit.Assert.assertNotNull(modelNode40);
        org.junit.Assert.assertNotNull(property43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str44, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertNotNull(modelNode45);
        org.junit.Assert.assertNotNull(modelNode46);
    }

    @Test
    public void test13057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13057");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        java.math.BigDecimal bigDecimal2 = longModelValue1.asBigDecimal();
        byte[] byteArray3 = longModelValue1.asBytes();
        long long4 = longModelValue1.asLong();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode6 = longModelValue1.getChild("[(\"hi!\" => expression \"hi!\"),\"rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4\",false,(\"H4sIAAAAAAAAAFvzloG1tIiBKdppzWfxH2wcIQ+YGBgqChgYGBgZASVtzhAcAAAA\" => bytes {\n    0x28, 0x22, 0x22, 0x20, 0x3d, 0x3e, 0x20, 0x28,\n    0x22, 0x68, 0x69, 0x21, 0x22, 0x20, 0x3d, 0x3e,\n    0x20, 0x30, 0x2e, 0x30, 0x29, 0x29\n})]");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(bigDecimal2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
    }

    @Test
    public void test13058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13058");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.StringModelValue stringModelValue3 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        boolean boolean4 = stringModelValue1.equals(stringModelValue3);
        org.jboss.dmr.ValueExpression valueExpression5 = stringModelValue1.asExpression();
        // The following exception was thrown during execution in test generation
        try {
            long long6 = valueExpression5.resolveLong();
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"Expression \"true\"\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(valueExpression5);
    }

    @Test
    public void test13059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13059");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.setExpression("hi!", "hi!");
        org.jboss.dmr.ModelNode modelNode4 = modelNode3.setEmptyList();
        org.jboss.dmr.ModelNode modelNode5 = modelNode3.asObject();
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        java.lang.String str12 = modelNode8.toString();
        org.jboss.dmr.ModelNode modelNode13 = modelNode8.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode15 = modelNode8.set(100);
        org.jboss.dmr.ModelNode modelNode16 = modelNode7.add(modelNode8);
        org.jboss.dmr.Property property17 = new org.jboss.dmr.Property("", modelNode8);
        java.lang.String str18 = property17.getName();
        org.jboss.dmr.ModelNode modelNode19 = modelNode5.set(property17);
        org.jboss.dmr.BooleanModelValue booleanModelValue22 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long23 = booleanModelValue22.asLong();
        org.jboss.dmr.ValueExpression valueExpression24 = booleanModelValue22.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue25 = new org.jboss.dmr.ExpressionValue(valueExpression24);
        org.jboss.dmr.ModelNode modelNode26 = modelNode19.set("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3F3AADkV4cHJlc3Np\nb24gIjEiZQADaGkheA==", valueExpression24);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray27 = modelNode19.asBytes();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(\"hi!\" => 0.0)" + "'", str12, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode15);
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(booleanModelValue22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertNotNull(valueExpression24);
        org.junit.Assert.assertNotNull(modelNode26);
    }

    @Test
    public void test13060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13060");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        java.lang.String str6 = listModelValue5.asString();
        long long7 = listModelValue5.asLong();
        int int9 = listModelValue5.asInt((int) '4');
        org.jboss.dmr.ModelValue modelValue10 = listModelValue5.protect();
        org.jboss.dmr.ModelNode modelNode11 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode14 = modelNode11.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList15 = modelNode14.asList();
        org.jboss.dmr.ListModelValue listModelValue16 = new org.jboss.dmr.ListModelValue(modelNodeList15);
        org.jboss.dmr.ModelNode modelNode17 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue16);
        org.jboss.dmr.ModelValue modelValue18 = listModelValue16.resolve();
        int int20 = listModelValue16.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList21 = listModelValue16.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList22 = listModelValue16.asPropertyList();
        boolean boolean23 = listModelValue5.equals(listModelValue16);
        long long24 = listModelValue16.asLong();
        org.jboss.dmr.ModelNode modelNode25 = listModelValue16.asObject();
        org.jboss.dmr.ModelNode modelNode27 = new org.jboss.dmr.ModelNode((double) 100);
        org.jboss.dmr.ModelNode modelNode29 = modelNode27.set((int) '#');
        java.lang.Boolean boolean30 = modelNode27.asBooleanOrNull();
        org.jboss.dmr.ModelNode modelNode31 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode34 = modelNode31.set("hi!", 0.0d);
        java.lang.String str35 = modelNode31.toString();
        org.jboss.dmr.ModelNode modelNode36 = modelNode31.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode38 = modelNode31.set(100);
        org.jboss.dmr.ModelNode modelNode41 = new org.jboss.dmr.ModelNode((double) 100);
        org.jboss.dmr.ModelNode modelNode43 = modelNode41.set((int) '#');
        org.jboss.dmr.ModelNode modelNode44 = modelNode31.setNoCopy("EXPRESSION_VALUE", modelNode43);
        org.jboss.dmr.ModelNode modelNode45 = modelNode44.resolve();
        org.jboss.dmr.ModelType modelType46 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode47 = new org.jboss.dmr.ModelNode(modelType46);
        org.jboss.dmr.ModelNode modelNode49 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode52 = modelNode49.set("hi!", 0.0d);
        org.jboss.dmr.Property property53 = new org.jboss.dmr.Property("", modelNode52);
        org.jboss.dmr.ModelNode modelNode54 = modelNode47.set(property53);
        org.jboss.dmr.PropertyModelValue propertyModelValue55 = new org.jboss.dmr.PropertyModelValue(property53);
        org.jboss.dmr.PropertyModelValue propertyModelValue56 = new org.jboss.dmr.PropertyModelValue(property53);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList57 = propertyModelValue56.asList();
        org.jboss.dmr.ModelNode modelNode58 = modelNode45.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList57);
        org.jboss.dmr.IntModelValue intModelValue61 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str62 = intModelValue61.asString();
        double double64 = intModelValue61.asDouble((double) 2);
        java.math.BigDecimal bigDecimal65 = intModelValue61.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode66 = modelNode58.add("(\"hi!\" => 0.0)", bigDecimal65);
        org.jboss.dmr.ModelNode modelNode67 = modelNode27.set(bigDecimal65);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode68 = modelNode25.add(bigDecimal65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str6, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(modelValue10);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(modelNodeList15);
        org.junit.Assert.assertNotNull(modelValue18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(propertyList21);
        org.junit.Assert.assertNotNull(propertyList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1L + "'", long24 == 1L);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertNotNull(modelNode29);
        org.junit.Assert.assertEquals("'" + boolean30 + "' != '" + true + "'", boolean30, true);
        org.junit.Assert.assertNotNull(modelNode34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(\"hi!\" => 0.0)" + "'", str35, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode36);
        org.junit.Assert.assertNotNull(modelNode38);
        org.junit.Assert.assertNotNull(modelNode43);
        org.junit.Assert.assertNotNull(modelNode44);
        org.junit.Assert.assertNotNull(modelNode45);
        org.junit.Assert.assertTrue("'" + modelType46 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType46.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode52);
        org.junit.Assert.assertNotNull(modelNode54);
        org.junit.Assert.assertNotNull(modelNodeList57);
        org.junit.Assert.assertNotNull(modelNode58);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "32" + "'", str62, "32");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 32.0d + "'", double64 == 32.0d);
        org.junit.Assert.assertNotNull(bigDecimal65);
        org.junit.Assert.assertNotNull(modelNode66);
        org.junit.Assert.assertNotNull(modelNode67);
    }

    @Test
    public void test13061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13061");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue5);
        org.jboss.dmr.ModelValue modelValue7 = listModelValue5.resolve();
        int int9 = listModelValue5.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList10 = listModelValue5.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList11 = listModelValue5.asPropertyList();
        org.jboss.dmr.ModelNode modelNode13 = listModelValue5.getChild((int) (short) 0);
        int int14 = listModelValue5.asInt();
        java.lang.String str15 = listModelValue5.asString();
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory17 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream18 = null;
        org.jboss.dmr.Base64.InputStream inputStream20 = new org.jboss.dmr.Base64.InputStream(inputStream18, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream21 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream20);
        org.jboss.dmr.stream.ModelReader modelReader22 = modelStreamFactory17.newModelReader((java.io.InputStream) inputStream21);
        java.io.OutputStream outputStream23 = null;
        org.jboss.dmr.Base64.OutputStream outputStream24 = new org.jboss.dmr.Base64.OutputStream(outputStream23);
        org.jboss.dmr.Base64.OutputStream outputStream25 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream24);
        outputStream24.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter28 = modelStreamFactory17.newModelWriter((java.io.OutputStream) outputStream24);
        java.io.OutputStream outputStream29 = null;
        org.jboss.dmr.Base64.OutputStream outputStream30 = new org.jboss.dmr.Base64.OutputStream(outputStream29);
        org.jboss.dmr.Base64.OutputStream outputStream31 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream30);
        org.jboss.dmr.Base64.OutputStream outputStream32 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream31);
        outputStream31.resumeEncoding();
        outputStream31.resumeEncoding();
        org.jboss.dmr.stream.ModelWriter modelWriter35 = modelStreamFactory17.newModelWriter((java.io.OutputStream) outputStream31);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory37 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream38 = null;
        org.jboss.dmr.Base64.InputStream inputStream40 = new org.jboss.dmr.Base64.InputStream(inputStream38, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream41 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream40);
        org.jboss.dmr.stream.ModelReader modelReader42 = modelStreamFactory37.newModelReader((java.io.InputStream) inputStream41);
        java.io.OutputStream outputStream43 = null;
        org.jboss.dmr.Base64.OutputStream outputStream44 = new org.jboss.dmr.Base64.OutputStream(outputStream43);
        org.jboss.dmr.Base64.OutputStream outputStream45 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream44);
        outputStream44.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter48 = modelStreamFactory37.newModelWriter((java.io.OutputStream) outputStream44);
        outputStream44.write(2);
        org.jboss.dmr.stream.ModelWriter modelWriter51 = modelStreamFactory17.newModelWriter((java.io.OutputStream) outputStream44);
        listModelValue5.write(modelWriter51);
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertNotNull(modelValue7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(propertyList10);
        org.junit.Assert.assertNotNull(propertyList11);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str15, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertNotNull(modelStreamFactory17);
        org.junit.Assert.assertNotNull(modelReader22);
        org.junit.Assert.assertNotNull(modelWriter28);
        org.junit.Assert.assertNotNull(modelWriter35);
        org.junit.Assert.assertNotNull(modelStreamFactory37);
        org.junit.Assert.assertNotNull(modelReader42);
        org.junit.Assert.assertNotNull(modelWriter48);
        org.junit.Assert.assertNotNull(modelWriter51);
    }

    @Test
    public void test13062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13062");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode("EXPRESSION_VALUE");
        org.jboss.dmr.BooleanModelValue booleanModelValue4 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger5 = booleanModelValue4.asBigInteger();
        byte[] byteArray6 = booleanModelValue4.asBytes();
        org.jboss.dmr.ModelNode modelNode7 = modelNode1.set("expression \"hi!\"", byteArray6);
        org.jboss.dmr.ModelNode modelNode8 = modelNode7.clear();
        org.jboss.dmr.ModelNode modelNode10 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long11 = modelNode10.asLong();
        org.jboss.dmr.ValueExpression valueExpression12 = modelNode10.asExpression();
        java.math.BigDecimal bigDecimal13 = valueExpression12.resolveBigDecimal();
        java.lang.String str14 = valueExpression12.getExpressionString();
        java.math.BigDecimal bigDecimal15 = valueExpression12.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue16 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal15);
        boolean boolean17 = bigDecimalModelValue16.asBoolean();
        long long18 = bigDecimalModelValue16.asLong();
        java.math.BigDecimal bigDecimal19 = bigDecimalModelValue16.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode20 = modelNode8.add(bigDecimal19);
        org.jboss.dmr.ModelNode modelNode23 = modelNode8.set("", true);
        org.junit.Assert.assertNotNull(booleanModelValue4);
        org.junit.Assert.assertNotNull(bigInteger5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1]");
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertNotNull(valueExpression12);
        org.junit.Assert.assertNotNull(bigDecimal13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1.0" + "'", str14, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(bigDecimal19);
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(modelNode23);
    }

    @Test
    public void test13063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13063");
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        boolean boolean4 = modelNode2.hasDefined("[(\"hi!\" => 0.0)]");
        org.jboss.dmr.PropertyModelValue propertyModelValue5 = new org.jboss.dmr.PropertyModelValue("TYPE_MODEL_VALUE", modelNode2);
        org.jboss.dmr.ModelNode modelNode7 = propertyModelValue5.getChild(0);
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver8 = new org.jboss.dmr.ValueExpressionResolver();
        boolean boolean9 = propertyModelValue5.equals((java.lang.Object) valueExpressionResolver8);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode11 = propertyModelValue5.getChild("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test13064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13064");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) 'p');
        java.math.BigDecimal bigDecimal2 = intModelValue1.asBigDecimal();
        boolean boolean3 = intModelValue1.asBoolean();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode5 = intModelValue1.requireChild("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child '' exists");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(bigDecimal2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test13065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13065");
        org.jboss.dmr.BooleanModelValue booleanModelValue1 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long2 = booleanModelValue1.asLong();
        int int3 = booleanModelValue1.asInt();
        org.jboss.dmr.DoubleModelValue doubleModelValue5 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long6 = doubleModelValue5.asLong();
        boolean boolean7 = doubleModelValue5.asBoolean();
        boolean boolean8 = booleanModelValue1.equals((java.lang.Object) doubleModelValue5);
        java.lang.Object obj9 = null;
        boolean boolean10 = booleanModelValue1.equals(obj9);
        double double11 = booleanModelValue1.asDouble();
        org.junit.Assert.assertNotNull(booleanModelValue1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10L + "'", long6 == 10L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
    }

    @Test
    public void test13066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13066");
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray1 = org.jboss.dmr.Base64.decode("bytes { 0x28, 0x22, 0x22, 0x20, 0x3d, 0x3e, 0x20, 0x28, 0x22, 0x68, 0x69, 0x21, 0x22, 0x20, 0x3d, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29 }");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Bad Base64 input character at 6: 123(decimal)");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13067");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.PROPERTY;
        char char1 = modelType0.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue2 = org.jboss.dmr.TypeModelValue.of(modelType0);
        boolean boolean3 = typeModelValue2.asBoolean();
        java.lang.String str4 = typeModelValue2.asString();
        org.jboss.dmr.ValueExpression valueExpression5 = typeModelValue2.asExpression();
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType0.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char1 + "' != '" + 'p' + "'", char1 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PROPERTY" + "'", str4, "PROPERTY");
        org.junit.Assert.assertNotNull(valueExpression5);
    }

    @Test
    public void test13068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13068");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        byte[] byteArray2 = stringModelValue1.asBytes();
        org.jboss.dmr.LongModelValue longModelValue4 = new org.jboss.dmr.LongModelValue(1L);
        java.math.BigDecimal bigDecimal5 = longModelValue4.asBigDecimal();
        byte[] byteArray6 = longModelValue4.asBytes();
        boolean boolean7 = stringModelValue1.equals((java.lang.Object) byteArray6);
        org.jboss.dmr.StringModelValue stringModelValue9 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.StringModelValue stringModelValue11 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        boolean boolean12 = stringModelValue9.equals(stringModelValue11);
        byte[] byteArray13 = stringModelValue11.asBytes();
        java.lang.Object obj14 = null;
        boolean boolean15 = stringModelValue11.equals(obj14);
        byte[] byteArray16 = stringModelValue11.asBytes();
        boolean boolean17 = stringModelValue1.equals(stringModelValue11);
        org.jboss.dmr.ValueExpression valueExpression18 = stringModelValue11.asExpression();
        java.lang.String str19 = stringModelValue11.asString();
        org.jboss.dmr.ValueExpression valueExpression20 = stringModelValue11.asExpression();
        // The following exception was thrown during execution in test generation
        try {
            double double22 = stringModelValue11.asDouble((double) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"(\"\" => (\"hi!\" => 0.0))\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 32, 34, 116, 114, 117, 101, 34]");
        org.junit.Assert.assertNotNull(bigDecimal5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[40, 34, 34, 32, 61, 62, 32, 40, 34, 104, 105, 33, 34, 32, 61, 62, 32, 48, 46, 48, 41, 41]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[40, 34, 34, 32, 61, 62, 32, 40, 34, 104, 105, 33, 34, 32, 61, 62, 32, 48, 46, 48, 41, 41]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(valueExpression18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(\"\" => (\"hi!\" => 0.0))" + "'", str19, "(\"\" => (\"hi!\" => 0.0))");
        org.junit.Assert.assertNotNull(valueExpression20);
    }

    @Test
    public void test13069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13069");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        long long3 = longModelValue1.asLong((long) (short) 0);
        java.lang.String str4 = longModelValue1.asString();
        byte[] byteArray5 = longModelValue1.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue6 = new org.jboss.dmr.BytesModelValue(byteArray5);
        long long7 = bytesModelValue6.asLong();
        int int9 = bytesModelValue6.asInt((int) '4');
        java.lang.String str10 = bytesModelValue6.asString();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 1L + "'", long3 == 1L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1" + "'", str4, "1");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str10, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
    }

    @Test
    public void test13070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13070");
        java.io.OutputStream outputStream0 = null;
        org.jboss.dmr.Base64.OutputStream outputStream2 = new org.jboss.dmr.Base64.OutputStream(outputStream0, (int) 'a');
        outputStream2.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream5 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream2, (-1));
    }

    @Test
    public void test13071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13071");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue(0);
        java.lang.Throwable throwable4 = null;
        org.jboss.dmr.stream.ModelException modelException5 = new org.jboss.dmr.stream.ModelException("[(\"hi!\" => 0.0)]", throwable4);
        org.jboss.dmr.stream.ModelException modelException6 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException5);
        java.lang.Throwable throwable8 = null;
        org.jboss.dmr.stream.ModelException modelException9 = new org.jboss.dmr.stream.ModelException("[(\"hi!\" => 0.0)]", throwable8);
        org.jboss.dmr.stream.ModelException modelException10 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException9);
        modelException5.addSuppressed((java.lang.Throwable) modelException9);
        java.lang.Throwable[] throwableArray12 = modelException9.getSuppressed();
        org.jboss.dmr.stream.ModelException modelException13 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException9);
        org.jboss.dmr.stream.ModelException modelException14 = new org.jboss.dmr.stream.ModelException("32", (java.lang.Throwable) modelException9);
        boolean boolean15 = intModelValue1.equals((java.lang.Object) modelException14);
        java.math.BigDecimal bigDecimal16 = intModelValue1.asBigDecimal();
        org.jboss.dmr.IntModelValue intModelValue18 = new org.jboss.dmr.IntModelValue((int) ' ');
        org.jboss.dmr.IntModelValue intModelValue20 = new org.jboss.dmr.IntModelValue(10);
        boolean boolean22 = intModelValue20.asBoolean(false);
        boolean boolean23 = intModelValue18.equals(intModelValue20);
        boolean boolean24 = intModelValue1.equals(intModelValue20);
        double double26 = intModelValue1.asDouble((double) 'I');
        java.math.BigInteger bigInteger27 = intModelValue1.asBigInteger();
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(bigDecimal16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(bigInteger27);
    }

    @Test
    public void test13072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13072");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue(0);
        boolean boolean2 = intModelValue1.asBoolean();
        java.math.BigDecimal bigDecimal3 = intModelValue1.asBigDecimal();
        byte[] byteArray4 = intModelValue1.asBytes();
        boolean boolean6 = intModelValue1.asBoolean(false);
        java.lang.String str7 = intModelValue1.asString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bigDecimal3);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0" + "'", str7, "0");
    }

    @Test
    public void test13073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13073");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        int int3 = doubleModelValue1.asInt((int) 'l');
        java.math.BigDecimal bigDecimal4 = doubleModelValue1.asBigDecimal();
        byte[] byteArray5 = doubleModelValue1.asBytes();
        int int7 = doubleModelValue1.asInt((int) (byte) 1);
        java.lang.String str8 = doubleModelValue1.asString();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 10 + "'", int3 == 10);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "10.0" + "'", str8, "10.0");
    }

    @Test
    public void test13074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13074");
        org.jboss.dmr.ExpressionValue expressionValue1 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue3 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean4 = expressionValue1.equals(expressionValue3);
        org.jboss.dmr.ExpressionValue expressionValue6 = new org.jboss.dmr.ExpressionValue("1");
        org.jboss.dmr.ValueExpression valueExpression7 = expressionValue6.asExpression();
        boolean boolean8 = expressionValue1.equals(expressionValue6);
        org.jboss.dmr.ObjectModelValue objectModelValue9 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode10 = objectModelValue9.asObject();
        java.util.Set<java.lang.String> strSet11 = objectModelValue9.getKeys();
        org.jboss.dmr.ModelNode modelNode13 = objectModelValue9.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        int int15 = objectModelValue9.asInt(10);
        boolean boolean16 = expressionValue6.equals((java.lang.Object) objectModelValue9);
        org.jboss.dmr.ModelValue modelValue17 = objectModelValue9.resolve();
        java.io.DataOutput dataOutput18 = null;
        // The following exception was thrown during execution in test generation
        try {
            objectModelValue9.writeExternal(dataOutput18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(valueExpression7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(modelNode13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(modelValue17);
    }

    @Test
    public void test13075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13075");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("[(\"hi!\" => expression \"hi!\"),bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }]");
        // The following exception was thrown during execution in test generation
        try {
            long long3 = stringModelValue1.asLong(0L);
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"[(\"hi!\" => expression \"hi!\"),bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }]\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13076");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long2 = doubleModelValue1.asLong();
        boolean boolean3 = doubleModelValue1.asBoolean();
        byte[] byteArray4 = doubleModelValue1.asBytes();
        java.math.BigInteger bigInteger5 = doubleModelValue1.asBigInteger();
        double double7 = doubleModelValue1.asDouble((double) (-1));
        org.jboss.dmr.ModelNode modelNode9 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long10 = modelNode9.asLong();
        org.jboss.dmr.ModelNode modelNode13 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode16 = modelNode13.set("hi!", 0.0d);
        org.jboss.dmr.Property property17 = new org.jboss.dmr.Property("", modelNode16);
        java.lang.String[] strArray18 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode19 = modelNode16.get(strArray18);
        org.jboss.dmr.ModelNode modelNode20 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode23 = modelNode20.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList24 = modelNode23.asList();
        org.jboss.dmr.ListModelValue listModelValue25 = new org.jboss.dmr.ListModelValue(modelNodeList24);
        org.jboss.dmr.ModelNode modelNode26 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue25);
        org.jboss.dmr.ModelValue modelValue27 = listModelValue25.resolve();
        int int29 = listModelValue25.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList30 = listModelValue25.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList31 = modelNode19.asPropertyList(propertyList30);
        org.jboss.dmr.ModelNode modelNode33 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode36 = modelNode33.set("hi!", 0.0d);
        org.jboss.dmr.Property property37 = new org.jboss.dmr.Property("", modelNode36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode39 = modelNode36.get(strArray38);
        org.jboss.dmr.ModelNode modelNode40 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode43 = modelNode40.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList44 = modelNode43.asList();
        org.jboss.dmr.ListModelValue listModelValue45 = new org.jboss.dmr.ListModelValue(modelNodeList44);
        org.jboss.dmr.ModelNode modelNode46 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue45);
        org.jboss.dmr.ModelValue modelValue47 = listModelValue45.resolve();
        int int49 = listModelValue45.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList50 = listModelValue45.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList51 = modelNode39.asPropertyList(propertyList50);
        modelNode19.setNoCopy(modelNode39);
        org.jboss.dmr.ModelNode modelNode53 = modelNode9.set("org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]", modelNode19);
        org.jboss.dmr.ModelNode modelNode55 = modelNode19.set(false);
        org.jboss.dmr.LongModelValue longModelValue57 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str58 = longModelValue57.asString();
        byte[] byteArray59 = longModelValue57.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue60 = new org.jboss.dmr.BytesModelValue(byteArray59);
        java.lang.String str61 = bytesModelValue60.asString();
        int int62 = bytesModelValue60.asInt();
        long long64 = bytesModelValue60.asLong((long) (short) 1);
        long long65 = bytesModelValue60.asLong();
        byte[] byteArray66 = bytesModelValue60.asBytes();
        org.jboss.dmr.ModelNode modelNode67 = modelNode19.set(byteArray66);
        org.jboss.dmr.ModelNode modelNode68 = modelNode67.setEmptyList();
        org.jboss.dmr.ModelType modelType69 = modelNode68.getType();
        org.jboss.dmr.BooleanModelValue booleanModelValue71 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long72 = booleanModelValue71.asLong();
        org.jboss.dmr.ValueExpression valueExpression73 = booleanModelValue71.asExpression();
        java.lang.String str74 = valueExpression73.toString();
        org.jboss.dmr.ModelNode modelNode75 = modelNode68.add(valueExpression73);
        boolean boolean76 = doubleModelValue1.equals((java.lang.Object) modelNode75);
        java.lang.String str77 = doubleModelValue1.asString();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10L + "'", long2 == 10L);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(bigInteger5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(modelNode23);
        org.junit.Assert.assertNotNull(modelNodeList24);
        org.junit.Assert.assertNotNull(modelValue27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(propertyList30);
        org.junit.Assert.assertNotNull(propertyList31);
        org.junit.Assert.assertNotNull(modelNode36);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(modelNode39);
        org.junit.Assert.assertNotNull(modelNode43);
        org.junit.Assert.assertNotNull(modelNodeList44);
        org.junit.Assert.assertNotNull(modelValue47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(propertyList50);
        org.junit.Assert.assertNotNull(propertyList51);
        org.junit.Assert.assertNotNull(modelNode53);
        org.junit.Assert.assertNotNull(modelNode55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1" + "'", str58, "1");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str61, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 1L + "'", long64 == 1L);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 1L + "'", long65 == 1L);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(modelNode67);
        org.junit.Assert.assertNotNull(modelNode68);
        org.junit.Assert.assertTrue("'" + modelType69 + "' != '" + org.jboss.dmr.ModelType.LIST + "'", modelType69.equals(org.jboss.dmr.ModelType.LIST));
        org.junit.Assert.assertNotNull(booleanModelValue71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 1L + "'", long72 == 1L);
        org.junit.Assert.assertNotNull(valueExpression73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Expression \"true\"" + "'", str74, "Expression \"true\"");
        org.junit.Assert.assertNotNull(modelNode75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "10.0" + "'", str77, "10.0");
    }

    @Test
    public void test13077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13077");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isLong();
        boolean boolean17 = modelReader15.isBigDecimal();
        boolean boolean18 = modelReader15.isUndefined();
        boolean boolean19 = modelReader15.isBytes();
        boolean boolean20 = modelReader15.isBigInteger();
        boolean boolean21 = modelReader15.isString();
        boolean boolean22 = modelReader15.isString();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test13078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13078");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        java.lang.String str2 = doubleModelValue1.asString();
        long long4 = doubleModelValue1.asLong((long) (short) -1);
        double double6 = doubleModelValue1.asDouble(0.0d);
        org.jboss.dmr.DoubleModelValue doubleModelValue8 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long9 = doubleModelValue8.asLong();
        boolean boolean10 = doubleModelValue8.asBoolean();
        byte[] byteArray11 = doubleModelValue8.asBytes();
        int int13 = doubleModelValue8.asInt((int) ' ');
        boolean boolean14 = doubleModelValue8.asBoolean();
        java.math.BigInteger bigInteger15 = doubleModelValue8.asBigInteger();
        boolean boolean16 = doubleModelValue1.equals(doubleModelValue8);
        byte[] byteArray17 = doubleModelValue1.asBytes();
        org.jboss.dmr.LongModelValue longModelValue19 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str20 = longModelValue19.asString();
        byte[] byteArray21 = longModelValue19.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue22 = new org.jboss.dmr.BytesModelValue(byteArray21);
        java.lang.String str23 = bytesModelValue22.asString();
        int int24 = bytesModelValue22.asInt();
        byte[] byteArray25 = bytesModelValue22.asBytes();
        org.jboss.dmr.LongModelValue longModelValue27 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str28 = longModelValue27.asString();
        byte[] byteArray29 = longModelValue27.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue30 = new org.jboss.dmr.BytesModelValue(byteArray29);
        java.lang.String str31 = bytesModelValue30.asString();
        int int32 = bytesModelValue30.asInt();
        int int33 = bytesModelValue30.asInt();
        org.jboss.dmr.LongModelValue longModelValue35 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str36 = longModelValue35.asString();
        byte[] byteArray37 = longModelValue35.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue38 = new org.jboss.dmr.BytesModelValue(byteArray37);
        double double39 = bytesModelValue38.asDouble();
        boolean boolean40 = bytesModelValue30.equals(bytesModelValue38);
        byte[] byteArray41 = bytesModelValue38.asBytes();
        java.math.BigInteger bigInteger42 = bytesModelValue38.asBigInteger();
        boolean boolean43 = bytesModelValue22.equals(bytesModelValue38);
        int int45 = bytesModelValue38.asInt((int) 'J');
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory47 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream48 = null;
        org.jboss.dmr.Base64.InputStream inputStream50 = new org.jboss.dmr.Base64.InputStream(inputStream48, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream51 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream50);
        org.jboss.dmr.stream.ModelReader modelReader52 = modelStreamFactory47.newModelReader((java.io.InputStream) inputStream51);
        java.io.OutputStream outputStream53 = null;
        org.jboss.dmr.Base64.OutputStream outputStream54 = new org.jboss.dmr.Base64.OutputStream(outputStream53);
        org.jboss.dmr.Base64.OutputStream outputStream55 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream54);
        outputStream54.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter58 = modelStreamFactory47.newModelWriter((java.io.OutputStream) outputStream54);
        org.jboss.dmr.stream.ModelWriter modelWriter59 = modelWriter58.writeListStart();
        bytesModelValue38.write(modelWriter59);
        org.jboss.dmr.stream.ModelWriter modelWriter61 = modelWriter59.writeUndefined();
        org.jboss.dmr.stream.ModelWriter modelWriter63 = modelWriter61.writeBoolean(true);
        org.jboss.dmr.BooleanModelValue booleanModelValue65 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        org.jboss.dmr.ValueExpression valueExpression66 = booleanModelValue65.asExpression();
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory68 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream69 = null;
        org.jboss.dmr.Base64.InputStream inputStream71 = new org.jboss.dmr.Base64.InputStream(inputStream69, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream72 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream71);
        org.jboss.dmr.stream.ModelReader modelReader73 = modelStreamFactory68.newModelReader((java.io.InputStream) inputStream72);
        java.io.OutputStream outputStream74 = null;
        org.jboss.dmr.Base64.OutputStream outputStream75 = new org.jboss.dmr.Base64.OutputStream(outputStream74);
        org.jboss.dmr.Base64.OutputStream outputStream76 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream75);
        outputStream75.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter79 = modelStreamFactory68.newModelWriter((java.io.OutputStream) outputStream75);
        org.jboss.dmr.stream.ModelWriter modelWriter80 = modelWriter79.writeListStart();
        org.jboss.dmr.IntModelValue intModelValue82 = new org.jboss.dmr.IntModelValue(10);
        byte[] byteArray83 = intModelValue82.asBytes();
        int int85 = intModelValue82.asInt(0);
        java.math.BigInteger bigInteger86 = intModelValue82.asBigInteger();
        org.jboss.dmr.stream.ModelWriter modelWriter87 = modelWriter80.writeBigInteger(bigInteger86);
        org.jboss.dmr.stream.ModelWriter modelWriter88 = modelWriter80.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter90 = modelWriter88.writeLong((long) (short) -1);
        booleanModelValue65.write(modelWriter88);
        java.math.BigInteger bigInteger92 = booleanModelValue65.asBigInteger();
        org.jboss.dmr.stream.ModelWriter modelWriter93 = modelWriter63.writeBigInteger(bigInteger92);
        doubleModelValue1.write(modelWriter63);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "10.0" + "'", str2, "10.0");
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10L + "'", long4 == 10L);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10L + "'", long9 == 10L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(bigInteger15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1" + "'", str20, "1");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str23, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1" + "'", str28, "1");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str31, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1" + "'", str36, "1");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 4.9E-324d + "'", double39 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(bigInteger42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(modelStreamFactory47);
        org.junit.Assert.assertNotNull(modelReader52);
        org.junit.Assert.assertNotNull(modelWriter58);
        org.junit.Assert.assertNotNull(modelWriter59);
        org.junit.Assert.assertNotNull(modelWriter61);
        org.junit.Assert.assertNotNull(modelWriter63);
        org.junit.Assert.assertNotNull(booleanModelValue65);
        org.junit.Assert.assertNotNull(valueExpression66);
        org.junit.Assert.assertNotNull(modelStreamFactory68);
        org.junit.Assert.assertNotNull(modelReader73);
        org.junit.Assert.assertNotNull(modelWriter79);
        org.junit.Assert.assertNotNull(modelWriter80);
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[0, 0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 10 + "'", int85 == 10);
        org.junit.Assert.assertNotNull(bigInteger86);
        org.junit.Assert.assertNotNull(modelWriter87);
        org.junit.Assert.assertNotNull(modelWriter88);
        org.junit.Assert.assertNotNull(modelWriter90);
        org.junit.Assert.assertNotNull(bigInteger92);
        org.junit.Assert.assertNotNull(modelWriter93);
    }

    @Test
    public void test13079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13079");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.BooleanModelValue booleanModelValue2 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger3 = booleanModelValue2.asBigInteger();
        org.jboss.dmr.ModelNode modelNode4 = modelNode0.add(bigInteger3);
        org.jboss.dmr.ModelNode modelNode5 = modelNode0.clone();
        java.lang.String str7 = modelNode5.toJSONString(false);
        org.jboss.dmr.ModelNode modelNode9 = modelNode5.add("(\"rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4\" => (\"hi!\" => 0.0))");
        org.jboss.dmr.BooleanModelValue booleanModelValue11 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double12 = booleanModelValue11.asDouble();
        org.jboss.dmr.ModelValue modelValue13 = booleanModelValue11.copy();
        java.math.BigInteger bigInteger14 = booleanModelValue11.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue15 = new org.jboss.dmr.BigIntegerModelValue(bigInteger14);
        java.lang.String str16 = bigIntegerModelValue15.asString();
        java.math.BigInteger bigInteger17 = bigIntegerModelValue15.asBigInteger();
        org.jboss.dmr.ModelNode modelNode18 = new org.jboss.dmr.ModelNode(bigInteger17);
        org.jboss.dmr.LongModelValue longModelValue20 = new org.jboss.dmr.LongModelValue((-1L));
        long long22 = longModelValue20.asLong((long) (byte) -1);
        int int24 = longModelValue20.asInt(0);
        org.jboss.dmr.ValueExpression valueExpression25 = longModelValue20.asExpression();
        org.jboss.dmr.ModelNode modelNode26 = modelNode18.set(valueExpression25);
        org.jboss.dmr.ModelNode modelNode29 = new org.jboss.dmr.ModelNode((long) 10);
        java.lang.String str31 = modelNode29.asString("true");
        org.jboss.dmr.ModelNode modelNode34 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long35 = modelNode34.asLong();
        org.jboss.dmr.ValueExpression valueExpression36 = modelNode34.asExpression();
        java.math.BigDecimal bigDecimal37 = valueExpression36.resolveBigDecimal();
        org.jboss.dmr.ModelNode modelNode38 = new org.jboss.dmr.ModelNode(bigDecimal37);
        org.jboss.dmr.ModelNode modelNode40 = modelNode38.set((double) (byte) 0);
        org.jboss.dmr.ModelNode modelNode41 = modelNode29.setNoCopy("35", modelNode40);
        java.lang.String str43 = modelNode29.toJSONString(true);
        modelNode29.protect();
        org.jboss.dmr.ModelNode modelNode45 = modelNode18.setNoCopy("rO0ABXQAUXJPMEFCWE55QUJkdmNtY3VhbUp2YzNNdVpHMXlMazF2WkdWc1RtOWtaUnd0b1VTZG80\nNC9EQUFBZUhCM0RIQUFBMmhwSVdVQUEyaHAKSVhnPQ==", modelNode29);
        org.jboss.dmr.ModelNode modelNode46 = new org.jboss.dmr.ModelNode();
        java.lang.Long long47 = modelNode46.asLongOrNull();
        java.lang.String str48 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode46);
        org.jboss.dmr.ModelType modelType50 = org.jboss.dmr.ModelType.LONG;
        org.jboss.dmr.ModelNode modelNode51 = modelNode46.set("rO0ABXNyABFqYXZhLmxhbmcuSW50ZWdlchLioKT3gYc4AgABSQAFdmFsdWV4cgAQamF2YS5sYW5n\nLk51bWJlcoaslR0LlOCLAgAAeHAAAABk", modelType50);
        org.jboss.dmr.ModelNode modelNode52 = modelNode45.set(modelType50);
        org.jboss.dmr.ModelNode modelNode53 = modelNode5.add("H4sIAAAAAAAAAFvzloG1uIhBPL8oXS8rKb+4WC8lt0jPNz8lNccPSMjoLnSZu7jPnoeBoaKgnNWT\ngYFBuQIAwPz32jQAAAA=", modelNode52);
        org.jboss.dmr.ModelNode modelNode55 = modelNode53.require(0);
        org.junit.Assert.assertNotNull(booleanModelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1]" + "'", str7, "[1]");
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(booleanModelValue11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue13);
        org.junit.Assert.assertNotNull(bigInteger14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1" + "'", str16, "1");
        org.junit.Assert.assertNotNull(bigInteger17);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(valueExpression25);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "10" + "'", str31, "10");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertNotNull(valueExpression36);
        org.junit.Assert.assertNotNull(bigDecimal37);
        org.junit.Assert.assertNotNull(modelNode40);
        org.junit.Assert.assertNotNull(modelNode41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "{ \"35\" : 0.0 }" + "'", str43, "{ \"35\" : 0.0 }");
        org.junit.Assert.assertNotNull(modelNode45);
        org.junit.Assert.assertNull(long47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4" + "'", str48, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4");
        org.junit.Assert.assertTrue("'" + modelType50 + "' != '" + org.jboss.dmr.ModelType.LONG + "'", modelType50.equals(org.jboss.dmr.ModelType.LONG));
        org.junit.Assert.assertNotNull(modelNode51);
        org.junit.Assert.assertNotNull(modelNode52);
        org.junit.Assert.assertNotNull(modelNode53);
        org.junit.Assert.assertNotNull(modelNode55);
    }

    @Test
    public void test13080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13080");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.PROPERTY;
        char char1 = modelType0.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue2 = org.jboss.dmr.TypeModelValue.of(modelType0);
        org.jboss.dmr.ModelType modelType3 = org.jboss.dmr.ModelType.PROPERTY;
        char char4 = modelType3.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue5 = org.jboss.dmr.TypeModelValue.of(modelType3);
        boolean boolean6 = typeModelValue2.equals(typeModelValue5);
        java.lang.String str7 = typeModelValue5.asString();
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = modelNode11.asList();
        org.jboss.dmr.ListModelValue listModelValue13 = new org.jboss.dmr.ListModelValue(modelNodeList12);
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue13);
        org.jboss.dmr.ModelValue modelValue15 = listModelValue13.resolve();
        int int17 = listModelValue13.asInt((int) (byte) 100);
        boolean boolean18 = listModelValue13.asBoolean();
        org.jboss.dmr.ModelNode[] modelNodeArray19 = org.jboss.dmr.ListModelValue.NO_NODES;
        boolean boolean20 = listModelValue13.equals((java.lang.Object) modelNodeArray19);
        boolean boolean21 = typeModelValue5.equals((java.lang.Object) listModelValue13);
        org.jboss.dmr.ModelValue modelValue22 = listModelValue13.resolve();
        org.jboss.dmr.ModelValue modelValue23 = listModelValue13.protect();
        java.lang.Throwable throwable25 = null;
        org.jboss.dmr.stream.ModelException modelException26 = new org.jboss.dmr.stream.ModelException("[(\"hi!\" => 0.0)]", throwable25);
        org.jboss.dmr.stream.ModelException modelException27 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException26);
        java.lang.Throwable throwable29 = null;
        org.jboss.dmr.stream.ModelException modelException30 = new org.jboss.dmr.stream.ModelException("[(\"hi!\" => 0.0)]", throwable29);
        org.jboss.dmr.stream.ModelException modelException31 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException30);
        modelException26.addSuppressed((java.lang.Throwable) modelException30);
        boolean boolean33 = listModelValue13.equals((java.lang.Object) modelException26);
        org.jboss.dmr.ModelType modelType34 = listModelValue13.getType();
        int int36 = listModelValue13.asInt(0);
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType0.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char1 + "' != '" + 'p' + "'", char1 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue2);
        org.junit.Assert.assertTrue("'" + modelType3 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType3.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char4 + "' != '" + 'p' + "'", char4 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PROPERTY" + "'", str7, "PROPERTY");
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNodeList12);
        org.junit.Assert.assertNotNull(modelValue15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(modelNodeArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(modelValue22);
        org.junit.Assert.assertNotNull(modelValue23);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + modelType34 + "' != '" + org.jboss.dmr.ModelType.LIST + "'", modelType34.equals(org.jboss.dmr.ModelType.LIST));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
    }

    @Test
    public void test13081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13081");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (byte) -1);
        org.jboss.dmr.DoubleModelValue doubleModelValue3 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        int int5 = doubleModelValue3.asInt((int) 'l');
        java.math.BigDecimal bigDecimal6 = doubleModelValue3.asBigDecimal();
        boolean boolean7 = doubleModelValue1.equals(doubleModelValue3);
        org.jboss.dmr.ModelNode modelNode9 = new org.jboss.dmr.ModelNode(35L);
        org.jboss.dmr.ModelNode modelNode11 = modelNode9.set((int) '4');
        boolean boolean12 = doubleModelValue3.equals((java.lang.Object) modelNode11);
        long long14 = doubleModelValue3.asLong((long) (short) -1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10L + "'", long14 == 10L);
    }

    @Test
    public void test13082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13082");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList5 = modelNode4.asList();
        org.jboss.dmr.ListModelValue listModelValue6 = new org.jboss.dmr.ListModelValue(modelNodeList5);
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue6);
        org.jboss.dmr.ModelValue modelValue8 = listModelValue6.resolve();
        int int10 = listModelValue6.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList11 = listModelValue6.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList12 = listModelValue6.asPropertyList();
        org.jboss.dmr.ModelNode modelNode14 = listModelValue6.getChild((int) (short) 0);
        org.jboss.dmr.PropertyModelValue propertyModelValue15 = new org.jboss.dmr.PropertyModelValue("TYPE_MODEL_VALUE", modelNode14);
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNodeList5);
        org.junit.Assert.assertNotNull(modelValue8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(propertyList11);
        org.junit.Assert.assertNotNull(propertyList12);
        org.junit.Assert.assertNotNull(modelNode14);
    }

    @Test
    public void test13083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13083");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        org.jboss.dmr.ValueExpression valueExpression2 = stringModelValue1.asExpression();
        boolean boolean4 = stringModelValue1.equals((java.lang.Object) (-1.0d));
        java.lang.String str5 = stringModelValue1.asString();
        org.jboss.dmr.stream.ModelEvent modelEvent6 = org.jboss.dmr.stream.ModelEvent.UNDEFINED;
        boolean boolean7 = stringModelValue1.equals((java.lang.Object) modelEvent6);
        org.jboss.dmr.StringModelValue stringModelValue9 = new org.jboss.dmr.StringModelValue("");
        org.jboss.dmr.ModelNode modelNode11 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int12 = modelNode11.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long15 = modelNode14.asLong();
        org.jboss.dmr.ValueExpression valueExpression16 = modelNode14.asExpression();
        java.math.BigDecimal bigDecimal17 = valueExpression16.resolveBigDecimal();
        org.jboss.dmr.ModelNode modelNode18 = modelNode11.set(valueExpression16);
        org.jboss.dmr.Property property20 = new org.jboss.dmr.Property("\"1L\"", modelNode11, false);
        org.jboss.dmr.PropertyModelValue propertyModelValue21 = new org.jboss.dmr.PropertyModelValue(property20);
        boolean boolean22 = stringModelValue9.equals((java.lang.Object) property20);
        boolean boolean23 = stringModelValue1.equals(stringModelValue9);
        org.jboss.dmr.IntModelValue intModelValue25 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str26 = intModelValue25.asString();
        double double28 = intModelValue25.asDouble((double) 2);
        java.math.BigDecimal bigDecimal29 = intModelValue25.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode30 = new org.jboss.dmr.ModelNode(bigDecimal29);
        org.jboss.dmr.ModelNode modelNode31 = modelNode30.clear();
        boolean boolean32 = stringModelValue9.equals((java.lang.Object) modelNode31);
        java.io.PrintWriter printWriter33 = null;
        // The following exception was thrown during execution in test generation
        try {
            stringModelValue9.formatAsJSON(printWriter33, 32, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(valueExpression2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(\"\" => (\"hi!\" => 0.0))" + "'", str5, "(\"\" => (\"hi!\" => 0.0))");
        org.junit.Assert.assertTrue("'" + modelEvent6 + "' != '" + org.jboss.dmr.stream.ModelEvent.UNDEFINED + "'", modelEvent6.equals(org.jboss.dmr.stream.ModelEvent.UNDEFINED));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertNotNull(valueExpression16);
        org.junit.Assert.assertNotNull(bigDecimal17);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "32" + "'", str26, "32");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 32.0d + "'", double28 == 32.0d);
        org.junit.Assert.assertNotNull(bigDecimal29);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test13084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13084");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        java.lang.String str5 = modelNode1.toString();
        org.jboss.dmr.ModelNode modelNode6 = modelNode1.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(100);
        org.jboss.dmr.ModelNode modelNode9 = modelNode0.add(modelNode1);
        org.jboss.dmr.ModelNode modelNode11 = modelNode9.set(4.9E-324d);
        org.jboss.dmr.DoubleModelValue doubleModelValue13 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        int int15 = doubleModelValue13.asInt((int) 'l');
        java.math.BigDecimal bigDecimal16 = doubleModelValue13.asBigDecimal();
        byte[] byteArray17 = doubleModelValue13.asBytes();
        double double19 = doubleModelValue13.asDouble(1.0d);
        java.lang.String str20 = doubleModelValue13.asString();
        byte[] byteArray21 = doubleModelValue13.asBytes();
        org.jboss.dmr.ModelNode modelNode22 = modelNode11.set(byteArray21);
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(\"hi!\" => 0.0)" + "'", str5, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertNotNull(bigDecimal16);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "10.0" + "'", str20, "10.0");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(modelNode22);
    }

    @Test
    public void test13085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13085");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) 100);
        org.jboss.dmr.ModelNode modelNode3 = modelNode1.set((int) '#');
        boolean boolean4 = modelNode1.isProtected();
        java.math.BigDecimal bigDecimal5 = modelNode1.asBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue6 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal5);
        int int8 = bigDecimalModelValue6.asInt((int) 'p');
        org.jboss.dmr.ModelNode modelNode10 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long11 = modelNode10.asLong();
        org.jboss.dmr.ValueExpression valueExpression12 = modelNode10.asExpression();
        java.math.BigDecimal bigDecimal13 = valueExpression12.resolveBigDecimal();
        java.lang.String str14 = valueExpression12.getExpressionString();
        java.math.BigDecimal bigDecimal15 = valueExpression12.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue16 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal15);
        int int18 = bigDecimalModelValue16.asInt(0);
        org.jboss.dmr.ModelValue modelValue19 = bigDecimalModelValue16.protect();
        boolean boolean20 = bigDecimalModelValue6.equals(bigDecimalModelValue16);
        double double22 = bigDecimalModelValue16.asDouble((double) 32);
        java.math.BigDecimal bigDecimal23 = bigDecimalModelValue16.asBigDecimal();
        java.io.PrintWriter printWriter24 = null;
        // The following exception was thrown during execution in test generation
        try {
            bigDecimalModelValue16.format(printWriter24, 112, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(bigDecimal5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 35 + "'", int8 == 35);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertNotNull(valueExpression12);
        org.junit.Assert.assertNotNull(bigDecimal13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1.0" + "'", str14, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(modelValue19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(bigDecimal23);
    }

    @Test
    public void test13086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13086");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long3 = intModelValue1.asLong((long) '#');
        org.jboss.dmr.IntModelValue intModelValue5 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long7 = intModelValue5.asLong((long) 'b');
        java.lang.String str8 = intModelValue5.asString();
        boolean boolean9 = intModelValue1.equals(intModelValue5);
        int int10 = intModelValue5.asInt();
        org.jboss.dmr.ModelNode modelNode11 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) intModelValue5);
        byte[] byteArray12 = intModelValue5.asBytes();
        boolean boolean14 = org.jboss.dmr.Base64.encodeToFile(byteArray12, "Expression \"32\"");
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 32L + "'", long3 == 32L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 32L + "'", long7 == 32L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "32" + "'", str8, "32");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 0, 0, 32]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test13087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13087");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((long) 10);
        java.lang.String str3 = modelNode1.asString("true");
        org.jboss.dmr.ModelNode modelNode6 = modelNode1.set("expression \"hi!\"", (int) (short) -1);
        org.jboss.dmr.ModelNode modelNode7 = modelNode6.clear();
        java.lang.Integer int8 = modelNode6.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode10 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode13 = modelNode10.set("hi!", 0.0d);
        java.lang.String str14 = modelNode10.toString();
        org.jboss.dmr.ModelNode modelNode15 = modelNode10.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode17 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode20 = modelNode17.set("hi!", 0.0d);
        org.jboss.dmr.Property property21 = new org.jboss.dmr.Property("", modelNode20);
        org.jboss.dmr.ModelNode modelNode22 = modelNode10.set(property21);
        org.jboss.dmr.PropertyModelValue propertyModelValue24 = new org.jboss.dmr.PropertyModelValue("EXPRESSION_VALUE", modelNode22, false);
        boolean boolean26 = modelNode22.has(2);
        org.jboss.dmr.BooleanModelValue booleanModelValue29 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long30 = booleanModelValue29.asLong();
        org.jboss.dmr.ValueExpression valueExpression31 = booleanModelValue29.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue32 = new org.jboss.dmr.ExpressionValue(valueExpression31);
        java.lang.String str33 = valueExpression31.getExpressionString();
        org.jboss.dmr.ModelNode modelNode34 = modelNode22.set("true", valueExpression31);
        org.jboss.dmr.Property property35 = modelNode34.asProperty();
        org.jboss.dmr.ModelNode modelNode36 = modelNode6.set(property35);
        org.jboss.dmr.IntModelValue intModelValue40 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str41 = intModelValue40.asString();
        double double43 = intModelValue40.asDouble((double) 100);
        java.math.BigInteger bigInteger44 = intModelValue40.asBigInteger();
        org.jboss.dmr.ModelNode modelNode45 = new org.jboss.dmr.ModelNode(bigInteger44);
        boolean boolean47 = modelNode45.hasDefined((int) '4');
        org.jboss.dmr.ModelNode modelNode48 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode51 = modelNode48.setExpression("hi!", "hi!");
        java.lang.String str52 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode48);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList53 = modelNode48.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode55 = modelNode48.set((double) 0);
        org.jboss.dmr.ModelNode modelNode56 = modelNode48.clear();
        org.jboss.dmr.ObjectModelValue objectModelValue57 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode58 = objectModelValue57.asObject();
        java.util.Set<java.lang.String> strSet59 = objectModelValue57.getKeys();
        org.jboss.dmr.ModelNode modelNode61 = objectModelValue57.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        boolean boolean62 = objectModelValue57.asBoolean();
        int int64 = objectModelValue57.asInt((int) 'b');
        org.jboss.dmr.ModelNode modelNode65 = objectModelValue57.asObject();
        java.util.Set<java.lang.String> strSet66 = modelNode65.keys();
        org.jboss.dmr.ModelNode modelNode67 = modelNode48.add(modelNode65);
        org.jboss.dmr.ModelNode modelNode68 = modelNode48.resolve();
        org.jboss.dmr.ModelNode modelNode69 = modelNode68.setEmptyList();
        org.jboss.dmr.ModelNode modelNode70 = modelNode45.set(modelNode68);
        org.jboss.dmr.Property property72 = new org.jboss.dmr.Property("\"true\"", modelNode45, true);
        org.jboss.dmr.ModelNode modelNode73 = modelNode6.set("(\"rO0ABXNyABFqYXZhLmxhbmcuSW50ZWdlchLioKT3gYc4AgABSQAFdmFsdWV4cgAQamF2YS5sYW5n\nLk51bWJlcoaslR0LlOCLAgAAeHAAAABk\" => LONG)", modelNode45);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode75 = modelNode6.require(0);
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child exists at index [0]");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "10" + "'", str3, "10");
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(\"hi!\" => 0.0)" + "'", str14, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode15);
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(modelNode22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(booleanModelValue29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertNotNull(valueExpression31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "true" + "'", str33, "true");
        org.junit.Assert.assertNotNull(modelNode34);
        org.junit.Assert.assertNotNull(property35);
        org.junit.Assert.assertNotNull(modelNode36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "32" + "'", str41, "32");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 32.0d + "'", double43 == 32.0d);
        org.junit.Assert.assertNotNull(bigInteger44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(modelNode51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str52, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList53);
        org.junit.Assert.assertNotNull(modelNode55);
        org.junit.Assert.assertNotNull(modelNode56);
        org.junit.Assert.assertNotNull(modelNode58);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertNull(modelNode61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(modelNode65);
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertNotNull(modelNode67);
        org.junit.Assert.assertNotNull(modelNode68);
        org.junit.Assert.assertNotNull(modelNode69);
        org.junit.Assert.assertNotNull(modelNode70);
        org.junit.Assert.assertNotNull(modelNode73);
    }

    @Test
    public void test13088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13088");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        java.lang.String str2 = doubleModelValue1.asString();
        long long4 = doubleModelValue1.asLong((long) (short) -1);
        double double6 = doubleModelValue1.asDouble(0.0d);
        org.jboss.dmr.DoubleModelValue doubleModelValue8 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long9 = doubleModelValue8.asLong();
        boolean boolean10 = doubleModelValue8.asBoolean();
        byte[] byteArray11 = doubleModelValue8.asBytes();
        int int13 = doubleModelValue8.asInt((int) ' ');
        boolean boolean14 = doubleModelValue8.asBoolean();
        java.math.BigInteger bigInteger15 = doubleModelValue8.asBigInteger();
        boolean boolean16 = doubleModelValue1.equals(doubleModelValue8);
        java.lang.String str17 = doubleModelValue1.asString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "10.0" + "'", str2, "10.0");
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10L + "'", long4 == 10L);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10L + "'", long9 == 10L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(bigInteger15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "10.0" + "'", str17, "10.0");
    }

    @Test
    public void test13089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13089");
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode((int) 'a');
        org.jboss.dmr.Property property3 = new org.jboss.dmr.Property("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]", modelNode2);
        org.jboss.dmr.Property property4 = property3.clone();
        org.junit.Assert.assertNotNull(property4);
    }

    @Test
    public void test13090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13090");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue(32);
    }

    @Test
    public void test13091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13091");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.setExpression("hi!", "hi!");
        org.jboss.dmr.ModelNode modelNode5 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode8 = modelNode5.set("hi!", 0.0d);
        org.jboss.dmr.Property property9 = new org.jboss.dmr.Property("", modelNode8);
        boolean boolean11 = modelNode8.equals((java.lang.Object) 100L);
        boolean boolean12 = modelNode0.equals(modelNode8);
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode17 = modelNode14.set("hi!", 0.0d);
        org.jboss.dmr.Property property18 = new org.jboss.dmr.Property("", modelNode17);
        java.lang.String[] strArray19 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode20 = modelNode17.get(strArray19);
        org.jboss.dmr.ModelNode modelNode21 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int22 = modelNode21.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode23 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode26 = modelNode23.setExpression("hi!", "hi!");
        java.lang.String str27 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode23);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList28 = modelNode23.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode29 = modelNode21.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList28);
        org.jboss.dmr.ModelNode modelNode30 = modelNode20.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList28);
        org.jboss.dmr.ModelNode modelNode31 = modelNode8.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList28);
        org.jboss.dmr.ModelNode modelNode33 = modelNode8.add("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4");
        org.jboss.dmr.ModelNode modelNode35 = modelNode8.add(false);
        org.jboss.dmr.StringModelValue stringModelValue38 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.StringModelValue stringModelValue40 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        boolean boolean41 = stringModelValue38.equals(stringModelValue40);
        byte[] byteArray42 = stringModelValue40.asBytes();
        org.jboss.dmr.ModelNode modelNode43 = new org.jboss.dmr.ModelNode(byteArray42);
        org.jboss.dmr.ModelNode modelNode44 = modelNode8.add("H4sIAAAAAAAAAFvzloG1tIiBKdppzWfxH2wcIQ+YGBgqChgYGBgZASVtzhAcAAAA", byteArray42);
        org.jboss.dmr.ModelNode modelNode47 = modelNode44.setExpression("Expression \"1\"", "AQ==");
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str27, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList28);
        org.junit.Assert.assertNotNull(modelNode29);
        org.junit.Assert.assertNotNull(modelNode30);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(modelNode33);
        org.junit.Assert.assertNotNull(modelNode35);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[40, 34, 34, 32, 61, 62, 32, 40, 34, 104, 105, 33, 34, 32, 61, 62, 32, 48, 46, 48, 41, 41]");
        org.junit.Assert.assertNotNull(modelNode44);
        org.junit.Assert.assertNotNull(modelNode47);
    }

    @Test
    public void test13092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13092");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str2 = longModelValue1.asString();
        byte[] byteArray3 = longModelValue1.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue4 = new org.jboss.dmr.BytesModelValue(byteArray3);
        java.lang.String str5 = bytesModelValue4.asString();
        int int6 = bytesModelValue4.asInt();
        int int7 = bytesModelValue4.asInt();
        org.jboss.dmr.LongModelValue longModelValue9 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str10 = longModelValue9.asString();
        byte[] byteArray11 = longModelValue9.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue12 = new org.jboss.dmr.BytesModelValue(byteArray11);
        double double13 = bytesModelValue12.asDouble();
        boolean boolean14 = bytesModelValue4.equals(bytesModelValue12);
        byte[] byteArray15 = bytesModelValue12.asBytes();
        java.math.BigDecimal bigDecimal16 = bytesModelValue12.asBigDecimal();
        long long18 = bytesModelValue12.asLong((long) 32);
        java.math.BigDecimal bigDecimal19 = bytesModelValue12.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode20 = new org.jboss.dmr.ModelNode(bigDecimal19);
        boolean boolean22 = modelNode20.has("expression \"hi!\"");
        java.lang.String str23 = modelNode20.toString();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray24 = modelNode20.asBytes();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1" + "'", str2, "1");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str5, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1" + "'", str10, "1");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.9E-324d + "'", double13 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(bigDecimal16);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(bigDecimal19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "big decimal 1" + "'", str23, "big decimal 1");
    }

    @Test
    public void test13093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13093");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        long long5 = objectModelValue0.asLong();
        org.jboss.dmr.ModelNode modelNode7 = objectModelValue0.removeChild("52");
        org.jboss.dmr.ModelNode modelNode9 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long10 = modelNode9.asLong();
        org.jboss.dmr.ValueExpression valueExpression11 = modelNode9.asExpression();
        java.math.BigDecimal bigDecimal12 = valueExpression11.resolveBigDecimal();
        java.lang.String str13 = valueExpression11.getExpressionString();
        java.math.BigDecimal bigDecimal14 = valueExpression11.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue15 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal14);
        java.math.BigInteger bigInteger16 = bigDecimalModelValue15.asBigInteger();
        org.jboss.dmr.ObjectModelValue objectModelValue17 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode18 = objectModelValue17.asObject();
        java.util.Set<java.lang.String> strSet19 = objectModelValue17.getKeys();
        org.jboss.dmr.ModelNode modelNode21 = objectModelValue17.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        boolean boolean22 = objectModelValue17.asBoolean();
        org.jboss.dmr.ModelNode modelNode24 = objectModelValue17.getChild("1L");
        org.jboss.dmr.ObjectModelValue objectModelValue25 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode26 = objectModelValue25.asObject();
        java.util.Set<java.lang.String> strSet27 = objectModelValue25.getKeys();
        org.jboss.dmr.ModelNode modelNode29 = objectModelValue25.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        boolean boolean30 = objectModelValue25.asBoolean();
        int int32 = objectModelValue25.asInt((int) 'b');
        int int34 = objectModelValue25.asInt((int) '#');
        boolean boolean35 = objectModelValue17.equals(objectModelValue25);
        org.jboss.dmr.ModelValue modelValue36 = objectModelValue25.resolve();
        boolean boolean37 = bigDecimalModelValue15.equals((java.lang.Object) modelValue36);
        boolean boolean38 = objectModelValue0.equals((java.lang.Object) bigDecimalModelValue15);
        org.jboss.dmr.ModelNode modelNode40 = new org.jboss.dmr.ModelNode((double) (short) 100);
        org.jboss.dmr.Validation.validate(modelNode40, "(\"org.jboss.dmr.stream.ModelException: [(\\\"hi!\\\" => 0.0)]\" => (\"hi!\" => 0.0))");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory44 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream45 = null;
        org.jboss.dmr.Base64.InputStream inputStream47 = new org.jboss.dmr.Base64.InputStream(inputStream45, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream48 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream47);
        org.jboss.dmr.stream.ModelReader modelReader49 = modelStreamFactory44.newModelReader((java.io.InputStream) inputStream48);
        java.io.OutputStream outputStream50 = null;
        org.jboss.dmr.Base64.OutputStream outputStream51 = new org.jboss.dmr.Base64.OutputStream(outputStream50);
        org.jboss.dmr.Base64.OutputStream outputStream52 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream51);
        outputStream51.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter55 = modelStreamFactory44.newModelWriter((java.io.OutputStream) outputStream51);
        org.jboss.dmr.stream.ModelWriter modelWriter56 = modelWriter55.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter58 = modelWriter55.writeInt((int) '4');
        org.jboss.dmr.ModelNode modelNode59 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode62 = modelNode59.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList63 = modelNode62.asList();
        org.jboss.dmr.ListModelValue listModelValue64 = new org.jboss.dmr.ListModelValue(modelNodeList63);
        org.jboss.dmr.ModelNode modelNode65 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue64);
        org.jboss.dmr.ModelValue modelValue66 = listModelValue64.resolve();
        int int68 = listModelValue64.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList69 = listModelValue64.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList70 = listModelValue64.asPropertyList();
        java.lang.String str71 = listModelValue64.asString();
        int int72 = listModelValue64.asInt();
        java.lang.String str73 = listModelValue64.asString();
        org.jboss.dmr.ModelType modelType74 = org.jboss.dmr.ModelType.DOUBLE;
        org.jboss.dmr.ModelNode modelNode75 = new org.jboss.dmr.ModelNode(modelType74);
        boolean boolean76 = listModelValue64.equals((java.lang.Object) modelType74);
        org.jboss.dmr.TypeModelValue typeModelValue77 = org.jboss.dmr.TypeModelValue.of(modelType74);
        org.jboss.dmr.TypeModelValue typeModelValue78 = org.jboss.dmr.TypeModelValue.of(modelType74);
        org.jboss.dmr.stream.ModelWriter modelWriter79 = modelWriter55.writeType(modelType74);
        modelNode40.write(modelWriter79);
        org.jboss.dmr.stream.ModelWriter modelWriter81 = modelWriter79.writeUndefined();
        bigDecimalModelValue15.write(modelWriter81);
        java.lang.String str83 = bigDecimalModelValue15.asString();
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(modelNode4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(modelNode7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertNotNull(valueExpression11);
        org.junit.Assert.assertNotNull(bigDecimal12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1.0" + "'", str13, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal14);
        org.junit.Assert.assertNotNull(bigInteger16);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(modelNode21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(modelNode29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(modelValue36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(modelStreamFactory44);
        org.junit.Assert.assertNotNull(modelReader49);
        org.junit.Assert.assertNotNull(modelWriter55);
        org.junit.Assert.assertNotNull(modelWriter56);
        org.junit.Assert.assertNotNull(modelWriter58);
        org.junit.Assert.assertNotNull(modelNode62);
        org.junit.Assert.assertNotNull(modelNodeList63);
        org.junit.Assert.assertNotNull(modelValue66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(propertyList69);
        org.junit.Assert.assertNotNull(propertyList70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str71, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str73, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + modelType74 + "' != '" + org.jboss.dmr.ModelType.DOUBLE + "'", modelType74.equals(org.jboss.dmr.ModelType.DOUBLE));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(typeModelValue77);
        org.junit.Assert.assertNotNull(typeModelValue78);
        org.junit.Assert.assertNotNull(modelWriter79);
        org.junit.Assert.assertNotNull(modelWriter81);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "1.0" + "'", str83, "1.0");
    }

    @Test
    public void test13094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13094");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        java.io.InputStream inputStream16 = null;
        org.jboss.dmr.Base64.InputStream inputStream18 = new org.jboss.dmr.Base64.InputStream(inputStream16, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue20 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str21 = longModelValue20.asString();
        byte[] byteArray22 = longModelValue20.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue23 = new org.jboss.dmr.BytesModelValue(byteArray22);
        int int26 = inputStream18.read(byteArray22, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.stream.ModelReader modelReader27 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream18);
        org.jboss.dmr.Base64.InputStream inputStream29 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream18, (int) (byte) -1);
        org.jboss.dmr.ModelNode modelNode31 = new org.jboss.dmr.ModelNode("EXPRESSION_VALUE");
        org.jboss.dmr.ModelNode modelNode32 = modelNode31.clear();
        boolean boolean34 = modelNode31.has((int) '#');
        org.jboss.dmr.ModelNode modelNode37 = modelNode31.add("BYTES_VALUE", "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4");
        boolean boolean39 = modelNode37.has((int) (short) 10);
        org.jboss.dmr.ModelNode modelNode41 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.BooleanModelValue booleanModelValue43 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger44 = booleanModelValue43.asBigInteger();
        org.jboss.dmr.ModelNode modelNode45 = modelNode41.add(bigInteger44);
        org.jboss.dmr.ModelNode modelNode46 = modelNode41.clone();
        org.jboss.dmr.BooleanModelValue booleanModelValue47 = org.jboss.dmr.BooleanModelValue.TRUE;
        java.math.BigInteger bigInteger48 = booleanModelValue47.asBigInteger();
        boolean boolean49 = booleanModelValue47.asBoolean();
        java.math.BigInteger bigInteger50 = booleanModelValue47.asBigInteger();
        org.jboss.dmr.ModelNode modelNode51 = modelNode46.add(bigInteger50);
        org.jboss.dmr.Property property52 = new org.jboss.dmr.Property("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AloAeA==", modelNode46);
        org.jboss.dmr.ModelNode modelNode53 = modelNode37.set(property52);
        org.jboss.dmr.BooleanModelValue booleanModelValue55 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray56 = booleanModelValue55.asBytes();
        org.jboss.dmr.ModelNode modelNode57 = modelNode53.set(byteArray56);
        // The following exception was thrown during execution in test generation
        try {
            int int58 = inputStream18.read(byteArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1" + "'", str21, "1");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(modelReader27);
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(modelNode37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(booleanModelValue43);
        org.junit.Assert.assertNotNull(bigInteger44);
        org.junit.Assert.assertNotNull(modelNode45);
        org.junit.Assert.assertNotNull(modelNode46);
        org.junit.Assert.assertNotNull(booleanModelValue47);
        org.junit.Assert.assertNotNull(bigInteger48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(bigInteger50);
        org.junit.Assert.assertNotNull(modelNode51);
        org.junit.Assert.assertNotNull(modelNode53);
        org.junit.Assert.assertNotNull(booleanModelValue55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[1]");
        org.junit.Assert.assertNotNull(modelNode57);
    }

    @Test
    public void test13095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13095");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) 100);
        boolean boolean2 = modelNode1.asBoolean();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.jboss.dmr.Property> propertyList3 = modelNode1.asPropertyList();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test13096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13096");
        org.jboss.dmr.ModelNode modelNode1 = org.jboss.dmr.ModelNode.fromJSONString("[1]");
        org.jboss.dmr.ModelNode modelNode3 = modelNode1.add(true);
        org.jboss.dmr.ModelNode modelNode6 = modelNode3.set("true", (double) 8);
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode10 = modelNode7.set("hi!", 0.0d);
        java.lang.String str11 = modelNode7.toString();
        org.jboss.dmr.ModelNode modelNode12 = modelNode7.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode14 = modelNode7.set(100);
        org.jboss.dmr.ModelNode modelNode17 = new org.jboss.dmr.ModelNode((double) 100);
        org.jboss.dmr.ModelNode modelNode19 = modelNode17.set((int) '#');
        org.jboss.dmr.ModelNode modelNode20 = modelNode7.setNoCopy("EXPRESSION_VALUE", modelNode19);
        org.jboss.dmr.ModelNode modelNode21 = modelNode20.resolve();
        org.jboss.dmr.ModelType modelType22 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode23 = new org.jboss.dmr.ModelNode(modelType22);
        org.jboss.dmr.ModelNode modelNode25 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode28 = modelNode25.set("hi!", 0.0d);
        org.jboss.dmr.Property property29 = new org.jboss.dmr.Property("", modelNode28);
        org.jboss.dmr.ModelNode modelNode30 = modelNode23.set(property29);
        org.jboss.dmr.PropertyModelValue propertyModelValue31 = new org.jboss.dmr.PropertyModelValue(property29);
        org.jboss.dmr.PropertyModelValue propertyModelValue32 = new org.jboss.dmr.PropertyModelValue(property29);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList33 = propertyModelValue32.asList();
        org.jboss.dmr.ModelNode modelNode34 = modelNode21.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList33);
        org.jboss.dmr.IntModelValue intModelValue37 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str38 = intModelValue37.asString();
        double double40 = intModelValue37.asDouble((double) 2);
        java.math.BigDecimal bigDecimal41 = intModelValue37.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode42 = modelNode34.add("(\"hi!\" => 0.0)", bigDecimal41);
        org.jboss.dmr.ModelNode modelNode43 = modelNode3.set(bigDecimal41);
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue44 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal41);
        long long46 = bigDecimalModelValue44.asLong((long) 112);
        java.math.BigDecimal bigDecimal47 = bigDecimalModelValue44.asBigDecimal();
        double double48 = bigDecimalModelValue44.asDouble();
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(\"hi!\" => 0.0)" + "'", str11, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(modelNode21);
        org.junit.Assert.assertTrue("'" + modelType22 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType22.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode28);
        org.junit.Assert.assertNotNull(modelNode30);
        org.junit.Assert.assertNotNull(modelNodeList33);
        org.junit.Assert.assertNotNull(modelNode34);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "32" + "'", str38, "32");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 32.0d + "'", double40 == 32.0d);
        org.junit.Assert.assertNotNull(bigDecimal41);
        org.junit.Assert.assertNotNull(modelNode42);
        org.junit.Assert.assertNotNull(modelNode43);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 32L + "'", long46 == 32L);
        org.junit.Assert.assertNotNull(bigDecimal47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 32.0d + "'", double48 == 32.0d);
    }

    @Test
    public void test13097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13097");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long3 = intModelValue1.asLong((long) '#');
        org.jboss.dmr.IntModelValue intModelValue5 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long7 = intModelValue5.asLong((long) 'b');
        java.lang.String str8 = intModelValue5.asString();
        boolean boolean9 = intModelValue1.equals(intModelValue5);
        int int10 = intModelValue5.asInt();
        int int12 = intModelValue5.asInt(32);
        org.jboss.dmr.DoubleModelValue doubleModelValue14 = new org.jboss.dmr.DoubleModelValue((double) (byte) -1);
        org.jboss.dmr.DoubleModelValue doubleModelValue16 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        int int18 = doubleModelValue16.asInt((int) 'l');
        java.math.BigDecimal bigDecimal19 = doubleModelValue16.asBigDecimal();
        boolean boolean20 = doubleModelValue14.equals(doubleModelValue16);
        boolean boolean21 = intModelValue5.equals((java.lang.Object) doubleModelValue14);
        byte[] byteArray22 = doubleModelValue14.asBytes();
        boolean boolean24 = doubleModelValue14.asBoolean(false);
        long long25 = doubleModelValue14.asLong();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 32L + "'", long3 == 32L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 32L + "'", long7 == 32L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "32" + "'", str8, "32");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertNotNull(bigDecimal19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-65, -16, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
    }

    @Test
    public void test13098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13098");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(false);
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int3 = modelNode2.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode5 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long6 = modelNode5.asLong();
        org.jboss.dmr.ValueExpression valueExpression7 = modelNode5.asExpression();
        java.math.BigDecimal bigDecimal8 = valueExpression7.resolveBigDecimal();
        org.jboss.dmr.ModelNode modelNode9 = modelNode2.set(valueExpression7);
        org.jboss.dmr.ModelNode modelNode11 = modelNode2.set("AQ==");
        boolean boolean12 = modelNode1.equals(modelNode11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.jboss.dmr.ModelNode> modelNodeList13 = modelNode1.asList();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertNotNull(valueExpression7);
        org.junit.Assert.assertNotNull(bigDecimal8);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test13099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13099");
        java.io.OutputStream outputStream0 = null;
        org.jboss.dmr.Base64.OutputStream outputStream1 = new org.jboss.dmr.Base64.OutputStream(outputStream0);
        outputStream1.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream3 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream1);
        org.jboss.dmr.Base64.OutputStream outputStream4 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream3);
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode("EXPRESSION_VALUE");
        org.jboss.dmr.BooleanModelValue booleanModelValue9 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger10 = booleanModelValue9.asBigInteger();
        byte[] byteArray11 = booleanModelValue9.asBytes();
        org.jboss.dmr.ModelNode modelNode12 = modelNode6.set("expression \"hi!\"", byteArray11);
        outputStream3.write(byteArray11);
        org.jboss.dmr.BytesModelValue bytesModelValue14 = new org.jboss.dmr.BytesModelValue(byteArray11);
        org.jboss.dmr.ModelType modelType15 = bytesModelValue14.getType();
        int int17 = bytesModelValue14.asInt(2);
        java.lang.String str18 = bytesModelValue14.asString();
        org.junit.Assert.assertNotNull(booleanModelValue9);
        org.junit.Assert.assertNotNull(bigInteger10);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1]");
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertTrue("'" + modelType15 + "' != '" + org.jboss.dmr.ModelType.BYTES + "'", modelType15.equals(org.jboss.dmr.ModelType.BYTES));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "bytes { 0x01 }" + "'", str18, "bytes { 0x01 }");
    }

    @Test
    public void test13100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13100");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue(10);
        byte[] byteArray2 = intModelValue1.asBytes();
        int int4 = intModelValue1.asInt(0);
        int int5 = intModelValue1.asInt();
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode9 = modelNode6.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList10 = modelNode9.asList();
        org.jboss.dmr.ModelType modelType11 = modelNode9.getType();
        org.jboss.dmr.TypeModelValue typeModelValue12 = org.jboss.dmr.TypeModelValue.of(modelType11);
        java.lang.String str13 = typeModelValue12.asString();
        java.lang.String str14 = typeModelValue12.asString();
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode18 = modelNode15.setExpression("hi!", "hi!");
        java.lang.String str19 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode15);
        boolean boolean21 = modelNode15.hasDefined((-1));
        org.jboss.dmr.BooleanModelValue booleanModelValue22 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double23 = booleanModelValue22.asDouble();
        org.jboss.dmr.ModelValue modelValue24 = booleanModelValue22.copy();
        java.math.BigInteger bigInteger25 = booleanModelValue22.asBigInteger();
        org.jboss.dmr.ModelNode modelNode26 = new org.jboss.dmr.ModelNode(bigInteger25);
        org.jboss.dmr.ModelNode modelNode27 = new org.jboss.dmr.ModelNode(bigInteger25);
        org.jboss.dmr.ModelNode modelNode28 = modelNode15.set(bigInteger25);
        org.jboss.dmr.ModelNode modelNode29 = new org.jboss.dmr.ModelNode(bigInteger25);
        org.jboss.dmr.ModelType modelType30 = modelNode29.getType();
        boolean boolean31 = typeModelValue12.equals((java.lang.Object) modelType30);
        org.jboss.dmr.ValueExpression valueExpression32 = typeModelValue12.asExpression();
        boolean boolean33 = intModelValue1.equals((java.lang.Object) typeModelValue12);
        org.jboss.dmr.ModelType modelType34 = typeModelValue12.asType();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode35 = typeModelValue12.addChild();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0, 0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(modelNodeList10);
        org.junit.Assert.assertTrue("'" + modelType11 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType11.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertNotNull(typeModelValue12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PROPERTY" + "'", str13, "PROPERTY");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PROPERTY" + "'", str14, "PROPERTY");
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str19, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(booleanModelValue22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue24);
        org.junit.Assert.assertNotNull(bigInteger25);
        org.junit.Assert.assertNotNull(modelNode28);
        org.junit.Assert.assertTrue("'" + modelType30 + "' != '" + org.jboss.dmr.ModelType.BIG_INTEGER + "'", modelType30.equals(org.jboss.dmr.ModelType.BIG_INTEGER));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(valueExpression32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + modelType34 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType34.equals(org.jboss.dmr.ModelType.PROPERTY));
    }

    @Test
    public void test13101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13101");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long3 = intModelValue1.asLong((long) 'b');
        java.lang.String str4 = intModelValue1.asString();
        java.math.BigInteger bigInteger5 = intModelValue1.asBigInteger();
        boolean boolean7 = intModelValue1.asBoolean(false);
        org.jboss.dmr.IntModelValue intModelValue9 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long11 = intModelValue9.asLong((long) 'b');
        java.lang.String str12 = intModelValue9.asString();
        boolean boolean13 = intModelValue1.equals(intModelValue9);
        byte[] byteArray14 = intModelValue9.asBytes();
        org.jboss.dmr.ModelValue modelValue15 = intModelValue9.clone();
        long long17 = intModelValue9.asLong((long) 'i');
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 32L + "'", long3 == 32L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "32" + "'", str4, "32");
        org.junit.Assert.assertNotNull(bigInteger5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 32L + "'", long11 == 32L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "32" + "'", str12, "32");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 0, 0, 32]");
        org.junit.Assert.assertNotNull(modelValue15);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 32L + "'", long17 == 32L);
    }

    @Test
    public void test13102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13102");
        java.io.OutputStream outputStream0 = null;
        org.jboss.dmr.Base64.OutputStream outputStream1 = new org.jboss.dmr.Base64.OutputStream(outputStream0);
        outputStream1.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream3 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream1);
        org.jboss.dmr.Base64.OutputStream outputStream4 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream3);
        outputStream4.flushBase64();
        outputStream4.resumeEncoding();
        org.jboss.dmr.LongModelValue longModelValue8 = new org.jboss.dmr.LongModelValue(1L);
        long long9 = longModelValue8.asLong();
        byte[] byteArray10 = longModelValue8.asBytes();
        outputStream4.write(byteArray10, 0, (-1));
        outputStream4.suspendEncoding();
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[0, 0, 0, 0, 0, 0, 0, 1]");
    }

    @Test
    public void test13103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13103");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        org.jboss.dmr.IntModelValue intModelValue3 = new org.jboss.dmr.IntModelValue(10);
        boolean boolean5 = intModelValue3.asBoolean(false);
        boolean boolean6 = intModelValue1.equals(intModelValue3);
        double double8 = intModelValue1.asDouble((double) (-1));
        org.jboss.dmr.ValueExpression valueExpression9 = intModelValue1.asExpression();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 32.0d + "'", double8 == 32.0d);
        org.junit.Assert.assertNotNull(valueExpression9);
    }

    @Test
    public void test13104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13104");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode("EXPRESSION_VALUE");
        org.jboss.dmr.ModelNode modelNode2 = modelNode1.clear();
        org.jboss.dmr.ModelNode modelNode4 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.BooleanModelValue booleanModelValue6 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger7 = booleanModelValue6.asBigInteger();
        org.jboss.dmr.ModelNode modelNode8 = modelNode4.add(bigInteger7);
        org.jboss.dmr.ModelNode modelNode9 = new org.jboss.dmr.ModelNode(bigInteger7);
        boolean boolean10 = modelNode9.isProtected();
        org.jboss.dmr.ModelNode modelNode11 = modelNode9.clone();
        org.jboss.dmr.ModelNode modelNode13 = modelNode9.set((long) (-1));
        org.jboss.dmr.ModelNode modelNode14 = modelNode2.setNoCopy("(\"true\" => big decimal 1.0)", modelNode9);
        org.jboss.dmr.DoubleModelValue doubleModelValue16 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        int int18 = doubleModelValue16.asInt((int) 'l');
        java.math.BigDecimal bigDecimal19 = doubleModelValue16.asBigDecimal();
        byte[] byteArray20 = doubleModelValue16.asBytes();
        double double22 = doubleModelValue16.asDouble(1.0d);
        java.lang.String str23 = doubleModelValue16.asString();
        boolean boolean24 = doubleModelValue16.asBoolean();
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory26 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream27 = null;
        org.jboss.dmr.Base64.InputStream inputStream29 = new org.jboss.dmr.Base64.InputStream(inputStream27, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream30 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream29);
        org.jboss.dmr.stream.ModelReader modelReader31 = modelStreamFactory26.newModelReader((java.io.InputStream) inputStream30);
        java.io.OutputStream outputStream32 = null;
        org.jboss.dmr.Base64.OutputStream outputStream33 = new org.jboss.dmr.Base64.OutputStream(outputStream32);
        org.jboss.dmr.Base64.OutputStream outputStream34 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream33);
        outputStream33.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter37 = modelStreamFactory26.newModelWriter((java.io.OutputStream) outputStream33);
        org.jboss.dmr.stream.ModelWriter modelWriter38 = modelWriter37.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter40 = modelWriter38.writeInt((int) (byte) 10);
        java.io.InputStream inputStream41 = null;
        org.jboss.dmr.Base64.InputStream inputStream43 = new org.jboss.dmr.Base64.InputStream(inputStream41, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue45 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str46 = longModelValue45.asString();
        byte[] byteArray47 = longModelValue45.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue48 = new org.jboss.dmr.BytesModelValue(byteArray47);
        int int51 = inputStream43.read(byteArray47, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter52 = modelWriter40.writeBytes(byteArray47);
        org.jboss.dmr.ModelNode modelNode54 = org.jboss.dmr.ModelNode.fromString("\"rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3GXAAEGV4cHJlc3Np\\nb24gImhpISJiAAAAAQF4\"");
        org.jboss.dmr.ModelNode modelNode56 = modelNode54.setExpression("AAAAIA==");
        org.jboss.dmr.ModelNode modelNode59 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long60 = modelNode59.asLong();
        org.jboss.dmr.ValueExpression valueExpression61 = modelNode59.asExpression();
        java.math.BigDecimal bigDecimal62 = valueExpression61.resolveBigDecimal();
        java.lang.String str63 = valueExpression61.getExpressionString();
        java.math.BigDecimal bigDecimal64 = valueExpression61.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue65 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal64);
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue66 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal64);
        org.jboss.dmr.ModelNode modelNode67 = modelNode54.set("\"(\\\"\\\" => (\\\"hi!\\\" => 0.0))\"", bigDecimal64);
        org.jboss.dmr.stream.ModelWriter modelWriter68 = modelWriter52.writeBigDecimal(bigDecimal64);
        org.jboss.dmr.stream.ModelWriter modelWriter70 = modelWriter52.writeExpression("(\"(\\\"\\\" => (\\\"hi!\\\" => 0.0))\" => expression \"\")");
        doubleModelValue16.write(modelWriter52);
        modelNode9.write(modelWriter52);
        org.jboss.dmr.BooleanModelValue booleanModelValue73 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double74 = booleanModelValue73.asDouble();
        org.jboss.dmr.ModelValue modelValue75 = booleanModelValue73.copy();
        java.math.BigInteger bigInteger76 = booleanModelValue73.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue77 = new org.jboss.dmr.BigIntegerModelValue(bigInteger76);
        int int79 = bigIntegerModelValue77.asInt((int) (short) 1);
        org.jboss.dmr.BooleanModelValue booleanModelValue80 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double81 = booleanModelValue80.asDouble();
        org.jboss.dmr.ModelValue modelValue82 = booleanModelValue80.copy();
        java.math.BigInteger bigInteger83 = booleanModelValue80.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue84 = new org.jboss.dmr.BigIntegerModelValue(bigInteger83);
        java.lang.String str85 = bigIntegerModelValue84.asString();
        java.math.BigInteger bigInteger86 = bigIntegerModelValue84.asBigInteger();
        boolean boolean87 = bigIntegerModelValue77.equals(bigIntegerModelValue84);
        int int88 = bigIntegerModelValue84.asInt();
        org.jboss.dmr.ValueExpression valueExpression89 = bigIntegerModelValue84.asExpression();
        java.math.BigInteger bigInteger90 = valueExpression89.resolveBigInteger();
        org.jboss.dmr.ModelNode modelNode91 = modelNode9.set(valueExpression89);
        org.junit.Assert.assertNotNull(modelNode2);
        org.junit.Assert.assertNotNull(booleanModelValue6);
        org.junit.Assert.assertNotNull(bigInteger7);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertNotNull(bigDecimal19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "10.0" + "'", str23, "10.0");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(modelStreamFactory26);
        org.junit.Assert.assertNotNull(modelReader31);
        org.junit.Assert.assertNotNull(modelWriter37);
        org.junit.Assert.assertNotNull(modelWriter38);
        org.junit.Assert.assertNotNull(modelWriter40);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1" + "'", str46, "1");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(modelWriter52);
        org.junit.Assert.assertNotNull(modelNode54);
        org.junit.Assert.assertNotNull(modelNode56);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 1L + "'", long60 == 1L);
        org.junit.Assert.assertNotNull(valueExpression61);
        org.junit.Assert.assertNotNull(bigDecimal62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "1.0" + "'", str63, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal64);
        org.junit.Assert.assertNotNull(modelNode67);
        org.junit.Assert.assertNotNull(modelWriter68);
        org.junit.Assert.assertNotNull(modelWriter70);
        org.junit.Assert.assertNotNull(booleanModelValue73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue75);
        org.junit.Assert.assertNotNull(bigInteger76);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertNotNull(booleanModelValue80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.0d + "'", double81 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue82);
        org.junit.Assert.assertNotNull(bigInteger83);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "1" + "'", str85, "1");
        org.junit.Assert.assertNotNull(bigInteger86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertNotNull(valueExpression89);
        org.junit.Assert.assertNotNull(bigInteger90);
        org.junit.Assert.assertNotNull(modelNode91);
    }

    @Test
    public void test13105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13105");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.removeChild("hi!");
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList5 = objectModelValue0.asList();
        long long6 = objectModelValue0.asLong();
        boolean boolean8 = objectModelValue0.has("\"PROPERTY_VALUE\"");
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNodeList5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test13106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13106");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        java.lang.String str6 = modelNode3.asString("true");
        org.jboss.dmr.ModelNode modelNode8 = modelNode3.set((double) 'a');
        org.jboss.dmr.IntModelValue intModelValue10 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str11 = intModelValue10.asString();
        double double13 = intModelValue10.asDouble((double) 2);
        java.math.BigDecimal bigDecimal14 = intModelValue10.asBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue15 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal14);
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue16 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal14);
        org.jboss.dmr.ModelNode modelNode17 = modelNode8.set(bigDecimal14);
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue18 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal14);
        java.io.DataOutput dataOutput19 = null;
        // The following exception was thrown during execution in test generation
        try {
            bigDecimalModelValue18.writeExternal(dataOutput19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "(\"hi!\" => 0.0)" + "'", str6, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "32" + "'", str11, "32");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 32.0d + "'", double13 == 32.0d);
        org.junit.Assert.assertNotNull(bigDecimal14);
        org.junit.Assert.assertNotNull(modelNode17);
    }

    @Test
    public void test13107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13107");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isBigInteger();
        boolean boolean17 = modelReader15.isLong();
        boolean boolean18 = modelReader15.isBigDecimal();
        boolean boolean19 = modelReader15.isUndefined();
        boolean boolean20 = modelReader15.isUndefined();
        boolean boolean21 = modelReader15.isListStart();
        boolean boolean22 = modelReader15.isListStart();
        boolean boolean23 = modelReader15.isUndefined();
        boolean boolean24 = modelReader15.isBytes();
        boolean boolean25 = modelReader15.isPropertyEnd();
        boolean boolean26 = modelReader15.isDouble();
        boolean boolean27 = modelReader15.isBoolean();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test13108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13108");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream5 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4);
        org.jboss.dmr.stream.ModelReader modelReader6 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream5);
        java.io.OutputStream outputStream7 = null;
        org.jboss.dmr.Base64.OutputStream outputStream8 = new org.jboss.dmr.Base64.OutputStream(outputStream7);
        org.jboss.dmr.Base64.OutputStream outputStream9 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream8);
        outputStream8.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter12 = modelStreamFactory1.newModelWriter((java.io.OutputStream) outputStream8);
        java.io.OutputStream outputStream13 = null;
        org.jboss.dmr.Base64.OutputStream outputStream14 = new org.jboss.dmr.Base64.OutputStream(outputStream13);
        outputStream14.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream16 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream14);
        org.jboss.dmr.Base64.OutputStream outputStream17 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream16);
        org.jboss.dmr.BooleanModelValue booleanModelValue19 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger20 = booleanModelValue19.asBigInteger();
        byte[] byteArray21 = booleanModelValue19.asBytes();
        boolean boolean23 = org.jboss.dmr.Base64.encodeToFile(byteArray21, "1L");
        boolean boolean25 = org.jboss.dmr.Base64.encodeToFile(byteArray21, "[(\"hi!\" => 0.0)]");
        outputStream17.write(byteArray21);
        outputStream17.write((int) (short) 0);
        outputStream17.resumeEncoding();
        org.jboss.dmr.stream.ModelWriter modelWriter30 = modelStreamFactory1.newModelWriter((java.io.OutputStream) outputStream17);
        java.io.InputStream inputStream31 = null;
        org.jboss.dmr.Base64.InputStream inputStream33 = new org.jboss.dmr.Base64.InputStream(inputStream31, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream34 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream33);
        org.jboss.dmr.Base64.InputStream inputStream36 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream34, 0);
        org.jboss.dmr.stream.ModelReader modelReader37 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream34);
        java.io.OutputStream outputStream38 = null;
        org.jboss.dmr.Base64.OutputStream outputStream39 = new org.jboss.dmr.Base64.OutputStream(outputStream38);
        org.jboss.dmr.Base64.OutputStream outputStream40 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream39);
        org.jboss.dmr.Base64.OutputStream outputStream41 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream40);
        outputStream41.suspendEncoding();
        outputStream41.resumeEncoding();
        outputStream41.flushBase64();
        org.jboss.dmr.stream.ModelWriter modelWriter45 = modelStreamFactory1.newModelWriter((java.io.OutputStream) outputStream41);
        java.io.OutputStream outputStream46 = null;
        org.jboss.dmr.Base64.OutputStream outputStream47 = new org.jboss.dmr.Base64.OutputStream(outputStream46);
        outputStream47.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream49 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream47);
        org.jboss.dmr.Base64.OutputStream outputStream50 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream49);
        outputStream49.flushBase64();
        org.jboss.dmr.Base64.OutputStream outputStream52 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream49);
        outputStream49.suspendEncoding();
        outputStream49.flushBase64();
        org.jboss.dmr.Base64.OutputStream outputStream55 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream49);
        java.nio.charset.Charset charset56 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.stream.ModelWriter modelWriter57 = modelStreamFactory1.newModelWriter((java.io.OutputStream) outputStream49, charset56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Parameter cannot be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertNotNull(modelReader6);
        org.junit.Assert.assertNotNull(modelWriter12);
        org.junit.Assert.assertNotNull(booleanModelValue19);
        org.junit.Assert.assertNotNull(bigInteger20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(modelWriter30);
        org.junit.Assert.assertNotNull(modelReader37);
        org.junit.Assert.assertNotNull(modelWriter45);
    }

    @Test
    public void test13109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13109");
        org.jboss.dmr.BooleanModelValue booleanModelValue1 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger2 = booleanModelValue1.asBigInteger();
        java.math.BigInteger bigInteger3 = booleanModelValue1.asBigInteger();
        java.lang.String str4 = booleanModelValue1.asString();
        java.math.BigDecimal bigDecimal5 = booleanModelValue1.asBigDecimal();
        java.io.PrintWriter printWriter6 = null;
        // The following exception was thrown during execution in test generation
        try {
            booleanModelValue1.writeString(printWriter6, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanModelValue1);
        org.junit.Assert.assertNotNull(bigInteger2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "true" + "'", str4, "true");
        org.junit.Assert.assertNotNull(bigDecimal5);
    }

    @Test
    public void test13110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13110");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.ModelNode modelNode5 = new org.jboss.dmr.ModelNode(bigDecimal4);
        java.lang.String str6 = modelNode5.toString();
        org.jboss.dmr.BooleanModelValue booleanModelValue8 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.io.OutputStream outputStream9 = null;
        org.jboss.dmr.Base64.OutputStream outputStream10 = new org.jboss.dmr.Base64.OutputStream(outputStream9);
        outputStream10.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream12 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream10);
        boolean boolean13 = booleanModelValue8.equals((java.lang.Object) outputStream10);
        outputStream10.resumeEncoding();
        // The following exception was thrown during execution in test generation
        try {
            modelNode5.writeBase64((java.io.OutputStream) outputStream10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "big decimal 1.0" + "'", str6, "big decimal 1.0");
        org.junit.Assert.assertNotNull(booleanModelValue8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test13111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13111");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        org.jboss.dmr.ModelNode modelNode3 = objectModelValue0.getChild("TYPE_MODEL_VALUE");
        org.jboss.dmr.ModelNode modelNode5 = objectModelValue0.getChild("[(\"hi!\" => 0.0)]");
        java.util.List<org.jboss.dmr.Property> propertyList6 = objectModelValue0.asPropertyList();
        boolean boolean7 = objectModelValue0.asBoolean();
        org.jboss.dmr.ModelNode modelNode9 = objectModelValue0.getChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        java.lang.String str10 = objectModelValue0.asString();
        org.jboss.dmr.ObjectModelValue objectModelValue11 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode12 = objectModelValue11.asObject();
        java.util.Set<java.lang.String> strSet13 = objectModelValue11.getKeys();
        boolean boolean15 = objectModelValue11.has((int) 'a');
        boolean boolean17 = objectModelValue11.has("");
        org.jboss.dmr.ObjectModelValue objectModelValue18 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode19 = objectModelValue18.asObject();
        java.util.Set<java.lang.String> strSet20 = objectModelValue18.getKeys();
        boolean boolean22 = objectModelValue18.has((int) 'a');
        boolean boolean23 = objectModelValue11.equals(objectModelValue18);
        int int24 = objectModelValue18.asInt();
        org.jboss.dmr.ObjectModelValue objectModelValue25 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode26 = objectModelValue25.asObject();
        org.jboss.dmr.ModelValue modelValue27 = objectModelValue25.copy();
        int int29 = objectModelValue25.asInt((int) (short) 100);
        java.util.List<org.jboss.dmr.Property> propertyList30 = objectModelValue25.asPropertyList();
        java.lang.String str31 = objectModelValue25.asString();
        boolean boolean32 = objectModelValue18.equals(objectModelValue25);
        boolean boolean33 = objectModelValue0.equals(objectModelValue25);
        org.jboss.dmr.ModelNode modelNode35 = objectModelValue0.getChild("org.jboss.dmr.stream.ModelException: rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList36 = objectModelValue0.asList();
        org.jboss.dmr.ListModelValue listModelValue37 = new org.jboss.dmr.ListModelValue(modelNodeList36);
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(propertyList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{\"TYPE_MODEL_VALUE\" => undefined,\"[(\\\"hi!\\\" => 0.0)]\" => undefined,\"org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\\\"hi!\\\" => 0.0)]\" => undefined}" + "'", str10, "{\"TYPE_MODEL_VALUE\" => undefined,\"[(\\\"hi!\\\" => 0.0)]\" => undefined,\"org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\\\"hi!\\\" => 0.0)]\" => undefined}");
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertNotNull(modelValue27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(propertyList30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{}" + "'", str31, "{}");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(modelNode35);
        org.junit.Assert.assertNotNull(modelNodeList36);
    }

    @Test
    public void test13112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13112");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.PROPERTY;
        char char1 = modelType0.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue2 = org.jboss.dmr.TypeModelValue.of(modelType0);
        boolean boolean3 = typeModelValue2.asBoolean();
        org.jboss.dmr.BooleanModelValue booleanModelValue5 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray6 = booleanModelValue5.asBytes();
        java.lang.String str7 = booleanModelValue5.asString();
        int int8 = booleanModelValue5.asInt();
        boolean boolean9 = typeModelValue2.equals((java.lang.Object) booleanModelValue5);
        org.jboss.dmr.ValueExpression valueExpression10 = typeModelValue2.asExpression();
        org.jboss.dmr.ValueExpression valueExpression11 = typeModelValue2.asExpression();
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType0.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char1 + "' != '" + 'p' + "'", char1 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(booleanModelValue5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "true" + "'", str7, "true");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(valueExpression10);
        org.junit.Assert.assertNotNull(valueExpression11);
    }

    @Test
    public void test13113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13113");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue(10);
        byte[] byteArray2 = intModelValue1.asBytes();
        int int4 = intModelValue1.asInt(0);
        org.jboss.dmr.ModelType modelType5 = intModelValue1.getType();
        int int6 = intModelValue1.asInt();
        long long7 = intModelValue1.asLong();
        org.jboss.dmr.ValueExpression valueExpression8 = intModelValue1.asExpression();
        org.jboss.dmr.ModelNode modelNode9 = new org.jboss.dmr.ModelNode(valueExpression8);
        org.jboss.dmr.ModelNode modelNode11 = modelNode9.setExpression("{ \"EXPRESSION_VALUE\" : \"AAAAAAAAAAo=\" }");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0, 0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
        org.junit.Assert.assertTrue("'" + modelType5 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType5.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertNotNull(valueExpression8);
        org.junit.Assert.assertNotNull(modelNode11);
    }

    @Test
    public void test13114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13114");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str2 = intModelValue1.asString();
        double double4 = intModelValue1.asDouble((double) 2);
        java.math.BigInteger bigInteger5 = intModelValue1.asBigInteger();
        java.math.BigInteger bigInteger6 = intModelValue1.asBigInteger();
        byte[] byteArray7 = intModelValue1.asBytes();
        int int8 = intModelValue1.asInt();
        double double9 = intModelValue1.asDouble();
        org.jboss.dmr.ValueExpression valueExpression10 = intModelValue1.asExpression();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "32" + "'", str2, "32");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 32.0d + "'", double4 == 32.0d);
        org.junit.Assert.assertNotNull(bigInteger5);
        org.junit.Assert.assertNotNull(bigInteger6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, 0, 32]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 32 + "'", int8 == 32);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 32.0d + "'", double9 == 32.0d);
        org.junit.Assert.assertNotNull(valueExpression10);
    }

    @Test
    public void test13115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13115");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        boolean boolean4 = objectModelValue0.has((int) 'a');
        boolean boolean6 = objectModelValue0.has("");
        org.jboss.dmr.ObjectModelValue objectModelValue7 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode8 = objectModelValue7.asObject();
        java.util.Set<java.lang.String> strSet9 = objectModelValue7.getKeys();
        boolean boolean11 = objectModelValue7.has((int) 'a');
        boolean boolean12 = objectModelValue0.equals(objectModelValue7);
        int int13 = objectModelValue7.asInt();
        java.util.List<org.jboss.dmr.Property> propertyList14 = objectModelValue7.asPropertyList();
        org.jboss.dmr.ModelType modelType15 = org.jboss.dmr.ModelType.DOUBLE;
        org.jboss.dmr.ModelNode modelNode16 = new org.jboss.dmr.ModelNode(modelType15);
        org.jboss.dmr.LongModelValue longModelValue19 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str20 = longModelValue19.asString();
        byte[] byteArray21 = longModelValue19.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue22 = new org.jboss.dmr.BytesModelValue(byteArray21);
        java.lang.String str23 = bytesModelValue22.asString();
        int int24 = bytesModelValue22.asInt();
        long long26 = bytesModelValue22.asLong((long) (short) 1);
        long long27 = bytesModelValue22.asLong();
        java.math.BigDecimal bigDecimal28 = bytesModelValue22.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode29 = modelNode16.set("32", bigDecimal28);
        boolean boolean30 = objectModelValue7.equals((java.lang.Object) modelNode29);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory32 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream33 = null;
        org.jboss.dmr.Base64.InputStream inputStream35 = new org.jboss.dmr.Base64.InputStream(inputStream33, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue37 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str38 = longModelValue37.asString();
        byte[] byteArray39 = longModelValue37.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue40 = new org.jboss.dmr.BytesModelValue(byteArray39);
        int int43 = inputStream35.read(byteArray39, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream45 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream35, (-1));
        org.jboss.dmr.stream.ModelReader modelReader46 = modelStreamFactory32.newModelReader((java.io.InputStream) inputStream45);
        boolean boolean47 = modelReader46.isLong();
        boolean boolean48 = modelReader46.isBigDecimal();
        boolean boolean49 = modelReader46.isBoolean();
        boolean boolean50 = modelReader46.isListStart();
        boolean boolean51 = modelNode29.equals((java.lang.Object) modelReader46);
        boolean boolean52 = modelReader46.isObjectEnd();
        boolean boolean53 = modelReader46.isListStart();
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(propertyList14);
        org.junit.Assert.assertTrue("'" + modelType15 + "' != '" + org.jboss.dmr.ModelType.DOUBLE + "'", modelType15.equals(org.jboss.dmr.ModelType.DOUBLE));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1" + "'", str20, "1");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str23, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertNotNull(bigDecimal28);
        org.junit.Assert.assertNotNull(modelNode29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(modelStreamFactory32);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1" + "'", str38, "1");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(modelReader46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test13116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13116");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        boolean boolean8 = bigDecimalModelValue7.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression9 = bigDecimalModelValue7.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue10 = new org.jboss.dmr.ExpressionValue(valueExpression9);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(valueExpression9);
    }

    @Test
    public void test13117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13117");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 0);
        byte[] byteArray2 = doubleModelValue1.asBytes();
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) doubleModelValue1);
        org.jboss.dmr.DoubleModelValue doubleModelValue4 = null;
        boolean boolean5 = doubleModelValue1.equals(doubleModelValue4);
        org.jboss.dmr.ObjectModelValue objectModelValue6 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode7 = objectModelValue6.asObject();
        java.util.Set<java.lang.String> strSet8 = objectModelValue6.getKeys();
        org.jboss.dmr.ModelNode modelNode10 = objectModelValue6.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        boolean boolean11 = objectModelValue6.asBoolean();
        org.jboss.dmr.ModelNode modelNode13 = objectModelValue6.getChild("1L");
        org.jboss.dmr.ObjectModelValue objectModelValue14 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode15 = objectModelValue14.asObject();
        java.util.Set<java.lang.String> strSet16 = objectModelValue14.getKeys();
        org.jboss.dmr.ModelNode modelNode18 = objectModelValue14.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        boolean boolean19 = objectModelValue14.asBoolean();
        int int21 = objectModelValue14.asInt((int) 'b');
        int int23 = objectModelValue14.asInt((int) '#');
        boolean boolean24 = objectModelValue6.equals(objectModelValue14);
        int int25 = objectModelValue14.asInt();
        java.util.Set<java.lang.String> strSet26 = objectModelValue14.getKeys();
        org.jboss.dmr.ModelValue modelValue27 = objectModelValue14.resolve();
        boolean boolean28 = doubleModelValue1.equals((java.lang.Object) objectModelValue14);
        org.jboss.dmr.ModelNode modelNode29 = objectModelValue14.asObject();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList30 = objectModelValue14.asList();
        org.jboss.dmr.ModelNode modelNode31 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode34 = modelNode31.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList35 = modelNode34.asList();
        java.lang.String str37 = modelNode34.asString("true");
        org.jboss.dmr.BooleanModelValue booleanModelValue40 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long41 = booleanModelValue40.asLong();
        org.jboss.dmr.ValueExpression valueExpression42 = booleanModelValue40.asExpression();
        java.lang.String str43 = valueExpression42.toString();
        org.jboss.dmr.ExpressionValue expressionValue45 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ValueExpression valueExpression46 = expressionValue45.asExpression();
        boolean boolean47 = valueExpression42.equals(valueExpression46);
        java.lang.String str48 = valueExpression46.resolveString();
        org.jboss.dmr.ModelNode modelNode49 = modelNode34.set("Expression \"1\"", valueExpression46);
        org.jboss.dmr.ModelNode modelNode50 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode53 = modelNode50.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList54 = modelNode53.asList();
        org.jboss.dmr.ModelNode modelNode57 = modelNode53.set("Expression \"1\"", (int) (byte) 1);
        org.jboss.dmr.ModelType modelType58 = modelNode53.getType();
        org.jboss.dmr.ModelNode modelNode59 = modelNode49.set(modelType58);
        java.lang.String str60 = modelNode59.asString();
        boolean boolean62 = modelNode59.hasDefined(52);
        org.jboss.dmr.ModelType modelType63 = org.jboss.dmr.ModelType.LIST;
        org.jboss.dmr.ModelNode modelNode64 = modelNode59.set(modelType63);
        org.jboss.dmr.ModelNode modelNode68 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long69 = modelNode68.asLong();
        org.jboss.dmr.ValueExpression valueExpression70 = modelNode68.asExpression();
        java.math.BigDecimal bigDecimal71 = valueExpression70.resolveBigDecimal();
        org.jboss.dmr.BooleanModelValue booleanModelValue73 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long74 = booleanModelValue73.asLong();
        org.jboss.dmr.ValueExpression valueExpression75 = booleanModelValue73.asExpression();
        boolean boolean77 = valueExpression75.equals((java.lang.Object) 'p');
        boolean boolean78 = valueExpression70.equals(valueExpression75);
        org.jboss.dmr.ModelNode modelNode79 = new org.jboss.dmr.ModelNode(valueExpression70);
        org.jboss.dmr.Property property81 = new org.jboss.dmr.Property("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]", modelNode79, false);
        org.jboss.dmr.PropertyModelValue propertyModelValue82 = new org.jboss.dmr.PropertyModelValue(property81);
        org.jboss.dmr.ModelNode modelNode84 = propertyModelValue82.getChild(0);
        org.jboss.dmr.ModelNode modelNode87 = modelNode84.set("(\"hi!\" => expression \"hi!\")", (double) 'e');
        org.jboss.dmr.ModelNode modelNode88 = modelNode59.setNoCopy("Expression \"PROPERTY\"", modelNode84);
        boolean boolean89 = objectModelValue14.equals((java.lang.Object) modelNode88);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(modelNode10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(modelNode18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(modelValue27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(modelNode29);
        org.junit.Assert.assertNotNull(modelNodeList30);
        org.junit.Assert.assertNotNull(modelNode34);
        org.junit.Assert.assertNotNull(modelNodeList35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(\"hi!\" => 0.0)" + "'", str37, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(booleanModelValue40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertNotNull(valueExpression42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Expression \"true\"" + "'", str43, "Expression \"true\"");
        org.junit.Assert.assertNotNull(valueExpression46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(modelNode49);
        org.junit.Assert.assertNotNull(modelNode53);
        org.junit.Assert.assertNotNull(modelNodeList54);
        org.junit.Assert.assertNotNull(modelNode57);
        org.junit.Assert.assertTrue("'" + modelType58 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType58.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertNotNull(modelNode59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "PROPERTY" + "'", str60, "PROPERTY");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + modelType63 + "' != '" + org.jboss.dmr.ModelType.LIST + "'", modelType63.equals(org.jboss.dmr.ModelType.LIST));
        org.junit.Assert.assertNotNull(modelNode64);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 1L + "'", long69 == 1L);
        org.junit.Assert.assertNotNull(valueExpression70);
        org.junit.Assert.assertNotNull(bigDecimal71);
        org.junit.Assert.assertNotNull(booleanModelValue73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 1L + "'", long74 == 1L);
        org.junit.Assert.assertNotNull(valueExpression75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(modelNode84);
        org.junit.Assert.assertNotNull(modelNode87);
        org.junit.Assert.assertNotNull(modelNode88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test13118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13118");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        org.jboss.dmr.ModelValue modelValue2 = objectModelValue0.copy();
        boolean boolean4 = objectModelValue0.equals((java.lang.Object) "-1");
        int int5 = objectModelValue0.asInt();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.Property property6 = objectModelValue0.asProperty();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test13119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13119");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.lang.String str4 = modelNode0.toString();
        org.jboss.dmr.ModelNode modelNode5 = modelNode0.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode10 = modelNode7.set("hi!", 0.0d);
        org.jboss.dmr.Property property11 = new org.jboss.dmr.Property("", modelNode10);
        org.jboss.dmr.ModelNode modelNode12 = modelNode0.set(property11);
        org.jboss.dmr.ModelNode modelNode15 = modelNode0.setExpression("org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]", "true");
        java.io.DataInput dataInput16 = null;
        // The following exception was thrown during execution in test generation
        try {
            modelNode15.readExternal(dataInput16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "(\"hi!\" => 0.0)" + "'", str4, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNode15);
    }

    @Test
    public void test13120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13120");
        org.jboss.dmr.BooleanModelValue booleanModelValue1 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long2 = booleanModelValue1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = booleanModelValue1.asExpression();
        boolean boolean5 = valueExpression3.equals((java.lang.Object) 'p');
        org.jboss.dmr.ExpressionValue expressionValue6 = new org.jboss.dmr.ExpressionValue(valueExpression3);
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode(valueExpression3);
        org.jboss.dmr.BooleanModelValue booleanModelValue9 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double10 = booleanModelValue9.asDouble();
        org.jboss.dmr.ModelValue modelValue11 = booleanModelValue9.copy();
        java.math.BigInteger bigInteger12 = booleanModelValue9.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue13 = new org.jboss.dmr.BigIntegerModelValue(bigInteger12);
        java.lang.String str14 = bigIntegerModelValue13.asString();
        java.math.BigInteger bigInteger15 = bigIntegerModelValue13.asBigInteger();
        org.jboss.dmr.ModelNode modelNode16 = new org.jboss.dmr.ModelNode(bigInteger15);
        java.lang.String str18 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) bigInteger15, (int) (short) 1);
        org.jboss.dmr.ModelNode modelNode19 = modelNode7.set("{ \"35\" : 0.0 }", bigInteger15);
        boolean boolean20 = modelNode19.isProtected();
        org.junit.Assert.assertNotNull(booleanModelValue1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(booleanModelValue9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue11);
        org.junit.Assert.assertNotNull(bigInteger12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1" + "'", str14, "1");
        org.junit.Assert.assertNotNull(bigInteger15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "rO0ABXNyABRqYXZhLm1hdGguQmlnSW50ZWdlcoz8nx+pO/sdAwAGSQAIYml0Q291bnRJAAliaXRM\nZW5ndGhJABNmaXJzdE5vbnplcm9CeXRlTnVtSQAMbG93ZXN0U2V0Qml0SQAGc2lnbnVtWwAJbWFn\nbml0dWRldAACW0J4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHD///////////////7/\n///+AAAAAXVyAAJbQqzzF/gGCFTgAgAAeHAAAAABAXg=" + "'", str18, "rO0ABXNyABRqYXZhLm1hdGguQmlnSW50ZWdlcoz8nx+pO/sdAwAGSQAIYml0Q291bnRJAAliaXRM\nZW5ndGhJABNmaXJzdE5vbnplcm9CeXRlTnVtSQAMbG93ZXN0U2V0Qml0SQAGc2lnbnVtWwAJbWFn\nbml0dWRldAACW0J4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHD///////////////7/\n///+AAAAAXVyAAJbQqzzF/gGCFTgAgAAeHAAAAABAXg=");
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test13121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13121");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        java.lang.String str6 = listModelValue5.asString();
        long long7 = listModelValue5.asLong();
        java.lang.String str8 = listModelValue5.asString();
        org.jboss.dmr.ModelNode modelNode9 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode12 = modelNode9.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList13 = modelNode12.asList();
        org.jboss.dmr.ListModelValue listModelValue14 = new org.jboss.dmr.ListModelValue(modelNodeList13);
        java.lang.String str15 = listModelValue14.asString();
        long long16 = listModelValue14.asLong();
        int int18 = listModelValue14.asInt((int) '4');
        org.jboss.dmr.ModelValue modelValue19 = listModelValue14.protect();
        boolean boolean21 = listModelValue14.has((int) (short) 100);
        boolean boolean22 = listModelValue5.equals(listModelValue14);
        org.jboss.dmr.ModelNode modelNode23 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode26 = modelNode23.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList27 = modelNode26.asList();
        org.jboss.dmr.ListModelValue listModelValue28 = new org.jboss.dmr.ListModelValue(modelNodeList27);
        org.jboss.dmr.ModelNode modelNode29 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue28);
        org.jboss.dmr.ModelValue modelValue30 = listModelValue28.resolve();
        int int32 = listModelValue28.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList33 = listModelValue28.asPropertyList();
        boolean boolean34 = listModelValue5.equals(listModelValue28);
        boolean boolean36 = listModelValue5.has(8);
        long long37 = listModelValue5.asLong();
        java.util.List<org.jboss.dmr.Property> propertyList38 = listModelValue5.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList39 = listModelValue5.asPropertyList();
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str6, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str8, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNodeList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str15, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(modelValue19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertNotNull(modelNodeList27);
        org.junit.Assert.assertNotNull(modelValue30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(propertyList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
        org.junit.Assert.assertNotNull(propertyList38);
        org.junit.Assert.assertNotNull(propertyList39);
    }

    @Test
    public void test13122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13122");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isLong();
        boolean boolean17 = modelReader15.isBigDecimal();
        boolean boolean18 = modelReader15.isUndefined();
        boolean boolean19 = modelReader15.isBytes();
        boolean boolean20 = modelReader15.isBigInteger();
        boolean boolean21 = modelReader15.isBytes();
        boolean boolean22 = modelReader15.isType();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test13123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13123");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        java.io.InputStream inputStream16 = null;
        org.jboss.dmr.Base64.InputStream inputStream18 = new org.jboss.dmr.Base64.InputStream(inputStream16, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream19 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream18);
        org.jboss.dmr.Base64.InputStream inputStream20 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream18);
        org.jboss.dmr.stream.ModelReader modelReader21 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream18);
        boolean boolean22 = modelReader21.isDouble();
        boolean boolean23 = modelReader21.isDouble();
        boolean boolean24 = modelReader21.isBoolean();
        boolean boolean25 = modelReader21.isObjectEnd();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertNotNull(modelReader21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test13124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13124");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(35L);
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.BooleanModelValue booleanModelValue5 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger6 = booleanModelValue5.asBigInteger();
        org.jboss.dmr.ModelNode modelNode7 = modelNode3.add(bigInteger6);
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode(bigInteger6);
        org.jboss.dmr.ModelType modelType10 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode11 = new org.jboss.dmr.ModelNode(modelType10);
        org.jboss.dmr.ModelNode modelNode12 = modelNode8.set("true", modelType10);
        org.jboss.dmr.ModelNode modelNode13 = modelNode1.set("\"bytes {\\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01\\n}\"", modelType10);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode15 = modelNode13.add(true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanModelValue5);
        org.junit.Assert.assertNotNull(bigInteger6);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertTrue("'" + modelType10 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType10.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNode13);
    }

    @Test
    public void test13125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13125");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int1 = modelNode0.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long4 = modelNode3.asLong();
        org.jboss.dmr.ValueExpression valueExpression5 = modelNode3.asExpression();
        java.math.BigDecimal bigDecimal6 = valueExpression5.resolveBigDecimal();
        org.jboss.dmr.ModelNode modelNode7 = modelNode0.set(valueExpression5);
        java.lang.String str8 = valueExpression5.getExpressionString();
        java.lang.String str9 = valueExpression5.resolveString();
        org.jboss.dmr.ExpressionValue expressionValue10 = new org.jboss.dmr.ExpressionValue(valueExpression5);
        org.jboss.dmr.DoubleModelValue doubleModelValue12 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long13 = doubleModelValue12.asLong();
        boolean boolean14 = doubleModelValue12.asBoolean();
        byte[] byteArray15 = doubleModelValue12.asBytes();
        double double16 = doubleModelValue12.asDouble();
        org.jboss.dmr.ValueExpression valueExpression17 = doubleModelValue12.asExpression();
        java.lang.String str18 = doubleModelValue12.asString();
        boolean boolean19 = valueExpression5.equals((java.lang.Object) doubleModelValue12);
        byte[] byteArray21 = org.jboss.dmr.Base64.decode("true");
        org.jboss.dmr.ModelNode modelNode22 = new org.jboss.dmr.ModelNode(byteArray21);
        org.jboss.dmr.ExpressionValue expressionValue24 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue26 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean27 = expressionValue24.equals(expressionValue26);
        org.jboss.dmr.ExpressionValue expressionValue29 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue31 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean32 = expressionValue29.equals(expressionValue31);
        boolean boolean33 = expressionValue24.equals(expressionValue31);
        org.jboss.dmr.ModelValue modelValue34 = expressionValue24.resolve();
        java.lang.String str35 = expressionValue24.asString();
        org.jboss.dmr.ModelValue modelValue36 = expressionValue24.resolve();
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory38 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream39 = null;
        org.jboss.dmr.Base64.InputStream inputStream41 = new org.jboss.dmr.Base64.InputStream(inputStream39, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream42 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream41);
        org.jboss.dmr.stream.ModelReader modelReader43 = modelStreamFactory38.newModelReader((java.io.InputStream) inputStream42);
        java.io.OutputStream outputStream44 = null;
        org.jboss.dmr.Base64.OutputStream outputStream45 = new org.jboss.dmr.Base64.OutputStream(outputStream44);
        org.jboss.dmr.Base64.OutputStream outputStream46 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream45);
        outputStream45.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter49 = modelStreamFactory38.newModelWriter((java.io.OutputStream) outputStream45);
        org.jboss.dmr.stream.ModelWriter modelWriter50 = modelWriter49.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter52 = modelWriter50.writeInt((int) (byte) 10);
        expressionValue24.write(modelWriter50);
        org.jboss.dmr.ModelNode modelNode55 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode58 = modelNode55.set("hi!", 0.0d);
        org.jboss.dmr.Property property59 = new org.jboss.dmr.Property("", modelNode58);
        java.lang.String[] strArray60 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode61 = modelNode58.get(strArray60);
        org.jboss.dmr.ModelNode modelNode62 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int63 = modelNode62.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode64 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode67 = modelNode64.setExpression("hi!", "hi!");
        java.lang.String str68 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode64);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList69 = modelNode64.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode70 = modelNode62.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList69);
        org.jboss.dmr.ModelNode modelNode71 = modelNode61.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList69);
        org.jboss.dmr.LongModelValue longModelValue73 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str74 = longModelValue73.asString();
        double double76 = longModelValue73.asDouble((double) 32L);
        org.jboss.dmr.ValueExpression valueExpression77 = longModelValue73.asExpression();
        byte[] byteArray78 = longModelValue73.asBytes();
        org.jboss.dmr.ModelNode modelNode79 = modelNode71.add(byteArray78);
        org.jboss.dmr.stream.ModelWriter modelWriter80 = modelWriter50.writeBytes(byteArray78);
        org.jboss.dmr.stream.ModelWriter modelWriter82 = modelWriter80.writeExpression("[]");
        modelNode22.write(modelWriter82);
        org.jboss.dmr.stream.ModelWriter modelWriter84 = modelWriter82.writeListStart();
        org.jboss.dmr.DoubleModelValue doubleModelValue86 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long87 = doubleModelValue86.asLong();
        long long89 = doubleModelValue86.asLong((long) 32);
        org.jboss.dmr.ModelValue modelValue90 = doubleModelValue86.protect();
        byte[] byteArray91 = doubleModelValue86.asBytes();
        java.lang.String str92 = org.jboss.dmr.Base64.encodeBytes(byteArray91);
        org.jboss.dmr.stream.ModelWriter modelWriter93 = modelWriter84.writeBytes(byteArray91);
        org.jboss.dmr.stream.ModelWriter modelWriter94 = modelWriter84.writeListEnd();
        doubleModelValue12.write(modelWriter94);
        java.io.DataOutput dataOutput96 = null;
        // The following exception was thrown during execution in test generation
        try {
            doubleModelValue12.writeExternal(dataOutput96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(valueExpression5);
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1.0" + "'", str8, "1.0");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1.0" + "'", str9, "1.0");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10L + "'", long13 == 10L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertNotNull(valueExpression17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "10.0" + "'", str18, "10.0");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-74, -69, -98]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(modelValue34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(modelValue36);
        org.junit.Assert.assertNotNull(modelStreamFactory38);
        org.junit.Assert.assertNotNull(modelReader43);
        org.junit.Assert.assertNotNull(modelWriter49);
        org.junit.Assert.assertNotNull(modelWriter50);
        org.junit.Assert.assertNotNull(modelWriter52);
        org.junit.Assert.assertNotNull(modelNode58);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(modelNode61);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNotNull(modelNode67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str68, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList69);
        org.junit.Assert.assertNotNull(modelNode70);
        org.junit.Assert.assertNotNull(modelNode71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "1" + "'", str74, "1");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(valueExpression77);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(modelNode79);
        org.junit.Assert.assertNotNull(modelWriter80);
        org.junit.Assert.assertNotNull(modelWriter82);
        org.junit.Assert.assertNotNull(modelWriter84);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 10L + "'", long87 == 10L);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 10L + "'", long89 == 10L);
        org.junit.Assert.assertNotNull(modelValue90);
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "QCQAAAAAAAA=" + "'", str92, "QCQAAAAAAAA=");
        org.junit.Assert.assertNotNull(modelWriter93);
        org.junit.Assert.assertNotNull(modelWriter94);
    }

    @Test
    public void test13126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13126");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue(10);
        byte[] byteArray2 = intModelValue1.asBytes();
        int int4 = intModelValue1.asInt(0);
        org.jboss.dmr.ModelType modelType5 = intModelValue1.getType();
        int int6 = intModelValue1.asInt();
        long long7 = intModelValue1.asLong();
        org.jboss.dmr.ValueExpression valueExpression8 = intModelValue1.asExpression();
        org.jboss.dmr.BooleanModelValue booleanModelValue9 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double10 = booleanModelValue9.asDouble();
        org.jboss.dmr.ModelValue modelValue11 = booleanModelValue9.copy();
        java.math.BigInteger bigInteger12 = booleanModelValue9.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue13 = new org.jboss.dmr.BigIntegerModelValue(bigInteger12);
        double double15 = bigIntegerModelValue13.asDouble((double) 'b');
        java.lang.String str16 = bigIntegerModelValue13.asString();
        org.jboss.dmr.ValueExpression valueExpression17 = bigIntegerModelValue13.asExpression();
        java.lang.String str18 = bigIntegerModelValue13.asString();
        org.jboss.dmr.ValueExpression valueExpression19 = bigIntegerModelValue13.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue21 = new org.jboss.dmr.ExpressionValue("1");
        org.jboss.dmr.ValueExpression valueExpression22 = expressionValue21.asExpression();
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver23 = new org.jboss.dmr.ValueExpressionResolver();
        java.lang.String str24 = valueExpression22.resolveString(valueExpressionResolver23);
        java.lang.String str26 = valueExpressionResolver23.resolvePart("\"[97L]\"");
        java.lang.String str27 = valueExpression19.resolveString(valueExpressionResolver23);
        int int28 = valueExpression8.resolveInt(valueExpressionResolver23);
        java.lang.String str30 = valueExpressionResolver23.resolvePart("{ \"org.jboss.dmr.stream.ModelException: [(\\\"hi!\\\" => 0.0)]\" : { \"EXPRESSION_VALUE\" : \"true\" } }");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0, 0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
        org.junit.Assert.assertTrue("'" + modelType5 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType5.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertNotNull(valueExpression8);
        org.junit.Assert.assertNotNull(booleanModelValue9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue11);
        org.junit.Assert.assertNotNull(bigInteger12);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1" + "'", str16, "1");
        org.junit.Assert.assertNotNull(valueExpression17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1" + "'", str18, "1");
        org.junit.Assert.assertNotNull(valueExpression19);
        org.junit.Assert.assertNotNull(valueExpression22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1" + "'", str24, "1");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1" + "'", str27, "1");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test13127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13127");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.removeChild("1");
        java.util.Set<java.lang.String> strSet5 = objectModelValue0.getKeys();
        int int7 = objectModelValue0.asInt((int) (short) -1);
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(modelNode4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test13128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13128");
        org.jboss.dmr.BooleanModelValue booleanModelValue1 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray2 = booleanModelValue1.asBytes();
        org.jboss.dmr.ValueExpression valueExpression3 = booleanModelValue1.asExpression();
        java.lang.String str4 = booleanModelValue1.asString();
        java.math.BigInteger bigInteger5 = booleanModelValue1.asBigInteger();
        org.junit.Assert.assertNotNull(booleanModelValue1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[1]");
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "true" + "'", str4, "true");
        org.junit.Assert.assertNotNull(bigInteger5);
    }

    @Test
    public void test13129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13129");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isBigInteger();
        boolean boolean17 = modelReader15.isLong();
        boolean boolean18 = modelReader15.isBigDecimal();
        boolean boolean19 = modelReader15.isUndefined();
        boolean boolean20 = modelReader15.isUndefined();
        boolean boolean21 = modelReader15.isObjectStart();
        boolean boolean22 = modelReader15.isObjectEnd();
        boolean boolean23 = modelReader15.isBytes();
        boolean boolean24 = modelReader15.isObjectStart();
        boolean boolean25 = modelReader15.isBytes();
        boolean boolean26 = modelReader15.isLong();
        // The following exception was thrown during execution in test generation
        try {
            double double27 = modelReader15.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Current event isn't double");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test13130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13130");
        org.jboss.dmr.BooleanModelValue booleanModelValue1 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger2 = booleanModelValue1.asBigInteger();
        int int3 = booleanModelValue1.asInt();
        double double5 = booleanModelValue1.asDouble((double) 1);
        org.jboss.dmr.LongModelValue longModelValue7 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str8 = longModelValue7.asString();
        byte[] byteArray9 = longModelValue7.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue10 = new org.jboss.dmr.BytesModelValue(byteArray9);
        java.lang.String str11 = bytesModelValue10.asString();
        int int12 = bytesModelValue10.asInt();
        int int13 = bytesModelValue10.asInt();
        org.jboss.dmr.LongModelValue longModelValue15 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str16 = longModelValue15.asString();
        byte[] byteArray17 = longModelValue15.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue18 = new org.jboss.dmr.BytesModelValue(byteArray17);
        double double19 = bytesModelValue18.asDouble();
        boolean boolean20 = bytesModelValue10.equals(bytesModelValue18);
        byte[] byteArray21 = bytesModelValue18.asBytes();
        java.math.BigDecimal bigDecimal22 = bytesModelValue18.asBigDecimal();
        long long24 = bytesModelValue18.asLong((long) 32);
        java.math.BigInteger bigInteger25 = bytesModelValue18.asBigInteger();
        boolean boolean26 = booleanModelValue1.equals((java.lang.Object) bigInteger25);
        byte[] byteArray27 = booleanModelValue1.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue28 = new org.jboss.dmr.BytesModelValue(byteArray27);
        org.junit.Assert.assertNotNull(booleanModelValue1);
        org.junit.Assert.assertNotNull(bigInteger2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1" + "'", str8, "1");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str11, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1" + "'", str16, "1");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.9E-324d + "'", double19 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(bigDecimal22);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1L + "'", long24 == 1L);
        org.junit.Assert.assertNotNull(bigInteger25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1]");
    }

    @Test
    public void test13131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13131");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.PROPERTY;
        char char1 = modelType0.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue2 = org.jboss.dmr.TypeModelValue.of(modelType0);
        org.jboss.dmr.ModelType modelType3 = org.jboss.dmr.ModelType.PROPERTY;
        char char4 = modelType3.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue5 = org.jboss.dmr.TypeModelValue.of(modelType3);
        boolean boolean6 = typeModelValue2.equals(typeModelValue5);
        java.lang.String str7 = typeModelValue5.asString();
        boolean boolean8 = typeModelValue5.asBoolean();
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory10 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream11 = null;
        org.jboss.dmr.Base64.InputStream inputStream13 = new org.jboss.dmr.Base64.InputStream(inputStream11, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream13);
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory10.newModelReader((java.io.InputStream) inputStream14);
        java.io.OutputStream outputStream16 = null;
        org.jboss.dmr.Base64.OutputStream outputStream17 = new org.jboss.dmr.Base64.OutputStream(outputStream16);
        org.jboss.dmr.Base64.OutputStream outputStream18 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream17);
        outputStream17.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter21 = modelStreamFactory10.newModelWriter((java.io.OutputStream) outputStream17);
        org.jboss.dmr.stream.ModelWriter modelWriter22 = modelWriter21.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter24 = modelWriter21.writeInt((int) '4');
        org.jboss.dmr.stream.ModelWriter modelWriter26 = modelWriter24.writeBoolean(true);
        org.jboss.dmr.stream.ModelWriter modelWriter28 = modelWriter24.writeBoolean(true);
        org.jboss.dmr.stream.ModelWriter modelWriter30 = modelWriter28.writeLong((long) 0);
        org.jboss.dmr.stream.ModelWriter modelWriter32 = modelWriter30.writeString("(\"\\\"bytes {\\\\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01\\\\n}\\\"\" => INT)");
        org.jboss.dmr.stream.ModelWriter modelWriter34 = modelWriter30.writeDouble((double) 112);
        typeModelValue5.write(modelWriter34);
        org.jboss.dmr.ValueExpression valueExpression36 = typeModelValue5.asExpression();
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType0.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char1 + "' != '" + 'p' + "'", char1 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue2);
        org.junit.Assert.assertTrue("'" + modelType3 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType3.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char4 + "' != '" + 'p' + "'", char4 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PROPERTY" + "'", str7, "PROPERTY");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(modelStreamFactory10);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertNotNull(modelWriter21);
        org.junit.Assert.assertNotNull(modelWriter22);
        org.junit.Assert.assertNotNull(modelWriter24);
        org.junit.Assert.assertNotNull(modelWriter26);
        org.junit.Assert.assertNotNull(modelWriter28);
        org.junit.Assert.assertNotNull(modelWriter30);
        org.junit.Assert.assertNotNull(modelWriter32);
        org.junit.Assert.assertNotNull(modelWriter34);
        org.junit.Assert.assertNotNull(valueExpression36);
    }

    @Test
    public void test13132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13132");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long2 = doubleModelValue1.asLong();
        long long4 = doubleModelValue1.asLong((long) 32);
        org.jboss.dmr.ModelValue modelValue5 = doubleModelValue1.protect();
        double double6 = doubleModelValue1.asDouble();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode8 = doubleModelValue1.getChild("big integer 1");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10L + "'", long2 == 10L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10L + "'", long4 == 10L);
        org.junit.Assert.assertNotNull(modelValue5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
    }

    @Test
    public void test13133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13133");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) 0.0f);
        byte[] byteArray2 = doubleModelValue1.asBytes();
        boolean boolean4 = doubleModelValue1.asBoolean(false);
        double double5 = doubleModelValue1.asDouble();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    }

    @Test
    public void test13134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13134");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str2 = longModelValue1.asString();
        byte[] byteArray3 = longModelValue1.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue4 = new org.jboss.dmr.BytesModelValue(byteArray3);
        java.lang.String str5 = bytesModelValue4.asString();
        int int6 = bytesModelValue4.asInt();
        int int7 = bytesModelValue4.asInt();
        int int9 = bytesModelValue4.asInt(112);
        int int10 = bytesModelValue4.asInt();
        org.jboss.dmr.ModelNode modelNode11 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode14 = modelNode11.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList15 = modelNode14.asList();
        org.jboss.dmr.ListModelValue listModelValue16 = new org.jboss.dmr.ListModelValue(modelNodeList15);
        org.jboss.dmr.ModelNode modelNode17 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue16);
        org.jboss.dmr.ModelValue modelValue18 = listModelValue16.resolve();
        int int20 = listModelValue16.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList21 = listModelValue16.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList22 = listModelValue16.asPropertyList();
        java.lang.String str23 = listModelValue16.asString();
        int int24 = listModelValue16.asInt();
        java.lang.String str25 = listModelValue16.asString();
        org.jboss.dmr.ModelType modelType26 = org.jboss.dmr.ModelType.DOUBLE;
        org.jboss.dmr.ModelNode modelNode27 = new org.jboss.dmr.ModelNode(modelType26);
        boolean boolean28 = listModelValue16.equals((java.lang.Object) modelType26);
        boolean boolean30 = listModelValue16.asBoolean(false);
        org.jboss.dmr.ModelNode modelNode32 = listModelValue16.requireChild((int) (short) 0);
        boolean boolean33 = bytesModelValue4.equals((java.lang.Object) modelNode32);
        org.jboss.dmr.ModelNode modelNode34 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode37 = modelNode34.setExpression("hi!", "hi!");
        java.lang.String str38 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode34);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList39 = modelNode34.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode41 = modelNode34.set((double) 0);
        java.lang.String str42 = modelNode41.asStringOrNull();
        boolean boolean43 = bytesModelValue4.equals((java.lang.Object) str42);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1" + "'", str2, "1");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str5, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(modelNodeList15);
        org.junit.Assert.assertNotNull(modelValue18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(propertyList21);
        org.junit.Assert.assertNotNull(propertyList22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str23, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str25, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + modelType26 + "' != '" + org.jboss.dmr.ModelType.DOUBLE + "'", modelType26.equals(org.jboss.dmr.ModelType.DOUBLE));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(modelNode37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str38, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList39);
        org.junit.Assert.assertNotNull(modelNode41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "0.0" + "'", str42, "0.0");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test13135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13135");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) 100);
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode5 = modelNode2.setExpression("hi!", "hi!");
        java.lang.String str6 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode2);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList7 = modelNode2.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode9 = modelNode2.set((double) 0);
        boolean boolean10 = modelNode2.isProtected();
        java.math.BigInteger bigInteger11 = modelNode2.asBigIntegerOrNull();
        boolean boolean12 = doubleModelValue1.equals((java.lang.Object) modelNode2);
        long long14 = doubleModelValue1.asLong((long) (short) 0);
        long long16 = doubleModelValue1.asLong((long) 'e');
        long long18 = doubleModelValue1.asLong(2L);
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str6, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList7);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(bigInteger11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 100L + "'", long14 == 100L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 100L + "'", long18 == 100L);
    }

    @Test
    public void test13136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13136");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        int int9 = bigDecimalModelValue7.asInt(0);
        java.math.BigInteger bigInteger10 = bigDecimalModelValue7.asBigInteger();
        java.math.BigDecimal bigDecimal11 = bigDecimalModelValue7.asBigDecimal();
        int int13 = bigDecimalModelValue7.asInt((int) (short) 100);
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode((double) (short) 100);
        org.jboss.dmr.Validation.validate(modelNode15, "(\"org.jboss.dmr.stream.ModelException: [(\\\"hi!\\\" => 0.0)]\" => (\"hi!\" => 0.0))");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory19 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream20 = null;
        org.jboss.dmr.Base64.InputStream inputStream22 = new org.jboss.dmr.Base64.InputStream(inputStream20, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream23 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream22);
        org.jboss.dmr.stream.ModelReader modelReader24 = modelStreamFactory19.newModelReader((java.io.InputStream) inputStream23);
        java.io.OutputStream outputStream25 = null;
        org.jboss.dmr.Base64.OutputStream outputStream26 = new org.jboss.dmr.Base64.OutputStream(outputStream25);
        org.jboss.dmr.Base64.OutputStream outputStream27 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream26);
        outputStream26.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter30 = modelStreamFactory19.newModelWriter((java.io.OutputStream) outputStream26);
        org.jboss.dmr.stream.ModelWriter modelWriter31 = modelWriter30.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter33 = modelWriter30.writeInt((int) '4');
        org.jboss.dmr.ModelNode modelNode34 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode37 = modelNode34.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList38 = modelNode37.asList();
        org.jboss.dmr.ListModelValue listModelValue39 = new org.jboss.dmr.ListModelValue(modelNodeList38);
        org.jboss.dmr.ModelNode modelNode40 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue39);
        org.jboss.dmr.ModelValue modelValue41 = listModelValue39.resolve();
        int int43 = listModelValue39.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList44 = listModelValue39.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList45 = listModelValue39.asPropertyList();
        java.lang.String str46 = listModelValue39.asString();
        int int47 = listModelValue39.asInt();
        java.lang.String str48 = listModelValue39.asString();
        org.jboss.dmr.ModelType modelType49 = org.jboss.dmr.ModelType.DOUBLE;
        org.jboss.dmr.ModelNode modelNode50 = new org.jboss.dmr.ModelNode(modelType49);
        boolean boolean51 = listModelValue39.equals((java.lang.Object) modelType49);
        org.jboss.dmr.TypeModelValue typeModelValue52 = org.jboss.dmr.TypeModelValue.of(modelType49);
        org.jboss.dmr.TypeModelValue typeModelValue53 = org.jboss.dmr.TypeModelValue.of(modelType49);
        org.jboss.dmr.stream.ModelWriter modelWriter54 = modelWriter30.writeType(modelType49);
        modelNode15.write(modelWriter54);
        org.jboss.dmr.stream.ModelWriter modelWriter56 = modelWriter54.writeUndefined();
        bigDecimalModelValue7.write(modelWriter56);
        java.lang.String str58 = bigDecimalModelValue7.asString();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(bigInteger10);
        org.junit.Assert.assertNotNull(bigDecimal11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(modelStreamFactory19);
        org.junit.Assert.assertNotNull(modelReader24);
        org.junit.Assert.assertNotNull(modelWriter30);
        org.junit.Assert.assertNotNull(modelWriter31);
        org.junit.Assert.assertNotNull(modelWriter33);
        org.junit.Assert.assertNotNull(modelNode37);
        org.junit.Assert.assertNotNull(modelNodeList38);
        org.junit.Assert.assertNotNull(modelValue41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(propertyList44);
        org.junit.Assert.assertNotNull(propertyList45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str46, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str48, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + modelType49 + "' != '" + org.jboss.dmr.ModelType.DOUBLE + "'", modelType49.equals(org.jboss.dmr.ModelType.DOUBLE));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(typeModelValue52);
        org.junit.Assert.assertNotNull(typeModelValue53);
        org.junit.Assert.assertNotNull(modelWriter54);
        org.junit.Assert.assertNotNull(modelWriter56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1.0" + "'", str58, "1.0");
    }

    @Test
    public void test13137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13137");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(modelType0);
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode6 = modelNode3.set("hi!", 0.0d);
        org.jboss.dmr.Property property7 = new org.jboss.dmr.Property("", modelNode6);
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(property7);
        org.jboss.dmr.ModelNode modelNode9 = property7.getValue();
        org.jboss.dmr.PropertyModelValue propertyModelValue10 = new org.jboss.dmr.PropertyModelValue(property7);
        java.util.List<org.jboss.dmr.Property> propertyList11 = propertyModelValue10.asPropertyList();
        org.jboss.dmr.ModelNode modelNode13 = propertyModelValue10.getChild((int) (short) 0);
        org.jboss.dmr.ModelNode modelNode14 = modelNode13.setEmptyList();
        boolean boolean16 = modelNode14.asBoolean(false);
        org.jboss.dmr.ObjectModelValue objectModelValue18 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode19 = objectModelValue18.asObject();
        org.jboss.dmr.ModelNode modelNode21 = objectModelValue18.getChild("TYPE_MODEL_VALUE");
        org.jboss.dmr.ModelNode modelNode23 = objectModelValue18.getChild("[(\"hi!\" => 0.0)]");
        org.jboss.dmr.Property property24 = new org.jboss.dmr.Property("PROPERTY_VALUE", modelNode23);
        modelNode14.setNoCopy(modelNode23);
        org.jboss.dmr.ModelNode modelNode28 = modelNode23.set("\"(\\\"EXPRESSION_VALUE\\\" => (\\\"\\\" => (\\\"hi!\\\" => 0.0)))\"", 0.0d);
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType0.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(propertyList11);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(modelNode21);
        org.junit.Assert.assertNotNull(modelNode23);
        org.junit.Assert.assertNotNull(modelNode28);
    }

    @Test
    public void test13138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13138");
        org.jboss.dmr.stream.ModelException modelException1 = new org.jboss.dmr.stream.ModelException("35");
        org.jboss.dmr.stream.ModelException modelException2 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException1);
        java.lang.String str3 = modelException1.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.jboss.dmr.stream.ModelException: 35" + "'", str3, "org.jboss.dmr.stream.ModelException: 35");
    }

    @Test
    public void test13139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13139");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        java.lang.String str5 = bigIntegerModelValue4.asString();
        long long7 = bigIntegerModelValue4.asLong(32L);
        double double8 = bigIntegerModelValue4.asDouble();
        java.lang.String str9 = bigIntegerModelValue4.asString();
        double double11 = bigIntegerModelValue4.asDouble((double) 'Z');
        org.jboss.dmr.ModelType modelType12 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode13 = new org.jboss.dmr.ModelNode(modelType12);
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode18 = modelNode15.set("hi!", 0.0d);
        org.jboss.dmr.Property property19 = new org.jboss.dmr.Property("", modelNode18);
        org.jboss.dmr.ModelNode modelNode20 = modelNode13.set(property19);
        org.jboss.dmr.ModelNode modelNode21 = property19.getValue();
        org.jboss.dmr.PropertyModelValue propertyModelValue22 = new org.jboss.dmr.PropertyModelValue(property19);
        org.jboss.dmr.ModelValue modelValue23 = propertyModelValue22.clone();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList24 = propertyModelValue22.asList();
        org.jboss.dmr.ModelNode modelNode26 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode29 = modelNode26.set("hi!", 0.0d);
        java.lang.String str30 = modelNode26.toString();
        org.jboss.dmr.ModelNode modelNode31 = modelNode26.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode33 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode36 = modelNode33.set("hi!", 0.0d);
        org.jboss.dmr.Property property37 = new org.jboss.dmr.Property("", modelNode36);
        org.jboss.dmr.ModelNode modelNode38 = modelNode26.set(property37);
        org.jboss.dmr.PropertyModelValue propertyModelValue40 = new org.jboss.dmr.PropertyModelValue("EXPRESSION_VALUE", modelNode38, false);
        java.util.Set<java.lang.String> strSet41 = propertyModelValue40.getKeys();
        org.jboss.dmr.ModelValue modelValue42 = propertyModelValue40.copy();
        boolean boolean43 = propertyModelValue22.equals(propertyModelValue40);
        org.jboss.dmr.ModelValue modelValue44 = propertyModelValue22.protect();
        org.jboss.dmr.ModelNode modelNode45 = propertyModelValue22.asObject();
        org.jboss.dmr.BooleanModelValue booleanModelValue47 = org.jboss.dmr.BooleanModelValue.valueOf(false);
        long long49 = booleanModelValue47.asLong((long) 32);
        int int50 = booleanModelValue47.asInt();
        java.math.BigDecimal bigDecimal51 = booleanModelValue47.asBigDecimal();
        org.jboss.dmr.ModelValue modelValue52 = booleanModelValue47.protect();
        org.jboss.dmr.stream.ModelEvent modelEvent53 = org.jboss.dmr.stream.ModelEvent.LONG;
        boolean boolean54 = booleanModelValue47.equals((java.lang.Object) modelEvent53);
        double double55 = booleanModelValue47.asDouble();
        long long56 = booleanModelValue47.asLong();
        byte[] byteArray57 = booleanModelValue47.asBytes();
        java.math.BigInteger bigInteger58 = booleanModelValue47.asBigInteger();
        boolean boolean59 = propertyModelValue22.equals((java.lang.Object) booleanModelValue47);
        boolean boolean60 = bigIntegerModelValue4.equals((java.lang.Object) boolean59);
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1" + "'", str5, "1");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1" + "'", str9, "1");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertTrue("'" + modelType12 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType12.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(modelNode21);
        org.junit.Assert.assertNotNull(modelValue23);
        org.junit.Assert.assertNotNull(modelNodeList24);
        org.junit.Assert.assertNotNull(modelNode29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(\"hi!\" => 0.0)" + "'", str30, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(modelNode36);
        org.junit.Assert.assertNotNull(modelNode38);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(modelValue42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(modelValue44);
        org.junit.Assert.assertNotNull(modelNode45);
        org.junit.Assert.assertNotNull(booleanModelValue47);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(bigDecimal51);
        org.junit.Assert.assertNotNull(modelValue52);
        org.junit.Assert.assertTrue("'" + modelEvent53 + "' != '" + org.jboss.dmr.stream.ModelEvent.LONG + "'", modelEvent53.equals(org.jboss.dmr.stream.ModelEvent.LONG));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[0]");
        org.junit.Assert.assertNotNull(bigInteger58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test13140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13140");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        boolean boolean8 = bigDecimalModelValue7.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression9 = bigDecimalModelValue7.asExpression();
        int int10 = bigDecimalModelValue7.asInt();
        long long11 = bigDecimalModelValue7.asLong();
        java.math.BigInteger bigInteger12 = bigDecimalModelValue7.asBigInteger();
        org.jboss.dmr.ValueExpression valueExpression13 = bigDecimalModelValue7.asExpression();
        org.jboss.dmr.ModelType modelType14 = org.jboss.dmr.ModelType.PROPERTY;
        char char15 = modelType14.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue16 = org.jboss.dmr.TypeModelValue.of(modelType14);
        org.jboss.dmr.ModelType modelType17 = org.jboss.dmr.ModelType.PROPERTY;
        char char18 = modelType17.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue19 = org.jboss.dmr.TypeModelValue.of(modelType17);
        boolean boolean20 = typeModelValue16.equals(typeModelValue19);
        java.lang.String str21 = typeModelValue19.asString();
        org.jboss.dmr.ModelType modelType22 = org.jboss.dmr.ModelType.PROPERTY;
        char char23 = modelType22.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue24 = org.jboss.dmr.TypeModelValue.of(modelType22);
        org.jboss.dmr.ModelType modelType25 = org.jboss.dmr.ModelType.PROPERTY;
        char char26 = modelType25.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue27 = org.jboss.dmr.TypeModelValue.of(modelType25);
        boolean boolean28 = typeModelValue24.equals(typeModelValue27);
        java.lang.String str29 = typeModelValue27.asString();
        boolean boolean31 = typeModelValue27.asBoolean(true);
        boolean boolean32 = typeModelValue19.equals(typeModelValue27);
        org.jboss.dmr.ValueExpression valueExpression33 = typeModelValue27.asExpression();
        org.jboss.dmr.ModelType modelType34 = org.jboss.dmr.ModelType.PROPERTY;
        char char35 = modelType34.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue36 = org.jboss.dmr.TypeModelValue.of(modelType34);
        org.jboss.dmr.ModelType modelType37 = org.jboss.dmr.ModelType.PROPERTY;
        char char38 = modelType37.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue39 = org.jboss.dmr.TypeModelValue.of(modelType37);
        boolean boolean40 = typeModelValue36.equals(typeModelValue39);
        boolean boolean41 = typeModelValue27.equals(typeModelValue36);
        org.jboss.dmr.ModelType modelType42 = org.jboss.dmr.ModelType.PROPERTY;
        char char43 = modelType42.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue44 = org.jboss.dmr.TypeModelValue.of(modelType42);
        boolean boolean45 = typeModelValue44.asBoolean();
        boolean boolean46 = typeModelValue27.equals(typeModelValue44);
        org.jboss.dmr.ValueExpression valueExpression47 = typeModelValue44.asExpression();
        org.jboss.dmr.ModelType modelType48 = org.jboss.dmr.ModelType.TYPE;
        org.jboss.dmr.TypeModelValue typeModelValue49 = org.jboss.dmr.TypeModelValue.of(modelType48);
        org.jboss.dmr.ModelNode modelNode50 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode51 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode54 = modelNode51.set("hi!", 0.0d);
        java.lang.String str55 = modelNode51.toString();
        org.jboss.dmr.ModelNode modelNode56 = modelNode51.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode58 = modelNode51.set(100);
        org.jboss.dmr.ModelNode modelNode59 = modelNode50.add(modelNode51);
        org.jboss.dmr.ModelType modelType61 = org.jboss.dmr.ModelType.BYTES;
        char char62 = modelType61.getTypeChar();
        org.jboss.dmr.ModelNode modelNode63 = modelNode50.set("org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]", modelType61);
        org.jboss.dmr.TypeModelValue typeModelValue64 = org.jboss.dmr.TypeModelValue.of(modelType61);
        boolean boolean65 = typeModelValue64.asBoolean();
        boolean boolean66 = typeModelValue49.equals(typeModelValue64);
        boolean boolean67 = typeModelValue44.equals(typeModelValue49);
        boolean boolean68 = bigDecimalModelValue7.equals((java.lang.Object) typeModelValue49);
        double double70 = bigDecimalModelValue7.asDouble((-1.0d));
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(valueExpression9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertNotNull(bigInteger12);
        org.junit.Assert.assertNotNull(valueExpression13);
        org.junit.Assert.assertTrue("'" + modelType14 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType14.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char15 + "' != '" + 'p' + "'", char15 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue16);
        org.junit.Assert.assertTrue("'" + modelType17 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType17.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + 'p' + "'", char18 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PROPERTY" + "'", str21, "PROPERTY");
        org.junit.Assert.assertTrue("'" + modelType22 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType22.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char23 + "' != '" + 'p' + "'", char23 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue24);
        org.junit.Assert.assertTrue("'" + modelType25 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType25.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char26 + "' != '" + 'p' + "'", char26 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PROPERTY" + "'", str29, "PROPERTY");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(valueExpression33);
        org.junit.Assert.assertTrue("'" + modelType34 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType34.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char35 + "' != '" + 'p' + "'", char35 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue36);
        org.junit.Assert.assertTrue("'" + modelType37 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType37.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char38 + "' != '" + 'p' + "'", char38 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + modelType42 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType42.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char43 + "' != '" + 'p' + "'", char43 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(valueExpression47);
        org.junit.Assert.assertTrue("'" + modelType48 + "' != '" + org.jboss.dmr.ModelType.TYPE + "'", modelType48.equals(org.jboss.dmr.ModelType.TYPE));
        org.junit.Assert.assertNotNull(typeModelValue49);
        org.junit.Assert.assertNotNull(modelNode54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(\"hi!\" => 0.0)" + "'", str55, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode56);
        org.junit.Assert.assertNotNull(modelNode58);
        org.junit.Assert.assertNotNull(modelNode59);
        org.junit.Assert.assertTrue("'" + modelType61 + "' != '" + org.jboss.dmr.ModelType.BYTES + "'", modelType61.equals(org.jboss.dmr.ModelType.BYTES));
        org.junit.Assert.assertTrue("'" + char62 + "' != '" + 'b' + "'", char62 == 'b');
        org.junit.Assert.assertNotNull(modelNode63);
        org.junit.Assert.assertNotNull(typeModelValue64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
    }

    @Test
    public void test13141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13141");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long3 = intModelValue1.asLong((long) '#');
        org.jboss.dmr.IntModelValue intModelValue5 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long7 = intModelValue5.asLong((long) 'b');
        java.lang.String str8 = intModelValue5.asString();
        boolean boolean9 = intModelValue1.equals(intModelValue5);
        int int10 = intModelValue5.asInt();
        int int12 = intModelValue5.asInt(32);
        org.jboss.dmr.DoubleModelValue doubleModelValue14 = new org.jboss.dmr.DoubleModelValue((double) (byte) -1);
        org.jboss.dmr.DoubleModelValue doubleModelValue16 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        int int18 = doubleModelValue16.asInt((int) 'l');
        java.math.BigDecimal bigDecimal19 = doubleModelValue16.asBigDecimal();
        boolean boolean20 = doubleModelValue14.equals(doubleModelValue16);
        boolean boolean21 = intModelValue5.equals((java.lang.Object) doubleModelValue14);
        int int23 = doubleModelValue14.asInt((int) (byte) 0);
        java.math.BigDecimal bigDecimal24 = doubleModelValue14.asBigDecimal();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 32L + "'", long3 == 32L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 32L + "'", long7 == 32L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "32" + "'", str8, "32");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertNotNull(bigDecimal19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(bigDecimal24);
    }

    @Test
    public void test13142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13142");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        int int6 = bigIntegerModelValue4.asInt((int) (short) 1);
        org.jboss.dmr.BooleanModelValue booleanModelValue7 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double8 = booleanModelValue7.asDouble();
        org.jboss.dmr.ModelValue modelValue9 = booleanModelValue7.copy();
        java.math.BigInteger bigInteger10 = booleanModelValue7.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue11 = new org.jboss.dmr.BigIntegerModelValue(bigInteger10);
        java.lang.String str12 = bigIntegerModelValue11.asString();
        java.math.BigInteger bigInteger13 = bigIntegerModelValue11.asBigInteger();
        boolean boolean14 = bigIntegerModelValue4.equals(bigIntegerModelValue11);
        double double16 = bigIntegerModelValue4.asDouble(0.0d);
        double double18 = bigIntegerModelValue4.asDouble((double) 100.0f);
        java.math.BigInteger bigInteger19 = bigIntegerModelValue4.asBigInteger();
        org.jboss.dmr.ValueExpression valueExpression20 = bigIntegerModelValue4.asExpression();
        org.jboss.dmr.ModelNode modelNode21 = new org.jboss.dmr.ModelNode(valueExpression20);
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanModelValue7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue9);
        org.junit.Assert.assertNotNull(bigInteger10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1" + "'", str12, "1");
        org.junit.Assert.assertNotNull(bigInteger13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(bigInteger19);
        org.junit.Assert.assertNotNull(valueExpression20);
    }

    @Test
    public void test13143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13143");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue5);
        org.jboss.dmr.ModelValue modelValue7 = listModelValue5.resolve();
        int int9 = listModelValue5.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList10 = listModelValue5.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList11 = listModelValue5.asPropertyList();
        org.jboss.dmr.ModelValue modelValue12 = listModelValue5.copy();
        java.lang.String str13 = listModelValue5.toString();
        boolean boolean15 = listModelValue5.has(1);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray16 = listModelValue5.asBytes();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertNotNull(modelValue7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(propertyList10);
        org.junit.Assert.assertNotNull(propertyList11);
        org.junit.Assert.assertNotNull(modelValue12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str13, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test13144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13144");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((long) 10);
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("(\"hi!\" => expression \"(\\\"hi!\\\" => 0.0)\")", (long) (short) -1);
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode("EXPRESSION_VALUE");
        org.jboss.dmr.BooleanModelValue booleanModelValue9 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger10 = booleanModelValue9.asBigInteger();
        byte[] byteArray11 = booleanModelValue9.asBytes();
        org.jboss.dmr.ModelNode modelNode12 = modelNode6.set("expression \"hi!\"", byteArray11);
        java.lang.String str13 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode12);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList14 = modelNode12.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode16 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int17 = modelNode16.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode19 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long20 = modelNode19.asLong();
        org.jboss.dmr.ValueExpression valueExpression21 = modelNode19.asExpression();
        java.math.BigDecimal bigDecimal22 = valueExpression21.resolveBigDecimal();
        org.jboss.dmr.ModelNode modelNode23 = modelNode16.set(valueExpression21);
        java.lang.String str24 = valueExpression21.getExpressionString();
        java.lang.String str25 = valueExpression21.resolveString();
        org.jboss.dmr.ModelNode modelNode26 = modelNode12.set("H4sIAAAAAAAAAFvzloG1uIhBPL8oXS8rKb+4WC8lt0jPNz8lNccPSMjoLnSZu7jPnoeBoaKgnLG0\nAgDPxTfOMAAAAA==", valueExpression21);
        org.jboss.dmr.ValueExpression valueExpression27 = null;
        boolean boolean28 = valueExpression21.equals(valueExpression27);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode29 = modelNode4.set(valueExpression27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: newValue is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(booleanModelValue9);
        org.junit.Assert.assertNotNull(bigInteger10);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1]");
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3GXAAEGV4cHJlc3Np\nb24gImhpISJiAAAAAQF4" + "'", str13, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3GXAAEGV4cHJlc3Np\nb24gImhpISJiAAAAAQF4");
        org.junit.Assert.assertNotNull(modelNodeList14);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
        org.junit.Assert.assertNotNull(valueExpression21);
        org.junit.Assert.assertNotNull(bigDecimal22);
        org.junit.Assert.assertNotNull(modelNode23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1.0" + "'", str24, "1.0");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1.0" + "'", str25, "1.0");
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test13145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13145");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isBigInteger();
        boolean boolean17 = modelReader15.isString();
        boolean boolean18 = modelReader15.isBigDecimal();
        boolean boolean19 = modelReader15.isUndefined();
        boolean boolean20 = modelReader15.isBigInteger();
        boolean boolean21 = modelReader15.isListEnd();
        boolean boolean22 = modelReader15.isExpression();
        // The following exception was thrown during execution in test generation
        try {
            java.math.BigInteger bigInteger23 = modelReader15.getBigInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Current event isn't big integer");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test13146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13146");
        java.io.InputStream inputStream0 = null;
        org.jboss.dmr.Base64.InputStream inputStream2 = new org.jboss.dmr.Base64.InputStream(inputStream0, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream3 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream2);
        org.jboss.dmr.Base64.InputStream inputStream5 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream3, 0);
        org.jboss.dmr.Base64.InputStream inputStream7 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream5, (int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            inputStream5.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13147");
        org.jboss.dmr.ObjectModelValue objectModelValue1 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode2 = objectModelValue1.asObject();
        org.jboss.dmr.ModelValue modelValue3 = objectModelValue1.copy();
        java.lang.String str4 = objectModelValue1.toString();
        org.jboss.dmr.ObjectModelValue objectModelValue5 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode6 = objectModelValue5.asObject();
        org.jboss.dmr.ObjectModelValue objectModelValue7 = null;
        boolean boolean8 = objectModelValue5.equals(objectModelValue7);
        boolean boolean9 = objectModelValue1.equals(objectModelValue7);
        org.jboss.dmr.ModelNode modelNode11 = new org.jboss.dmr.ModelNode("EXPRESSION_VALUE");
        org.jboss.dmr.BooleanModelValue booleanModelValue14 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger15 = booleanModelValue14.asBigInteger();
        byte[] byteArray16 = booleanModelValue14.asBytes();
        org.jboss.dmr.ModelNode modelNode17 = modelNode11.set("expression \"hi!\"", byteArray16);
        org.jboss.dmr.ModelNode modelNode18 = modelNode17.clear();
        int int20 = modelNode17.asInt((int) 'p');
        java.lang.Boolean boolean21 = modelNode17.asBooleanOrNull();
        boolean boolean22 = objectModelValue1.equals((java.lang.Object) modelNode17);
        double double24 = modelNode17.asDouble((double) 0.0f);
        org.jboss.dmr.ModelNode modelNode25 = modelNode17.clone();
        org.jboss.dmr.PropertyModelValue propertyModelValue27 = new org.jboss.dmr.PropertyModelValue("expression \"true\"", modelNode17, false);
        java.lang.String str28 = propertyModelValue27.asString();
        org.junit.Assert.assertNotNull(modelNode2);
        org.junit.Assert.assertNotNull(modelValue3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(booleanModelValue14);
        org.junit.Assert.assertNotNull(bigInteger15);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[1]");
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 112 + "'", int20 == 112);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(\"expression \\\"true\\\"\" => undefined)" + "'", str28, "(\"expression \\\"true\\\"\" => undefined)");
    }

    @Test
    public void test13148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13148");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        java.io.InputStream inputStream16 = null;
        org.jboss.dmr.Base64.InputStream inputStream18 = new org.jboss.dmr.Base64.InputStream(inputStream16, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream19 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream18);
        org.jboss.dmr.Base64.InputStream inputStream20 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream18);
        org.jboss.dmr.stream.ModelReader modelReader21 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream18);
        java.io.InputStream inputStream22 = null;
        org.jboss.dmr.Base64.InputStream inputStream24 = new org.jboss.dmr.Base64.InputStream(inputStream22, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue26 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str27 = longModelValue26.asString();
        byte[] byteArray28 = longModelValue26.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue29 = new org.jboss.dmr.BytesModelValue(byteArray28);
        int int32 = inputStream24.read(byteArray28, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream34 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream24, (-1));
        org.jboss.dmr.Base64.InputStream inputStream36 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream24, (int) 'p');
        org.jboss.dmr.Base64.InputStream inputStream37 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream36);
        org.jboss.dmr.stream.ModelReader modelReader38 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream36);
        java.io.OutputStream outputStream39 = null;
        org.jboss.dmr.Base64.OutputStream outputStream40 = new org.jboss.dmr.Base64.OutputStream(outputStream39);
        outputStream40.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream42 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream40);
        org.jboss.dmr.Base64.OutputStream outputStream43 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream42);
        outputStream43.flushBase64();
        outputStream43.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream46 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream43);
        org.jboss.dmr.Base64.OutputStream outputStream48 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream46, 0);
        org.jboss.dmr.Base64.OutputStream outputStream49 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream48);
        org.jboss.dmr.stream.ModelWriter modelWriter50 = modelStreamFactory1.newModelWriter((java.io.OutputStream) outputStream49);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory52 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream53 = null;
        org.jboss.dmr.Base64.InputStream inputStream55 = new org.jboss.dmr.Base64.InputStream(inputStream53, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue57 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str58 = longModelValue57.asString();
        byte[] byteArray59 = longModelValue57.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue60 = new org.jboss.dmr.BytesModelValue(byteArray59);
        int int63 = inputStream55.read(byteArray59, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream65 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream55, (-1));
        org.jboss.dmr.stream.ModelReader modelReader66 = modelStreamFactory52.newModelReader((java.io.InputStream) inputStream65);
        org.jboss.dmr.stream.ModelReader modelReader67 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream65);
        java.io.OutputStream outputStream68 = null;
        org.jboss.dmr.Base64.OutputStream outputStream69 = new org.jboss.dmr.Base64.OutputStream(outputStream68);
        outputStream69.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream71 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream69);
        org.jboss.dmr.Base64.OutputStream outputStream73 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream71, (int) (byte) -1);
        outputStream73.resumeEncoding();
        outputStream73.flushBase64();
        java.nio.charset.Charset charset76 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.stream.ModelWriter modelWriter77 = modelStreamFactory1.newModelWriter((java.io.OutputStream) outputStream73, charset76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Parameter cannot be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertNotNull(modelReader21);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1" + "'", str27, "1");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(modelReader38);
        org.junit.Assert.assertNotNull(modelWriter50);
        org.junit.Assert.assertNotNull(modelStreamFactory52);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1" + "'", str58, "1");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(modelReader66);
        org.junit.Assert.assertNotNull(modelReader67);
    }

    @Test
    public void test13149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13149");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("rO0ABXNyAB1vcmcuamJvc3MuZG1yLlZhbHVlRXhwcmVzc2lvbvwmn+JujpBcDAAAeHB3BgAEMTAu\nMHg=");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean3 = stringModelValue1.asBoolean(true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13150");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str2 = longModelValue1.asString();
        byte[] byteArray3 = longModelValue1.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue4 = new org.jboss.dmr.BytesModelValue(byteArray3);
        java.lang.String str5 = bytesModelValue4.asString();
        int int6 = bytesModelValue4.asInt();
        int int7 = bytesModelValue4.asInt();
        org.jboss.dmr.LongModelValue longModelValue9 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str10 = longModelValue9.asString();
        byte[] byteArray11 = longModelValue9.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue12 = new org.jboss.dmr.BytesModelValue(byteArray11);
        double double13 = bytesModelValue12.asDouble();
        boolean boolean14 = bytesModelValue4.equals(bytesModelValue12);
        byte[] byteArray15 = bytesModelValue12.asBytes();
        java.math.BigInteger bigInteger16 = bytesModelValue12.asBigInteger();
        org.jboss.dmr.LongModelValue longModelValue18 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str19 = longModelValue18.asString();
        byte[] byteArray20 = longModelValue18.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue21 = new org.jboss.dmr.BytesModelValue(byteArray20);
        double double22 = bytesModelValue21.asDouble();
        boolean boolean23 = bytesModelValue12.equals(bytesModelValue21);
        org.jboss.dmr.LongModelValue longModelValue25 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str26 = longModelValue25.asString();
        byte[] byteArray27 = longModelValue25.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue28 = new org.jboss.dmr.BytesModelValue(byteArray27);
        java.lang.String str29 = bytesModelValue28.asString();
        int int30 = bytesModelValue28.asInt();
        java.lang.String str31 = bytesModelValue28.asString();
        java.lang.String str32 = bytesModelValue28.asString();
        long long34 = bytesModelValue28.asLong((long) (byte) 10);
        boolean boolean35 = bytesModelValue12.equals(bytesModelValue28);
        long long36 = bytesModelValue12.asLong();
        double double37 = bytesModelValue12.asDouble();
        org.jboss.dmr.ModelNode modelNode39 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long40 = modelNode39.asLong();
        org.jboss.dmr.ValueExpression valueExpression41 = modelNode39.asExpression();
        java.math.BigDecimal bigDecimal42 = valueExpression41.resolveBigDecimal();
        java.lang.String str43 = valueExpression41.getExpressionString();
        java.math.BigDecimal bigDecimal44 = valueExpression41.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue45 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal44);
        int int47 = bigDecimalModelValue45.asInt(0);
        java.math.BigInteger bigInteger48 = bigDecimalModelValue45.asBigInteger();
        boolean boolean49 = bigDecimalModelValue45.asBoolean();
        org.jboss.dmr.LongModelValue longModelValue51 = new org.jboss.dmr.LongModelValue(1L);
        int int53 = longModelValue51.asInt((int) (byte) 0);
        org.jboss.dmr.LongModelValue longModelValue55 = new org.jboss.dmr.LongModelValue((-1L));
        long long57 = longModelValue55.asLong((long) (byte) -1);
        double double59 = longModelValue55.asDouble((double) 10.0f);
        boolean boolean60 = longModelValue51.equals(longModelValue55);
        byte[] byteArray61 = longModelValue55.asBytes();
        org.jboss.dmr.ModelNode modelNode62 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) longModelValue55);
        boolean boolean63 = bigDecimalModelValue45.equals((java.lang.Object) modelNode62);
        org.jboss.dmr.ValueExpression valueExpression64 = bigDecimalModelValue45.asExpression();
        java.math.BigDecimal bigDecimal65 = bigDecimalModelValue45.asBigDecimal();
        boolean boolean66 = bytesModelValue12.equals((java.lang.Object) bigDecimal65);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1" + "'", str2, "1");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str5, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1" + "'", str10, "1");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.9E-324d + "'", double13 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(bigInteger16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1" + "'", str19, "1");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.9E-324d + "'", double22 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1" + "'", str26, "1");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str29, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str31, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str32, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1L + "'", long34 == 1L);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1L + "'", long36 == 1L);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.9E-324d + "'", double37 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1L + "'", long40 == 1L);
        org.junit.Assert.assertNotNull(valueExpression41);
        org.junit.Assert.assertNotNull(bigDecimal42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1.0" + "'", str43, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(bigInteger48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-1.0d) + "'", double59 == (-1.0d));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[-1, -1, -1, -1, -1, -1, -1, -1]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(valueExpression64);
        org.junit.Assert.assertNotNull(bigDecimal65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test13151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13151");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue((-1L));
        long long3 = longModelValue1.asLong((long) (byte) -1);
        boolean boolean5 = longModelValue1.asBoolean(false);
        java.io.OutputStream outputStream6 = null;
        org.jboss.dmr.Base64.OutputStream outputStream7 = new org.jboss.dmr.Base64.OutputStream(outputStream6);
        outputStream7.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream9 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream7);
        org.jboss.dmr.Base64.OutputStream outputStream11 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream9, (int) (byte) -1);
        org.jboss.dmr.Base64.OutputStream outputStream12 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream11);
        outputStream12.resumeEncoding();
        boolean boolean14 = longModelValue1.equals((java.lang.Object) outputStream12);
        long long16 = longModelValue1.asLong((long) 'p');
        boolean boolean17 = longModelValue1.asBoolean();
        org.jboss.dmr.LongModelValue longModelValue19 = new org.jboss.dmr.LongModelValue((long) (byte) -1);
        double double21 = longModelValue19.asDouble(0.0d);
        org.jboss.dmr.LongModelValue longModelValue23 = new org.jboss.dmr.LongModelValue(1L);
        int int25 = longModelValue23.asInt((int) (byte) 0);
        org.jboss.dmr.LongModelValue longModelValue27 = new org.jboss.dmr.LongModelValue((-1L));
        long long29 = longModelValue27.asLong((long) (byte) -1);
        double double31 = longModelValue27.asDouble((double) 10.0f);
        boolean boolean32 = longModelValue23.equals(longModelValue27);
        byte[] byteArray33 = longModelValue27.asBytes();
        org.jboss.dmr.ModelNode modelNode34 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) longModelValue27);
        byte[] byteArray35 = longModelValue27.asBytes();
        boolean boolean36 = longModelValue19.equals(longModelValue27);
        boolean boolean37 = longModelValue1.equals(longModelValue27);
        java.lang.String str38 = longModelValue1.asString();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1.0d) + "'", double21 == (-1.0d));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-1.0d) + "'", double31 == (-1.0d));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[-1, -1, -1, -1, -1, -1, -1, -1]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[-1, -1, -1, -1, -1, -1, -1, -1]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1" + "'", str38, "-1");
    }

    @Test
    public void test13152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13152");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        int int9 = bigDecimalModelValue7.asInt(0);
        java.math.BigInteger bigInteger10 = bigDecimalModelValue7.asBigInteger();
        java.math.BigDecimal bigDecimal11 = bigDecimalModelValue7.asBigDecimal();
        java.math.BigInteger bigInteger12 = bigDecimalModelValue7.asBigInteger();
        double double13 = bigDecimalModelValue7.asDouble();
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long16 = modelNode15.asLong();
        org.jboss.dmr.ValueExpression valueExpression17 = modelNode15.asExpression();
        java.math.BigDecimal bigDecimal18 = valueExpression17.resolveBigDecimal();
        java.lang.String str19 = valueExpression17.getExpressionString();
        java.math.BigDecimal bigDecimal20 = valueExpression17.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue21 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal20);
        int int23 = bigDecimalModelValue21.asInt(0);
        int int24 = bigDecimalModelValue21.asInt();
        int int25 = bigDecimalModelValue21.asInt();
        java.math.BigInteger bigInteger26 = bigDecimalModelValue21.asBigInteger();
        java.math.BigInteger bigInteger27 = bigDecimalModelValue21.asBigInteger();
        boolean boolean28 = bigDecimalModelValue7.equals(bigDecimalModelValue21);
        double double29 = bigDecimalModelValue7.asDouble();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(bigInteger10);
        org.junit.Assert.assertNotNull(bigDecimal11);
        org.junit.Assert.assertNotNull(bigInteger12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertNotNull(valueExpression17);
        org.junit.Assert.assertNotNull(bigDecimal18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1.0" + "'", str19, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(bigInteger26);
        org.junit.Assert.assertNotNull(bigInteger27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
    }

    @Test
    public void test13153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13153");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        int int3 = longModelValue1.asInt((int) (byte) 0);
        java.math.BigInteger bigInteger4 = longModelValue1.asBigInteger();
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue((-1L));
        long long8 = longModelValue6.asLong((long) (byte) -1);
        int int10 = longModelValue6.asInt(0);
        boolean boolean11 = longModelValue1.equals((java.lang.Object) longModelValue6);
        java.lang.String str12 = longModelValue1.asString();
        int int13 = longModelValue1.asInt();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(bigInteger4);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1" + "'", str12, "1");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test13154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13154");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) 100);
        double double2 = doubleModelValue1.asDouble();
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 100.0d + "'", double2 == 100.0d);
    }

    @Test
    public void test13155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13155");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.setExpression("hi!", "hi!");
        java.lang.String str5 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode1);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList6 = modelNode1.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set((double) 0);
        org.jboss.dmr.ModelType modelType10 = org.jboss.dmr.ModelType.PROPERTY;
        char char11 = modelType10.getTypeChar();
        org.jboss.dmr.ModelNode modelNode12 = modelNode1.set("[(\"hi!\" => 0.0)]", modelType10);
        org.jboss.dmr.Property property13 = new org.jboss.dmr.Property("\"(\\\"hi!\\\" => 0.0)\"", modelNode12);
        org.jboss.dmr.ModelType modelType15 = org.jboss.dmr.ModelType.STRING;
        org.jboss.dmr.ModelNode modelNode16 = modelNode12.set("H4sIAAAAAAAAAAMAAAAAAAAAAAA=", modelType15);
        org.jboss.dmr.ModelNode modelNode17 = modelNode12.resolve();
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str5, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertTrue("'" + modelType10 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType10.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char11 + "' != '" + 'p' + "'", char11 == 'p');
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertTrue("'" + modelType15 + "' != '" + org.jboss.dmr.ModelType.STRING + "'", modelType15.equals(org.jboss.dmr.ModelType.STRING));
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertNotNull(modelNode17);
    }

    @Test
    public void test13156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13156");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        java.lang.String str2 = doubleModelValue1.asString();
        byte[] byteArray3 = doubleModelValue1.asBytes();
        org.jboss.dmr.ValueExpression valueExpression4 = doubleModelValue1.asExpression();
        java.lang.String str5 = valueExpression4.getExpressionString();
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long8 = modelNode7.asLong();
        org.jboss.dmr.ValueExpression valueExpression9 = modelNode7.asExpression();
        java.math.BigDecimal bigDecimal10 = valueExpression9.resolveBigDecimal();
        java.lang.String str11 = valueExpression9.getExpressionString();
        java.math.BigDecimal bigDecimal12 = valueExpression9.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue13 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal12);
        boolean boolean14 = bigDecimalModelValue13.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression15 = bigDecimalModelValue13.asExpression();
        int int16 = bigDecimalModelValue13.asInt();
        java.math.BigDecimal bigDecimal17 = bigDecimalModelValue13.asBigDecimal();
        long long19 = bigDecimalModelValue13.asLong((long) 'p');
        boolean boolean20 = valueExpression4.equals((java.lang.Object) bigDecimalModelValue13);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory22 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream23 = null;
        org.jboss.dmr.Base64.InputStream inputStream25 = new org.jboss.dmr.Base64.InputStream(inputStream23, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue27 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str28 = longModelValue27.asString();
        byte[] byteArray29 = longModelValue27.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue30 = new org.jboss.dmr.BytesModelValue(byteArray29);
        int int33 = inputStream25.read(byteArray29, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream35 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream25, (-1));
        org.jboss.dmr.stream.ModelReader modelReader36 = modelStreamFactory22.newModelReader((java.io.InputStream) inputStream35);
        boolean boolean37 = modelReader36.isPropertyStart();
        boolean boolean38 = modelReader36.isPropertyStart();
        boolean boolean39 = modelReader36.isExpression();
        boolean boolean40 = modelReader36.isType();
        boolean boolean41 = modelReader36.isPropertyEnd();
        boolean boolean42 = bigDecimalModelValue13.equals((java.lang.Object) boolean41);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "10.0" + "'", str2, "10.0");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(valueExpression4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "10.0" + "'", str5, "10.0");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1L + "'", long8 == 1L);
        org.junit.Assert.assertNotNull(valueExpression9);
        org.junit.Assert.assertNotNull(bigDecimal10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0" + "'", str11, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(valueExpression15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(bigDecimal17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(modelStreamFactory22);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1" + "'", str28, "1");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(modelReader36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test13157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13157");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        int int6 = bigIntegerModelValue4.asInt((int) (short) 1);
        org.jboss.dmr.BooleanModelValue booleanModelValue7 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double8 = booleanModelValue7.asDouble();
        org.jboss.dmr.ModelValue modelValue9 = booleanModelValue7.copy();
        java.math.BigInteger bigInteger10 = booleanModelValue7.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue11 = new org.jboss.dmr.BigIntegerModelValue(bigInteger10);
        int int13 = bigIntegerModelValue11.asInt((int) (short) 1);
        org.jboss.dmr.BooleanModelValue booleanModelValue14 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double15 = booleanModelValue14.asDouble();
        org.jboss.dmr.ModelValue modelValue16 = booleanModelValue14.copy();
        java.math.BigInteger bigInteger17 = booleanModelValue14.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue18 = new org.jboss.dmr.BigIntegerModelValue(bigInteger17);
        java.lang.String str19 = bigIntegerModelValue18.asString();
        java.math.BigInteger bigInteger20 = bigIntegerModelValue18.asBigInteger();
        boolean boolean21 = bigIntegerModelValue11.equals(bigIntegerModelValue18);
        int int22 = bigIntegerModelValue18.asInt();
        boolean boolean23 = bigIntegerModelValue4.equals(bigIntegerModelValue18);
        org.jboss.dmr.LongModelValue longModelValue25 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str26 = longModelValue25.asString();
        byte[] byteArray27 = longModelValue25.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue28 = new org.jboss.dmr.BytesModelValue(byteArray27);
        java.lang.String str29 = bytesModelValue28.asString();
        int int30 = bytesModelValue28.asInt();
        int int31 = bytesModelValue28.asInt();
        org.jboss.dmr.LongModelValue longModelValue33 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str34 = longModelValue33.asString();
        byte[] byteArray35 = longModelValue33.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue36 = new org.jboss.dmr.BytesModelValue(byteArray35);
        double double37 = bytesModelValue36.asDouble();
        boolean boolean38 = bytesModelValue28.equals(bytesModelValue36);
        org.jboss.dmr.LongModelValue longModelValue40 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str41 = longModelValue40.asString();
        byte[] byteArray42 = longModelValue40.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue43 = new org.jboss.dmr.BytesModelValue(byteArray42);
        boolean boolean44 = bytesModelValue36.equals(bytesModelValue43);
        java.math.BigInteger bigInteger45 = bytesModelValue43.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue46 = new org.jboss.dmr.BigIntegerModelValue(bigInteger45);
        boolean boolean47 = bigIntegerModelValue18.equals(bigIntegerModelValue46);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode49 = bigIntegerModelValue46.removeChild("(\"35\" => 0.0)");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanModelValue7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue9);
        org.junit.Assert.assertNotNull(bigInteger10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(booleanModelValue14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue16);
        org.junit.Assert.assertNotNull(bigInteger17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1" + "'", str19, "1");
        org.junit.Assert.assertNotNull(bigInteger20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1" + "'", str26, "1");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str29, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1" + "'", str34, "1");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.9E-324d + "'", double37 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1" + "'", str41, "1");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(bigInteger45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test13158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13158");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode("EXPRESSION_VALUE");
        org.jboss.dmr.ModelNode modelNode2 = modelNode1.clear();
        org.jboss.dmr.ModelNode modelNode5 = modelNode1.add("35", 10);
        org.jboss.dmr.ModelType modelType6 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode(modelType6);
        org.jboss.dmr.ModelNode modelNode9 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode12 = modelNode9.set("hi!", 0.0d);
        org.jboss.dmr.Property property13 = new org.jboss.dmr.Property("", modelNode12);
        org.jboss.dmr.ModelNode modelNode14 = modelNode7.set(property13);
        java.lang.String str15 = property13.getName();
        org.jboss.dmr.Property property16 = property13.clone();
        org.jboss.dmr.PropertyModelValue propertyModelValue17 = new org.jboss.dmr.PropertyModelValue(property13);
        org.jboss.dmr.ModelNode modelNode18 = modelNode1.add(property13);
        org.jboss.dmr.ModelNode modelNode20 = modelNode1.addExpression("");
        org.jboss.dmr.ModelType modelType21 = modelNode1.getType();
        org.jboss.dmr.ModelNode modelNode24 = modelNode1.add("H4sIAAAAAAAAAHNQYQADAAsATXcIAAAA", (long) 'J');
        java.lang.String str25 = modelNode24.toString();
        org.junit.Assert.assertNotNull(modelNode2);
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertTrue("'" + modelType6 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType6.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(property16);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertTrue("'" + modelType21 + "' != '" + org.jboss.dmr.ModelType.LIST + "'", modelType21.equals(org.jboss.dmr.ModelType.LIST));
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[\n    (\"35\" => 10),\n    (\"\" => (\"hi!\" => 0.0)),\n    expression \"\",\n    (\"H4sIAAAAAAAAAHNQYQADAAsATXcIAAAA\" => 74L)\n]" + "'", str25, "[\n    (\"35\" => 10),\n    (\"\" => (\"hi!\" => 0.0)),\n    expression \"\",\n    (\"H4sIAAAAAAAAAHNQYQADAAsATXcIAAAA\" => 74L)\n]");
    }

    @Test
    public void test13159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13159");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue((long) '4');
        java.math.BigDecimal bigDecimal2 = longModelValue1.asBigDecimal();
        org.jboss.dmr.LongModelValue longModelValue4 = new org.jboss.dmr.LongModelValue((-1L));
        long long6 = longModelValue4.asLong((long) (byte) -1);
        int int8 = longModelValue4.asInt(0);
        boolean boolean9 = longModelValue1.equals(longModelValue4);
        java.math.BigInteger bigInteger10 = longModelValue1.asBigInteger();
        int int12 = longModelValue1.asInt((int) 'd');
        org.junit.Assert.assertNotNull(bigDecimal2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(bigInteger10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
    }

    @Test
    public void test13160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13160");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue(0.0d);
        java.lang.String str2 = doubleModelValue1.asString();
        double double3 = doubleModelValue1.asDouble();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0.0" + "'", str2, "0.0");
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
    }

    @Test
    public void test13161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13161");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(modelType0);
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode6 = modelNode3.set("hi!", 0.0d);
        org.jboss.dmr.Property property7 = new org.jboss.dmr.Property("", modelNode6);
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(property7);
        org.jboss.dmr.ModelNode modelNode9 = property7.getValue();
        org.jboss.dmr.PropertyModelValue propertyModelValue10 = new org.jboss.dmr.PropertyModelValue(property7);
        java.util.List<org.jboss.dmr.Property> propertyList11 = propertyModelValue10.asPropertyList();
        org.jboss.dmr.ModelNode modelNode13 = propertyModelValue10.getChild((int) (short) 0);
        boolean boolean15 = propertyModelValue10.has("(\"hi!\" => 0.0)");
        org.jboss.dmr.ModelNode modelNode16 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) propertyModelValue10);
        org.jboss.dmr.BooleanModelValue booleanModelValue18 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger19 = booleanModelValue18.asBigInteger();
        int int20 = booleanModelValue18.asInt();
        double double22 = booleanModelValue18.asDouble((double) 1);
        java.math.BigInteger bigInteger23 = booleanModelValue18.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue24 = new org.jboss.dmr.BigIntegerModelValue(bigInteger23);
        java.math.BigDecimal bigDecimal25 = bigIntegerModelValue24.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode26 = modelNode16.set(bigDecimal25);
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType0.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(propertyList11);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(booleanModelValue18);
        org.junit.Assert.assertNotNull(bigInteger19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(bigInteger23);
        org.junit.Assert.assertNotNull(bigDecimal25);
        org.junit.Assert.assertNotNull(modelNode26);
    }

    @Test
    public void test13162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13162");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        boolean boolean8 = bigDecimalModelValue7.asBoolean();
        long long9 = bigDecimalModelValue7.asLong();
        java.lang.String str10 = bigDecimalModelValue7.asString();
        org.jboss.dmr.ModelNode modelNode12 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long13 = modelNode12.asLong();
        org.jboss.dmr.ValueExpression valueExpression14 = modelNode12.asExpression();
        java.math.BigDecimal bigDecimal15 = valueExpression14.resolveBigDecimal();
        java.lang.String str16 = valueExpression14.getExpressionString();
        java.math.BigDecimal bigDecimal17 = valueExpression14.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue18 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal17);
        boolean boolean19 = bigDecimalModelValue18.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression20 = bigDecimalModelValue18.asExpression();
        int int21 = bigDecimalModelValue18.asInt();
        long long22 = bigDecimalModelValue18.asLong();
        boolean boolean23 = bigDecimalModelValue7.equals(bigDecimalModelValue18);
        java.math.BigDecimal bigDecimal24 = bigDecimalModelValue18.asBigDecimal();
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver25 = org.jboss.dmr.ValueExpressionResolver.DEFAULT_RESOLVER;
        org.jboss.dmr.BooleanModelValue booleanModelValue27 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long28 = booleanModelValue27.asLong();
        org.jboss.dmr.ValueExpression valueExpression29 = booleanModelValue27.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue30 = new org.jboss.dmr.ExpressionValue(valueExpression29);
        java.lang.String str31 = valueExpression29.getExpressionString();
        java.lang.String str32 = valueExpressionResolver25.resolve(valueExpression29);
        java.lang.String str33 = valueExpression29.toString();
        java.lang.String str34 = valueExpression29.toString();
        org.jboss.dmr.ModelNode modelNode35 = new org.jboss.dmr.ModelNode(valueExpression29);
        boolean boolean36 = bigDecimalModelValue18.equals((java.lang.Object) valueExpression29);
        org.jboss.dmr.ModelNode modelNode37 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int38 = modelNode37.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode40 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long41 = modelNode40.asLong();
        org.jboss.dmr.ValueExpression valueExpression42 = modelNode40.asExpression();
        java.math.BigDecimal bigDecimal43 = valueExpression42.resolveBigDecimal();
        org.jboss.dmr.ModelNode modelNode44 = modelNode37.set(valueExpression42);
        boolean boolean45 = valueExpression29.equals(valueExpression42);
        java.math.BigDecimal bigDecimal46 = valueExpression42.resolveBigDecimal();
        java.lang.String str47 = valueExpression42.toString();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1.0" + "'", str10, "1.0");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(valueExpression14);
        org.junit.Assert.assertNotNull(bigDecimal15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1.0" + "'", str16, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(valueExpression20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(bigDecimal24);
        org.junit.Assert.assertNotNull(valueExpressionResolver25);
        org.junit.Assert.assertNotNull(booleanModelValue27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertNotNull(valueExpression29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "true" + "'", str31, "true");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "true" + "'", str32, "true");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Expression \"true\"" + "'", str33, "Expression \"true\"");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Expression \"true\"" + "'", str34, "Expression \"true\"");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertNotNull(valueExpression42);
        org.junit.Assert.assertNotNull(bigDecimal43);
        org.junit.Assert.assertNotNull(modelNode44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(bigDecimal46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Expression \"1.0\"" + "'", str47, "Expression \"1.0\"");
    }

    @Test
    public void test13163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13163");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        boolean boolean4 = objectModelValue0.has((int) 'a');
        boolean boolean6 = objectModelValue0.has("");
        org.jboss.dmr.ObjectModelValue objectModelValue7 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode8 = objectModelValue7.asObject();
        java.util.Set<java.lang.String> strSet9 = objectModelValue7.getKeys();
        boolean boolean11 = objectModelValue7.has((int) 'a');
        boolean boolean12 = objectModelValue0.equals(objectModelValue7);
        org.jboss.dmr.ModelNode modelNode13 = objectModelValue7.asObject();
        java.util.List<org.jboss.dmr.Property> propertyList14 = objectModelValue7.asPropertyList();
        long long16 = objectModelValue7.asLong((long) (byte) 100);
        org.jboss.dmr.ModelValue modelValue17 = objectModelValue7.resolve();
        java.lang.String str18 = objectModelValue7.asString();
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(propertyList14);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(modelValue17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{}" + "'", str18, "{}");
    }

    @Test
    public void test13164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13164");
        org.jboss.dmr.ValueExpression valueExpression1 = new org.jboss.dmr.ValueExpression("rO0ABXNyAB1vcmcuamJvc3MuZG1yLlZhbHVlRXhwcmVzc2lvbvwmn+JujpBcDAAAeHB3BgAEdHJ1\nZXg=");
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver2 = new org.jboss.dmr.ValueExpressionResolver();
        java.lang.String str4 = valueExpressionResolver2.resolvePart("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        // The following exception was thrown during execution in test generation
        try {
            int int5 = valueExpression1.resolveInt(valueExpressionResolver2);
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"rO0ABXNyAB1vcmcuamJvc3MuZG1yLlZhbHVlRXhwcmVzc2lvbvwmn+JujpBcDAAAeHB3BgAEdHJ1?ZXg=\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test13165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13165");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BooleanModelValue booleanModelValue6 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long7 = booleanModelValue6.asLong();
        org.jboss.dmr.ValueExpression valueExpression8 = booleanModelValue6.asExpression();
        boolean boolean10 = valueExpression8.equals((java.lang.Object) 'p');
        boolean boolean11 = valueExpression3.equals(valueExpression8);
        org.jboss.dmr.ExpressionValue expressionValue12 = new org.jboss.dmr.ExpressionValue(valueExpression3);
        org.jboss.dmr.DoubleModelValue doubleModelValue14 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long15 = doubleModelValue14.asLong();
        boolean boolean16 = doubleModelValue14.asBoolean();
        byte[] byteArray17 = doubleModelValue14.asBytes();
        double double18 = doubleModelValue14.asDouble();
        org.jboss.dmr.ValueExpression valueExpression19 = doubleModelValue14.asExpression();
        org.jboss.dmr.ValueExpression valueExpression20 = doubleModelValue14.asExpression();
        org.jboss.dmr.DoubleModelValue doubleModelValue22 = new org.jboss.dmr.DoubleModelValue((double) 100);
        org.jboss.dmr.ModelNode modelNode23 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode26 = modelNode23.setExpression("hi!", "hi!");
        java.lang.String str27 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode23);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList28 = modelNode23.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode30 = modelNode23.set((double) 0);
        boolean boolean31 = modelNode23.isProtected();
        java.math.BigInteger bigInteger32 = modelNode23.asBigIntegerOrNull();
        boolean boolean33 = doubleModelValue22.equals((java.lang.Object) modelNode23);
        java.lang.String str34 = doubleModelValue22.toString();
        org.jboss.dmr.ModelType modelType35 = doubleModelValue22.getType();
        org.jboss.dmr.ValueExpression valueExpression36 = doubleModelValue22.asExpression();
        boolean boolean37 = valueExpression20.equals(valueExpression36);
        boolean boolean39 = valueExpression36.equals((java.lang.Object) "LIST");
        org.jboss.dmr.DoubleModelValue doubleModelValue41 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long42 = doubleModelValue41.asLong();
        long long44 = doubleModelValue41.asLong((long) 32);
        org.jboss.dmr.ValueExpression valueExpression45 = doubleModelValue41.asExpression();
        org.jboss.dmr.ModelNode modelNode47 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long48 = modelNode47.asLong();
        org.jboss.dmr.ValueExpression valueExpression49 = modelNode47.asExpression();
        java.math.BigDecimal bigDecimal50 = valueExpression49.resolveBigDecimal();
        java.lang.String str51 = valueExpression49.getExpressionString();
        java.math.BigDecimal bigDecimal52 = valueExpression49.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue53 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal52);
        boolean boolean54 = bigDecimalModelValue53.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression55 = bigDecimalModelValue53.asExpression();
        org.jboss.dmr.IntModelValue intModelValue57 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long59 = intModelValue57.asLong((long) 'b');
        java.lang.String str60 = intModelValue57.asString();
        long long61 = intModelValue57.asLong();
        long long62 = intModelValue57.asLong();
        org.jboss.dmr.ValueExpression valueExpression63 = intModelValue57.asExpression();
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver64 = new org.jboss.dmr.ValueExpressionResolver();
        java.math.BigDecimal bigDecimal65 = valueExpression63.resolveBigDecimal(valueExpressionResolver64);
        boolean boolean66 = valueExpression55.equals(valueExpression63);
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver67 = org.jboss.dmr.ValueExpressionResolver.DEFAULT_RESOLVER;
        org.jboss.dmr.BooleanModelValue booleanModelValue69 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long70 = booleanModelValue69.asLong();
        org.jboss.dmr.ValueExpression valueExpression71 = booleanModelValue69.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue72 = new org.jboss.dmr.ExpressionValue(valueExpression71);
        java.lang.String str73 = valueExpression71.getExpressionString();
        java.lang.String str74 = valueExpressionResolver67.resolve(valueExpression71);
        java.lang.String str75 = valueExpression63.resolveString(valueExpressionResolver67);
        java.lang.String str77 = valueExpressionResolver67.resolvePart("\"(\\\"\\\" => (\\\"hi!\\\" => 0.0))\"");
        java.lang.String str78 = valueExpression45.resolveString(valueExpressionResolver67);
        java.math.BigDecimal bigDecimal79 = valueExpression36.resolveBigDecimal(valueExpressionResolver67);
        java.math.BigDecimal bigDecimal80 = valueExpression3.resolveBigDecimal(valueExpressionResolver67);
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue81 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal80);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertNotNull(booleanModelValue6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertNotNull(valueExpression8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10L + "'", long15 == 10L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertNotNull(valueExpression19);
        org.junit.Assert.assertNotNull(valueExpression20);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str27, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList28);
        org.junit.Assert.assertNotNull(modelNode30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(bigInteger32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "100.0" + "'", str34, "100.0");
        org.junit.Assert.assertTrue("'" + modelType35 + "' != '" + org.jboss.dmr.ModelType.DOUBLE + "'", modelType35.equals(org.jboss.dmr.ModelType.DOUBLE));
        org.junit.Assert.assertNotNull(valueExpression36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 10L + "'", long42 == 10L);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 10L + "'", long44 == 10L);
        org.junit.Assert.assertNotNull(valueExpression45);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertNotNull(valueExpression49);
        org.junit.Assert.assertNotNull(bigDecimal50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1.0" + "'", str51, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(valueExpression55);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 32L + "'", long59 == 32L);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "32" + "'", str60, "32");
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 32L + "'", long61 == 32L);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 32L + "'", long62 == 32L);
        org.junit.Assert.assertNotNull(valueExpression63);
        org.junit.Assert.assertNotNull(bigDecimal65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(valueExpressionResolver67);
        org.junit.Assert.assertNotNull(booleanModelValue69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 1L + "'", long70 == 1L);
        org.junit.Assert.assertNotNull(valueExpression71);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "true" + "'", str73, "true");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "true" + "'", str74, "true");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "32" + "'", str75, "32");
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "10.0" + "'", str78, "10.0");
        org.junit.Assert.assertNotNull(bigDecimal79);
        org.junit.Assert.assertNotNull(bigDecimal80);
    }

    @Test
    public void test13166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13166");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(true);
        org.jboss.dmr.ModelNode modelNode2 = modelNode1.resolve();
        java.lang.String str3 = modelNode1.asString();
        org.jboss.dmr.ModelNode modelNode5 = modelNode1.set((long) 52);
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode10 = modelNode7.setExpression("hi!", "hi!");
        java.lang.String str11 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode7);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = modelNode7.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode14 = modelNode7.set((double) 0);
        org.jboss.dmr.ModelType modelType16 = org.jboss.dmr.ModelType.PROPERTY;
        char char17 = modelType16.getTypeChar();
        org.jboss.dmr.ModelNode modelNode18 = modelNode7.set("[(\"hi!\" => 0.0)]", modelType16);
        org.jboss.dmr.Property property19 = new org.jboss.dmr.Property("\"(\\\"hi!\\\" => 0.0)\"", modelNode18);
        org.jboss.dmr.ModelNode modelNode20 = modelNode5.set(property19);
        org.jboss.dmr.ModelNode modelNode21 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.BooleanModelValue booleanModelValue23 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger24 = booleanModelValue23.asBigInteger();
        org.jboss.dmr.ModelNode modelNode25 = modelNode21.add(bigInteger24);
        org.jboss.dmr.ModelNode modelNode27 = modelNode21.add((double) 100);
        org.jboss.dmr.ModelNode modelNode28 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode31 = modelNode28.setExpression("hi!", "hi!");
        org.jboss.dmr.ModelNode modelNode32 = modelNode31.setEmptyList();
        org.jboss.dmr.ModelNode modelNode33 = modelNode31.asObject();
        org.jboss.dmr.ModelNode modelNode35 = modelNode33.get("Expression \"true\"");
        boolean boolean36 = modelNode27.equals(modelNode33);
        org.jboss.dmr.ModelType modelType37 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode38 = new org.jboss.dmr.ModelNode(modelType37);
        org.jboss.dmr.ModelNode modelNode40 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode43 = modelNode40.set("hi!", 0.0d);
        org.jboss.dmr.Property property44 = new org.jboss.dmr.Property("", modelNode43);
        org.jboss.dmr.ModelNode modelNode45 = modelNode38.set(property44);
        org.jboss.dmr.ModelNode modelNode46 = property44.getValue();
        org.jboss.dmr.PropertyModelValue propertyModelValue47 = new org.jboss.dmr.PropertyModelValue(property44);
        org.jboss.dmr.ModelValue modelValue48 = propertyModelValue47.clone();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList49 = propertyModelValue47.asList();
        org.jboss.dmr.ModelNode modelNode50 = modelNode27.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList49);
        org.jboss.dmr.ModelNode modelNode52 = modelNode27.set(false);
        double double53 = modelNode52.asDouble();
        org.jboss.dmr.ModelNode modelNode54 = modelNode5.set(modelNode52);
        org.junit.Assert.assertNotNull(modelNode2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "true" + "'", str3, "true");
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str11, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList12);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertTrue("'" + modelType16 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType16.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char17 + "' != '" + 'p' + "'", char17 == 'p');
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(booleanModelValue23);
        org.junit.Assert.assertNotNull(bigInteger24);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertNotNull(modelNode33);
        org.junit.Assert.assertNotNull(modelNode35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + modelType37 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType37.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode43);
        org.junit.Assert.assertNotNull(modelNode45);
        org.junit.Assert.assertNotNull(modelNode46);
        org.junit.Assert.assertNotNull(modelValue48);
        org.junit.Assert.assertNotNull(modelNodeList49);
        org.junit.Assert.assertNotNull(modelNode50);
        org.junit.Assert.assertNotNull(modelNode52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(modelNode54);
    }

    @Test
    public void test13167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13167");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue((long) '4');
        java.math.BigDecimal bigDecimal2 = longModelValue1.asBigDecimal();
        org.jboss.dmr.LongModelValue longModelValue4 = new org.jboss.dmr.LongModelValue((-1L));
        long long6 = longModelValue4.asLong((long) (byte) -1);
        int int8 = longModelValue4.asInt(0);
        boolean boolean9 = longModelValue1.equals(longModelValue4);
        org.jboss.dmr.LongModelValue longModelValue11 = new org.jboss.dmr.LongModelValue((-1L));
        long long13 = longModelValue11.asLong((long) (byte) -1);
        boolean boolean15 = longModelValue11.asBoolean(false);
        java.io.OutputStream outputStream16 = null;
        org.jboss.dmr.Base64.OutputStream outputStream17 = new org.jboss.dmr.Base64.OutputStream(outputStream16);
        outputStream17.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream19 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream17);
        org.jboss.dmr.Base64.OutputStream outputStream21 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream19, (int) (byte) -1);
        org.jboss.dmr.Base64.OutputStream outputStream22 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream21);
        outputStream22.resumeEncoding();
        boolean boolean24 = longModelValue11.equals((java.lang.Object) outputStream22);
        boolean boolean25 = longModelValue1.equals(longModelValue11);
        boolean boolean27 = longModelValue1.asBoolean(false);
        java.math.BigInteger bigInteger28 = longModelValue1.asBigInteger();
        byte[] byteArray29 = longModelValue1.asBytes();
        org.junit.Assert.assertNotNull(bigDecimal2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(bigInteger28);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, 0, 0, 0, 0, 0, 0, 52]");
    }

    @Test
    public void test13168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13168");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long3 = intModelValue1.asLong((long) 'b');
        java.lang.String str4 = intModelValue1.asString();
        java.math.BigInteger bigInteger5 = intModelValue1.asBigInteger();
        boolean boolean7 = intModelValue1.asBoolean(false);
        org.jboss.dmr.IntModelValue intModelValue9 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long11 = intModelValue9.asLong((long) 'b');
        java.lang.String str12 = intModelValue9.asString();
        boolean boolean13 = intModelValue1.equals(intModelValue9);
        byte[] byteArray14 = intModelValue9.asBytes();
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode18 = modelNode15.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList19 = modelNode18.asList();
        org.jboss.dmr.ListModelValue listModelValue20 = new org.jboss.dmr.ListModelValue(modelNodeList19);
        java.lang.String str21 = listModelValue20.asString();
        long long22 = listModelValue20.asLong();
        java.lang.String str23 = listModelValue20.asString();
        org.jboss.dmr.ModelNode modelNode24 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode27 = modelNode24.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList28 = modelNode27.asList();
        org.jboss.dmr.ListModelValue listModelValue29 = new org.jboss.dmr.ListModelValue(modelNodeList28);
        java.lang.String str30 = listModelValue29.asString();
        long long31 = listModelValue29.asLong();
        int int33 = listModelValue29.asInt((int) '4');
        org.jboss.dmr.ModelValue modelValue34 = listModelValue29.protect();
        boolean boolean36 = listModelValue29.has((int) (short) 100);
        boolean boolean37 = listModelValue20.equals(listModelValue29);
        boolean boolean39 = listModelValue20.has((int) (short) -1);
        long long40 = listModelValue20.asLong();
        java.lang.String str41 = listModelValue20.asString();
        long long42 = listModelValue20.asLong();
        boolean boolean43 = intModelValue9.equals((java.lang.Object) long42);
        int int45 = intModelValue9.asInt((int) 'i');
        double double46 = intModelValue9.asDouble();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 32L + "'", long3 == 32L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "32" + "'", str4, "32");
        org.junit.Assert.assertNotNull(bigInteger5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 32L + "'", long11 == 32L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "32" + "'", str12, "32");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 0, 0, 32]");
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertNotNull(modelNodeList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str21, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str23, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertNotNull(modelNodeList28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str30, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1L + "'", long31 == 1L);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(modelValue34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1L + "'", long40 == 1L);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str41, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 32 + "'", int45 == 32);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 32.0d + "'", double46 == 32.0d);
    }

    @Test
    public void test13169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13169");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue5);
        org.jboss.dmr.ModelValue modelValue7 = listModelValue5.resolve();
        int int9 = listModelValue5.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList10 = listModelValue5.asPropertyList();
        long long12 = listModelValue5.asLong((long) ' ');
        org.jboss.dmr.LongModelValue longModelValue14 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str15 = longModelValue14.asString();
        byte[] byteArray16 = longModelValue14.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue17 = new org.jboss.dmr.BytesModelValue(byteArray16);
        java.lang.String str18 = bytesModelValue17.asString();
        int int19 = bytesModelValue17.asInt();
        int int20 = bytesModelValue17.asInt();
        org.jboss.dmr.LongModelValue longModelValue22 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str23 = longModelValue22.asString();
        byte[] byteArray24 = longModelValue22.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue25 = new org.jboss.dmr.BytesModelValue(byteArray24);
        double double26 = bytesModelValue25.asDouble();
        boolean boolean27 = bytesModelValue17.equals(bytesModelValue25);
        org.jboss.dmr.LongModelValue longModelValue29 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str30 = longModelValue29.asString();
        byte[] byteArray31 = longModelValue29.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue32 = new org.jboss.dmr.BytesModelValue(byteArray31);
        boolean boolean33 = bytesModelValue25.equals(bytesModelValue32);
        long long34 = bytesModelValue25.asLong();
        int int36 = bytesModelValue25.asInt(8);
        long long37 = bytesModelValue25.asLong();
        boolean boolean38 = listModelValue5.equals((java.lang.Object) long37);
        int int40 = listModelValue5.asInt(10);
        org.jboss.dmr.DoubleModelValue doubleModelValue42 = new org.jboss.dmr.DoubleModelValue((double) 1.0f);
        boolean boolean43 = listModelValue5.equals((java.lang.Object) 1.0f);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList44 = listModelValue5.asList();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode46 = listModelValue5.requireChild((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child exists at index [-1]");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertNotNull(modelValue7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(propertyList10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1" + "'", str15, "1");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str18, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1" + "'", str23, "1");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4.9E-324d + "'", double26 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1" + "'", str30, "1");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1L + "'", long34 == 1L);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(modelNodeList44);
    }

    @Test
    public void test13170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13170");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        org.jboss.dmr.ModelValue modelValue2 = objectModelValue0.copy();
        java.lang.String str3 = objectModelValue0.toString();
        java.io.DataOutput dataOutput4 = null;
        // The following exception was thrown during execution in test generation
        try {
            objectModelValue0.writeExternal(dataOutput4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{}" + "'", str3, "{}");
    }

    @Test
    public void test13171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13171");
        java.io.InputStream inputStream0 = null;
        org.jboss.dmr.Base64.InputStream inputStream2 = new org.jboss.dmr.Base64.InputStream(inputStream0, (int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean3 = inputStream2.markSupported();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13172");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        java.lang.String str5 = bigIntegerModelValue4.asString();
        long long7 = bigIntegerModelValue4.asLong(32L);
        double double8 = bigIntegerModelValue4.asDouble();
        long long10 = bigIntegerModelValue4.asLong((long) '4');
        int int12 = bigIntegerModelValue4.asInt(1);
        boolean boolean13 = bigIntegerModelValue4.asBoolean();
        java.math.BigDecimal bigDecimal14 = bigIntegerModelValue4.asBigDecimal();
        org.jboss.dmr.ValueExpression valueExpression15 = bigIntegerModelValue4.asExpression();
        double double16 = bigIntegerModelValue4.asDouble();
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1" + "'", str5, "1");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(bigDecimal14);
        org.junit.Assert.assertNotNull(valueExpression15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
    }

    @Test
    public void test13173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13173");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.setExpression("hi!", "hi!");
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList5 = modelNode4.asListOrEmpty();
        org.jboss.dmr.PropertyModelValue propertyModelValue7 = new org.jboss.dmr.PropertyModelValue("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=", modelNode4, false);
        boolean boolean9 = propertyModelValue7.has("10.0");
        org.jboss.dmr.ModelNode modelNode11 = propertyModelValue7.getChild(0);
        org.jboss.dmr.ModelNode modelNode12 = modelNode11.clone();
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode17 = modelNode14.set("hi!", 0.0d);
        java.lang.String str18 = modelNode14.toString();
        org.jboss.dmr.ModelNode modelNode19 = modelNode14.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode21 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode24 = modelNode21.set("hi!", 0.0d);
        org.jboss.dmr.Property property25 = new org.jboss.dmr.Property("", modelNode24);
        org.jboss.dmr.ModelNode modelNode26 = modelNode14.set(property25);
        org.jboss.dmr.ModelNode modelNode27 = modelNode11.set("\"35\"", modelNode14);
        org.jboss.dmr.LongModelValue longModelValue30 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str31 = longModelValue30.asString();
        byte[] byteArray32 = longModelValue30.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue33 = new org.jboss.dmr.BytesModelValue(byteArray32);
        java.math.BigDecimal bigDecimal34 = bytesModelValue33.asBigDecimal();
        java.math.BigInteger bigInteger35 = bytesModelValue33.asBigInteger();
        java.lang.String str36 = bytesModelValue33.asString();
        java.math.BigInteger bigInteger37 = bytesModelValue33.asBigInteger();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode38 = modelNode14.add("bytes { 0x40, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }", bigInteger37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNodeList5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(\"hi!\" => 0.0)" + "'", str18, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1" + "'", str31, "1");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(bigDecimal34);
        org.junit.Assert.assertNotNull(bigInteger35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str36, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertNotNull(bigInteger37);
    }

    @Test
    public void test13174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13174");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3GXAAEGV4cHJlc3Np\nb24gImhpISJiAAAAAQF4");
        org.jboss.dmr.StringModelValue stringModelValue3 = new org.jboss.dmr.StringModelValue("AA==");
        boolean boolean4 = stringModelValue1.equals(stringModelValue3);
        java.io.DataOutput dataOutput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            stringModelValue1.writeExternal(dataOutput5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test13175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13175");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        boolean boolean8 = bigDecimalModelValue7.asBoolean();
        long long9 = bigDecimalModelValue7.asLong();
        boolean boolean11 = bigDecimalModelValue7.asBoolean(false);
        int int12 = bigDecimalModelValue7.asInt();
        org.jboss.dmr.ValueExpression valueExpression13 = bigDecimalModelValue7.asExpression();
        java.io.PrintWriter printWriter14 = null;
        // The following exception was thrown during execution in test generation
        try {
            bigDecimalModelValue7.format(printWriter14, (int) (short) 0, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(valueExpression13);
    }

    @Test
    public void test13176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13176");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        java.lang.String str5 = modelNode1.toString();
        org.jboss.dmr.ModelNode modelNode6 = modelNode1.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(100);
        org.jboss.dmr.ModelNode modelNode9 = modelNode0.add(modelNode1);
        org.jboss.dmr.ModelNode modelNode11 = modelNode9.set((double) (-1.0f));
        java.lang.String str12 = modelNode11.asStringOrNull();
        org.jboss.dmr.ModelNode modelNode15 = modelNode11.setExpression("(\"Expression \\\"true\\\"\" => bytes {\n    0x40, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n})", "10.0");
        org.jboss.dmr.ModelNode modelNode18 = modelNode15.set("{\n    \"EXPRESSION_VALUE\" : \"false\"\n}", "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3GXAAEGV4cHJlc3Np\nb24gImhpISJiAAAAAQF4");
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(\"hi!\" => 0.0)" + "'", str5, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1.0" + "'", str12, "-1.0");
        org.junit.Assert.assertNotNull(modelNode15);
        org.junit.Assert.assertNotNull(modelNode18);
    }

    @Test
    public void test13177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13177");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode("EXPRESSION_VALUE");
        org.jboss.dmr.ModelNode modelNode2 = modelNode1.clear();
        boolean boolean4 = modelNode1.has((int) '#');
        org.jboss.dmr.ModelNode modelNode7 = modelNode1.add("BYTES_VALUE", "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4");
        org.jboss.dmr.ModelNode modelNode9 = modelNode7.add(false);
        org.junit.Assert.assertNotNull(modelNode2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode9);
    }

    @Test
    public void test13178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13178");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        java.lang.String str6 = listModelValue5.asString();
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.BooleanModelValue booleanModelValue9 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger10 = booleanModelValue9.asBigInteger();
        org.jboss.dmr.ModelNode modelNode11 = modelNode7.add(bigInteger10);
        java.lang.String str13 = modelNode11.toJSONString(false);
        boolean boolean14 = listModelValue5.equals((java.lang.Object) false);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList15 = listModelValue5.asList();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode17 = listModelValue5.getChild("bytes {\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01\n}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str6, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertNotNull(booleanModelValue9);
        org.junit.Assert.assertNotNull(bigInteger10);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(modelNodeList15);
    }

    @Test
    public void test13179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13179");
        java.io.PrintWriter printWriter0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelValue.indent(printWriter0, (int) 'D');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13180");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(modelType0);
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode6 = modelNode3.set("hi!", 0.0d);
        org.jboss.dmr.Property property7 = new org.jboss.dmr.Property("", modelNode6);
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(property7);
        org.jboss.dmr.ModelNode modelNode9 = property7.getValue();
        org.jboss.dmr.PropertyModelValue propertyModelValue10 = new org.jboss.dmr.PropertyModelValue(property7);
        java.util.List<org.jboss.dmr.Property> propertyList11 = propertyModelValue10.asPropertyList();
        org.jboss.dmr.ModelNode modelNode13 = propertyModelValue10.getChild((int) (short) 0);
        org.jboss.dmr.ModelNode modelNode14 = modelNode13.setEmptyList();
        boolean boolean16 = modelNode14.asBoolean(false);
        int int18 = modelNode14.asInt((int) (byte) -1);
        org.jboss.dmr.ModelNode modelNode19 = modelNode14.setEmptyList();
        org.jboss.dmr.ModelNode modelNode21 = modelNode14.add("bytes { 0x00 }");
        java.io.DataInput dataInput22 = null;
        // The following exception was thrown during execution in test generation
        try {
            modelNode21.readExternal(dataInput22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType0.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(propertyList11);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(modelNode21);
    }

    @Test
    public void test13181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13181");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(modelType0);
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode6 = modelNode3.set("hi!", 0.0d);
        org.jboss.dmr.Property property7 = new org.jboss.dmr.Property("", modelNode6);
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(property7);
        org.jboss.dmr.PropertyModelValue propertyModelValue9 = new org.jboss.dmr.PropertyModelValue(property7);
        org.jboss.dmr.ModelNode modelNode10 = propertyModelValue9.asObject();
        java.lang.String str11 = propertyModelValue9.asString();
        org.jboss.dmr.ModelNode modelNode12 = propertyModelValue9.asObject();
        org.jboss.dmr.ModelNode modelNode13 = propertyModelValue9.asObject();
        org.jboss.dmr.PropertyModelValue propertyModelValue14 = null;
        boolean boolean15 = propertyModelValue9.equals(propertyModelValue14);
        org.jboss.dmr.ModelNode modelNode17 = propertyModelValue9.requireChild("");
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType0.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(\"\" => (\"hi!\" => 0.0))" + "'", str11, "(\"\" => (\"hi!\" => 0.0))");
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(modelNode17);
    }

    @Test
    public void test13182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13182");
        org.jboss.dmr.ExpressionValue expressionValue2 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue4 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean5 = expressionValue2.equals(expressionValue4);
        org.jboss.dmr.ExpressionValue expressionValue7 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue9 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean10 = expressionValue7.equals(expressionValue9);
        boolean boolean11 = expressionValue2.equals(expressionValue9);
        org.jboss.dmr.ModelNode modelNode13 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long14 = modelNode13.asLong();
        org.jboss.dmr.ValueExpression valueExpression15 = modelNode13.asExpression();
        boolean boolean16 = expressionValue9.equals((java.lang.Object) modelNode13);
        org.jboss.dmr.PropertyModelValue propertyModelValue18 = new org.jboss.dmr.PropertyModelValue("H4sIAAAAAAAAAGMEABvfBaUBAAAA", modelNode13, true);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode20 = propertyModelValue18.requireChild("{ \"EXPRESSION_VALUE\" : { \"\" : { \"hi!\" : 0.0 } } }");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child '{ \"EXPRESSION_VALUE\" : { \"\" : { \"hi!\" : 0.0 } } }' exists");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(valueExpression15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test13183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13183");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        java.lang.String str5 = bigIntegerModelValue4.asString();
        org.jboss.dmr.BooleanModelValue booleanModelValue6 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double7 = booleanModelValue6.asDouble();
        org.jboss.dmr.ModelValue modelValue8 = booleanModelValue6.copy();
        java.math.BigInteger bigInteger9 = booleanModelValue6.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue10 = new org.jboss.dmr.BigIntegerModelValue(bigInteger9);
        int int12 = bigIntegerModelValue10.asInt((int) (short) 1);
        org.jboss.dmr.ModelNode modelNode13 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode16 = modelNode13.set("hi!", 0.0d);
        java.lang.String str17 = modelNode13.toString();
        org.jboss.dmr.ModelNode modelNode18 = modelNode13.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode20 = modelNode13.set(100);
        org.jboss.dmr.ModelNode modelNode21 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode24 = modelNode21.set("hi!", 0.0d);
        java.lang.String str25 = modelNode21.toString();
        org.jboss.dmr.ModelNode modelNode26 = modelNode21.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode28 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode31 = modelNode28.set("hi!", 0.0d);
        org.jboss.dmr.Property property32 = new org.jboss.dmr.Property("", modelNode31);
        org.jboss.dmr.ModelNode modelNode33 = modelNode21.set(property32);
        java.lang.String str34 = modelNode33.asString();
        org.jboss.dmr.ModelNode modelNode35 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode38 = modelNode35.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList39 = modelNode38.asList();
        org.jboss.dmr.ListModelValue listModelValue40 = new org.jboss.dmr.ListModelValue(modelNodeList39);
        org.jboss.dmr.ModelNode modelNode41 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue40);
        org.jboss.dmr.ModelValue modelValue42 = listModelValue40.resolve();
        int int44 = listModelValue40.asInt((int) (byte) 100);
        boolean boolean45 = listModelValue40.asBoolean();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList46 = listModelValue40.asList();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList47 = modelNode33.asList(modelNodeList46);
        org.jboss.dmr.ModelNode modelNode48 = modelNode20.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList46);
        boolean boolean49 = bigIntegerModelValue10.equals((java.lang.Object) modelNode20);
        boolean boolean50 = bigIntegerModelValue4.equals(bigIntegerModelValue10);
        boolean boolean52 = bigIntegerModelValue10.equals((java.lang.Object) "{}");
        long long53 = bigIntegerModelValue10.asLong();
        boolean boolean54 = bigIntegerModelValue10.asBoolean();
        org.jboss.dmr.ModelValue modelValue55 = bigIntegerModelValue10.copy();
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1" + "'", str5, "1");
        org.junit.Assert.assertNotNull(booleanModelValue6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue8);
        org.junit.Assert.assertNotNull(bigInteger9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(\"hi!\" => 0.0)" + "'", str17, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(\"hi!\" => 0.0)" + "'", str25, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(modelNode33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(\"\" => (\"hi!\" => 0.0))" + "'", str34, "(\"\" => (\"hi!\" => 0.0))");
        org.junit.Assert.assertNotNull(modelNode38);
        org.junit.Assert.assertNotNull(modelNodeList39);
        org.junit.Assert.assertNotNull(modelValue42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(modelNodeList46);
        org.junit.Assert.assertNotNull(modelNodeList47);
        org.junit.Assert.assertNotNull(modelNode48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 1L + "'", long53 == 1L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(modelValue55);
    }

    @Test
    public void test13184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13184");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        boolean boolean8 = bigDecimalModelValue7.asBoolean();
        long long9 = bigDecimalModelValue7.asLong();
        java.lang.String str10 = bigDecimalModelValue7.asString();
        java.math.BigInteger bigInteger11 = bigDecimalModelValue7.asBigInteger();
        int int12 = bigDecimalModelValue7.asInt();
        long long13 = bigDecimalModelValue7.asLong();
        org.jboss.dmr.ValueExpression valueExpression14 = bigDecimalModelValue7.asExpression();
        java.math.BigDecimal bigDecimal15 = valueExpression14.resolveBigDecimal();
        java.io.ObjectOutput objectOutput16 = null;
        // The following exception was thrown during execution in test generation
        try {
            valueExpression14.writeExternal(objectOutput16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1.0" + "'", str10, "1.0");
        org.junit.Assert.assertNotNull(bigInteger11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(valueExpression14);
        org.junit.Assert.assertNotNull(bigDecimal15);
    }

    @Test
    public void test13185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13185");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        java.io.InputStream inputStream16 = null;
        org.jboss.dmr.Base64.InputStream inputStream18 = new org.jboss.dmr.Base64.InputStream(inputStream16, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream19 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream18);
        org.jboss.dmr.Base64.InputStream inputStream20 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream18);
        org.jboss.dmr.stream.ModelReader modelReader21 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream18);
        boolean boolean22 = modelReader21.isString();
        boolean boolean23 = modelReader21.isDouble();
        boolean boolean24 = modelReader21.isDouble();
        boolean boolean25 = modelReader21.isObjectStart();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertNotNull(modelReader21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test13186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13186");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        org.jboss.dmr.ModelValue modelValue2 = objectModelValue0.protect();
        java.util.List<org.jboss.dmr.Property> propertyList3 = objectModelValue0.asPropertyList();
        org.jboss.dmr.ModelValue modelValue4 = objectModelValue0.copy();
        boolean boolean5 = objectModelValue0.asBoolean();
        org.jboss.dmr.ModelValue modelValue6 = objectModelValue0.copy();
        long long7 = objectModelValue0.asLong();
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(propertyList3);
        org.junit.Assert.assertNotNull(modelValue4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(modelValue6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    }

    @Test
    public void test13187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13187");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        java.io.InputStream inputStream16 = null;
        org.jboss.dmr.Base64.InputStream inputStream18 = new org.jboss.dmr.Base64.InputStream(inputStream16, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream19 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream18);
        byte[] byteArray21 = org.jboss.dmr.Base64.decode("true");
        boolean boolean23 = org.jboss.dmr.Base64.encodeToFile(byteArray21, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3R3AANW9yZy5qYm9z\ncy5kbXIuc3RyZWFtLk1vZGVsRXhjZXB0aW9uOiBbKCJoaSEiID0+IDAuMCldcAADaGkhRAAAAAAA\nAAAAeA==");
        int int26 = inputStream18.read(byteArray21, (int) 'l', 0);
        org.jboss.dmr.stream.ModelReader modelReader27 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream18);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory29 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream30 = null;
        org.jboss.dmr.Base64.InputStream inputStream32 = new org.jboss.dmr.Base64.InputStream(inputStream30, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream33 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream32);
        org.jboss.dmr.stream.ModelReader modelReader34 = modelStreamFactory29.newModelReader((java.io.InputStream) inputStream33);
        java.io.OutputStream outputStream35 = null;
        org.jboss.dmr.Base64.OutputStream outputStream36 = new org.jboss.dmr.Base64.OutputStream(outputStream35);
        org.jboss.dmr.Base64.OutputStream outputStream37 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream36);
        outputStream36.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter40 = modelStreamFactory29.newModelWriter((java.io.OutputStream) outputStream36);
        outputStream36.write(2);
        org.jboss.dmr.stream.ModelWriter modelWriter43 = modelStreamFactory1.newModelWriter((java.io.OutputStream) outputStream36);
        org.jboss.dmr.Base64.OutputStream outputStream45 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream36, (int) 'u');
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-74, -69, -98]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(modelReader27);
        org.junit.Assert.assertNotNull(modelStreamFactory29);
        org.junit.Assert.assertNotNull(modelReader34);
        org.junit.Assert.assertNotNull(modelWriter40);
        org.junit.Assert.assertNotNull(modelWriter43);
    }

    @Test
    public void test13188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13188");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str2 = longModelValue1.asString();
        byte[] byteArray3 = longModelValue1.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue4 = new org.jboss.dmr.BytesModelValue(byteArray3);
        java.lang.String str5 = bytesModelValue4.asString();
        int int6 = bytesModelValue4.asInt();
        int int7 = bytesModelValue4.asInt();
        org.jboss.dmr.LongModelValue longModelValue9 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str10 = longModelValue9.asString();
        byte[] byteArray11 = longModelValue9.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue12 = new org.jboss.dmr.BytesModelValue(byteArray11);
        double double13 = bytesModelValue12.asDouble();
        boolean boolean14 = bytesModelValue4.equals(bytesModelValue12);
        org.jboss.dmr.LongModelValue longModelValue16 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str17 = longModelValue16.asString();
        byte[] byteArray18 = longModelValue16.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue19 = new org.jboss.dmr.BytesModelValue(byteArray18);
        boolean boolean20 = bytesModelValue12.equals(bytesModelValue19);
        java.math.BigInteger bigInteger21 = bytesModelValue19.asBigInteger();
        double double23 = bytesModelValue19.asDouble((double) 32);
        int int24 = bytesModelValue19.asInt();
        java.lang.String str25 = bytesModelValue19.asString();
        byte[] byteArray26 = bytesModelValue19.asBytes();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1" + "'", str2, "1");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str5, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1" + "'", str10, "1");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.9E-324d + "'", double13 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1" + "'", str17, "1");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(bigInteger21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.9E-324d + "'", double23 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str25, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0, 0, 0, 0, 0, 0, 0, 1]");
    }

    @Test
    public void test13189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13189");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        java.lang.String str5 = bigIntegerModelValue4.asString();
        long long7 = bigIntegerModelValue4.asLong(32L);
        double double8 = bigIntegerModelValue4.asDouble();
        org.jboss.dmr.BooleanModelValue booleanModelValue9 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double10 = booleanModelValue9.asDouble();
        org.jboss.dmr.ModelValue modelValue11 = booleanModelValue9.copy();
        java.math.BigInteger bigInteger12 = booleanModelValue9.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue13 = new org.jboss.dmr.BigIntegerModelValue(bigInteger12);
        double double15 = bigIntegerModelValue13.asDouble((double) 'b');
        boolean boolean16 = bigIntegerModelValue4.equals(bigIntegerModelValue13);
        org.jboss.dmr.BooleanModelValue booleanModelValue17 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double18 = booleanModelValue17.asDouble();
        org.jboss.dmr.ModelValue modelValue19 = booleanModelValue17.copy();
        java.math.BigInteger bigInteger20 = booleanModelValue17.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue21 = new org.jboss.dmr.BigIntegerModelValue(bigInteger20);
        long long23 = bigIntegerModelValue21.asLong((long) 'b');
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue24 = null;
        boolean boolean25 = bigIntegerModelValue21.equals(bigIntegerModelValue24);
        boolean boolean26 = bigIntegerModelValue4.equals(bigIntegerModelValue21);
        org.jboss.dmr.ModelValue modelValue27 = bigIntegerModelValue21.resolve();
        int int28 = bigIntegerModelValue21.asInt();
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory30 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream31 = null;
        org.jboss.dmr.Base64.InputStream inputStream33 = new org.jboss.dmr.Base64.InputStream(inputStream31, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream34 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream33);
        org.jboss.dmr.stream.ModelReader modelReader35 = modelStreamFactory30.newModelReader((java.io.InputStream) inputStream34);
        java.io.OutputStream outputStream36 = null;
        org.jboss.dmr.Base64.OutputStream outputStream37 = new org.jboss.dmr.Base64.OutputStream(outputStream36);
        org.jboss.dmr.Base64.OutputStream outputStream38 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream37);
        outputStream37.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter41 = modelStreamFactory30.newModelWriter((java.io.OutputStream) outputStream37);
        org.jboss.dmr.stream.ModelWriter modelWriter42 = modelWriter41.writeListStart();
        org.jboss.dmr.IntModelValue intModelValue44 = new org.jboss.dmr.IntModelValue(10);
        byte[] byteArray45 = intModelValue44.asBytes();
        int int47 = intModelValue44.asInt(0);
        java.math.BigInteger bigInteger48 = intModelValue44.asBigInteger();
        org.jboss.dmr.stream.ModelWriter modelWriter49 = modelWriter42.writeBigInteger(bigInteger48);
        org.jboss.dmr.ModelNode modelNode51 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long52 = modelNode51.asLong();
        org.jboss.dmr.ValueExpression valueExpression53 = modelNode51.asExpression();
        java.math.BigDecimal bigDecimal54 = valueExpression53.resolveBigDecimal();
        java.lang.String str55 = valueExpression53.getExpressionString();
        java.math.BigDecimal bigDecimal56 = valueExpression53.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue57 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal56);
        boolean boolean58 = bigDecimalModelValue57.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression59 = bigDecimalModelValue57.asExpression();
        int int60 = bigDecimalModelValue57.asInt();
        long long61 = bigDecimalModelValue57.asLong();
        double double62 = bigDecimalModelValue57.asDouble();
        java.math.BigInteger bigInteger63 = bigDecimalModelValue57.asBigInteger();
        org.jboss.dmr.stream.ModelWriter modelWriter64 = modelWriter49.writeBigInteger(bigInteger63);
        org.jboss.dmr.stream.ModelWriter modelWriter66 = modelWriter49.writeInt(1);
        bigIntegerModelValue21.write(modelWriter49);
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1" + "'", str5, "1");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(booleanModelValue9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue11);
        org.junit.Assert.assertNotNull(bigInteger12);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(booleanModelValue17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue19);
        org.junit.Assert.assertNotNull(bigInteger20);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(modelValue27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(modelStreamFactory30);
        org.junit.Assert.assertNotNull(modelReader35);
        org.junit.Assert.assertNotNull(modelWriter41);
        org.junit.Assert.assertNotNull(modelWriter42);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0, 0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 10 + "'", int47 == 10);
        org.junit.Assert.assertNotNull(bigInteger48);
        org.junit.Assert.assertNotNull(modelWriter49);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1L + "'", long52 == 1L);
        org.junit.Assert.assertNotNull(valueExpression53);
        org.junit.Assert.assertNotNull(bigDecimal54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "1.0" + "'", str55, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(valueExpression59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 1L + "'", long61 == 1L);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(bigInteger63);
        org.junit.Assert.assertNotNull(modelWriter64);
        org.junit.Assert.assertNotNull(modelWriter66);
    }

    @Test
    public void test13190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13190");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.ModelNode modelNode5 = new org.jboss.dmr.ModelNode(bigDecimal4);
        java.lang.String str6 = modelNode5.toString();
        org.jboss.dmr.BooleanModelValue booleanModelValue7 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double8 = booleanModelValue7.asDouble();
        org.jboss.dmr.ModelValue modelValue9 = booleanModelValue7.copy();
        java.math.BigInteger bigInteger10 = booleanModelValue7.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue11 = new org.jboss.dmr.BigIntegerModelValue(bigInteger10);
        java.lang.String str12 = bigIntegerModelValue11.asString();
        java.math.BigInteger bigInteger13 = bigIntegerModelValue11.asBigInteger();
        long long14 = bigIntegerModelValue11.asLong();
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode18 = modelNode15.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList19 = modelNode18.asList();
        org.jboss.dmr.ListModelValue listModelValue20 = new org.jboss.dmr.ListModelValue(modelNodeList19);
        org.jboss.dmr.ModelNode modelNode21 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue20);
        org.jboss.dmr.ModelValue modelValue22 = listModelValue20.resolve();
        int int24 = listModelValue20.asInt((int) (byte) 100);
        boolean boolean25 = bigIntegerModelValue11.equals((java.lang.Object) (byte) 100);
        org.jboss.dmr.ValueExpression valueExpression26 = bigIntegerModelValue11.asExpression();
        org.jboss.dmr.LongModelValue longModelValue28 = new org.jboss.dmr.LongModelValue((long) '4');
        java.math.BigDecimal bigDecimal29 = longModelValue28.asBigDecimal();
        int int30 = longModelValue28.asInt();
        org.jboss.dmr.ValueExpression valueExpression31 = longModelValue28.asExpression();
        double double32 = longModelValue28.asDouble();
        org.jboss.dmr.LongModelValue longModelValue34 = new org.jboss.dmr.LongModelValue(1L);
        long long36 = longModelValue34.asLong((long) (short) 0);
        java.lang.String str37 = longModelValue34.asString();
        byte[] byteArray38 = longModelValue34.asBytes();
        org.jboss.dmr.ModelType modelType39 = longModelValue34.getType();
        long long41 = longModelValue34.asLong(1L);
        boolean boolean42 = longModelValue28.equals(longModelValue34);
        java.math.BigInteger bigInteger43 = longModelValue28.asBigInteger();
        org.jboss.dmr.BooleanModelValue booleanModelValue44 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double45 = booleanModelValue44.asDouble();
        org.jboss.dmr.ModelValue modelValue46 = booleanModelValue44.copy();
        java.math.BigInteger bigInteger47 = booleanModelValue44.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue48 = new org.jboss.dmr.BigIntegerModelValue(bigInteger47);
        double double50 = bigIntegerModelValue48.asDouble((double) 'b');
        java.lang.String str51 = bigIntegerModelValue48.asString();
        org.jboss.dmr.ValueExpression valueExpression52 = bigIntegerModelValue48.asExpression();
        boolean boolean54 = bigIntegerModelValue48.asBoolean(true);
        boolean boolean55 = bigIntegerModelValue48.asBoolean();
        boolean boolean57 = bigIntegerModelValue48.asBoolean(false);
        boolean boolean58 = longModelValue28.equals((java.lang.Object) boolean57);
        boolean boolean59 = valueExpression26.equals((java.lang.Object) boolean58);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode60 = modelNode5.add(valueExpression26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "big decimal 1.0" + "'", str6, "big decimal 1.0");
        org.junit.Assert.assertNotNull(booleanModelValue7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue9);
        org.junit.Assert.assertNotNull(bigInteger10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1" + "'", str12, "1");
        org.junit.Assert.assertNotNull(bigInteger13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertNotNull(modelNodeList19);
        org.junit.Assert.assertNotNull(modelValue22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(valueExpression26);
        org.junit.Assert.assertNotNull(bigDecimal29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(valueExpression31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 52.0d + "'", double32 == 52.0d);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1L + "'", long36 == 1L);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1" + "'", str37, "1");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + modelType39 + "' != '" + org.jboss.dmr.ModelType.LONG + "'", modelType39.equals(org.jboss.dmr.ModelType.LONG));
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bigInteger43);
        org.junit.Assert.assertNotNull(booleanModelValue44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue46);
        org.junit.Assert.assertNotNull(bigInteger47);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1" + "'", str51, "1");
        org.junit.Assert.assertNotNull(valueExpression52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test13191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13191");
        org.jboss.dmr.ModelNodeFactory modelNodeFactory0 = org.jboss.dmr.ModelNodeFactory.INSTANCE;
        org.jboss.dmr.ModelNode modelNode3 = modelNodeFactory0.readFrom("10.0", false);
        org.jboss.dmr.ModelNode modelNode6 = modelNodeFactory0.readFrom("0.0", true);
        org.jboss.dmr.ModelNode modelNode9 = modelNodeFactory0.readFrom("(\"hi!\" => expression \"hi!\")", false);
        org.jboss.dmr.ModelNode modelNode12 = modelNodeFactory0.readFrom("\"{\n    \\\"hi!\\\" : {\n        \\\"EXPRESSION_VALUE\\\" : \\\"hi!\\\"\n    }\n}\"", true);
        org.jboss.dmr.ModelNode modelNode15 = modelNodeFactory0.readFrom("1.1975582E7", true);
        java.io.InputStream inputStream16 = null;
        org.jboss.dmr.Base64.InputStream inputStream18 = new org.jboss.dmr.Base64.InputStream(inputStream16, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue20 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str21 = longModelValue20.asString();
        byte[] byteArray22 = longModelValue20.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue23 = new org.jboss.dmr.BytesModelValue(byteArray22);
        int int26 = inputStream18.read(byteArray22, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream28 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream18, (-1));
        org.jboss.dmr.Base64.InputStream inputStream29 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream28);
        java.nio.charset.Charset charset30 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode32 = modelNodeFactory0.readFrom((java.io.InputStream) inputStream28, charset30, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Parameter cannot be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNodeFactory0);
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNode15);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1" + "'", str21, "1");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test13192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13192");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode("Expression \"hi!\"");
        // The following exception was thrown during execution in test generation
        try {
            long long2 = modelNode1.asLong();
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"Expression \"hi!\"\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13193");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ModelNode modelNode5 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode8 = modelNode5.set("hi!", 0.0d);
        org.jboss.dmr.Property property9 = new org.jboss.dmr.Property("", modelNode8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.get(strArray10);
        org.jboss.dmr.ModelNode modelNode12 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode15 = modelNode12.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList16 = modelNode15.asList();
        org.jboss.dmr.ListModelValue listModelValue17 = new org.jboss.dmr.ListModelValue(modelNodeList16);
        org.jboss.dmr.ModelNode modelNode18 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue17);
        org.jboss.dmr.ModelValue modelValue19 = listModelValue17.resolve();
        int int21 = listModelValue17.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList22 = listModelValue17.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList23 = modelNode11.asPropertyList(propertyList22);
        org.jboss.dmr.ModelNode modelNode25 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode28 = modelNode25.set("hi!", 0.0d);
        org.jboss.dmr.Property property29 = new org.jboss.dmr.Property("", modelNode28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode31 = modelNode28.get(strArray30);
        org.jboss.dmr.ModelNode modelNode32 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode35 = modelNode32.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList36 = modelNode35.asList();
        org.jboss.dmr.ListModelValue listModelValue37 = new org.jboss.dmr.ListModelValue(modelNodeList36);
        org.jboss.dmr.ModelNode modelNode38 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue37);
        org.jboss.dmr.ModelValue modelValue39 = listModelValue37.resolve();
        int int41 = listModelValue37.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList42 = listModelValue37.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList43 = modelNode31.asPropertyList(propertyList42);
        modelNode11.setNoCopy(modelNode31);
        org.jboss.dmr.ModelNode modelNode45 = modelNode1.set("org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]", modelNode11);
        org.jboss.dmr.ModelNode modelNode47 = modelNode11.set(false);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode49 = modelNode11.add((double) 100.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNode15);
        org.junit.Assert.assertNotNull(modelNodeList16);
        org.junit.Assert.assertNotNull(modelValue19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(propertyList22);
        org.junit.Assert.assertNotNull(propertyList23);
        org.junit.Assert.assertNotNull(modelNode28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(modelNode35);
        org.junit.Assert.assertNotNull(modelNodeList36);
        org.junit.Assert.assertNotNull(modelValue39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(propertyList42);
        org.junit.Assert.assertNotNull(propertyList43);
        org.junit.Assert.assertNotNull(modelNode45);
        org.junit.Assert.assertNotNull(modelNode47);
    }

    @Test
    public void test13194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13194");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue((long) 52);
        org.jboss.dmr.LongModelValue longModelValue3 = new org.jboss.dmr.LongModelValue(1L);
        long long5 = longModelValue3.asLong((long) (short) 0);
        java.lang.String str6 = longModelValue3.asString();
        byte[] byteArray7 = longModelValue3.asBytes();
        boolean boolean8 = longModelValue1.equals(longModelValue3);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "1" + "'", str6, "1");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test13195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13195");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        int int9 = bigDecimalModelValue7.asInt(0);
        java.math.BigInteger bigInteger10 = bigDecimalModelValue7.asBigInteger();
        org.jboss.dmr.ModelNode modelNode12 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long13 = modelNode12.asLong();
        org.jboss.dmr.ValueExpression valueExpression14 = modelNode12.asExpression();
        java.math.BigDecimal bigDecimal15 = valueExpression14.resolveBigDecimal();
        java.lang.String str16 = valueExpression14.getExpressionString();
        java.math.BigDecimal bigDecimal17 = valueExpression14.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue18 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal17);
        boolean boolean19 = bigDecimalModelValue18.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression20 = bigDecimalModelValue18.asExpression();
        int int21 = bigDecimalModelValue18.asInt();
        long long22 = bigDecimalModelValue18.asLong();
        long long24 = bigDecimalModelValue18.asLong(32L);
        boolean boolean25 = bigDecimalModelValue7.equals(bigDecimalModelValue18);
        org.jboss.dmr.ValueExpression valueExpression26 = bigDecimalModelValue18.asExpression();
        long long27 = bigDecimalModelValue18.asLong();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(bigInteger10);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(valueExpression14);
        org.junit.Assert.assertNotNull(bigDecimal15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1.0" + "'", str16, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(valueExpression20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1L + "'", long24 == 1L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(valueExpression26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
    }

    @Test
    public void test13196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13196");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        java.lang.String str6 = listModelValue5.asString();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList7 = listModelValue5.asList();
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = modelNode11.asList();
        org.jboss.dmr.ListModelValue listModelValue13 = new org.jboss.dmr.ListModelValue(modelNodeList12);
        java.lang.String str14 = listModelValue13.asString();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList15 = listModelValue13.asList();
        boolean boolean16 = listModelValue5.equals(listModelValue13);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode18 = listModelValue13.requireChild(112);
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child exists at index [112]");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str6, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertNotNull(modelNodeList7);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNodeList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str14, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertNotNull(modelNodeList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test13197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13197");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        org.jboss.dmr.ValueExpression valueExpression2 = stringModelValue1.asExpression();
        boolean boolean4 = stringModelValue1.equals((java.lang.Object) (-1.0d));
        java.lang.String str5 = stringModelValue1.asString();
        org.jboss.dmr.stream.ModelEvent modelEvent6 = org.jboss.dmr.stream.ModelEvent.UNDEFINED;
        boolean boolean7 = stringModelValue1.equals((java.lang.Object) modelEvent6);
        java.lang.String str8 = stringModelValue1.asString();
        byte[] byteArray9 = stringModelValue1.asBytes();
        // The following exception was thrown during execution in test generation
        try {
            java.math.BigInteger bigInteger10 = stringModelValue1.asBigInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"(\"\" \"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(valueExpression2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(\"\" => (\"hi!\" => 0.0))" + "'", str5, "(\"\" => (\"hi!\" => 0.0))");
        org.junit.Assert.assertTrue("'" + modelEvent6 + "' != '" + org.jboss.dmr.stream.ModelEvent.UNDEFINED + "'", modelEvent6.equals(org.jboss.dmr.stream.ModelEvent.UNDEFINED));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(\"\" => (\"hi!\" => 0.0))" + "'", str8, "(\"\" => (\"hi!\" => 0.0))");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[40, 34, 34, 32, 61, 62, 32, 40, 34, 104, 105, 33, 34, 32, 61, 62, 32, 48, 46, 48, 41, 41]");
    }

    @Test
    public void test13198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13198");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        int int9 = bigDecimalModelValue7.asInt(0);
        org.jboss.dmr.ModelNode modelNode10 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode13 = modelNode10.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList14 = modelNode13.asList();
        org.jboss.dmr.ListModelValue listModelValue15 = new org.jboss.dmr.ListModelValue(modelNodeList14);
        org.jboss.dmr.ModelNode modelNode16 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue15);
        org.jboss.dmr.ModelValue modelValue17 = listModelValue15.resolve();
        int int19 = listModelValue15.asInt((int) (byte) 100);
        boolean boolean20 = bigDecimalModelValue7.equals((java.lang.Object) listModelValue15);
        org.jboss.dmr.ModelValue modelValue21 = listModelValue15.resolve();
        org.jboss.dmr.ModelNode modelNode22 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue15);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList23 = listModelValue15.asList();
        long long24 = listModelValue15.asLong();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNodeList14);
        org.junit.Assert.assertNotNull(modelValue17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(modelValue21);
        org.junit.Assert.assertNotNull(modelNodeList23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1L + "'", long24 == 1L);
    }

    @Test
    public void test13199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13199");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(modelType0);
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode6 = modelNode3.set("hi!", 0.0d);
        org.jboss.dmr.Property property7 = new org.jboss.dmr.Property("", modelNode6);
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(property7);
        org.jboss.dmr.PropertyModelValue propertyModelValue9 = new org.jboss.dmr.PropertyModelValue(property7);
        org.jboss.dmr.ModelValue modelValue10 = propertyModelValue9.resolve();
        java.lang.String str11 = propertyModelValue9.asString();
        org.jboss.dmr.ModelValue modelValue12 = propertyModelValue9.copy();
        org.jboss.dmr.Property property13 = propertyModelValue9.asProperty();
        java.lang.String str14 = propertyModelValue9.asString();
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType0.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelValue10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(\"\" => (\"hi!\" => 0.0))" + "'", str11, "(\"\" => (\"hi!\" => 0.0))");
        org.junit.Assert.assertNotNull(modelValue12);
        org.junit.Assert.assertNotNull(property13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(\"\" => (\"hi!\" => 0.0))" + "'", str14, "(\"\" => (\"hi!\" => 0.0))");
    }

    @Test
    public void test13200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13200");
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode(true);
        org.jboss.dmr.ModelNode modelNode3 = modelNode2.resolve();
        java.lang.String str4 = modelNode3.toString();
        org.jboss.dmr.ModelNode modelNode6 = modelNode3.set(32.0d);
        org.jboss.dmr.PropertyModelValue propertyModelValue8 = new org.jboss.dmr.PropertyModelValue("org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]", modelNode3, true);
        org.jboss.dmr.ModelNode modelNode10 = modelNode3.set((double) (byte) 0);
        org.jboss.dmr.ModelNode modelNode13 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode16 = modelNode13.set("hi!", 0.0d);
        org.jboss.dmr.Property property17 = new org.jboss.dmr.Property("", modelNode16);
        java.lang.String[] strArray18 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode19 = modelNode16.get(strArray18);
        org.jboss.dmr.ModelNode modelNode20 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode23 = modelNode20.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList24 = modelNode23.asList();
        org.jboss.dmr.ListModelValue listModelValue25 = new org.jboss.dmr.ListModelValue(modelNodeList24);
        org.jboss.dmr.ModelNode modelNode26 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue25);
        org.jboss.dmr.ModelValue modelValue27 = listModelValue25.resolve();
        int int29 = listModelValue25.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList30 = listModelValue25.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList31 = modelNode19.asPropertyList(propertyList30);
        org.jboss.dmr.ModelNode modelNode33 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode36 = modelNode33.set("hi!", 0.0d);
        org.jboss.dmr.Property property37 = new org.jboss.dmr.Property("", modelNode36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode39 = modelNode36.get(strArray38);
        org.jboss.dmr.ModelNode modelNode40 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode43 = modelNode40.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList44 = modelNode43.asList();
        org.jboss.dmr.ListModelValue listModelValue45 = new org.jboss.dmr.ListModelValue(modelNodeList44);
        org.jboss.dmr.ModelNode modelNode46 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue45);
        org.jboss.dmr.ModelValue modelValue47 = listModelValue45.resolve();
        int int49 = listModelValue45.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList50 = listModelValue45.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList51 = modelNode39.asPropertyList(propertyList50);
        modelNode19.setNoCopy(modelNode39);
        org.jboss.dmr.ModelNode modelNode53 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode56 = modelNode53.set("hi!", 0.0d);
        org.jboss.dmr.ModelNode modelNode57 = new org.jboss.dmr.ModelNode();
        java.lang.Long long58 = modelNode57.asLongOrNull();
        org.jboss.dmr.ModelNode[] modelNodeArray59 = new org.jboss.dmr.ModelNode[] { modelNode53, modelNode57 };
        java.util.ArrayList<org.jboss.dmr.ModelNode> modelNodeList60 = new java.util.ArrayList<org.jboss.dmr.ModelNode>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList60, modelNodeArray59);
        org.jboss.dmr.ModelNode modelNode62 = modelNode19.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList60);
        org.jboss.dmr.LongModelValue longModelValue64 = new org.jboss.dmr.LongModelValue((-1L));
        int int65 = longModelValue64.asInt();
        boolean boolean66 = modelNode19.equals((java.lang.Object) int65);
        org.jboss.dmr.ModelNode modelNode67 = modelNode10.set("hi!", modelNode19);
        org.jboss.dmr.ModelNode modelNode70 = new org.jboss.dmr.ModelNode("EXPRESSION_VALUE");
        org.jboss.dmr.BooleanModelValue booleanModelValue73 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger74 = booleanModelValue73.asBigInteger();
        byte[] byteArray75 = booleanModelValue73.asBytes();
        org.jboss.dmr.ModelNode modelNode76 = modelNode70.set("expression \"hi!\"", byteArray75);
        org.jboss.dmr.ModelNode modelNode77 = modelNode76.clear();
        org.jboss.dmr.BooleanModelValue booleanModelValue79 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger80 = booleanModelValue79.asBigInteger();
        byte[] byteArray81 = booleanModelValue79.asBytes();
        boolean boolean82 = booleanModelValue79.asBoolean();
        byte[] byteArray83 = booleanModelValue79.asBytes();
        org.jboss.dmr.DoubleModelValue doubleModelValue85 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long86 = doubleModelValue85.asLong();
        boolean boolean87 = doubleModelValue85.asBoolean();
        byte[] byteArray88 = doubleModelValue85.asBytes();
        java.math.BigInteger bigInteger89 = doubleModelValue85.asBigInteger();
        boolean boolean90 = booleanModelValue79.equals((java.lang.Object) bigInteger89);
        org.jboss.dmr.ModelNode modelNode91 = modelNode76.set(bigInteger89);
        org.jboss.dmr.ModelNode modelNode92 = modelNode67.set("big decimal 1.0", bigInteger89);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode94 = modelNode92.add(false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "true" + "'", str4, "true");
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(modelNode23);
        org.junit.Assert.assertNotNull(modelNodeList24);
        org.junit.Assert.assertNotNull(modelValue27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(propertyList30);
        org.junit.Assert.assertNotNull(propertyList31);
        org.junit.Assert.assertNotNull(modelNode36);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(modelNode39);
        org.junit.Assert.assertNotNull(modelNode43);
        org.junit.Assert.assertNotNull(modelNodeList44);
        org.junit.Assert.assertNotNull(modelValue47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(propertyList50);
        org.junit.Assert.assertNotNull(propertyList51);
        org.junit.Assert.assertNotNull(modelNode56);
        org.junit.Assert.assertNull(long58);
        org.junit.Assert.assertNotNull(modelNodeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(modelNode62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(modelNode67);
        org.junit.Assert.assertNotNull(booleanModelValue73);
        org.junit.Assert.assertNotNull(bigInteger74);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[1]");
        org.junit.Assert.assertNotNull(modelNode76);
        org.junit.Assert.assertNotNull(modelNode77);
        org.junit.Assert.assertNotNull(booleanModelValue79);
        org.junit.Assert.assertNotNull(bigInteger80);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[1]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[1]");
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 10L + "'", long86 == 10L);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(bigInteger89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(modelNode91);
        org.junit.Assert.assertNotNull(modelNode92);
    }

    @Test
    public void test13201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13201");
        org.jboss.dmr.ModelNode modelNode1 = org.jboss.dmr.ModelNode.fromJSONString("1.0");
        org.jboss.dmr.ModelNode modelNode2 = modelNode1.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode4 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode7 = modelNode4.set("hi!", 0.0d);
        org.jboss.dmr.Property property8 = new org.jboss.dmr.Property("", modelNode7);
        java.lang.String[] strArray9 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode10 = modelNode7.get(strArray9);
        org.jboss.dmr.ModelNode modelNode11 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode14 = modelNode11.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList15 = modelNode14.asList();
        org.jboss.dmr.ListModelValue listModelValue16 = new org.jboss.dmr.ListModelValue(modelNodeList15);
        org.jboss.dmr.ModelNode modelNode17 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue16);
        org.jboss.dmr.ModelValue modelValue18 = listModelValue16.resolve();
        int int20 = listModelValue16.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList21 = listModelValue16.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList22 = modelNode10.asPropertyList(propertyList21);
        org.jboss.dmr.ModelNode modelNode24 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode27 = modelNode24.set("hi!", 0.0d);
        org.jboss.dmr.Property property28 = new org.jboss.dmr.Property("", modelNode27);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode30 = modelNode27.get(strArray29);
        org.jboss.dmr.ModelNode modelNode31 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode34 = modelNode31.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList35 = modelNode34.asList();
        org.jboss.dmr.ListModelValue listModelValue36 = new org.jboss.dmr.ListModelValue(modelNodeList35);
        org.jboss.dmr.ModelNode modelNode37 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue36);
        org.jboss.dmr.ModelValue modelValue38 = listModelValue36.resolve();
        int int40 = listModelValue36.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList41 = listModelValue36.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList42 = modelNode30.asPropertyList(propertyList41);
        modelNode10.setNoCopy(modelNode30);
        boolean boolean44 = modelNode30.isProtected();
        org.jboss.dmr.ModelNode modelNode47 = modelNode30.set("", (double) 8);
        org.jboss.dmr.ModelNode modelNode50 = new org.jboss.dmr.ModelNode(1L);
        org.jboss.dmr.ValueExpression valueExpression51 = modelNode50.asExpression();
        org.jboss.dmr.ModelNode modelNode52 = modelNode47.set("rO0ABXNyABNqYXZhLmxhbmcuQ2hhcmFjdGVyNItH2WsaJngCAAFDAAV2YWx1ZXhwACM=", valueExpression51);
        java.lang.String str53 = valueExpression51.resolveString();
        java.math.BigDecimal bigDecimal54 = valueExpression51.resolveBigDecimal();
        org.jboss.dmr.ModelNode modelNode55 = modelNode2.set(bigDecimal54);
        org.jboss.dmr.LongModelValue longModelValue58 = new org.jboss.dmr.LongModelValue((-1L));
        long long60 = longModelValue58.asLong((long) (byte) -1);
        byte[] byteArray61 = longModelValue58.asBytes();
        long long62 = longModelValue58.asLong();
        java.math.BigInteger bigInteger63 = longModelValue58.asBigInteger();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode64 = modelNode2.add("\"0.0\"", bigInteger63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(modelNode2);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(modelNodeList15);
        org.junit.Assert.assertNotNull(modelValue18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(propertyList21);
        org.junit.Assert.assertNotNull(propertyList22);
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(modelNode30);
        org.junit.Assert.assertNotNull(modelNode34);
        org.junit.Assert.assertNotNull(modelNodeList35);
        org.junit.Assert.assertNotNull(modelValue38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(propertyList41);
        org.junit.Assert.assertNotNull(propertyList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(modelNode47);
        org.junit.Assert.assertNotNull(valueExpression51);
        org.junit.Assert.assertNotNull(modelNode52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "1" + "'", str53, "1");
        org.junit.Assert.assertNotNull(bigDecimal54);
        org.junit.Assert.assertNotNull(modelNode55);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[-1, -1, -1, -1, -1, -1, -1, -1]");
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(bigInteger63);
    }

    @Test
    public void test13202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13202");
        java.lang.Object obj1 = org.jboss.dmr.Base64.decodeToObject("big integer 1");
        org.junit.Assert.assertNull(obj1);
    }

    @Test
    public void test13203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13203");
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode(true);
        org.jboss.dmr.ModelNode modelNode3 = modelNode2.resolve();
        java.lang.String str4 = modelNode3.toString();
        org.jboss.dmr.ModelNode modelNode6 = modelNode3.set(32.0d);
        org.jboss.dmr.PropertyModelValue propertyModelValue8 = new org.jboss.dmr.PropertyModelValue("org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]", modelNode3, true);
        org.jboss.dmr.ModelNode modelNode10 = modelNode3.set((double) (byte) 0);
        byte[] byteArray11 = modelNode3.asBytes();
        java.io.PrintWriter printWriter12 = null;
        // The following exception was thrown during execution in test generation
        try {
            modelNode3.writeString(printWriter12, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Parameter cannot be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "true" + "'", str4, "true");
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test13204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13204");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.PROPERTY;
        char char1 = modelType0.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue2 = org.jboss.dmr.TypeModelValue.of(modelType0);
        org.jboss.dmr.ModelType modelType3 = org.jboss.dmr.ModelType.PROPERTY;
        char char4 = modelType3.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue5 = org.jboss.dmr.TypeModelValue.of(modelType3);
        boolean boolean6 = typeModelValue2.equals(typeModelValue5);
        java.lang.String str7 = typeModelValue5.asString();
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = modelNode11.asList();
        org.jboss.dmr.ListModelValue listModelValue13 = new org.jboss.dmr.ListModelValue(modelNodeList12);
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue13);
        org.jboss.dmr.ModelValue modelValue15 = listModelValue13.resolve();
        int int17 = listModelValue13.asInt((int) (byte) 100);
        boolean boolean18 = listModelValue13.asBoolean();
        org.jboss.dmr.ModelNode[] modelNodeArray19 = org.jboss.dmr.ListModelValue.NO_NODES;
        boolean boolean20 = listModelValue13.equals((java.lang.Object) modelNodeArray19);
        boolean boolean21 = typeModelValue5.equals((java.lang.Object) listModelValue13);
        org.jboss.dmr.ModelValue modelValue22 = listModelValue13.resolve();
        org.jboss.dmr.ModelValue modelValue23 = listModelValue13.protect();
        java.lang.Throwable throwable25 = null;
        org.jboss.dmr.stream.ModelException modelException26 = new org.jboss.dmr.stream.ModelException("[(\"hi!\" => 0.0)]", throwable25);
        org.jboss.dmr.stream.ModelException modelException27 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException26);
        java.lang.Throwable throwable29 = null;
        org.jboss.dmr.stream.ModelException modelException30 = new org.jboss.dmr.stream.ModelException("[(\"hi!\" => 0.0)]", throwable29);
        org.jboss.dmr.stream.ModelException modelException31 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException30);
        modelException26.addSuppressed((java.lang.Throwable) modelException30);
        boolean boolean33 = listModelValue13.equals((java.lang.Object) modelException26);
        java.util.List<org.jboss.dmr.Property> propertyList34 = listModelValue13.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList35 = listModelValue13.asPropertyList();
        java.lang.String str36 = listModelValue13.asString();
        org.jboss.dmr.LongModelValue longModelValue38 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str39 = longModelValue38.asString();
        byte[] byteArray40 = longModelValue38.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue41 = new org.jboss.dmr.BytesModelValue(byteArray40);
        double double42 = bytesModelValue41.asDouble();
        org.jboss.dmr.ModelNode modelNode44 = new org.jboss.dmr.ModelNode((double) 100);
        org.jboss.dmr.ModelNode modelNode46 = modelNode44.set((int) '#');
        java.lang.Boolean boolean47 = modelNode44.asBooleanOrNull();
        java.lang.String str49 = modelNode44.asString("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        boolean boolean50 = bytesModelValue41.equals((java.lang.Object) modelNode44);
        java.lang.String str51 = modelNode44.asString();
        boolean boolean52 = listModelValue13.equals((java.lang.Object) modelNode44);
        org.jboss.dmr.ModelNode modelNode54 = new org.jboss.dmr.ModelNode((long) 10);
        org.jboss.dmr.ModelNode modelNode57 = modelNode54.set("(\"hi!\" => expression \"(\\\"hi!\\\" => 0.0)\")", (long) (short) -1);
        boolean boolean58 = modelNode44.equals((java.lang.Object) modelNode54);
        java.lang.String str60 = modelNode54.asString("{\n    \"rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4\" : {\n        \"hi!\" : 0.0\n    }\n}");
        // The following exception was thrown during execution in test generation
        try {
            java.math.BigDecimal bigDecimal61 = modelNode54.asBigDecimal();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType0.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char1 + "' != '" + 'p' + "'", char1 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue2);
        org.junit.Assert.assertTrue("'" + modelType3 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType3.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char4 + "' != '" + 'p' + "'", char4 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PROPERTY" + "'", str7, "PROPERTY");
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNodeList12);
        org.junit.Assert.assertNotNull(modelValue15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(modelNodeArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(modelValue22);
        org.junit.Assert.assertNotNull(modelValue23);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(propertyList34);
        org.junit.Assert.assertNotNull(propertyList35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str36, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1" + "'", str39, "1");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 4.9E-324d + "'", double42 == 4.9E-324d);
        org.junit.Assert.assertNotNull(modelNode46);
        org.junit.Assert.assertEquals("'" + boolean47 + "' != '" + true + "'", boolean47, true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "35" + "'", str49, "35");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "35" + "'", str51, "35");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(modelNode57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(\"(\\\"hi!\\\" => expression \\\"(\\\\\\\"hi!\\\\\\\" => 0.0)\\\")\" => -1L)" + "'", str60, "(\"(\\\"hi!\\\" => expression \\\"(\\\\\\\"hi!\\\\\\\" => 0.0)\\\")\" => -1L)");
    }

    @Test
    public void test13205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13205");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        org.jboss.dmr.ModelNode modelNode2 = modelNode1.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode3 = modelNode2.asObject();
        org.jboss.dmr.ModelNode modelNode5 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.BooleanModelValue booleanModelValue7 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger8 = booleanModelValue7.asBigInteger();
        org.jboss.dmr.ModelNode modelNode9 = modelNode5.add(bigInteger8);
        org.jboss.dmr.ModelNode modelNode11 = modelNode5.add((double) 100);
        org.jboss.dmr.ModelNode modelNode12 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode15 = modelNode12.setExpression("hi!", "hi!");
        org.jboss.dmr.ModelNode modelNode16 = modelNode15.setEmptyList();
        org.jboss.dmr.ModelNode modelNode17 = modelNode15.asObject();
        org.jboss.dmr.ModelNode modelNode19 = modelNode17.get("Expression \"true\"");
        boolean boolean20 = modelNode11.equals(modelNode17);
        org.jboss.dmr.ModelNode modelNode21 = modelNode2.setNoCopy("[97L]", modelNode17);
        // The following exception was thrown during execution in test generation
        try {
            int int22 = modelNode21.asInt();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode2);
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(booleanModelValue7);
        org.junit.Assert.assertNotNull(bigInteger8);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNode15);
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(modelNode21);
    }

    @Test
    public void test13206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13206");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        java.lang.String str6 = listModelValue5.asString();
        long long7 = listModelValue5.asLong();
        java.lang.String str8 = listModelValue5.asString();
        org.jboss.dmr.ModelNode modelNode9 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode12 = modelNode9.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList13 = modelNode12.asList();
        org.jboss.dmr.ListModelValue listModelValue14 = new org.jboss.dmr.ListModelValue(modelNodeList13);
        java.lang.String str15 = listModelValue14.asString();
        long long16 = listModelValue14.asLong();
        int int18 = listModelValue14.asInt((int) '4');
        org.jboss.dmr.ModelValue modelValue19 = listModelValue14.protect();
        boolean boolean21 = listModelValue14.has((int) (short) 100);
        boolean boolean22 = listModelValue5.equals(listModelValue14);
        org.jboss.dmr.ModelNode modelNode23 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode26 = modelNode23.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList27 = modelNode26.asList();
        org.jboss.dmr.ListModelValue listModelValue28 = new org.jboss.dmr.ListModelValue(modelNodeList27);
        org.jboss.dmr.ModelNode modelNode29 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue28);
        org.jboss.dmr.ModelValue modelValue30 = listModelValue28.resolve();
        int int32 = listModelValue28.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList33 = listModelValue28.asPropertyList();
        boolean boolean34 = listModelValue5.equals(listModelValue28);
        boolean boolean36 = listModelValue5.has(8);
        org.jboss.dmr.ModelNode modelNode37 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode40 = modelNode37.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList41 = modelNode40.asList();
        org.jboss.dmr.ListModelValue listModelValue42 = new org.jboss.dmr.ListModelValue(modelNodeList41);
        org.jboss.dmr.ModelNode modelNode43 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue42);
        org.jboss.dmr.ModelValue modelValue44 = listModelValue42.resolve();
        int int46 = listModelValue42.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList47 = listModelValue42.asPropertyList();
        org.jboss.dmr.ModelValue modelValue48 = listModelValue42.clone();
        boolean boolean49 = listModelValue5.equals(listModelValue42);
        java.io.PrintWriter printWriter50 = null;
        // The following exception was thrown during execution in test generation
        try {
            listModelValue5.formatAsJSON(printWriter50, (int) (short) 100, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str6, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str8, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNodeList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str15, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(modelValue19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertNotNull(modelNodeList27);
        org.junit.Assert.assertNotNull(modelValue30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(propertyList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(modelNode40);
        org.junit.Assert.assertNotNull(modelNodeList41);
        org.junit.Assert.assertNotNull(modelValue44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(propertyList47);
        org.junit.Assert.assertNotNull(modelValue48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test13207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13207");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        org.jboss.dmr.ObjectModelValue objectModelValue2 = null;
        boolean boolean3 = objectModelValue0.equals(objectModelValue2);
        java.lang.String str4 = objectModelValue0.asString();
        org.jboss.dmr.ModelValue modelValue6 = objectModelValue0.copy(false);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray7 = modelValue6.asBytes();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNotNull(modelValue6);
    }

    @Test
    public void test13208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13208");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.PROPERTY;
        char char1 = modelType0.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue2 = org.jboss.dmr.TypeModelValue.of(modelType0);
        org.jboss.dmr.ModelType modelType3 = org.jboss.dmr.ModelType.PROPERTY;
        char char4 = modelType3.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue5 = org.jboss.dmr.TypeModelValue.of(modelType3);
        boolean boolean6 = typeModelValue2.equals(typeModelValue5);
        java.lang.String str7 = typeModelValue5.asString();
        org.jboss.dmr.ValueExpression valueExpression8 = typeModelValue5.asExpression();
        org.jboss.dmr.ModelType modelType9 = typeModelValue5.asType();
        boolean boolean10 = typeModelValue5.asBoolean();
        java.lang.String str11 = typeModelValue5.asString();
        org.jboss.dmr.ModelValue modelValue12 = typeModelValue5.copy();
        java.lang.String str13 = typeModelValue5.asString();
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType0.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char1 + "' != '" + 'p' + "'", char1 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue2);
        org.junit.Assert.assertTrue("'" + modelType3 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType3.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char4 + "' != '" + 'p' + "'", char4 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PROPERTY" + "'", str7, "PROPERTY");
        org.junit.Assert.assertNotNull(valueExpression8);
        org.junit.Assert.assertTrue("'" + modelType9 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType9.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PROPERTY" + "'", str11, "PROPERTY");
        org.junit.Assert.assertNotNull(modelValue12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PROPERTY" + "'", str13, "PROPERTY");
    }

    @Test
    public void test13209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13209");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(modelType0);
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode6 = modelNode3.set("hi!", 0.0d);
        org.jboss.dmr.Property property7 = new org.jboss.dmr.Property("", modelNode6);
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(property7);
        java.lang.String str9 = property7.getName();
        org.jboss.dmr.Property property10 = property7.clone();
        org.jboss.dmr.PropertyModelValue propertyModelValue11 = new org.jboss.dmr.PropertyModelValue(property7);
        org.jboss.dmr.Property property12 = propertyModelValue11.asProperty();
        org.jboss.dmr.ModelValue modelValue13 = propertyModelValue11.protect();
        // The following exception was thrown during execution in test generation
        try {
            long long15 = modelValue13.asLong((long) 'D');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType0.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(property12);
        org.junit.Assert.assertNotNull(modelValue13);
    }

    @Test
    public void test13210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13210");
        java.io.OutputStream outputStream0 = null;
        org.jboss.dmr.Base64.OutputStream outputStream1 = new org.jboss.dmr.Base64.OutputStream(outputStream0);
        outputStream1.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream3 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream1);
        org.jboss.dmr.Base64.OutputStream outputStream5 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream3, (int) (byte) -1);
        outputStream3.suspendEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream7 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream3);
        org.jboss.dmr.Base64.OutputStream outputStream8 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream3);
        org.jboss.dmr.Base64.OutputStream outputStream10 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream3, (int) 'e');
    }

    @Test
    public void test13211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13211");
        org.jboss.dmr.BooleanModelValue booleanModelValue1 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray2 = booleanModelValue1.asBytes();
        java.lang.String str3 = booleanModelValue1.asString();
        boolean boolean4 = booleanModelValue1.asBoolean();
        java.math.BigDecimal bigDecimal5 = booleanModelValue1.asBigDecimal();
        long long6 = booleanModelValue1.asLong();
        org.junit.Assert.assertNotNull(booleanModelValue1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "true" + "'", str3, "true");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(bigDecimal5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
    }

    @Test
    public void test13212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13212");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isBigInteger();
        boolean boolean17 = modelReader15.isLong();
        boolean boolean18 = modelReader15.isBigDecimal();
        boolean boolean19 = modelReader15.isUndefined();
        boolean boolean20 = modelReader15.isUndefined();
        boolean boolean21 = modelReader15.isListStart();
        boolean boolean22 = modelReader15.isPropertyStart();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = modelReader15.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Current event isn't string");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test13213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13213");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str2 = intModelValue1.asString();
        double double4 = intModelValue1.asDouble((double) 2);
        java.math.BigDecimal bigDecimal5 = intModelValue1.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode(bigDecimal5);
        org.jboss.dmr.ModelNode modelNode7 = modelNode6.clear();
        org.jboss.dmr.BooleanModelValue booleanModelValue10 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long11 = booleanModelValue10.asLong();
        org.jboss.dmr.ValueExpression valueExpression12 = booleanModelValue10.asExpression();
        boolean boolean14 = valueExpression12.equals((java.lang.Object) 'p');
        org.jboss.dmr.ExpressionValue expressionValue15 = new org.jboss.dmr.ExpressionValue(valueExpression12);
        org.jboss.dmr.ModelNode modelNode16 = new org.jboss.dmr.ModelNode(valueExpression12);
        org.jboss.dmr.ModelNode modelNode17 = modelNode6.set("112.0", modelNode16);
        boolean boolean19 = modelNode6.hasDefined(52);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "32" + "'", str2, "32");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 32.0d + "'", double4 == 32.0d);
        org.junit.Assert.assertNotNull(bigDecimal5);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(booleanModelValue10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertNotNull(valueExpression12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test13214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13214");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(modelType0);
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode6 = modelNode3.set("hi!", 0.0d);
        org.jboss.dmr.Property property7 = new org.jboss.dmr.Property("", modelNode6);
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(property7);
        org.jboss.dmr.PropertyModelValue propertyModelValue9 = new org.jboss.dmr.PropertyModelValue(property7);
        org.jboss.dmr.ModelNode modelNode11 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode14 = modelNode11.set("hi!", 0.0d);
        java.lang.String str15 = modelNode11.toString();
        org.jboss.dmr.ModelNode modelNode16 = modelNode11.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode18 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode21 = modelNode18.set("hi!", 0.0d);
        org.jboss.dmr.Property property22 = new org.jboss.dmr.Property("", modelNode21);
        org.jboss.dmr.ModelNode modelNode23 = modelNode11.set(property22);
        org.jboss.dmr.PropertyModelValue propertyModelValue25 = new org.jboss.dmr.PropertyModelValue("EXPRESSION_VALUE", modelNode23, false);
        java.util.Set<java.lang.String> strSet26 = propertyModelValue25.getKeys();
        java.util.List<org.jboss.dmr.Property> propertyList27 = propertyModelValue25.asPropertyList();
        java.util.Set<java.lang.String> strSet28 = propertyModelValue25.getKeys();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList29 = propertyModelValue25.asList();
        boolean boolean30 = propertyModelValue9.equals(propertyModelValue25);
        org.jboss.dmr.ModelValue modelValue31 = propertyModelValue9.resolve();
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType0.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(\"hi!\" => 0.0)" + "'", str15, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertNotNull(modelNode21);
        org.junit.Assert.assertNotNull(modelNode23);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(propertyList27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(modelNodeList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(modelValue31);
    }

    @Test
    public void test13215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13215");
        java.io.InputStream inputStream0 = null;
        org.jboss.dmr.Base64.InputStream inputStream2 = new org.jboss.dmr.Base64.InputStream(inputStream0, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream3 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream2);
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream3);
        org.jboss.dmr.Base64.InputStream inputStream6 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream3, (int) '#');
        org.jboss.dmr.Base64.InputStream inputStream8 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream6, (int) 'b');
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode9 = org.jboss.dmr.ModelNode.fromBase64((java.io.InputStream) inputStream6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13216");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.BooleanModelValue booleanModelValue2 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger3 = booleanModelValue2.asBigInteger();
        org.jboss.dmr.ModelNode modelNode4 = modelNode0.add(bigInteger3);
        org.jboss.dmr.ModelNode modelNode5 = modelNode0.clone();
        org.jboss.dmr.BooleanModelValue booleanModelValue6 = org.jboss.dmr.BooleanModelValue.TRUE;
        java.math.BigInteger bigInteger7 = booleanModelValue6.asBigInteger();
        boolean boolean8 = booleanModelValue6.asBoolean();
        java.math.BigInteger bigInteger9 = booleanModelValue6.asBigInteger();
        org.jboss.dmr.ModelNode modelNode10 = modelNode5.add(bigInteger9);
        org.jboss.dmr.ModelNode modelNode12 = modelNode5.add((int) 'a');
        org.jboss.dmr.ModelNode modelNode13 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode17 = modelNode14.set("hi!", 0.0d);
        java.lang.String str18 = modelNode14.toString();
        org.jboss.dmr.ModelNode modelNode19 = modelNode14.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode21 = modelNode14.set(100);
        org.jboss.dmr.ModelNode modelNode22 = modelNode13.add(modelNode14);
        int int24 = modelNode14.asInt(2);
        org.jboss.dmr.ModelNode modelNode25 = modelNode14.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode26 = modelNode12.addNoCopy(modelNode14);
        org.jboss.dmr.ModelNode modelNode28 = modelNode26.add((int) (short) 10);
        org.junit.Assert.assertNotNull(booleanModelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(booleanModelValue6);
        org.junit.Assert.assertNotNull(bigInteger7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(bigInteger9);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(\"hi!\" => 0.0)" + "'", str18, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(modelNode21);
        org.junit.Assert.assertNotNull(modelNode22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertNotNull(modelNode28);
    }

    @Test
    public void test13217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13217");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode("(\"hi!\" => 0.0)");
        java.io.OutputStream outputStream2 = null;
        org.jboss.dmr.Base64.OutputStream outputStream3 = new org.jboss.dmr.Base64.OutputStream(outputStream2);
        outputStream3.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream5 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream3);
        org.jboss.dmr.Base64.OutputStream outputStream6 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream5);
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode("EXPRESSION_VALUE");
        org.jboss.dmr.BooleanModelValue booleanModelValue11 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger12 = booleanModelValue11.asBigInteger();
        byte[] byteArray13 = booleanModelValue11.asBytes();
        org.jboss.dmr.ModelNode modelNode14 = modelNode8.set("expression \"hi!\"", byteArray13);
        outputStream5.write(byteArray13);
        org.jboss.dmr.ModelNode modelNode16 = modelNode1.set(byteArray13);
        org.jboss.dmr.DoubleModelValue doubleModelValue19 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        boolean boolean20 = doubleModelValue19.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression21 = doubleModelValue19.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue22 = new org.jboss.dmr.ExpressionValue(valueExpression21);
        org.jboss.dmr.ModelNode modelNode23 = modelNode16.set("[(\"hi!\" => 0.0)]", valueExpression21);
        java.io.PrintWriter printWriter24 = null;
        // The following exception was thrown during execution in test generation
        try {
            modelNode23.formatAsJSON(printWriter24, (int) 'J', true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanModelValue11);
        org.junit.Assert.assertNotNull(bigInteger12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[1]");
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(valueExpression21);
        org.junit.Assert.assertNotNull(modelNode23);
    }

    @Test
    public void test13218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13218");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (short) 100);
        org.jboss.dmr.Validation.validate(modelNode1, "(\"org.jboss.dmr.stream.ModelException: [(\\\"hi!\\\" => 0.0)]\" => (\"hi!\" => 0.0))");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory5 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream6 = null;
        org.jboss.dmr.Base64.InputStream inputStream8 = new org.jboss.dmr.Base64.InputStream(inputStream6, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream9 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream8);
        org.jboss.dmr.stream.ModelReader modelReader10 = modelStreamFactory5.newModelReader((java.io.InputStream) inputStream9);
        java.io.OutputStream outputStream11 = null;
        org.jboss.dmr.Base64.OutputStream outputStream12 = new org.jboss.dmr.Base64.OutputStream(outputStream11);
        org.jboss.dmr.Base64.OutputStream outputStream13 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream12);
        outputStream12.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter16 = modelStreamFactory5.newModelWriter((java.io.OutputStream) outputStream12);
        org.jboss.dmr.stream.ModelWriter modelWriter17 = modelWriter16.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter19 = modelWriter16.writeInt((int) '4');
        org.jboss.dmr.ModelNode modelNode20 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode23 = modelNode20.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList24 = modelNode23.asList();
        org.jboss.dmr.ListModelValue listModelValue25 = new org.jboss.dmr.ListModelValue(modelNodeList24);
        org.jboss.dmr.ModelNode modelNode26 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue25);
        org.jboss.dmr.ModelValue modelValue27 = listModelValue25.resolve();
        int int29 = listModelValue25.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList30 = listModelValue25.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList31 = listModelValue25.asPropertyList();
        java.lang.String str32 = listModelValue25.asString();
        int int33 = listModelValue25.asInt();
        java.lang.String str34 = listModelValue25.asString();
        org.jboss.dmr.ModelType modelType35 = org.jboss.dmr.ModelType.DOUBLE;
        org.jboss.dmr.ModelNode modelNode36 = new org.jboss.dmr.ModelNode(modelType35);
        boolean boolean37 = listModelValue25.equals((java.lang.Object) modelType35);
        org.jboss.dmr.TypeModelValue typeModelValue38 = org.jboss.dmr.TypeModelValue.of(modelType35);
        org.jboss.dmr.TypeModelValue typeModelValue39 = org.jboss.dmr.TypeModelValue.of(modelType35);
        org.jboss.dmr.stream.ModelWriter modelWriter40 = modelWriter16.writeType(modelType35);
        modelNode1.write(modelWriter40);
        org.jboss.dmr.stream.ModelWriter modelWriter42 = modelWriter40.writeObjectStart();
        org.junit.Assert.assertNotNull(modelStreamFactory5);
        org.junit.Assert.assertNotNull(modelReader10);
        org.junit.Assert.assertNotNull(modelWriter16);
        org.junit.Assert.assertNotNull(modelWriter17);
        org.junit.Assert.assertNotNull(modelWriter19);
        org.junit.Assert.assertNotNull(modelNode23);
        org.junit.Assert.assertNotNull(modelNodeList24);
        org.junit.Assert.assertNotNull(modelValue27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(propertyList30);
        org.junit.Assert.assertNotNull(propertyList31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str32, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str34, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + modelType35 + "' != '" + org.jboss.dmr.ModelType.DOUBLE + "'", modelType35.equals(org.jboss.dmr.ModelType.DOUBLE));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeModelValue38);
        org.junit.Assert.assertNotNull(typeModelValue39);
        org.junit.Assert.assertNotNull(modelWriter40);
        org.junit.Assert.assertNotNull(modelWriter42);
    }

    @Test
    public void test13219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13219");
        java.io.OutputStream outputStream0 = null;
        org.jboss.dmr.Base64.OutputStream outputStream1 = new org.jboss.dmr.Base64.OutputStream(outputStream0);
        outputStream1.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream3 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream1);
        org.jboss.dmr.Base64.OutputStream outputStream4 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream3);
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode("EXPRESSION_VALUE");
        org.jboss.dmr.BooleanModelValue booleanModelValue9 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger10 = booleanModelValue9.asBigInteger();
        byte[] byteArray11 = booleanModelValue9.asBytes();
        org.jboss.dmr.ModelNode modelNode12 = modelNode6.set("expression \"hi!\"", byteArray11);
        outputStream3.write(byteArray11);
        org.jboss.dmr.BytesModelValue bytesModelValue14 = new org.jboss.dmr.BytesModelValue(byteArray11);
        org.jboss.dmr.LongModelValue longModelValue16 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str17 = longModelValue16.asString();
        byte[] byteArray18 = longModelValue16.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue19 = new org.jboss.dmr.BytesModelValue(byteArray18);
        java.lang.String str20 = bytesModelValue19.asString();
        int int21 = bytesModelValue19.asInt();
        byte[] byteArray22 = bytesModelValue19.asBytes();
        boolean boolean23 = bytesModelValue14.equals((java.lang.Object) byteArray22);
        org.jboss.dmr.BytesModelValue bytesModelValue24 = new org.jboss.dmr.BytesModelValue(byteArray22);
        org.junit.Assert.assertNotNull(booleanModelValue9);
        org.junit.Assert.assertNotNull(bigInteger10);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1]");
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1" + "'", str17, "1");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str20, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test13220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13220");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long3 = intModelValue1.asLong((long) 'b');
        double double5 = intModelValue1.asDouble((double) 'b');
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 32L + "'", long3 == 32L);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 32.0d + "'", double5 == 32.0d);
    }

    @Test
    public void test13221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13221");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        org.jboss.dmr.Property property5 = new org.jboss.dmr.Property("", modelNode4);
        java.lang.String[] strArray6 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode7 = modelNode4.get(strArray6);
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = modelNode11.asList();
        org.jboss.dmr.ListModelValue listModelValue13 = new org.jboss.dmr.ListModelValue(modelNodeList12);
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue13);
        org.jboss.dmr.ModelValue modelValue15 = listModelValue13.resolve();
        int int17 = listModelValue13.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList18 = listModelValue13.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList19 = modelNode7.asPropertyList(propertyList18);
        org.jboss.dmr.ModelNode modelNode21 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode24 = modelNode21.set("hi!", 0.0d);
        org.jboss.dmr.Property property25 = new org.jboss.dmr.Property("", modelNode24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode27 = modelNode24.get(strArray26);
        org.jboss.dmr.ModelNode modelNode28 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode31 = modelNode28.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList32 = modelNode31.asList();
        org.jboss.dmr.ListModelValue listModelValue33 = new org.jboss.dmr.ListModelValue(modelNodeList32);
        org.jboss.dmr.ModelNode modelNode34 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue33);
        org.jboss.dmr.ModelValue modelValue35 = listModelValue33.resolve();
        int int37 = listModelValue33.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList38 = listModelValue33.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList39 = modelNode27.asPropertyList(propertyList38);
        modelNode7.setNoCopy(modelNode27);
        boolean boolean41 = modelNode27.isProtected();
        org.jboss.dmr.ModelNode modelNode44 = modelNode27.set("", (double) 8);
        org.jboss.dmr.ModelNode modelNode47 = new org.jboss.dmr.ModelNode(1L);
        org.jboss.dmr.ValueExpression valueExpression48 = modelNode47.asExpression();
        org.jboss.dmr.ModelNode modelNode49 = modelNode44.set("rO0ABXNyABNqYXZhLmxhbmcuQ2hhcmFjdGVyNItH2WsaJngCAAFDAAV2YWx1ZXhwACM=", valueExpression48);
        java.lang.String str50 = valueExpression48.resolveString();
        java.math.BigDecimal bigDecimal51 = valueExpression48.resolveBigDecimal();
        org.jboss.dmr.ModelNode modelNode52 = new org.jboss.dmr.ModelNode(valueExpression48);
        java.io.PrintWriter printWriter53 = null;
        // The following exception was thrown during execution in test generation
        try {
            modelNode52.writeString(printWriter53, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNodeList12);
        org.junit.Assert.assertNotNull(modelValue15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(propertyList18);
        org.junit.Assert.assertNotNull(propertyList19);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(modelNodeList32);
        org.junit.Assert.assertNotNull(modelValue35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(propertyList38);
        org.junit.Assert.assertNotNull(propertyList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(modelNode44);
        org.junit.Assert.assertNotNull(valueExpression48);
        org.junit.Assert.assertNotNull(modelNode49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1" + "'", str50, "1");
        org.junit.Assert.assertNotNull(bigDecimal51);
    }

    @Test
    public void test13222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13222");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream5 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4);
        org.jboss.dmr.stream.ModelReader modelReader6 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream5);
        java.io.OutputStream outputStream7 = null;
        org.jboss.dmr.Base64.OutputStream outputStream8 = new org.jboss.dmr.Base64.OutputStream(outputStream7);
        org.jboss.dmr.Base64.OutputStream outputStream9 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream8);
        outputStream8.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter12 = modelStreamFactory1.newModelWriter((java.io.OutputStream) outputStream8);
        org.jboss.dmr.stream.ModelWriter modelWriter13 = modelWriter12.writeListStart();
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode(true);
        org.jboss.dmr.ModelNode modelNode16 = modelNode15.resolve();
        java.lang.String str17 = modelNode15.asString();
        org.jboss.dmr.ModelNode modelNode19 = modelNode15.set((long) 52);
        org.jboss.dmr.ModelNode modelNode21 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode24 = modelNode21.setExpression("hi!", "hi!");
        java.lang.String str25 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode21);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList26 = modelNode21.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode28 = modelNode21.set((double) 0);
        org.jboss.dmr.ModelType modelType30 = org.jboss.dmr.ModelType.PROPERTY;
        char char31 = modelType30.getTypeChar();
        org.jboss.dmr.ModelNode modelNode32 = modelNode21.set("[(\"hi!\" => 0.0)]", modelType30);
        org.jboss.dmr.Property property33 = new org.jboss.dmr.Property("\"(\\\"hi!\\\" => 0.0)\"", modelNode32);
        org.jboss.dmr.ModelNode modelNode34 = modelNode19.set(property33);
        org.jboss.dmr.ModelNode modelNode36 = modelNode19.set(false);
        boolean boolean37 = modelNode36.isProtected();
        org.jboss.dmr.ModelType modelType39 = org.jboss.dmr.ModelType.PROPERTY;
        char char40 = modelType39.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue41 = org.jboss.dmr.TypeModelValue.of(modelType39);
        char char42 = modelType39.getTypeChar();
        org.jboss.dmr.ModelNode modelNode43 = modelNode36.set("rO0ABXQAByJbOTdMXSI=", modelType39);
        org.jboss.dmr.stream.ModelWriter modelWriter44 = modelWriter13.writeType(modelType39);
        org.jboss.dmr.LongModelValue longModelValue46 = new org.jboss.dmr.LongModelValue((long) (byte) -1);
        double double48 = longModelValue46.asDouble(0.0d);
        org.jboss.dmr.LongModelValue longModelValue50 = new org.jboss.dmr.LongModelValue((-1L));
        long long52 = longModelValue50.asLong((long) (byte) -1);
        byte[] byteArray53 = longModelValue50.asBytes();
        boolean boolean54 = longModelValue46.equals(longModelValue50);
        org.jboss.dmr.LongModelValue longModelValue56 = new org.jboss.dmr.LongModelValue(1L);
        long long58 = longModelValue56.asLong((long) (short) 0);
        java.math.BigInteger bigInteger59 = longModelValue56.asBigInteger();
        boolean boolean60 = longModelValue50.equals(longModelValue56);
        java.math.BigInteger bigInteger61 = longModelValue50.asBigInteger();
        org.jboss.dmr.stream.ModelWriter modelWriter62 = modelWriter44.writeBigInteger(bigInteger61);
        org.jboss.dmr.stream.ModelWriter modelWriter63 = modelWriter44.writePropertyStart();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertNotNull(modelReader6);
        org.junit.Assert.assertNotNull(modelWriter12);
        org.junit.Assert.assertNotNull(modelWriter13);
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "true" + "'", str17, "true");
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str25, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList26);
        org.junit.Assert.assertNotNull(modelNode28);
        org.junit.Assert.assertTrue("'" + modelType30 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType30.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char31 + "' != '" + 'p' + "'", char31 == 'p');
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertNotNull(modelNode34);
        org.junit.Assert.assertNotNull(modelNode36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + modelType39 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType39.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char40 + "' != '" + 'p' + "'", char40 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue41);
        org.junit.Assert.assertTrue("'" + char42 + "' != '" + 'p' + "'", char42 == 'p');
        org.junit.Assert.assertNotNull(modelNode43);
        org.junit.Assert.assertNotNull(modelWriter44);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + (-1.0d) + "'", double48 == (-1.0d));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-1, -1, -1, -1, -1, -1, -1, -1]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 1L + "'", long58 == 1L);
        org.junit.Assert.assertNotNull(bigInteger59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(bigInteger61);
        org.junit.Assert.assertNotNull(modelWriter62);
        org.junit.Assert.assertNotNull(modelWriter63);
    }

    @Test
    public void test13223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13223");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream5 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4);
        org.jboss.dmr.stream.ModelReader modelReader6 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream5);
        java.io.OutputStream outputStream7 = null;
        org.jboss.dmr.Base64.OutputStream outputStream8 = new org.jboss.dmr.Base64.OutputStream(outputStream7);
        org.jboss.dmr.Base64.OutputStream outputStream9 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream8);
        outputStream8.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter12 = modelStreamFactory1.newModelWriter((java.io.OutputStream) outputStream8);
        org.jboss.dmr.stream.ModelWriter modelWriter13 = modelWriter12.writeListStart();
        org.jboss.dmr.IntModelValue intModelValue15 = new org.jboss.dmr.IntModelValue(10);
        byte[] byteArray16 = intModelValue15.asBytes();
        int int18 = intModelValue15.asInt(0);
        java.math.BigInteger bigInteger19 = intModelValue15.asBigInteger();
        org.jboss.dmr.stream.ModelWriter modelWriter20 = modelWriter13.writeBigInteger(bigInteger19);
        org.jboss.dmr.stream.ModelWriter modelWriter21 = modelWriter13.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter23 = modelWriter13.writeInt((int) (short) 100);
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertNotNull(modelReader6);
        org.junit.Assert.assertNotNull(modelWriter12);
        org.junit.Assert.assertNotNull(modelWriter13);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[0, 0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertNotNull(bigInteger19);
        org.junit.Assert.assertNotNull(modelWriter20);
        org.junit.Assert.assertNotNull(modelWriter21);
        org.junit.Assert.assertNotNull(modelWriter23);
    }

    @Test
    public void test13224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13224");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        boolean boolean4 = objectModelValue0.has((int) 'a');
        boolean boolean6 = objectModelValue0.has("");
        org.jboss.dmr.ObjectModelValue objectModelValue7 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode8 = objectModelValue7.asObject();
        java.util.Set<java.lang.String> strSet9 = objectModelValue7.getKeys();
        boolean boolean11 = objectModelValue7.has((int) 'a');
        boolean boolean12 = objectModelValue0.equals(objectModelValue7);
        int int13 = objectModelValue7.asInt();
        java.util.List<org.jboss.dmr.Property> propertyList14 = objectModelValue7.asPropertyList();
        java.lang.String str15 = objectModelValue7.toString();
        org.jboss.dmr.ModelNode modelNode17 = objectModelValue7.removeChild("hi!");
        org.jboss.dmr.ModelValue modelValue19 = objectModelValue7.copy(false);
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(propertyList14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{}" + "'", str15, "{}");
        org.junit.Assert.assertNull(modelNode17);
        org.junit.Assert.assertNotNull(modelValue19);
    }

    @Test
    public void test13225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13225");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue5);
        org.jboss.dmr.ModelNode modelNode8 = modelNode6.set("true");
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("[1]", (double) 0.0f);
        java.lang.String str13 = modelNode8.asString("Expression \"hi!\"");
        java.io.PrintWriter printWriter14 = null;
        // The following exception was thrown during execution in test generation
        try {
            modelNode8.formatAsJSON(printWriter14, (int) (short) 1, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(\"[1]\" => 0.0)" + "'", str13, "(\"[1]\" => 0.0)");
    }

    @Test
    public void test13226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13226");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        java.lang.String str6 = listModelValue5.asString();
        long long7 = listModelValue5.asLong();
        java.lang.String str8 = listModelValue5.asString();
        org.jboss.dmr.ModelNode modelNode9 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode12 = modelNode9.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList13 = modelNode12.asList();
        org.jboss.dmr.ListModelValue listModelValue14 = new org.jboss.dmr.ListModelValue(modelNodeList13);
        java.lang.String str15 = listModelValue14.asString();
        long long16 = listModelValue14.asLong();
        int int18 = listModelValue14.asInt((int) '4');
        org.jboss.dmr.ModelValue modelValue19 = listModelValue14.protect();
        boolean boolean21 = listModelValue14.has((int) (short) 100);
        boolean boolean22 = listModelValue5.equals(listModelValue14);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList23 = listModelValue5.asList();
        int int24 = listModelValue5.asInt();
        boolean boolean26 = listModelValue5.has((int) (byte) 10);
        java.util.List<org.jboss.dmr.Property> propertyList27 = listModelValue5.asPropertyList();
        java.io.DataOutput dataOutput28 = null;
        // The following exception was thrown during execution in test generation
        try {
            listModelValue5.writeExternal(dataOutput28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str6, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str8, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNodeList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str15, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(modelValue19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(modelNodeList23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(propertyList27);
    }

    @Test
    public void test13227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13227");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.lang.String str4 = modelNode0.toString();
        org.jboss.dmr.ModelNode modelNode5 = modelNode0.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode7 = modelNode0.set(100);
        org.jboss.dmr.ModelNode modelNode10 = new org.jboss.dmr.ModelNode((double) 100);
        org.jboss.dmr.ModelNode modelNode12 = modelNode10.set((int) '#');
        org.jboss.dmr.ModelNode modelNode13 = modelNode0.setNoCopy("EXPRESSION_VALUE", modelNode12);
        org.jboss.dmr.ModelNode modelNode14 = modelNode13.resolve();
        org.jboss.dmr.ModelNode modelNode17 = modelNode14.setExpression("\"bytes {\\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01\\n}\"", "{\n    \"hi!\" : {\n        \"EXPRESSION_VALUE\" : \"hi!\"\n    }\n}");
        org.jboss.dmr.ModelNode modelNode20 = modelNode14.setExpression("{ \"TYPE_MODEL_VALUE\" : \"BYTES\" }", "H4sIAAAAAAAAAPv/HwIAHN9EIQgAAAA=");
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "(\"hi!\" => 0.0)" + "'", str4, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertNotNull(modelNode20);
    }

    @Test
    public void test13228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13228");
        org.jboss.dmr.BooleanModelValue booleanModelValue1 = org.jboss.dmr.BooleanModelValue.valueOf(false);
        long long3 = booleanModelValue1.asLong((long) 32);
        int int4 = booleanModelValue1.asInt();
        java.math.BigDecimal bigDecimal5 = booleanModelValue1.asBigDecimal();
        org.jboss.dmr.ModelValue modelValue6 = booleanModelValue1.protect();
        org.jboss.dmr.ValueExpression valueExpression7 = booleanModelValue1.asExpression();
        double double8 = booleanModelValue1.asDouble();
        java.math.BigDecimal bigDecimal9 = booleanModelValue1.asBigDecimal();
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory11 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream12 = null;
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream(inputStream12, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream15 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream14);
        org.jboss.dmr.stream.ModelReader modelReader16 = modelStreamFactory11.newModelReader((java.io.InputStream) inputStream15);
        java.io.OutputStream outputStream17 = null;
        org.jboss.dmr.Base64.OutputStream outputStream18 = new org.jboss.dmr.Base64.OutputStream(outputStream17);
        org.jboss.dmr.Base64.OutputStream outputStream19 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream18);
        outputStream18.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter22 = modelStreamFactory11.newModelWriter((java.io.OutputStream) outputStream18);
        org.jboss.dmr.stream.ModelWriter modelWriter23 = modelWriter22.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter25 = modelWriter22.writeInt((int) '4');
        org.jboss.dmr.stream.ModelWriter modelWriter27 = modelWriter25.writeBoolean(true);
        org.jboss.dmr.stream.ModelWriter modelWriter29 = modelWriter25.writeBoolean(true);
        org.jboss.dmr.stream.ModelWriter modelWriter31 = modelWriter29.writeBoolean(true);
        booleanModelValue1.write(modelWriter31);
        org.junit.Assert.assertNotNull(booleanModelValue1);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(bigDecimal5);
        org.junit.Assert.assertNotNull(modelValue6);
        org.junit.Assert.assertNotNull(valueExpression7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(bigDecimal9);
        org.junit.Assert.assertNotNull(modelStreamFactory11);
        org.junit.Assert.assertNotNull(modelReader16);
        org.junit.Assert.assertNotNull(modelWriter22);
        org.junit.Assert.assertNotNull(modelWriter23);
        org.junit.Assert.assertNotNull(modelWriter25);
        org.junit.Assert.assertNotNull(modelWriter27);
        org.junit.Assert.assertNotNull(modelWriter29);
        org.junit.Assert.assertNotNull(modelWriter31);
    }

    @Test
    public void test13229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13229");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode("\"(\\\"\\\" => (\\\"hi!\\\" => 0.0))\"");
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode6 = modelNode3.setExpression("hi!", "hi!");
        java.lang.String str7 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode3);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList8 = modelNode3.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode10 = modelNode3.set((double) 0);
        org.jboss.dmr.ModelNode modelNode11 = modelNode3.clear();
        org.jboss.dmr.IntModelValue intModelValue14 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long16 = intModelValue14.asLong((long) 'b');
        java.lang.String str17 = intModelValue14.asString();
        java.math.BigInteger bigInteger18 = intModelValue14.asBigInteger();
        org.jboss.dmr.ModelNode modelNode19 = modelNode11.add("H4sIAAAAAAAAAAMAAAAAAAAAAAA=", bigInteger18);
        org.jboss.dmr.ModelNode modelNode20 = modelNode1.set("org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]", bigInteger18);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode21 = modelNode20.addEmptyList();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str7, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList8);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "32" + "'", str17, "32");
        org.junit.Assert.assertNotNull(bigInteger18);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(modelNode20);
    }

    @Test
    public void test13230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13230");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        boolean boolean4 = objectModelValue0.has((int) 'a');
        boolean boolean6 = objectModelValue0.has("");
        org.jboss.dmr.ObjectModelValue objectModelValue7 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode8 = objectModelValue7.asObject();
        java.util.Set<java.lang.String> strSet9 = objectModelValue7.getKeys();
        boolean boolean11 = objectModelValue7.has((int) 'a');
        boolean boolean12 = objectModelValue0.equals(objectModelValue7);
        org.jboss.dmr.ModelNode modelNode13 = objectModelValue7.asObject();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList14 = objectModelValue7.asList();
        org.jboss.dmr.ObjectModelValue objectModelValue15 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode16 = objectModelValue15.asObject();
        org.jboss.dmr.ModelValue modelValue17 = objectModelValue15.protect();
        long long18 = objectModelValue15.asLong();
        boolean boolean20 = objectModelValue15.has("(\"(\\\"\\\" => (\\\"hi!\\\" => 0.0))\" => expression \"\")");
        boolean boolean21 = objectModelValue15.asBoolean();
        boolean boolean22 = objectModelValue7.equals(objectModelValue15);
        org.jboss.dmr.ModelNode modelNode24 = objectModelValue7.getChild("H4sIAAAAAAAAANv/gQEMALshig4IAAAA");
        org.jboss.dmr.ModelNode modelNode26 = modelNode24.get(3);
        boolean boolean28 = modelNode24.has("Expression \"10.0\"");
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList29 = modelNode24.asList();
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNodeList14);
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertNotNull(modelValue17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(modelNodeList29);
    }

    @Test
    public void test13231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13231");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        java.lang.String str6 = listModelValue5.asString();
        java.util.List<org.jboss.dmr.Property> propertyList7 = listModelValue5.asPropertyList();
        org.jboss.dmr.StringModelValue stringModelValue9 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.ValueExpression valueExpression10 = stringModelValue9.asExpression();
        org.jboss.dmr.StringModelValue stringModelValue12 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory14 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream15 = null;
        org.jboss.dmr.Base64.InputStream inputStream17 = new org.jboss.dmr.Base64.InputStream(inputStream15, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream18 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream17);
        org.jboss.dmr.stream.ModelReader modelReader19 = modelStreamFactory14.newModelReader((java.io.InputStream) inputStream18);
        java.io.OutputStream outputStream20 = null;
        org.jboss.dmr.Base64.OutputStream outputStream21 = new org.jboss.dmr.Base64.OutputStream(outputStream20);
        org.jboss.dmr.Base64.OutputStream outputStream22 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream21);
        outputStream21.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter25 = modelStreamFactory14.newModelWriter((java.io.OutputStream) outputStream21);
        org.jboss.dmr.stream.ModelWriter modelWriter26 = modelWriter25.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter28 = modelWriter26.writeInt((int) (byte) 10);
        stringModelValue12.write(modelWriter28);
        org.jboss.dmr.stream.ModelWriter modelWriter31 = modelWriter28.writeBoolean(false);
        stringModelValue9.write(modelWriter31);
        org.jboss.dmr.stream.ModelWriter modelWriter34 = modelWriter31.writeInt((int) (byte) 100);
        listModelValue5.write(modelWriter31);
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str6, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertNotNull(propertyList7);
        org.junit.Assert.assertNotNull(valueExpression10);
        org.junit.Assert.assertNotNull(modelStreamFactory14);
        org.junit.Assert.assertNotNull(modelReader19);
        org.junit.Assert.assertNotNull(modelWriter25);
        org.junit.Assert.assertNotNull(modelWriter26);
        org.junit.Assert.assertNotNull(modelWriter28);
        org.junit.Assert.assertNotNull(modelWriter31);
        org.junit.Assert.assertNotNull(modelWriter34);
    }

    @Test
    public void test13232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13232");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        java.lang.String str5 = modelNode1.toString();
        org.jboss.dmr.ModelNode modelNode6 = modelNode1.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(100);
        org.jboss.dmr.ModelNode modelNode9 = modelNode0.add(modelNode1);
        int int11 = modelNode1.asInt(2);
        org.jboss.dmr.ModelNode modelNode13 = new org.jboss.dmr.ModelNode("(\"hi!\" => 0.0)");
        java.io.OutputStream outputStream14 = null;
        org.jboss.dmr.Base64.OutputStream outputStream15 = new org.jboss.dmr.Base64.OutputStream(outputStream14);
        outputStream15.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream17 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream15);
        org.jboss.dmr.Base64.OutputStream outputStream18 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream17);
        org.jboss.dmr.ModelNode modelNode20 = new org.jboss.dmr.ModelNode("EXPRESSION_VALUE");
        org.jboss.dmr.BooleanModelValue booleanModelValue23 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger24 = booleanModelValue23.asBigInteger();
        byte[] byteArray25 = booleanModelValue23.asBytes();
        org.jboss.dmr.ModelNode modelNode26 = modelNode20.set("expression \"hi!\"", byteArray25);
        outputStream17.write(byteArray25);
        org.jboss.dmr.ModelNode modelNode28 = modelNode13.set(byteArray25);
        org.jboss.dmr.ModelNode modelNode31 = modelNode13.setExpression("AAAAAAAAAAE=", "");
        org.jboss.dmr.IntModelValue intModelValue34 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str35 = intModelValue34.asString();
        double double37 = intModelValue34.asDouble((double) 2);
        java.math.BigDecimal bigDecimal38 = intModelValue34.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode39 = new org.jboss.dmr.ModelNode(bigDecimal38);
        org.jboss.dmr.ModelNode modelNode40 = modelNode13.set("{}", bigDecimal38);
        modelNode1.setNoCopy(modelNode13);
        org.jboss.dmr.ModelNode modelNode42 = modelNode1.asObject();
        java.io.OutputStream outputStream43 = null;
        org.jboss.dmr.Base64.OutputStream outputStream44 = new org.jboss.dmr.Base64.OutputStream(outputStream43);
        outputStream44.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream46 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream44);
        org.jboss.dmr.Base64.OutputStream outputStream48 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream46, (int) (byte) -1);
        outputStream46.suspendEncoding();
        outputStream46.write((int) (byte) 0);
        outputStream46.flushBase64();
        // The following exception was thrown during execution in test generation
        try {
            modelNode1.writeExternal((java.io.OutputStream) outputStream46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(\"hi!\" => 0.0)" + "'", str5, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertNotNull(booleanModelValue23);
        org.junit.Assert.assertNotNull(bigInteger24);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1]");
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertNotNull(modelNode28);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "32" + "'", str35, "32");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 32.0d + "'", double37 == 32.0d);
        org.junit.Assert.assertNotNull(bigDecimal38);
        org.junit.Assert.assertNotNull(modelNode40);
        org.junit.Assert.assertNotNull(modelNode42);
    }

    @Test
    public void test13233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13233");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        java.lang.String str5 = modelNode1.toString();
        org.jboss.dmr.ModelNode modelNode6 = modelNode1.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(100);
        org.jboss.dmr.ModelNode modelNode11 = new org.jboss.dmr.ModelNode((double) 100);
        org.jboss.dmr.ModelNode modelNode13 = modelNode11.set((int) '#');
        org.jboss.dmr.ModelNode modelNode14 = modelNode1.setNoCopy("EXPRESSION_VALUE", modelNode13);
        org.jboss.dmr.ModelNode modelNode17 = modelNode1.setExpression("(\"\" => (\"hi!\" => 0.0))", "");
        org.jboss.dmr.PropertyModelValue propertyModelValue18 = new org.jboss.dmr.PropertyModelValue("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3R3AANW9yZy5qYm9z\ncy5kbXIuc3RyZWFtLk1vZGVsRXhjZXB0aW9uOiBbKCJoaSEiID0+IDAuMCldcAADaGkhRAAAAAAA\nAAAAeA==", modelNode17);
        org.jboss.dmr.ModelNode modelNode20 = propertyModelValue18.getChild(0);
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(\"hi!\" => 0.0)" + "'", str5, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertNotNull(modelNode20);
    }

    @Test
    public void test13234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13234");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        org.jboss.dmr.ModelValue modelValue2 = objectModelValue0.protect();
        long long3 = objectModelValue0.asLong();
        boolean boolean5 = objectModelValue0.has("(\"(\\\"\\\" => (\\\"hi!\\\" => 0.0))\" => expression \"\")");
        int int6 = objectModelValue0.asInt();
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test13235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13235");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (byte) -1);
        org.jboss.dmr.DoubleModelValue doubleModelValue3 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        int int5 = doubleModelValue3.asInt((int) 'l');
        java.math.BigDecimal bigDecimal6 = doubleModelValue3.asBigDecimal();
        boolean boolean7 = doubleModelValue1.equals(doubleModelValue3);
        org.jboss.dmr.ModelNode modelNode9 = new org.jboss.dmr.ModelNode(35L);
        org.jboss.dmr.ModelNode modelNode11 = modelNode9.set((int) '4');
        boolean boolean12 = doubleModelValue3.equals((java.lang.Object) modelNode11);
        org.jboss.dmr.ValueExpression valueExpression13 = doubleModelValue3.asExpression();
        org.jboss.dmr.ValueExpression valueExpression14 = doubleModelValue3.asExpression();
        java.math.BigDecimal bigDecimal15 = valueExpression14.resolveBigDecimal();
        org.jboss.dmr.ModelNode modelNode16 = new org.jboss.dmr.ModelNode(valueExpression14);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(valueExpression13);
        org.junit.Assert.assertNotNull(valueExpression14);
        org.junit.Assert.assertNotNull(bigDecimal15);
    }

    @Test
    public void test13236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13236");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream5 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4);
        org.jboss.dmr.stream.ModelReader modelReader6 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream5);
        java.io.OutputStream outputStream7 = null;
        org.jboss.dmr.Base64.OutputStream outputStream8 = new org.jboss.dmr.Base64.OutputStream(outputStream7);
        org.jboss.dmr.Base64.OutputStream outputStream9 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream8);
        outputStream8.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter12 = modelStreamFactory1.newModelWriter((java.io.OutputStream) outputStream8);
        java.io.InputStream inputStream13 = null;
        org.jboss.dmr.Base64.InputStream inputStream15 = new org.jboss.dmr.Base64.InputStream(inputStream13, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue17 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str18 = longModelValue17.asString();
        byte[] byteArray19 = longModelValue17.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue20 = new org.jboss.dmr.BytesModelValue(byteArray19);
        int int23 = inputStream15.read(byteArray19, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream25 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream15, (-1));
        org.jboss.dmr.Base64.InputStream inputStream26 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream25);
        org.jboss.dmr.stream.ModelReader modelReader27 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream25);
        java.io.InputStream inputStream28 = null;
        org.jboss.dmr.Base64.InputStream inputStream30 = new org.jboss.dmr.Base64.InputStream(inputStream28, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream31 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream30);
        org.jboss.dmr.Base64.InputStream inputStream32 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream31);
        org.jboss.dmr.Base64.InputStream inputStream33 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream31);
        org.jboss.dmr.stream.ModelReader modelReader34 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream33);
        java.io.Reader reader35 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.stream.ModelReader modelReader36 = modelStreamFactory1.newModelReader(reader35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Parameter cannot be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertNotNull(modelReader6);
        org.junit.Assert.assertNotNull(modelWriter12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1" + "'", str18, "1");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(modelReader27);
        org.junit.Assert.assertNotNull(modelReader34);
    }

    @Test
    public void test13237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13237");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) 1.0f);
        org.jboss.dmr.ValueExpression valueExpression2 = doubleModelValue1.asExpression();
        org.junit.Assert.assertNotNull(valueExpression2);
    }

    @Test
    public void test13238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13238");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.setExpression("hi!", "hi!");
        org.jboss.dmr.ModelNode modelNode5 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode8 = modelNode5.set("hi!", 0.0d);
        org.jboss.dmr.Property property9 = new org.jboss.dmr.Property("", modelNode8);
        boolean boolean11 = modelNode8.equals((java.lang.Object) 100L);
        boolean boolean12 = modelNode0.equals(modelNode8);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = modelNode0.asBoolean();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test13239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13239");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) 100);
        org.jboss.dmr.ModelNode modelNode3 = modelNode1.set((int) '#');
        boolean boolean4 = modelNode1.isDefined();
        byte[] byteArray5 = modelNode1.asBytesOrNull();
        java.math.BigDecimal bigDecimal6 = modelNode1.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode(bigDecimal6);
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[0, 0, 0, 35]");
        org.junit.Assert.assertNotNull(bigDecimal6);
    }

    @Test
    public void test13240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13240");
        org.jboss.dmr.BooleanModelValue booleanModelValue1 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray2 = booleanModelValue1.asBytes();
        java.lang.String str3 = booleanModelValue1.asString();
        int int4 = booleanModelValue1.asInt();
        long long5 = booleanModelValue1.asLong();
        boolean boolean7 = booleanModelValue1.equals((java.lang.Object) '4');
        long long8 = booleanModelValue1.asLong();
        java.io.DataOutput dataOutput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            booleanModelValue1.writeExternal(dataOutput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanModelValue1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "true" + "'", str3, "true");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1L + "'", long8 == 1L);
    }

    @Test
    public void test13241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13241");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode("EXPRESSION_VALUE");
        org.jboss.dmr.ModelNode modelNode2 = modelNode1.clear();
        boolean boolean4 = modelNode1.has((int) '#');
        org.jboss.dmr.ModelNode modelNode7 = modelNode1.add("BYTES_VALUE", "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4");
        org.jboss.dmr.ModelNode modelNode9 = modelNode1.set("1");
        java.math.BigInteger bigInteger10 = modelNode9.asBigInteger();
        org.junit.Assert.assertNotNull(modelNode2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(bigInteger10);
    }

    @Test
    public void test13242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13242");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        int int6 = bigIntegerModelValue4.asInt((int) (short) 1);
        org.jboss.dmr.BooleanModelValue booleanModelValue7 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double8 = booleanModelValue7.asDouble();
        org.jboss.dmr.ModelValue modelValue9 = booleanModelValue7.copy();
        java.math.BigInteger bigInteger10 = booleanModelValue7.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue11 = new org.jboss.dmr.BigIntegerModelValue(bigInteger10);
        java.lang.String str12 = bigIntegerModelValue11.asString();
        java.math.BigInteger bigInteger13 = bigIntegerModelValue11.asBigInteger();
        boolean boolean14 = bigIntegerModelValue4.equals(bigIntegerModelValue11);
        boolean boolean16 = bigIntegerModelValue11.asBoolean(false);
        java.lang.String str17 = bigIntegerModelValue11.asString();
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanModelValue7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue9);
        org.junit.Assert.assertNotNull(bigInteger10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1" + "'", str12, "1");
        org.junit.Assert.assertNotNull(bigInteger13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1" + "'", str17, "1");
    }

    @Test
    public void test13243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13243");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        long long4 = objectModelValue0.asLong((long) 0);
        org.jboss.dmr.ModelValue modelValue5 = objectModelValue0.copy();
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(modelValue5);
    }

    @Test
    public void test13244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13244");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.setExpression("hi!", "hi!");
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode10 = modelNode7.set("hi!", 0.0d);
        org.jboss.dmr.Property property11 = new org.jboss.dmr.Property("", modelNode10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode13 = modelNode10.get(strArray12);
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode17 = modelNode14.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList18 = modelNode17.asList();
        org.jboss.dmr.ListModelValue listModelValue19 = new org.jboss.dmr.ListModelValue(modelNodeList18);
        org.jboss.dmr.ModelNode modelNode20 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue19);
        org.jboss.dmr.ModelValue modelValue21 = listModelValue19.resolve();
        int int23 = listModelValue19.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList24 = listModelValue19.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList25 = modelNode13.asPropertyList(propertyList24);
        org.jboss.dmr.ModelNode modelNode27 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode30 = modelNode27.set("hi!", 0.0d);
        org.jboss.dmr.Property property31 = new org.jboss.dmr.Property("", modelNode30);
        java.lang.String[] strArray32 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode33 = modelNode30.get(strArray32);
        org.jboss.dmr.ModelNode modelNode34 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode37 = modelNode34.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList38 = modelNode37.asList();
        org.jboss.dmr.ListModelValue listModelValue39 = new org.jboss.dmr.ListModelValue(modelNodeList38);
        org.jboss.dmr.ModelNode modelNode40 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue39);
        org.jboss.dmr.ModelValue modelValue41 = listModelValue39.resolve();
        int int43 = listModelValue39.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList44 = listModelValue39.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList45 = modelNode33.asPropertyList(propertyList44);
        modelNode13.setNoCopy(modelNode33);
        org.jboss.dmr.ModelNode modelNode47 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode50 = modelNode47.set("hi!", 0.0d);
        org.jboss.dmr.ModelNode modelNode51 = new org.jboss.dmr.ModelNode();
        java.lang.Long long52 = modelNode51.asLongOrNull();
        org.jboss.dmr.ModelNode[] modelNodeArray53 = new org.jboss.dmr.ModelNode[] { modelNode47, modelNode51 };
        java.util.ArrayList<org.jboss.dmr.ModelNode> modelNodeList54 = new java.util.ArrayList<org.jboss.dmr.ModelNode>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList54, modelNodeArray53);
        org.jboss.dmr.ModelNode modelNode56 = modelNode13.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList54);
        org.jboss.dmr.ModelNode modelNode59 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long60 = modelNode59.asLong();
        org.jboss.dmr.ValueExpression valueExpression61 = modelNode59.asExpression();
        java.math.BigDecimal bigDecimal62 = valueExpression61.resolveBigDecimal();
        org.jboss.dmr.ModelNode modelNode63 = modelNode13.set("true", bigDecimal62);
        org.jboss.dmr.ModelNode modelNode64 = modelNode1.set("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=", modelNode13);
        org.jboss.dmr.ModelNode modelNode65 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode68 = modelNode65.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList69 = modelNode68.asList();
        org.jboss.dmr.ListModelValue listModelValue70 = new org.jboss.dmr.ListModelValue(modelNodeList69);
        org.jboss.dmr.ModelNode modelNode71 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue70);
        org.jboss.dmr.ModelNode modelNode73 = modelNode71.set("true");
        boolean boolean74 = modelNode13.equals(modelNode71);
        org.jboss.dmr.Property property75 = new org.jboss.dmr.Property("Expressi", modelNode13);
        org.jboss.dmr.Property property76 = property75.clone();
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertNotNull(modelNodeList18);
        org.junit.Assert.assertNotNull(modelValue21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(propertyList24);
        org.junit.Assert.assertNotNull(propertyList25);
        org.junit.Assert.assertNotNull(modelNode30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(modelNode33);
        org.junit.Assert.assertNotNull(modelNode37);
        org.junit.Assert.assertNotNull(modelNodeList38);
        org.junit.Assert.assertNotNull(modelValue41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(propertyList44);
        org.junit.Assert.assertNotNull(propertyList45);
        org.junit.Assert.assertNotNull(modelNode50);
        org.junit.Assert.assertNull(long52);
        org.junit.Assert.assertNotNull(modelNodeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(modelNode56);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 1L + "'", long60 == 1L);
        org.junit.Assert.assertNotNull(valueExpression61);
        org.junit.Assert.assertNotNull(bigDecimal62);
        org.junit.Assert.assertNotNull(modelNode63);
        org.junit.Assert.assertNotNull(modelNode64);
        org.junit.Assert.assertNotNull(modelNode68);
        org.junit.Assert.assertNotNull(modelNodeList69);
        org.junit.Assert.assertNotNull(modelNode73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(property76);
    }

    @Test
    public void test13245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13245");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.DOUBLE;
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(modelType0);
        org.jboss.dmr.LongModelValue longModelValue4 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str5 = longModelValue4.asString();
        byte[] byteArray6 = longModelValue4.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue7 = new org.jboss.dmr.BytesModelValue(byteArray6);
        java.lang.String str8 = bytesModelValue7.asString();
        int int9 = bytesModelValue7.asInt();
        long long11 = bytesModelValue7.asLong((long) (short) 1);
        long long12 = bytesModelValue7.asLong();
        java.math.BigDecimal bigDecimal13 = bytesModelValue7.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode14 = modelNode1.set("32", bigDecimal13);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode16 = modelNode14.remove("\"1L\"");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.DOUBLE + "'", modelType0.equals(org.jboss.dmr.ModelType.DOUBLE));
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1" + "'", str5, "1");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str8, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertNotNull(bigDecimal13);
        org.junit.Assert.assertNotNull(modelNode14);
    }

    @Test
    public void test13246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13246");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) '#');
    }

    @Test
    public void test13247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13247");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isPropertyStart();
        boolean boolean17 = modelReader15.isType();
        boolean boolean18 = modelReader15.isLong();
        boolean boolean19 = modelReader15.isDouble();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test13248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13248");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(modelType0);
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode6 = modelNode3.set("hi!", 0.0d);
        org.jboss.dmr.Property property7 = new org.jboss.dmr.Property("", modelNode6);
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(property7);
        org.jboss.dmr.PropertyModelValue propertyModelValue9 = new org.jboss.dmr.PropertyModelValue(property7);
        org.jboss.dmr.PropertyModelValue propertyModelValue10 = new org.jboss.dmr.PropertyModelValue(property7);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList11 = propertyModelValue10.asList();
        org.jboss.dmr.ListModelValue listModelValue12 = new org.jboss.dmr.ListModelValue(modelNodeList11);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList13 = listModelValue12.asList();
        org.jboss.dmr.ModelValue modelValue14 = listModelValue12.resolve();
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType0.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNodeList11);
        org.junit.Assert.assertNotNull(modelNodeList13);
        org.junit.Assert.assertNotNull(modelValue14);
    }

    @Test
    public void test13249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13249");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue5);
        org.jboss.dmr.ModelValue modelValue7 = listModelValue5.resolve();
        int int9 = listModelValue5.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList10 = listModelValue5.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList11 = listModelValue5.asPropertyList();
        org.jboss.dmr.BooleanModelValue booleanModelValue12 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double13 = booleanModelValue12.asDouble();
        org.jboss.dmr.ModelValue modelValue14 = booleanModelValue12.copy();
        java.math.BigInteger bigInteger15 = booleanModelValue12.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue16 = new org.jboss.dmr.BigIntegerModelValue(bigInteger15);
        java.lang.String str17 = bigIntegerModelValue16.asString();
        org.jboss.dmr.BooleanModelValue booleanModelValue18 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double19 = booleanModelValue18.asDouble();
        org.jboss.dmr.ModelValue modelValue20 = booleanModelValue18.copy();
        java.math.BigInteger bigInteger21 = booleanModelValue18.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue22 = new org.jboss.dmr.BigIntegerModelValue(bigInteger21);
        int int24 = bigIntegerModelValue22.asInt((int) (short) 1);
        org.jboss.dmr.ModelNode modelNode25 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode28 = modelNode25.set("hi!", 0.0d);
        java.lang.String str29 = modelNode25.toString();
        org.jboss.dmr.ModelNode modelNode30 = modelNode25.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode32 = modelNode25.set(100);
        org.jboss.dmr.ModelNode modelNode33 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode36 = modelNode33.set("hi!", 0.0d);
        java.lang.String str37 = modelNode33.toString();
        org.jboss.dmr.ModelNode modelNode38 = modelNode33.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode40 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode43 = modelNode40.set("hi!", 0.0d);
        org.jboss.dmr.Property property44 = new org.jboss.dmr.Property("", modelNode43);
        org.jboss.dmr.ModelNode modelNode45 = modelNode33.set(property44);
        java.lang.String str46 = modelNode45.asString();
        org.jboss.dmr.ModelNode modelNode47 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode50 = modelNode47.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList51 = modelNode50.asList();
        org.jboss.dmr.ListModelValue listModelValue52 = new org.jboss.dmr.ListModelValue(modelNodeList51);
        org.jboss.dmr.ModelNode modelNode53 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue52);
        org.jboss.dmr.ModelValue modelValue54 = listModelValue52.resolve();
        int int56 = listModelValue52.asInt((int) (byte) 100);
        boolean boolean57 = listModelValue52.asBoolean();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList58 = listModelValue52.asList();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList59 = modelNode45.asList(modelNodeList58);
        org.jboss.dmr.ModelNode modelNode60 = modelNode32.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList58);
        boolean boolean61 = bigIntegerModelValue22.equals((java.lang.Object) modelNode32);
        boolean boolean62 = bigIntegerModelValue16.equals(bigIntegerModelValue22);
        boolean boolean64 = bigIntegerModelValue22.equals((java.lang.Object) "{}");
        org.jboss.dmr.ValueExpression valueExpression65 = bigIntegerModelValue22.asExpression();
        boolean boolean66 = listModelValue5.equals((java.lang.Object) bigIntegerModelValue22);
        long long67 = bigIntegerModelValue22.asLong();
        java.math.BigDecimal bigDecimal68 = bigIntegerModelValue22.asBigDecimal();
        long long69 = bigIntegerModelValue22.asLong();
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertNotNull(modelValue7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(propertyList10);
        org.junit.Assert.assertNotNull(propertyList11);
        org.junit.Assert.assertNotNull(booleanModelValue12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue14);
        org.junit.Assert.assertNotNull(bigInteger15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1" + "'", str17, "1");
        org.junit.Assert.assertNotNull(booleanModelValue18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue20);
        org.junit.Assert.assertNotNull(bigInteger21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(modelNode28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(\"hi!\" => 0.0)" + "'", str29, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode30);
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertNotNull(modelNode36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(\"hi!\" => 0.0)" + "'", str37, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode38);
        org.junit.Assert.assertNotNull(modelNode43);
        org.junit.Assert.assertNotNull(modelNode45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(\"\" => (\"hi!\" => 0.0))" + "'", str46, "(\"\" => (\"hi!\" => 0.0))");
        org.junit.Assert.assertNotNull(modelNode50);
        org.junit.Assert.assertNotNull(modelNodeList51);
        org.junit.Assert.assertNotNull(modelValue54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(modelNodeList58);
        org.junit.Assert.assertNotNull(modelNodeList59);
        org.junit.Assert.assertNotNull(modelNode60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(valueExpression65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 1L + "'", long67 == 1L);
        org.junit.Assert.assertNotNull(bigDecimal68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 1L + "'", long69 == 1L);
    }

    @Test
    public void test13250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13250");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        long long3 = longModelValue1.asLong((long) (short) 0);
        java.lang.String str4 = longModelValue1.asString();
        byte[] byteArray5 = longModelValue1.asBytes();
        org.jboss.dmr.ModelType modelType6 = longModelValue1.getType();
        java.lang.String str7 = longModelValue1.asString();
        double double9 = longModelValue1.asDouble((double) 1.0f);
        org.jboss.dmr.LongModelValue longModelValue11 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str12 = longModelValue11.asString();
        byte[] byteArray13 = longModelValue11.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue14 = new org.jboss.dmr.BytesModelValue(byteArray13);
        double double15 = bytesModelValue14.asDouble();
        org.jboss.dmr.ModelNode modelNode17 = new org.jboss.dmr.ModelNode((double) 100);
        org.jboss.dmr.ModelNode modelNode19 = modelNode17.set((int) '#');
        java.lang.Boolean boolean20 = modelNode17.asBooleanOrNull();
        java.lang.String str22 = modelNode17.asString("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        boolean boolean23 = bytesModelValue14.equals((java.lang.Object) modelNode17);
        byte[] byteArray24 = bytesModelValue14.asBytes();
        org.jboss.dmr.BooleanModelValue booleanModelValue26 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray27 = booleanModelValue26.asBytes();
        org.jboss.dmr.ValueExpression valueExpression28 = booleanModelValue26.asExpression();
        double double30 = booleanModelValue26.asDouble((double) 10);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory32 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream33 = null;
        org.jboss.dmr.Base64.InputStream inputStream35 = new org.jboss.dmr.Base64.InputStream(inputStream33, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream36 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream35);
        org.jboss.dmr.stream.ModelReader modelReader37 = modelStreamFactory32.newModelReader((java.io.InputStream) inputStream36);
        java.io.OutputStream outputStream38 = null;
        org.jboss.dmr.Base64.OutputStream outputStream39 = new org.jboss.dmr.Base64.OutputStream(outputStream38);
        org.jboss.dmr.Base64.OutputStream outputStream40 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream39);
        outputStream39.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter43 = modelStreamFactory32.newModelWriter((java.io.OutputStream) outputStream39);
        org.jboss.dmr.stream.ModelWriter modelWriter44 = modelWriter43.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter46 = modelWriter43.writeInt((int) '4');
        org.jboss.dmr.stream.ModelWriter modelWriter48 = modelWriter46.writeBoolean(true);
        org.jboss.dmr.stream.ModelWriter modelWriter50 = modelWriter46.writeBoolean(true);
        org.jboss.dmr.stream.ModelWriter modelWriter52 = modelWriter50.writeLong(100L);
        booleanModelValue26.write(modelWriter50);
        bytesModelValue14.write(modelWriter50);
        org.jboss.dmr.stream.ModelWriter modelWriter55 = modelWriter50.writeObjectStart();
        // The following exception was thrown during execution in test generation
        try {
            longModelValue1.write(modelWriter55);
            org.junit.Assert.fail("Expected exception of type org.jboss.dmr.stream.ModelException; message: Expecting OBJECT_END or STRING");
        } catch (org.jboss.dmr.stream.ModelException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 1L + "'", long3 == 1L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1" + "'", str4, "1");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + modelType6 + "' != '" + org.jboss.dmr.ModelType.LONG + "'", modelType6.equals(org.jboss.dmr.ModelType.LONG));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1" + "'", str12, "1");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.9E-324d + "'", double15 == 4.9E-324d);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + true + "'", boolean20, true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "35" + "'", str22, "35");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(booleanModelValue26);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1]");
        org.junit.Assert.assertNotNull(valueExpression28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(modelStreamFactory32);
        org.junit.Assert.assertNotNull(modelReader37);
        org.junit.Assert.assertNotNull(modelWriter43);
        org.junit.Assert.assertNotNull(modelWriter44);
        org.junit.Assert.assertNotNull(modelWriter46);
        org.junit.Assert.assertNotNull(modelWriter48);
        org.junit.Assert.assertNotNull(modelWriter50);
        org.junit.Assert.assertNotNull(modelWriter52);
        org.junit.Assert.assertNotNull(modelWriter55);
    }

    @Test
    public void test13251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13251");
        java.io.InputStream inputStream0 = null;
        org.jboss.dmr.Base64.InputStream inputStream2 = new org.jboss.dmr.Base64.InputStream(inputStream0, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue4 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str5 = longModelValue4.asString();
        byte[] byteArray6 = longModelValue4.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue7 = new org.jboss.dmr.BytesModelValue(byteArray6);
        int int10 = inputStream2.read(byteArray6, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream12 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream2, (-1));
        org.jboss.dmr.Base64.InputStream inputStream13 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream12);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream12);
        // The following exception was thrown during execution in test generation
        try {
            inputStream12.mark((int) 'J');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1" + "'", str5, "1");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test13252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13252");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((long) 10);
        java.lang.String str3 = modelNode1.asString("true");
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long7 = modelNode6.asLong();
        org.jboss.dmr.ValueExpression valueExpression8 = modelNode6.asExpression();
        java.math.BigDecimal bigDecimal9 = valueExpression8.resolveBigDecimal();
        org.jboss.dmr.ModelNode modelNode10 = new org.jboss.dmr.ModelNode(bigDecimal9);
        org.jboss.dmr.ModelNode modelNode12 = modelNode10.set((double) (byte) 0);
        org.jboss.dmr.ModelNode modelNode13 = modelNode1.setNoCopy("35", modelNode12);
        boolean boolean15 = modelNode12.hasDefined("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3R3AANW9yZy5qYm9z\ncy5kbXIuc3RyZWFtLk1vZGVsRXhjZXB0aW9uOiBbKCJoaSEiID0+IDAuMCldcAADaGkhRAAAAAAA\nAAAAeA==");
        org.jboss.dmr.ValueExpression valueExpression16 = modelNode12.asExpression();
        org.jboss.dmr.ModelNode modelNode18 = org.jboss.dmr.ModelNode.fromJSONString("[1]");
        org.jboss.dmr.ModelNode modelNode20 = modelNode18.add(true);
        org.jboss.dmr.ModelNode modelNode23 = modelNode20.set("true", (double) 8);
        org.jboss.dmr.ModelNode modelNode24 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode27 = modelNode24.set("hi!", 0.0d);
        java.lang.String str28 = modelNode24.toString();
        org.jboss.dmr.ModelNode modelNode29 = modelNode24.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode31 = modelNode24.set(100);
        org.jboss.dmr.ModelNode modelNode34 = new org.jboss.dmr.ModelNode((double) 100);
        org.jboss.dmr.ModelNode modelNode36 = modelNode34.set((int) '#');
        org.jboss.dmr.ModelNode modelNode37 = modelNode24.setNoCopy("EXPRESSION_VALUE", modelNode36);
        org.jboss.dmr.ModelNode modelNode38 = modelNode37.resolve();
        org.jboss.dmr.ModelType modelType39 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode40 = new org.jboss.dmr.ModelNode(modelType39);
        org.jboss.dmr.ModelNode modelNode42 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode45 = modelNode42.set("hi!", 0.0d);
        org.jboss.dmr.Property property46 = new org.jboss.dmr.Property("", modelNode45);
        org.jboss.dmr.ModelNode modelNode47 = modelNode40.set(property46);
        org.jboss.dmr.PropertyModelValue propertyModelValue48 = new org.jboss.dmr.PropertyModelValue(property46);
        org.jboss.dmr.PropertyModelValue propertyModelValue49 = new org.jboss.dmr.PropertyModelValue(property46);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList50 = propertyModelValue49.asList();
        org.jboss.dmr.ModelNode modelNode51 = modelNode38.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList50);
        org.jboss.dmr.IntModelValue intModelValue54 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str55 = intModelValue54.asString();
        double double57 = intModelValue54.asDouble((double) 2);
        java.math.BigDecimal bigDecimal58 = intModelValue54.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode59 = modelNode51.add("(\"hi!\" => 0.0)", bigDecimal58);
        org.jboss.dmr.ModelNode modelNode60 = modelNode20.set(bigDecimal58);
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue61 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal58);
        org.jboss.dmr.ExpressionValue expressionValue63 = new org.jboss.dmr.ExpressionValue("TYPE_MODEL_VALUE");
        java.lang.Object obj64 = new java.lang.Object();
        boolean boolean65 = expressionValue63.equals(obj64);
        org.jboss.dmr.StringModelValue stringModelValue67 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.ValueExpression valueExpression68 = stringModelValue67.asExpression();
        org.jboss.dmr.StringModelValue stringModelValue70 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory72 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream73 = null;
        org.jboss.dmr.Base64.InputStream inputStream75 = new org.jboss.dmr.Base64.InputStream(inputStream73, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream76 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream75);
        org.jboss.dmr.stream.ModelReader modelReader77 = modelStreamFactory72.newModelReader((java.io.InputStream) inputStream76);
        java.io.OutputStream outputStream78 = null;
        org.jboss.dmr.Base64.OutputStream outputStream79 = new org.jboss.dmr.Base64.OutputStream(outputStream78);
        org.jboss.dmr.Base64.OutputStream outputStream80 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream79);
        outputStream79.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter83 = modelStreamFactory72.newModelWriter((java.io.OutputStream) outputStream79);
        org.jboss.dmr.stream.ModelWriter modelWriter84 = modelWriter83.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter86 = modelWriter84.writeInt((int) (byte) 10);
        stringModelValue70.write(modelWriter86);
        org.jboss.dmr.stream.ModelWriter modelWriter89 = modelWriter86.writeBoolean(false);
        stringModelValue67.write(modelWriter89);
        expressionValue63.write(modelWriter89);
        bigDecimalModelValue61.write(modelWriter89);
        org.jboss.dmr.stream.ModelWriter modelWriter94 = modelWriter89.writeDouble((double) 35);
        modelNode12.write(modelWriter89);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "10" + "'", str3, "10");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertNotNull(valueExpression8);
        org.junit.Assert.assertNotNull(bigDecimal9);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(valueExpression16);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(modelNode23);
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(\"hi!\" => 0.0)" + "'", str28, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode29);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(modelNode36);
        org.junit.Assert.assertNotNull(modelNode37);
        org.junit.Assert.assertNotNull(modelNode38);
        org.junit.Assert.assertTrue("'" + modelType39 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType39.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode45);
        org.junit.Assert.assertNotNull(modelNode47);
        org.junit.Assert.assertNotNull(modelNodeList50);
        org.junit.Assert.assertNotNull(modelNode51);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "32" + "'", str55, "32");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 32.0d + "'", double57 == 32.0d);
        org.junit.Assert.assertNotNull(bigDecimal58);
        org.junit.Assert.assertNotNull(modelNode59);
        org.junit.Assert.assertNotNull(modelNode60);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(valueExpression68);
        org.junit.Assert.assertNotNull(modelStreamFactory72);
        org.junit.Assert.assertNotNull(modelReader77);
        org.junit.Assert.assertNotNull(modelWriter83);
        org.junit.Assert.assertNotNull(modelWriter84);
        org.junit.Assert.assertNotNull(modelWriter86);
        org.junit.Assert.assertNotNull(modelWriter89);
        org.junit.Assert.assertNotNull(modelWriter94);
    }

    @Test
    public void test13253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13253");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isLong();
        boolean boolean17 = modelReader15.isBigDecimal();
        boolean boolean18 = modelReader15.isUndefined();
        boolean boolean19 = modelReader15.isBytes();
        boolean boolean20 = modelReader15.isInt();
        boolean boolean21 = modelReader15.isListEnd();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray22 = modelReader15.getBytes();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Current event isn't bytes");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test13254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13254");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        int int1 = booleanModelValue0.asInt();
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    }

    @Test
    public void test13255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13255");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ModelNode modelNode5 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode8 = modelNode5.set("hi!", 0.0d);
        org.jboss.dmr.Property property9 = new org.jboss.dmr.Property("", modelNode8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.get(strArray10);
        org.jboss.dmr.ModelNode modelNode12 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode15 = modelNode12.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList16 = modelNode15.asList();
        org.jboss.dmr.ListModelValue listModelValue17 = new org.jboss.dmr.ListModelValue(modelNodeList16);
        org.jboss.dmr.ModelNode modelNode18 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue17);
        org.jboss.dmr.ModelValue modelValue19 = listModelValue17.resolve();
        int int21 = listModelValue17.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList22 = listModelValue17.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList23 = modelNode11.asPropertyList(propertyList22);
        org.jboss.dmr.ModelNode modelNode25 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode28 = modelNode25.set("hi!", 0.0d);
        org.jboss.dmr.Property property29 = new org.jboss.dmr.Property("", modelNode28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode31 = modelNode28.get(strArray30);
        org.jboss.dmr.ModelNode modelNode32 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode35 = modelNode32.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList36 = modelNode35.asList();
        org.jboss.dmr.ListModelValue listModelValue37 = new org.jboss.dmr.ListModelValue(modelNodeList36);
        org.jboss.dmr.ModelNode modelNode38 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue37);
        org.jboss.dmr.ModelValue modelValue39 = listModelValue37.resolve();
        int int41 = listModelValue37.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList42 = listModelValue37.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList43 = modelNode31.asPropertyList(propertyList42);
        modelNode11.setNoCopy(modelNode31);
        org.jboss.dmr.ModelNode modelNode45 = modelNode1.set("org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]", modelNode11);
        org.jboss.dmr.ModelNode modelNode47 = modelNode11.set(false);
        org.jboss.dmr.ModelNode modelNode50 = modelNode47.set("Expression \"true\"", "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3R3AANW9yZy5qYm9z\ncy5kbXIuc3RyZWFtLk1vZGVsRXhjZXB0aW9uOiBbKCJoaSEiID0+IDAuMCldcAADaGkhRAAAAAAA\nAAAAeA==");
        java.util.Set<java.lang.String> strSet51 = modelNode47.keys();
        org.jboss.dmr.BooleanModelValue booleanModelValue52 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double53 = booleanModelValue52.asDouble();
        org.jboss.dmr.ModelValue modelValue54 = booleanModelValue52.copy();
        java.math.BigInteger bigInteger55 = booleanModelValue52.asBigInteger();
        org.jboss.dmr.ModelNode modelNode56 = new org.jboss.dmr.ModelNode(bigInteger55);
        org.jboss.dmr.ModelNode modelNode57 = new org.jboss.dmr.ModelNode(bigInteger55);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode58 = modelNode47.add(bigInteger55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNode15);
        org.junit.Assert.assertNotNull(modelNodeList16);
        org.junit.Assert.assertNotNull(modelValue19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(propertyList22);
        org.junit.Assert.assertNotNull(propertyList23);
        org.junit.Assert.assertNotNull(modelNode28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(modelNode35);
        org.junit.Assert.assertNotNull(modelNodeList36);
        org.junit.Assert.assertNotNull(modelValue39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(propertyList42);
        org.junit.Assert.assertNotNull(propertyList43);
        org.junit.Assert.assertNotNull(modelNode45);
        org.junit.Assert.assertNotNull(modelNode47);
        org.junit.Assert.assertNotNull(modelNode50);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertNotNull(booleanModelValue52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue54);
        org.junit.Assert.assertNotNull(bigInteger55);
    }

    @Test
    public void test13256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13256");
        org.jboss.dmr.ValueExpression valueExpression1 = new org.jboss.dmr.ValueExpression("(\"org.jboss.dmr.stream.ModelException: [(\\\"hi!\\\" => 0.0)]\" => (\"hi!\" => 0.0))");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = valueExpression1.resolveBoolean();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13257");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        boolean boolean8 = bigDecimalModelValue7.asBoolean();
        long long9 = bigDecimalModelValue7.asLong();
        java.lang.String str10 = bigDecimalModelValue7.asString();
        org.jboss.dmr.ModelNode modelNode12 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long13 = modelNode12.asLong();
        org.jboss.dmr.ValueExpression valueExpression14 = modelNode12.asExpression();
        java.math.BigDecimal bigDecimal15 = valueExpression14.resolveBigDecimal();
        java.lang.String str16 = valueExpression14.getExpressionString();
        java.math.BigDecimal bigDecimal17 = valueExpression14.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue18 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal17);
        boolean boolean19 = bigDecimalModelValue18.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression20 = bigDecimalModelValue18.asExpression();
        int int21 = bigDecimalModelValue18.asInt();
        long long22 = bigDecimalModelValue18.asLong();
        boolean boolean23 = bigDecimalModelValue7.equals(bigDecimalModelValue18);
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue24 = null;
        boolean boolean25 = bigDecimalModelValue18.equals(bigDecimalModelValue24);
        int int26 = bigDecimalModelValue18.asInt();
        java.math.BigInteger bigInteger27 = bigDecimalModelValue18.asBigInteger();
        java.math.BigDecimal bigDecimal28 = bigDecimalModelValue18.asBigDecimal();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1.0" + "'", str10, "1.0");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(valueExpression14);
        org.junit.Assert.assertNotNull(bigDecimal15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1.0" + "'", str16, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(valueExpression20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(bigInteger27);
        org.junit.Assert.assertNotNull(bigDecimal28);
    }

    @Test
    public void test13258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13258");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        boolean boolean5 = objectModelValue0.asBoolean();
        org.jboss.dmr.ModelNode modelNode7 = objectModelValue0.getChild("1L");
        org.jboss.dmr.ObjectModelValue objectModelValue8 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode9 = objectModelValue8.asObject();
        java.util.Set<java.lang.String> strSet10 = objectModelValue8.getKeys();
        org.jboss.dmr.ModelNode modelNode12 = objectModelValue8.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        boolean boolean13 = objectModelValue8.asBoolean();
        int int15 = objectModelValue8.asInt((int) 'b');
        int int17 = objectModelValue8.asInt((int) '#');
        boolean boolean18 = objectModelValue0.equals(objectModelValue8);
        int int19 = objectModelValue8.asInt();
        java.util.Set<java.lang.String> strSet20 = objectModelValue8.getKeys();
        long long22 = objectModelValue8.asLong((long) 0);
        org.jboss.dmr.ModelType modelType23 = org.jboss.dmr.ModelType.DOUBLE;
        org.jboss.dmr.ModelNode modelNode24 = new org.jboss.dmr.ModelNode(modelType23);
        org.jboss.dmr.LongModelValue longModelValue27 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str28 = longModelValue27.asString();
        byte[] byteArray29 = longModelValue27.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue30 = new org.jboss.dmr.BytesModelValue(byteArray29);
        java.lang.String str31 = bytesModelValue30.asString();
        int int32 = bytesModelValue30.asInt();
        long long34 = bytesModelValue30.asLong((long) (short) 1);
        long long35 = bytesModelValue30.asLong();
        java.math.BigDecimal bigDecimal36 = bytesModelValue30.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode37 = modelNode24.set("32", bigDecimal36);
        boolean boolean38 = objectModelValue8.equals((java.lang.Object) bigDecimal36);
        org.jboss.dmr.ModelNode modelNode39 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) objectModelValue8);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory41 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream42 = null;
        org.jboss.dmr.Base64.InputStream inputStream44 = new org.jboss.dmr.Base64.InputStream(inputStream42, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream45 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream44);
        org.jboss.dmr.stream.ModelReader modelReader46 = modelStreamFactory41.newModelReader((java.io.InputStream) inputStream45);
        java.io.OutputStream outputStream47 = null;
        org.jboss.dmr.Base64.OutputStream outputStream48 = new org.jboss.dmr.Base64.OutputStream(outputStream47);
        org.jboss.dmr.Base64.OutputStream outputStream49 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream48);
        outputStream48.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter52 = modelStreamFactory41.newModelWriter((java.io.OutputStream) outputStream48);
        org.jboss.dmr.stream.ModelWriter modelWriter53 = modelWriter52.writeListStart();
        org.jboss.dmr.ModelNode modelNode55 = new org.jboss.dmr.ModelNode(true);
        org.jboss.dmr.ModelNode modelNode56 = modelNode55.resolve();
        java.lang.String str57 = modelNode55.asString();
        org.jboss.dmr.ModelNode modelNode59 = modelNode55.set((long) 52);
        org.jboss.dmr.ModelNode modelNode61 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode64 = modelNode61.setExpression("hi!", "hi!");
        java.lang.String str65 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode61);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList66 = modelNode61.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode68 = modelNode61.set((double) 0);
        org.jboss.dmr.ModelType modelType70 = org.jboss.dmr.ModelType.PROPERTY;
        char char71 = modelType70.getTypeChar();
        org.jboss.dmr.ModelNode modelNode72 = modelNode61.set("[(\"hi!\" => 0.0)]", modelType70);
        org.jboss.dmr.Property property73 = new org.jboss.dmr.Property("\"(\\\"hi!\\\" => 0.0)\"", modelNode72);
        org.jboss.dmr.ModelNode modelNode74 = modelNode59.set(property73);
        org.jboss.dmr.ModelNode modelNode76 = modelNode59.set(false);
        boolean boolean77 = modelNode76.isProtected();
        org.jboss.dmr.ModelType modelType79 = org.jboss.dmr.ModelType.PROPERTY;
        char char80 = modelType79.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue81 = org.jboss.dmr.TypeModelValue.of(modelType79);
        char char82 = modelType79.getTypeChar();
        org.jboss.dmr.ModelNode modelNode83 = modelNode76.set("rO0ABXQAByJbOTdMXSI=", modelType79);
        org.jboss.dmr.stream.ModelWriter modelWriter84 = modelWriter53.writeType(modelType79);
        org.jboss.dmr.stream.ModelWriter modelWriter86 = modelWriter84.writeBoolean(true);
        objectModelValue8.write(modelWriter86);
        org.jboss.dmr.ModelValue modelValue88 = objectModelValue8.resolve();
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(modelNode4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNull(modelNode12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + modelType23 + "' != '" + org.jboss.dmr.ModelType.DOUBLE + "'", modelType23.equals(org.jboss.dmr.ModelType.DOUBLE));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1" + "'", str28, "1");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str31, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1L + "'", long34 == 1L);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertNotNull(bigDecimal36);
        org.junit.Assert.assertNotNull(modelNode37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(modelStreamFactory41);
        org.junit.Assert.assertNotNull(modelReader46);
        org.junit.Assert.assertNotNull(modelWriter52);
        org.junit.Assert.assertNotNull(modelWriter53);
        org.junit.Assert.assertNotNull(modelNode56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "true" + "'", str57, "true");
        org.junit.Assert.assertNotNull(modelNode59);
        org.junit.Assert.assertNotNull(modelNode64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str65, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList66);
        org.junit.Assert.assertNotNull(modelNode68);
        org.junit.Assert.assertTrue("'" + modelType70 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType70.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char71 + "' != '" + 'p' + "'", char71 == 'p');
        org.junit.Assert.assertNotNull(modelNode72);
        org.junit.Assert.assertNotNull(modelNode74);
        org.junit.Assert.assertNotNull(modelNode76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + modelType79 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType79.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char80 + "' != '" + 'p' + "'", char80 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue81);
        org.junit.Assert.assertTrue("'" + char82 + "' != '" + 'p' + "'", char82 == 'p');
        org.junit.Assert.assertNotNull(modelNode83);
        org.junit.Assert.assertNotNull(modelWriter84);
        org.junit.Assert.assertNotNull(modelWriter86);
        org.junit.Assert.assertNotNull(modelValue88);
    }

    @Test
    public void test13259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13259");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.lang.String str4 = modelNode0.toString();
        org.jboss.dmr.ModelNode modelNode5 = modelNode0.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode7 = modelNode0.set(100);
        org.jboss.dmr.ModelNode modelNode10 = new org.jboss.dmr.ModelNode((double) 100);
        org.jboss.dmr.ModelNode modelNode12 = modelNode10.set((int) '#');
        org.jboss.dmr.ModelNode modelNode13 = modelNode0.setNoCopy("EXPRESSION_VALUE", modelNode12);
        org.jboss.dmr.ModelNode modelNode14 = modelNode13.resolve();
        org.jboss.dmr.ModelType modelType15 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode16 = new org.jboss.dmr.ModelNode(modelType15);
        org.jboss.dmr.ModelNode modelNode18 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode21 = modelNode18.set("hi!", 0.0d);
        org.jboss.dmr.Property property22 = new org.jboss.dmr.Property("", modelNode21);
        org.jboss.dmr.ModelNode modelNode23 = modelNode16.set(property22);
        org.jboss.dmr.PropertyModelValue propertyModelValue24 = new org.jboss.dmr.PropertyModelValue(property22);
        org.jboss.dmr.PropertyModelValue propertyModelValue25 = new org.jboss.dmr.PropertyModelValue(property22);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList26 = propertyModelValue25.asList();
        org.jboss.dmr.ModelNode modelNode27 = modelNode14.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList26);
        org.jboss.dmr.IntModelValue intModelValue30 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str31 = intModelValue30.asString();
        double double33 = intModelValue30.asDouble((double) 2);
        java.math.BigDecimal bigDecimal34 = intModelValue30.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode35 = modelNode27.add("(\"hi!\" => 0.0)", bigDecimal34);
        org.jboss.dmr.ModelNode modelNode37 = modelNode27.get((int) (byte) 10);
        org.jboss.dmr.ModelNode modelNode39 = modelNode27.addExpression("QA==");
        org.jboss.dmr.ModelNode modelNode42 = modelNode39.set("H4sIAAAAAAAAAFvzloG1uIhBMCuxLFEvJzEvXc8zryQ1PbVI6NGCJd8b2y2YGBg9GVjLEnNKUyuK\nGAQQ6vxKc5NSi9rWTJXlnvKgm4mBoaKAgYEhBQCU5fZ1UQAAAA==", 0.0d);
        java.io.DataOutputStream dataOutputStream43 = null;
        // The following exception was thrown during execution in test generation
        try {
            modelNode42.writeExternal(dataOutputStream43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "(\"hi!\" => 0.0)" + "'", str4, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertTrue("'" + modelType15 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType15.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode21);
        org.junit.Assert.assertNotNull(modelNode23);
        org.junit.Assert.assertNotNull(modelNodeList26);
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "32" + "'", str31, "32");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 32.0d + "'", double33 == 32.0d);
        org.junit.Assert.assertNotNull(bigDecimal34);
        org.junit.Assert.assertNotNull(modelNode35);
        org.junit.Assert.assertNotNull(modelNode37);
        org.junit.Assert.assertNotNull(modelNode39);
        org.junit.Assert.assertNotNull(modelNode42);
    }

    @Test
    public void test13260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13260");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long2 = doubleModelValue1.asLong();
        boolean boolean4 = doubleModelValue1.asBoolean(true);
        int int5 = doubleModelValue1.asInt();
        org.jboss.dmr.DoubleModelValue doubleModelValue7 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long8 = doubleModelValue7.asLong();
        long long10 = doubleModelValue7.asLong((long) 32);
        byte[] byteArray11 = doubleModelValue7.asBytes();
        boolean boolean12 = doubleModelValue1.equals(doubleModelValue7);
        boolean boolean13 = doubleModelValue7.asBoolean();
        org.jboss.dmr.ModelValue modelValue14 = doubleModelValue7.resolve();
        double double16 = doubleModelValue7.asDouble((double) (short) 10);
        double double17 = doubleModelValue7.asDouble();
        byte[] byteArray18 = doubleModelValue7.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue19 = new org.jboss.dmr.BytesModelValue(byteArray18);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10L + "'", long2 == 10L);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10L + "'", long8 == 10L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10L + "'", long10 == 10L);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(modelValue14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[64, 36, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test13261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13261");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        int int3 = longModelValue1.asInt((int) (byte) 0);
        org.jboss.dmr.LongModelValue longModelValue5 = new org.jboss.dmr.LongModelValue((-1L));
        long long7 = longModelValue5.asLong((long) (byte) -1);
        double double9 = longModelValue5.asDouble((double) 10.0f);
        boolean boolean10 = longModelValue1.equals(longModelValue5);
        org.jboss.dmr.ModelType modelType11 = longModelValue1.getType();
        int int12 = longModelValue1.asInt();
        java.math.BigDecimal bigDecimal13 = longModelValue1.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode(bigDecimal13);
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode(bigDecimal13);
        org.jboss.dmr.ModelNode modelNode16 = new org.jboss.dmr.ModelNode(bigDecimal13);
        org.jboss.dmr.ValueExpression valueExpression17 = modelNode16.asExpression();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1.0d) + "'", double9 == (-1.0d));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + modelType11 + "' != '" + org.jboss.dmr.ModelType.LONG + "'", modelType11.equals(org.jboss.dmr.ModelType.LONG));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(bigDecimal13);
        org.junit.Assert.assertNotNull(valueExpression17);
    }

    @Test
    public void test13262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13262");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long3 = intModelValue1.asLong((long) '#');
        org.jboss.dmr.IntModelValue intModelValue5 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long7 = intModelValue5.asLong((long) 'b');
        java.lang.String str8 = intModelValue5.asString();
        boolean boolean9 = intModelValue1.equals(intModelValue5);
        int int10 = intModelValue5.asInt();
        int int12 = intModelValue5.asInt(32);
        org.jboss.dmr.DoubleModelValue doubleModelValue14 = new org.jboss.dmr.DoubleModelValue((double) (byte) -1);
        org.jboss.dmr.DoubleModelValue doubleModelValue16 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        int int18 = doubleModelValue16.asInt((int) 'l');
        java.math.BigDecimal bigDecimal19 = doubleModelValue16.asBigDecimal();
        boolean boolean20 = doubleModelValue14.equals(doubleModelValue16);
        boolean boolean21 = intModelValue5.equals((java.lang.Object) doubleModelValue14);
        org.jboss.dmr.IntModelValue intModelValue23 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str24 = intModelValue23.asString();
        double double26 = intModelValue23.asDouble((double) 2);
        java.math.BigDecimal bigDecimal27 = intModelValue23.asBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue28 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal27);
        long long29 = bigDecimalModelValue28.asLong();
        long long30 = bigDecimalModelValue28.asLong();
        int int32 = bigDecimalModelValue28.asInt((-1));
        boolean boolean33 = intModelValue5.equals((java.lang.Object) bigDecimalModelValue28);
        org.jboss.dmr.DoubleModelValue doubleModelValue35 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long36 = doubleModelValue35.asLong();
        boolean boolean37 = doubleModelValue35.asBoolean();
        byte[] byteArray38 = doubleModelValue35.asBytes();
        int int40 = doubleModelValue35.asInt((int) ' ');
        boolean boolean41 = doubleModelValue35.asBoolean();
        java.math.BigInteger bigInteger42 = doubleModelValue35.asBigInteger();
        boolean boolean43 = intModelValue5.equals((java.lang.Object) doubleModelValue35);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 32L + "'", long3 == 32L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 32L + "'", long7 == 32L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "32" + "'", str8, "32");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertNotNull(bigDecimal19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "32" + "'", str24, "32");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 32.0d + "'", double26 == 32.0d);
        org.junit.Assert.assertNotNull(bigDecimal27);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 32L + "'", long29 == 32L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 32L + "'", long30 == 32L);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 32 + "'", int32 == 32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 10L + "'", long36 == 10L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(bigInteger42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test13263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13263");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.setExpression("hi!", "hi!");
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode9 = modelNode6.set("hi!", 0.0d);
        org.jboss.dmr.Property property10 = new org.jboss.dmr.Property("", modelNode9);
        boolean boolean12 = modelNode9.equals((java.lang.Object) 100L);
        boolean boolean13 = modelNode1.equals(modelNode9);
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode18 = modelNode15.set("hi!", 0.0d);
        org.jboss.dmr.Property property19 = new org.jboss.dmr.Property("", modelNode18);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode21 = modelNode18.get(strArray20);
        org.jboss.dmr.ModelNode modelNode22 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int23 = modelNode22.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode24 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode27 = modelNode24.setExpression("hi!", "hi!");
        java.lang.String str28 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode24);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList29 = modelNode24.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode30 = modelNode22.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList29);
        org.jboss.dmr.ModelNode modelNode31 = modelNode21.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList29);
        org.jboss.dmr.ModelNode modelNode32 = modelNode9.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList29);
        org.jboss.dmr.ModelNode modelNode34 = modelNode9.add("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4");
        org.jboss.dmr.PropertyModelValue propertyModelValue36 = new org.jboss.dmr.PropertyModelValue("1.0", modelNode9, false);
        java.io.InputStream inputStream37 = null;
        org.jboss.dmr.Base64.InputStream inputStream39 = new org.jboss.dmr.Base64.InputStream(inputStream37, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue41 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str42 = longModelValue41.asString();
        byte[] byteArray43 = longModelValue41.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue44 = new org.jboss.dmr.BytesModelValue(byteArray43);
        int int47 = inputStream39.read(byteArray43, (int) (short) 1, (int) (byte) -1);
        java.lang.String str48 = org.jboss.dmr.Base64.encodeBytes(byteArray43);
        org.jboss.dmr.ModelNode modelNode49 = modelNode9.set(byteArray43);
        org.jboss.dmr.ModelNode modelNode51 = modelNode9.set(true);
        boolean boolean53 = modelNode51.has((int) 'l');
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(modelNode21);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str28, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList29);
        org.junit.Assert.assertNotNull(modelNode30);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertNotNull(modelNode34);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1" + "'", str42, "1");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AAAAAAAAAAE=" + "'", str48, "AAAAAAAAAAE=");
        org.junit.Assert.assertNotNull(modelNode49);
        org.junit.Assert.assertNotNull(modelNode51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test13264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13264");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        boolean boolean3 = intModelValue1.has(32);
        long long5 = intModelValue1.asLong((long) 3);
        boolean boolean6 = intModelValue1.asBoolean();
        int int7 = intModelValue1.asInt();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 32L + "'", long5 == 32L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 32 + "'", int7 == 32);
    }

    @Test
    public void test13265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13265");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.removeChild("hi!");
        java.lang.String str5 = objectModelValue0.asString();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList6 = objectModelValue0.asList();
        int int8 = objectModelValue0.asInt((int) 'Z');
        org.jboss.dmr.ObjectModelValue objectModelValue9 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode10 = objectModelValue9.asObject();
        java.util.Set<java.lang.String> strSet11 = objectModelValue9.getKeys();
        org.jboss.dmr.ModelNode modelNode13 = objectModelValue9.removeChild("1");
        boolean boolean14 = objectModelValue9.asBoolean();
        org.jboss.dmr.ObjectModelValue objectModelValue15 = new org.jboss.dmr.ObjectModelValue();
        long long17 = objectModelValue15.asLong((long) (-1));
        boolean boolean18 = objectModelValue9.equals(objectModelValue15);
        boolean boolean19 = objectModelValue0.equals(objectModelValue15);
        boolean boolean21 = objectModelValue0.has("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3BWQAAjMyeA==");
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(modelNode4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{}" + "'", str5, "{}");
        org.junit.Assert.assertNotNull(modelNodeList6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(modelNode13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test13266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13266");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.removeChild("hi!");
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList5 = objectModelValue0.asList();
        org.jboss.dmr.ModelValue modelValue6 = objectModelValue0.resolve();
        long long7 = objectModelValue0.asLong();
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNodeList5);
        org.junit.Assert.assertNotNull(modelValue6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    }

    @Test
    public void test13267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13267");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        java.lang.String str2 = doubleModelValue1.asString();
        byte[] byteArray3 = doubleModelValue1.asBytes();
        boolean boolean4 = doubleModelValue1.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression5 = doubleModelValue1.asExpression();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "10.0" + "'", str2, "10.0");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(valueExpression5);
    }

    @Test
    public void test13268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13268");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long3 = intModelValue1.asLong((long) 'b');
        java.lang.String str4 = intModelValue1.asString();
        long long5 = intModelValue1.asLong();
        long long6 = intModelValue1.asLong();
        org.jboss.dmr.ValueExpression valueExpression7 = intModelValue1.asExpression();
        org.jboss.dmr.IntModelValue intModelValue9 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long11 = intModelValue9.asLong((long) 'b');
        java.lang.String str12 = intModelValue9.asString();
        java.math.BigInteger bigInteger13 = intModelValue9.asBigInteger();
        boolean boolean15 = intModelValue9.asBoolean(false);
        org.jboss.dmr.IntModelValue intModelValue17 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long19 = intModelValue17.asLong((long) 'b');
        java.lang.String str20 = intModelValue17.asString();
        boolean boolean21 = intModelValue9.equals(intModelValue17);
        int int23 = intModelValue17.asInt(112);
        double double24 = intModelValue17.asDouble();
        boolean boolean25 = intModelValue1.equals(intModelValue17);
        java.math.BigDecimal bigDecimal26 = intModelValue1.asBigDecimal();
        double double27 = intModelValue1.asDouble();
        org.jboss.dmr.ExpressionValue expressionValue29 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue31 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean32 = expressionValue29.equals(expressionValue31);
        org.jboss.dmr.ExpressionValue expressionValue34 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue36 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean37 = expressionValue34.equals(expressionValue36);
        boolean boolean38 = expressionValue29.equals(expressionValue36);
        org.jboss.dmr.ModelValue modelValue39 = expressionValue29.resolve();
        java.lang.String str40 = expressionValue29.asString();
        org.jboss.dmr.ModelValue modelValue41 = expressionValue29.resolve();
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory43 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream44 = null;
        org.jboss.dmr.Base64.InputStream inputStream46 = new org.jboss.dmr.Base64.InputStream(inputStream44, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream47 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream46);
        org.jboss.dmr.stream.ModelReader modelReader48 = modelStreamFactory43.newModelReader((java.io.InputStream) inputStream47);
        java.io.OutputStream outputStream49 = null;
        org.jboss.dmr.Base64.OutputStream outputStream50 = new org.jboss.dmr.Base64.OutputStream(outputStream49);
        org.jboss.dmr.Base64.OutputStream outputStream51 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream50);
        outputStream50.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter54 = modelStreamFactory43.newModelWriter((java.io.OutputStream) outputStream50);
        org.jboss.dmr.stream.ModelWriter modelWriter55 = modelWriter54.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter57 = modelWriter55.writeInt((int) (byte) 10);
        expressionValue29.write(modelWriter55);
        org.jboss.dmr.ModelNode modelNode60 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode63 = modelNode60.set("hi!", 0.0d);
        org.jboss.dmr.Property property64 = new org.jboss.dmr.Property("", modelNode63);
        java.lang.String[] strArray65 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode66 = modelNode63.get(strArray65);
        org.jboss.dmr.ModelNode modelNode67 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int68 = modelNode67.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode69 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode72 = modelNode69.setExpression("hi!", "hi!");
        java.lang.String str73 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode69);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList74 = modelNode69.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode75 = modelNode67.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList74);
        org.jboss.dmr.ModelNode modelNode76 = modelNode66.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList74);
        org.jboss.dmr.LongModelValue longModelValue78 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str79 = longModelValue78.asString();
        double double81 = longModelValue78.asDouble((double) 32L);
        org.jboss.dmr.ValueExpression valueExpression82 = longModelValue78.asExpression();
        byte[] byteArray83 = longModelValue78.asBytes();
        org.jboss.dmr.ModelNode modelNode84 = modelNode76.add(byteArray83);
        org.jboss.dmr.stream.ModelWriter modelWriter85 = modelWriter55.writeBytes(byteArray83);
        org.jboss.dmr.stream.ModelWriter modelWriter87 = modelWriter85.writeExpression("[]");
        intModelValue1.write(modelWriter85);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 32L + "'", long3 == 32L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "32" + "'", str4, "32");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 32L + "'", long5 == 32L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 32L + "'", long6 == 32L);
        org.junit.Assert.assertNotNull(valueExpression7);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 32L + "'", long11 == 32L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "32" + "'", str12, "32");
        org.junit.Assert.assertNotNull(bigInteger13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 32L + "'", long19 == 32L);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "32" + "'", str20, "32");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 32 + "'", int23 == 32);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 32.0d + "'", double24 == 32.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(bigDecimal26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 32.0d + "'", double27 == 32.0d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(modelValue39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(modelValue41);
        org.junit.Assert.assertNotNull(modelStreamFactory43);
        org.junit.Assert.assertNotNull(modelReader48);
        org.junit.Assert.assertNotNull(modelWriter54);
        org.junit.Assert.assertNotNull(modelWriter55);
        org.junit.Assert.assertNotNull(modelWriter57);
        org.junit.Assert.assertNotNull(modelNode63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(modelNode66);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNotNull(modelNode72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str73, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList74);
        org.junit.Assert.assertNotNull(modelNode75);
        org.junit.Assert.assertNotNull(modelNode76);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "1" + "'", str79, "1");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.0d + "'", double81 == 1.0d);
        org.junit.Assert.assertNotNull(valueExpression82);
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(modelNode84);
        org.junit.Assert.assertNotNull(modelWriter85);
        org.junit.Assert.assertNotNull(modelWriter87);
    }

    @Test
    public void test13269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13269");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        org.jboss.dmr.ModelValue modelValue6 = objectModelValue0.copy(false);
        int int7 = objectModelValue0.asInt();
        java.lang.String str8 = objectModelValue0.asString();
        boolean boolean9 = objectModelValue0.asBoolean();
        java.util.Set<java.lang.String> strSet10 = objectModelValue0.getKeys();
        org.jboss.dmr.ObjectModelValue objectModelValue11 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode12 = objectModelValue11.asObject();
        java.util.Set<java.lang.String> strSet13 = objectModelValue11.getKeys();
        boolean boolean15 = objectModelValue11.has((int) 'a');
        boolean boolean17 = objectModelValue11.has("");
        org.jboss.dmr.ObjectModelValue objectModelValue18 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode19 = objectModelValue18.asObject();
        java.util.Set<java.lang.String> strSet20 = objectModelValue18.getKeys();
        boolean boolean22 = objectModelValue18.has((int) 'a');
        boolean boolean23 = objectModelValue11.equals(objectModelValue18);
        org.jboss.dmr.ModelNode modelNode25 = objectModelValue11.getChild("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AloAeA==");
        boolean boolean26 = objectModelValue0.equals(objectModelValue11);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray27 = objectModelValue0.asBytes();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(modelNode4);
        org.junit.Assert.assertNotNull(modelValue6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{}" + "'", str8, "{}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test13270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13270");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        boolean boolean4 = objectModelValue0.has((int) 'a');
        boolean boolean6 = objectModelValue0.has("");
        java.util.List<org.jboss.dmr.Property> propertyList7 = objectModelValue0.asPropertyList();
        long long8 = objectModelValue0.asLong();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList9 = objectModelValue0.asList();
        org.jboss.dmr.ModelNode modelNode10 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) objectModelValue0);
        // The following exception was thrown during execution in test generation
        try {
            double double12 = modelNode10.asDouble(32.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(propertyList7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(modelNodeList9);
    }

    @Test
    public void test13271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13271");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (byte) -1);
        org.jboss.dmr.ValueExpression valueExpression2 = doubleModelValue1.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue3 = new org.jboss.dmr.ExpressionValue(valueExpression2);
        org.jboss.dmr.BooleanModelValue booleanModelValue5 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long6 = booleanModelValue5.asLong();
        org.jboss.dmr.ValueExpression valueExpression7 = booleanModelValue5.asExpression();
        boolean boolean9 = valueExpression7.equals((java.lang.Object) 'p');
        org.jboss.dmr.ExpressionValue expressionValue10 = new org.jboss.dmr.ExpressionValue(valueExpression7);
        org.jboss.dmr.BooleanModelValue booleanModelValue11 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double12 = booleanModelValue11.asDouble();
        org.jboss.dmr.ModelValue modelValue13 = booleanModelValue11.copy();
        java.math.BigInteger bigInteger14 = booleanModelValue11.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue15 = new org.jboss.dmr.BigIntegerModelValue(bigInteger14);
        double double17 = bigIntegerModelValue15.asDouble((double) 'b');
        int int18 = bigIntegerModelValue15.asInt();
        org.jboss.dmr.ValueExpression valueExpression19 = bigIntegerModelValue15.asExpression();
        boolean boolean20 = valueExpression7.equals((java.lang.Object) valueExpression19);
        java.lang.String str21 = valueExpression19.resolveString();
        org.jboss.dmr.IntModelValue intModelValue23 = new org.jboss.dmr.IntModelValue((int) ' ');
        double double24 = intModelValue23.asDouble();
        int int25 = intModelValue23.asInt();
        org.jboss.dmr.ValueExpression valueExpression26 = intModelValue23.asExpression();
        org.jboss.dmr.BooleanModelValue booleanModelValue28 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long29 = booleanModelValue28.asLong();
        org.jboss.dmr.ValueExpression valueExpression30 = booleanModelValue28.asExpression();
        java.lang.String str31 = valueExpression30.toString();
        org.jboss.dmr.ExpressionValue expressionValue33 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ValueExpression valueExpression34 = expressionValue33.asExpression();
        boolean boolean35 = valueExpression30.equals(valueExpression34);
        org.jboss.dmr.LongModelValue longModelValue37 = new org.jboss.dmr.LongModelValue((long) '4');
        java.math.BigDecimal bigDecimal38 = longModelValue37.asBigDecimal();
        int int39 = longModelValue37.asInt();
        org.jboss.dmr.ValueExpression valueExpression40 = longModelValue37.asExpression();
        boolean boolean41 = valueExpression34.equals(valueExpression40);
        int int42 = valueExpression40.resolveInt();
        org.jboss.dmr.ExpressionValue expressionValue44 = new org.jboss.dmr.ExpressionValue("1");
        org.jboss.dmr.ValueExpression valueExpression45 = expressionValue44.asExpression();
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver46 = new org.jboss.dmr.ValueExpressionResolver();
        java.lang.String str47 = valueExpression45.resolveString(valueExpressionResolver46);
        java.math.BigInteger bigInteger48 = valueExpression40.resolveBigInteger(valueExpressionResolver46);
        int int49 = valueExpression40.resolveInt();
        org.jboss.dmr.BooleanModelValue booleanModelValue50 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double51 = booleanModelValue50.asDouble();
        org.jboss.dmr.ModelValue modelValue52 = booleanModelValue50.copy();
        java.math.BigInteger bigInteger53 = booleanModelValue50.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue54 = new org.jboss.dmr.BigIntegerModelValue(bigInteger53);
        java.lang.String str55 = bigIntegerModelValue54.asString();
        long long57 = bigIntegerModelValue54.asLong(32L);
        double double58 = bigIntegerModelValue54.asDouble();
        long long60 = bigIntegerModelValue54.asLong((long) '4');
        org.jboss.dmr.ValueExpression valueExpression61 = bigIntegerModelValue54.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue62 = new org.jboss.dmr.ExpressionValue(valueExpression61);
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver63 = new org.jboss.dmr.ValueExpressionResolver();
        java.lang.String str65 = valueExpressionResolver63.resolvePart("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        java.math.BigDecimal bigDecimal66 = valueExpression61.resolveBigDecimal(valueExpressionResolver63);
        java.math.BigInteger bigInteger67 = valueExpression40.resolveBigInteger(valueExpressionResolver63);
        java.lang.String str68 = valueExpression26.resolveString(valueExpressionResolver63);
        java.lang.String str69 = valueExpression19.resolveString(valueExpressionResolver63);
        java.lang.String str70 = valueExpression2.resolveString(valueExpressionResolver63);
        org.junit.Assert.assertNotNull(valueExpression2);
        org.junit.Assert.assertNotNull(booleanModelValue5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertNotNull(valueExpression7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(booleanModelValue11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue13);
        org.junit.Assert.assertNotNull(bigInteger14);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(valueExpression19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1" + "'", str21, "1");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 32.0d + "'", double24 == 32.0d);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertNotNull(valueExpression26);
        org.junit.Assert.assertNotNull(booleanModelValue28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1L + "'", long29 == 1L);
        org.junit.Assert.assertNotNull(valueExpression30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Expression \"true\"" + "'", str31, "Expression \"true\"");
        org.junit.Assert.assertNotNull(valueExpression34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(bigDecimal38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertNotNull(valueExpression40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertNotNull(valueExpression45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1" + "'", str47, "1");
        org.junit.Assert.assertNotNull(bigInteger48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertNotNull(booleanModelValue50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue52);
        org.junit.Assert.assertNotNull(bigInteger53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "1" + "'", str55, "1");
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 1L + "'", long57 == 1L);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 1L + "'", long60 == 1L);
        org.junit.Assert.assertNotNull(valueExpression61);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(bigDecimal66);
        org.junit.Assert.assertNotNull(bigInteger67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "32" + "'", str68, "32");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "1" + "'", str69, "1");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "-1.0" + "'", str70, "-1.0");
    }

    @Test
    public void test13272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13272");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        org.jboss.dmr.StringModelValue stringModelValue3 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        org.jboss.dmr.ValueExpression valueExpression4 = stringModelValue3.asExpression();
        boolean boolean5 = stringModelValue1.equals(stringModelValue3);
        org.jboss.dmr.ValueExpression valueExpression6 = stringModelValue1.asExpression();
        org.jboss.dmr.ModelType modelType7 = stringModelValue1.getType();
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode(modelType7);
        org.jboss.dmr.ModelNode modelNode12 = new org.jboss.dmr.ModelNode((-1.0d));
        org.jboss.dmr.ModelNode modelNode13 = modelNode12.clear();
        org.jboss.dmr.ModelNode modelNode16 = new org.jboss.dmr.ModelNode(true);
        org.jboss.dmr.ModelNode modelNode17 = modelNode16.resolve();
        java.lang.String str18 = modelNode17.toString();
        org.jboss.dmr.ModelNode modelNode19 = modelNode13.add("(\"org.jboss.dmr.stream.ModelException: [(\\\"hi!\\\" => 0.0)]\" => (\"hi!\" => 0.0))", modelNode17);
        org.jboss.dmr.ModelNode modelNode20 = modelNode17.clear();
        org.jboss.dmr.Property property21 = new org.jboss.dmr.Property("{\"hi!\" => 0.0}", modelNode20);
        org.jboss.dmr.ModelNode modelNode23 = modelNode20.set("");
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode24 = modelNode8.add("(\"1.0\" => [\n    (\"hi!\" => expression \"hi!\"),\n    \"rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4\"\n])", modelNode20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(valueExpression4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(valueExpression6);
        org.junit.Assert.assertTrue("'" + modelType7 + "' != '" + org.jboss.dmr.ModelType.STRING + "'", modelType7.equals(org.jboss.dmr.ModelType.STRING));
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true" + "'", str18, "true");
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(modelNode23);
    }

    @Test
    public void test13273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13273");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue(0);
        org.jboss.dmr.IntModelValue intModelValue3 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long5 = intModelValue3.asLong((long) 'b');
        java.lang.String str6 = intModelValue3.asString();
        java.math.BigInteger bigInteger7 = intModelValue3.asBigInteger();
        boolean boolean9 = intModelValue3.asBoolean(false);
        org.jboss.dmr.IntModelValue intModelValue11 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long13 = intModelValue11.asLong((long) 'b');
        java.lang.String str14 = intModelValue11.asString();
        boolean boolean15 = intModelValue3.equals(intModelValue11);
        int int17 = intModelValue11.asInt(112);
        double double18 = intModelValue11.asDouble();
        java.lang.String str19 = intModelValue11.asString();
        boolean boolean20 = intModelValue1.equals(intModelValue11);
        org.jboss.dmr.ValueExpression valueExpression21 = intModelValue11.asExpression();
        org.jboss.dmr.ModelNode modelNode22 = new org.jboss.dmr.ModelNode(valueExpression21);
        org.jboss.dmr.ModelNode modelNode23 = new org.jboss.dmr.ModelNode(valueExpression21);
        java.io.ObjectInput objectInput24 = null;
        // The following exception was thrown during execution in test generation
        try {
            valueExpression21.readExternal(objectInput24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 32L + "'", long5 == 32L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "32" + "'", str6, "32");
        org.junit.Assert.assertNotNull(bigInteger7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 32L + "'", long13 == 32L);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "32" + "'", str14, "32");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 32.0d + "'", double18 == 32.0d);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "32" + "'", str19, "32");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(valueExpression21);
    }

    @Test
    public void test13274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13274");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        java.lang.String str6 = listModelValue5.asString();
        long long7 = listModelValue5.asLong();
        int int9 = listModelValue5.asInt((int) '4');
        org.jboss.dmr.ModelValue modelValue10 = listModelValue5.protect();
        org.jboss.dmr.ModelValue modelValue11 = listModelValue5.protect();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = listModelValue5.asList();
        org.jboss.dmr.ModelValue modelValue13 = listModelValue5.resolve();
        boolean boolean15 = listModelValue5.has((-1));
        org.jboss.dmr.ModelNode modelNode16 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue5);
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str6, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(modelValue10);
        org.junit.Assert.assertNotNull(modelValue11);
        org.junit.Assert.assertNotNull(modelNodeList12);
        org.junit.Assert.assertNotNull(modelValue13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test13275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13275");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        java.lang.String str5 = modelNode1.toString();
        org.jboss.dmr.ModelNode modelNode6 = modelNode1.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        org.jboss.dmr.Property property12 = new org.jboss.dmr.Property("", modelNode11);
        org.jboss.dmr.ModelNode modelNode13 = modelNode1.set(property12);
        org.jboss.dmr.PropertyModelValue propertyModelValue15 = new org.jboss.dmr.PropertyModelValue("EXPRESSION_VALUE", modelNode13, false);
        java.util.Set<java.lang.String> strSet16 = propertyModelValue15.getKeys();
        java.util.List<org.jboss.dmr.Property> propertyList17 = propertyModelValue15.asPropertyList();
        org.jboss.dmr.ModelNode modelNode19 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode22 = modelNode19.set("hi!", 0.0d);
        java.lang.String str23 = modelNode19.toString();
        org.jboss.dmr.ModelNode modelNode24 = modelNode19.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode26 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode29 = modelNode26.set("hi!", 0.0d);
        org.jboss.dmr.Property property30 = new org.jboss.dmr.Property("", modelNode29);
        org.jboss.dmr.ModelNode modelNode31 = modelNode19.set(property30);
        org.jboss.dmr.PropertyModelValue propertyModelValue33 = new org.jboss.dmr.PropertyModelValue("EXPRESSION_VALUE", modelNode31, false);
        java.util.Set<java.lang.String> strSet34 = propertyModelValue33.getKeys();
        java.util.List<org.jboss.dmr.Property> propertyList35 = propertyModelValue33.asPropertyList();
        java.util.Set<java.lang.String> strSet36 = propertyModelValue33.getKeys();
        boolean boolean37 = propertyModelValue15.equals(propertyModelValue33);
        org.jboss.dmr.Property property38 = propertyModelValue15.asProperty();
        org.jboss.dmr.ModelNode modelNode39 = propertyModelValue15.asObject();
        boolean boolean41 = modelNode39.has("");
        org.jboss.dmr.ModelNode modelNode42 = modelNode39.clear();
        org.jboss.dmr.ModelNode modelNode43 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode46 = modelNode43.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList47 = modelNode46.asList();
        org.jboss.dmr.ListModelValue listModelValue48 = new org.jboss.dmr.ListModelValue(modelNodeList47);
        java.lang.String str49 = listModelValue48.asString();
        boolean boolean51 = listModelValue48.equals((java.lang.Object) true);
        boolean boolean52 = listModelValue48.asBoolean();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList53 = listModelValue48.asList();
        org.jboss.dmr.ModelValue modelValue54 = listModelValue48.protect();
        org.jboss.dmr.ModelNode modelNode55 = listModelValue48.asObject();
        int int57 = modelNode55.asInt((int) (short) 100);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList58 = modelNode55.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode59 = modelNode39.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList58);
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(\"hi!\" => 0.0)" + "'", str5, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(propertyList17);
        org.junit.Assert.assertNotNull(modelNode22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(\"hi!\" => 0.0)" + "'", str23, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertNotNull(modelNode29);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(propertyList35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(property38);
        org.junit.Assert.assertNotNull(modelNode39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(modelNode42);
        org.junit.Assert.assertNotNull(modelNode46);
        org.junit.Assert.assertNotNull(modelNodeList47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str49, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(modelNodeList53);
        org.junit.Assert.assertNotNull(modelValue54);
        org.junit.Assert.assertNotNull(modelNode55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(modelNodeList58);
        org.junit.Assert.assertNotNull(modelNode59);
    }

    @Test
    public void test13276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13276");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) '4');
        long long2 = intModelValue1.asLong();
        long long3 = intModelValue1.asLong();
        boolean boolean4 = intModelValue1.asBoolean();
        org.jboss.dmr.IntModelValue intModelValue6 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long8 = intModelValue6.asLong((long) '#');
        org.jboss.dmr.IntModelValue intModelValue10 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long12 = intModelValue10.asLong((long) 'b');
        java.lang.String str13 = intModelValue10.asString();
        boolean boolean14 = intModelValue6.equals(intModelValue10);
        int int15 = intModelValue10.asInt();
        int int17 = intModelValue10.asInt(32);
        org.jboss.dmr.DoubleModelValue doubleModelValue19 = new org.jboss.dmr.DoubleModelValue((double) (byte) -1);
        org.jboss.dmr.DoubleModelValue doubleModelValue21 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        int int23 = doubleModelValue21.asInt((int) 'l');
        java.math.BigDecimal bigDecimal24 = doubleModelValue21.asBigDecimal();
        boolean boolean25 = doubleModelValue19.equals(doubleModelValue21);
        boolean boolean26 = intModelValue10.equals((java.lang.Object) doubleModelValue19);
        org.jboss.dmr.IntModelValue intModelValue28 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long30 = intModelValue28.asLong((long) 'b');
        java.lang.String str31 = intModelValue28.asString();
        java.math.BigInteger bigInteger32 = intModelValue28.asBigInteger();
        byte[] byteArray33 = intModelValue28.asBytes();
        org.jboss.dmr.ModelNode modelNode34 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode37 = modelNode34.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList38 = modelNode37.asList();
        org.jboss.dmr.ListModelValue listModelValue39 = new org.jboss.dmr.ListModelValue(modelNodeList38);
        java.lang.String str40 = listModelValue39.asString();
        long long41 = listModelValue39.asLong();
        int int43 = listModelValue39.asInt((int) '4');
        int int45 = listModelValue39.asInt((int) (short) -1);
        org.jboss.dmr.ModelNode modelNode46 = listModelValue39.asObject();
        boolean boolean48 = listModelValue39.asBoolean(true);
        org.jboss.dmr.ModelNode modelNode49 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode52 = modelNode49.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList53 = modelNode52.asList();
        org.jboss.dmr.ListModelValue listModelValue54 = new org.jboss.dmr.ListModelValue(modelNodeList53);
        org.jboss.dmr.ModelNode modelNode55 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue54);
        org.jboss.dmr.ModelValue modelValue56 = listModelValue54.resolve();
        int int58 = listModelValue54.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList59 = listModelValue54.asPropertyList();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList60 = listModelValue54.asList();
        long long61 = listModelValue54.asLong();
        boolean boolean62 = listModelValue39.equals(listModelValue54);
        boolean boolean63 = intModelValue28.equals((java.lang.Object) listModelValue54);
        boolean boolean64 = intModelValue10.equals(intModelValue28);
        boolean boolean65 = intModelValue1.equals(intModelValue28);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 52L + "'", long2 == 52L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 52L + "'", long3 == 52L);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 32L + "'", long8 == 32L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 32L + "'", long12 == 32L);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "32" + "'", str13, "32");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 32 + "'", int15 == 32);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertNotNull(bigDecimal24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 32L + "'", long30 == 32L);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "32" + "'", str31, "32");
        org.junit.Assert.assertNotNull(bigInteger32);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[0, 0, 0, 32]");
        org.junit.Assert.assertNotNull(modelNode37);
        org.junit.Assert.assertNotNull(modelNodeList38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str40, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(modelNode46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(modelNode52);
        org.junit.Assert.assertNotNull(modelNodeList53);
        org.junit.Assert.assertNotNull(modelValue56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(propertyList59);
        org.junit.Assert.assertNotNull(modelNodeList60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 1L + "'", long61 == 1L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test13277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13277");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        int int9 = bigDecimalModelValue7.asInt(0);
        int int10 = bigDecimalModelValue7.asInt();
        int int11 = bigDecimalModelValue7.asInt();
        java.math.BigInteger bigInteger12 = bigDecimalModelValue7.asBigInteger();
        java.math.BigInteger bigInteger13 = bigDecimalModelValue7.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue14 = new org.jboss.dmr.BigIntegerModelValue(bigInteger13);
        boolean boolean15 = bigIntegerModelValue14.asBoolean();
        java.math.BigInteger bigInteger16 = bigIntegerModelValue14.asBigInteger();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(bigInteger12);
        org.junit.Assert.assertNotNull(bigInteger13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(bigInteger16);
    }

    @Test
    public void test13278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13278");
        java.io.OutputStream outputStream0 = null;
        org.jboss.dmr.Base64.OutputStream outputStream1 = new org.jboss.dmr.Base64.OutputStream(outputStream0);
        outputStream1.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream3 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream1);
        org.jboss.dmr.Base64.OutputStream outputStream5 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream3, (int) (byte) -1);
        outputStream3.suspendEncoding();
        outputStream3.resumeEncoding();
    }

    @Test
    public void test13279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13279");
        org.jboss.dmr.BooleanModelValue booleanModelValue1 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long2 = booleanModelValue1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = booleanModelValue1.asExpression();
        java.lang.String str4 = valueExpression3.toString();
        org.jboss.dmr.ExpressionValue expressionValue6 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ValueExpression valueExpression7 = expressionValue6.asExpression();
        boolean boolean8 = valueExpression3.equals(valueExpression7);
        org.jboss.dmr.LongModelValue longModelValue10 = new org.jboss.dmr.LongModelValue((long) '4');
        java.math.BigDecimal bigDecimal11 = longModelValue10.asBigDecimal();
        int int12 = longModelValue10.asInt();
        org.jboss.dmr.ValueExpression valueExpression13 = longModelValue10.asExpression();
        boolean boolean14 = valueExpression7.equals(valueExpression13);
        java.lang.Object obj15 = null;
        boolean boolean16 = valueExpression13.equals(obj15);
        org.jboss.dmr.ModelNode modelNode17 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode20 = modelNode17.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList21 = modelNode20.asList();
        org.jboss.dmr.ListModelValue listModelValue22 = new org.jboss.dmr.ListModelValue(modelNodeList21);
        java.lang.String str23 = listModelValue22.asString();
        long long24 = listModelValue22.asLong();
        int int26 = listModelValue22.asInt((int) '4');
        org.jboss.dmr.ModelValue modelValue27 = listModelValue22.protect();
        boolean boolean29 = listModelValue22.has((int) (short) 100);
        org.jboss.dmr.ModelValue modelValue30 = listModelValue22.resolve();
        boolean boolean31 = listModelValue22.asBoolean();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList32 = listModelValue22.asList();
        boolean boolean33 = valueExpression13.equals((java.lang.Object) listModelValue22);
        long long34 = valueExpression13.resolveLong();
        java.math.BigInteger bigInteger35 = valueExpression13.resolveBigInteger();
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory37 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream38 = null;
        org.jboss.dmr.Base64.InputStream inputStream40 = new org.jboss.dmr.Base64.InputStream(inputStream38, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue42 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str43 = longModelValue42.asString();
        byte[] byteArray44 = longModelValue42.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue45 = new org.jboss.dmr.BytesModelValue(byteArray44);
        int int48 = inputStream40.read(byteArray44, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream50 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream40, (-1));
        org.jboss.dmr.stream.ModelReader modelReader51 = modelStreamFactory37.newModelReader((java.io.InputStream) inputStream50);
        java.io.InputStream inputStream52 = null;
        org.jboss.dmr.Base64.InputStream inputStream54 = new org.jboss.dmr.Base64.InputStream(inputStream52, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream55 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream54);
        org.jboss.dmr.Base64.InputStream inputStream56 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream54);
        org.jboss.dmr.stream.ModelReader modelReader57 = modelStreamFactory37.newModelReader((java.io.InputStream) inputStream54);
        boolean boolean58 = modelReader57.isString();
        boolean boolean59 = modelReader57.isDouble();
        boolean boolean60 = modelReader57.isBigInteger();
        boolean boolean61 = modelReader57.isType();
        boolean boolean62 = modelReader57.isExpression();
        boolean boolean63 = valueExpression13.equals((java.lang.Object) modelReader57);
        org.junit.Assert.assertNotNull(booleanModelValue1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Expression \"true\"" + "'", str4, "Expression \"true\"");
        org.junit.Assert.assertNotNull(valueExpression7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(bigDecimal11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(valueExpression13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(modelNodeList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str23, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1L + "'", long24 == 1L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(modelValue27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(modelValue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(modelNodeList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 52L + "'", long34 == 52L);
        org.junit.Assert.assertNotNull(bigInteger35);
        org.junit.Assert.assertNotNull(modelStreamFactory37);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1" + "'", str43, "1");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(modelReader51);
        org.junit.Assert.assertNotNull(modelReader57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test13280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13280");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(modelType0);
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode6 = modelNode3.set("hi!", 0.0d);
        org.jboss.dmr.Property property7 = new org.jboss.dmr.Property("", modelNode6);
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(property7);
        java.lang.String str9 = property7.getName();
        org.jboss.dmr.Property property10 = property7.clone();
        org.jboss.dmr.PropertyModelValue propertyModelValue11 = new org.jboss.dmr.PropertyModelValue(property7);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = propertyModelValue11.asList();
        java.util.Set<java.lang.String> strSet13 = propertyModelValue11.getKeys();
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType0.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(modelNodeList12);
        org.junit.Assert.assertNotNull(strSet13);
    }

    @Test
    public void test13281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13281");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isLong();
        boolean boolean17 = modelReader15.isBigDecimal();
        boolean boolean18 = modelReader15.isUndefined();
        boolean boolean19 = modelReader15.isBytes();
        boolean boolean20 = modelReader15.isDouble();
        boolean boolean21 = modelReader15.isString();
        boolean boolean22 = modelReader15.isInt();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test13282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13282");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode5 = modelNode2.set("hi!", 0.0d);
        java.lang.String str6 = modelNode2.toString();
        org.jboss.dmr.ModelNode modelNode7 = modelNode2.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode9 = modelNode2.set(100);
        org.jboss.dmr.ModelNode modelNode10 = modelNode1.add(modelNode2);
        org.jboss.dmr.ModelType modelType12 = org.jboss.dmr.ModelType.BYTES;
        char char13 = modelType12.getTypeChar();
        org.jboss.dmr.ModelNode modelNode14 = modelNode1.set("org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]", modelType12);
        org.jboss.dmr.PropertyModelValue propertyModelValue16 = new org.jboss.dmr.PropertyModelValue("Expression \"1\"", modelNode1, false);
        org.jboss.dmr.ModelNode modelNode17 = propertyModelValue16.asObject();
        java.util.Set<java.lang.String> strSet18 = propertyModelValue16.getKeys();
        org.jboss.dmr.ModelValue modelValue19 = propertyModelValue16.resolve();
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "(\"hi!\" => 0.0)" + "'", str6, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertTrue("'" + modelType12 + "' != '" + org.jboss.dmr.ModelType.BYTES + "'", modelType12.equals(org.jboss.dmr.ModelType.BYTES));
        org.junit.Assert.assertTrue("'" + char13 + "' != '" + 'b' + "'", char13 == 'b');
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(modelValue19);
    }

    @Test
    public void test13283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13283");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 0);
        byte[] byteArray2 = doubleModelValue1.asBytes();
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) doubleModelValue1);
        org.jboss.dmr.DoubleModelValue doubleModelValue4 = null;
        boolean boolean5 = doubleModelValue1.equals(doubleModelValue4);
        org.jboss.dmr.ObjectModelValue objectModelValue6 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode7 = objectModelValue6.asObject();
        java.util.Set<java.lang.String> strSet8 = objectModelValue6.getKeys();
        org.jboss.dmr.ModelNode modelNode10 = objectModelValue6.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        boolean boolean11 = objectModelValue6.asBoolean();
        org.jboss.dmr.ModelNode modelNode13 = objectModelValue6.getChild("1L");
        org.jboss.dmr.ObjectModelValue objectModelValue14 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode15 = objectModelValue14.asObject();
        java.util.Set<java.lang.String> strSet16 = objectModelValue14.getKeys();
        org.jboss.dmr.ModelNode modelNode18 = objectModelValue14.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        boolean boolean19 = objectModelValue14.asBoolean();
        int int21 = objectModelValue14.asInt((int) 'b');
        int int23 = objectModelValue14.asInt((int) '#');
        boolean boolean24 = objectModelValue6.equals(objectModelValue14);
        int int25 = objectModelValue14.asInt();
        java.util.Set<java.lang.String> strSet26 = objectModelValue14.getKeys();
        org.jboss.dmr.ModelValue modelValue27 = objectModelValue14.resolve();
        boolean boolean28 = doubleModelValue1.equals((java.lang.Object) objectModelValue14);
        org.jboss.dmr.ModelNode modelNode29 = objectModelValue14.asObject();
        org.jboss.dmr.ModelNode modelNode31 = new org.jboss.dmr.ModelNode(1L);
        modelNode29.setNoCopy(modelNode31);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(modelNode10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(modelNode18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(modelValue27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(modelNode29);
    }

    @Test
    public void test13284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13284");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        java.lang.String str5 = modelNode1.toString();
        org.jboss.dmr.ModelNode modelNode6 = modelNode1.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        org.jboss.dmr.Property property12 = new org.jboss.dmr.Property("", modelNode11);
        org.jboss.dmr.ModelNode modelNode13 = modelNode1.set(property12);
        org.jboss.dmr.PropertyModelValue propertyModelValue15 = new org.jboss.dmr.PropertyModelValue("EXPRESSION_VALUE", modelNode13, false);
        java.util.Set<java.lang.String> strSet16 = propertyModelValue15.getKeys();
        java.util.List<org.jboss.dmr.Property> propertyList17 = propertyModelValue15.asPropertyList();
        java.util.Set<java.lang.String> strSet18 = propertyModelValue15.getKeys();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList19 = propertyModelValue15.asList();
        org.jboss.dmr.ListModelValue listModelValue20 = new org.jboss.dmr.ListModelValue(modelNodeList19);
        org.jboss.dmr.ModelValue modelValue21 = listModelValue20.protect();
        org.jboss.dmr.ModelNode modelNode22 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode25 = modelNode22.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList26 = modelNode25.asList();
        org.jboss.dmr.ListModelValue listModelValue27 = new org.jboss.dmr.ListModelValue(modelNodeList26);
        java.lang.String str28 = listModelValue27.asString();
        long long29 = listModelValue27.asLong();
        java.lang.String str30 = listModelValue27.asString();
        org.jboss.dmr.ModelNode modelNode31 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode34 = modelNode31.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList35 = modelNode34.asList();
        org.jboss.dmr.ListModelValue listModelValue36 = new org.jboss.dmr.ListModelValue(modelNodeList35);
        java.lang.String str37 = listModelValue36.asString();
        long long38 = listModelValue36.asLong();
        int int40 = listModelValue36.asInt((int) '4');
        org.jboss.dmr.ModelValue modelValue41 = listModelValue36.protect();
        boolean boolean43 = listModelValue36.has((int) (short) 100);
        boolean boolean44 = listModelValue27.equals(listModelValue36);
        boolean boolean46 = listModelValue27.has((int) (short) -1);
        long long47 = listModelValue27.asLong();
        java.lang.String str48 = listModelValue27.asString();
        org.jboss.dmr.ModelNode modelNode49 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode52 = modelNode49.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList53 = modelNode52.asList();
        org.jboss.dmr.ListModelValue listModelValue54 = new org.jboss.dmr.ListModelValue(modelNodeList53);
        java.lang.String str55 = listModelValue54.asString();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList56 = listModelValue54.asList();
        org.jboss.dmr.ModelNode modelNode57 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode60 = modelNode57.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList61 = modelNode60.asList();
        org.jboss.dmr.ListModelValue listModelValue62 = new org.jboss.dmr.ListModelValue(modelNodeList61);
        java.lang.String str63 = listModelValue62.asString();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList64 = listModelValue62.asList();
        boolean boolean65 = listModelValue54.equals(listModelValue62);
        org.jboss.dmr.ModelNode modelNode66 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode69 = modelNode66.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList70 = modelNode69.asList();
        org.jboss.dmr.ListModelValue listModelValue71 = new org.jboss.dmr.ListModelValue(modelNodeList70);
        org.jboss.dmr.ModelNode modelNode72 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue71);
        org.jboss.dmr.ModelValue modelValue73 = listModelValue71.resolve();
        int int75 = listModelValue71.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList76 = listModelValue71.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList77 = listModelValue71.asPropertyList();
        org.jboss.dmr.ModelValue modelValue78 = listModelValue71.copy();
        boolean boolean79 = listModelValue62.equals(listModelValue71);
        boolean boolean80 = listModelValue27.equals(listModelValue62);
        boolean boolean81 = listModelValue20.equals(listModelValue27);
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(\"hi!\" => 0.0)" + "'", str5, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(propertyList17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(modelNodeList19);
        org.junit.Assert.assertNotNull(modelValue21);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertNotNull(modelNodeList26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str28, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1L + "'", long29 == 1L);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str30, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertNotNull(modelNode34);
        org.junit.Assert.assertNotNull(modelNodeList35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str37, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(modelValue41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1L + "'", long47 == 1L);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str48, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertNotNull(modelNode52);
        org.junit.Assert.assertNotNull(modelNodeList53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str55, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertNotNull(modelNodeList56);
        org.junit.Assert.assertNotNull(modelNode60);
        org.junit.Assert.assertNotNull(modelNodeList61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str63, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertNotNull(modelNodeList64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(modelNode69);
        org.junit.Assert.assertNotNull(modelNodeList70);
        org.junit.Assert.assertNotNull(modelValue73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(propertyList76);
        org.junit.Assert.assertNotNull(propertyList77);
        org.junit.Assert.assertNotNull(modelValue78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test13285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13285");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        boolean boolean5 = objectModelValue0.asBoolean();
        org.jboss.dmr.ModelNode modelNode7 = objectModelValue0.getChild("1L");
        org.jboss.dmr.ObjectModelValue objectModelValue8 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode9 = objectModelValue8.asObject();
        java.util.Set<java.lang.String> strSet10 = objectModelValue8.getKeys();
        org.jboss.dmr.ModelNode modelNode12 = objectModelValue8.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        boolean boolean13 = objectModelValue8.asBoolean();
        int int15 = objectModelValue8.asInt((int) 'b');
        int int17 = objectModelValue8.asInt((int) '#');
        boolean boolean18 = objectModelValue0.equals(objectModelValue8);
        int int19 = objectModelValue8.asInt();
        java.util.Set<java.lang.String> strSet20 = objectModelValue8.getKeys();
        long long22 = objectModelValue8.asLong((long) 0);
        org.jboss.dmr.ModelType modelType23 = org.jboss.dmr.ModelType.DOUBLE;
        org.jboss.dmr.ModelNode modelNode24 = new org.jboss.dmr.ModelNode(modelType23);
        org.jboss.dmr.LongModelValue longModelValue27 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str28 = longModelValue27.asString();
        byte[] byteArray29 = longModelValue27.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue30 = new org.jboss.dmr.BytesModelValue(byteArray29);
        java.lang.String str31 = bytesModelValue30.asString();
        int int32 = bytesModelValue30.asInt();
        long long34 = bytesModelValue30.asLong((long) (short) 1);
        long long35 = bytesModelValue30.asLong();
        java.math.BigDecimal bigDecimal36 = bytesModelValue30.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode37 = modelNode24.set("32", bigDecimal36);
        boolean boolean38 = objectModelValue8.equals((java.lang.Object) bigDecimal36);
        org.jboss.dmr.ModelNode modelNode39 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) objectModelValue8);
        org.jboss.dmr.ObjectModelValue objectModelValue40 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode41 = objectModelValue40.asObject();
        org.jboss.dmr.ModelValue modelValue42 = objectModelValue40.protect();
        org.jboss.dmr.ModelValue modelValue43 = objectModelValue40.resolve();
        org.jboss.dmr.ModelValue modelValue45 = objectModelValue40.copy(true);
        boolean boolean46 = objectModelValue8.equals(objectModelValue40);
        org.jboss.dmr.stream.ModelException modelException48 = new org.jboss.dmr.stream.ModelException("");
        java.lang.Throwable throwable50 = null;
        org.jboss.dmr.stream.ModelException modelException51 = new org.jboss.dmr.stream.ModelException("[(\"hi!\" => 0.0)]", throwable50);
        org.jboss.dmr.stream.ModelException modelException52 = new org.jboss.dmr.stream.ModelException(throwable50);
        java.lang.Throwable[] throwableArray53 = modelException52.getSuppressed();
        modelException48.addSuppressed((java.lang.Throwable) modelException52);
        boolean boolean55 = objectModelValue8.equals((java.lang.Object) modelException52);
        java.util.List<org.jboss.dmr.Property> propertyList56 = objectModelValue8.asPropertyList();
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(modelNode4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNull(modelNode12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + modelType23 + "' != '" + org.jboss.dmr.ModelType.DOUBLE + "'", modelType23.equals(org.jboss.dmr.ModelType.DOUBLE));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1" + "'", str28, "1");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str31, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1L + "'", long34 == 1L);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertNotNull(bigDecimal36);
        org.junit.Assert.assertNotNull(modelNode37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(modelNode41);
        org.junit.Assert.assertNotNull(modelValue42);
        org.junit.Assert.assertNotNull(modelValue43);
        org.junit.Assert.assertNotNull(modelValue45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(propertyList56);
    }

    @Test
    public void test13286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13286");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode("(\"EXPRESSION_VALUE\" => (\"\" => (\"hi!\" => 0.0)))");
        org.jboss.dmr.LongModelValue longModelValue3 = new org.jboss.dmr.LongModelValue((-1L));
        long long5 = longModelValue3.asLong((long) (byte) -1);
        int int7 = longModelValue3.asInt(0);
        org.jboss.dmr.ValueExpression valueExpression8 = longModelValue3.asExpression();
        org.jboss.dmr.ValueExpression valueExpression9 = longModelValue3.asExpression();
        org.jboss.dmr.ModelNode modelNode10 = modelNode1.set(valueExpression9);
        org.jboss.dmr.ModelNode modelNode12 = modelNode1.set((long) 32);
        org.jboss.dmr.ModelNode modelNode13 = modelNode1.setEmptyList();
        org.jboss.dmr.ModelNode modelNode16 = new org.jboss.dmr.ModelNode((int) 'a');
        org.jboss.dmr.ModelNode modelNode17 = modelNode16.setEmptyList();
        org.jboss.dmr.ObjectModelValue objectModelValue18 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode19 = objectModelValue18.asObject();
        java.util.Set<java.lang.String> strSet20 = objectModelValue18.getKeys();
        boolean boolean22 = objectModelValue18.has((int) 'a');
        boolean boolean24 = objectModelValue18.has("");
        org.jboss.dmr.ObjectModelValue objectModelValue25 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode26 = objectModelValue25.asObject();
        java.util.Set<java.lang.String> strSet27 = objectModelValue25.getKeys();
        boolean boolean29 = objectModelValue25.has((int) 'a');
        boolean boolean30 = objectModelValue18.equals(objectModelValue25);
        org.jboss.dmr.ModelNode modelNode31 = objectModelValue25.asObject();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList32 = objectModelValue25.asList();
        org.jboss.dmr.ModelNode modelNode33 = modelNode16.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList32);
        org.jboss.dmr.Property property35 = new org.jboss.dmr.Property("bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }", modelNode16, true);
        org.jboss.dmr.PropertyModelValue propertyModelValue36 = new org.jboss.dmr.PropertyModelValue(property35);
        org.jboss.dmr.Property property37 = property35.clone();
        org.jboss.dmr.ModelNode modelNode38 = modelNode13.add(property35);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(valueExpression8);
        org.junit.Assert.assertNotNull(valueExpression9);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(modelNodeList32);
        org.junit.Assert.assertNotNull(modelNode33);
        org.junit.Assert.assertNotNull(property37);
        org.junit.Assert.assertNotNull(modelNode38);
    }

    @Test
    public void test13287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13287");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 0);
        byte[] byteArray2 = doubleModelValue1.asBytes();
        java.lang.String str4 = org.jboss.dmr.Base64.encodeBytes(byteArray2, (int) 'e');
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "AAAAAAAAAAA=" + "'", str4, "AAAAAAAAAAA=");
    }

    @Test
    public void test13288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13288");
        org.jboss.dmr.ExpressionValue expressionValue1 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue3 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean4 = expressionValue1.equals(expressionValue3);
        org.jboss.dmr.ExpressionValue expressionValue6 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue8 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean9 = expressionValue6.equals(expressionValue8);
        boolean boolean10 = expressionValue1.equals(expressionValue8);
        org.jboss.dmr.ValueExpression valueExpression11 = expressionValue8.asExpression();
        org.jboss.dmr.ModelNode modelNode13 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long14 = modelNode13.asLong();
        org.jboss.dmr.ModelNode modelNode17 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode20 = modelNode17.set("hi!", 0.0d);
        org.jboss.dmr.Property property21 = new org.jboss.dmr.Property("", modelNode20);
        java.lang.String[] strArray22 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode23 = modelNode20.get(strArray22);
        org.jboss.dmr.ModelNode modelNode24 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode27 = modelNode24.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList28 = modelNode27.asList();
        org.jboss.dmr.ListModelValue listModelValue29 = new org.jboss.dmr.ListModelValue(modelNodeList28);
        org.jboss.dmr.ModelNode modelNode30 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue29);
        org.jboss.dmr.ModelValue modelValue31 = listModelValue29.resolve();
        int int33 = listModelValue29.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList34 = listModelValue29.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList35 = modelNode23.asPropertyList(propertyList34);
        org.jboss.dmr.ModelNode modelNode37 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode40 = modelNode37.set("hi!", 0.0d);
        org.jboss.dmr.Property property41 = new org.jboss.dmr.Property("", modelNode40);
        java.lang.String[] strArray42 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode43 = modelNode40.get(strArray42);
        org.jboss.dmr.ModelNode modelNode44 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode47 = modelNode44.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList48 = modelNode47.asList();
        org.jboss.dmr.ListModelValue listModelValue49 = new org.jboss.dmr.ListModelValue(modelNodeList48);
        org.jboss.dmr.ModelNode modelNode50 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue49);
        org.jboss.dmr.ModelValue modelValue51 = listModelValue49.resolve();
        int int53 = listModelValue49.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList54 = listModelValue49.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList55 = modelNode43.asPropertyList(propertyList54);
        modelNode23.setNoCopy(modelNode43);
        org.jboss.dmr.ModelNode modelNode57 = modelNode13.set("org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]", modelNode23);
        boolean boolean58 = modelNode23.isDefined();
        boolean boolean59 = expressionValue8.equals((java.lang.Object) boolean58);
        org.jboss.dmr.ModelValue modelValue60 = expressionValue8.clone();
        java.io.PrintWriter printWriter61 = null;
        // The following exception was thrown during execution in test generation
        try {
            expressionValue8.format(printWriter61, (int) (short) -1, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(valueExpression11);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(modelNode23);
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertNotNull(modelNodeList28);
        org.junit.Assert.assertNotNull(modelValue31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(propertyList34);
        org.junit.Assert.assertNotNull(propertyList35);
        org.junit.Assert.assertNotNull(modelNode40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(modelNode43);
        org.junit.Assert.assertNotNull(modelNode47);
        org.junit.Assert.assertNotNull(modelNodeList48);
        org.junit.Assert.assertNotNull(modelValue51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(propertyList54);
        org.junit.Assert.assertNotNull(propertyList55);
        org.junit.Assert.assertNotNull(modelNode57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(modelValue60);
    }

    @Test
    public void test13289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13289");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(32L);
        boolean boolean2 = longModelValue1.asBoolean();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test13290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13290");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str2 = longModelValue1.asString();
        byte[] byteArray3 = longModelValue1.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue4 = new org.jboss.dmr.BytesModelValue(byteArray3);
        java.lang.String str5 = bytesModelValue4.asString();
        int int6 = bytesModelValue4.asInt();
        long long8 = bytesModelValue4.asLong((long) (short) 1);
        int int10 = bytesModelValue4.asInt((int) '4');
        long long11 = bytesModelValue4.asLong();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1" + "'", str2, "1");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str5, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1L + "'", long8 == 1L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
    }

    @Test
    public void test13291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13291");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.PROPERTY;
        char char1 = modelType0.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue2 = org.jboss.dmr.TypeModelValue.of(modelType0);
        org.jboss.dmr.ModelType modelType3 = org.jboss.dmr.ModelType.PROPERTY;
        char char4 = modelType3.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue5 = org.jboss.dmr.TypeModelValue.of(modelType3);
        boolean boolean6 = typeModelValue2.equals(typeModelValue5);
        java.lang.String str7 = typeModelValue5.asString();
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = modelNode11.asList();
        org.jboss.dmr.ListModelValue listModelValue13 = new org.jboss.dmr.ListModelValue(modelNodeList12);
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue13);
        org.jboss.dmr.ModelValue modelValue15 = listModelValue13.resolve();
        int int17 = listModelValue13.asInt((int) (byte) 100);
        boolean boolean18 = listModelValue13.asBoolean();
        org.jboss.dmr.ModelNode[] modelNodeArray19 = org.jboss.dmr.ListModelValue.NO_NODES;
        boolean boolean20 = listModelValue13.equals((java.lang.Object) modelNodeArray19);
        boolean boolean21 = typeModelValue5.equals((java.lang.Object) listModelValue13);
        org.jboss.dmr.ModelValue modelValue22 = listModelValue13.resolve();
        org.jboss.dmr.ModelValue modelValue23 = listModelValue13.protect();
        java.lang.Throwable throwable25 = null;
        org.jboss.dmr.stream.ModelException modelException26 = new org.jboss.dmr.stream.ModelException("[(\"hi!\" => 0.0)]", throwable25);
        org.jboss.dmr.stream.ModelException modelException27 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException26);
        java.lang.Throwable throwable29 = null;
        org.jboss.dmr.stream.ModelException modelException30 = new org.jboss.dmr.stream.ModelException("[(\"hi!\" => 0.0)]", throwable29);
        org.jboss.dmr.stream.ModelException modelException31 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException30);
        modelException26.addSuppressed((java.lang.Throwable) modelException30);
        boolean boolean33 = listModelValue13.equals((java.lang.Object) modelException26);
        long long35 = listModelValue13.asLong((-1L));
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode37 = listModelValue13.removeChild((int) 'd');
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child exists at index [100]");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType0.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char1 + "' != '" + 'p' + "'", char1 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue2);
        org.junit.Assert.assertTrue("'" + modelType3 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType3.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char4 + "' != '" + 'p' + "'", char4 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PROPERTY" + "'", str7, "PROPERTY");
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNodeList12);
        org.junit.Assert.assertNotNull(modelValue15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(modelNodeArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(modelValue22);
        org.junit.Assert.assertNotNull(modelValue23);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
    }

    @Test
    public void test13292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13292");
        org.jboss.dmr.ExpressionValue expressionValue1 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue3 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean4 = expressionValue1.equals(expressionValue3);
        org.jboss.dmr.ExpressionValue expressionValue6 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue8 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean9 = expressionValue6.equals(expressionValue8);
        boolean boolean10 = expressionValue1.equals(expressionValue8);
        org.jboss.dmr.ValueExpression valueExpression11 = expressionValue8.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue13 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ValueExpression valueExpression14 = expressionValue13.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue16 = new org.jboss.dmr.ExpressionValue("hi!");
        java.lang.String str17 = expressionValue16.toString();
        org.jboss.dmr.ModelNode modelNode19 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode22 = modelNode19.set("hi!", 0.0d);
        org.jboss.dmr.Property property23 = new org.jboss.dmr.Property("", modelNode22);
        boolean boolean24 = expressionValue16.equals((java.lang.Object) property23);
        boolean boolean25 = expressionValue13.equals(expressionValue16);
        boolean boolean26 = expressionValue8.equals((java.lang.Object) boolean25);
        org.jboss.dmr.ValueExpression valueExpression27 = expressionValue8.asExpression();
        org.jboss.dmr.ModelNode modelNode28 = new org.jboss.dmr.ModelNode(valueExpression27);
        org.jboss.dmr.ModelNode modelNode29 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode30 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode33 = modelNode30.set("hi!", 0.0d);
        java.lang.String str34 = modelNode30.toString();
        org.jboss.dmr.ModelNode modelNode35 = modelNode30.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode37 = modelNode30.set(100);
        org.jboss.dmr.ModelNode modelNode38 = modelNode29.add(modelNode30);
        org.jboss.dmr.ModelNode modelNode40 = modelNode38.set((double) (-1.0f));
        double double42 = modelNode38.asDouble(1.0d);
        org.jboss.dmr.LongModelValue longModelValue44 = new org.jboss.dmr.LongModelValue(1L);
        long long46 = longModelValue44.asLong((long) (short) 0);
        java.lang.String str47 = longModelValue44.asString();
        org.jboss.dmr.ValueExpression valueExpression48 = longModelValue44.asExpression();
        org.jboss.dmr.ModelNode modelNode49 = modelNode38.set(valueExpression48);
        org.jboss.dmr.IntModelValue intModelValue51 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long53 = intModelValue51.asLong((long) 'b');
        java.lang.String str54 = intModelValue51.asString();
        long long55 = intModelValue51.asLong();
        long long56 = intModelValue51.asLong();
        org.jboss.dmr.ValueExpression valueExpression57 = intModelValue51.asExpression();
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver58 = new org.jboss.dmr.ValueExpressionResolver();
        java.math.BigDecimal bigDecimal59 = valueExpression57.resolveBigDecimal(valueExpressionResolver58);
        java.lang.String str60 = valueExpression48.resolveString(valueExpressionResolver58);
        org.jboss.dmr.ModelNode modelNode61 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode64 = modelNode61.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList65 = modelNode64.asList();
        java.lang.String str67 = modelNode64.asString("true");
        org.jboss.dmr.ModelNode modelNode69 = modelNode64.set((double) 'a');
        long long70 = modelNode64.asLong();
        org.jboss.dmr.ModelType modelType72 = org.jboss.dmr.ModelType.PROPERTY;
        char char73 = modelType72.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue74 = org.jboss.dmr.TypeModelValue.of(modelType72);
        org.jboss.dmr.ModelType modelType75 = org.jboss.dmr.ModelType.PROPERTY;
        char char76 = modelType75.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue77 = org.jboss.dmr.TypeModelValue.of(modelType75);
        boolean boolean78 = typeModelValue74.equals(typeModelValue77);
        java.lang.String str79 = typeModelValue77.asString();
        org.jboss.dmr.ModelType modelType80 = org.jboss.dmr.ModelType.PROPERTY;
        char char81 = modelType80.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue82 = org.jboss.dmr.TypeModelValue.of(modelType80);
        org.jboss.dmr.ModelType modelType83 = org.jboss.dmr.ModelType.PROPERTY;
        char char84 = modelType83.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue85 = org.jboss.dmr.TypeModelValue.of(modelType83);
        boolean boolean86 = typeModelValue82.equals(typeModelValue85);
        java.lang.String str87 = typeModelValue85.asString();
        boolean boolean89 = typeModelValue85.asBoolean(true);
        boolean boolean90 = typeModelValue77.equals(typeModelValue85);
        org.jboss.dmr.ValueExpression valueExpression91 = typeModelValue85.asExpression();
        org.jboss.dmr.ValueExpression valueExpression92 = typeModelValue85.asExpression();
        org.jboss.dmr.ModelNode modelNode93 = modelNode64.set("\"[1]\"", valueExpression92);
        java.lang.String str94 = valueExpressionResolver58.resolve(valueExpression92);
        java.lang.String str96 = valueExpressionResolver58.resolvePart("org.jboss.dmr.stream.ModelException: rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4");
        // The following exception was thrown during execution in test generation
        try {
            java.math.BigDecimal bigDecimal97 = valueExpression27.resolveBigDecimal(valueExpressionResolver58);
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: null");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(valueExpression11);
        org.junit.Assert.assertNotNull(valueExpression14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "expression \"hi!\"" + "'", str17, "expression \"hi!\"");
        org.junit.Assert.assertNotNull(modelNode22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(valueExpression27);
        org.junit.Assert.assertNotNull(modelNode33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(\"hi!\" => 0.0)" + "'", str34, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode35);
        org.junit.Assert.assertNotNull(modelNode37);
        org.junit.Assert.assertNotNull(modelNode38);
        org.junit.Assert.assertNotNull(modelNode40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-1.0d) + "'", double42 == (-1.0d));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1L + "'", long46 == 1L);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1" + "'", str47, "1");
        org.junit.Assert.assertNotNull(valueExpression48);
        org.junit.Assert.assertNotNull(modelNode49);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 32L + "'", long53 == 32L);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "32" + "'", str54, "32");
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 32L + "'", long55 == 32L);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 32L + "'", long56 == 32L);
        org.junit.Assert.assertNotNull(valueExpression57);
        org.junit.Assert.assertNotNull(bigDecimal59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "1" + "'", str60, "1");
        org.junit.Assert.assertNotNull(modelNode64);
        org.junit.Assert.assertNotNull(modelNodeList65);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(\"hi!\" => 0.0)" + "'", str67, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 97L + "'", long70 == 97L);
        org.junit.Assert.assertTrue("'" + modelType72 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType72.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char73 + "' != '" + 'p' + "'", char73 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue74);
        org.junit.Assert.assertTrue("'" + modelType75 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType75.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char76 + "' != '" + 'p' + "'", char76 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "PROPERTY" + "'", str79, "PROPERTY");
        org.junit.Assert.assertTrue("'" + modelType80 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType80.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char81 + "' != '" + 'p' + "'", char81 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue82);
        org.junit.Assert.assertTrue("'" + modelType83 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType83.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char84 + "' != '" + 'p' + "'", char84 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "PROPERTY" + "'", str87, "PROPERTY");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(valueExpression91);
        org.junit.Assert.assertNotNull(valueExpression92);
        org.junit.Assert.assertNotNull(modelNode93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "PROPERTY" + "'", str94, "PROPERTY");
        org.junit.Assert.assertNull(str96);
    }

    @Test
    public void test13293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13293");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(10);
        org.jboss.dmr.ModelNode modelNode2 = modelNode1.resolve();
        org.jboss.dmr.Validation.validate(modelNode1, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3R3AANW9yZy5qYm9z\ncy5kbXIuc3RyZWFtLk1vZGVsRXhjZXB0aW9uOiBbKCJoaSEiID0+IDAuMCldcAADaGkhRAAAAAAA\nAAAAeA==");
        org.jboss.dmr.ModelNode modelNode5 = modelNode1.clone();
        org.jboss.dmr.ModelNode modelNode6 = modelNode5.clear();
        boolean boolean8 = modelNode6.has(1);
        org.jboss.dmr.ModelNode modelNode10 = modelNode6.add((int) 'J');
        org.jboss.dmr.ModelNode modelNode13 = modelNode6.set("rO0ABXQAUXJPMEFCWE55QUJkdmNtY3VhbUp2YzNNdVpHMXlMazF2WkdWc1RtOWtaUnd0b1VTZG80\nNC9EQUFBZUhCM0RIQUFBMmhwSVdVQUEyaHAKSVhnPQ==", (long) 'b');
        org.junit.Assert.assertNotNull(modelNode2);
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertNotNull(modelNode13);
    }

    @Test
    public void test13294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13294");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        java.lang.String str5 = modelNode1.toString();
        org.jboss.dmr.ModelNode modelNode6 = modelNode1.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(100);
        org.jboss.dmr.ModelNode modelNode11 = new org.jboss.dmr.ModelNode((double) 100);
        org.jboss.dmr.ModelNode modelNode13 = modelNode11.set((int) '#');
        org.jboss.dmr.ModelNode modelNode14 = modelNode1.setNoCopy("EXPRESSION_VALUE", modelNode13);
        org.jboss.dmr.PropertyModelValue propertyModelValue15 = new org.jboss.dmr.PropertyModelValue("Expression \"true\"", modelNode1);
        org.jboss.dmr.ModelValue modelValue16 = propertyModelValue15.protect();
        java.lang.String str17 = propertyModelValue15.asString();
        org.jboss.dmr.ModelValue modelValue18 = propertyModelValue15.protect();
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(\"hi!\" => 0.0)" + "'", str5, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(modelValue16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(\"Expression \\\"true\\\"\" => (\"EXPRESSION_VALUE\" => 35))" + "'", str17, "(\"Expression \\\"true\\\"\" => (\"EXPRESSION_VALUE\" => 35))");
        org.junit.Assert.assertNotNull(modelValue18);
    }

    @Test
    public void test13295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13295");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        byte[] byteArray2 = stringModelValue1.asBytes();
        org.jboss.dmr.LongModelValue longModelValue4 = new org.jboss.dmr.LongModelValue(1L);
        java.math.BigDecimal bigDecimal5 = longModelValue4.asBigDecimal();
        byte[] byteArray6 = longModelValue4.asBytes();
        boolean boolean7 = stringModelValue1.equals((java.lang.Object) byteArray6);
        org.jboss.dmr.StringModelValue stringModelValue9 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.StringModelValue stringModelValue11 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        boolean boolean12 = stringModelValue9.equals(stringModelValue11);
        byte[] byteArray13 = stringModelValue11.asBytes();
        java.lang.Object obj14 = null;
        boolean boolean15 = stringModelValue11.equals(obj14);
        byte[] byteArray16 = stringModelValue11.asBytes();
        boolean boolean17 = stringModelValue1.equals(stringModelValue11);
        org.jboss.dmr.ModelValue modelValue18 = stringModelValue1.protect();
        org.jboss.dmr.ModelType modelType19 = modelValue18.getType();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 32, 34, 116, 114, 117, 101, 34]");
        org.junit.Assert.assertNotNull(bigDecimal5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[40, 34, 34, 32, 61, 62, 32, 40, 34, 104, 105, 33, 34, 32, 61, 62, 32, 48, 46, 48, 41, 41]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[40, 34, 34, 32, 61, 62, 32, 40, 34, 104, 105, 33, 34, 32, 61, 62, 32, 48, 46, 48, 41, 41]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(modelValue18);
        org.junit.Assert.assertTrue("'" + modelType19 + "' != '" + org.jboss.dmr.ModelType.STRING + "'", modelType19.equals(org.jboss.dmr.ModelType.STRING));
    }

    @Test
    public void test13296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13296");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long2 = doubleModelValue1.asLong();
        double double3 = doubleModelValue1.asDouble();
        java.math.BigDecimal bigDecimal4 = doubleModelValue1.asBigDecimal();
        byte[] byteArray5 = doubleModelValue1.asBytes();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10L + "'", long2 == 10L);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 10.0d + "'", double3 == 10.0d);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[64, 36, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test13297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13297");
        java.io.InputStream inputStream0 = null;
        org.jboss.dmr.Base64.InputStream inputStream2 = new org.jboss.dmr.Base64.InputStream(inputStream0, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue4 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str5 = longModelValue4.asString();
        byte[] byteArray6 = longModelValue4.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue7 = new org.jboss.dmr.BytesModelValue(byteArray6);
        int int10 = inputStream2.read(byteArray6, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream11 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream2);
        java.io.OutputStream outputStream12 = null;
        org.jboss.dmr.Base64.OutputStream outputStream13 = new org.jboss.dmr.Base64.OutputStream(outputStream12);
        outputStream13.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream15 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream13);
        org.jboss.dmr.Base64.OutputStream outputStream17 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream15, (int) (byte) -1);
        outputStream15.suspendEncoding();
        outputStream15.write((int) (byte) 0);
        byte[] byteArray22 = null; // flaky: org.jboss.dmr.Base64.decodeFromFile("PROPERTY_VALUE");
        java.lang.String str24 = null; // flaky: org.jboss.dmr.Base64.encodeBytes(byteArray22, (int) (short) 100);
        outputStream15.write(byteArray22, (int) (byte) 1, (int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            int int30 = inputStream2.read(byteArray22, 0, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1" + "'", str5, "1");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
// flaky:         org.junit.Assert.assertNotNull(byteArray22);
// flaky:         org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0, 0, 0, 0, 0, 0, 0, 1]");
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AAAAAAAAAAE=" + "'", str24, "AAAAAAAAAAE=");
    }

    @Test
    public void test13298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13298");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        org.jboss.dmr.Property property5 = new org.jboss.dmr.Property("", modelNode4);
        org.jboss.dmr.Property property6 = property5.clone();
        org.jboss.dmr.PropertyModelValue propertyModelValue7 = new org.jboss.dmr.PropertyModelValue(property6);
        org.jboss.dmr.Property property8 = propertyModelValue7.asProperty();
        org.jboss.dmr.ModelNode modelNode11 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long12 = modelNode11.asLong();
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode18 = modelNode15.set("hi!", 0.0d);
        org.jboss.dmr.Property property19 = new org.jboss.dmr.Property("", modelNode18);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode21 = modelNode18.get(strArray20);
        org.jboss.dmr.ModelNode modelNode22 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode25 = modelNode22.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList26 = modelNode25.asList();
        org.jboss.dmr.ListModelValue listModelValue27 = new org.jboss.dmr.ListModelValue(modelNodeList26);
        org.jboss.dmr.ModelNode modelNode28 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue27);
        org.jboss.dmr.ModelValue modelValue29 = listModelValue27.resolve();
        int int31 = listModelValue27.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList32 = listModelValue27.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList33 = modelNode21.asPropertyList(propertyList32);
        org.jboss.dmr.ModelNode modelNode35 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode38 = modelNode35.set("hi!", 0.0d);
        org.jboss.dmr.Property property39 = new org.jboss.dmr.Property("", modelNode38);
        java.lang.String[] strArray40 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode41 = modelNode38.get(strArray40);
        org.jboss.dmr.ModelNode modelNode42 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode45 = modelNode42.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList46 = modelNode45.asList();
        org.jboss.dmr.ListModelValue listModelValue47 = new org.jboss.dmr.ListModelValue(modelNodeList46);
        org.jboss.dmr.ModelNode modelNode48 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue47);
        org.jboss.dmr.ModelValue modelValue49 = listModelValue47.resolve();
        int int51 = listModelValue47.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList52 = listModelValue47.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList53 = modelNode41.asPropertyList(propertyList52);
        modelNode21.setNoCopy(modelNode41);
        org.jboss.dmr.ModelNode modelNode55 = modelNode11.set("org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]", modelNode21);
        org.jboss.dmr.ModelNode modelNode57 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode60 = modelNode57.set("hi!", 0.0d);
        org.jboss.dmr.Property property61 = new org.jboss.dmr.Property("", modelNode60);
        java.lang.String[] strArray62 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode63 = modelNode60.get(strArray62);
        org.jboss.dmr.ModelNode modelNode64 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int65 = modelNode64.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode66 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode69 = modelNode66.setExpression("hi!", "hi!");
        java.lang.String str70 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode66);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList71 = modelNode66.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode72 = modelNode64.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList71);
        org.jboss.dmr.ModelNode modelNode73 = modelNode63.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList71);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList74 = modelNode11.asList(modelNodeList71);
        org.jboss.dmr.PropertyModelValue propertyModelValue76 = new org.jboss.dmr.PropertyModelValue("Expression \"true\"", modelNode11, false);
        boolean boolean78 = propertyModelValue76.has("\"{\n    \\\"EXPRESSION_VALUE\\\" : 35\n}\"");
        boolean boolean79 = propertyModelValue7.equals(propertyModelValue76);
        org.jboss.dmr.Property property80 = propertyModelValue76.asProperty();
        java.lang.Class<?> wildcardClass81 = property80.getClass();
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(property6);
        org.junit.Assert.assertNotNull(property8);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(modelNode21);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertNotNull(modelNodeList26);
        org.junit.Assert.assertNotNull(modelValue29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(propertyList32);
        org.junit.Assert.assertNotNull(propertyList33);
        org.junit.Assert.assertNotNull(modelNode38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(modelNode41);
        org.junit.Assert.assertNotNull(modelNode45);
        org.junit.Assert.assertNotNull(modelNodeList46);
        org.junit.Assert.assertNotNull(modelValue49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(propertyList52);
        org.junit.Assert.assertNotNull(propertyList53);
        org.junit.Assert.assertNotNull(modelNode55);
        org.junit.Assert.assertNotNull(modelNode60);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(modelNode63);
        org.junit.Assert.assertNull(int65);
        org.junit.Assert.assertNotNull(modelNode69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str70, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList71);
        org.junit.Assert.assertNotNull(modelNode72);
        org.junit.Assert.assertNotNull(modelNode73);
        org.junit.Assert.assertNotNull(modelNodeList74);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(property80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test13299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13299");
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode((-1.0d));
        org.jboss.dmr.ModelNode modelNode3 = modelNode2.clear();
        org.jboss.dmr.Property property4 = new org.jboss.dmr.Property("35", modelNode3);
        org.jboss.dmr.ModelNode modelNode7 = modelNode3.set("", 0);
        java.lang.String str8 = modelNode3.asStringOrNull();
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(\"\" => 0)" + "'", str8, "(\"\" => 0)");
    }

    @Test
    public void test13300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13300");
        java.io.OutputStream outputStream0 = null;
        org.jboss.dmr.Base64.OutputStream outputStream2 = new org.jboss.dmr.Base64.OutputStream(outputStream0, (int) 'a');
        org.jboss.dmr.BooleanModelValue booleanModelValue4 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger5 = booleanModelValue4.asBigInteger();
        byte[] byteArray6 = booleanModelValue4.asBytes();
        int int8 = booleanModelValue4.asInt((int) (short) 1);
        byte[] byteArray9 = booleanModelValue4.asBytes();
        outputStream2.write(byteArray9);
        org.jboss.dmr.StringModelValue stringModelValue12 = new org.jboss.dmr.StringModelValue("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode((-1.0d));
        org.jboss.dmr.ModelNode modelNode16 = modelNode15.clear();
        org.jboss.dmr.Property property17 = new org.jboss.dmr.Property("35", modelNode16);
        boolean boolean18 = stringModelValue12.equals((java.lang.Object) property17);
        byte[] byteArray19 = stringModelValue12.asBytes();
        // The following exception was thrown during execution in test generation
        try {
            outputStream2.write(byteArray19, (int) 'd', 8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanModelValue4);
        org.junit.Assert.assertNotNull(bigInteger5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[1]");
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[111, 114, 103, 46, 106, 98, 111, 115, 115, 46, 100, 109, 114, 46, 115, 116, 114, 101, 97, 109, 46, 77, 111, 100, 101, 108, 69, 120, 99, 101, 112, 116, 105, 111, 110, 58, 32, 111, 114, 103, 46, 106, 98, 111, 115, 115, 46, 100, 109, 114, 46, 115, 116, 114, 101, 97, 109, 46, 77, 111, 100, 101, 108, 69, 120, 99, 101, 112, 116, 105, 111, 110, 58, 32, 111, 114, 103, 46, 106, 98, 111, 115, 115, 46, 100, 109, 114, 46, 115, 116, 114, 101, 97, 109, 46, 77, 111, 100, 101, 108, 69, 120, 99, 101, 112, 116, 105, 111, 110, 58, 32, 91, 40, 34, 104, 105, 33, 34, 32, 61, 62, 32, 48, 46, 48, 41, 93]");
    }

    @Test
    public void test13301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13301");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str2 = longModelValue1.asString();
        byte[] byteArray3 = longModelValue1.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue4 = new org.jboss.dmr.BytesModelValue(byteArray3);
        java.lang.String str5 = bytesModelValue4.asString();
        int int6 = bytesModelValue4.asInt();
        int int7 = bytesModelValue4.asInt();
        org.jboss.dmr.LongModelValue longModelValue9 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str10 = longModelValue9.asString();
        byte[] byteArray11 = longModelValue9.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue12 = new org.jboss.dmr.BytesModelValue(byteArray11);
        double double13 = bytesModelValue12.asDouble();
        boolean boolean14 = bytesModelValue4.equals(bytesModelValue12);
        byte[] byteArray15 = bytesModelValue12.asBytes();
        java.math.BigDecimal bigDecimal16 = bytesModelValue12.asBigDecimal();
        long long18 = bytesModelValue12.asLong((long) 32);
        java.math.BigDecimal bigDecimal19 = bytesModelValue12.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode20 = new org.jboss.dmr.ModelNode(bigDecimal19);
        long long21 = modelNode20.asLong();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode23 = modelNode20.add("//////////8=");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1" + "'", str2, "1");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str5, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1" + "'", str10, "1");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.9E-324d + "'", double13 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(bigDecimal16);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(bigDecimal19);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
    }

    @Test
    public void test13302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13302");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("\"(\\\"hi!\\\" => 0.0)\"");
    }

    @Test
    public void test13303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13303");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long3 = intModelValue1.asLong((long) '#');
        org.jboss.dmr.IntModelValue intModelValue5 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long7 = intModelValue5.asLong((long) 'b');
        java.lang.String str8 = intModelValue5.asString();
        boolean boolean9 = intModelValue1.equals(intModelValue5);
        int int10 = intModelValue5.asInt();
        int int12 = intModelValue5.asInt(32);
        org.jboss.dmr.DoubleModelValue doubleModelValue14 = new org.jboss.dmr.DoubleModelValue((double) (byte) -1);
        org.jboss.dmr.DoubleModelValue doubleModelValue16 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        int int18 = doubleModelValue16.asInt((int) 'l');
        java.math.BigDecimal bigDecimal19 = doubleModelValue16.asBigDecimal();
        boolean boolean20 = doubleModelValue14.equals(doubleModelValue16);
        boolean boolean21 = intModelValue5.equals((java.lang.Object) doubleModelValue14);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory23 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream24 = null;
        org.jboss.dmr.Base64.InputStream inputStream26 = new org.jboss.dmr.Base64.InputStream(inputStream24, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream27 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream26);
        org.jboss.dmr.stream.ModelReader modelReader28 = modelStreamFactory23.newModelReader((java.io.InputStream) inputStream27);
        java.io.OutputStream outputStream29 = null;
        org.jboss.dmr.Base64.OutputStream outputStream30 = new org.jboss.dmr.Base64.OutputStream(outputStream29);
        org.jboss.dmr.Base64.OutputStream outputStream31 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream30);
        outputStream30.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter34 = modelStreamFactory23.newModelWriter((java.io.OutputStream) outputStream30);
        org.jboss.dmr.stream.ModelWriter modelWriter35 = modelWriter34.writeListStart();
        org.jboss.dmr.ModelNode modelNode37 = new org.jboss.dmr.ModelNode(true);
        org.jboss.dmr.ModelNode modelNode38 = modelNode37.resolve();
        java.lang.String str39 = modelNode37.asString();
        org.jboss.dmr.ModelNode modelNode41 = modelNode37.set((long) 52);
        org.jboss.dmr.ModelNode modelNode43 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode46 = modelNode43.setExpression("hi!", "hi!");
        java.lang.String str47 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode43);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList48 = modelNode43.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode50 = modelNode43.set((double) 0);
        org.jboss.dmr.ModelType modelType52 = org.jboss.dmr.ModelType.PROPERTY;
        char char53 = modelType52.getTypeChar();
        org.jboss.dmr.ModelNode modelNode54 = modelNode43.set("[(\"hi!\" => 0.0)]", modelType52);
        org.jboss.dmr.Property property55 = new org.jboss.dmr.Property("\"(\\\"hi!\\\" => 0.0)\"", modelNode54);
        org.jboss.dmr.ModelNode modelNode56 = modelNode41.set(property55);
        org.jboss.dmr.ModelNode modelNode58 = modelNode41.set(false);
        boolean boolean59 = modelNode58.isProtected();
        org.jboss.dmr.ModelType modelType61 = org.jboss.dmr.ModelType.PROPERTY;
        char char62 = modelType61.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue63 = org.jboss.dmr.TypeModelValue.of(modelType61);
        char char64 = modelType61.getTypeChar();
        org.jboss.dmr.ModelNode modelNode65 = modelNode58.set("rO0ABXQAByJbOTdMXSI=", modelType61);
        org.jboss.dmr.stream.ModelWriter modelWriter66 = modelWriter35.writeType(modelType61);
        org.jboss.dmr.stream.ModelWriter modelWriter68 = modelWriter66.writeDouble(112.0d);
        org.jboss.dmr.stream.ModelWriter modelWriter70 = modelWriter66.writeLong((long) 10);
        doubleModelValue14.write(modelWriter66);
        org.jboss.dmr.stream.ModelWriter modelWriter73 = modelWriter66.writeInt((int) 'D');
        org.jboss.dmr.stream.ModelWriter modelWriter74 = modelWriter66.writeListEnd();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 32L + "'", long3 == 32L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 32L + "'", long7 == 32L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "32" + "'", str8, "32");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertNotNull(bigDecimal19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(modelStreamFactory23);
        org.junit.Assert.assertNotNull(modelReader28);
        org.junit.Assert.assertNotNull(modelWriter34);
        org.junit.Assert.assertNotNull(modelWriter35);
        org.junit.Assert.assertNotNull(modelNode38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "true" + "'", str39, "true");
        org.junit.Assert.assertNotNull(modelNode41);
        org.junit.Assert.assertNotNull(modelNode46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str47, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList48);
        org.junit.Assert.assertNotNull(modelNode50);
        org.junit.Assert.assertTrue("'" + modelType52 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType52.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char53 + "' != '" + 'p' + "'", char53 == 'p');
        org.junit.Assert.assertNotNull(modelNode54);
        org.junit.Assert.assertNotNull(modelNode56);
        org.junit.Assert.assertNotNull(modelNode58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + modelType61 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType61.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char62 + "' != '" + 'p' + "'", char62 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue63);
        org.junit.Assert.assertTrue("'" + char64 + "' != '" + 'p' + "'", char64 == 'p');
        org.junit.Assert.assertNotNull(modelNode65);
        org.junit.Assert.assertNotNull(modelWriter66);
        org.junit.Assert.assertNotNull(modelWriter68);
        org.junit.Assert.assertNotNull(modelWriter70);
        org.junit.Assert.assertNotNull(modelWriter73);
        org.junit.Assert.assertNotNull(modelWriter74);
    }

    @Test
    public void test13304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13304");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        java.lang.String str5 = modelNode1.toString();
        org.jboss.dmr.ModelNode modelNode6 = modelNode1.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(100);
        org.jboss.dmr.ModelNode modelNode9 = modelNode0.add(modelNode1);
        int int11 = modelNode1.asInt(2);
        org.jboss.dmr.ModelNode modelNode13 = new org.jboss.dmr.ModelNode("(\"hi!\" => 0.0)");
        java.io.OutputStream outputStream14 = null;
        org.jboss.dmr.Base64.OutputStream outputStream15 = new org.jboss.dmr.Base64.OutputStream(outputStream14);
        outputStream15.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream17 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream15);
        org.jboss.dmr.Base64.OutputStream outputStream18 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream17);
        org.jboss.dmr.ModelNode modelNode20 = new org.jboss.dmr.ModelNode("EXPRESSION_VALUE");
        org.jboss.dmr.BooleanModelValue booleanModelValue23 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger24 = booleanModelValue23.asBigInteger();
        byte[] byteArray25 = booleanModelValue23.asBytes();
        org.jboss.dmr.ModelNode modelNode26 = modelNode20.set("expression \"hi!\"", byteArray25);
        outputStream17.write(byteArray25);
        org.jboss.dmr.ModelNode modelNode28 = modelNode13.set(byteArray25);
        org.jboss.dmr.ModelNode modelNode31 = modelNode13.setExpression("AAAAAAAAAAE=", "");
        org.jboss.dmr.IntModelValue intModelValue34 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str35 = intModelValue34.asString();
        double double37 = intModelValue34.asDouble((double) 2);
        java.math.BigDecimal bigDecimal38 = intModelValue34.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode39 = new org.jboss.dmr.ModelNode(bigDecimal38);
        org.jboss.dmr.ModelNode modelNode40 = modelNode13.set("{}", bigDecimal38);
        modelNode1.setNoCopy(modelNode13);
        org.jboss.dmr.ModelNode modelNode42 = modelNode1.asObject();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode44 = modelNode1.add("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: 1");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(\"hi!\" => 0.0)" + "'", str5, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertNotNull(booleanModelValue23);
        org.junit.Assert.assertNotNull(bigInteger24);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1]");
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertNotNull(modelNode28);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "32" + "'", str35, "32");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 32.0d + "'", double37 == 32.0d);
        org.junit.Assert.assertNotNull(bigDecimal38);
        org.junit.Assert.assertNotNull(modelNode40);
        org.junit.Assert.assertNotNull(modelNode42);
    }

    @Test
    public void test13305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13305");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(modelType0);
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode6 = modelNode3.set("hi!", 0.0d);
        org.jboss.dmr.Property property7 = new org.jboss.dmr.Property("", modelNode6);
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(property7);
        org.jboss.dmr.ModelNode modelNode9 = property7.getValue();
        org.jboss.dmr.PropertyModelValue propertyModelValue10 = new org.jboss.dmr.PropertyModelValue(property7);
        org.jboss.dmr.ModelValue modelValue11 = propertyModelValue10.clone();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = propertyModelValue10.asList();
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode17 = modelNode14.set("hi!", 0.0d);
        java.lang.String str18 = modelNode14.toString();
        org.jboss.dmr.ModelNode modelNode19 = modelNode14.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode21 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode24 = modelNode21.set("hi!", 0.0d);
        org.jboss.dmr.Property property25 = new org.jboss.dmr.Property("", modelNode24);
        org.jboss.dmr.ModelNode modelNode26 = modelNode14.set(property25);
        org.jboss.dmr.PropertyModelValue propertyModelValue28 = new org.jboss.dmr.PropertyModelValue("EXPRESSION_VALUE", modelNode26, false);
        org.jboss.dmr.Property property29 = propertyModelValue28.asProperty();
        boolean boolean30 = propertyModelValue10.equals(propertyModelValue28);
        org.jboss.dmr.ModelValue modelValue31 = propertyModelValue28.protect();
        java.lang.String str33 = propertyModelValue28.toJSONString(false);
        org.jboss.dmr.ModelNode modelNode35 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long36 = modelNode35.asLong();
        org.jboss.dmr.ValueExpression valueExpression37 = modelNode35.asExpression();
        java.math.BigDecimal bigDecimal38 = valueExpression37.resolveBigDecimal();
        java.lang.String str39 = valueExpression37.getExpressionString();
        java.math.BigDecimal bigDecimal40 = valueExpression37.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue41 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal40);
        boolean boolean42 = bigDecimalModelValue41.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression43 = bigDecimalModelValue41.asExpression();
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver44 = org.jboss.dmr.ValueExpressionResolver.DEFAULT_RESOLVER;
        java.math.BigDecimal bigDecimal45 = valueExpression43.resolveBigDecimal(valueExpressionResolver44);
        org.jboss.dmr.ModelNode modelNode46 = new org.jboss.dmr.ModelNode(bigDecimal45);
        boolean boolean47 = propertyModelValue28.equals((java.lang.Object) modelNode46);
        boolean boolean49 = propertyModelValue28.has("(\"\\\"bytes {\\\\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01\\\\n}\\\"\" => INT)");
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType0.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(modelValue11);
        org.junit.Assert.assertNotNull(modelNodeList12);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(\"hi!\" => 0.0)" + "'", str18, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertNotNull(property29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(modelValue31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "{\n    \"EXPRESSION_VALUE\" : {\n        \"\" : {\n            \"hi!\" : 0.0\n        }\n    }\n}" + "'", str33, "{\n    \"EXPRESSION_VALUE\" : {\n        \"\" : {\n            \"hi!\" : 0.0\n        }\n    }\n}");
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1L + "'", long36 == 1L);
        org.junit.Assert.assertNotNull(valueExpression37);
        org.junit.Assert.assertNotNull(bigDecimal38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1.0" + "'", str39, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(valueExpression43);
        org.junit.Assert.assertNotNull(valueExpressionResolver44);
        org.junit.Assert.assertNotNull(bigDecimal45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test13306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13306");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        boolean boolean2 = doubleModelValue1.asBoolean();
        int int4 = doubleModelValue1.asInt((int) (byte) 10);
        boolean boolean5 = doubleModelValue1.asBoolean();
        int int7 = doubleModelValue1.asInt((int) 'u');
        int int9 = doubleModelValue1.asInt((int) 'J');
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
    }

    @Test
    public void test13307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13307");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.setExpression("hi!", "hi!");
        org.jboss.dmr.ModelNode modelNode4 = modelNode3.setEmptyList();
        org.jboss.dmr.ModelNode modelNode5 = modelNode3.asObject();
        org.jboss.dmr.ModelNode modelNode7 = modelNode5.add(false);
        org.jboss.dmr.ModelNode modelNode9 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long10 = modelNode9.asLong();
        org.jboss.dmr.ValueExpression valueExpression11 = modelNode9.asExpression();
        java.math.BigDecimal bigDecimal12 = valueExpression11.resolveBigDecimal();
        java.lang.String str13 = valueExpression11.getExpressionString();
        java.math.BigDecimal bigDecimal14 = valueExpression11.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue15 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal14);
        int int17 = bigDecimalModelValue15.asInt(0);
        int int18 = bigDecimalModelValue15.asInt();
        int int19 = bigDecimalModelValue15.asInt();
        java.math.BigInteger bigInteger20 = bigDecimalModelValue15.asBigInteger();
        java.math.BigInteger bigInteger21 = bigDecimalModelValue15.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue22 = new org.jboss.dmr.BigIntegerModelValue(bigInteger21);
        org.jboss.dmr.ValueExpression valueExpression23 = bigIntegerModelValue22.asExpression();
        org.jboss.dmr.ModelNode modelNode24 = modelNode7.set(valueExpression23);
        org.jboss.dmr.ModelNode modelNode25 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode28 = modelNode25.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList29 = modelNode28.asList();
        org.jboss.dmr.ListModelValue listModelValue30 = new org.jboss.dmr.ListModelValue(modelNodeList29);
        org.jboss.dmr.ModelNode modelNode31 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue30);
        org.jboss.dmr.ModelValue modelValue32 = listModelValue30.resolve();
        int int34 = listModelValue30.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList35 = listModelValue30.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList36 = listModelValue30.asPropertyList();
        java.lang.String str37 = listModelValue30.asString();
        int int38 = listModelValue30.asInt();
        java.lang.String str39 = listModelValue30.asString();
        org.jboss.dmr.ModelType modelType40 = org.jboss.dmr.ModelType.DOUBLE;
        org.jboss.dmr.ModelNode modelNode41 = new org.jboss.dmr.ModelNode(modelType40);
        boolean boolean42 = listModelValue30.equals((java.lang.Object) modelType40);
        boolean boolean44 = listModelValue30.asBoolean(false);
        org.jboss.dmr.ModelNode modelNode46 = listModelValue30.requireChild((int) (short) 0);
        org.jboss.dmr.BooleanModelValue booleanModelValue48 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray49 = booleanModelValue48.asBytes();
        java.lang.String str50 = booleanModelValue48.asString();
        java.lang.String str51 = booleanModelValue48.asString();
        java.lang.String str52 = booleanModelValue48.asString();
        byte[] byteArray53 = booleanModelValue48.asBytes();
        java.math.BigInteger bigInteger54 = booleanModelValue48.asBigInteger();
        org.jboss.dmr.ValueExpression valueExpression55 = booleanModelValue48.asExpression();
        org.jboss.dmr.ModelNode modelNode56 = modelNode46.set(valueExpression55);
        boolean boolean57 = valueExpression23.equals(valueExpression55);
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertNotNull(valueExpression11);
        org.junit.Assert.assertNotNull(bigDecimal12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1.0" + "'", str13, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(bigInteger20);
        org.junit.Assert.assertNotNull(bigInteger21);
        org.junit.Assert.assertNotNull(valueExpression23);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertNotNull(modelNode28);
        org.junit.Assert.assertNotNull(modelNodeList29);
        org.junit.Assert.assertNotNull(modelValue32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(propertyList35);
        org.junit.Assert.assertNotNull(propertyList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str37, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str39, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + modelType40 + "' != '" + org.jboss.dmr.ModelType.DOUBLE + "'", modelType40.equals(org.jboss.dmr.ModelType.DOUBLE));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(modelNode46);
        org.junit.Assert.assertNotNull(booleanModelValue48);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "true" + "'", str50, "true");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "true" + "'", str51, "true");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "true" + "'", str52, "true");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[1]");
        org.junit.Assert.assertNotNull(bigInteger54);
        org.junit.Assert.assertNotNull(valueExpression55);
        org.junit.Assert.assertNotNull(modelNode56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test13308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13308");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        byte[] byteArray2 = stringModelValue1.asBytes();
        org.jboss.dmr.LongModelValue longModelValue4 = new org.jboss.dmr.LongModelValue(1L);
        java.math.BigDecimal bigDecimal5 = longModelValue4.asBigDecimal();
        byte[] byteArray6 = longModelValue4.asBytes();
        boolean boolean7 = stringModelValue1.equals((java.lang.Object) byteArray6);
        org.jboss.dmr.StringModelValue stringModelValue9 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.StringModelValue stringModelValue11 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        boolean boolean12 = stringModelValue9.equals(stringModelValue11);
        byte[] byteArray13 = stringModelValue11.asBytes();
        java.lang.Object obj14 = null;
        boolean boolean15 = stringModelValue11.equals(obj14);
        byte[] byteArray16 = stringModelValue11.asBytes();
        boolean boolean17 = stringModelValue1.equals(stringModelValue11);
        org.jboss.dmr.ValueExpression valueExpression18 = stringModelValue11.asExpression();
        java.lang.String str19 = stringModelValue11.asString();
        org.jboss.dmr.ValueExpression valueExpression20 = stringModelValue11.asExpression();
        // The following exception was thrown during execution in test generation
        try {
            int int21 = stringModelValue11.asInt();
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"(\"\" => (\"hi!\" => 0.0))\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 32, 34, 116, 114, 117, 101, 34]");
        org.junit.Assert.assertNotNull(bigDecimal5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[40, 34, 34, 32, 61, 62, 32, 40, 34, 104, 105, 33, 34, 32, 61, 62, 32, 48, 46, 48, 41, 41]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[40, 34, 34, 32, 61, 62, 32, 40, 34, 104, 105, 33, 34, 32, 61, 62, 32, 48, 46, 48, 41, 41]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(valueExpression18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(\"\" => (\"hi!\" => 0.0))" + "'", str19, "(\"\" => (\"hi!\" => 0.0))");
        org.junit.Assert.assertNotNull(valueExpression20);
    }

    @Test
    public void test13309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13309");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue5);
        org.jboss.dmr.ModelValue modelValue7 = listModelValue5.resolve();
        int int9 = listModelValue5.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList10 = listModelValue5.asPropertyList();
        long long11 = listModelValue5.asLong();
        int int12 = listModelValue5.asInt();
        org.jboss.dmr.ModelValue modelValue13 = listModelValue5.copy();
        java.io.PrintWriter printWriter14 = null;
        // The following exception was thrown during execution in test generation
        try {
            listModelValue5.formatAsJSON(printWriter14, (int) (short) 0, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertNotNull(modelValue7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(propertyList10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(modelValue13);
    }

    @Test
    public void test13310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13310");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long2 = doubleModelValue1.asLong();
        boolean boolean3 = doubleModelValue1.asBoolean();
        byte[] byteArray4 = doubleModelValue1.asBytes();
        int int6 = doubleModelValue1.asInt((int) ' ');
        long long7 = doubleModelValue1.asLong();
        org.jboss.dmr.ValueExpression valueExpression8 = doubleModelValue1.asExpression();
        java.math.BigInteger bigInteger9 = doubleModelValue1.asBigInteger();
        org.jboss.dmr.ModelNode modelNode10 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode13 = modelNode10.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList14 = modelNode13.asList();
        org.jboss.dmr.ListModelValue listModelValue15 = new org.jboss.dmr.ListModelValue(modelNodeList14);
        org.jboss.dmr.ModelNode modelNode16 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue15);
        org.jboss.dmr.ModelValue modelValue17 = listModelValue15.resolve();
        int int19 = listModelValue15.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList20 = listModelValue15.asPropertyList();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList21 = listModelValue15.asList();
        long long22 = listModelValue15.asLong();
        org.jboss.dmr.ModelNode modelNode23 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode26 = modelNode23.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList27 = modelNode26.asList();
        org.jboss.dmr.ListModelValue listModelValue28 = new org.jboss.dmr.ListModelValue(modelNodeList27);
        java.lang.String str29 = listModelValue28.asString();
        long long30 = listModelValue28.asLong();
        int int32 = listModelValue28.asInt((int) '4');
        org.jboss.dmr.ModelValue modelValue33 = listModelValue28.protect();
        boolean boolean35 = listModelValue28.has((int) (short) 100);
        org.jboss.dmr.ModelValue modelValue36 = listModelValue28.resolve();
        boolean boolean37 = listModelValue28.asBoolean();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList38 = listModelValue28.asList();
        boolean boolean39 = listModelValue15.equals(listModelValue28);
        java.util.List<org.jboss.dmr.Property> propertyList40 = listModelValue15.asPropertyList();
        boolean boolean41 = doubleModelValue1.equals((java.lang.Object) propertyList40);
        double double43 = doubleModelValue1.asDouble((double) 32);
        java.math.BigDecimal bigDecimal44 = doubleModelValue1.asBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue45 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal44);
        java.math.BigDecimal bigDecimal46 = bigDecimalModelValue45.asBigDecimal();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10L + "'", long2 == 10L);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertNotNull(valueExpression8);
        org.junit.Assert.assertNotNull(bigInteger9);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNodeList14);
        org.junit.Assert.assertNotNull(modelValue17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(propertyList20);
        org.junit.Assert.assertNotNull(modelNodeList21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertNotNull(modelNodeList27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str29, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(modelValue33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(modelValue36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(modelNodeList38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(propertyList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 10.0d + "'", double43 == 10.0d);
        org.junit.Assert.assertNotNull(bigDecimal44);
        org.junit.Assert.assertNotNull(bigDecimal46);
    }

    @Test
    public void test13311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13311");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue5);
        org.jboss.dmr.IntModelValue intModelValue8 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str9 = intModelValue8.asString();
        double double11 = intModelValue8.asDouble((double) 2);
        java.math.BigInteger bigInteger12 = intModelValue8.asBigInteger();
        java.math.BigInteger bigInteger13 = intModelValue8.asBigInteger();
        byte[] byteArray14 = intModelValue8.asBytes();
        java.lang.String str15 = org.jboss.dmr.Base64.encodeBytes(byteArray14);
        boolean boolean16 = listModelValue5.equals((java.lang.Object) str15);
        java.util.List<org.jboss.dmr.Property> propertyList17 = listModelValue5.asPropertyList();
        java.lang.String str18 = listModelValue5.asString();
        org.jboss.dmr.ModelNode modelNode19 = listModelValue5.asObject();
        org.jboss.dmr.ModelNode modelNode20 = listModelValue5.asObject();
        java.io.DataOutput dataOutput21 = null;
        // The following exception was thrown during execution in test generation
        try {
            listModelValue5.writeExternal(dataOutput21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "32" + "'", str9, "32");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 32.0d + "'", double11 == 32.0d);
        org.junit.Assert.assertNotNull(bigInteger12);
        org.junit.Assert.assertNotNull(bigInteger13);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 0, 0, 32]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AAAAIA==" + "'", str15, "AAAAIA==");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(propertyList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str18, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(modelNode20);
    }

    @Test
    public void test13312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13312");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        int int9 = bigDecimalModelValue7.asInt(0);
        int int10 = bigDecimalModelValue7.asInt();
        int int11 = bigDecimalModelValue7.asInt();
        java.lang.String str12 = bigDecimalModelValue7.asString();
        long long14 = bigDecimalModelValue7.asLong((long) 52);
        long long15 = bigDecimalModelValue7.asLong();
        int int17 = bigDecimalModelValue7.asInt((int) 'J');
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode19 = bigDecimalModelValue7.getChild(112);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1.0" + "'", str12, "1.0");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test13313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13313");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        java.lang.String str5 = bigIntegerModelValue4.asString();
        long long7 = bigIntegerModelValue4.asLong(32L);
        double double8 = bigIntegerModelValue4.asDouble();
        org.jboss.dmr.BooleanModelValue booleanModelValue9 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double10 = booleanModelValue9.asDouble();
        org.jboss.dmr.ModelValue modelValue11 = booleanModelValue9.copy();
        java.math.BigInteger bigInteger12 = booleanModelValue9.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue13 = new org.jboss.dmr.BigIntegerModelValue(bigInteger12);
        double double15 = bigIntegerModelValue13.asDouble((double) 'b');
        boolean boolean16 = bigIntegerModelValue4.equals(bigIntegerModelValue13);
        org.jboss.dmr.ValueExpression valueExpression17 = bigIntegerModelValue4.asExpression();
        long long18 = bigIntegerModelValue4.asLong();
        java.io.DataOutput dataOutput19 = null;
        // The following exception was thrown during execution in test generation
        try {
            bigIntegerModelValue4.writeExternal(dataOutput19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1" + "'", str5, "1");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(booleanModelValue9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue11);
        org.junit.Assert.assertNotNull(bigInteger12);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(valueExpression17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
    }

    @Test
    public void test13314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13314");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream5 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4);
        org.jboss.dmr.stream.ModelReader modelReader6 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream5);
        java.io.OutputStream outputStream7 = null;
        org.jboss.dmr.Base64.OutputStream outputStream8 = new org.jboss.dmr.Base64.OutputStream(outputStream7);
        org.jboss.dmr.Base64.OutputStream outputStream9 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream8);
        outputStream8.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter12 = modelStreamFactory1.newModelWriter((java.io.OutputStream) outputStream8);
        org.jboss.dmr.stream.ModelWriter modelWriter13 = modelWriter12.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter15 = modelWriter12.writeInt((int) '4');
        org.jboss.dmr.stream.ModelWriter modelWriter17 = modelWriter15.writeBoolean(true);
        org.jboss.dmr.stream.ModelWriter modelWriter19 = modelWriter15.writeBoolean(true);
        org.jboss.dmr.stream.ModelWriter modelWriter20 = modelWriter19.writeUndefined();
        org.jboss.dmr.IntModelValue intModelValue22 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long24 = intModelValue22.asLong((long) '#');
        org.jboss.dmr.IntModelValue intModelValue26 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long28 = intModelValue26.asLong((long) 'b');
        java.lang.String str29 = intModelValue26.asString();
        boolean boolean30 = intModelValue22.equals(intModelValue26);
        int int31 = intModelValue26.asInt();
        java.math.BigDecimal bigDecimal32 = intModelValue26.asBigDecimal();
        org.jboss.dmr.stream.ModelWriter modelWriter33 = modelWriter19.writeBigDecimal(bigDecimal32);
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertNotNull(modelReader6);
        org.junit.Assert.assertNotNull(modelWriter12);
        org.junit.Assert.assertNotNull(modelWriter13);
        org.junit.Assert.assertNotNull(modelWriter15);
        org.junit.Assert.assertNotNull(modelWriter17);
        org.junit.Assert.assertNotNull(modelWriter19);
        org.junit.Assert.assertNotNull(modelWriter20);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 32L + "'", long24 == 32L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 32L + "'", long28 == 32L);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "32" + "'", str29, "32");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 32 + "'", int31 == 32);
        org.junit.Assert.assertNotNull(bigDecimal32);
        org.junit.Assert.assertNotNull(modelWriter33);
    }

    @Test
    public void test13315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13315");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        org.jboss.dmr.Property property5 = new org.jboss.dmr.Property("", modelNode4);
        java.lang.String[] strArray6 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode7 = modelNode4.get(strArray6);
        org.jboss.dmr.ModelNode modelNode9 = modelNode7.set(35L);
        org.jboss.dmr.DoubleModelValue doubleModelValue11 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long12 = doubleModelValue11.asLong();
        boolean boolean13 = doubleModelValue11.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression14 = doubleModelValue11.asExpression();
        org.jboss.dmr.ModelNode modelNode15 = modelNode7.set(valueExpression14);
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10L + "'", long12 == 10L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(valueExpression14);
        org.junit.Assert.assertNotNull(modelNode15);
    }

    @Test
    public void test13316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13316");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        org.jboss.dmr.ModelNode modelNode5 = objectModelValue0.asObject();
        org.jboss.dmr.ModelNode modelNode6 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet7 = modelNode6.keys();
        long long8 = modelNode6.asLong();
        org.jboss.dmr.LongModelValue longModelValue11 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str12 = longModelValue11.asString();
        byte[] byteArray13 = longModelValue11.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue14 = new org.jboss.dmr.BytesModelValue(byteArray13);
        java.lang.String str15 = bytesModelValue14.asString();
        int int16 = bytesModelValue14.asInt();
        int int17 = bytesModelValue14.asInt();
        org.jboss.dmr.LongModelValue longModelValue19 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str20 = longModelValue19.asString();
        byte[] byteArray21 = longModelValue19.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue22 = new org.jboss.dmr.BytesModelValue(byteArray21);
        double double23 = bytesModelValue22.asDouble();
        boolean boolean24 = bytesModelValue14.equals(bytesModelValue22);
        byte[] byteArray25 = bytesModelValue22.asBytes();
        java.math.BigInteger bigInteger26 = bytesModelValue22.asBigInteger();
        org.jboss.dmr.LongModelValue longModelValue28 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str29 = longModelValue28.asString();
        byte[] byteArray30 = longModelValue28.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue31 = new org.jboss.dmr.BytesModelValue(byteArray30);
        double double32 = bytesModelValue31.asDouble();
        boolean boolean33 = bytesModelValue22.equals(bytesModelValue31);
        double double35 = bytesModelValue31.asDouble(0.0d);
        org.jboss.dmr.ModelNode modelNode37 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode40 = modelNode37.set("hi!", 0.0d);
        org.jboss.dmr.Property property41 = new org.jboss.dmr.Property("", modelNode40);
        java.lang.String[] strArray42 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode43 = modelNode40.get(strArray42);
        org.jboss.dmr.ModelNode modelNode44 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode47 = modelNode44.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList48 = modelNode47.asList();
        org.jboss.dmr.ListModelValue listModelValue49 = new org.jboss.dmr.ListModelValue(modelNodeList48);
        org.jboss.dmr.ModelNode modelNode50 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue49);
        org.jboss.dmr.ModelValue modelValue51 = listModelValue49.resolve();
        int int53 = listModelValue49.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList54 = listModelValue49.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList55 = modelNode43.asPropertyList(propertyList54);
        org.jboss.dmr.ModelNode modelNode57 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode60 = modelNode57.set("hi!", 0.0d);
        org.jboss.dmr.Property property61 = new org.jboss.dmr.Property("", modelNode60);
        java.lang.String[] strArray62 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode63 = modelNode60.get(strArray62);
        org.jboss.dmr.ModelNode modelNode64 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode67 = modelNode64.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList68 = modelNode67.asList();
        org.jboss.dmr.ListModelValue listModelValue69 = new org.jboss.dmr.ListModelValue(modelNodeList68);
        org.jboss.dmr.ModelNode modelNode70 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue69);
        org.jboss.dmr.ModelValue modelValue71 = listModelValue69.resolve();
        int int73 = listModelValue69.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList74 = listModelValue69.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList75 = modelNode63.asPropertyList(propertyList74);
        modelNode43.setNoCopy(modelNode63);
        org.jboss.dmr.ModelNode modelNode78 = modelNode63.set((long) 100);
        org.jboss.dmr.ModelType modelType79 = modelNode78.getType();
        boolean boolean80 = bytesModelValue31.equals((java.lang.Object) modelType79);
        org.jboss.dmr.ModelNode modelNode81 = modelNode6.set("\"(\\\"rO0ABXNyABFqYXZhLmxhbmcuSW50ZWdlchLioKT3gYc4AgABSQAFdmFsdWV4cgAQamF2YS5sYW5n\\nLk51bWJlcoaslR0LlOCLAgAAeHAAAABk\\\" => LONG)\"", modelType79);
        // The following exception was thrown during execution in test generation
        try {
            java.math.BigInteger bigInteger82 = modelNode81.asBigIntegerOrNull();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1" + "'", str12, "1");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str15, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1" + "'", str20, "1");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.9E-324d + "'", double23 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(bigInteger26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1" + "'", str29, "1");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4.9E-324d + "'", double32 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 4.9E-324d + "'", double35 == 4.9E-324d);
        org.junit.Assert.assertNotNull(modelNode40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(modelNode43);
        org.junit.Assert.assertNotNull(modelNode47);
        org.junit.Assert.assertNotNull(modelNodeList48);
        org.junit.Assert.assertNotNull(modelValue51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(propertyList54);
        org.junit.Assert.assertNotNull(propertyList55);
        org.junit.Assert.assertNotNull(modelNode60);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(modelNode63);
        org.junit.Assert.assertNotNull(modelNode67);
        org.junit.Assert.assertNotNull(modelNodeList68);
        org.junit.Assert.assertNotNull(modelValue71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(propertyList74);
        org.junit.Assert.assertNotNull(propertyList75);
        org.junit.Assert.assertNotNull(modelNode78);
        org.junit.Assert.assertTrue("'" + modelType79 + "' != '" + org.jboss.dmr.ModelType.LONG + "'", modelType79.equals(org.jboss.dmr.ModelType.LONG));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(modelNode81);
    }

    @Test
    public void test13317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13317");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        java.lang.String str5 = bigIntegerModelValue4.asString();
        java.math.BigInteger bigInteger6 = bigIntegerModelValue4.asBigInteger();
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode(bigInteger6);
        org.jboss.dmr.LongModelValue longModelValue9 = new org.jboss.dmr.LongModelValue((-1L));
        long long11 = longModelValue9.asLong((long) (byte) -1);
        int int13 = longModelValue9.asInt(0);
        org.jboss.dmr.ValueExpression valueExpression14 = longModelValue9.asExpression();
        org.jboss.dmr.ModelNode modelNode15 = modelNode7.set(valueExpression14);
        org.jboss.dmr.BooleanModelValue booleanModelValue16 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double17 = booleanModelValue16.asDouble();
        org.jboss.dmr.ModelValue modelValue18 = booleanModelValue16.copy();
        java.math.BigInteger bigInteger19 = booleanModelValue16.asBigInteger();
        org.jboss.dmr.ModelNode modelNode20 = new org.jboss.dmr.ModelNode(bigInteger19);
        org.jboss.dmr.IntModelValue intModelValue22 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str23 = intModelValue22.asString();
        double double25 = intModelValue22.asDouble((double) 2);
        java.math.BigDecimal bigDecimal26 = intModelValue22.asBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue27 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal26);
        org.jboss.dmr.ModelNode modelNode28 = modelNode20.set(bigDecimal26);
        modelNode15.setNoCopy(modelNode28);
        org.jboss.dmr.ModelNode modelNode32 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode35 = modelNode32.set("hi!", 0.0d);
        org.jboss.dmr.Property property36 = new org.jboss.dmr.Property("", modelNode35);
        java.lang.String[] strArray37 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode38 = modelNode35.get(strArray37);
        org.jboss.dmr.ModelNode modelNode39 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode42 = modelNode39.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList43 = modelNode42.asList();
        org.jboss.dmr.ListModelValue listModelValue44 = new org.jboss.dmr.ListModelValue(modelNodeList43);
        org.jboss.dmr.ModelNode modelNode45 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue44);
        org.jboss.dmr.ModelValue modelValue46 = listModelValue44.resolve();
        int int48 = listModelValue44.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList49 = listModelValue44.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList50 = modelNode38.asPropertyList(propertyList49);
        org.jboss.dmr.ModelNode modelNode53 = modelNode38.setExpression("\"(\\\"hi!\\\" => 0.0)\"", "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.jboss.dmr.ModelNode modelNode56 = modelNode38.set("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AloAeA==", (double) 0.0f);
        org.jboss.dmr.DoubleModelValue doubleModelValue59 = new org.jboss.dmr.DoubleModelValue((double) 100);
        org.jboss.dmr.ModelNode modelNode60 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode63 = modelNode60.setExpression("hi!", "hi!");
        java.lang.String str64 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode60);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList65 = modelNode60.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode67 = modelNode60.set((double) 0);
        boolean boolean68 = modelNode60.isProtected();
        java.math.BigInteger bigInteger69 = modelNode60.asBigIntegerOrNull();
        boolean boolean70 = doubleModelValue59.equals((java.lang.Object) modelNode60);
        java.lang.String str71 = doubleModelValue59.toString();
        org.jboss.dmr.ModelType modelType72 = doubleModelValue59.getType();
        org.jboss.dmr.ModelNode modelNode73 = modelNode56.set("(\"org.jboss.dmr.stream.ModelException: [(\\\"hi!\\\" => 0.0)]\" => (\"hi!\" => 0.0))", modelType72);
        org.jboss.dmr.ModelNode modelNode74 = modelNode15.set("100.0", modelType72);
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1" + "'", str5, "1");
        org.junit.Assert.assertNotNull(bigInteger6);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(valueExpression14);
        org.junit.Assert.assertNotNull(modelNode15);
        org.junit.Assert.assertNotNull(booleanModelValue16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue18);
        org.junit.Assert.assertNotNull(bigInteger19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "32" + "'", str23, "32");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 32.0d + "'", double25 == 32.0d);
        org.junit.Assert.assertNotNull(bigDecimal26);
        org.junit.Assert.assertNotNull(modelNode28);
        org.junit.Assert.assertNotNull(modelNode35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(modelNode38);
        org.junit.Assert.assertNotNull(modelNode42);
        org.junit.Assert.assertNotNull(modelNodeList43);
        org.junit.Assert.assertNotNull(modelValue46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(propertyList49);
        org.junit.Assert.assertNotNull(propertyList50);
        org.junit.Assert.assertNotNull(modelNode53);
        org.junit.Assert.assertNotNull(modelNode56);
        org.junit.Assert.assertNotNull(modelNode63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str64, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList65);
        org.junit.Assert.assertNotNull(modelNode67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(bigInteger69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "100.0" + "'", str71, "100.0");
        org.junit.Assert.assertTrue("'" + modelType72 + "' != '" + org.jboss.dmr.ModelType.DOUBLE + "'", modelType72.equals(org.jboss.dmr.ModelType.DOUBLE));
        org.junit.Assert.assertNotNull(modelNode73);
        org.junit.Assert.assertNotNull(modelNode74);
    }

    @Test
    public void test13318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13318");
        org.jboss.dmr.ModelNodeFactory modelNodeFactory0 = org.jboss.dmr.ModelNodeFactory.INSTANCE;
        org.jboss.dmr.ObjectModelValue objectModelValue1 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode2 = objectModelValue1.asObject();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue1.getChild("TYPE_MODEL_VALUE");
        org.jboss.dmr.ModelNode modelNode7 = modelNode4.set("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]", (double) 'p');
        org.jboss.dmr.IntModelValue intModelValue10 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str11 = intModelValue10.asString();
        byte[] byteArray12 = intModelValue10.asBytes();
        org.jboss.dmr.IntModelValue intModelValue14 = new org.jboss.dmr.IntModelValue(10);
        boolean boolean15 = intModelValue10.equals(intModelValue14);
        java.math.BigInteger bigInteger16 = intModelValue10.asBigInteger();
        org.jboss.dmr.ModelNode modelNode17 = modelNode7.set("", bigInteger16);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory19 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream20 = null;
        org.jboss.dmr.Base64.InputStream inputStream22 = new org.jboss.dmr.Base64.InputStream(inputStream20, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue24 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str25 = longModelValue24.asString();
        byte[] byteArray26 = longModelValue24.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue27 = new org.jboss.dmr.BytesModelValue(byteArray26);
        int int30 = inputStream22.read(byteArray26, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream32 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream22, (-1));
        org.jboss.dmr.stream.ModelReader modelReader33 = modelStreamFactory19.newModelReader((java.io.InputStream) inputStream32);
        java.io.InputStream inputStream34 = null;
        org.jboss.dmr.Base64.InputStream inputStream36 = new org.jboss.dmr.Base64.InputStream(inputStream34, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream37 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream36);
        org.jboss.dmr.Base64.InputStream inputStream38 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream36);
        org.jboss.dmr.stream.ModelReader modelReader39 = modelStreamFactory19.newModelReader((java.io.InputStream) inputStream36);
        java.io.InputStream inputStream40 = null;
        org.jboss.dmr.Base64.InputStream inputStream42 = new org.jboss.dmr.Base64.InputStream(inputStream40, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream43 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream42);
        org.jboss.dmr.stream.ModelReader modelReader44 = modelStreamFactory19.newModelReader((java.io.InputStream) inputStream42);
        org.jboss.dmr.Base64.InputStream inputStream45 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream42);
        boolean boolean46 = modelNode17.equals((java.lang.Object) inputStream45);
        org.jboss.dmr.Base64.InputStream inputStream48 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream45, (int) (short) 1);
        java.nio.charset.Charset charset49 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode51 = modelNodeFactory0.readFrom((java.io.InputStream) inputStream45, charset49, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Parameter cannot be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNodeFactory0);
        org.junit.Assert.assertNotNull(modelNode2);
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "32" + "'", str11, "32");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 0, 0, 32]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(bigInteger16);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertNotNull(modelStreamFactory19);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1" + "'", str25, "1");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(modelReader33);
        org.junit.Assert.assertNotNull(modelReader39);
        org.junit.Assert.assertNotNull(modelReader44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test13319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13319");
        org.jboss.dmr.ExpressionValue expressionValue1 = new org.jboss.dmr.ExpressionValue("TYPE_MODEL_VALUE");
        org.jboss.dmr.ModelType modelType2 = expressionValue1.getType();
        org.jboss.dmr.ValueExpression valueExpression3 = expressionValue1.asExpression();
        // The following exception was thrown during execution in test generation
        try {
            java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: null");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + modelType2 + "' != '" + org.jboss.dmr.ModelType.EXPRESSION + "'", modelType2.equals(org.jboss.dmr.ModelType.EXPRESSION));
        org.junit.Assert.assertNotNull(valueExpression3);
    }

    @Test
    public void test13320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13320");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.PROPERTY;
        char char1 = modelType0.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue2 = org.jboss.dmr.TypeModelValue.of(modelType0);
        org.jboss.dmr.ModelType modelType3 = org.jboss.dmr.ModelType.PROPERTY;
        char char4 = modelType3.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue5 = org.jboss.dmr.TypeModelValue.of(modelType3);
        boolean boolean6 = typeModelValue2.equals(typeModelValue5);
        java.lang.String str7 = typeModelValue5.asString();
        boolean boolean8 = typeModelValue5.asBoolean();
        org.jboss.dmr.ModelType modelType9 = typeModelValue5.asType();
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory11 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream12 = null;
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream(inputStream12, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue16 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str17 = longModelValue16.asString();
        byte[] byteArray18 = longModelValue16.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue19 = new org.jboss.dmr.BytesModelValue(byteArray18);
        int int22 = inputStream14.read(byteArray18, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream24 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream14, (-1));
        org.jboss.dmr.stream.ModelReader modelReader25 = modelStreamFactory11.newModelReader((java.io.InputStream) inputStream24);
        boolean boolean26 = modelReader25.isLong();
        boolean boolean27 = modelReader25.isBigDecimal();
        boolean boolean28 = modelReader25.isDouble();
        boolean boolean29 = modelReader25.isPropertyStart();
        boolean boolean30 = typeModelValue5.equals((java.lang.Object) modelReader25);
        org.jboss.dmr.ObjectModelValue objectModelValue31 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode32 = objectModelValue31.asObject();
        org.jboss.dmr.ModelValue modelValue33 = objectModelValue31.protect();
        java.util.List<org.jboss.dmr.Property> propertyList34 = objectModelValue31.asPropertyList();
        org.jboss.dmr.LongModelValue longModelValue36 = new org.jboss.dmr.LongModelValue(97L);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory38 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream39 = null;
        org.jboss.dmr.Base64.InputStream inputStream41 = new org.jboss.dmr.Base64.InputStream(inputStream39, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream42 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream41);
        org.jboss.dmr.stream.ModelReader modelReader43 = modelStreamFactory38.newModelReader((java.io.InputStream) inputStream42);
        java.io.OutputStream outputStream44 = null;
        org.jboss.dmr.Base64.OutputStream outputStream45 = new org.jboss.dmr.Base64.OutputStream(outputStream44);
        org.jboss.dmr.Base64.OutputStream outputStream46 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream45);
        outputStream45.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter49 = modelStreamFactory38.newModelWriter((java.io.OutputStream) outputStream45);
        org.jboss.dmr.stream.ModelWriter modelWriter50 = modelWriter49.writeListStart();
        org.jboss.dmr.IntModelValue intModelValue52 = new org.jboss.dmr.IntModelValue(10);
        byte[] byteArray53 = intModelValue52.asBytes();
        int int55 = intModelValue52.asInt(0);
        java.math.BigInteger bigInteger56 = intModelValue52.asBigInteger();
        org.jboss.dmr.stream.ModelWriter modelWriter57 = modelWriter50.writeBigInteger(bigInteger56);
        org.jboss.dmr.stream.ModelWriter modelWriter58 = modelWriter50.writeListStart();
        longModelValue36.write(modelWriter58);
        objectModelValue31.write(modelWriter58);
        org.jboss.dmr.stream.ModelWriter modelWriter62 = modelWriter58.writeBoolean(false);
        org.jboss.dmr.ExpressionValue expressionValue64 = new org.jboss.dmr.ExpressionValue("TYPE_MODEL_VALUE");
        org.jboss.dmr.ModelType modelType65 = expressionValue64.getType();
        org.jboss.dmr.IntModelValue intModelValue67 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long69 = intModelValue67.asLong((long) 'b');
        java.lang.String str70 = intModelValue67.asString();
        java.math.BigInteger bigInteger71 = intModelValue67.asBigInteger();
        boolean boolean73 = intModelValue67.asBoolean(false);
        org.jboss.dmr.IntModelValue intModelValue75 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long77 = intModelValue75.asLong((long) 'b');
        java.lang.String str78 = intModelValue75.asString();
        boolean boolean79 = intModelValue67.equals(intModelValue75);
        int int81 = intModelValue75.asInt(112);
        double double83 = intModelValue75.asDouble((double) '#');
        byte[] byteArray84 = intModelValue75.asBytes();
        boolean boolean85 = expressionValue64.equals((java.lang.Object) byteArray84);
        org.jboss.dmr.stream.ModelWriter modelWriter86 = modelWriter58.writeBytes(byteArray84);
        typeModelValue5.write(modelWriter58);
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType0.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char1 + "' != '" + 'p' + "'", char1 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue2);
        org.junit.Assert.assertTrue("'" + modelType3 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType3.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char4 + "' != '" + 'p' + "'", char4 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PROPERTY" + "'", str7, "PROPERTY");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + modelType9 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType9.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertNotNull(modelStreamFactory11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1" + "'", str17, "1");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(modelReader25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertNotNull(modelValue33);
        org.junit.Assert.assertNotNull(propertyList34);
        org.junit.Assert.assertNotNull(modelStreamFactory38);
        org.junit.Assert.assertNotNull(modelReader43);
        org.junit.Assert.assertNotNull(modelWriter49);
        org.junit.Assert.assertNotNull(modelWriter50);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[0, 0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 10 + "'", int55 == 10);
        org.junit.Assert.assertNotNull(bigInteger56);
        org.junit.Assert.assertNotNull(modelWriter57);
        org.junit.Assert.assertNotNull(modelWriter58);
        org.junit.Assert.assertNotNull(modelWriter62);
        org.junit.Assert.assertTrue("'" + modelType65 + "' != '" + org.jboss.dmr.ModelType.EXPRESSION + "'", modelType65.equals(org.jboss.dmr.ModelType.EXPRESSION));
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 32L + "'", long69 == 32L);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "32" + "'", str70, "32");
        org.junit.Assert.assertNotNull(bigInteger71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 32L + "'", long77 == 32L);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "32" + "'", str78, "32");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 32 + "'", int81 == 32);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 32.0d + "'", double83 == 32.0d);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 0, 0, 32]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(modelWriter86);
    }

    @Test
    public void test13321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13321");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        java.lang.String str6 = modelNode3.asString("true");
        org.jboss.dmr.ModelNode modelNode8 = modelNode3.set((double) 'a');
        org.jboss.dmr.LongModelValue longModelValue10 = new org.jboss.dmr.LongModelValue(1L);
        long long12 = longModelValue10.asLong((long) (short) 0);
        java.lang.String str13 = longModelValue10.asString();
        org.jboss.dmr.ValueExpression valueExpression14 = longModelValue10.asExpression();
        int int15 = valueExpression14.resolveInt();
        org.jboss.dmr.ModelNode modelNode16 = modelNode3.set(valueExpression14);
        java.lang.String str17 = valueExpression14.toString();
        java.lang.String str18 = valueExpression14.toString();
        java.math.BigInteger bigInteger19 = valueExpression14.resolveBigInteger();
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "(\"hi!\" => 0.0)" + "'", str6, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1" + "'", str13, "1");
        org.junit.Assert.assertNotNull(valueExpression14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Expression \"1\"" + "'", str17, "Expression \"1\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Expression \"1\"" + "'", str18, "Expression \"1\"");
        org.junit.Assert.assertNotNull(bigInteger19);
    }

    @Test
    public void test13322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13322");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue5);
        org.jboss.dmr.ModelValue modelValue7 = listModelValue5.resolve();
        int int9 = listModelValue5.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList10 = listModelValue5.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList11 = listModelValue5.asPropertyList();
        org.jboss.dmr.ModelNode modelNode13 = listModelValue5.getChild((int) (short) 0);
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode18 = modelNode15.set("hi!", 0.0d);
        java.lang.String str19 = modelNode15.toString();
        org.jboss.dmr.ModelNode modelNode20 = modelNode15.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode22 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode25 = modelNode22.set("hi!", 0.0d);
        org.jboss.dmr.Property property26 = new org.jboss.dmr.Property("", modelNode25);
        org.jboss.dmr.ModelNode modelNode27 = modelNode15.set(property26);
        org.jboss.dmr.PropertyModelValue propertyModelValue29 = new org.jboss.dmr.PropertyModelValue("EXPRESSION_VALUE", modelNode27, false);
        org.jboss.dmr.Property property30 = propertyModelValue29.asProperty();
        boolean boolean31 = listModelValue5.equals((java.lang.Object) propertyModelValue29);
        org.jboss.dmr.ModelValue modelValue32 = listModelValue5.copy();
        int int33 = listModelValue5.asInt();
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertNotNull(modelValue7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(propertyList10);
        org.junit.Assert.assertNotNull(propertyList11);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(\"hi!\" => 0.0)" + "'", str19, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertNotNull(property30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(modelValue32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
    }

    @Test
    public void test13323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13323");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.TYPE;
        org.jboss.dmr.TypeModelValue typeModelValue1 = org.jboss.dmr.TypeModelValue.of(modelType0);
        boolean boolean3 = typeModelValue1.asBoolean(true);
        org.jboss.dmr.ModelType modelType4 = org.jboss.dmr.ModelType.PROPERTY;
        char char5 = modelType4.getTypeChar();
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode(modelType4);
        org.jboss.dmr.LongModelValue longModelValue9 = new org.jboss.dmr.LongModelValue(1L);
        java.math.BigDecimal bigDecimal10 = longModelValue9.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode11 = modelNode6.set("[(\"hi!\" => 0.0)]", bigDecimal10);
        boolean boolean12 = typeModelValue1.equals((java.lang.Object) modelNode6);
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.TYPE + "'", modelType0.equals(org.jboss.dmr.ModelType.TYPE));
        org.junit.Assert.assertNotNull(typeModelValue1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + modelType4 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType4.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char5 + "' != '" + 'p' + "'", char5 == 'p');
        org.junit.Assert.assertNotNull(bigDecimal10);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test13324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13324");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("1L");
        org.jboss.dmr.StringModelValue stringModelValue3 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        org.jboss.dmr.StringModelValue stringModelValue5 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        org.jboss.dmr.ValueExpression valueExpression6 = stringModelValue5.asExpression();
        boolean boolean7 = stringModelValue3.equals(stringModelValue5);
        java.lang.String str8 = stringModelValue5.asString();
        org.jboss.dmr.StringModelValue stringModelValue10 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        byte[] byteArray11 = stringModelValue10.asBytes();
        org.jboss.dmr.StringModelValue stringModelValue13 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        org.jboss.dmr.ValueExpression valueExpression14 = stringModelValue13.asExpression();
        boolean boolean16 = stringModelValue13.equals((java.lang.Object) (-1.0d));
        java.lang.String str17 = stringModelValue13.asString();
        org.jboss.dmr.stream.ModelEvent modelEvent18 = org.jboss.dmr.stream.ModelEvent.UNDEFINED;
        boolean boolean19 = stringModelValue13.equals((java.lang.Object) modelEvent18);
        org.jboss.dmr.StringModelValue stringModelValue21 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.StringModelValue stringModelValue23 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.StringModelValue stringModelValue25 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        boolean boolean26 = stringModelValue23.equals(stringModelValue25);
        byte[] byteArray27 = stringModelValue25.asBytes();
        java.lang.Object obj28 = null;
        boolean boolean29 = stringModelValue25.equals(obj28);
        boolean boolean31 = stringModelValue25.equals((java.lang.Object) "TYPE_MODEL_VALUE");
        boolean boolean32 = stringModelValue21.equals(stringModelValue25);
        boolean boolean33 = stringModelValue13.equals(stringModelValue25);
        boolean boolean34 = stringModelValue10.equals(stringModelValue25);
        org.jboss.dmr.StringModelValue stringModelValue36 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        byte[] byteArray37 = stringModelValue36.asBytes();
        org.jboss.dmr.LongModelValue longModelValue39 = new org.jboss.dmr.LongModelValue(1L);
        java.math.BigDecimal bigDecimal40 = longModelValue39.asBigDecimal();
        byte[] byteArray41 = longModelValue39.asBytes();
        boolean boolean42 = stringModelValue36.equals((java.lang.Object) byteArray41);
        java.lang.String str43 = stringModelValue36.toString();
        boolean boolean44 = stringModelValue25.equals(stringModelValue36);
        boolean boolean45 = stringModelValue5.equals(stringModelValue25);
        boolean boolean46 = stringModelValue1.equals(stringModelValue5);
        java.io.PrintWriter printWriter47 = null;
        // The following exception was thrown during execution in test generation
        try {
            stringModelValue1.formatAsJSON(printWriter47, (int) 'e', true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(valueExpression6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(\"\" => (\"hi!\" => 0.0))" + "'", str8, "(\"\" => (\"hi!\" => 0.0))");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[40, 34, 34, 32, 61, 62, 32, 40, 34, 104, 105, 33, 34, 32, 61, 62, 32, 48, 46, 48, 41, 41]");
        org.junit.Assert.assertNotNull(valueExpression14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(\"\" => (\"hi!\" => 0.0))" + "'", str17, "(\"\" => (\"hi!\" => 0.0))");
        org.junit.Assert.assertTrue("'" + modelEvent18 + "' != '" + org.jboss.dmr.stream.ModelEvent.UNDEFINED + "'", modelEvent18.equals(org.jboss.dmr.stream.ModelEvent.UNDEFINED));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[40, 34, 34, 32, 61, 62, 32, 40, 34, 104, 105, 33, 34, 32, 61, 62, 32, 48, 46, 48, 41, 41]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 32, 34, 116, 114, 117, 101, 34]");
        org.junit.Assert.assertNotNull(bigDecimal40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\"Expression \\\"true\\\"\"" + "'", str43, "\"Expression \\\"true\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test13325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13325");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3R3AANW9yZy5qYm9z\ncy5kbXIuc3RyZWFtLk1vZGVsRXhjZXB0aW9uOiBbKCJoaSEiID0+IDAuMCldcAADaGkhRAAAAAAA\nAAAAeA==");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory3 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream4 = null;
        org.jboss.dmr.Base64.InputStream inputStream6 = new org.jboss.dmr.Base64.InputStream(inputStream4, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue8 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str9 = longModelValue8.asString();
        byte[] byteArray10 = longModelValue8.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue11 = new org.jboss.dmr.BytesModelValue(byteArray10);
        int int14 = inputStream6.read(byteArray10, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream16 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream6, (-1));
        org.jboss.dmr.stream.ModelReader modelReader17 = modelStreamFactory3.newModelReader((java.io.InputStream) inputStream16);
        java.io.InputStream inputStream18 = null;
        org.jboss.dmr.Base64.InputStream inputStream20 = new org.jboss.dmr.Base64.InputStream(inputStream18, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream21 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream20);
        org.jboss.dmr.Base64.InputStream inputStream22 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream20);
        org.jboss.dmr.stream.ModelReader modelReader23 = modelStreamFactory3.newModelReader((java.io.InputStream) inputStream20);
        java.io.InputStream inputStream24 = null;
        org.jboss.dmr.Base64.InputStream inputStream26 = new org.jboss.dmr.Base64.InputStream(inputStream24, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream27 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream26);
        org.jboss.dmr.stream.ModelReader modelReader28 = modelStreamFactory3.newModelReader((java.io.InputStream) inputStream26);
        java.io.OutputStream outputStream29 = null;
        org.jboss.dmr.Base64.OutputStream outputStream30 = new org.jboss.dmr.Base64.OutputStream(outputStream29);
        outputStream30.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream32 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream30);
        org.jboss.dmr.Base64.OutputStream outputStream33 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream32);
        outputStream32.flushBase64();
        org.jboss.dmr.Base64.OutputStream outputStream35 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream32);
        org.jboss.dmr.Base64.OutputStream outputStream36 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream32);
        org.jboss.dmr.stream.ModelWriter modelWriter37 = modelStreamFactory3.newModelWriter((java.io.OutputStream) outputStream36);
        stringModelValue1.write(modelWriter37);
        byte[] byteArray39 = stringModelValue1.asBytes();
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory41 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream42 = null;
        org.jboss.dmr.Base64.InputStream inputStream44 = new org.jboss.dmr.Base64.InputStream(inputStream42, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream45 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream44);
        org.jboss.dmr.stream.ModelReader modelReader46 = modelStreamFactory41.newModelReader((java.io.InputStream) inputStream45);
        java.io.OutputStream outputStream47 = null;
        org.jboss.dmr.Base64.OutputStream outputStream48 = new org.jboss.dmr.Base64.OutputStream(outputStream47);
        org.jboss.dmr.Base64.OutputStream outputStream49 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream48);
        outputStream48.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter52 = modelStreamFactory41.newModelWriter((java.io.OutputStream) outputStream48);
        org.jboss.dmr.stream.ModelWriter modelWriter53 = modelWriter52.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter55 = modelWriter53.writeInt((int) (byte) 10);
        java.io.InputStream inputStream56 = null;
        org.jboss.dmr.Base64.InputStream inputStream58 = new org.jboss.dmr.Base64.InputStream(inputStream56, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue60 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str61 = longModelValue60.asString();
        byte[] byteArray62 = longModelValue60.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue63 = new org.jboss.dmr.BytesModelValue(byteArray62);
        int int66 = inputStream58.read(byteArray62, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter67 = modelWriter55.writeBytes(byteArray62);
        org.jboss.dmr.ModelNode modelNode69 = org.jboss.dmr.ModelNode.fromString("\"rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3GXAAEGV4cHJlc3Np\\nb24gImhpISJiAAAAAQF4\"");
        org.jboss.dmr.ModelNode modelNode71 = modelNode69.setExpression("AAAAIA==");
        org.jboss.dmr.ModelNode modelNode74 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long75 = modelNode74.asLong();
        org.jboss.dmr.ValueExpression valueExpression76 = modelNode74.asExpression();
        java.math.BigDecimal bigDecimal77 = valueExpression76.resolveBigDecimal();
        java.lang.String str78 = valueExpression76.getExpressionString();
        java.math.BigDecimal bigDecimal79 = valueExpression76.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue80 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal79);
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue81 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal79);
        org.jboss.dmr.ModelNode modelNode82 = modelNode69.set("\"(\\\"\\\" => (\\\"hi!\\\" => 0.0))\"", bigDecimal79);
        org.jboss.dmr.stream.ModelWriter modelWriter83 = modelWriter67.writeBigDecimal(bigDecimal79);
        org.jboss.dmr.stream.ModelWriter modelWriter84 = modelWriter83.writePropertyStart();
        stringModelValue1.write(modelWriter83);
        // The following exception was thrown during execution in test generation
        try {
            double double86 = stringModelValue1.asDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3R3AANW9yZy5qYm9z?cy5kbXIuc3RyZWFtLk1vZGVsRXhjZXB0aW9uOiBbKCJoaSEiID0+IDAuMCldcAADaGkhRAAAAAAA?AAAAeA==\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "1" + "'", str9, "1");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(modelReader17);
        org.junit.Assert.assertNotNull(modelReader23);
        org.junit.Assert.assertNotNull(modelReader28);
        org.junit.Assert.assertNotNull(modelWriter37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[114, 79, 48, 65, 66, 88, 78, 121, 65, 66, 100, 118, 99, 109, 99, 117, 97, 109, 74, 118, 99, 51, 77, 117, 90, 71, 49, 121, 76, 107, 49, 118, 90, 71, 86, 115, 84, 109, 57, 107, 90, 82, 119, 116, 111, 85, 83, 100, 111, 52, 52, 47, 68, 65, 65, 65, 101, 72, 66, 51, 82, 51, 65, 65, 78, 87, 57, 121, 90, 121, 53, 113, 89, 109, 57, 122, 10, 99, 121, 53, 107, 98, 88, 73, 117, 99, 51, 82, 121, 90, 87, 70, 116, 76, 107, 49, 118, 90, 71, 86, 115, 82, 88, 104, 106, 90, 88, 66, 48, 97, 87, 57, 117, 79, 105, 66, 98, 75, 67, 74, 111, 97, 83, 69, 105, 73, 68, 48, 43, 73, 68, 65, 117, 77, 67, 108, 100, 99, 65, 65, 68, 97, 71, 107, 104, 82, 65, 65, 65, 65, 65, 65, 65, 10, 65, 65, 65, 65, 101, 65, 61, 61]");
        org.junit.Assert.assertNotNull(modelStreamFactory41);
        org.junit.Assert.assertNotNull(modelReader46);
        org.junit.Assert.assertNotNull(modelWriter52);
        org.junit.Assert.assertNotNull(modelWriter53);
        org.junit.Assert.assertNotNull(modelWriter55);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "1" + "'", str61, "1");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(modelWriter67);
        org.junit.Assert.assertNotNull(modelNode69);
        org.junit.Assert.assertNotNull(modelNode71);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 1L + "'", long75 == 1L);
        org.junit.Assert.assertNotNull(valueExpression76);
        org.junit.Assert.assertNotNull(bigDecimal77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "1.0" + "'", str78, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal79);
        org.junit.Assert.assertNotNull(modelNode82);
        org.junit.Assert.assertNotNull(modelWriter83);
        org.junit.Assert.assertNotNull(modelWriter84);
    }

    @Test
    public void test13326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13326");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        org.jboss.dmr.ModelNode modelNode6 = objectModelValue0.removeChild("true");
        int int7 = objectModelValue0.asInt();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.Property property8 = objectModelValue0.asProperty();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(modelNode4);
        org.junit.Assert.assertNull(modelNode6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test13327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13327");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue(10);
        byte[] byteArray2 = intModelValue1.asBytes();
        int int4 = intModelValue1.asInt(0);
        int int5 = intModelValue1.asInt();
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode9 = modelNode6.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList10 = modelNode9.asList();
        org.jboss.dmr.ModelType modelType11 = modelNode9.getType();
        org.jboss.dmr.TypeModelValue typeModelValue12 = org.jboss.dmr.TypeModelValue.of(modelType11);
        java.lang.String str13 = typeModelValue12.asString();
        java.lang.String str14 = typeModelValue12.asString();
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode18 = modelNode15.setExpression("hi!", "hi!");
        java.lang.String str19 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode15);
        boolean boolean21 = modelNode15.hasDefined((-1));
        org.jboss.dmr.BooleanModelValue booleanModelValue22 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double23 = booleanModelValue22.asDouble();
        org.jboss.dmr.ModelValue modelValue24 = booleanModelValue22.copy();
        java.math.BigInteger bigInteger25 = booleanModelValue22.asBigInteger();
        org.jboss.dmr.ModelNode modelNode26 = new org.jboss.dmr.ModelNode(bigInteger25);
        org.jboss.dmr.ModelNode modelNode27 = new org.jboss.dmr.ModelNode(bigInteger25);
        org.jboss.dmr.ModelNode modelNode28 = modelNode15.set(bigInteger25);
        org.jboss.dmr.ModelNode modelNode29 = new org.jboss.dmr.ModelNode(bigInteger25);
        org.jboss.dmr.ModelType modelType30 = modelNode29.getType();
        boolean boolean31 = typeModelValue12.equals((java.lang.Object) modelType30);
        org.jboss.dmr.ValueExpression valueExpression32 = typeModelValue12.asExpression();
        boolean boolean33 = intModelValue1.equals((java.lang.Object) typeModelValue12);
        boolean boolean34 = typeModelValue12.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression35 = typeModelValue12.asExpression();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0, 0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(modelNodeList10);
        org.junit.Assert.assertTrue("'" + modelType11 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType11.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertNotNull(typeModelValue12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PROPERTY" + "'", str13, "PROPERTY");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PROPERTY" + "'", str14, "PROPERTY");
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str19, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(booleanModelValue22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue24);
        org.junit.Assert.assertNotNull(bigInteger25);
        org.junit.Assert.assertNotNull(modelNode28);
        org.junit.Assert.assertTrue("'" + modelType30 + "' != '" + org.jboss.dmr.ModelType.BIG_INTEGER + "'", modelType30.equals(org.jboss.dmr.ModelType.BIG_INTEGER));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(valueExpression32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(valueExpression35);
    }

    @Test
    public void test13328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13328");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        java.lang.String str2 = doubleModelValue1.asString();
        byte[] byteArray3 = doubleModelValue1.asBytes();
        java.math.BigInteger bigInteger4 = doubleModelValue1.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue5 = new org.jboss.dmr.BigIntegerModelValue(bigInteger4);
        int int7 = bigIntegerModelValue5.asInt(112);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "10.0" + "'", str2, "10.0");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(bigInteger4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
    }

    @Test
    public void test13329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13329");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("AA==");
        org.jboss.dmr.ValueExpression valueExpression2 = stringModelValue1.asExpression();
        java.lang.String str3 = stringModelValue1.asString();
        byte[] byteArray4 = stringModelValue1.asBytes();
        org.junit.Assert.assertNotNull(valueExpression2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AA==" + "'", str3, "AA==");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[65, 65, 61, 61]");
    }

    @Test
    public void test13330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13330");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        org.jboss.dmr.ModelValue modelValue2 = objectModelValue0.copy();
        java.lang.String str3 = objectModelValue0.toString();
        org.jboss.dmr.ObjectModelValue objectModelValue4 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode5 = objectModelValue4.asObject();
        java.util.Set<java.lang.String> strSet6 = objectModelValue4.getKeys();
        org.jboss.dmr.ModelNode modelNode8 = objectModelValue4.removeChild("1");
        boolean boolean9 = objectModelValue4.asBoolean();
        boolean boolean10 = objectModelValue0.equals(objectModelValue4);
        long long11 = objectModelValue4.asLong();
        org.jboss.dmr.ModelNode modelNode13 = objectModelValue4.getChild("\"\\\"bytes {\\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01\\n}\\\"\"");
        org.jboss.dmr.ModelNode modelNode15 = modelNode13.add(true);
        org.jboss.dmr.ModelNode modelNode16 = modelNode13.setEmptyList();
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{}" + "'", str3, "{}");
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNull(modelNode8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode15);
        org.junit.Assert.assertNotNull(modelNode16);
    }

    @Test
    public void test13331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13331");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        java.lang.String str2 = doubleModelValue1.asString();
        int int4 = doubleModelValue1.asInt((int) 'l');
        org.jboss.dmr.ValueExpression valueExpression5 = doubleModelValue1.asExpression();
        int int6 = doubleModelValue1.asInt();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "10.0" + "'", str2, "10.0");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
        org.junit.Assert.assertNotNull(valueExpression5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
    }

    @Test
    public void test13332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13332");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long3 = intModelValue1.asLong((long) 'b');
        java.lang.String str4 = intModelValue1.asString();
        java.math.BigInteger bigInteger5 = intModelValue1.asBigInteger();
        boolean boolean7 = intModelValue1.asBoolean(false);
        org.jboss.dmr.IntModelValue intModelValue9 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long11 = intModelValue9.asLong((long) 'b');
        java.lang.String str12 = intModelValue9.asString();
        boolean boolean13 = intModelValue1.equals(intModelValue9);
        int int15 = intModelValue9.asInt(112);
        double double16 = intModelValue9.asDouble();
        org.jboss.dmr.ValueExpression valueExpression17 = intModelValue9.asExpression();
        org.jboss.dmr.BooleanModelValue booleanModelValue18 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double19 = booleanModelValue18.asDouble();
        org.jboss.dmr.ModelValue modelValue20 = booleanModelValue18.copy();
        java.math.BigInteger bigInteger21 = booleanModelValue18.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue22 = new org.jboss.dmr.BigIntegerModelValue(bigInteger21);
        java.lang.String str23 = bigIntegerModelValue22.asString();
        long long25 = bigIntegerModelValue22.asLong(32L);
        double double26 = bigIntegerModelValue22.asDouble();
        org.jboss.dmr.BooleanModelValue booleanModelValue27 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double28 = booleanModelValue27.asDouble();
        org.jboss.dmr.ModelValue modelValue29 = booleanModelValue27.copy();
        java.math.BigInteger bigInteger30 = booleanModelValue27.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue31 = new org.jboss.dmr.BigIntegerModelValue(bigInteger30);
        double double33 = bigIntegerModelValue31.asDouble((double) 'b');
        boolean boolean34 = bigIntegerModelValue22.equals(bigIntegerModelValue31);
        org.jboss.dmr.BooleanModelValue booleanModelValue35 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double36 = booleanModelValue35.asDouble();
        org.jboss.dmr.ModelValue modelValue37 = booleanModelValue35.copy();
        java.math.BigInteger bigInteger38 = booleanModelValue35.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue39 = new org.jboss.dmr.BigIntegerModelValue(bigInteger38);
        long long41 = bigIntegerModelValue39.asLong((long) 'b');
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue42 = null;
        boolean boolean43 = bigIntegerModelValue39.equals(bigIntegerModelValue42);
        boolean boolean44 = bigIntegerModelValue22.equals(bigIntegerModelValue39);
        org.jboss.dmr.ModelValue modelValue45 = bigIntegerModelValue39.resolve();
        org.jboss.dmr.BooleanModelValue booleanModelValue46 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double47 = booleanModelValue46.asDouble();
        org.jboss.dmr.ModelValue modelValue48 = booleanModelValue46.copy();
        java.math.BigInteger bigInteger49 = booleanModelValue46.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue50 = new org.jboss.dmr.BigIntegerModelValue(bigInteger49);
        double double52 = bigIntegerModelValue50.asDouble((double) 'b');
        int int53 = bigIntegerModelValue50.asInt();
        boolean boolean54 = bigIntegerModelValue50.asBoolean();
        boolean boolean55 = bigIntegerModelValue39.equals(bigIntegerModelValue50);
        boolean boolean56 = intModelValue9.equals((java.lang.Object) bigIntegerModelValue39);
        java.math.BigDecimal bigDecimal57 = intModelValue9.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode58 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) intModelValue9);
        org.jboss.dmr.ValueExpression valueExpression59 = intModelValue9.asExpression();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 32L + "'", long3 == 32L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "32" + "'", str4, "32");
        org.junit.Assert.assertNotNull(bigInteger5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 32L + "'", long11 == 32L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "32" + "'", str12, "32");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 32 + "'", int15 == 32);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 32.0d + "'", double16 == 32.0d);
        org.junit.Assert.assertNotNull(valueExpression17);
        org.junit.Assert.assertNotNull(booleanModelValue18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue20);
        org.junit.Assert.assertNotNull(bigInteger21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1" + "'", str23, "1");
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(booleanModelValue27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue29);
        org.junit.Assert.assertNotNull(bigInteger30);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(booleanModelValue35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue37);
        org.junit.Assert.assertNotNull(bigInteger38);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(modelValue45);
        org.junit.Assert.assertNotNull(booleanModelValue46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue48);
        org.junit.Assert.assertNotNull(bigInteger49);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(bigDecimal57);
        org.junit.Assert.assertNotNull(valueExpression59);
    }

    @Test
    public void test13333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13333");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        org.jboss.dmr.ModelNode modelNode5 = objectModelValue0.asObject();
        boolean boolean6 = modelNode5.isProtected();
        org.jboss.dmr.ModelNode modelNode9 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long10 = modelNode9.asLong();
        org.jboss.dmr.ValueExpression valueExpression11 = modelNode9.asExpression();
        java.math.BigDecimal bigDecimal12 = valueExpression11.resolveBigDecimal();
        java.lang.String str13 = valueExpression11.getExpressionString();
        org.jboss.dmr.LongModelValue longModelValue15 = new org.jboss.dmr.LongModelValue(1L);
        long long17 = longModelValue15.asLong((long) (short) 0);
        java.lang.String str18 = longModelValue15.asString();
        org.jboss.dmr.ValueExpression valueExpression19 = longModelValue15.asExpression();
        int int20 = valueExpression19.resolveInt();
        boolean boolean21 = valueExpression11.equals(valueExpression19);
        org.jboss.dmr.ModelNode modelNode22 = modelNode5.set("AAAAZA==", valueExpression11);
        org.jboss.dmr.Property property23 = modelNode22.asProperty();
        org.jboss.dmr.BooleanModelValue booleanModelValue25 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger26 = booleanModelValue25.asBigInteger();
        java.math.BigInteger bigInteger27 = booleanModelValue25.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue28 = new org.jboss.dmr.BigIntegerModelValue(bigInteger27);
        org.jboss.dmr.ModelNode modelNode29 = modelNode22.set(bigInteger27);
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertNotNull(valueExpression11);
        org.junit.Assert.assertNotNull(bigDecimal12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1.0" + "'", str13, "1.0");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1" + "'", str18, "1");
        org.junit.Assert.assertNotNull(valueExpression19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(modelNode22);
        org.junit.Assert.assertNotNull(property23);
        org.junit.Assert.assertNotNull(booleanModelValue25);
        org.junit.Assert.assertNotNull(bigInteger26);
        org.junit.Assert.assertNotNull(bigInteger27);
        org.junit.Assert.assertNotNull(modelNode29);
    }

    @Test
    public void test13334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13334");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        java.math.BigInteger bigInteger1 = booleanModelValue0.asBigInteger();
        java.math.BigDecimal bigDecimal2 = booleanModelValue0.asBigDecimal();
        boolean boolean3 = booleanModelValue0.asBoolean();
        double double5 = booleanModelValue0.asDouble((double) (byte) 0);
        byte[] byteArray6 = booleanModelValue0.asBytes();
        boolean boolean8 = booleanModelValue0.asBoolean(true);
        java.lang.String str9 = booleanModelValue0.asString();
        byte[] byteArray10 = booleanModelValue0.asBytes();
        byte[] byteArray11 = booleanModelValue0.asBytes();
        java.math.BigDecimal bigDecimal12 = booleanModelValue0.asBigDecimal();
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertNotNull(bigInteger1);
        org.junit.Assert.assertNotNull(bigDecimal2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true" + "'", str9, "true");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1]");
        org.junit.Assert.assertNotNull(bigDecimal12);
    }

    @Test
    public void test13335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13335");
        org.jboss.dmr.ExpressionValue expressionValue1 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue3 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean4 = expressionValue1.equals(expressionValue3);
        org.jboss.dmr.ExpressionValue expressionValue6 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue8 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean9 = expressionValue6.equals(expressionValue8);
        boolean boolean10 = expressionValue1.equals(expressionValue8);
        org.jboss.dmr.ModelNode modelNode12 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long13 = modelNode12.asLong();
        org.jboss.dmr.ValueExpression valueExpression14 = modelNode12.asExpression();
        boolean boolean15 = expressionValue8.equals((java.lang.Object) modelNode12);
        java.io.DataInputStream dataInputStream16 = null;
        // The following exception was thrown during execution in test generation
        try {
            modelNode12.readExternal(dataInputStream16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(valueExpression14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test13336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13336");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        boolean boolean5 = objectModelValue0.asBoolean();
        int int7 = objectModelValue0.asInt((int) 'b');
        org.jboss.dmr.ModelNode modelNode8 = objectModelValue0.asObject();
        org.jboss.dmr.ModelNode modelNode9 = modelNode8.clone();
        org.jboss.dmr.ModelNode modelNode11 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode14 = modelNode11.set("hi!", 0.0d);
        org.jboss.dmr.Property property15 = new org.jboss.dmr.Property("", modelNode14);
        java.lang.String[] strArray16 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode17 = modelNode14.get(strArray16);
        org.jboss.dmr.ModelNode modelNode18 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode21 = modelNode18.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList22 = modelNode21.asList();
        org.jboss.dmr.ListModelValue listModelValue23 = new org.jboss.dmr.ListModelValue(modelNodeList22);
        org.jboss.dmr.ModelNode modelNode24 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue23);
        org.jboss.dmr.ModelValue modelValue25 = listModelValue23.resolve();
        int int27 = listModelValue23.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList28 = listModelValue23.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList29 = modelNode17.asPropertyList(propertyList28);
        org.jboss.dmr.ModelNode modelNode32 = modelNode17.setExpression("\"(\\\"hi!\\\" => 0.0)\"", "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.jboss.dmr.ModelNode modelNode35 = modelNode17.set("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AloAeA==", (double) 0.0f);
        boolean boolean37 = modelNode17.hasDefined((int) 'b');
        org.jboss.dmr.ModelNode modelNode40 = modelNode17.set("Expression \"hi!\"", false);
        org.jboss.dmr.StringModelValue stringModelValue42 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        org.jboss.dmr.ValueExpression valueExpression43 = stringModelValue42.asExpression();
        org.jboss.dmr.ModelNode modelNode44 = new org.jboss.dmr.ModelNode(valueExpression43);
        org.jboss.dmr.ModelNode modelNode46 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode49 = modelNode46.set("hi!", 0.0d);
        org.jboss.dmr.Property property50 = new org.jboss.dmr.Property("", modelNode49);
        java.lang.String[] strArray51 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode52 = modelNode49.get(strArray51);
        boolean boolean53 = modelNode44.has(strArray51);
        boolean boolean54 = modelNode17.has(strArray51);
        org.jboss.dmr.ModelNode modelNode55 = modelNode8.get(strArray51);
        org.jboss.dmr.ModelNode modelNode58 = modelNode55.set("expression \"1\"", (int) 'I');
        java.io.PrintWriter printWriter59 = null;
        // The following exception was thrown during execution in test generation
        try {
            modelNode58.writeString(printWriter59, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Parameter cannot be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(modelNode4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertNotNull(modelNode21);
        org.junit.Assert.assertNotNull(modelNodeList22);
        org.junit.Assert.assertNotNull(modelValue25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(propertyList28);
        org.junit.Assert.assertNotNull(propertyList29);
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertNotNull(modelNode35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(modelNode40);
        org.junit.Assert.assertNotNull(valueExpression43);
        org.junit.Assert.assertNotNull(modelNode49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(modelNode52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(modelNode55);
        org.junit.Assert.assertNotNull(modelNode58);
    }

    @Test
    public void test13337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13337");
        java.io.OutputStream outputStream0 = null;
        org.jboss.dmr.Base64.OutputStream outputStream1 = new org.jboss.dmr.Base64.OutputStream(outputStream0);
        outputStream1.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream3 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream1);
        org.jboss.dmr.Base64.OutputStream outputStream4 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream3);
        outputStream4.flushBase64();
        outputStream4.flushBase64();
        outputStream4.flushBase64();
        outputStream4.write((int) (byte) 100);
    }

    @Test
    public void test13338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13338");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue(0);
        java.lang.Throwable throwable4 = null;
        org.jboss.dmr.stream.ModelException modelException5 = new org.jboss.dmr.stream.ModelException("[(\"hi!\" => 0.0)]", throwable4);
        org.jboss.dmr.stream.ModelException modelException6 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException5);
        java.lang.Throwable throwable8 = null;
        org.jboss.dmr.stream.ModelException modelException9 = new org.jboss.dmr.stream.ModelException("[(\"hi!\" => 0.0)]", throwable8);
        org.jboss.dmr.stream.ModelException modelException10 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException9);
        modelException5.addSuppressed((java.lang.Throwable) modelException9);
        java.lang.Throwable[] throwableArray12 = modelException9.getSuppressed();
        org.jboss.dmr.stream.ModelException modelException13 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException9);
        org.jboss.dmr.stream.ModelException modelException14 = new org.jboss.dmr.stream.ModelException("32", (java.lang.Throwable) modelException9);
        boolean boolean15 = intModelValue1.equals((java.lang.Object) modelException14);
        boolean boolean17 = intModelValue1.asBoolean(false);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test13339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13339");
        java.lang.String str1 = org.jboss.dmr.ModelValue.jsonEscape("(\"org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\\\"hi!\\\" => 0.0)]\" => (\"hi!\" => 0.0))");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"(\\\"org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\\\\\\\"hi!\\\\\\\" => 0.0)]\\\" => (\\\"hi!\\\" => 0.0))\"" + "'", str1, "\"(\\\"org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\\\\\\\"hi!\\\\\\\" => 0.0)]\\\" => (\\\"hi!\\\" => 0.0))\"");
    }

    @Test
    public void test13340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13340");
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode((int) 'a');
        org.jboss.dmr.ModelNode modelNode3 = modelNode2.setEmptyList();
        org.jboss.dmr.ObjectModelValue objectModelValue4 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode5 = objectModelValue4.asObject();
        java.util.Set<java.lang.String> strSet6 = objectModelValue4.getKeys();
        boolean boolean8 = objectModelValue4.has((int) 'a');
        boolean boolean10 = objectModelValue4.has("");
        org.jboss.dmr.ObjectModelValue objectModelValue11 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode12 = objectModelValue11.asObject();
        java.util.Set<java.lang.String> strSet13 = objectModelValue11.getKeys();
        boolean boolean15 = objectModelValue11.has((int) 'a');
        boolean boolean16 = objectModelValue4.equals(objectModelValue11);
        org.jboss.dmr.ModelNode modelNode17 = objectModelValue11.asObject();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList18 = objectModelValue11.asList();
        org.jboss.dmr.ModelNode modelNode19 = modelNode2.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList18);
        org.jboss.dmr.Property property21 = new org.jboss.dmr.Property("bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }", modelNode2, true);
        org.jboss.dmr.ModelNode modelNode23 = modelNode2.add(2);
        boolean boolean25 = modelNode23.asBoolean(false);
        boolean boolean27 = modelNode23.hasDefined("AAAAIA==");
        org.jboss.dmr.ModelNode modelNode29 = modelNode23.add((int) 'J');
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertNotNull(modelNodeList18);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(modelNode23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(modelNode29);
    }

    @Test
    public void test13341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13341");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) 10.0f);
    }

    @Test
    public void test13342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13342");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("[big integer 1,big integer 1]");
        org.jboss.dmr.ValueExpression valueExpression2 = stringModelValue1.asExpression();
        org.jboss.dmr.IntModelValue intModelValue4 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long6 = intModelValue4.asLong((long) 'b');
        java.lang.String str7 = intModelValue4.asString();
        java.math.BigDecimal bigDecimal8 = intModelValue4.asBigDecimal();
        java.math.BigInteger bigInteger9 = intModelValue4.asBigInteger();
        org.jboss.dmr.ModelNode modelNode11 = new org.jboss.dmr.ModelNode("EXPRESSION_VALUE");
        org.jboss.dmr.BooleanModelValue booleanModelValue14 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger15 = booleanModelValue14.asBigInteger();
        byte[] byteArray16 = booleanModelValue14.asBytes();
        org.jboss.dmr.ModelNode modelNode17 = modelNode11.set("expression \"hi!\"", byteArray16);
        org.jboss.dmr.ModelNode modelNode18 = modelNode17.clear();
        org.jboss.dmr.BooleanModelValue booleanModelValue20 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger21 = booleanModelValue20.asBigInteger();
        byte[] byteArray22 = booleanModelValue20.asBytes();
        boolean boolean23 = booleanModelValue20.asBoolean();
        byte[] byteArray24 = booleanModelValue20.asBytes();
        org.jboss.dmr.DoubleModelValue doubleModelValue26 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long27 = doubleModelValue26.asLong();
        boolean boolean28 = doubleModelValue26.asBoolean();
        byte[] byteArray29 = doubleModelValue26.asBytes();
        java.math.BigInteger bigInteger30 = doubleModelValue26.asBigInteger();
        boolean boolean31 = booleanModelValue20.equals((java.lang.Object) bigInteger30);
        org.jboss.dmr.ModelNode modelNode32 = modelNode17.set(bigInteger30);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory34 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream35 = null;
        org.jboss.dmr.Base64.InputStream inputStream37 = new org.jboss.dmr.Base64.InputStream(inputStream35, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream38 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream37);
        org.jboss.dmr.stream.ModelReader modelReader39 = modelStreamFactory34.newModelReader((java.io.InputStream) inputStream38);
        java.io.OutputStream outputStream40 = null;
        org.jboss.dmr.Base64.OutputStream outputStream41 = new org.jboss.dmr.Base64.OutputStream(outputStream40);
        org.jboss.dmr.Base64.OutputStream outputStream42 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream41);
        outputStream41.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter45 = modelStreamFactory34.newModelWriter((java.io.OutputStream) outputStream41);
        org.jboss.dmr.stream.ModelWriter modelWriter46 = modelWriter45.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter48 = modelWriter45.writeInt((int) '4');
        org.jboss.dmr.stream.ModelWriter modelWriter50 = modelWriter48.writeBoolean(true);
        org.jboss.dmr.stream.ModelWriter modelWriter52 = modelWriter48.writeBoolean(true);
        org.jboss.dmr.stream.ModelWriter modelWriter54 = modelWriter48.writeLong((long) 52);
        modelNode17.write(modelWriter54);
        intModelValue4.write(modelWriter54);
        stringModelValue1.write(modelWriter54);
        org.jboss.dmr.ModelValue modelValue58 = stringModelValue1.clone();
        org.junit.Assert.assertNotNull(valueExpression2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 32L + "'", long6 == 32L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "32" + "'", str7, "32");
        org.junit.Assert.assertNotNull(bigDecimal8);
        org.junit.Assert.assertNotNull(bigInteger9);
        org.junit.Assert.assertNotNull(booleanModelValue14);
        org.junit.Assert.assertNotNull(bigInteger15);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[1]");
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertNotNull(booleanModelValue20);
        org.junit.Assert.assertNotNull(bigInteger21);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[1]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1]");
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10L + "'", long27 == 10L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(bigInteger30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertNotNull(modelStreamFactory34);
        org.junit.Assert.assertNotNull(modelReader39);
        org.junit.Assert.assertNotNull(modelWriter45);
        org.junit.Assert.assertNotNull(modelWriter46);
        org.junit.Assert.assertNotNull(modelWriter48);
        org.junit.Assert.assertNotNull(modelWriter50);
        org.junit.Assert.assertNotNull(modelWriter52);
        org.junit.Assert.assertNotNull(modelWriter54);
        org.junit.Assert.assertNotNull(modelValue58);
    }

    @Test
    public void test13343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13343");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long3 = intModelValue1.asLong((long) '#');
        org.jboss.dmr.IntModelValue intModelValue5 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long7 = intModelValue5.asLong((long) 'b');
        java.lang.String str8 = intModelValue5.asString();
        boolean boolean9 = intModelValue1.equals(intModelValue5);
        boolean boolean11 = intModelValue5.asBoolean(true);
        org.jboss.dmr.ValueExpression valueExpression12 = intModelValue5.asExpression();
        org.jboss.dmr.IntModelValue intModelValue14 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long16 = intModelValue14.asLong((long) '#');
        org.jboss.dmr.IntModelValue intModelValue18 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long20 = intModelValue18.asLong((long) 'b');
        java.lang.String str21 = intModelValue18.asString();
        boolean boolean22 = intModelValue14.equals(intModelValue18);
        int int24 = intModelValue14.asInt(1);
        boolean boolean25 = intModelValue5.equals(intModelValue14);
        org.jboss.dmr.ObjectModelValue objectModelValue26 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode27 = objectModelValue26.asObject();
        boolean boolean28 = intModelValue5.equals((java.lang.Object) objectModelValue26);
        boolean boolean29 = intModelValue5.asBoolean();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 32L + "'", long3 == 32L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 32L + "'", long7 == 32L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "32" + "'", str8, "32");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(valueExpression12);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 32L + "'", long20 == 32L);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "32" + "'", str21, "32");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 32 + "'", int24 == 32);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test13344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13344");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream5 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4);
        org.jboss.dmr.stream.ModelReader modelReader6 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream5);
        java.io.OutputStream outputStream7 = null;
        org.jboss.dmr.Base64.OutputStream outputStream8 = new org.jboss.dmr.Base64.OutputStream(outputStream7);
        org.jboss.dmr.Base64.OutputStream outputStream9 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream8);
        outputStream8.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter12 = modelStreamFactory1.newModelWriter((java.io.OutputStream) outputStream8);
        byte[] byteArray13 = null;
        // The following exception was thrown during execution in test generation
        try {
            outputStream8.write(byteArray13, (int) 'e', (int) 'D');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertNotNull(modelReader6);
        org.junit.Assert.assertNotNull(modelWriter12);
    }

    @Test
    public void test13345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13345");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        org.jboss.dmr.ModelNode modelNode5 = objectModelValue0.asObject();
        org.jboss.dmr.ModelNode modelNode6 = objectModelValue0.asObject();
        org.jboss.dmr.ModelNode modelNode8 = objectModelValue0.removeChild("org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList9 = objectModelValue0.asList();
        java.util.List<org.jboss.dmr.Property> propertyList10 = objectModelValue0.asPropertyList();
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNodeList9);
        org.junit.Assert.assertNotNull(propertyList10);
    }

    @Test
    public void test13346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13346");
        org.jboss.dmr.ExpressionValue expressionValue1 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue3 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean4 = expressionValue1.equals(expressionValue3);
        org.jboss.dmr.ExpressionValue expressionValue6 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue8 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean9 = expressionValue6.equals(expressionValue8);
        boolean boolean10 = expressionValue1.equals(expressionValue8);
        org.jboss.dmr.ModelNode modelNode12 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long13 = modelNode12.asLong();
        org.jboss.dmr.ValueExpression valueExpression14 = modelNode12.asExpression();
        boolean boolean15 = expressionValue8.equals((java.lang.Object) modelNode12);
        java.math.BigInteger bigInteger16 = modelNode12.asBigInteger();
        org.jboss.dmr.ValueExpression valueExpression18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode19 = modelNode12.set("rO0ABXNyABNqYXZhLmxhbmcuQ2hhcmFjdGVyNItH2WsaJngCAAFDAAV2YWx1ZXhwAGI=", valueExpression18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: newValue is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(valueExpression14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(bigInteger16);
    }

    @Test
    public void test13347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13347");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.setExpression("hi!", "hi!");
        java.lang.String str4 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode0);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList5 = modelNode0.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode7 = modelNode0.set((double) 0);
        org.jboss.dmr.ModelNode modelNode8 = modelNode0.clear();
        org.jboss.dmr.ObjectModelValue objectModelValue9 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode10 = objectModelValue9.asObject();
        java.util.Set<java.lang.String> strSet11 = objectModelValue9.getKeys();
        org.jboss.dmr.ModelNode modelNode13 = objectModelValue9.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        boolean boolean14 = objectModelValue9.asBoolean();
        int int16 = objectModelValue9.asInt((int) 'b');
        org.jboss.dmr.ModelNode modelNode17 = objectModelValue9.asObject();
        java.util.Set<java.lang.String> strSet18 = modelNode17.keys();
        org.jboss.dmr.ModelNode modelNode19 = modelNode0.add(modelNode17);
        boolean boolean20 = modelNode19.asBoolean();
        org.jboss.dmr.BooleanModelValue booleanModelValue23 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger24 = booleanModelValue23.asBigInteger();
        byte[] byteArray25 = booleanModelValue23.asBytes();
        boolean boolean26 = booleanModelValue23.asBoolean();
        byte[] byteArray27 = booleanModelValue23.asBytes();
        org.jboss.dmr.ModelNode modelNode28 = modelNode19.set("[1]", byteArray27);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode31 = modelNode28.add("\"bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }\"", false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str4, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList5);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(modelNode13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(booleanModelValue23);
        org.junit.Assert.assertNotNull(bigInteger24);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1]");
        org.junit.Assert.assertNotNull(modelNode28);
    }

    @Test
    public void test13348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13348");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        int int6 = bigIntegerModelValue4.asInt((int) (short) 1);
        org.jboss.dmr.BooleanModelValue booleanModelValue7 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double8 = booleanModelValue7.asDouble();
        org.jboss.dmr.ModelValue modelValue9 = booleanModelValue7.copy();
        java.math.BigInteger bigInteger10 = booleanModelValue7.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue11 = new org.jboss.dmr.BigIntegerModelValue(bigInteger10);
        java.lang.String str12 = bigIntegerModelValue11.asString();
        java.math.BigInteger bigInteger13 = bigIntegerModelValue11.asBigInteger();
        boolean boolean14 = bigIntegerModelValue4.equals(bigIntegerModelValue11);
        double double16 = bigIntegerModelValue4.asDouble(0.0d);
        int int17 = bigIntegerModelValue4.asInt();
        org.jboss.dmr.ModelNode modelNode18 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode21 = modelNode18.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList22 = modelNode21.asList();
        java.lang.String str24 = modelNode21.asString("true");
        org.jboss.dmr.ModelNode modelNode26 = modelNode21.set((double) 'a');
        org.jboss.dmr.LongModelValue longModelValue28 = new org.jboss.dmr.LongModelValue(1L);
        long long30 = longModelValue28.asLong((long) (short) 0);
        java.lang.String str31 = longModelValue28.asString();
        org.jboss.dmr.ValueExpression valueExpression32 = longModelValue28.asExpression();
        int int33 = valueExpression32.resolveInt();
        org.jboss.dmr.ModelNode modelNode34 = modelNode21.set(valueExpression32);
        org.jboss.dmr.IntModelValue intModelValue36 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str37 = intModelValue36.asString();
        double double39 = intModelValue36.asDouble((double) 2);
        java.math.BigDecimal bigDecimal40 = intModelValue36.asBigDecimal();
        boolean boolean41 = valueExpression32.equals((java.lang.Object) intModelValue36);
        int int42 = intModelValue36.asInt();
        org.jboss.dmr.IntModelValue intModelValue44 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long46 = intModelValue44.asLong((long) 'b');
        java.lang.String str47 = intModelValue44.asString();
        java.math.BigInteger bigInteger48 = intModelValue44.asBigInteger();
        double double50 = intModelValue44.asDouble(0.0d);
        double double51 = intModelValue44.asDouble();
        boolean boolean52 = intModelValue44.asBoolean();
        int int53 = intModelValue44.asInt();
        boolean boolean54 = intModelValue36.equals(intModelValue44);
        boolean boolean55 = bigIntegerModelValue4.equals((java.lang.Object) boolean54);
        double double57 = bigIntegerModelValue4.asDouble((double) 35);
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanModelValue7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue9);
        org.junit.Assert.assertNotNull(bigInteger10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1" + "'", str12, "1");
        org.junit.Assert.assertNotNull(bigInteger13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(modelNode21);
        org.junit.Assert.assertNotNull(modelNodeList22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(\"hi!\" => 0.0)" + "'", str24, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1" + "'", str31, "1");
        org.junit.Assert.assertNotNull(valueExpression32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(modelNode34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "32" + "'", str37, "32");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 32.0d + "'", double39 == 32.0d);
        org.junit.Assert.assertNotNull(bigDecimal40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 32 + "'", int42 == 32);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 32L + "'", long46 == 32L);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "32" + "'", str47, "32");
        org.junit.Assert.assertNotNull(bigInteger48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 32.0d + "'", double50 == 32.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 32.0d + "'", double51 == 32.0d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 32 + "'", int53 == 32);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
    }

    @Test
    public void test13349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13349");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        boolean boolean4 = objectModelValue0.has((int) 'a');
        boolean boolean6 = objectModelValue0.has("");
        org.jboss.dmr.ObjectModelValue objectModelValue7 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode8 = objectModelValue7.asObject();
        java.util.Set<java.lang.String> strSet9 = objectModelValue7.getKeys();
        boolean boolean11 = objectModelValue7.has((int) 'a');
        boolean boolean12 = objectModelValue0.equals(objectModelValue7);
        org.jboss.dmr.ModelNode modelNode13 = objectModelValue7.asObject();
        java.util.List<org.jboss.dmr.Property> propertyList14 = objectModelValue7.asPropertyList();
        org.jboss.dmr.ObjectModelValue objectModelValue15 = new org.jboss.dmr.ObjectModelValue();
        boolean boolean16 = objectModelValue15.asBoolean();
        int int18 = objectModelValue15.asInt(0);
        org.jboss.dmr.ModelValue modelValue20 = objectModelValue15.copy(false);
        boolean boolean21 = objectModelValue7.equals(objectModelValue15);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory23 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream24 = null;
        org.jboss.dmr.Base64.InputStream inputStream26 = new org.jboss.dmr.Base64.InputStream(inputStream24, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream27 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream26);
        org.jboss.dmr.stream.ModelReader modelReader28 = modelStreamFactory23.newModelReader((java.io.InputStream) inputStream27);
        java.io.OutputStream outputStream29 = null;
        org.jboss.dmr.Base64.OutputStream outputStream30 = new org.jboss.dmr.Base64.OutputStream(outputStream29);
        org.jboss.dmr.Base64.OutputStream outputStream31 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream30);
        outputStream30.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter34 = modelStreamFactory23.newModelWriter((java.io.OutputStream) outputStream30);
        org.jboss.dmr.stream.ModelWriter modelWriter35 = modelWriter34.writeListStart();
        org.jboss.dmr.ModelNode modelNode37 = new org.jboss.dmr.ModelNode(true);
        org.jboss.dmr.ModelNode modelNode38 = modelNode37.resolve();
        java.lang.String str39 = modelNode37.asString();
        org.jboss.dmr.ModelNode modelNode41 = modelNode37.set((long) 52);
        org.jboss.dmr.ModelNode modelNode43 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode46 = modelNode43.setExpression("hi!", "hi!");
        java.lang.String str47 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode43);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList48 = modelNode43.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode50 = modelNode43.set((double) 0);
        org.jboss.dmr.ModelType modelType52 = org.jboss.dmr.ModelType.PROPERTY;
        char char53 = modelType52.getTypeChar();
        org.jboss.dmr.ModelNode modelNode54 = modelNode43.set("[(\"hi!\" => 0.0)]", modelType52);
        org.jboss.dmr.Property property55 = new org.jboss.dmr.Property("\"(\\\"hi!\\\" => 0.0)\"", modelNode54);
        org.jboss.dmr.ModelNode modelNode56 = modelNode41.set(property55);
        org.jboss.dmr.ModelNode modelNode58 = modelNode41.set(false);
        boolean boolean59 = modelNode58.isProtected();
        org.jboss.dmr.ModelType modelType61 = org.jboss.dmr.ModelType.PROPERTY;
        char char62 = modelType61.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue63 = org.jboss.dmr.TypeModelValue.of(modelType61);
        char char64 = modelType61.getTypeChar();
        org.jboss.dmr.ModelNode modelNode65 = modelNode58.set("rO0ABXQAByJbOTdMXSI=", modelType61);
        org.jboss.dmr.stream.ModelWriter modelWriter66 = modelWriter35.writeType(modelType61);
        org.jboss.dmr.stream.ModelWriter modelWriter68 = modelWriter66.writeBoolean(true);
        org.jboss.dmr.stream.ModelWriter modelWriter70 = modelWriter68.writeLong((long) 1);
        objectModelValue15.write(modelWriter68);
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(propertyList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(modelValue20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(modelStreamFactory23);
        org.junit.Assert.assertNotNull(modelReader28);
        org.junit.Assert.assertNotNull(modelWriter34);
        org.junit.Assert.assertNotNull(modelWriter35);
        org.junit.Assert.assertNotNull(modelNode38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "true" + "'", str39, "true");
        org.junit.Assert.assertNotNull(modelNode41);
        org.junit.Assert.assertNotNull(modelNode46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str47, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList48);
        org.junit.Assert.assertNotNull(modelNode50);
        org.junit.Assert.assertTrue("'" + modelType52 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType52.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char53 + "' != '" + 'p' + "'", char53 == 'p');
        org.junit.Assert.assertNotNull(modelNode54);
        org.junit.Assert.assertNotNull(modelNode56);
        org.junit.Assert.assertNotNull(modelNode58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + modelType61 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType61.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char62 + "' != '" + 'p' + "'", char62 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue63);
        org.junit.Assert.assertTrue("'" + char64 + "' != '" + 'p' + "'", char64 == 'p');
        org.junit.Assert.assertNotNull(modelNode65);
        org.junit.Assert.assertNotNull(modelWriter66);
        org.junit.Assert.assertNotNull(modelWriter68);
        org.junit.Assert.assertNotNull(modelWriter70);
    }

    @Test
    public void test13350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13350");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("BYTES_VALUE");
        org.jboss.dmr.ValueExpression valueExpression2 = stringModelValue1.asExpression();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean4 = stringModelValue1.asBoolean(true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(valueExpression2);
    }

    @Test
    public void test13351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13351");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        int int9 = bigDecimalModelValue7.asInt(0);
        int int10 = bigDecimalModelValue7.asInt();
        int int11 = bigDecimalModelValue7.asInt();
        java.lang.String str12 = bigDecimalModelValue7.asString();
        double double13 = bigDecimalModelValue7.asDouble();
        org.jboss.dmr.ModelValue modelValue14 = bigDecimalModelValue7.copy();
        org.jboss.dmr.ModelNode modelNode16 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long17 = modelNode16.asLong();
        org.jboss.dmr.ValueExpression valueExpression18 = modelNode16.asExpression();
        java.math.BigDecimal bigDecimal19 = valueExpression18.resolveBigDecimal();
        java.lang.String str20 = valueExpression18.getExpressionString();
        java.math.BigDecimal bigDecimal21 = valueExpression18.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue22 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal21);
        boolean boolean23 = bigDecimalModelValue22.asBoolean();
        long long24 = bigDecimalModelValue22.asLong();
        boolean boolean25 = bigDecimalModelValue7.equals(bigDecimalModelValue22);
        java.math.BigInteger bigInteger26 = bigDecimalModelValue7.asBigInteger();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1.0" + "'", str12, "1.0");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue14);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNotNull(valueExpression18);
        org.junit.Assert.assertNotNull(bigDecimal19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1.0" + "'", str20, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1L + "'", long24 == 1L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(bigInteger26);
    }

    @Test
    public void test13352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13352");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.removeChild("hi!");
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList5 = objectModelValue0.asList();
        org.jboss.dmr.ModelNode modelNode7 = objectModelValue0.getChild("\"bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }\"");
        org.jboss.dmr.ModelNode modelNode9 = modelNode7.add((long) 'a');
        int int11 = modelNode7.asInt((int) (byte) -1);
        java.lang.String str13 = modelNode7.toJSONString(true);
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode((long) 10);
        java.lang.String str17 = modelNode15.asString("true");
        org.jboss.dmr.ModelNode modelNode19 = modelNode15.set((double) 100);
        org.jboss.dmr.ModelNode modelNode21 = modelNode15.set(0);
        org.jboss.dmr.ExpressionValue expressionValue23 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue25 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean26 = expressionValue23.equals(expressionValue25);
        org.jboss.dmr.ExpressionValue expressionValue28 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue30 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean31 = expressionValue28.equals(expressionValue30);
        boolean boolean32 = expressionValue23.equals(expressionValue30);
        org.jboss.dmr.ValueExpression valueExpression33 = expressionValue30.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue35 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ValueExpression valueExpression36 = expressionValue35.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue38 = new org.jboss.dmr.ExpressionValue("hi!");
        java.lang.String str39 = expressionValue38.toString();
        org.jboss.dmr.ModelNode modelNode41 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode44 = modelNode41.set("hi!", 0.0d);
        org.jboss.dmr.Property property45 = new org.jboss.dmr.Property("", modelNode44);
        boolean boolean46 = expressionValue38.equals((java.lang.Object) property45);
        boolean boolean47 = expressionValue35.equals(expressionValue38);
        boolean boolean48 = expressionValue30.equals((java.lang.Object) boolean47);
        org.jboss.dmr.ValueExpression valueExpression49 = expressionValue30.asExpression();
        org.jboss.dmr.ModelNode modelNode50 = new org.jboss.dmr.ModelNode(valueExpression49);
        org.jboss.dmr.DoubleModelValue doubleModelValue53 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        int int55 = doubleModelValue53.asInt((int) 'l');
        java.math.BigDecimal bigDecimal56 = doubleModelValue53.asBigDecimal();
        byte[] byteArray57 = doubleModelValue53.asBytes();
        double double59 = doubleModelValue53.asDouble(1.0d);
        java.lang.String str60 = doubleModelValue53.asString();
        byte[] byteArray61 = doubleModelValue53.asBytes();
        org.jboss.dmr.ModelNode modelNode62 = modelNode50.set("Expression \"true\"", byteArray61);
        boolean boolean63 = modelNode21.equals((java.lang.Object) byteArray61);
        java.lang.String str65 = org.jboss.dmr.Base64.encodeBytes(byteArray61, (int) 'l');
        org.jboss.dmr.ModelNode modelNode66 = modelNode7.add(byteArray61);
        org.jboss.dmr.ModelNode modelNode68 = new org.jboss.dmr.ModelNode("\"(\\\"\\\" => (\\\"hi!\\\" => 0.0))\"");
        org.jboss.dmr.ModelNode modelNode70 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode73 = modelNode70.setExpression("hi!", "hi!");
        java.lang.String str74 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode70);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList75 = modelNode70.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode77 = modelNode70.set((double) 0);
        org.jboss.dmr.ModelNode modelNode78 = modelNode70.clear();
        org.jboss.dmr.IntModelValue intModelValue81 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long83 = intModelValue81.asLong((long) 'b');
        java.lang.String str84 = intModelValue81.asString();
        java.math.BigInteger bigInteger85 = intModelValue81.asBigInteger();
        org.jboss.dmr.ModelNode modelNode86 = modelNode78.add("H4sIAAAAAAAAAAMAAAAAAAAAAAA=", bigInteger85);
        org.jboss.dmr.ModelNode modelNode87 = modelNode68.set("org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]", bigInteger85);
        org.jboss.dmr.ModelNode modelNode88 = modelNode87.asObject();
        org.jboss.dmr.ModelNode modelNode89 = modelNode88.asObject();
        org.jboss.dmr.ModelNode modelNode91 = modelNode89.set(false);
        org.jboss.dmr.ModelNode modelNode92 = modelNode66.add(modelNode89);
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNodeList5);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97]" + "'", str13, "[97]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "10" + "'", str17, "10");
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(modelNode21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(valueExpression33);
        org.junit.Assert.assertNotNull(valueExpression36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "expression \"hi!\"" + "'", str39, "expression \"hi!\"");
        org.junit.Assert.assertNotNull(modelNode44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(valueExpression49);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 10 + "'", int55 == 10);
        org.junit.Assert.assertNotNull(bigDecimal56);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "10.0" + "'", str60, "10.0");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(modelNode62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "QCQAAAAAAAA=" + "'", str65, "QCQAAAAAAAA=");
        org.junit.Assert.assertNotNull(modelNode66);
        org.junit.Assert.assertNotNull(modelNode73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str74, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList75);
        org.junit.Assert.assertNotNull(modelNode77);
        org.junit.Assert.assertNotNull(modelNode78);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 32L + "'", long83 == 32L);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "32" + "'", str84, "32");
        org.junit.Assert.assertNotNull(bigInteger85);
        org.junit.Assert.assertNotNull(modelNode86);
        org.junit.Assert.assertNotNull(modelNode87);
        org.junit.Assert.assertNotNull(modelNode88);
        org.junit.Assert.assertNotNull(modelNode89);
        org.junit.Assert.assertNotNull(modelNode91);
        org.junit.Assert.assertNotNull(modelNode92);
    }

    @Test
    public void test13353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13353");
        java.lang.Throwable throwable1 = null;
        org.jboss.dmr.stream.ModelException modelException2 = new org.jboss.dmr.stream.ModelException("[(\"hi!\" => 0.0)]", throwable1);
        org.jboss.dmr.stream.ModelException modelException3 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException2);
        java.lang.Throwable throwable5 = null;
        org.jboss.dmr.stream.ModelException modelException6 = new org.jboss.dmr.stream.ModelException("[(\"hi!\" => 0.0)]", throwable5);
        org.jboss.dmr.stream.ModelException modelException7 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException6);
        modelException2.addSuppressed((java.lang.Throwable) modelException6);
        java.lang.Throwable[] throwableArray9 = modelException6.getSuppressed();
        org.jboss.dmr.stream.ModelException modelException10 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException6);
        org.jboss.dmr.stream.ModelException modelException13 = new org.jboss.dmr.stream.ModelException("\"35\"");
        org.jboss.dmr.stream.ModelException modelException14 = new org.jboss.dmr.stream.ModelException("bytes {\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01\n}", (java.lang.Throwable) modelException13);
        modelException10.addSuppressed((java.lang.Throwable) modelException14);
        org.jboss.dmr.stream.ModelException modelException16 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException14);
        org.junit.Assert.assertNotNull(throwableArray9);
    }

    @Test
    public void test13354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13354");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.setExpression("hi!", "hi!");
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList5 = modelNode4.asListOrEmpty();
        org.jboss.dmr.PropertyModelValue propertyModelValue7 = new org.jboss.dmr.PropertyModelValue("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=", modelNode4, false);
        boolean boolean9 = propertyModelValue7.has("10.0");
        org.jboss.dmr.ModelNode modelNode11 = propertyModelValue7.getChild(0);
        org.jboss.dmr.ModelValue modelValue12 = propertyModelValue7.resolve();
        org.jboss.dmr.ModelNode modelNode14 = propertyModelValue7.getChild((int) (short) 0);
        org.jboss.dmr.ExpressionValue expressionValue16 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue18 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean19 = expressionValue16.equals(expressionValue18);
        org.jboss.dmr.ExpressionValue expressionValue21 = new org.jboss.dmr.ExpressionValue("1");
        org.jboss.dmr.ValueExpression valueExpression22 = expressionValue21.asExpression();
        boolean boolean23 = expressionValue16.equals(expressionValue21);
        java.lang.String str24 = expressionValue16.asString();
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory26 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream27 = null;
        org.jboss.dmr.Base64.InputStream inputStream29 = new org.jboss.dmr.Base64.InputStream(inputStream27, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream30 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream29);
        org.jboss.dmr.stream.ModelReader modelReader31 = modelStreamFactory26.newModelReader((java.io.InputStream) inputStream30);
        java.io.OutputStream outputStream32 = null;
        org.jboss.dmr.Base64.OutputStream outputStream33 = new org.jboss.dmr.Base64.OutputStream(outputStream32);
        org.jboss.dmr.Base64.OutputStream outputStream34 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream33);
        outputStream33.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter37 = modelStreamFactory26.newModelWriter((java.io.OutputStream) outputStream33);
        org.jboss.dmr.stream.ModelWriter modelWriter38 = modelWriter37.writeListStart();
        expressionValue16.write(modelWriter38);
        propertyModelValue7.write(modelWriter38);
        org.jboss.dmr.ModelValue modelValue41 = propertyModelValue7.resolve();
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNodeList5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelValue12);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(valueExpression22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(modelStreamFactory26);
        org.junit.Assert.assertNotNull(modelReader31);
        org.junit.Assert.assertNotNull(modelWriter37);
        org.junit.Assert.assertNotNull(modelWriter38);
        org.junit.Assert.assertNotNull(modelValue41);
    }

    @Test
    public void test13355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13355");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        org.jboss.dmr.Property property5 = new org.jboss.dmr.Property("", modelNode4);
        java.lang.String[] strArray6 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode7 = modelNode4.get(strArray6);
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = modelNode11.asList();
        org.jboss.dmr.ListModelValue listModelValue13 = new org.jboss.dmr.ListModelValue(modelNodeList12);
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue13);
        org.jboss.dmr.ModelValue modelValue15 = listModelValue13.resolve();
        int int17 = listModelValue13.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList18 = listModelValue13.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList19 = modelNode7.asPropertyList(propertyList18);
        org.jboss.dmr.ModelNode modelNode21 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode24 = modelNode21.set("hi!", 0.0d);
        org.jboss.dmr.Property property25 = new org.jboss.dmr.Property("", modelNode24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode27 = modelNode24.get(strArray26);
        org.jboss.dmr.ModelNode modelNode28 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode31 = modelNode28.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList32 = modelNode31.asList();
        org.jboss.dmr.ListModelValue listModelValue33 = new org.jboss.dmr.ListModelValue(modelNodeList32);
        org.jboss.dmr.ModelNode modelNode34 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue33);
        org.jboss.dmr.ModelValue modelValue35 = listModelValue33.resolve();
        int int37 = listModelValue33.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList38 = listModelValue33.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList39 = modelNode27.asPropertyList(propertyList38);
        modelNode7.setNoCopy(modelNode27);
        org.jboss.dmr.ModelNode modelNode41 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode44 = modelNode41.set("hi!", 0.0d);
        org.jboss.dmr.ModelNode modelNode45 = new org.jboss.dmr.ModelNode();
        java.lang.Long long46 = modelNode45.asLongOrNull();
        org.jboss.dmr.ModelNode[] modelNodeArray47 = new org.jboss.dmr.ModelNode[] { modelNode41, modelNode45 };
        java.util.ArrayList<org.jboss.dmr.ModelNode> modelNodeList48 = new java.util.ArrayList<org.jboss.dmr.ModelNode>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList48, modelNodeArray47);
        org.jboss.dmr.ModelNode modelNode50 = modelNode7.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList48);
        org.jboss.dmr.ModelNode modelNode53 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long54 = modelNode53.asLong();
        org.jboss.dmr.ValueExpression valueExpression55 = modelNode53.asExpression();
        java.math.BigDecimal bigDecimal56 = valueExpression55.resolveBigDecimal();
        org.jboss.dmr.ModelNode modelNode57 = modelNode7.set("true", bigDecimal56);
        java.lang.String str58 = modelNode7.asStringOrNull();
        org.jboss.dmr.ModelNode modelNode60 = new org.jboss.dmr.ModelNode(8);
        org.jboss.dmr.ModelNode modelNode61 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode64 = modelNode61.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList65 = modelNode64.asList();
        org.jboss.dmr.ModelNode modelNode68 = modelNode64.set("Expression \"1\"", (int) (byte) 1);
        org.jboss.dmr.ModelType modelType69 = modelNode64.getType();
        org.jboss.dmr.ModelNode modelNode70 = modelNode60.set(modelNode64);
        org.jboss.dmr.ModelNode modelNode71 = modelNode64.clone();
        modelNode7.setNoCopy(modelNode64);
        org.jboss.dmr.ModelNode modelNode73 = modelNode64.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode74 = modelNode64.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode77 = modelNode74.set("(\"bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }\" => expression \"H4sIAAAAAAAAAFvzloG1uIhBICuxLFEvJzEvXc8lvzQpJ7Vh8yEvzezfLEwMjC4MrGWJOaWpFSjK/Epzk1KL2tZMleWe8qCbiYGhosD+AwMYAAAkVvhKVAAAAA==\")", "\"BYTES_VALUE\"");
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNodeList12);
        org.junit.Assert.assertNotNull(modelValue15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(propertyList18);
        org.junit.Assert.assertNotNull(propertyList19);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(modelNodeList32);
        org.junit.Assert.assertNotNull(modelValue35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(propertyList38);
        org.junit.Assert.assertNotNull(propertyList39);
        org.junit.Assert.assertNotNull(modelNode44);
        org.junit.Assert.assertNull(long46);
        org.junit.Assert.assertNotNull(modelNodeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(modelNode50);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertNotNull(valueExpression55);
        org.junit.Assert.assertNotNull(bigDecimal56);
        org.junit.Assert.assertNotNull(modelNode57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(\"true\" => big decimal 1.0)" + "'", str58, "(\"true\" => big decimal 1.0)");
        org.junit.Assert.assertNotNull(modelNode64);
        org.junit.Assert.assertNotNull(modelNodeList65);
        org.junit.Assert.assertNotNull(modelNode68);
        org.junit.Assert.assertTrue("'" + modelType69 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType69.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertNotNull(modelNode70);
        org.junit.Assert.assertNotNull(modelNode71);
        org.junit.Assert.assertNotNull(modelNode73);
        org.junit.Assert.assertNotNull(modelNode74);
        org.junit.Assert.assertNotNull(modelNode77);
    }

    @Test
    public void test13356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13356");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.PROPERTY;
        char char1 = modelType0.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue2 = org.jboss.dmr.TypeModelValue.of(modelType0);
        org.jboss.dmr.ModelType modelType3 = org.jboss.dmr.ModelType.PROPERTY;
        char char4 = modelType3.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue5 = org.jboss.dmr.TypeModelValue.of(modelType3);
        boolean boolean6 = typeModelValue2.equals(typeModelValue5);
        java.lang.String str7 = typeModelValue5.asString();
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = modelNode11.asList();
        org.jboss.dmr.ListModelValue listModelValue13 = new org.jboss.dmr.ListModelValue(modelNodeList12);
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue13);
        org.jboss.dmr.ModelValue modelValue15 = listModelValue13.resolve();
        int int17 = listModelValue13.asInt((int) (byte) 100);
        boolean boolean18 = listModelValue13.asBoolean();
        org.jboss.dmr.ModelNode[] modelNodeArray19 = org.jboss.dmr.ListModelValue.NO_NODES;
        boolean boolean20 = listModelValue13.equals((java.lang.Object) modelNodeArray19);
        boolean boolean21 = typeModelValue5.equals((java.lang.Object) listModelValue13);
        boolean boolean22 = typeModelValue5.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression23 = typeModelValue5.asExpression();
        boolean boolean24 = typeModelValue5.asBoolean();
        org.jboss.dmr.LongModelValue longModelValue26 = new org.jboss.dmr.LongModelValue(1L);
        long long28 = longModelValue26.asLong((long) (short) 0);
        java.lang.String str29 = longModelValue26.asString();
        byte[] byteArray30 = longModelValue26.asBytes();
        org.jboss.dmr.ModelType modelType31 = longModelValue26.getType();
        org.jboss.dmr.TypeModelValue typeModelValue32 = org.jboss.dmr.TypeModelValue.of(modelType31);
        boolean boolean34 = typeModelValue32.has("\"{\n    \\\"EXPRESSION_VALUE\\\" : 35\n}\"");
        boolean boolean35 = typeModelValue32.asBoolean();
        org.jboss.dmr.ModelType modelType36 = typeModelValue32.asType();
        boolean boolean37 = typeModelValue5.equals(typeModelValue32);
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType0.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char1 + "' != '" + 'p' + "'", char1 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue2);
        org.junit.Assert.assertTrue("'" + modelType3 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType3.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char4 + "' != '" + 'p' + "'", char4 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PROPERTY" + "'", str7, "PROPERTY");
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNodeList12);
        org.junit.Assert.assertNotNull(modelValue15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(modelNodeArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(valueExpression23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1" + "'", str29, "1");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + modelType31 + "' != '" + org.jboss.dmr.ModelType.LONG + "'", modelType31.equals(org.jboss.dmr.ModelType.LONG));
        org.junit.Assert.assertNotNull(typeModelValue32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + modelType36 + "' != '" + org.jboss.dmr.ModelType.LONG + "'", modelType36.equals(org.jboss.dmr.ModelType.LONG));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test13357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13357");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        double double2 = intModelValue1.asDouble();
        int int3 = intModelValue1.asInt();
        org.jboss.dmr.ValueExpression valueExpression4 = intModelValue1.asExpression();
        org.jboss.dmr.ModelNode modelNode5 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode8 = modelNode5.setExpression("hi!", "hi!");
        org.jboss.dmr.ModelNode modelNode10 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode13 = modelNode10.set("hi!", 0.0d);
        org.jboss.dmr.Property property14 = new org.jboss.dmr.Property("", modelNode13);
        boolean boolean16 = modelNode13.equals((java.lang.Object) 100L);
        boolean boolean17 = modelNode5.equals(modelNode13);
        org.jboss.dmr.ModelNode modelNode19 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode22 = modelNode19.set("hi!", 0.0d);
        org.jboss.dmr.Property property23 = new org.jboss.dmr.Property("", modelNode22);
        java.lang.String[] strArray24 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode25 = modelNode22.get(strArray24);
        org.jboss.dmr.ModelNode modelNode26 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int27 = modelNode26.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode28 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode31 = modelNode28.setExpression("hi!", "hi!");
        java.lang.String str32 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode28);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList33 = modelNode28.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode34 = modelNode26.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList33);
        org.jboss.dmr.ModelNode modelNode35 = modelNode25.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList33);
        org.jboss.dmr.ModelNode modelNode36 = modelNode13.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList33);
        org.jboss.dmr.ModelNode modelNode38 = modelNode13.add("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4");
        org.jboss.dmr.ModelNode modelNode40 = modelNode13.add(false);
        org.jboss.dmr.ModelType modelType41 = org.jboss.dmr.ModelType.PROPERTY;
        char char42 = modelType41.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue43 = org.jboss.dmr.TypeModelValue.of(modelType41);
        org.jboss.dmr.ModelType modelType44 = org.jboss.dmr.ModelType.PROPERTY;
        char char45 = modelType44.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue46 = org.jboss.dmr.TypeModelValue.of(modelType44);
        boolean boolean47 = typeModelValue43.equals(typeModelValue46);
        java.lang.String str48 = typeModelValue46.asString();
        org.jboss.dmr.ValueExpression valueExpression49 = typeModelValue46.asExpression();
        org.jboss.dmr.ModelType modelType50 = typeModelValue46.asType();
        boolean boolean52 = typeModelValue46.asBoolean(false);
        boolean boolean53 = modelNode40.equals((java.lang.Object) typeModelValue46);
        org.jboss.dmr.ExpressionValue expressionValue55 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue57 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean58 = expressionValue55.equals(expressionValue57);
        org.jboss.dmr.ExpressionValue expressionValue60 = new org.jboss.dmr.ExpressionValue("1");
        org.jboss.dmr.ValueExpression valueExpression61 = expressionValue60.asExpression();
        boolean boolean62 = expressionValue55.equals(expressionValue60);
        java.lang.String str63 = expressionValue55.asString();
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory65 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream66 = null;
        org.jboss.dmr.Base64.InputStream inputStream68 = new org.jboss.dmr.Base64.InputStream(inputStream66, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream69 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream68);
        org.jboss.dmr.stream.ModelReader modelReader70 = modelStreamFactory65.newModelReader((java.io.InputStream) inputStream69);
        java.io.OutputStream outputStream71 = null;
        org.jboss.dmr.Base64.OutputStream outputStream72 = new org.jboss.dmr.Base64.OutputStream(outputStream71);
        org.jboss.dmr.Base64.OutputStream outputStream73 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream72);
        outputStream72.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter76 = modelStreamFactory65.newModelWriter((java.io.OutputStream) outputStream72);
        org.jboss.dmr.stream.ModelWriter modelWriter77 = modelWriter76.writeListStart();
        expressionValue55.write(modelWriter77);
        typeModelValue46.write(modelWriter77);
        intModelValue1.write(modelWriter77);
        org.jboss.dmr.ValueExpression valueExpression81 = intModelValue1.asExpression();
        java.math.BigInteger bigInteger82 = intModelValue1.asBigInteger();
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 32.0d + "'", double2 == 32.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 32 + "'", int3 == 32);
        org.junit.Assert.assertNotNull(valueExpression4);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(modelNode22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str32, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList33);
        org.junit.Assert.assertNotNull(modelNode34);
        org.junit.Assert.assertNotNull(modelNode35);
        org.junit.Assert.assertNotNull(modelNode36);
        org.junit.Assert.assertNotNull(modelNode38);
        org.junit.Assert.assertNotNull(modelNode40);
        org.junit.Assert.assertTrue("'" + modelType41 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType41.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char42 + "' != '" + 'p' + "'", char42 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue43);
        org.junit.Assert.assertTrue("'" + modelType44 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType44.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char45 + "' != '" + 'p' + "'", char45 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "PROPERTY" + "'", str48, "PROPERTY");
        org.junit.Assert.assertNotNull(valueExpression49);
        org.junit.Assert.assertTrue("'" + modelType50 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType50.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(valueExpression61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertNotNull(modelStreamFactory65);
        org.junit.Assert.assertNotNull(modelReader70);
        org.junit.Assert.assertNotNull(modelWriter76);
        org.junit.Assert.assertNotNull(modelWriter77);
        org.junit.Assert.assertNotNull(valueExpression81);
        org.junit.Assert.assertNotNull(bigInteger82);
    }

    @Test
    public void test13358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13358");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.PROPERTY;
        char char1 = modelType0.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue2 = org.jboss.dmr.TypeModelValue.of(modelType0);
        org.jboss.dmr.ModelType modelType3 = org.jboss.dmr.ModelType.PROPERTY;
        char char4 = modelType3.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue5 = org.jboss.dmr.TypeModelValue.of(modelType3);
        boolean boolean6 = typeModelValue2.equals(typeModelValue5);
        java.lang.String str7 = typeModelValue5.asString();
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = modelNode11.asList();
        org.jboss.dmr.ListModelValue listModelValue13 = new org.jboss.dmr.ListModelValue(modelNodeList12);
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue13);
        org.jboss.dmr.ModelValue modelValue15 = listModelValue13.resolve();
        int int17 = listModelValue13.asInt((int) (byte) 100);
        boolean boolean18 = listModelValue13.asBoolean();
        org.jboss.dmr.ModelNode[] modelNodeArray19 = org.jboss.dmr.ListModelValue.NO_NODES;
        boolean boolean20 = listModelValue13.equals((java.lang.Object) modelNodeArray19);
        boolean boolean21 = typeModelValue5.equals((java.lang.Object) listModelValue13);
        org.jboss.dmr.ModelValue modelValue22 = listModelValue13.resolve();
        org.jboss.dmr.ModelValue modelValue23 = listModelValue13.protect();
        java.lang.Throwable throwable25 = null;
        org.jboss.dmr.stream.ModelException modelException26 = new org.jboss.dmr.stream.ModelException("[(\"hi!\" => 0.0)]", throwable25);
        org.jboss.dmr.stream.ModelException modelException27 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException26);
        java.lang.Throwable throwable29 = null;
        org.jboss.dmr.stream.ModelException modelException30 = new org.jboss.dmr.stream.ModelException("[(\"hi!\" => 0.0)]", throwable29);
        org.jboss.dmr.stream.ModelException modelException31 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException30);
        modelException26.addSuppressed((java.lang.Throwable) modelException30);
        boolean boolean33 = listModelValue13.equals((java.lang.Object) modelException26);
        org.jboss.dmr.stream.ModelException modelException34 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException26);
        java.lang.Throwable[] throwableArray35 = modelException34.getSuppressed();
        org.jboss.dmr.stream.ModelException modelException36 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException34);
        org.jboss.dmr.stream.ModelException modelException38 = new org.jboss.dmr.stream.ModelException("1.0");
        modelException36.addSuppressed((java.lang.Throwable) modelException38);
        java.lang.Throwable[] throwableArray40 = modelException36.getSuppressed();
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType0.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char1 + "' != '" + 'p' + "'", char1 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue2);
        org.junit.Assert.assertTrue("'" + modelType3 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType3.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char4 + "' != '" + 'p' + "'", char4 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PROPERTY" + "'", str7, "PROPERTY");
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNodeList12);
        org.junit.Assert.assertNotNull(modelValue15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(modelNodeArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(modelValue22);
        org.junit.Assert.assertNotNull(modelValue23);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray40);
    }

    @Test
    public void test13359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13359");
        org.jboss.dmr.ModelType modelType1 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode(modelType1);
        org.jboss.dmr.ModelNode modelNode4 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode7 = modelNode4.set("hi!", 0.0d);
        org.jboss.dmr.Property property8 = new org.jboss.dmr.Property("", modelNode7);
        org.jboss.dmr.ModelNode modelNode9 = modelNode2.set(property8);
        org.jboss.dmr.ModelNode modelNode10 = property8.getValue();
        org.jboss.dmr.PropertyModelValue propertyModelValue11 = new org.jboss.dmr.PropertyModelValue(property8);
        java.util.List<org.jboss.dmr.Property> propertyList12 = propertyModelValue11.asPropertyList();
        org.jboss.dmr.ModelNode modelNode14 = propertyModelValue11.getChild((int) (short) 0);
        org.jboss.dmr.ModelNode modelNode15 = modelNode14.setEmptyList();
        boolean boolean17 = modelNode15.asBoolean(false);
        org.jboss.dmr.ObjectModelValue objectModelValue19 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode20 = objectModelValue19.asObject();
        org.jboss.dmr.ModelNode modelNode22 = objectModelValue19.getChild("TYPE_MODEL_VALUE");
        org.jboss.dmr.ModelNode modelNode24 = objectModelValue19.getChild("[(\"hi!\" => 0.0)]");
        org.jboss.dmr.Property property25 = new org.jboss.dmr.Property("PROPERTY_VALUE", modelNode24);
        modelNode15.setNoCopy(modelNode24);
        org.jboss.dmr.PropertyModelValue propertyModelValue28 = new org.jboss.dmr.PropertyModelValue("(\"\\\"bytes {\\\\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01\\\\n}\\\"\" => INT)", modelNode24, false);
        org.jboss.dmr.ModelType modelType29 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode30 = new org.jboss.dmr.ModelNode(modelType29);
        org.jboss.dmr.ModelNode modelNode32 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode35 = modelNode32.set("hi!", 0.0d);
        org.jboss.dmr.Property property36 = new org.jboss.dmr.Property("", modelNode35);
        org.jboss.dmr.ModelNode modelNode37 = modelNode30.set(property36);
        org.jboss.dmr.ModelNode modelNode38 = property36.getValue();
        org.jboss.dmr.PropertyModelValue propertyModelValue39 = new org.jboss.dmr.PropertyModelValue(property36);
        java.util.List<org.jboss.dmr.Property> propertyList40 = propertyModelValue39.asPropertyList();
        org.jboss.dmr.ModelNode modelNode42 = propertyModelValue39.getChild((int) (short) 0);
        org.jboss.dmr.ModelNode modelNode43 = modelNode42.setEmptyList();
        org.jboss.dmr.BooleanModelValue booleanModelValue46 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long47 = booleanModelValue46.asLong();
        org.jboss.dmr.ValueExpression valueExpression48 = booleanModelValue46.asExpression();
        java.lang.String str49 = valueExpression48.toString();
        org.jboss.dmr.ExpressionValue expressionValue51 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ValueExpression valueExpression52 = expressionValue51.asExpression();
        boolean boolean53 = valueExpression48.equals(valueExpression52);
        org.jboss.dmr.LongModelValue longModelValue55 = new org.jboss.dmr.LongModelValue((long) '4');
        java.math.BigDecimal bigDecimal56 = longModelValue55.asBigDecimal();
        int int57 = longModelValue55.asInt();
        org.jboss.dmr.ValueExpression valueExpression58 = longModelValue55.asExpression();
        boolean boolean59 = valueExpression52.equals(valueExpression58);
        int int60 = valueExpression58.resolveInt();
        org.jboss.dmr.ExpressionValue expressionValue62 = new org.jboss.dmr.ExpressionValue("1");
        org.jboss.dmr.ValueExpression valueExpression63 = expressionValue62.asExpression();
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver64 = new org.jboss.dmr.ValueExpressionResolver();
        java.lang.String str65 = valueExpression63.resolveString(valueExpressionResolver64);
        java.math.BigInteger bigInteger66 = valueExpression58.resolveBigInteger(valueExpressionResolver64);
        org.jboss.dmr.ModelNode modelNode67 = modelNode42.add("[(\"H4sIAAAAAAAAAAMAAAAAAAAAAAA=\" => big integer 32)]", valueExpression58);
        org.jboss.dmr.ModelNode modelNode70 = modelNode67.set("H4sIAAAAAAAAAAMAAAAAAAAAAAA=", 2);
        java.lang.String str71 = modelNode67.asString();
        modelNode24.setNoCopy(modelNode67);
        org.junit.Assert.assertTrue("'" + modelType1 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType1.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertNotNull(propertyList12);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(modelNode15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(modelNode22);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertTrue("'" + modelType29 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType29.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode35);
        org.junit.Assert.assertNotNull(modelNode37);
        org.junit.Assert.assertNotNull(modelNode38);
        org.junit.Assert.assertNotNull(propertyList40);
        org.junit.Assert.assertNotNull(modelNode42);
        org.junit.Assert.assertNotNull(modelNode43);
        org.junit.Assert.assertNotNull(booleanModelValue46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1L + "'", long47 == 1L);
        org.junit.Assert.assertNotNull(valueExpression48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Expression \"true\"" + "'", str49, "Expression \"true\"");
        org.junit.Assert.assertNotNull(valueExpression52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(bigDecimal56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertNotNull(valueExpression58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertNotNull(valueExpression63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "1" + "'", str65, "1");
        org.junit.Assert.assertNotNull(bigInteger66);
        org.junit.Assert.assertNotNull(modelNode67);
        org.junit.Assert.assertNotNull(modelNode70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(\"H4sIAAAAAAAAAAMAAAAAAAAAAAA=\" => 2)" + "'", str71, "(\"H4sIAAAAAAAAAAMAAAAAAAAAAAA=\" => 2)");
    }

    @Test
    public void test13360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13360");
        org.jboss.dmr.ModelNode modelNode2 = org.jboss.dmr.ModelNode.fromJSONString("[1]");
        org.jboss.dmr.ModelNode modelNode4 = modelNode2.add(true);
        org.jboss.dmr.ModelNode modelNode7 = modelNode4.add("org.jboss.dmr.stream.ModelException: 1", false);
        org.jboss.dmr.PropertyModelValue propertyModelValue8 = new org.jboss.dmr.PropertyModelValue("{\"hi!\" : 0.0}", modelNode4);
        org.junit.Assert.assertNotNull(modelNode2);
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNode7);
    }

    @Test
    public void test13361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13361");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        java.lang.String str5 = bigIntegerModelValue4.asString();
        long long7 = bigIntegerModelValue4.asLong(32L);
        double double8 = bigIntegerModelValue4.asDouble();
        org.jboss.dmr.BooleanModelValue booleanModelValue9 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double10 = booleanModelValue9.asDouble();
        org.jboss.dmr.ModelValue modelValue11 = booleanModelValue9.copy();
        java.math.BigInteger bigInteger12 = booleanModelValue9.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue13 = new org.jboss.dmr.BigIntegerModelValue(bigInteger12);
        double double15 = bigIntegerModelValue13.asDouble((double) 'b');
        boolean boolean16 = bigIntegerModelValue4.equals(bigIntegerModelValue13);
        long long17 = bigIntegerModelValue4.asLong();
        int int18 = bigIntegerModelValue4.asInt();
        long long20 = bigIntegerModelValue4.asLong(2L);
        double double22 = bigIntegerModelValue4.asDouble((double) 2L);
        int int24 = bigIntegerModelValue4.asInt((int) 's');
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1" + "'", str5, "1");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(booleanModelValue9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue11);
        org.junit.Assert.assertNotNull(bigInteger12);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
    }

    @Test
    public void test13362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13362");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.setExpression("hi!", "hi!");
        java.lang.String str4 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode0);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList5 = modelNode0.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode7 = modelNode0.set((double) 0);
        org.jboss.dmr.ModelNode modelNode8 = modelNode0.clear();
        int int10 = modelNode8.asInt(112);
        java.io.OutputStream outputStream11 = null;
        org.jboss.dmr.Base64.OutputStream outputStream12 = new org.jboss.dmr.Base64.OutputStream(outputStream11);
        outputStream12.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream14 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream12);
        org.jboss.dmr.Base64.OutputStream outputStream15 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream14);
        outputStream15.flushBase64();
        outputStream15.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream18 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream15);
        org.jboss.dmr.Base64.OutputStream outputStream19 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream18);
        outputStream18.write((int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            modelNode8.writeBase64((java.io.OutputStream) outputStream18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str4, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList5);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 112 + "'", int10 == 112);
    }

    @Test
    public void test13363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13363");
        java.io.InputStream inputStream0 = null;
        org.jboss.dmr.Base64.InputStream inputStream2 = new org.jboss.dmr.Base64.InputStream(inputStream0, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue4 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str5 = longModelValue4.asString();
        byte[] byteArray6 = longModelValue4.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue7 = new org.jboss.dmr.BytesModelValue(byteArray6);
        int int10 = inputStream2.read(byteArray6, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream12 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream2, (-1));
        org.jboss.dmr.Base64.InputStream inputStream13 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream12);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream12);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = inputStream12.read();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1" + "'", str5, "1");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test13364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13364");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.StringModelValue stringModelValue3 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        boolean boolean4 = stringModelValue1.equals(stringModelValue3);
        org.jboss.dmr.StringModelValue stringModelValue6 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        boolean boolean7 = stringModelValue3.equals(stringModelValue6);
        org.jboss.dmr.ValueExpression valueExpression8 = stringModelValue6.asExpression();
        byte[] byteArray9 = stringModelValue6.asBytes();
        org.jboss.dmr.StringModelValue stringModelValue11 = new org.jboss.dmr.StringModelValue("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3R3AANW9yZy5qYm9z\ncy5kbXIuc3RyZWFtLk1vZGVsRXhjZXB0aW9uOiBbKCJoaSEiID0+IDAuMCldcAADaGkhRAAAAAAA\nAAAAeA==");
        boolean boolean12 = stringModelValue6.equals(stringModelValue11);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory14 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream15 = null;
        org.jboss.dmr.Base64.InputStream inputStream17 = new org.jboss.dmr.Base64.InputStream(inputStream15, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream18 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream17);
        org.jboss.dmr.stream.ModelReader modelReader19 = modelStreamFactory14.newModelReader((java.io.InputStream) inputStream18);
        java.io.OutputStream outputStream20 = null;
        org.jboss.dmr.Base64.OutputStream outputStream21 = new org.jboss.dmr.Base64.OutputStream(outputStream20);
        org.jboss.dmr.Base64.OutputStream outputStream22 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream21);
        outputStream21.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter25 = modelStreamFactory14.newModelWriter((java.io.OutputStream) outputStream21);
        org.jboss.dmr.stream.ModelWriter modelWriter26 = modelWriter25.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter28 = modelWriter26.writeInt((int) (byte) 10);
        java.io.InputStream inputStream29 = null;
        org.jboss.dmr.Base64.InputStream inputStream31 = new org.jboss.dmr.Base64.InputStream(inputStream29, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue33 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str34 = longModelValue33.asString();
        byte[] byteArray35 = longModelValue33.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue36 = new org.jboss.dmr.BytesModelValue(byteArray35);
        int int39 = inputStream31.read(byteArray35, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter40 = modelWriter28.writeBytes(byteArray35);
        org.jboss.dmr.ModelNode modelNode42 = org.jboss.dmr.ModelNode.fromString("\"rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3GXAAEGV4cHJlc3Np\\nb24gImhpISJiAAAAAQF4\"");
        org.jboss.dmr.ModelNode modelNode44 = modelNode42.setExpression("AAAAIA==");
        org.jboss.dmr.ModelNode modelNode47 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long48 = modelNode47.asLong();
        org.jboss.dmr.ValueExpression valueExpression49 = modelNode47.asExpression();
        java.math.BigDecimal bigDecimal50 = valueExpression49.resolveBigDecimal();
        java.lang.String str51 = valueExpression49.getExpressionString();
        java.math.BigDecimal bigDecimal52 = valueExpression49.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue53 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal52);
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue54 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal52);
        org.jboss.dmr.ModelNode modelNode55 = modelNode42.set("\"(\\\"\\\" => (\\\"hi!\\\" => 0.0))\"", bigDecimal52);
        org.jboss.dmr.stream.ModelWriter modelWriter56 = modelWriter40.writeBigDecimal(bigDecimal52);
        org.jboss.dmr.stream.ModelWriter modelWriter58 = modelWriter40.writeExpression("(\"(\\\"\\\" => (\\\"hi!\\\" => 0.0))\" => expression \"\")");
        org.jboss.dmr.stream.ModelWriter modelWriter59 = modelWriter58.writeListEnd();
        // The following exception was thrown during execution in test generation
        try {
            stringModelValue6.write(modelWriter58);
            org.junit.Assert.fail("Expected exception of type org.jboss.dmr.stream.ModelException; message: Expecting EOF");
        } catch (org.jboss.dmr.stream.ModelException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(valueExpression8);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 32, 34, 116, 114, 117, 101, 34]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(modelStreamFactory14);
        org.junit.Assert.assertNotNull(modelReader19);
        org.junit.Assert.assertNotNull(modelWriter25);
        org.junit.Assert.assertNotNull(modelWriter26);
        org.junit.Assert.assertNotNull(modelWriter28);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1" + "'", str34, "1");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(modelWriter40);
        org.junit.Assert.assertNotNull(modelNode42);
        org.junit.Assert.assertNotNull(modelNode44);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertNotNull(valueExpression49);
        org.junit.Assert.assertNotNull(bigDecimal50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1.0" + "'", str51, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal52);
        org.junit.Assert.assertNotNull(modelNode55);
        org.junit.Assert.assertNotNull(modelWriter56);
        org.junit.Assert.assertNotNull(modelWriter58);
        org.junit.Assert.assertNotNull(modelWriter59);
    }

    @Test
    public void test13365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13365");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        org.jboss.dmr.ModelValue modelValue6 = objectModelValue0.copy(false);
        int int7 = objectModelValue0.asInt();
        java.lang.String str8 = objectModelValue0.asString();
        boolean boolean9 = objectModelValue0.asBoolean();
        java.util.Set<java.lang.String> strSet10 = objectModelValue0.getKeys();
        org.jboss.dmr.ObjectModelValue objectModelValue11 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode12 = objectModelValue11.asObject();
        java.util.Set<java.lang.String> strSet13 = objectModelValue11.getKeys();
        boolean boolean15 = objectModelValue11.has((int) 'a');
        boolean boolean17 = objectModelValue11.has("");
        org.jboss.dmr.ObjectModelValue objectModelValue18 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode19 = objectModelValue18.asObject();
        java.util.Set<java.lang.String> strSet20 = objectModelValue18.getKeys();
        boolean boolean22 = objectModelValue18.has((int) 'a');
        boolean boolean23 = objectModelValue11.equals(objectModelValue18);
        org.jboss.dmr.ModelNode modelNode25 = objectModelValue11.getChild("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AloAeA==");
        boolean boolean26 = objectModelValue0.equals(objectModelValue11);
        java.util.List<org.jboss.dmr.Property> propertyList27 = objectModelValue11.asPropertyList();
        int int28 = objectModelValue11.asInt();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode30 = objectModelValue11.requireChild("(\"Expression \\\"true\\\"\" => bytes {\n    0x40, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n})");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child '(\"Expression \\\"true\\\"\" => bytes {?    0x40, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00?})' exists");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(modelNode4);
        org.junit.Assert.assertNotNull(modelValue6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{}" + "'", str8, "{}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(propertyList27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
    }

    @Test
    public void test13366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13366");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isBigInteger();
        boolean boolean17 = modelReader15.isLong();
        boolean boolean18 = modelReader15.isBigDecimal();
        boolean boolean19 = modelReader15.isBoolean();
        boolean boolean20 = modelReader15.isDouble();
        boolean boolean21 = modelReader15.isObjectEnd();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test13367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13367");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str2 = longModelValue1.asString();
        byte[] byteArray3 = longModelValue1.asBytes();
        byte[] byteArray4 = longModelValue1.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue5 = new org.jboss.dmr.BytesModelValue(byteArray4);
        double double7 = bytesModelValue5.asDouble((double) 10L);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1" + "'", str2, "1");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 4.9E-324d + "'", double7 == 4.9E-324d);
    }

    @Test
    public void test13368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13368");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        org.jboss.dmr.ModelNode modelNode5 = objectModelValue0.asObject();
        org.jboss.dmr.ModelNode modelNode6 = objectModelValue0.asObject();
        int int7 = objectModelValue0.asInt();
        org.jboss.dmr.ModelValue modelValue8 = objectModelValue0.resolve();
        org.jboss.dmr.ModelNode modelNode9 = objectModelValue0.asObject();
        org.jboss.dmr.ModelValue modelValue10 = objectModelValue0.resolve();
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(modelValue8);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(modelValue10);
    }

    @Test
    public void test13369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13369");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(modelType0);
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode6 = modelNode3.set("hi!", 0.0d);
        org.jboss.dmr.Property property7 = new org.jboss.dmr.Property("", modelNode6);
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(property7);
        org.jboss.dmr.PropertyModelValue propertyModelValue9 = new org.jboss.dmr.PropertyModelValue(property7);
        org.jboss.dmr.PropertyModelValue propertyModelValue10 = new org.jboss.dmr.PropertyModelValue(property7);
        org.jboss.dmr.PropertyModelValue propertyModelValue11 = new org.jboss.dmr.PropertyModelValue(property7);
        org.jboss.dmr.Property property12 = propertyModelValue11.asProperty();
        org.jboss.dmr.ModelNode modelNode13 = propertyModelValue11.asObject();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList14 = propertyModelValue11.asList();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode16 = propertyModelValue11.getChild(32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType0.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(property12);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNodeList14);
    }

    @Test
    public void test13370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13370");
        org.jboss.dmr.stream.ModelException modelException1 = new org.jboss.dmr.stream.ModelException("\"(\\\"\\\" => (\\\"hi!\\\" => 0.0))\"");
        org.jboss.dmr.stream.ModelException modelException2 = new org.jboss.dmr.stream.ModelException((java.lang.Throwable) modelException1);
    }

    @Test
    public void test13371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13371");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        java.lang.String str2 = doubleModelValue1.asString();
        int int4 = doubleModelValue1.asInt((int) 'l');
        byte[] byteArray5 = doubleModelValue1.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue6 = new org.jboss.dmr.BytesModelValue(byteArray5);
        int int8 = bytesModelValue6.asInt(112);
        int int9 = bytesModelValue6.asInt();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "10.0" + "'", str2, "10.0");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test13372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13372");
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray1 = org.jboss.dmr.Base64.decode("\"H4sIAAAAAAAAAFvzloG1uIhBPL8oXS8rKb+4WC8lt0jPNz8lNccPSMjoLnSZu7jPnoeBoaKgnC2F\\ngdlAz6ACAF+odLA1AAAA\"");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Bad Base64 input character at 0: 34(decimal)");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13373");
        org.jboss.dmr.ModelNodeFactory modelNodeFactory0 = org.jboss.dmr.ModelNodeFactory.INSTANCE;
        org.jboss.dmr.ModelNode modelNode3 = modelNodeFactory0.readFrom("10.0", false);
        org.jboss.dmr.ModelNode modelNode6 = modelNodeFactory0.readFrom("0.0", true);
        org.jboss.dmr.ModelNode modelNode9 = modelNodeFactory0.readFrom("(\"hi!\" => expression \"hi!\")", false);
        org.jboss.dmr.ModelNode modelNode12 = modelNodeFactory0.readFrom("\"{\n    \\\"hi!\\\" : {\n        \\\"EXPRESSION_VALUE\\\" : \\\"hi!\\\"\n    }\n}\"", true);
        org.jboss.dmr.ModelNode modelNode15 = modelNodeFactory0.readFrom("1.1975582E7", true);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode18 = modelNodeFactory0.readFrom("rO0ABXNyABNqYXZhLmxhbmcuQ2hhcmFjdGVyNItH2WsaJngCAAFDAAV2YWx1ZXhwAGI=", false);
            org.junit.Assert.fail("Expected exception of type org.jboss.dmr.stream.ModelException; message: Unexpected character 'r' while reading DMR stream");
        } catch (org.jboss.dmr.stream.ModelException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNodeFactory0);
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNode15);
    }

    @Test
    public void test13374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13374");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue((long) '#');
        java.math.BigDecimal bigDecimal2 = longModelValue1.asBigDecimal();
        double double4 = longModelValue1.asDouble((double) 35L);
        java.math.BigDecimal bigDecimal5 = longModelValue1.asBigDecimal();
        org.junit.Assert.assertNotNull(bigDecimal2);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 35.0d + "'", double4 == 35.0d);
        org.junit.Assert.assertNotNull(bigDecimal5);
    }

    @Test
    public void test13375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13375");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long2 = doubleModelValue1.asLong();
        boolean boolean3 = doubleModelValue1.asBoolean();
        boolean boolean5 = doubleModelValue1.asBoolean(true);
        double double6 = doubleModelValue1.asDouble();
        int int7 = doubleModelValue1.asInt();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10L + "'", long2 == 10L);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
    }

    @Test
    public void test13376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13376");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.lang.String str4 = modelNode0.toString();
        org.jboss.dmr.ModelNode modelNode5 = modelNode0.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode10 = modelNode7.set("hi!", 0.0d);
        org.jboss.dmr.Property property11 = new org.jboss.dmr.Property("", modelNode10);
        org.jboss.dmr.ModelNode modelNode12 = modelNode0.set(property11);
        org.jboss.dmr.ModelType modelType13 = org.jboss.dmr.ModelType.BOOLEAN;
        org.jboss.dmr.ModelNode modelNode14 = modelNode12.set(modelType13);
        org.jboss.dmr.TypeModelValue typeModelValue15 = org.jboss.dmr.TypeModelValue.of(modelType13);
        org.jboss.dmr.ModelNode modelNode16 = new org.jboss.dmr.ModelNode(modelType13);
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "(\"hi!\" => 0.0)" + "'", str4, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertTrue("'" + modelType13 + "' != '" + org.jboss.dmr.ModelType.BOOLEAN + "'", modelType13.equals(org.jboss.dmr.ModelType.BOOLEAN));
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(typeModelValue15);
    }

    @Test
    public void test13377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13377");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue8 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        org.jboss.dmr.ValueExpression valueExpression9 = bigDecimalModelValue8.asExpression();
        org.jboss.dmr.ModelNode modelNode11 = new org.jboss.dmr.ModelNode("EXPRESSION_VALUE");
        org.jboss.dmr.ModelNode modelNode12 = modelNode11.clear();
        boolean boolean14 = modelNode11.has((int) '#');
        org.jboss.dmr.ModelNode modelNode17 = modelNode11.add("BYTES_VALUE", "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4");
        org.jboss.dmr.ModelNode modelNode19 = modelNode11.set("1");
        org.jboss.dmr.BooleanModelValue booleanModelValue21 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long22 = booleanModelValue21.asLong();
        org.jboss.dmr.ValueExpression valueExpression23 = booleanModelValue21.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue24 = new org.jboss.dmr.ExpressionValue(valueExpression23);
        java.lang.String str25 = valueExpression23.getExpressionString();
        boolean boolean26 = modelNode11.equals((java.lang.Object) valueExpression23);
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver27 = org.jboss.dmr.ValueExpressionResolver.DEFAULT_RESOLVER;
        boolean boolean28 = valueExpression23.resolveBoolean(valueExpressionResolver27);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean29 = valueExpression9.resolveBoolean(valueExpressionResolver27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertNotNull(valueExpression9);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(booleanModelValue21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertNotNull(valueExpression23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "true" + "'", str25, "true");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(valueExpressionResolver27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test13378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13378");
        org.jboss.dmr.BooleanModelValue booleanModelValue1 = org.jboss.dmr.BooleanModelValue.valueOf(false);
        long long3 = booleanModelValue1.asLong((long) 32);
        int int4 = booleanModelValue1.asInt();
        org.jboss.dmr.ModelNode modelNode5 = org.jboss.dmr.ModelNode.FALSE;
        boolean boolean6 = booleanModelValue1.equals((java.lang.Object) modelNode5);
        java.math.BigInteger bigInteger7 = booleanModelValue1.asBigInteger();
        boolean boolean9 = booleanModelValue1.asBoolean(true);
        boolean boolean10 = booleanModelValue1.asBoolean();
        boolean boolean11 = booleanModelValue1.asBoolean();
        org.junit.Assert.assertNotNull(booleanModelValue1);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(bigInteger7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test13379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13379");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue5);
        org.jboss.dmr.ModelValue modelValue7 = listModelValue5.resolve();
        int int9 = listModelValue5.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList10 = listModelValue5.asPropertyList();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList11 = listModelValue5.asList();
        long long12 = listModelValue5.asLong();
        boolean boolean14 = listModelValue5.has((int) (byte) 0);
        int int15 = listModelValue5.asInt();
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertNotNull(modelValue7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(propertyList10);
        org.junit.Assert.assertNotNull(modelNodeList11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }

    @Test
    public void test13380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13380");
        org.jboss.dmr.ModelNodeFactory modelNodeFactory0 = org.jboss.dmr.ModelNodeFactory.INSTANCE;
        org.jboss.dmr.ModelNode modelNode3 = modelNodeFactory0.readFrom("10.0", false);
        org.jboss.dmr.ModelNode modelNode6 = modelNodeFactory0.readFrom("0.0", true);
        org.jboss.dmr.ModelNode modelNode9 = modelNodeFactory0.readFrom("\"[(\\\"hi!\\\" => expression \\\"hi!\\\"),bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }]\"", false);
        org.jboss.dmr.ModelNode modelNode12 = modelNodeFactory0.readFrom("\"rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AloAeA==\"", true);
        org.junit.Assert.assertNotNull(modelNodeFactory0);
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(modelNode12);
    }

    @Test
    public void test13381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13381");
        org.jboss.dmr.ExpressionValue expressionValue1 = new org.jboss.dmr.ExpressionValue("bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        java.io.DataOutput dataOutput2 = null;
        // The following exception was thrown during execution in test generation
        try {
            expressionValue1.writeExternal(dataOutput2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13382");
        boolean boolean2 = org.jboss.dmr.Base64.decodeToFile("PROPERTY", "97.0");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test13383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13383");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (byte) -1);
        org.jboss.dmr.DoubleModelValue doubleModelValue3 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        int int5 = doubleModelValue3.asInt((int) 'l');
        java.math.BigDecimal bigDecimal6 = doubleModelValue3.asBigDecimal();
        boolean boolean7 = doubleModelValue1.equals(doubleModelValue3);
        org.jboss.dmr.ModelNode modelNode9 = new org.jboss.dmr.ModelNode(35L);
        org.jboss.dmr.ModelNode modelNode11 = modelNode9.set((int) '4');
        boolean boolean12 = doubleModelValue3.equals((java.lang.Object) modelNode11);
        org.jboss.dmr.ValueExpression valueExpression13 = doubleModelValue3.asExpression();
        org.jboss.dmr.ValueExpression valueExpression14 = doubleModelValue3.asExpression();
        double double15 = doubleModelValue3.asDouble();
        org.jboss.dmr.ValueExpression valueExpression16 = doubleModelValue3.asExpression();
        org.jboss.dmr.ObjectModelValue objectModelValue17 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode18 = objectModelValue17.asObject();
        org.jboss.dmr.ModelValue modelValue19 = objectModelValue17.protect();
        java.util.List<org.jboss.dmr.Property> propertyList20 = objectModelValue17.asPropertyList();
        org.jboss.dmr.LongModelValue longModelValue22 = new org.jboss.dmr.LongModelValue(97L);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory24 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream25 = null;
        org.jboss.dmr.Base64.InputStream inputStream27 = new org.jboss.dmr.Base64.InputStream(inputStream25, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream28 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream27);
        org.jboss.dmr.stream.ModelReader modelReader29 = modelStreamFactory24.newModelReader((java.io.InputStream) inputStream28);
        java.io.OutputStream outputStream30 = null;
        org.jboss.dmr.Base64.OutputStream outputStream31 = new org.jboss.dmr.Base64.OutputStream(outputStream30);
        org.jboss.dmr.Base64.OutputStream outputStream32 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream31);
        outputStream31.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter35 = modelStreamFactory24.newModelWriter((java.io.OutputStream) outputStream31);
        org.jboss.dmr.stream.ModelWriter modelWriter36 = modelWriter35.writeListStart();
        org.jboss.dmr.IntModelValue intModelValue38 = new org.jboss.dmr.IntModelValue(10);
        byte[] byteArray39 = intModelValue38.asBytes();
        int int41 = intModelValue38.asInt(0);
        java.math.BigInteger bigInteger42 = intModelValue38.asBigInteger();
        org.jboss.dmr.stream.ModelWriter modelWriter43 = modelWriter36.writeBigInteger(bigInteger42);
        org.jboss.dmr.stream.ModelWriter modelWriter44 = modelWriter36.writeListStart();
        longModelValue22.write(modelWriter44);
        objectModelValue17.write(modelWriter44);
        org.jboss.dmr.stream.ModelWriter modelWriter48 = modelWriter44.writeLong((long) (byte) 100);
        doubleModelValue3.write(modelWriter44);
        boolean boolean50 = doubleModelValue3.asBoolean();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(valueExpression13);
        org.junit.Assert.assertNotNull(valueExpression14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(valueExpression16);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertNotNull(modelValue19);
        org.junit.Assert.assertNotNull(propertyList20);
        org.junit.Assert.assertNotNull(modelStreamFactory24);
        org.junit.Assert.assertNotNull(modelReader29);
        org.junit.Assert.assertNotNull(modelWriter35);
        org.junit.Assert.assertNotNull(modelWriter36);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0, 0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertNotNull(bigInteger42);
        org.junit.Assert.assertNotNull(modelWriter43);
        org.junit.Assert.assertNotNull(modelWriter44);
        org.junit.Assert.assertNotNull(modelWriter48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test13384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13384");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        boolean boolean8 = bigDecimalModelValue7.asBoolean();
        long long9 = bigDecimalModelValue7.asLong();
        java.lang.String str10 = bigDecimalModelValue7.asString();
        org.jboss.dmr.ModelNode modelNode12 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long13 = modelNode12.asLong();
        org.jboss.dmr.ValueExpression valueExpression14 = modelNode12.asExpression();
        java.math.BigDecimal bigDecimal15 = valueExpression14.resolveBigDecimal();
        java.lang.String str16 = valueExpression14.getExpressionString();
        java.math.BigDecimal bigDecimal17 = valueExpression14.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue18 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal17);
        boolean boolean19 = bigDecimalModelValue18.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression20 = bigDecimalModelValue18.asExpression();
        int int21 = bigDecimalModelValue18.asInt();
        long long22 = bigDecimalModelValue18.asLong();
        boolean boolean23 = bigDecimalModelValue7.equals(bigDecimalModelValue18);
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue24 = null;
        boolean boolean25 = bigDecimalModelValue18.equals(bigDecimalModelValue24);
        int int26 = bigDecimalModelValue18.asInt();
        int int28 = bigDecimalModelValue18.asInt((int) 'Z');
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1.0" + "'", str10, "1.0");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(valueExpression14);
        org.junit.Assert.assertNotNull(bigDecimal15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1.0" + "'", str16, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(valueExpression20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
    }

    @Test
    public void test13385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13385");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.removeChild("hi!");
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList5 = objectModelValue0.asList();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList6 = objectModelValue0.asList();
        org.jboss.dmr.ModelNode modelNode7 = objectModelValue0.asObject();
        org.jboss.dmr.ModelNode modelNode9 = objectModelValue0.getChild("(\"-1\" => bytes {\n    0x01\n})");
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNodeList5);
        org.junit.Assert.assertNotNull(modelNodeList6);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode9);
    }

    @Test
    public void test13386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13386");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        java.lang.String str6 = listModelValue5.asString();
        boolean boolean8 = listModelValue5.equals((java.lang.Object) true);
        boolean boolean9 = listModelValue5.asBoolean();
        boolean boolean11 = listModelValue5.asBoolean(false);
        org.jboss.dmr.ModelValue modelValue12 = listModelValue5.protect();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode14 = listModelValue5.insertChild((int) 's');
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str6, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(modelValue12);
    }

    @Test
    public void test13387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13387");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ModelType modelType5 = modelNode3.getType();
        org.jboss.dmr.TypeModelValue typeModelValue6 = org.jboss.dmr.TypeModelValue.of(modelType5);
        java.lang.String str7 = typeModelValue6.asString();
        boolean boolean8 = typeModelValue6.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression9 = typeModelValue6.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue10 = new org.jboss.dmr.ExpressionValue(valueExpression9);
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertTrue("'" + modelType5 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType5.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertNotNull(typeModelValue6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PROPERTY" + "'", str7, "PROPERTY");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(valueExpression9);
    }

    @Test
    public void test13388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13388");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        java.lang.String str5 = bigIntegerModelValue4.asString();
        java.math.BigInteger bigInteger6 = bigIntegerModelValue4.asBigInteger();
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode(bigInteger6);
        org.jboss.dmr.LongModelValue longModelValue9 = new org.jboss.dmr.LongModelValue((-1L));
        long long11 = longModelValue9.asLong((long) (byte) -1);
        int int13 = longModelValue9.asInt(0);
        org.jboss.dmr.ValueExpression valueExpression14 = longModelValue9.asExpression();
        org.jboss.dmr.ModelNode modelNode15 = modelNode7.set(valueExpression14);
        org.jboss.dmr.BooleanModelValue booleanModelValue16 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double17 = booleanModelValue16.asDouble();
        org.jboss.dmr.ModelValue modelValue18 = booleanModelValue16.copy();
        java.math.BigInteger bigInteger19 = booleanModelValue16.asBigInteger();
        org.jboss.dmr.ModelNode modelNode20 = new org.jboss.dmr.ModelNode(bigInteger19);
        org.jboss.dmr.IntModelValue intModelValue22 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str23 = intModelValue22.asString();
        double double25 = intModelValue22.asDouble((double) 2);
        java.math.BigDecimal bigDecimal26 = intModelValue22.asBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue27 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal26);
        org.jboss.dmr.ModelNode modelNode28 = modelNode20.set(bigDecimal26);
        modelNode15.setNoCopy(modelNode28);
        org.jboss.dmr.BooleanModelValue booleanModelValue31 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long32 = booleanModelValue31.asLong();
        org.jboss.dmr.ValueExpression valueExpression33 = booleanModelValue31.asExpression();
        boolean boolean35 = valueExpression33.equals((java.lang.Object) 'p');
        org.jboss.dmr.ExpressionValue expressionValue36 = new org.jboss.dmr.ExpressionValue(valueExpression33);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode37 = modelNode28.add(valueExpression33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1" + "'", str5, "1");
        org.junit.Assert.assertNotNull(bigInteger6);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(valueExpression14);
        org.junit.Assert.assertNotNull(modelNode15);
        org.junit.Assert.assertNotNull(booleanModelValue16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue18);
        org.junit.Assert.assertNotNull(bigInteger19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "32" + "'", str23, "32");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 32.0d + "'", double25 == 32.0d);
        org.junit.Assert.assertNotNull(bigDecimal26);
        org.junit.Assert.assertNotNull(modelNode28);
        org.junit.Assert.assertNotNull(booleanModelValue31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertNotNull(valueExpression33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test13389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13389");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        byte[] byteArray4 = booleanModelValue0.asBytes();
        java.math.BigInteger bigInteger5 = booleanModelValue0.asBigInteger();
        double double7 = booleanModelValue0.asDouble((double) (byte) 1);
        double double9 = booleanModelValue0.asDouble(35.0d);
        double double10 = booleanModelValue0.asDouble();
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[1]");
        org.junit.Assert.assertNotNull(bigInteger5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
    }

    @Test
    public void test13390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13390");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue((long) '4');
        java.math.BigDecimal bigDecimal2 = longModelValue1.asBigDecimal();
        int int3 = longModelValue1.asInt();
        java.math.BigDecimal bigDecimal4 = longModelValue1.asBigDecimal();
        org.jboss.dmr.StringModelValue stringModelValue6 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        byte[] byteArray7 = stringModelValue6.asBytes();
        byte[] byteArray8 = stringModelValue6.asBytes();
        boolean boolean9 = longModelValue1.equals((java.lang.Object) stringModelValue6);
        double double11 = longModelValue1.asDouble((double) '#');
        org.junit.Assert.assertNotNull(bigDecimal2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[40, 34, 34, 32, 61, 62, 32, 40, 34, 104, 105, 33, 34, 32, 61, 62, 32, 48, 46, 48, 41, 41]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[40, 34, 34, 32, 61, 62, 32, 40, 34, 104, 105, 33, 34, 32, 61, 62, 32, 48, 46, 48, 41, 41]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 52.0d + "'", double11 == 52.0d);
    }

    @Test
    public void test13391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13391");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.PROPERTY;
        char char1 = modelType0.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue2 = org.jboss.dmr.TypeModelValue.of(modelType0);
        java.lang.String str3 = typeModelValue2.asString();
        // The following exception was thrown during execution in test generation
        try {
            int int5 = typeModelValue2.asInt((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType0.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char1 + "' != '" + 'p' + "'", char1 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PROPERTY" + "'", str3, "PROPERTY");
    }

    @Test
    public void test13392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13392");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        org.jboss.dmr.Property property5 = new org.jboss.dmr.Property("", modelNode4);
        java.lang.String[] strArray6 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode7 = modelNode4.get(strArray6);
        org.jboss.dmr.ModelNode modelNode9 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int10 = modelNode9.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode11 = modelNode9.clone();
        org.jboss.dmr.ModelNode modelNode12 = modelNode7.setNoCopy("35", modelNode11);
        org.jboss.dmr.ModelNode modelNode13 = modelNode12.setEmptyObject();
        byte[] byteArray15 = org.jboss.dmr.Base64.decode("big decimal 32");
        org.jboss.dmr.ModelNode modelNode16 = new org.jboss.dmr.ModelNode(byteArray15);
        org.jboss.dmr.ModelNode modelNode17 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode20 = modelNode17.setExpression("hi!", "hi!");
        java.lang.String str21 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode17);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList22 = modelNode17.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode24 = modelNode17.set((double) 0);
        org.jboss.dmr.ModelNode modelNode25 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode28 = modelNode25.setExpression("hi!", "hi!");
        java.lang.String str29 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode25);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList30 = modelNode25.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode32 = modelNode25.set((double) 0);
        boolean boolean33 = modelNode25.isProtected();
        boolean boolean35 = modelNode25.hasDefined("[(\"hi!\" => 0.0)]");
        org.jboss.dmr.ModelNode modelNode38 = modelNode25.set("hi!", (long) (short) 100);
        org.jboss.dmr.ModelNode modelNode40 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode43 = modelNode40.set("hi!", 0.0d);
        org.jboss.dmr.Property property44 = new org.jboss.dmr.Property("", modelNode43);
        java.lang.String[] strArray45 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode46 = modelNode43.get(strArray45);
        org.jboss.dmr.ModelNode modelNode47 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode50 = modelNode47.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList51 = modelNode50.asList();
        org.jboss.dmr.ListModelValue listModelValue52 = new org.jboss.dmr.ListModelValue(modelNodeList51);
        org.jboss.dmr.ModelNode modelNode53 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue52);
        org.jboss.dmr.ModelValue modelValue54 = listModelValue52.resolve();
        int int56 = listModelValue52.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList57 = listModelValue52.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList58 = modelNode46.asPropertyList(propertyList57);
        org.jboss.dmr.ModelNode modelNode60 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode63 = modelNode60.set("hi!", 0.0d);
        org.jboss.dmr.Property property64 = new org.jboss.dmr.Property("", modelNode63);
        java.lang.String[] strArray65 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode66 = modelNode63.get(strArray65);
        org.jboss.dmr.ModelNode modelNode67 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode70 = modelNode67.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList71 = modelNode70.asList();
        org.jboss.dmr.ListModelValue listModelValue72 = new org.jboss.dmr.ListModelValue(modelNodeList71);
        org.jboss.dmr.ModelNode modelNode73 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue72);
        org.jboss.dmr.ModelValue modelValue74 = listModelValue72.resolve();
        int int76 = listModelValue72.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList77 = listModelValue72.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList78 = modelNode66.asPropertyList(propertyList77);
        modelNode46.setNoCopy(modelNode66);
        org.jboss.dmr.ModelNode modelNode81 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode84 = modelNode81.set("hi!", 0.0d);
        org.jboss.dmr.Property property85 = new org.jboss.dmr.Property("", modelNode84);
        java.lang.String[] strArray86 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode87 = modelNode84.get(strArray86);
        org.jboss.dmr.ModelNode modelNode88 = modelNode66.get(strArray86);
        boolean boolean89 = modelNode38.hasDefined(strArray86);
        org.jboss.dmr.ModelNode modelNode90 = modelNode24.get(strArray86);
        boolean boolean91 = modelNode16.has(strArray86);
        boolean boolean92 = modelNode12.hasDefined(strArray86);
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[110, 40, 29, 121, -56, -90, 106, 93, -10]");
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str21, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList22);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertNotNull(modelNode28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str29, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList30);
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(modelNode38);
        org.junit.Assert.assertNotNull(modelNode43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(modelNode46);
        org.junit.Assert.assertNotNull(modelNode50);
        org.junit.Assert.assertNotNull(modelNodeList51);
        org.junit.Assert.assertNotNull(modelValue54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(propertyList57);
        org.junit.Assert.assertNotNull(propertyList58);
        org.junit.Assert.assertNotNull(modelNode63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(modelNode66);
        org.junit.Assert.assertNotNull(modelNode70);
        org.junit.Assert.assertNotNull(modelNodeList71);
        org.junit.Assert.assertNotNull(modelValue74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(propertyList77);
        org.junit.Assert.assertNotNull(propertyList78);
        org.junit.Assert.assertNotNull(modelNode84);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(modelNode87);
        org.junit.Assert.assertNotNull(modelNode88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(modelNode90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test13393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13393");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        boolean boolean4 = objectModelValue0.has((int) 'a');
        boolean boolean6 = objectModelValue0.has("");
        org.jboss.dmr.ObjectModelValue objectModelValue7 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode8 = objectModelValue7.asObject();
        java.util.Set<java.lang.String> strSet9 = objectModelValue7.getKeys();
        boolean boolean11 = objectModelValue7.has((int) 'a');
        boolean boolean12 = objectModelValue0.equals(objectModelValue7);
        int int13 = objectModelValue7.asInt();
        java.util.List<org.jboss.dmr.Property> propertyList14 = objectModelValue7.asPropertyList();
        org.jboss.dmr.ModelType modelType15 = org.jboss.dmr.ModelType.DOUBLE;
        org.jboss.dmr.ModelNode modelNode16 = new org.jboss.dmr.ModelNode(modelType15);
        org.jboss.dmr.LongModelValue longModelValue19 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str20 = longModelValue19.asString();
        byte[] byteArray21 = longModelValue19.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue22 = new org.jboss.dmr.BytesModelValue(byteArray21);
        java.lang.String str23 = bytesModelValue22.asString();
        int int24 = bytesModelValue22.asInt();
        long long26 = bytesModelValue22.asLong((long) (short) 1);
        long long27 = bytesModelValue22.asLong();
        java.math.BigDecimal bigDecimal28 = bytesModelValue22.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode29 = modelNode16.set("32", bigDecimal28);
        boolean boolean30 = objectModelValue7.equals((java.lang.Object) modelNode29);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory32 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream33 = null;
        org.jboss.dmr.Base64.InputStream inputStream35 = new org.jboss.dmr.Base64.InputStream(inputStream33, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue37 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str38 = longModelValue37.asString();
        byte[] byteArray39 = longModelValue37.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue40 = new org.jboss.dmr.BytesModelValue(byteArray39);
        int int43 = inputStream35.read(byteArray39, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream45 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream35, (-1));
        org.jboss.dmr.stream.ModelReader modelReader46 = modelStreamFactory32.newModelReader((java.io.InputStream) inputStream45);
        boolean boolean47 = modelReader46.isLong();
        boolean boolean48 = modelReader46.isBigDecimal();
        boolean boolean49 = modelReader46.isBoolean();
        boolean boolean50 = modelReader46.isListStart();
        boolean boolean51 = modelNode29.equals((java.lang.Object) modelReader46);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode53 = modelNode29.insert((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(propertyList14);
        org.junit.Assert.assertTrue("'" + modelType15 + "' != '" + org.jboss.dmr.ModelType.DOUBLE + "'", modelType15.equals(org.jboss.dmr.ModelType.DOUBLE));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1" + "'", str20, "1");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str23, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertNotNull(bigDecimal28);
        org.junit.Assert.assertNotNull(modelNode29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(modelStreamFactory32);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1" + "'", str38, "1");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(modelReader46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test13394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13394");
        byte[] byteArray1 = org.jboss.dmr.Base64.decode("true");
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode(byteArray1);
        org.jboss.dmr.ModelNode modelNode4 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode7 = modelNode4.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList8 = modelNode7.asList();
        org.jboss.dmr.ModelType modelType9 = modelNode7.getType();
        org.jboss.dmr.TypeModelValue typeModelValue10 = org.jboss.dmr.TypeModelValue.of(modelType9);
        org.jboss.dmr.ValueExpression valueExpression11 = typeModelValue10.asExpression();
        org.jboss.dmr.ValueExpression valueExpression12 = typeModelValue10.asExpression();
        org.jboss.dmr.ModelNode modelNode13 = modelNode2.set("(\"Expression \\\"true\\\"\" => (\"hi!\" => 0.0))", valueExpression12);
        java.io.ObjectOutput objectOutput14 = null;
        // The following exception was thrown during execution in test generation
        try {
            modelNode2.writeExternal(objectOutput14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-74, -69, -98]");
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNodeList8);
        org.junit.Assert.assertTrue("'" + modelType9 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType9.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertNotNull(typeModelValue10);
        org.junit.Assert.assertNotNull(valueExpression11);
        org.junit.Assert.assertNotNull(valueExpression12);
        org.junit.Assert.assertNotNull(modelNode13);
    }

    @Test
    public void test13395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13395");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        int int6 = bigIntegerModelValue4.asInt((int) (short) 1);
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode10 = modelNode7.set("hi!", 0.0d);
        java.lang.String str11 = modelNode7.toString();
        org.jboss.dmr.ModelNode modelNode12 = modelNode7.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode14 = modelNode7.set(100);
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode18 = modelNode15.set("hi!", 0.0d);
        java.lang.String str19 = modelNode15.toString();
        org.jboss.dmr.ModelNode modelNode20 = modelNode15.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode22 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode25 = modelNode22.set("hi!", 0.0d);
        org.jboss.dmr.Property property26 = new org.jboss.dmr.Property("", modelNode25);
        org.jboss.dmr.ModelNode modelNode27 = modelNode15.set(property26);
        java.lang.String str28 = modelNode27.asString();
        org.jboss.dmr.ModelNode modelNode29 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode32 = modelNode29.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList33 = modelNode32.asList();
        org.jboss.dmr.ListModelValue listModelValue34 = new org.jboss.dmr.ListModelValue(modelNodeList33);
        org.jboss.dmr.ModelNode modelNode35 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue34);
        org.jboss.dmr.ModelValue modelValue36 = listModelValue34.resolve();
        int int38 = listModelValue34.asInt((int) (byte) 100);
        boolean boolean39 = listModelValue34.asBoolean();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList40 = listModelValue34.asList();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList41 = modelNode27.asList(modelNodeList40);
        org.jboss.dmr.ModelNode modelNode42 = modelNode14.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList40);
        boolean boolean43 = bigIntegerModelValue4.equals((java.lang.Object) modelNode14);
        org.jboss.dmr.ModelType modelType44 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode45 = new org.jboss.dmr.ModelNode(modelType44);
        org.jboss.dmr.ModelNode modelNode47 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode50 = modelNode47.set("hi!", 0.0d);
        org.jboss.dmr.Property property51 = new org.jboss.dmr.Property("", modelNode50);
        org.jboss.dmr.ModelNode modelNode52 = modelNode45.set(property51);
        org.jboss.dmr.PropertyModelValue propertyModelValue53 = new org.jboss.dmr.PropertyModelValue(property51);
        org.jboss.dmr.PropertyModelValue propertyModelValue54 = new org.jboss.dmr.PropertyModelValue(property51);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList55 = propertyModelValue54.asList();
        boolean boolean56 = bigIntegerModelValue4.equals((java.lang.Object) propertyModelValue54);
        int int57 = bigIntegerModelValue4.asInt();
        org.jboss.dmr.BooleanModelValue booleanModelValue59 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger60 = booleanModelValue59.asBigInteger();
        java.math.BigInteger bigInteger61 = booleanModelValue59.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue62 = new org.jboss.dmr.BigIntegerModelValue(bigInteger61);
        org.jboss.dmr.BooleanModelValue booleanModelValue63 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double64 = booleanModelValue63.asDouble();
        org.jboss.dmr.ModelValue modelValue65 = booleanModelValue63.copy();
        java.math.BigInteger bigInteger66 = booleanModelValue63.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue67 = new org.jboss.dmr.BigIntegerModelValue(bigInteger66);
        int int69 = bigIntegerModelValue67.asInt((int) (short) 1);
        org.jboss.dmr.BooleanModelValue booleanModelValue70 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double71 = booleanModelValue70.asDouble();
        org.jboss.dmr.ModelValue modelValue72 = booleanModelValue70.copy();
        java.math.BigInteger bigInteger73 = booleanModelValue70.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue74 = new org.jboss.dmr.BigIntegerModelValue(bigInteger73);
        java.lang.String str75 = bigIntegerModelValue74.asString();
        java.math.BigInteger bigInteger76 = bigIntegerModelValue74.asBigInteger();
        boolean boolean77 = bigIntegerModelValue67.equals(bigIntegerModelValue74);
        double double79 = bigIntegerModelValue67.asDouble(0.0d);
        long long81 = bigIntegerModelValue67.asLong((long) 52);
        boolean boolean83 = bigIntegerModelValue67.asBoolean(false);
        boolean boolean84 = bigIntegerModelValue62.equals(bigIntegerModelValue67);
        boolean boolean85 = bigIntegerModelValue4.equals(bigIntegerModelValue67);
        double double86 = bigIntegerModelValue4.asDouble();
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(\"hi!\" => 0.0)" + "'", str11, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(\"hi!\" => 0.0)" + "'", str19, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(\"\" => (\"hi!\" => 0.0))" + "'", str28, "(\"\" => (\"hi!\" => 0.0))");
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertNotNull(modelNodeList33);
        org.junit.Assert.assertNotNull(modelValue36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(modelNodeList40);
        org.junit.Assert.assertNotNull(modelNodeList41);
        org.junit.Assert.assertNotNull(modelNode42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + modelType44 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType44.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode50);
        org.junit.Assert.assertNotNull(modelNode52);
        org.junit.Assert.assertNotNull(modelNodeList55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(booleanModelValue59);
        org.junit.Assert.assertNotNull(bigInteger60);
        org.junit.Assert.assertNotNull(bigInteger61);
        org.junit.Assert.assertNotNull(booleanModelValue63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue65);
        org.junit.Assert.assertNotNull(bigInteger66);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(booleanModelValue70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue72);
        org.junit.Assert.assertNotNull(bigInteger73);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "1" + "'", str75, "1");
        org.junit.Assert.assertNotNull(bigInteger76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 1L + "'", long81 == 1L);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1.0d + "'", double86 == 1.0d);
    }

    @Test
    public void test13396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13396");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((long) 'I');
    }

    @Test
    public void test13397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13397");
        java.io.InputStream inputStream0 = null;
        org.jboss.dmr.Base64.InputStream inputStream2 = new org.jboss.dmr.Base64.InputStream(inputStream0, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream3 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream2);
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream2);
        org.jboss.dmr.Base64.InputStream inputStream6 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (int) (short) 10);
        org.jboss.dmr.DoubleModelValue doubleModelValue8 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long9 = doubleModelValue8.asLong();
        boolean boolean11 = doubleModelValue8.asBoolean(true);
        byte[] byteArray12 = doubleModelValue8.asBytes();
        java.lang.String str14 = org.jboss.dmr.Base64.encodeBytes(byteArray12, (int) (byte) -1);
        java.lang.String str16 = org.jboss.dmr.Base64.encodeBytes(byteArray12, (int) 'J');
        // The following exception was thrown during execution in test generation
        try {
            int int19 = inputStream6.read(byteArray12, (int) '4', (int) 'I');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10L + "'", long9 == 10L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "H4sIAAAAAAAAAHNQYQADAAsATXcIAAAA" + "'", str14, "H4sIAAAAAAAAAHNQYQADAAsATXcIAAAA");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "H4sIAAAAAAAAAHNQYQADAAsATXcIAAAA" + "'", str16, "H4sIAAAAAAAAAHNQYQADAAsATXcIAAAA");
    }

    @Test
    public void test13398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13398");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        java.lang.String str2 = stringModelValue1.toString();
        byte[] byteArray3 = stringModelValue1.asBytes();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = org.jboss.dmr.Base64.encodeBytes(byteArray3, (int) 'l', 52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"(\\\"\\\" => (\\\"hi!\\\" => 0.0))\"" + "'", str2, "\"(\\\"\\\" => (\\\"hi!\\\" => 0.0))\"");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[40, 34, 34, 32, 61, 62, 32, 40, 34, 104, 105, 33, 34, 32, 61, 62, 32, 48, 46, 48, 41, 41]");
    }

    @Test
    public void test13399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13399");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        java.lang.String str6 = listModelValue5.asString();
        long long7 = listModelValue5.asLong();
        int int9 = listModelValue5.asInt((int) '4');
        int int11 = listModelValue5.asInt((int) (short) -1);
        org.jboss.dmr.ModelNode modelNode12 = listModelValue5.asObject();
        boolean boolean14 = listModelValue5.asBoolean(true);
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode18 = modelNode15.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList19 = modelNode18.asList();
        org.jboss.dmr.ListModelValue listModelValue20 = new org.jboss.dmr.ListModelValue(modelNodeList19);
        org.jboss.dmr.ModelNode modelNode21 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue20);
        org.jboss.dmr.ModelValue modelValue22 = listModelValue20.resolve();
        int int24 = listModelValue20.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList25 = listModelValue20.asPropertyList();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList26 = listModelValue20.asList();
        long long27 = listModelValue20.asLong();
        boolean boolean28 = listModelValue5.equals(listModelValue20);
        long long29 = listModelValue5.asLong();
        org.jboss.dmr.ModelNode modelNode30 = listModelValue5.asObject();
        org.jboss.dmr.ModelNode modelNode33 = modelNode30.setExpression("{\n    \"\\\"\\\\\\\"1L\\\\\\\"\\\"\" : 0\n}", "0.0");
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str6, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertNotNull(modelNodeList19);
        org.junit.Assert.assertNotNull(modelValue22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(propertyList25);
        org.junit.Assert.assertNotNull(modelNodeList26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1L + "'", long29 == 1L);
        org.junit.Assert.assertNotNull(modelNode30);
        org.junit.Assert.assertNotNull(modelNode33);
    }

    @Test
    public void test13400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13400");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        java.lang.String str5 = bigIntegerModelValue4.asString();
        long long7 = bigIntegerModelValue4.asLong(32L);
        double double8 = bigIntegerModelValue4.asDouble();
        org.jboss.dmr.BooleanModelValue booleanModelValue9 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double10 = booleanModelValue9.asDouble();
        org.jboss.dmr.ModelValue modelValue11 = booleanModelValue9.copy();
        java.math.BigInteger bigInteger12 = booleanModelValue9.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue13 = new org.jboss.dmr.BigIntegerModelValue(bigInteger12);
        double double15 = bigIntegerModelValue13.asDouble((double) 'b');
        boolean boolean16 = bigIntegerModelValue4.equals(bigIntegerModelValue13);
        long long17 = bigIntegerModelValue4.asLong();
        double double19 = bigIntegerModelValue4.asDouble((double) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray20 = bigIntegerModelValue4.asBytes();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1" + "'", str5, "1");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(booleanModelValue9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue11);
        org.junit.Assert.assertNotNull(bigInteger12);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
    }

    @Test
    public void test13401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13401");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        java.lang.String str2 = doubleModelValue1.asString();
        long long4 = doubleModelValue1.asLong((long) (short) -1);
        double double6 = doubleModelValue1.asDouble(0.0d);
        java.math.BigInteger bigInteger7 = doubleModelValue1.asBigInteger();
        boolean boolean8 = doubleModelValue1.asBoolean();
        java.math.BigDecimal bigDecimal9 = doubleModelValue1.asBigDecimal();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "10.0" + "'", str2, "10.0");
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10L + "'", long4 == 10L);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(bigInteger7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(bigDecimal9);
    }

    @Test
    public void test13402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13402");
        java.lang.String str1 = org.jboss.dmr.ModelValue.quote("{\n    \"org.jboss.dmr.stream.ModelException: [(\\\"hi!\\\" => 0.0)]\" : {\n        \"hi!\" : 0.0\n    }\n}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"{\n    \\\"org.jboss.dmr.stream.ModelException: [(\\\\\\\"hi!\\\\\\\" => 0.0)]\\\" : {\n        \\\"hi!\\\" : 0.0\n    }\n}\"" + "'", str1, "\"{\n    \\\"org.jboss.dmr.stream.ModelException: [(\\\\\\\"hi!\\\\\\\" => 0.0)]\\\" : {\n        \\\"hi!\\\" : 0.0\n    }\n}\"");
    }

    @Test
    public void test13403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13403");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue((long) '4');
        java.math.BigDecimal bigDecimal2 = longModelValue1.asBigDecimal();
        int int3 = longModelValue1.asInt();
        java.lang.String str4 = longModelValue1.asString();
        boolean boolean5 = longModelValue1.asBoolean();
        org.jboss.dmr.ObjectModelValue objectModelValue6 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode7 = objectModelValue6.asObject();
        org.jboss.dmr.ModelValue modelValue8 = objectModelValue6.copy();
        int int10 = objectModelValue6.asInt((int) (short) 100);
        org.jboss.dmr.ModelValue modelValue11 = objectModelValue6.protect();
        int int12 = objectModelValue6.asInt();
        org.jboss.dmr.ModelValue modelValue13 = objectModelValue6.resolve();
        boolean boolean14 = longModelValue1.equals((java.lang.Object) objectModelValue6);
        org.jboss.dmr.ModelValue modelValue15 = longModelValue1.resolve();
        org.junit.Assert.assertNotNull(bigDecimal2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "52" + "'", str4, "52");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelValue8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(modelValue11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelValue13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(modelValue15);
    }

    @Test
    public void test13404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13404");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        boolean boolean8 = bigDecimalModelValue7.asBoolean();
        long long9 = bigDecimalModelValue7.asLong();
        java.lang.String str10 = bigDecimalModelValue7.asString();
        java.math.BigInteger bigInteger11 = bigDecimalModelValue7.asBigInteger();
        int int12 = bigDecimalModelValue7.asInt();
        java.math.BigDecimal bigDecimal13 = bigDecimalModelValue7.asBigDecimal();
        java.lang.String str14 = bigDecimalModelValue7.asString();
        double double16 = bigDecimalModelValue7.asDouble((double) 35L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1.0" + "'", str10, "1.0");
        org.junit.Assert.assertNotNull(bigInteger11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(bigDecimal13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1.0" + "'", str14, "1.0");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
    }

    @Test
    public void test13405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13405");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        java.lang.Long long1 = modelNode0.asLongOrNull();
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode5 = modelNode2.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList6 = modelNode5.asList();
        org.jboss.dmr.ListModelValue listModelValue7 = new org.jboss.dmr.ListModelValue(modelNodeList6);
        java.lang.String str8 = listModelValue7.asString();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList9 = listModelValue7.asList();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList10 = modelNode0.asList(modelNodeList9);
        org.jboss.dmr.ModelNode modelNode11 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode14 = modelNode11.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList15 = modelNode14.asList();
        org.jboss.dmr.ListModelValue listModelValue16 = new org.jboss.dmr.ListModelValue(modelNodeList15);
        java.lang.String str17 = listModelValue16.asString();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList18 = listModelValue16.asList();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList19 = modelNode0.asList(modelNodeList18);
        org.jboss.dmr.ListModelValue listModelValue20 = new org.jboss.dmr.ListModelValue(modelNodeList19);
        org.jboss.dmr.ModelValue modelValue21 = listModelValue20.protect();
        java.io.PrintWriter printWriter22 = null;
        // The following exception was thrown during execution in test generation
        try {
            listModelValue20.formatAsJSON(printWriter22, (int) 'd', true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(modelNodeList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str8, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertNotNull(modelNodeList9);
        org.junit.Assert.assertNotNull(modelNodeList10);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(modelNodeList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str17, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertNotNull(modelNodeList18);
        org.junit.Assert.assertNotNull(modelNodeList19);
        org.junit.Assert.assertNotNull(modelValue21);
    }

    @Test
    public void test13406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13406");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode5 = modelNode2.set("hi!", 0.0d);
        java.lang.String str6 = modelNode2.toString();
        org.jboss.dmr.ModelNode modelNode7 = modelNode2.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode9 = modelNode2.set(100);
        org.jboss.dmr.ModelNode modelNode10 = modelNode1.add(modelNode2);
        org.jboss.dmr.LongModelValue longModelValue13 = new org.jboss.dmr.LongModelValue(1L);
        long long14 = longModelValue13.asLong();
        byte[] byteArray15 = longModelValue13.asBytes();
        org.jboss.dmr.ModelNode modelNode16 = modelNode1.add("EXPRESSION_VALUE", byteArray15);
        boolean boolean17 = modelNode1.asBoolean();
        java.lang.Boolean boolean18 = modelNode1.asBooleanOrNull();
        boolean boolean20 = modelNode1.has("\"bytes {\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01\n}\"");
        org.jboss.dmr.Property property21 = new org.jboss.dmr.Property("", modelNode1);
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "(\"hi!\" => 0.0)" + "'", str6, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + true + "'", boolean18, true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test13407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13407");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long2 = doubleModelValue1.asLong();
        boolean boolean4 = doubleModelValue1.asBoolean(true);
        int int5 = doubleModelValue1.asInt();
        org.jboss.dmr.DoubleModelValue doubleModelValue7 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long8 = doubleModelValue7.asLong();
        long long10 = doubleModelValue7.asLong((long) 32);
        byte[] byteArray11 = doubleModelValue7.asBytes();
        boolean boolean12 = doubleModelValue1.equals(doubleModelValue7);
        boolean boolean13 = doubleModelValue7.asBoolean();
        int int15 = doubleModelValue7.asInt(100);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10L + "'", long2 == 10L);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10L + "'", long8 == 10L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10L + "'", long10 == 10L);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
    }

    @Test
    public void test13408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13408");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue5);
        long long7 = listModelValue5.asLong();
        java.util.List<org.jboss.dmr.Property> propertyList8 = listModelValue5.asPropertyList();
        org.jboss.dmr.ModelNode modelNode9 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int10 = modelNode9.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode12 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long13 = modelNode12.asLong();
        org.jboss.dmr.ValueExpression valueExpression14 = modelNode12.asExpression();
        java.math.BigDecimal bigDecimal15 = valueExpression14.resolveBigDecimal();
        org.jboss.dmr.ModelNode modelNode16 = modelNode9.set(valueExpression14);
        java.math.BigDecimal bigDecimal17 = valueExpression14.resolveBigDecimal();
        org.jboss.dmr.ModelNode modelNode18 = new org.jboss.dmr.ModelNode(valueExpression14);
        boolean boolean19 = listModelValue5.equals((java.lang.Object) modelNode18);
        org.jboss.dmr.ModelNode modelNode21 = modelNode18.setExpression("\"//////////8=\"");
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertNotNull(propertyList8);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(valueExpression14);
        org.junit.Assert.assertNotNull(bigDecimal15);
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertNotNull(bigDecimal17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(modelNode21);
    }

    @Test
    public void test13409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13409");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isLong();
        boolean boolean17 = modelReader15.isBigDecimal();
        boolean boolean18 = modelReader15.isBoolean();
        boolean boolean19 = modelReader15.isPropertyEnd();
        boolean boolean20 = modelReader15.isBigDecimal();
        boolean boolean21 = modelReader15.isBigDecimal();
        // The following exception was thrown during execution in test generation
        try {
            modelReader15.close();
            org.junit.Assert.fail("Expected exception of type org.jboss.dmr.stream.ModelException; message: Uncomplete DMR stream have been read");
        } catch (org.jboss.dmr.stream.ModelException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test13410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13410");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.PROPERTY;
        char char1 = modelType0.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue2 = org.jboss.dmr.TypeModelValue.of(modelType0);
        org.jboss.dmr.ModelType modelType3 = org.jboss.dmr.ModelType.PROPERTY;
        char char4 = modelType3.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue5 = org.jboss.dmr.TypeModelValue.of(modelType3);
        boolean boolean6 = typeModelValue2.equals(typeModelValue5);
        java.lang.String str7 = typeModelValue5.asString();
        org.jboss.dmr.ModelType modelType8 = org.jboss.dmr.ModelType.PROPERTY;
        char char9 = modelType8.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue10 = org.jboss.dmr.TypeModelValue.of(modelType8);
        org.jboss.dmr.ModelType modelType11 = org.jboss.dmr.ModelType.PROPERTY;
        char char12 = modelType11.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue13 = org.jboss.dmr.TypeModelValue.of(modelType11);
        boolean boolean14 = typeModelValue10.equals(typeModelValue13);
        java.lang.String str15 = typeModelValue13.asString();
        boolean boolean17 = typeModelValue13.asBoolean(true);
        boolean boolean18 = typeModelValue5.equals(typeModelValue13);
        org.jboss.dmr.ValueExpression valueExpression19 = typeModelValue13.asExpression();
        org.jboss.dmr.ModelType modelType20 = org.jboss.dmr.ModelType.PROPERTY;
        char char21 = modelType20.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue22 = org.jboss.dmr.TypeModelValue.of(modelType20);
        org.jboss.dmr.ModelType modelType23 = org.jboss.dmr.ModelType.PROPERTY;
        char char24 = modelType23.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue25 = org.jboss.dmr.TypeModelValue.of(modelType23);
        boolean boolean26 = typeModelValue22.equals(typeModelValue25);
        boolean boolean27 = typeModelValue13.equals(typeModelValue22);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory29 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream30 = null;
        org.jboss.dmr.Base64.InputStream inputStream32 = new org.jboss.dmr.Base64.InputStream(inputStream30, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue34 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str35 = longModelValue34.asString();
        byte[] byteArray36 = longModelValue34.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue37 = new org.jboss.dmr.BytesModelValue(byteArray36);
        int int40 = inputStream32.read(byteArray36, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream42 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream32, (-1));
        org.jboss.dmr.stream.ModelReader modelReader43 = modelStreamFactory29.newModelReader((java.io.InputStream) inputStream42);
        java.io.InputStream inputStream44 = null;
        org.jboss.dmr.Base64.InputStream inputStream46 = new org.jboss.dmr.Base64.InputStream(inputStream44, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream47 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream46);
        org.jboss.dmr.Base64.InputStream inputStream48 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream46);
        org.jboss.dmr.stream.ModelReader modelReader49 = modelStreamFactory29.newModelReader((java.io.InputStream) inputStream46);
        java.io.InputStream inputStream50 = null;
        org.jboss.dmr.Base64.InputStream inputStream52 = new org.jboss.dmr.Base64.InputStream(inputStream50, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream53 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream52);
        org.jboss.dmr.stream.ModelReader modelReader54 = modelStreamFactory29.newModelReader((java.io.InputStream) inputStream52);
        java.io.OutputStream outputStream55 = null;
        org.jboss.dmr.Base64.OutputStream outputStream56 = new org.jboss.dmr.Base64.OutputStream(outputStream55);
        outputStream56.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream58 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream56);
        org.jboss.dmr.Base64.OutputStream outputStream59 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream58);
        outputStream58.flushBase64();
        org.jboss.dmr.Base64.OutputStream outputStream61 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream58);
        org.jboss.dmr.Base64.OutputStream outputStream62 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream58);
        org.jboss.dmr.stream.ModelWriter modelWriter63 = modelStreamFactory29.newModelWriter((java.io.OutputStream) outputStream62);
        typeModelValue22.write(modelWriter63);
        org.jboss.dmr.ModelType modelType65 = typeModelValue22.asType();
        org.jboss.dmr.ModelNode modelNode66 = new org.jboss.dmr.ModelNode(modelType65);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Double double67 = modelNode66.asDoubleOrNull();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType0.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char1 + "' != '" + 'p' + "'", char1 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue2);
        org.junit.Assert.assertTrue("'" + modelType3 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType3.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char4 + "' != '" + 'p' + "'", char4 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PROPERTY" + "'", str7, "PROPERTY");
        org.junit.Assert.assertTrue("'" + modelType8 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType8.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char9 + "' != '" + 'p' + "'", char9 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue10);
        org.junit.Assert.assertTrue("'" + modelType11 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType11.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char12 + "' != '" + 'p' + "'", char12 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PROPERTY" + "'", str15, "PROPERTY");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(valueExpression19);
        org.junit.Assert.assertTrue("'" + modelType20 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType20.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char21 + "' != '" + 'p' + "'", char21 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue22);
        org.junit.Assert.assertTrue("'" + modelType23 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType23.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char24 + "' != '" + 'p' + "'", char24 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(modelStreamFactory29);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1" + "'", str35, "1");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(modelReader43);
        org.junit.Assert.assertNotNull(modelReader49);
        org.junit.Assert.assertNotNull(modelReader54);
        org.junit.Assert.assertNotNull(modelWriter63);
        org.junit.Assert.assertTrue("'" + modelType65 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType65.equals(org.jboss.dmr.ModelType.PROPERTY));
    }

    @Test
    public void test13411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13411");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.PROPERTY;
        char char1 = modelType0.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue2 = org.jboss.dmr.TypeModelValue.of(modelType0);
        org.jboss.dmr.ModelType modelType3 = org.jboss.dmr.ModelType.PROPERTY;
        char char4 = modelType3.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue5 = org.jboss.dmr.TypeModelValue.of(modelType3);
        boolean boolean6 = typeModelValue2.equals(typeModelValue5);
        java.lang.String str7 = typeModelValue5.asString();
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = modelNode11.asList();
        org.jboss.dmr.ListModelValue listModelValue13 = new org.jboss.dmr.ListModelValue(modelNodeList12);
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue13);
        org.jboss.dmr.ModelValue modelValue15 = listModelValue13.resolve();
        int int17 = listModelValue13.asInt((int) (byte) 100);
        boolean boolean18 = listModelValue13.asBoolean();
        org.jboss.dmr.ModelNode[] modelNodeArray19 = org.jboss.dmr.ListModelValue.NO_NODES;
        boolean boolean20 = listModelValue13.equals((java.lang.Object) modelNodeArray19);
        boolean boolean21 = typeModelValue5.equals((java.lang.Object) listModelValue13);
        boolean boolean22 = typeModelValue5.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression23 = typeModelValue5.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue25 = new org.jboss.dmr.ExpressionValue("TYPE_MODEL_VALUE");
        org.jboss.dmr.ModelType modelType26 = expressionValue25.getType();
        org.jboss.dmr.ValueExpression valueExpression27 = expressionValue25.asExpression();
        boolean boolean28 = valueExpression23.equals(valueExpression27);
        org.jboss.dmr.ModelNode modelNode30 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long31 = modelNode30.asLong();
        org.jboss.dmr.ValueExpression valueExpression32 = modelNode30.asExpression();
        java.math.BigDecimal bigDecimal33 = valueExpression32.resolveBigDecimal();
        java.lang.String str34 = valueExpression32.getExpressionString();
        java.math.BigDecimal bigDecimal35 = valueExpression32.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue36 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal35);
        boolean boolean37 = bigDecimalModelValue36.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression38 = bigDecimalModelValue36.asExpression();
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver39 = org.jboss.dmr.ValueExpressionResolver.DEFAULT_RESOLVER;
        java.math.BigDecimal bigDecimal40 = valueExpression38.resolveBigDecimal(valueExpressionResolver39);
        // The following exception was thrown during execution in test generation
        try {
            java.math.BigInteger bigInteger41 = valueExpression23.resolveBigInteger(valueExpressionResolver39);
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"PROPERTY\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType0.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char1 + "' != '" + 'p' + "'", char1 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue2);
        org.junit.Assert.assertTrue("'" + modelType3 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType3.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char4 + "' != '" + 'p' + "'", char4 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PROPERTY" + "'", str7, "PROPERTY");
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNodeList12);
        org.junit.Assert.assertNotNull(modelValue15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(modelNodeArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(valueExpression23);
        org.junit.Assert.assertTrue("'" + modelType26 + "' != '" + org.jboss.dmr.ModelType.EXPRESSION + "'", modelType26.equals(org.jboss.dmr.ModelType.EXPRESSION));
        org.junit.Assert.assertNotNull(valueExpression27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1L + "'", long31 == 1L);
        org.junit.Assert.assertNotNull(valueExpression32);
        org.junit.Assert.assertNotNull(bigDecimal33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1.0" + "'", str34, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(valueExpression38);
        org.junit.Assert.assertNotNull(valueExpressionResolver39);
        org.junit.Assert.assertNotNull(bigDecimal40);
    }

    @Test
    public void test13412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13412");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long3 = intModelValue1.asLong((long) 'b');
        java.lang.String str4 = intModelValue1.asString();
        java.math.BigInteger bigInteger5 = intModelValue1.asBigInteger();
        boolean boolean7 = intModelValue1.asBoolean(false);
        org.jboss.dmr.IntModelValue intModelValue9 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long11 = intModelValue9.asLong((long) 'b');
        java.lang.String str12 = intModelValue9.asString();
        boolean boolean13 = intModelValue1.equals(intModelValue9);
        byte[] byteArray14 = intModelValue9.asBytes();
        org.jboss.dmr.IntModelValue intModelValue16 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str17 = intModelValue16.asString();
        double double19 = intModelValue16.asDouble((double) 2);
        int int20 = intModelValue16.asInt();
        byte[] byteArray21 = intModelValue16.asBytes();
        long long22 = intModelValue16.asLong();
        boolean boolean23 = intModelValue9.equals(intModelValue16);
        boolean boolean24 = intModelValue9.asBoolean();
        int int26 = intModelValue9.asInt(3);
        int int28 = intModelValue9.asInt(774908201);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 32L + "'", long3 == 32L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "32" + "'", str4, "32");
        org.junit.Assert.assertNotNull(bigInteger5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 32L + "'", long11 == 32L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "32" + "'", str12, "32");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 0, 0, 32]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "32" + "'", str17, "32");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 32.0d + "'", double19 == 32.0d);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 32 + "'", int20 == 32);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 0, 32]");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 32L + "'", long22 == 32L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 32 + "'", int26 == 32);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 32 + "'", int28 == 32);
    }

    @Test
    public void test13413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13413");
        boolean boolean2 = org.jboss.dmr.Base64.decodeToFile("(\"rO0ABXA=\" => bytes {\n    0x40, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n})", "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3D3AAA2hpIUQAAAAA\nAAAAAHg=");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test13414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13414");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        org.jboss.dmr.Property property5 = new org.jboss.dmr.Property("", modelNode4);
        java.lang.String[] strArray6 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode7 = modelNode4.get(strArray6);
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = modelNode11.asList();
        org.jboss.dmr.ListModelValue listModelValue13 = new org.jboss.dmr.ListModelValue(modelNodeList12);
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue13);
        org.jboss.dmr.ModelValue modelValue15 = listModelValue13.resolve();
        int int17 = listModelValue13.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList18 = listModelValue13.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList19 = modelNode7.asPropertyList(propertyList18);
        org.jboss.dmr.ModelNode modelNode21 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode24 = modelNode21.set("hi!", 0.0d);
        org.jboss.dmr.Property property25 = new org.jboss.dmr.Property("", modelNode24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode27 = modelNode24.get(strArray26);
        org.jboss.dmr.ModelNode modelNode28 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode31 = modelNode28.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList32 = modelNode31.asList();
        org.jboss.dmr.ListModelValue listModelValue33 = new org.jboss.dmr.ListModelValue(modelNodeList32);
        org.jboss.dmr.ModelNode modelNode34 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue33);
        org.jboss.dmr.ModelValue modelValue35 = listModelValue33.resolve();
        int int37 = listModelValue33.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList38 = listModelValue33.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList39 = modelNode27.asPropertyList(propertyList38);
        modelNode7.setNoCopy(modelNode27);
        org.jboss.dmr.ModelNode modelNode42 = modelNode27.set((long) 100);
        org.jboss.dmr.ModelNode modelNode43 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode46 = modelNode43.setExpression("hi!", "hi!");
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList47 = modelNode46.asListOrEmpty();
        java.lang.String[] strArray50 = new java.lang.String[] { "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=", "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" };
        boolean boolean51 = modelNode46.hasDefined(strArray50);
        boolean boolean52 = modelNode42.hasDefined(strArray50);
        java.math.BigInteger bigInteger53 = modelNode42.asBigInteger();
        org.jboss.dmr.ModelNode modelNode55 = modelNode42.set(0L);
        org.jboss.dmr.ModelNode modelNode57 = modelNode55.set(true);
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNodeList12);
        org.junit.Assert.assertNotNull(modelValue15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(propertyList18);
        org.junit.Assert.assertNotNull(propertyList19);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(modelNodeList32);
        org.junit.Assert.assertNotNull(modelValue35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(propertyList38);
        org.junit.Assert.assertNotNull(propertyList39);
        org.junit.Assert.assertNotNull(modelNode42);
        org.junit.Assert.assertNotNull(modelNode46);
        org.junit.Assert.assertNotNull(modelNodeList47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(bigInteger53);
        org.junit.Assert.assertNotNull(modelNode55);
        org.junit.Assert.assertNotNull(modelNode57);
    }

    @Test
    public void test13415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13415");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        int int6 = bigIntegerModelValue4.asInt((int) (short) 1);
        org.jboss.dmr.BooleanModelValue booleanModelValue7 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double8 = booleanModelValue7.asDouble();
        org.jboss.dmr.ModelValue modelValue9 = booleanModelValue7.copy();
        java.math.BigInteger bigInteger10 = booleanModelValue7.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue11 = new org.jboss.dmr.BigIntegerModelValue(bigInteger10);
        java.lang.String str12 = bigIntegerModelValue11.asString();
        java.math.BigInteger bigInteger13 = bigIntegerModelValue11.asBigInteger();
        boolean boolean14 = bigIntegerModelValue4.equals(bigIntegerModelValue11);
        int int15 = bigIntegerModelValue11.asInt();
        long long17 = bigIntegerModelValue11.asLong(3L);
        java.io.PrintWriter printWriter18 = null;
        // The following exception was thrown during execution in test generation
        try {
            bigIntegerModelValue11.format(printWriter18, (int) (short) -1, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanModelValue7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue9);
        org.junit.Assert.assertNotNull(bigInteger10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1" + "'", str12, "1");
        org.junit.Assert.assertNotNull(bigInteger13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
    }

    @Test
    public void test13416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13416");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.PROPERTY;
        char char1 = modelType0.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue2 = org.jboss.dmr.TypeModelValue.of(modelType0);
        org.jboss.dmr.ModelType modelType3 = org.jboss.dmr.ModelType.PROPERTY;
        char char4 = modelType3.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue5 = org.jboss.dmr.TypeModelValue.of(modelType3);
        boolean boolean6 = typeModelValue2.equals(typeModelValue5);
        java.lang.String str7 = typeModelValue5.asString();
        org.jboss.dmr.ModelType modelType8 = org.jboss.dmr.ModelType.PROPERTY;
        char char9 = modelType8.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue10 = org.jboss.dmr.TypeModelValue.of(modelType8);
        org.jboss.dmr.ModelType modelType11 = org.jboss.dmr.ModelType.PROPERTY;
        char char12 = modelType11.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue13 = org.jboss.dmr.TypeModelValue.of(modelType11);
        boolean boolean14 = typeModelValue10.equals(typeModelValue13);
        java.lang.String str15 = typeModelValue13.asString();
        boolean boolean17 = typeModelValue13.asBoolean(true);
        boolean boolean18 = typeModelValue5.equals(typeModelValue13);
        org.jboss.dmr.ValueExpression valueExpression19 = typeModelValue13.asExpression();
        org.jboss.dmr.ModelType modelType20 = org.jboss.dmr.ModelType.PROPERTY;
        char char21 = modelType20.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue22 = org.jboss.dmr.TypeModelValue.of(modelType20);
        org.jboss.dmr.ModelType modelType23 = org.jboss.dmr.ModelType.PROPERTY;
        char char24 = modelType23.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue25 = org.jboss.dmr.TypeModelValue.of(modelType23);
        boolean boolean26 = typeModelValue22.equals(typeModelValue25);
        boolean boolean27 = typeModelValue13.equals(typeModelValue22);
        org.jboss.dmr.ValueExpression valueExpression28 = typeModelValue22.asExpression();
        org.jboss.dmr.BooleanModelValue booleanModelValue30 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger31 = booleanModelValue30.asBigInteger();
        byte[] byteArray32 = booleanModelValue30.asBytes();
        boolean boolean33 = booleanModelValue30.asBoolean();
        byte[] byteArray34 = booleanModelValue30.asBytes();
        org.jboss.dmr.DoubleModelValue doubleModelValue36 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long37 = doubleModelValue36.asLong();
        boolean boolean38 = doubleModelValue36.asBoolean();
        byte[] byteArray39 = doubleModelValue36.asBytes();
        java.math.BigInteger bigInteger40 = doubleModelValue36.asBigInteger();
        boolean boolean41 = booleanModelValue30.equals((java.lang.Object) bigInteger40);
        double double43 = booleanModelValue30.asDouble((double) 100L);
        org.jboss.dmr.ModelType modelType44 = org.jboss.dmr.ModelType.PROPERTY;
        char char45 = modelType44.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue46 = org.jboss.dmr.TypeModelValue.of(modelType44);
        org.jboss.dmr.ModelType modelType47 = org.jboss.dmr.ModelType.PROPERTY;
        char char48 = modelType47.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue49 = org.jboss.dmr.TypeModelValue.of(modelType47);
        boolean boolean50 = typeModelValue46.equals(typeModelValue49);
        java.lang.String str51 = typeModelValue49.asString();
        org.jboss.dmr.ModelType modelType52 = org.jboss.dmr.ModelType.PROPERTY;
        char char53 = modelType52.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue54 = org.jboss.dmr.TypeModelValue.of(modelType52);
        org.jboss.dmr.ModelType modelType55 = org.jboss.dmr.ModelType.PROPERTY;
        char char56 = modelType55.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue57 = org.jboss.dmr.TypeModelValue.of(modelType55);
        boolean boolean58 = typeModelValue54.equals(typeModelValue57);
        java.lang.String str59 = typeModelValue57.asString();
        boolean boolean61 = typeModelValue57.asBoolean(true);
        boolean boolean62 = typeModelValue49.equals(typeModelValue57);
        org.jboss.dmr.ValueExpression valueExpression63 = typeModelValue57.asExpression();
        org.jboss.dmr.ValueExpression valueExpression64 = typeModelValue57.asExpression();
        boolean boolean65 = booleanModelValue30.equals((java.lang.Object) typeModelValue57);
        java.lang.String str66 = typeModelValue57.asString();
        boolean boolean68 = typeModelValue57.asBoolean(false);
        boolean boolean69 = typeModelValue22.equals(typeModelValue57);
        boolean boolean71 = typeModelValue22.asBoolean(false);
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType0.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char1 + "' != '" + 'p' + "'", char1 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue2);
        org.junit.Assert.assertTrue("'" + modelType3 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType3.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char4 + "' != '" + 'p' + "'", char4 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PROPERTY" + "'", str7, "PROPERTY");
        org.junit.Assert.assertTrue("'" + modelType8 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType8.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char9 + "' != '" + 'p' + "'", char9 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue10);
        org.junit.Assert.assertTrue("'" + modelType11 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType11.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char12 + "' != '" + 'p' + "'", char12 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PROPERTY" + "'", str15, "PROPERTY");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(valueExpression19);
        org.junit.Assert.assertTrue("'" + modelType20 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType20.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char21 + "' != '" + 'p' + "'", char21 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue22);
        org.junit.Assert.assertTrue("'" + modelType23 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType23.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char24 + "' != '" + 'p' + "'", char24 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(valueExpression28);
        org.junit.Assert.assertNotNull(booleanModelValue30);
        org.junit.Assert.assertNotNull(bigInteger31);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[1]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[1]");
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 10L + "'", long37 == 10L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(bigInteger40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertTrue("'" + modelType44 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType44.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char45 + "' != '" + 'p' + "'", char45 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue46);
        org.junit.Assert.assertTrue("'" + modelType47 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType47.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char48 + "' != '" + 'p' + "'", char48 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "PROPERTY" + "'", str51, "PROPERTY");
        org.junit.Assert.assertTrue("'" + modelType52 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType52.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char53 + "' != '" + 'p' + "'", char53 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue54);
        org.junit.Assert.assertTrue("'" + modelType55 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType55.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char56 + "' != '" + 'p' + "'", char56 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "PROPERTY" + "'", str59, "PROPERTY");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(valueExpression63);
        org.junit.Assert.assertNotNull(valueExpression64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "PROPERTY" + "'", str66, "PROPERTY");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test13417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13417");
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long3 = modelNode2.asLong();
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode9 = modelNode6.set("hi!", 0.0d);
        org.jboss.dmr.Property property10 = new org.jboss.dmr.Property("", modelNode9);
        java.lang.String[] strArray11 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode12 = modelNode9.get(strArray11);
        org.jboss.dmr.ModelNode modelNode13 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode16 = modelNode13.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList17 = modelNode16.asList();
        org.jboss.dmr.ListModelValue listModelValue18 = new org.jboss.dmr.ListModelValue(modelNodeList17);
        org.jboss.dmr.ModelNode modelNode19 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue18);
        org.jboss.dmr.ModelValue modelValue20 = listModelValue18.resolve();
        int int22 = listModelValue18.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList23 = listModelValue18.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList24 = modelNode12.asPropertyList(propertyList23);
        org.jboss.dmr.ModelNode modelNode26 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode29 = modelNode26.set("hi!", 0.0d);
        org.jboss.dmr.Property property30 = new org.jboss.dmr.Property("", modelNode29);
        java.lang.String[] strArray31 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode32 = modelNode29.get(strArray31);
        org.jboss.dmr.ModelNode modelNode33 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode36 = modelNode33.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList37 = modelNode36.asList();
        org.jboss.dmr.ListModelValue listModelValue38 = new org.jboss.dmr.ListModelValue(modelNodeList37);
        org.jboss.dmr.ModelNode modelNode39 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue38);
        org.jboss.dmr.ModelValue modelValue40 = listModelValue38.resolve();
        int int42 = listModelValue38.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList43 = listModelValue38.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList44 = modelNode32.asPropertyList(propertyList43);
        modelNode12.setNoCopy(modelNode32);
        org.jboss.dmr.ModelNode modelNode46 = modelNode2.set("org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]", modelNode12);
        org.jboss.dmr.ModelNode modelNode48 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode51 = modelNode48.set("hi!", 0.0d);
        org.jboss.dmr.Property property52 = new org.jboss.dmr.Property("", modelNode51);
        java.lang.String[] strArray53 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode54 = modelNode51.get(strArray53);
        org.jboss.dmr.ModelNode modelNode55 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int56 = modelNode55.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode57 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode60 = modelNode57.setExpression("hi!", "hi!");
        java.lang.String str61 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode57);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList62 = modelNode57.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode63 = modelNode55.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList62);
        org.jboss.dmr.ModelNode modelNode64 = modelNode54.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList62);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList65 = modelNode2.asList(modelNodeList62);
        org.jboss.dmr.PropertyModelValue propertyModelValue67 = new org.jboss.dmr.PropertyModelValue("Expression \"true\"", modelNode2, false);
        org.jboss.dmr.ModelType modelType68 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode69 = new org.jboss.dmr.ModelNode(modelType68);
        org.jboss.dmr.ModelNode modelNode71 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode74 = modelNode71.set("hi!", 0.0d);
        org.jboss.dmr.Property property75 = new org.jboss.dmr.Property("", modelNode74);
        org.jboss.dmr.ModelNode modelNode76 = modelNode69.set(property75);
        org.jboss.dmr.PropertyModelValue propertyModelValue77 = new org.jboss.dmr.PropertyModelValue(property75);
        org.jboss.dmr.ModelValue modelValue78 = propertyModelValue77.copy();
        boolean boolean79 = propertyModelValue67.equals(propertyModelValue77);
        boolean boolean81 = propertyModelValue77.has("bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        java.lang.String str82 = propertyModelValue77.asString();
        org.jboss.dmr.ModelValue modelValue83 = propertyModelValue77.resolve();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList84 = modelValue83.asList();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 1L + "'", long3 == 1L);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertNotNull(modelNodeList17);
        org.junit.Assert.assertNotNull(modelValue20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(propertyList23);
        org.junit.Assert.assertNotNull(propertyList24);
        org.junit.Assert.assertNotNull(modelNode29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertNotNull(modelNode36);
        org.junit.Assert.assertNotNull(modelNodeList37);
        org.junit.Assert.assertNotNull(modelValue40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(propertyList43);
        org.junit.Assert.assertNotNull(propertyList44);
        org.junit.Assert.assertNotNull(modelNode46);
        org.junit.Assert.assertNotNull(modelNode51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(modelNode54);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(modelNode60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str61, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList62);
        org.junit.Assert.assertNotNull(modelNode63);
        org.junit.Assert.assertNotNull(modelNode64);
        org.junit.Assert.assertNotNull(modelNodeList65);
        org.junit.Assert.assertTrue("'" + modelType68 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType68.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode74);
        org.junit.Assert.assertNotNull(modelNode76);
        org.junit.Assert.assertNotNull(modelValue78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(\"\" => (\"hi!\" => 0.0))" + "'", str82, "(\"\" => (\"hi!\" => 0.0))");
        org.junit.Assert.assertNotNull(modelValue83);
        org.junit.Assert.assertNotNull(modelNodeList84);
    }

    @Test
    public void test13418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13418");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        java.io.InputStream inputStream16 = null;
        org.jboss.dmr.Base64.InputStream inputStream18 = new org.jboss.dmr.Base64.InputStream(inputStream16, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream19 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream18);
        org.jboss.dmr.Base64.InputStream inputStream20 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream18);
        org.jboss.dmr.stream.ModelReader modelReader21 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream18);
        java.io.InputStream inputStream22 = null;
        org.jboss.dmr.Base64.InputStream inputStream24 = new org.jboss.dmr.Base64.InputStream(inputStream22, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue26 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str27 = longModelValue26.asString();
        byte[] byteArray28 = longModelValue26.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue29 = new org.jboss.dmr.BytesModelValue(byteArray28);
        int int32 = inputStream24.read(byteArray28, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream34 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream24, (-1));
        org.jboss.dmr.Base64.InputStream inputStream36 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream24, (int) 'p');
        org.jboss.dmr.Base64.InputStream inputStream37 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream36);
        org.jboss.dmr.stream.ModelReader modelReader38 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream36);
        java.io.OutputStream outputStream39 = null;
        org.jboss.dmr.Base64.OutputStream outputStream40 = new org.jboss.dmr.Base64.OutputStream(outputStream39);
        outputStream40.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream42 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream40);
        org.jboss.dmr.Base64.OutputStream outputStream43 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream42);
        outputStream43.flushBase64();
        outputStream43.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream46 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream43);
        org.jboss.dmr.Base64.OutputStream outputStream48 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream46, 0);
        org.jboss.dmr.Base64.OutputStream outputStream49 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream48);
        org.jboss.dmr.stream.ModelWriter modelWriter50 = modelStreamFactory1.newModelWriter((java.io.OutputStream) outputStream49);
        java.io.OutputStream outputStream51 = null;
        org.jboss.dmr.Base64.OutputStream outputStream52 = new org.jboss.dmr.Base64.OutputStream(outputStream51);
        outputStream52.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream54 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream52);
        org.jboss.dmr.Base64.OutputStream outputStream55 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream54);
        outputStream55.flushBase64();
        outputStream55.flushBase64();
        outputStream55.flushBase64();
        org.jboss.dmr.stream.ModelWriter modelWriter59 = modelStreamFactory1.newModelWriter((java.io.OutputStream) outputStream55);
        // The following exception was thrown during execution in test generation
        try {
            modelWriter59.close();
            org.junit.Assert.fail("Expected exception of type org.jboss.dmr.stream.ModelException; message: Uncomplete DMR stream have been written");
        } catch (org.jboss.dmr.stream.ModelException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertNotNull(modelReader21);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1" + "'", str27, "1");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(modelReader38);
        org.junit.Assert.assertNotNull(modelWriter50);
        org.junit.Assert.assertNotNull(modelWriter59);
    }

    @Test
    public void test13419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13419");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        java.lang.String str5 = modelNode1.toString();
        org.jboss.dmr.ModelNode modelNode6 = modelNode1.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(100);
        org.jboss.dmr.ModelNode modelNode9 = modelNode0.add(modelNode1);
        org.jboss.dmr.ModelNode modelNode12 = new org.jboss.dmr.ModelNode((double) 100);
        org.jboss.dmr.ModelNode modelNode14 = modelNode12.set((int) '#');
        org.jboss.dmr.ModelNode modelNode15 = modelNode1.setNoCopy("1.0", modelNode12);
        long long17 = modelNode12.asLong((long) 112);
        org.jboss.dmr.ModelNode modelNode20 = modelNode12.set("35", "\"1L\"");
        java.lang.String str22 = modelNode20.asString("{ \"\" : { \"hi!\" : 0.0 } }");
        java.lang.String str23 = modelNode20.asString();
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(\"hi!\" => 0.0)" + "'", str5, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(modelNode15);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 35L + "'", long17 == 35L);
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(\"35\" => \"\\\"1L\\\"\")" + "'", str22, "(\"35\" => \"\\\"1L\\\"\")");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(\"35\" => \"\\\"1L\\\"\")" + "'", str23, "(\"35\" => \"\\\"1L\\\"\")");
    }

    @Test
    public void test13420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13420");
        org.jboss.dmr.ModelNode modelNode1 = org.jboss.dmr.ModelNode.fromString("bytes {\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01\n}");
        org.jboss.dmr.ModelNode modelNode3 = modelNode1.set((int) (short) 100);
        boolean boolean4 = modelNode1.asBoolean();
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test13421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13421");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str2 = intModelValue1.asString();
        byte[] byteArray3 = intModelValue1.asBytes();
        org.jboss.dmr.IntModelValue intModelValue5 = new org.jboss.dmr.IntModelValue(10);
        boolean boolean6 = intModelValue1.equals(intModelValue5);
        java.math.BigInteger bigInteger7 = intModelValue5.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue8 = new org.jboss.dmr.BigIntegerModelValue(bigInteger7);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "32" + "'", str2, "32");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 0, 32]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(bigInteger7);
    }

    @Test
    public void test13422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13422");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.setExpression("hi!", "hi!");
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode9 = modelNode6.set("hi!", 0.0d);
        org.jboss.dmr.Property property10 = new org.jboss.dmr.Property("", modelNode9);
        boolean boolean12 = modelNode9.equals((java.lang.Object) 100L);
        boolean boolean13 = modelNode1.equals(modelNode9);
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode18 = modelNode15.set("hi!", 0.0d);
        org.jboss.dmr.Property property19 = new org.jboss.dmr.Property("", modelNode18);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode21 = modelNode18.get(strArray20);
        org.jboss.dmr.ModelNode modelNode22 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int23 = modelNode22.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode24 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode27 = modelNode24.setExpression("hi!", "hi!");
        java.lang.String str28 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode24);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList29 = modelNode24.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode30 = modelNode22.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList29);
        org.jboss.dmr.ModelNode modelNode31 = modelNode21.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList29);
        org.jboss.dmr.ModelNode modelNode32 = modelNode9.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList29);
        org.jboss.dmr.ModelNode modelNode34 = modelNode9.add("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4");
        org.jboss.dmr.PropertyModelValue propertyModelValue36 = new org.jboss.dmr.PropertyModelValue("1.0", modelNode9, false);
        java.io.InputStream inputStream37 = null;
        org.jboss.dmr.Base64.InputStream inputStream39 = new org.jboss.dmr.Base64.InputStream(inputStream37, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue41 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str42 = longModelValue41.asString();
        byte[] byteArray43 = longModelValue41.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue44 = new org.jboss.dmr.BytesModelValue(byteArray43);
        int int47 = inputStream39.read(byteArray43, (int) (short) 1, (int) (byte) -1);
        java.lang.String str48 = org.jboss.dmr.Base64.encodeBytes(byteArray43);
        org.jboss.dmr.ModelNode modelNode49 = modelNode9.set(byteArray43);
        org.jboss.dmr.ModelNode modelNode51 = modelNode9.set(true);
        org.jboss.dmr.IntModelValue intModelValue53 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str54 = intModelValue53.asString();
        double double56 = intModelValue53.asDouble((double) 2);
        java.math.BigDecimal bigDecimal57 = intModelValue53.asBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue58 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal57);
        long long59 = bigDecimalModelValue58.asLong();
        java.math.BigDecimal bigDecimal60 = bigDecimalModelValue58.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode61 = modelNode51.set(bigDecimal60);
        int int63 = modelNode61.asInt((int) ' ');
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(modelNode21);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str28, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList29);
        org.junit.Assert.assertNotNull(modelNode30);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertNotNull(modelNode34);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1" + "'", str42, "1");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AAAAAAAAAAE=" + "'", str48, "AAAAAAAAAAE=");
        org.junit.Assert.assertNotNull(modelNode49);
        org.junit.Assert.assertNotNull(modelNode51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "32" + "'", str54, "32");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 32.0d + "'", double56 == 32.0d);
        org.junit.Assert.assertNotNull(bigDecimal57);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 32L + "'", long59 == 32L);
        org.junit.Assert.assertNotNull(bigDecimal60);
        org.junit.Assert.assertNotNull(modelNode61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 32 + "'", int63 == 32);
    }

    @Test
    public void test13423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13423");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        double double9 = bigDecimalModelValue7.asDouble((double) 'p');
        boolean boolean10 = bigDecimalModelValue7.asBoolean();
        boolean boolean12 = bigDecimalModelValue7.equals((java.lang.Object) "{\n    \"EXPRESSION_VALUE\" : \"hi!\"\n}");
        java.math.BigInteger bigInteger13 = bigDecimalModelValue7.asBigInteger();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(bigInteger13);
    }

    @Test
    public void test13424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13424");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.setExpression("hi!", "hi!");
        java.lang.String str5 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode1);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList6 = modelNode1.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set((double) 0);
        org.jboss.dmr.ModelType modelType10 = org.jboss.dmr.ModelType.PROPERTY;
        char char11 = modelType10.getTypeChar();
        org.jboss.dmr.ModelNode modelNode12 = modelNode1.set("[(\"hi!\" => 0.0)]", modelType10);
        org.jboss.dmr.Property property13 = new org.jboss.dmr.Property("\"(\\\"hi!\\\" => 0.0)\"", modelNode12);
        org.jboss.dmr.ModelType modelType15 = org.jboss.dmr.ModelType.STRING;
        org.jboss.dmr.ModelNode modelNode16 = modelNode12.set("H4sIAAAAAAAAAAMAAAAAAAAAAAA=", modelType15);
        org.jboss.dmr.ModelNode modelNode17 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode20 = modelNode17.setExpression("hi!", "hi!");
        org.jboss.dmr.ModelNode modelNode22 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode25 = modelNode22.set("hi!", 0.0d);
        org.jboss.dmr.Property property26 = new org.jboss.dmr.Property("", modelNode25);
        boolean boolean28 = modelNode25.equals((java.lang.Object) 100L);
        boolean boolean29 = modelNode17.equals(modelNode25);
        org.jboss.dmr.ModelNode modelNode31 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode34 = modelNode31.set("hi!", 0.0d);
        org.jboss.dmr.Property property35 = new org.jboss.dmr.Property("", modelNode34);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode37 = modelNode34.get(strArray36);
        org.jboss.dmr.ModelNode modelNode38 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int39 = modelNode38.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode40 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode43 = modelNode40.setExpression("hi!", "hi!");
        java.lang.String str44 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode40);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList45 = modelNode40.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode46 = modelNode38.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList45);
        org.jboss.dmr.ModelNode modelNode47 = modelNode37.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList45);
        org.jboss.dmr.ModelNode modelNode48 = modelNode25.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList45);
        org.jboss.dmr.ModelNode modelNode50 = modelNode25.add("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4");
        org.jboss.dmr.ModelNode modelNode52 = modelNode25.add(false);
        org.jboss.dmr.BooleanModelValue booleanModelValue54 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray55 = booleanModelValue54.asBytes();
        java.lang.String str56 = booleanModelValue54.asString();
        int int57 = booleanModelValue54.asInt();
        java.math.BigInteger bigInteger58 = booleanModelValue54.asBigInteger();
        org.jboss.dmr.ModelNode modelNode59 = modelNode25.set(bigInteger58);
        org.jboss.dmr.ModelNode modelNode60 = new org.jboss.dmr.ModelNode(bigInteger58);
        org.jboss.dmr.ModelNode modelNode61 = modelNode12.set(bigInteger58);
        org.jboss.dmr.ModelNode modelNode62 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode65 = modelNode62.set("hi!", 0.0d);
        org.jboss.dmr.Validation.validate(modelNode62, "[(\"hi!\" => 0.0)]");
        boolean boolean69 = modelNode62.has("H4sIAAAAAAAAAAMAAAAAAAAAAAA=");
        org.jboss.dmr.ModelNode modelNode71 = modelNode62.set((long) 'p');
        boolean boolean72 = modelNode12.equals(modelNode62);
        org.jboss.dmr.ModelType modelType73 = modelNode12.getType();
        org.jboss.dmr.ModelNode modelNode75 = modelNode12.set((double) '4');
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str5, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertTrue("'" + modelType10 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType10.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char11 + "' != '" + 'p' + "'", char11 == 'p');
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertTrue("'" + modelType15 + "' != '" + org.jboss.dmr.ModelType.STRING + "'", modelType15.equals(org.jboss.dmr.ModelType.STRING));
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(modelNode34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(modelNode37);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(modelNode43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str44, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList45);
        org.junit.Assert.assertNotNull(modelNode46);
        org.junit.Assert.assertNotNull(modelNode47);
        org.junit.Assert.assertNotNull(modelNode48);
        org.junit.Assert.assertNotNull(modelNode50);
        org.junit.Assert.assertNotNull(modelNode52);
        org.junit.Assert.assertNotNull(booleanModelValue54);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "true" + "'", str56, "true");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(bigInteger58);
        org.junit.Assert.assertNotNull(modelNode59);
        org.junit.Assert.assertNotNull(modelNode61);
        org.junit.Assert.assertNotNull(modelNode65);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(modelNode71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + modelType73 + "' != '" + org.jboss.dmr.ModelType.BIG_INTEGER + "'", modelType73.equals(org.jboss.dmr.ModelType.BIG_INTEGER));
        org.junit.Assert.assertNotNull(modelNode75);
    }

    @Test
    public void test13425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13425");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        int int9 = bigDecimalModelValue7.asInt(0);
        org.jboss.dmr.ModelNode modelNode10 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode13 = modelNode10.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList14 = modelNode13.asList();
        org.jboss.dmr.ListModelValue listModelValue15 = new org.jboss.dmr.ListModelValue(modelNodeList14);
        org.jboss.dmr.ModelNode modelNode16 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue15);
        org.jboss.dmr.ModelValue modelValue17 = listModelValue15.resolve();
        int int19 = listModelValue15.asInt((int) (byte) 100);
        boolean boolean20 = bigDecimalModelValue7.equals((java.lang.Object) listModelValue15);
        double double22 = bigDecimalModelValue7.asDouble(35.0d);
        org.jboss.dmr.ModelNode modelNode24 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long25 = modelNode24.asLong();
        org.jboss.dmr.ValueExpression valueExpression26 = modelNode24.asExpression();
        java.math.BigDecimal bigDecimal27 = valueExpression26.resolveBigDecimal();
        java.lang.String str28 = valueExpression26.getExpressionString();
        java.math.BigDecimal bigDecimal29 = valueExpression26.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue30 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal29);
        int int32 = bigDecimalModelValue30.asInt(0);
        java.math.BigInteger bigInteger33 = bigDecimalModelValue30.asBigInteger();
        org.jboss.dmr.ModelNode modelNode35 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long36 = modelNode35.asLong();
        org.jboss.dmr.ValueExpression valueExpression37 = modelNode35.asExpression();
        java.math.BigDecimal bigDecimal38 = valueExpression37.resolveBigDecimal();
        java.lang.String str39 = valueExpression37.getExpressionString();
        java.math.BigDecimal bigDecimal40 = valueExpression37.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue41 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal40);
        boolean boolean42 = bigDecimalModelValue41.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression43 = bigDecimalModelValue41.asExpression();
        int int44 = bigDecimalModelValue41.asInt();
        long long45 = bigDecimalModelValue41.asLong();
        long long47 = bigDecimalModelValue41.asLong(32L);
        boolean boolean48 = bigDecimalModelValue30.equals(bigDecimalModelValue41);
        double double50 = bigDecimalModelValue30.asDouble((double) (short) -1);
        org.jboss.dmr.ModelNode modelNode52 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long53 = modelNode52.asLong();
        org.jboss.dmr.ValueExpression valueExpression54 = modelNode52.asExpression();
        java.math.BigDecimal bigDecimal55 = valueExpression54.resolveBigDecimal();
        java.lang.String str56 = valueExpression54.getExpressionString();
        java.math.BigDecimal bigDecimal57 = valueExpression54.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue58 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal57);
        boolean boolean59 = bigDecimalModelValue58.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression60 = bigDecimalModelValue58.asExpression();
        int int61 = bigDecimalModelValue58.asInt();
        long long62 = bigDecimalModelValue58.asLong();
        long long64 = bigDecimalModelValue58.asLong(32L);
        boolean boolean65 = bigDecimalModelValue30.equals(bigDecimalModelValue58);
        org.jboss.dmr.ValueExpression valueExpression66 = bigDecimalModelValue58.asExpression();
        boolean boolean67 = bigDecimalModelValue7.equals(bigDecimalModelValue58);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNodeList14);
        org.junit.Assert.assertNotNull(modelValue17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
        org.junit.Assert.assertNotNull(valueExpression26);
        org.junit.Assert.assertNotNull(bigDecimal27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1.0" + "'", str28, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(bigInteger33);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1L + "'", long36 == 1L);
        org.junit.Assert.assertNotNull(valueExpression37);
        org.junit.Assert.assertNotNull(bigDecimal38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1.0" + "'", str39, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(valueExpression43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1L + "'", long47 == 1L);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 1L + "'", long53 == 1L);
        org.junit.Assert.assertNotNull(valueExpression54);
        org.junit.Assert.assertNotNull(bigDecimal55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "1.0" + "'", str56, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(valueExpression60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 1L + "'", long62 == 1L);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 1L + "'", long64 == 1L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(valueExpression66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test13426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13426");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long3 = intModelValue1.asLong((long) 'b');
        java.lang.String str4 = intModelValue1.asString();
        java.math.BigInteger bigInteger5 = intModelValue1.asBigInteger();
        boolean boolean7 = intModelValue1.asBoolean(false);
        org.jboss.dmr.IntModelValue intModelValue9 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long11 = intModelValue9.asLong((long) 'b');
        java.lang.String str12 = intModelValue9.asString();
        boolean boolean13 = intModelValue1.equals(intModelValue9);
        java.lang.String str15 = intModelValue1.toJSONString(true);
        org.jboss.dmr.IntModelValue intModelValue17 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str18 = intModelValue17.asString();
        double double20 = intModelValue17.asDouble((double) 2);
        int int22 = intModelValue17.asInt((int) (byte) 100);
        boolean boolean23 = intModelValue1.equals(intModelValue17);
        org.jboss.dmr.ValueExpression valueExpression24 = intModelValue1.asExpression();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 32L + "'", long3 == 32L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "32" + "'", str4, "32");
        org.junit.Assert.assertNotNull(bigInteger5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 32L + "'", long11 == 32L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "32" + "'", str12, "32");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "32" + "'", str15, "32");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "32" + "'", str18, "32");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 32.0d + "'", double20 == 32.0d);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 32 + "'", int22 == 32);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(valueExpression24);
    }

    @Test
    public void test13427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13427");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        double double6 = bigIntegerModelValue4.asDouble((double) 'b');
        java.lang.String str7 = bigIntegerModelValue4.asString();
        org.jboss.dmr.ValueExpression valueExpression8 = bigIntegerModelValue4.asExpression();
        boolean boolean10 = bigIntegerModelValue4.asBoolean(true);
        org.jboss.dmr.BooleanModelValue booleanModelValue11 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double12 = booleanModelValue11.asDouble();
        org.jboss.dmr.ModelValue modelValue13 = booleanModelValue11.copy();
        java.math.BigInteger bigInteger14 = booleanModelValue11.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue15 = new org.jboss.dmr.BigIntegerModelValue(bigInteger14);
        java.lang.String str16 = bigIntegerModelValue15.asString();
        long long18 = bigIntegerModelValue15.asLong(32L);
        double double19 = bigIntegerModelValue15.asDouble();
        org.jboss.dmr.BooleanModelValue booleanModelValue20 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double21 = booleanModelValue20.asDouble();
        org.jboss.dmr.ModelValue modelValue22 = booleanModelValue20.copy();
        java.math.BigInteger bigInteger23 = booleanModelValue20.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue24 = new org.jboss.dmr.BigIntegerModelValue(bigInteger23);
        double double26 = bigIntegerModelValue24.asDouble((double) 'b');
        boolean boolean27 = bigIntegerModelValue15.equals(bigIntegerModelValue24);
        org.jboss.dmr.BooleanModelValue booleanModelValue28 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double29 = booleanModelValue28.asDouble();
        org.jboss.dmr.ModelValue modelValue30 = booleanModelValue28.copy();
        java.math.BigInteger bigInteger31 = booleanModelValue28.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue32 = new org.jboss.dmr.BigIntegerModelValue(bigInteger31);
        long long34 = bigIntegerModelValue32.asLong((long) 'b');
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue35 = null;
        boolean boolean36 = bigIntegerModelValue32.equals(bigIntegerModelValue35);
        boolean boolean37 = bigIntegerModelValue15.equals(bigIntegerModelValue32);
        java.math.BigDecimal bigDecimal38 = bigIntegerModelValue15.asBigDecimal();
        boolean boolean39 = bigIntegerModelValue4.equals(bigIntegerModelValue15);
        org.jboss.dmr.ValueExpression valueExpression40 = bigIntegerModelValue15.asExpression();
        long long41 = valueExpression40.resolveLong();
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(valueExpression8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(booleanModelValue11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue13);
        org.junit.Assert.assertNotNull(bigInteger14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1" + "'", str16, "1");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(booleanModelValue20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue22);
        org.junit.Assert.assertNotNull(bigInteger23);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(booleanModelValue28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue30);
        org.junit.Assert.assertNotNull(bigInteger31);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1L + "'", long34 == 1L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(bigDecimal38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(valueExpression40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
    }

    @Test
    public void test13428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13428");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        org.jboss.dmr.ModelValue modelValue2 = objectModelValue0.copy();
        java.lang.String str3 = objectModelValue0.toString();
        org.jboss.dmr.ObjectModelValue objectModelValue4 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode5 = objectModelValue4.asObject();
        org.jboss.dmr.ObjectModelValue objectModelValue6 = null;
        boolean boolean7 = objectModelValue4.equals(objectModelValue6);
        boolean boolean8 = objectModelValue0.equals(objectModelValue6);
        org.jboss.dmr.ModelNode modelNode10 = new org.jboss.dmr.ModelNode("EXPRESSION_VALUE");
        org.jboss.dmr.BooleanModelValue booleanModelValue13 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger14 = booleanModelValue13.asBigInteger();
        byte[] byteArray15 = booleanModelValue13.asBytes();
        org.jboss.dmr.ModelNode modelNode16 = modelNode10.set("expression \"hi!\"", byteArray15);
        org.jboss.dmr.ModelNode modelNode17 = modelNode16.clear();
        int int19 = modelNode16.asInt((int) 'p');
        java.lang.Boolean boolean20 = modelNode16.asBooleanOrNull();
        boolean boolean21 = objectModelValue0.equals((java.lang.Object) modelNode16);
        double double23 = modelNode16.asDouble((double) 0.0f);
        org.jboss.dmr.ModelNode modelNode24 = modelNode16.clone();
        org.jboss.dmr.ModelNode modelNode26 = modelNode24.set("\"big decimal 32\"");
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode28 = modelNode24.add((double) 35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{}" + "'", str3, "{}");
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(booleanModelValue13);
        org.junit.Assert.assertNotNull(bigInteger14);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[1]");
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 112 + "'", int19 == 112);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertNotNull(modelNode26);
    }

    @Test
    public void test13429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13429");
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode((-1.0d));
        org.jboss.dmr.ModelNode modelNode3 = modelNode2.clear();
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode(true);
        org.jboss.dmr.ModelNode modelNode7 = modelNode6.resolve();
        java.lang.String str8 = modelNode7.toString();
        org.jboss.dmr.ModelNode modelNode9 = modelNode3.add("(\"org.jboss.dmr.stream.ModelException: [(\\\"hi!\\\" => 0.0)]\" => (\"hi!\" => 0.0))", modelNode7);
        org.jboss.dmr.ModelNode modelNode10 = modelNode7.clear();
        org.jboss.dmr.Property property11 = new org.jboss.dmr.Property("{\"hi!\" => 0.0}", modelNode10);
        org.jboss.dmr.BooleanModelValue booleanModelValue12 = org.jboss.dmr.BooleanModelValue.FALSE;
        long long13 = booleanModelValue12.asLong();
        byte[] byteArray14 = booleanModelValue12.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue15 = new org.jboss.dmr.BytesModelValue(byteArray14);
        java.math.BigInteger bigInteger16 = bytesModelValue15.asBigInteger();
        org.jboss.dmr.ModelNode modelNode17 = modelNode10.add(bigInteger16);
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "true" + "'", str8, "true");
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertNotNull(booleanModelValue12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0]");
        org.junit.Assert.assertNotNull(bigInteger16);
        org.junit.Assert.assertNotNull(modelNode17);
    }

    @Test
    public void test13430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13430");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str2 = longModelValue1.asString();
        byte[] byteArray3 = longModelValue1.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue4 = new org.jboss.dmr.BytesModelValue(byteArray3);
        java.lang.String str5 = bytesModelValue4.asString();
        int int6 = bytesModelValue4.asInt();
        int int7 = bytesModelValue4.asInt();
        org.jboss.dmr.LongModelValue longModelValue9 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str10 = longModelValue9.asString();
        byte[] byteArray11 = longModelValue9.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue12 = new org.jboss.dmr.BytesModelValue(byteArray11);
        double double13 = bytesModelValue12.asDouble();
        boolean boolean14 = bytesModelValue4.equals(bytesModelValue12);
        byte[] byteArray15 = bytesModelValue12.asBytes();
        java.math.BigInteger bigInteger16 = bytesModelValue12.asBigInteger();
        java.lang.String str17 = bytesModelValue12.asString();
        int int18 = bytesModelValue12.asInt();
        int int19 = bytesModelValue12.asInt();
        org.jboss.dmr.LongModelValue longModelValue21 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str22 = longModelValue21.asString();
        byte[] byteArray23 = longModelValue21.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue24 = new org.jboss.dmr.BytesModelValue(byteArray23);
        double double25 = bytesModelValue24.asDouble();
        org.jboss.dmr.ModelNode modelNode27 = new org.jboss.dmr.ModelNode((double) 100);
        org.jboss.dmr.ModelNode modelNode29 = modelNode27.set((int) '#');
        java.lang.Boolean boolean30 = modelNode27.asBooleanOrNull();
        java.lang.String str32 = modelNode27.asString("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        boolean boolean33 = bytesModelValue24.equals((java.lang.Object) modelNode27);
        int int34 = bytesModelValue24.asInt();
        boolean boolean35 = bytesModelValue12.equals(bytesModelValue24);
        org.jboss.dmr.ExpressionValue expressionValue37 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue39 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean40 = expressionValue37.equals(expressionValue39);
        org.jboss.dmr.ExpressionValue expressionValue42 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue44 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean45 = expressionValue42.equals(expressionValue44);
        boolean boolean46 = expressionValue37.equals(expressionValue44);
        org.jboss.dmr.ModelValue modelValue47 = expressionValue37.resolve();
        java.lang.String str48 = expressionValue37.asString();
        org.jboss.dmr.ModelValue modelValue49 = expressionValue37.resolve();
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory51 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream52 = null;
        org.jboss.dmr.Base64.InputStream inputStream54 = new org.jboss.dmr.Base64.InputStream(inputStream52, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream55 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream54);
        org.jboss.dmr.stream.ModelReader modelReader56 = modelStreamFactory51.newModelReader((java.io.InputStream) inputStream55);
        java.io.OutputStream outputStream57 = null;
        org.jboss.dmr.Base64.OutputStream outputStream58 = new org.jboss.dmr.Base64.OutputStream(outputStream57);
        org.jboss.dmr.Base64.OutputStream outputStream59 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream58);
        outputStream58.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter62 = modelStreamFactory51.newModelWriter((java.io.OutputStream) outputStream58);
        org.jboss.dmr.stream.ModelWriter modelWriter63 = modelWriter62.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter65 = modelWriter63.writeInt((int) (byte) 10);
        expressionValue37.write(modelWriter63);
        org.jboss.dmr.ModelNode modelNode68 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode71 = modelNode68.set("hi!", 0.0d);
        org.jboss.dmr.Property property72 = new org.jboss.dmr.Property("", modelNode71);
        java.lang.String[] strArray73 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode74 = modelNode71.get(strArray73);
        org.jboss.dmr.ModelNode modelNode75 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int76 = modelNode75.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode77 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode80 = modelNode77.setExpression("hi!", "hi!");
        java.lang.String str81 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode77);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList82 = modelNode77.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode83 = modelNode75.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList82);
        org.jboss.dmr.ModelNode modelNode84 = modelNode74.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList82);
        org.jboss.dmr.LongModelValue longModelValue86 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str87 = longModelValue86.asString();
        double double89 = longModelValue86.asDouble((double) 32L);
        org.jboss.dmr.ValueExpression valueExpression90 = longModelValue86.asExpression();
        byte[] byteArray91 = longModelValue86.asBytes();
        org.jboss.dmr.ModelNode modelNode92 = modelNode84.add(byteArray91);
        org.jboss.dmr.stream.ModelWriter modelWriter93 = modelWriter63.writeBytes(byteArray91);
        org.jboss.dmr.stream.ModelWriter modelWriter95 = modelWriter93.writeExpression("[]");
        org.jboss.dmr.stream.ModelWriter modelWriter97 = modelWriter95.writeBoolean(true);
        bytesModelValue12.write(modelWriter97);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1" + "'", str2, "1");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str5, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1" + "'", str10, "1");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.9E-324d + "'", double13 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(bigInteger16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str17, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1" + "'", str22, "1");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4.9E-324d + "'", double25 == 4.9E-324d);
        org.junit.Assert.assertNotNull(modelNode29);
        org.junit.Assert.assertEquals("'" + boolean30 + "' != '" + true + "'", boolean30, true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "35" + "'", str32, "35");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(modelValue47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(modelValue49);
        org.junit.Assert.assertNotNull(modelStreamFactory51);
        org.junit.Assert.assertNotNull(modelReader56);
        org.junit.Assert.assertNotNull(modelWriter62);
        org.junit.Assert.assertNotNull(modelWriter63);
        org.junit.Assert.assertNotNull(modelWriter65);
        org.junit.Assert.assertNotNull(modelNode71);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(modelNode74);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNotNull(modelNode80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str81, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList82);
        org.junit.Assert.assertNotNull(modelNode83);
        org.junit.Assert.assertNotNull(modelNode84);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "1" + "'", str87, "1");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.0d + "'", double89 == 1.0d);
        org.junit.Assert.assertNotNull(valueExpression90);
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(modelNode92);
        org.junit.Assert.assertNotNull(modelWriter93);
        org.junit.Assert.assertNotNull(modelWriter95);
        org.junit.Assert.assertNotNull(modelWriter97);
    }

    @Test
    public void test13431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13431");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        long long3 = longModelValue1.asLong((long) (short) 0);
        java.lang.String str4 = longModelValue1.asString();
        org.jboss.dmr.ValueExpression valueExpression5 = longModelValue1.asExpression();
        int int6 = longModelValue1.asInt();
        int int7 = longModelValue1.asInt();
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode9 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode12 = modelNode9.set("hi!", 0.0d);
        java.lang.String str13 = modelNode9.toString();
        org.jboss.dmr.ModelNode modelNode14 = modelNode9.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode16 = modelNode9.set(100);
        org.jboss.dmr.ModelNode modelNode17 = modelNode8.add(modelNode9);
        org.jboss.dmr.ModelNode modelNode19 = modelNode17.set((double) (-1.0f));
        java.math.BigInteger bigInteger20 = modelNode17.asBigIntegerOrNull();
        boolean boolean21 = longModelValue1.equals((java.lang.Object) modelNode17);
        byte[] byteArray22 = longModelValue1.asBytes();
        org.jboss.dmr.ModelValue modelValue23 = longModelValue1.clone();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 1L + "'", long3 == 1L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1" + "'", str4, "1");
        org.junit.Assert.assertNotNull(valueExpression5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(\"hi!\" => 0.0)" + "'", str13, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(bigInteger20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(modelValue23);
    }

    @Test
    public void test13432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13432");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue5);
        org.jboss.dmr.ModelValue modelValue7 = listModelValue5.resolve();
        int int9 = listModelValue5.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList10 = listModelValue5.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList11 = listModelValue5.asPropertyList();
        org.jboss.dmr.ModelNode modelNode13 = listModelValue5.getChild((int) (short) 0);
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode18 = modelNode15.set("hi!", 0.0d);
        java.lang.String str19 = modelNode15.toString();
        org.jboss.dmr.ModelNode modelNode20 = modelNode15.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode22 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode25 = modelNode22.set("hi!", 0.0d);
        org.jboss.dmr.Property property26 = new org.jboss.dmr.Property("", modelNode25);
        org.jboss.dmr.ModelNode modelNode27 = modelNode15.set(property26);
        org.jboss.dmr.PropertyModelValue propertyModelValue29 = new org.jboss.dmr.PropertyModelValue("EXPRESSION_VALUE", modelNode27, false);
        org.jboss.dmr.Property property30 = propertyModelValue29.asProperty();
        boolean boolean31 = listModelValue5.equals((java.lang.Object) propertyModelValue29);
        java.util.List<org.jboss.dmr.Property> propertyList32 = listModelValue5.asPropertyList();
        org.jboss.dmr.ModelNode modelNode33 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue5);
        org.jboss.dmr.ModelValue modelValue34 = listModelValue5.resolve();
        org.jboss.dmr.BooleanModelValue booleanModelValue36 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger37 = booleanModelValue36.asBigInteger();
        byte[] byteArray38 = booleanModelValue36.asBytes();
        boolean boolean39 = booleanModelValue36.asBoolean();
        byte[] byteArray40 = booleanModelValue36.asBytes();
        org.jboss.dmr.DoubleModelValue doubleModelValue42 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long43 = doubleModelValue42.asLong();
        boolean boolean44 = doubleModelValue42.asBoolean();
        byte[] byteArray45 = doubleModelValue42.asBytes();
        java.math.BigInteger bigInteger46 = doubleModelValue42.asBigInteger();
        boolean boolean47 = booleanModelValue36.equals((java.lang.Object) bigInteger46);
        long long48 = booleanModelValue36.asLong();
        boolean boolean50 = booleanModelValue36.asBoolean(false);
        boolean boolean51 = listModelValue5.equals((java.lang.Object) booleanModelValue36);
        org.jboss.dmr.ModelNode modelNode52 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode55 = modelNode52.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList56 = modelNode55.asList();
        org.jboss.dmr.ListModelValue listModelValue57 = new org.jboss.dmr.ListModelValue(modelNodeList56);
        java.lang.String str58 = listModelValue57.asString();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList59 = listModelValue57.asList();
        org.jboss.dmr.ModelNode modelNode60 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode63 = modelNode60.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList64 = modelNode63.asList();
        org.jboss.dmr.ListModelValue listModelValue65 = new org.jboss.dmr.ListModelValue(modelNodeList64);
        java.lang.String str66 = listModelValue65.asString();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList67 = listModelValue65.asList();
        boolean boolean68 = listModelValue57.equals(listModelValue65);
        org.jboss.dmr.ModelValue modelValue69 = listModelValue57.copy();
        boolean boolean71 = listModelValue57.asBoolean(true);
        org.jboss.dmr.ModelNode modelNode72 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode75 = modelNode72.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList76 = modelNode75.asList();
        org.jboss.dmr.ListModelValue listModelValue77 = new org.jboss.dmr.ListModelValue(modelNodeList76);
        java.lang.String str78 = listModelValue77.asString();
        long long79 = listModelValue77.asLong();
        int int81 = listModelValue77.asInt((int) '4');
        org.jboss.dmr.ModelValue modelValue82 = listModelValue77.protect();
        boolean boolean84 = listModelValue77.has((int) (short) 100);
        org.jboss.dmr.ModelValue modelValue85 = listModelValue77.resolve();
        boolean boolean86 = listModelValue77.asBoolean();
        boolean boolean87 = listModelValue77.asBoolean();
        org.jboss.dmr.ModelValue modelValue88 = listModelValue77.clone();
        boolean boolean89 = listModelValue57.equals(listModelValue77);
        boolean boolean90 = listModelValue5.equals(listModelValue77);
        org.jboss.dmr.ModelNode modelNode91 = listModelValue77.asObject();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet92 = listModelValue77.getKeys();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertNotNull(modelValue7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(propertyList10);
        org.junit.Assert.assertNotNull(propertyList11);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(\"hi!\" => 0.0)" + "'", str19, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertNotNull(property30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(propertyList32);
        org.junit.Assert.assertNotNull(modelValue34);
        org.junit.Assert.assertNotNull(booleanModelValue36);
        org.junit.Assert.assertNotNull(bigInteger37);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[1]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[1]");
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 10L + "'", long43 == 10L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(bigInteger46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(modelNode55);
        org.junit.Assert.assertNotNull(modelNodeList56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str58, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertNotNull(modelNodeList59);
        org.junit.Assert.assertNotNull(modelNode63);
        org.junit.Assert.assertNotNull(modelNodeList64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str66, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertNotNull(modelNodeList67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(modelValue69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(modelNode75);
        org.junit.Assert.assertNotNull(modelNodeList76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str78, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 1L + "'", long79 == 1L);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNotNull(modelValue82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(modelValue85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(modelValue88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(modelNode91);
    }

    @Test
    public void test13433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13433");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        org.jboss.dmr.ModelValue modelValue2 = objectModelValue0.protect();
        java.util.List<org.jboss.dmr.Property> propertyList3 = objectModelValue0.asPropertyList();
        org.jboss.dmr.ModelValue modelValue4 = objectModelValue0.copy();
        boolean boolean5 = objectModelValue0.asBoolean();
        org.jboss.dmr.ModelValue modelValue6 = objectModelValue0.copy();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList7 = objectModelValue0.asList();
        boolean boolean9 = objectModelValue0.has("\"(\\\"rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4\\\" => (\\\"hi!\\\" => 0.0))\"");
        org.jboss.dmr.ModelNode modelNode11 = objectModelValue0.removeChild("rO0ABXQADEFBQUFBQUFBQUFFPQ==");
        long long12 = objectModelValue0.asLong();
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(propertyList3);
        org.junit.Assert.assertNotNull(modelValue4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(modelValue6);
        org.junit.Assert.assertNotNull(modelNodeList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(modelNode11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    }

    @Test
    public void test13434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13434");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode("52");
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode6 = modelNode3.set("hi!", 0.0d);
        java.lang.String str7 = modelNode3.toString();
        org.jboss.dmr.ModelNode modelNode8 = modelNode3.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode10 = modelNode3.set(100);
        org.jboss.dmr.ModelNode modelNode13 = new org.jboss.dmr.ModelNode((double) 100);
        org.jboss.dmr.ModelNode modelNode15 = modelNode13.set((int) '#');
        org.jboss.dmr.ModelNode modelNode16 = modelNode3.setNoCopy("EXPRESSION_VALUE", modelNode15);
        org.jboss.dmr.ModelNode modelNode17 = modelNode16.resolve();
        org.jboss.dmr.ModelType modelType18 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode19 = new org.jboss.dmr.ModelNode(modelType18);
        org.jboss.dmr.ModelNode modelNode21 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode24 = modelNode21.set("hi!", 0.0d);
        org.jboss.dmr.Property property25 = new org.jboss.dmr.Property("", modelNode24);
        org.jboss.dmr.ModelNode modelNode26 = modelNode19.set(property25);
        org.jboss.dmr.PropertyModelValue propertyModelValue27 = new org.jboss.dmr.PropertyModelValue(property25);
        org.jboss.dmr.PropertyModelValue propertyModelValue28 = new org.jboss.dmr.PropertyModelValue(property25);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList29 = propertyModelValue28.asList();
        org.jboss.dmr.ModelNode modelNode30 = modelNode17.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList29);
        org.jboss.dmr.IntModelValue intModelValue33 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str34 = intModelValue33.asString();
        double double36 = intModelValue33.asDouble((double) 2);
        java.math.BigDecimal bigDecimal37 = intModelValue33.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode38 = modelNode30.add("(\"hi!\" => 0.0)", bigDecimal37);
        org.jboss.dmr.ModelNode modelNode40 = modelNode38.setExpression("\"(\\\"\\\" => (\\\"hi!\\\" => 0.0))\"");
        org.jboss.dmr.ModelNode modelNode41 = modelNode1.setNoCopy("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3R3AANW9yZy5qYm9z\ncy5kbXIuc3RyZWFtLk1vZGVsRXhjZXB0aW9uOiBbKCJoaSEiID0+IDAuMCldcAADaGkhRAAAAAAA\nAAAAeA==", modelNode40);
        org.jboss.dmr.ModelNode modelNode43 = new org.jboss.dmr.ModelNode((int) 'J');
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode45 = modelNode41.insert(modelNode43, 97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(\"hi!\" => 0.0)" + "'", str7, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertNotNull(modelNode15);
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertTrue("'" + modelType18 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType18.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertNotNull(modelNodeList29);
        org.junit.Assert.assertNotNull(modelNode30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "32" + "'", str34, "32");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 32.0d + "'", double36 == 32.0d);
        org.junit.Assert.assertNotNull(bigDecimal37);
        org.junit.Assert.assertNotNull(modelNode38);
        org.junit.Assert.assertNotNull(modelNode40);
        org.junit.Assert.assertNotNull(modelNode41);
    }

    @Test
    public void test13435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13435");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode("EXPRESSION_VALUE");
        org.jboss.dmr.ModelNode modelNode2 = modelNode1.clear();
        org.jboss.dmr.ModelNode modelNode4 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.BooleanModelValue booleanModelValue6 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger7 = booleanModelValue6.asBigInteger();
        org.jboss.dmr.ModelNode modelNode8 = modelNode4.add(bigInteger7);
        org.jboss.dmr.ModelNode modelNode9 = new org.jboss.dmr.ModelNode(bigInteger7);
        boolean boolean10 = modelNode9.isProtected();
        org.jboss.dmr.ModelNode modelNode11 = modelNode9.clone();
        org.jboss.dmr.ModelNode modelNode13 = modelNode9.set((long) (-1));
        org.jboss.dmr.ModelNode modelNode14 = modelNode2.setNoCopy("(\"true\" => big decimal 1.0)", modelNode9);
        org.jboss.dmr.ModelNode modelNode17 = modelNode14.set("\"org.jboss.dmr.stream.ModelException: \\\"35\\\"\"", "{\n    \"TYPE_MODEL_VALUE\" => undefined,\n    \"[(\\\"hi!\\\" => 0.0)]\" => undefined,\n    \"\\\"(\\\\\\\"hi!\\\\\\\" => 0.0)\\\"\" => undefined\n}");
        boolean boolean19 = modelNode17.hasDefined("2");
        org.junit.Assert.assertNotNull(modelNode2);
        org.junit.Assert.assertNotNull(booleanModelValue6);
        org.junit.Assert.assertNotNull(bigInteger7);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(modelNode17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test13436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13436");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        org.jboss.dmr.ModelValue modelValue2 = objectModelValue0.copy();
        java.lang.String str3 = objectModelValue0.toString();
        java.util.List<org.jboss.dmr.Property> propertyList4 = objectModelValue0.asPropertyList();
        org.jboss.dmr.ModelNode modelNode6 = objectModelValue0.getChild("");
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{}" + "'", str3, "{}");
        org.junit.Assert.assertNotNull(propertyList4);
        org.junit.Assert.assertNotNull(modelNode6);
    }

    @Test
    public void test13437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13437");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        java.io.InputStream inputStream16 = null;
        org.jboss.dmr.Base64.InputStream inputStream18 = new org.jboss.dmr.Base64.InputStream(inputStream16, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream19 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream18);
        org.jboss.dmr.Base64.InputStream inputStream20 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream18);
        org.jboss.dmr.stream.ModelReader modelReader21 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream18);
        boolean boolean22 = modelReader21.isBytes();
        boolean boolean23 = modelReader21.isBoolean();
        boolean boolean24 = modelReader21.isListEnd();
        boolean boolean25 = modelReader21.isLong();
        boolean boolean26 = modelReader21.hasNext();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertNotNull(modelReader21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test13438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13438");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.BooleanModelValue booleanModelValue2 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger3 = booleanModelValue2.asBigInteger();
        org.jboss.dmr.ModelNode modelNode4 = modelNode0.add(bigInteger3);
        org.jboss.dmr.ModelNode modelNode5 = modelNode0.clone();
        org.jboss.dmr.BooleanModelValue booleanModelValue6 = org.jboss.dmr.BooleanModelValue.TRUE;
        java.math.BigInteger bigInteger7 = booleanModelValue6.asBigInteger();
        boolean boolean8 = booleanModelValue6.asBoolean();
        java.math.BigInteger bigInteger9 = booleanModelValue6.asBigInteger();
        org.jboss.dmr.ModelNode modelNode10 = modelNode5.add(bigInteger9);
        org.jboss.dmr.ModelNode modelNode12 = modelNode10.set((double) 100);
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.BooleanModelValue booleanModelValue16 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger17 = booleanModelValue16.asBigInteger();
        org.jboss.dmr.ModelNode modelNode18 = modelNode14.add(bigInteger17);
        org.jboss.dmr.ModelNode modelNode19 = new org.jboss.dmr.ModelNode(bigInteger17);
        boolean boolean20 = modelNode19.isProtected();
        org.jboss.dmr.ModelNode modelNode21 = modelNode19.clone();
        org.jboss.dmr.ModelNode modelNode23 = modelNode19.set((long) (-1));
        org.jboss.dmr.ModelNode modelNode26 = modelNode23.set("\"org.jboss.dmr.stream.ModelException: (\\\"Expression \\\\\\\"1\\\\\\\"\\\" => (\\\"org.jboss.dmr.stream.ModelException: [(\\\\\\\"hi!\\\\\\\" => 0.0)]\\\" => BYTES))\"", false);
        java.lang.String str27 = modelNode26.asString();
        org.jboss.dmr.ModelNode modelNode28 = modelNode12.setNoCopy("{\"hi!\" => 0.0}", modelNode26);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode30 = modelNode28.require("[(\"hi!\" => expression \"hi!\"),\"rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4\",false,(\"H4sIAAAAAAAAAFvzloG1tIiBKdppzWfxH2wcIQ+YGBgqChgYGBgZASVtzhAcAAAA\" => bytes {\n    0x28, 0x22, 0x22, 0x20, 0x3d, 0x3e, 0x20, 0x28,\n    0x22, 0x68, 0x69, 0x21, 0x22, 0x20, 0x3d, 0x3e,\n    0x20, 0x30, 0x2e, 0x30, 0x29, 0x29\n})]");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child '[(\"hi!\" => expression \"hi!\"),\"rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4\",false,(\"H4sIAAAAAAAAAFvzloG1tIiBKdppzWfxH2wcIQ+YGBgqChgYGBgZASVtzhAcAAAA\" => bytes {?    0x28, 0x22, 0x22, 0x20, 0x3d, 0x3e, 0x20, 0x28,?    0x22, 0x68, 0x69, 0x21, 0x22, 0x20, 0x3d, 0x3e,?    0x20, 0x30, 0x2e, 0x30, 0x29, 0x29?})]' exists");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanModelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(booleanModelValue6);
        org.junit.Assert.assertNotNull(bigInteger7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(bigInteger9);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(booleanModelValue16);
        org.junit.Assert.assertNotNull(bigInteger17);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(modelNode21);
        org.junit.Assert.assertNotNull(modelNode23);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(\"\\\"org.jboss.dmr.stream.ModelException: (\\\\\\\"Expression \\\\\\\\\\\\\\\"1\\\\\\\\\\\\\\\"\\\\\\\" => (\\\\\\\"org.jboss.dmr.stream.ModelException: [(\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\" => 0.0)]\\\\\\\" => BYTES))\\\"\" => false)" + "'", str27, "(\"\\\"org.jboss.dmr.stream.ModelException: (\\\\\\\"Expression \\\\\\\\\\\\\\\"1\\\\\\\\\\\\\\\"\\\\\\\" => (\\\\\\\"org.jboss.dmr.stream.ModelException: [(\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\" => 0.0)]\\\\\\\" => BYTES))\\\"\" => false)");
        org.junit.Assert.assertNotNull(modelNode28);
    }

    @Test
    public void test13439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13439");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream5 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4);
        org.jboss.dmr.stream.ModelReader modelReader6 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream5);
        java.io.OutputStream outputStream7 = null;
        org.jboss.dmr.Base64.OutputStream outputStream8 = new org.jboss.dmr.Base64.OutputStream(outputStream7);
        org.jboss.dmr.Base64.OutputStream outputStream9 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream8);
        outputStream8.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter12 = modelStreamFactory1.newModelWriter((java.io.OutputStream) outputStream8);
        java.io.OutputStream outputStream13 = null;
        org.jboss.dmr.Base64.OutputStream outputStream14 = new org.jboss.dmr.Base64.OutputStream(outputStream13);
        org.jboss.dmr.Base64.OutputStream outputStream15 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream14);
        org.jboss.dmr.Base64.OutputStream outputStream16 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream15);
        outputStream15.resumeEncoding();
        outputStream15.resumeEncoding();
        org.jboss.dmr.stream.ModelWriter modelWriter19 = modelStreamFactory1.newModelWriter((java.io.OutputStream) outputStream15);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory21 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream22 = null;
        org.jboss.dmr.Base64.InputStream inputStream24 = new org.jboss.dmr.Base64.InputStream(inputStream22, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream25 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream24);
        org.jboss.dmr.stream.ModelReader modelReader26 = modelStreamFactory21.newModelReader((java.io.InputStream) inputStream25);
        java.io.OutputStream outputStream27 = null;
        org.jboss.dmr.Base64.OutputStream outputStream28 = new org.jboss.dmr.Base64.OutputStream(outputStream27);
        org.jboss.dmr.Base64.OutputStream outputStream29 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream28);
        outputStream28.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter32 = modelStreamFactory21.newModelWriter((java.io.OutputStream) outputStream28);
        outputStream28.write(2);
        org.jboss.dmr.stream.ModelWriter modelWriter35 = modelStreamFactory1.newModelWriter((java.io.OutputStream) outputStream28);
        java.io.InputStream inputStream36 = null;
        org.jboss.dmr.Base64.InputStream inputStream38 = new org.jboss.dmr.Base64.InputStream(inputStream36, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream39 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream38);
        org.jboss.dmr.Base64.InputStream inputStream40 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream39);
        org.jboss.dmr.Base64.InputStream inputStream41 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream39);
        org.jboss.dmr.stream.ModelReader modelReader42 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream39);
        boolean boolean43 = modelReader42.isBigInteger();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertNotNull(modelReader6);
        org.junit.Assert.assertNotNull(modelWriter12);
        org.junit.Assert.assertNotNull(modelWriter19);
        org.junit.Assert.assertNotNull(modelStreamFactory21);
        org.junit.Assert.assertNotNull(modelReader26);
        org.junit.Assert.assertNotNull(modelWriter32);
        org.junit.Assert.assertNotNull(modelWriter35);
        org.junit.Assert.assertNotNull(modelReader42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test13440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13440");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isPropertyStart();
        boolean boolean17 = modelReader15.isDouble();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = modelReader15.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Current event isn't string");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test13441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13441");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        org.jboss.dmr.ModelValue modelValue2 = objectModelValue0.copy();
        java.lang.String str3 = objectModelValue0.toString();
        org.jboss.dmr.ObjectModelValue objectModelValue4 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode5 = objectModelValue4.asObject();
        org.jboss.dmr.ObjectModelValue objectModelValue6 = null;
        boolean boolean7 = objectModelValue4.equals(objectModelValue6);
        boolean boolean8 = objectModelValue0.equals(objectModelValue6);
        org.jboss.dmr.ModelNode modelNode9 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode12 = modelNode9.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList13 = modelNode12.asList();
        org.jboss.dmr.ListModelValue listModelValue14 = new org.jboss.dmr.ListModelValue(modelNodeList13);
        org.jboss.dmr.ModelNode modelNode15 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue14);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList16 = modelNode15.asList();
        boolean boolean17 = objectModelValue0.equals((java.lang.Object) modelNode15);
        org.jboss.dmr.ModelNode modelNode20 = modelNode15.setExpression("H4sIAAAAAAAAAFvzloG1tIiBKdppzWfxH2wcIQ+YGBgqChgYGBgZASVtzhAcAAAA", "QCQAAAAAAAA=");
        org.jboss.dmr.DoubleModelValue doubleModelValue22 = new org.jboss.dmr.DoubleModelValue((double) (byte) -1);
        org.jboss.dmr.DoubleModelValue doubleModelValue24 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        int int26 = doubleModelValue24.asInt((int) 'l');
        java.math.BigDecimal bigDecimal27 = doubleModelValue24.asBigDecimal();
        boolean boolean28 = doubleModelValue22.equals(doubleModelValue24);
        org.jboss.dmr.ModelNode modelNode30 = new org.jboss.dmr.ModelNode(35L);
        org.jboss.dmr.ModelNode modelNode32 = modelNode30.set((int) '4');
        boolean boolean33 = doubleModelValue24.equals((java.lang.Object) modelNode32);
        org.jboss.dmr.ValueExpression valueExpression34 = doubleModelValue24.asExpression();
        org.jboss.dmr.ValueExpression valueExpression35 = doubleModelValue24.asExpression();
        java.math.BigDecimal bigDecimal36 = valueExpression35.resolveBigDecimal();
        org.jboss.dmr.ModelNode modelNode37 = modelNode15.set(bigDecimal36);
        org.jboss.dmr.BooleanModelValue booleanModelValue40 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray41 = booleanModelValue40.asBytes();
        java.lang.String str42 = booleanModelValue40.asString();
        int int43 = booleanModelValue40.asInt();
        long long44 = booleanModelValue40.asLong();
        org.jboss.dmr.IntModelValue intModelValue46 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str47 = intModelValue46.asString();
        double double49 = intModelValue46.asDouble((double) 2);
        java.math.BigDecimal bigDecimal50 = intModelValue46.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode51 = new org.jboss.dmr.ModelNode(bigDecimal50);
        org.jboss.dmr.ModelNode modelNode52 = new org.jboss.dmr.ModelNode(bigDecimal50);
        boolean boolean53 = booleanModelValue40.equals((java.lang.Object) modelNode52);
        org.jboss.dmr.ModelNode modelNode54 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode57 = modelNode54.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList58 = modelNode57.asList();
        org.jboss.dmr.ModelNode modelNode61 = modelNode57.setExpression("hi!", "(\"hi!\" => 0.0)");
        boolean boolean62 = booleanModelValue40.equals((java.lang.Object) modelNode61);
        java.math.BigInteger bigInteger63 = booleanModelValue40.asBigInteger();
        org.jboss.dmr.ModelNode modelNode64 = modelNode15.set("", bigInteger63);
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{}" + "'", str3, "{}");
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNodeList13);
        org.junit.Assert.assertNotNull(modelNodeList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 10 + "'", int26 == 10);
        org.junit.Assert.assertNotNull(bigDecimal27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(valueExpression34);
        org.junit.Assert.assertNotNull(valueExpression35);
        org.junit.Assert.assertNotNull(bigDecimal36);
        org.junit.Assert.assertNotNull(modelNode37);
        org.junit.Assert.assertNotNull(booleanModelValue40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "true" + "'", str42, "true");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1L + "'", long44 == 1L);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "32" + "'", str47, "32");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 32.0d + "'", double49 == 32.0d);
        org.junit.Assert.assertNotNull(bigDecimal50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(modelNode57);
        org.junit.Assert.assertNotNull(modelNodeList58);
        org.junit.Assert.assertNotNull(modelNode61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(bigInteger63);
        org.junit.Assert.assertNotNull(modelNode64);
    }

    @Test
    public void test13442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13442");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((int) 'a');
        org.jboss.dmr.ModelNode modelNode2 = modelNode1.setEmptyList();
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode();
        java.lang.Long long4 = modelNode3.asLongOrNull();
        org.jboss.dmr.BooleanModelValue booleanModelValue7 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger8 = booleanModelValue7.asBigInteger();
        byte[] byteArray9 = booleanModelValue7.asBytes();
        org.jboss.dmr.ModelNode modelNode10 = modelNode3.add("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=", byteArray9);
        org.jboss.dmr.ModelNode modelNode11 = modelNode2.add(byteArray9);
        org.jboss.dmr.ModelType modelType12 = org.jboss.dmr.ModelType.PROPERTY;
        char char13 = modelType12.getTypeChar();
        org.jboss.dmr.TypeModelValue typeModelValue14 = org.jboss.dmr.TypeModelValue.of(modelType12);
        org.jboss.dmr.ValueExpression valueExpression15 = typeModelValue14.asExpression();
        org.jboss.dmr.stream.ModelEvent modelEvent16 = org.jboss.dmr.stream.ModelEvent.TYPE;
        boolean boolean17 = valueExpression15.equals((java.lang.Object) modelEvent16);
        org.jboss.dmr.ModelNode modelNode18 = modelNode2.set(valueExpression15);
        org.jboss.dmr.ModelNode modelNode20 = modelNode18.set(true);
        java.io.ObjectOutput objectOutput21 = null;
        // The following exception was thrown during execution in test generation
        try {
            modelNode20.writeExternal(objectOutput21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode2);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(booleanModelValue7);
        org.junit.Assert.assertNotNull(bigInteger8);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[1]");
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertTrue("'" + modelType12 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType12.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char13 + "' != '" + 'p' + "'", char13 == 'p');
        org.junit.Assert.assertNotNull(typeModelValue14);
        org.junit.Assert.assertNotNull(valueExpression15);
        org.junit.Assert.assertTrue("'" + modelEvent16 + "' != '" + org.jboss.dmr.stream.ModelEvent.TYPE + "'", modelEvent16.equals(org.jboss.dmr.stream.ModelEvent.TYPE));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertNotNull(modelNode20);
    }

    @Test
    public void test13443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13443");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        java.lang.String str5 = bigIntegerModelValue4.asString();
        long long7 = bigIntegerModelValue4.asLong(32L);
        double double8 = bigIntegerModelValue4.asDouble();
        org.jboss.dmr.BooleanModelValue booleanModelValue9 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double10 = booleanModelValue9.asDouble();
        org.jboss.dmr.ModelValue modelValue11 = booleanModelValue9.copy();
        java.math.BigInteger bigInteger12 = booleanModelValue9.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue13 = new org.jboss.dmr.BigIntegerModelValue(bigInteger12);
        double double15 = bigIntegerModelValue13.asDouble((double) 'b');
        boolean boolean16 = bigIntegerModelValue4.equals(bigIntegerModelValue13);
        org.jboss.dmr.LongModelValue longModelValue18 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str19 = longModelValue18.asString();
        byte[] byteArray20 = longModelValue18.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue21 = new org.jboss.dmr.BytesModelValue(byteArray20);
        java.lang.String str22 = bytesModelValue21.asString();
        int int23 = bytesModelValue21.asInt();
        byte[] byteArray24 = bytesModelValue21.asBytes();
        org.jboss.dmr.LongModelValue longModelValue26 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str27 = longModelValue26.asString();
        byte[] byteArray28 = longModelValue26.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue29 = new org.jboss.dmr.BytesModelValue(byteArray28);
        java.lang.String str30 = bytesModelValue29.asString();
        int int31 = bytesModelValue29.asInt();
        int int32 = bytesModelValue29.asInt();
        org.jboss.dmr.LongModelValue longModelValue34 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str35 = longModelValue34.asString();
        byte[] byteArray36 = longModelValue34.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue37 = new org.jboss.dmr.BytesModelValue(byteArray36);
        double double38 = bytesModelValue37.asDouble();
        boolean boolean39 = bytesModelValue29.equals(bytesModelValue37);
        byte[] byteArray40 = bytesModelValue37.asBytes();
        java.math.BigInteger bigInteger41 = bytesModelValue37.asBigInteger();
        boolean boolean42 = bytesModelValue21.equals(bytesModelValue37);
        int int44 = bytesModelValue37.asInt((int) 'J');
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory46 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream47 = null;
        org.jboss.dmr.Base64.InputStream inputStream49 = new org.jboss.dmr.Base64.InputStream(inputStream47, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream50 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream49);
        org.jboss.dmr.stream.ModelReader modelReader51 = modelStreamFactory46.newModelReader((java.io.InputStream) inputStream50);
        java.io.OutputStream outputStream52 = null;
        org.jboss.dmr.Base64.OutputStream outputStream53 = new org.jboss.dmr.Base64.OutputStream(outputStream52);
        org.jboss.dmr.Base64.OutputStream outputStream54 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream53);
        outputStream53.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter57 = modelStreamFactory46.newModelWriter((java.io.OutputStream) outputStream53);
        org.jboss.dmr.stream.ModelWriter modelWriter58 = modelWriter57.writeListStart();
        bytesModelValue37.write(modelWriter58);
        org.jboss.dmr.BooleanModelValue booleanModelValue61 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray62 = booleanModelValue61.asBytes();
        java.lang.String str63 = booleanModelValue61.asString();
        int int64 = booleanModelValue61.asInt();
        long long65 = booleanModelValue61.asLong();
        boolean boolean67 = booleanModelValue61.equals((java.lang.Object) '4');
        java.math.BigInteger bigInteger68 = booleanModelValue61.asBigInteger();
        java.lang.String str69 = booleanModelValue61.asString();
        byte[] byteArray70 = booleanModelValue61.asBytes();
        java.lang.String str72 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) byteArray70, 10);
        org.jboss.dmr.stream.ModelWriter modelWriter73 = modelWriter58.writeBytes(byteArray70);
        bigIntegerModelValue13.write(modelWriter58);
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1" + "'", str5, "1");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(booleanModelValue9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue11);
        org.junit.Assert.assertNotNull(bigInteger12);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1" + "'", str19, "1");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str22, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1" + "'", str27, "1");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str30, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1" + "'", str35, "1");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4.9E-324d + "'", double38 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(bigInteger41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(modelStreamFactory46);
        org.junit.Assert.assertNotNull(modelReader51);
        org.junit.Assert.assertNotNull(modelWriter57);
        org.junit.Assert.assertNotNull(modelWriter58);
        org.junit.Assert.assertNotNull(booleanModelValue61);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "true" + "'", str63, "true");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 1L + "'", long65 == 1L);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(bigInteger68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "true" + "'", str69, "true");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "H4sIAAAAAAAAAFvzloG1tIiBKdppzWfxH2wcIQ+YGBgqChgYGBgZASVtzhAcAAAA" + "'", str72, "H4sIAAAAAAAAAFvzloG1tIiBKdppzWfxH2wcIQ+YGBgqChgYGBgZASVtzhAcAAAA");
        org.junit.Assert.assertNotNull(modelWriter73);
    }

    @Test
    public void test13444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13444");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str2 = longModelValue1.asString();
        byte[] byteArray3 = longModelValue1.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue4 = new org.jboss.dmr.BytesModelValue(byteArray3);
        java.math.BigDecimal bigDecimal5 = bytesModelValue4.asBigDecimal();
        java.math.BigInteger bigInteger6 = bytesModelValue4.asBigInteger();
        java.lang.String str7 = bytesModelValue4.asString();
        java.math.BigInteger bigInteger8 = bytesModelValue4.asBigInteger();
        java.math.BigDecimal bigDecimal9 = bytesModelValue4.asBigDecimal();
        java.math.BigInteger bigInteger10 = bytesModelValue4.asBigInteger();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1" + "'", str2, "1");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(bigDecimal5);
        org.junit.Assert.assertNotNull(bigInteger6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str7, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertNotNull(bigInteger8);
        org.junit.Assert.assertNotNull(bigDecimal9);
        org.junit.Assert.assertNotNull(bigInteger10);
    }

    @Test
    public void test13445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13445");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        long long4 = objectModelValue0.asLong((long) 0);
        boolean boolean6 = objectModelValue0.has("[97L]");
        java.lang.String str7 = objectModelValue0.asString();
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
    }

    @Test
    public void test13446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13446");
        boolean boolean2 = org.jboss.dmr.Base64.decodeToFile("{ \"(\\\"Expression \\\\\\\"true\\\\\\\"\\\" => (\\\"org.jboss.dmr.stream.ModelException: [(\\\\\\\"hi!\\\\\\\" => 0.0)]\\\" => (\\\"hi!\\\" => 0.0)))\" : 1 }", "hi!");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test13447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13447");
        org.jboss.dmr.stream.ModelException modelException1 = new org.jboss.dmr.stream.ModelException("(\"[2L]\" => big integer 1)");
    }

    @Test
    public void test13448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13448");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isLong();
        boolean boolean17 = modelReader15.isBigDecimal();
        boolean boolean18 = modelReader15.isBoolean();
        boolean boolean19 = modelReader15.isListStart();
        boolean boolean20 = modelReader15.isLong();
        boolean boolean21 = modelReader15.isListStart();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelType modelType22 = modelReader15.getType();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Current event isn't type");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test13449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13449");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        long long3 = intModelValue1.asLong((long) 'b');
        java.lang.String str4 = intModelValue1.asString();
        java.math.BigInteger bigInteger5 = intModelValue1.asBigInteger();
        byte[] byteArray6 = intModelValue1.asBytes();
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode10 = modelNode7.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList11 = modelNode10.asList();
        org.jboss.dmr.ListModelValue listModelValue12 = new org.jboss.dmr.ListModelValue(modelNodeList11);
        java.lang.String str13 = listModelValue12.asString();
        long long14 = listModelValue12.asLong();
        int int16 = listModelValue12.asInt((int) '4');
        int int18 = listModelValue12.asInt((int) (short) -1);
        org.jboss.dmr.ModelNode modelNode19 = listModelValue12.asObject();
        boolean boolean21 = listModelValue12.asBoolean(true);
        org.jboss.dmr.ModelNode modelNode22 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode25 = modelNode22.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList26 = modelNode25.asList();
        org.jboss.dmr.ListModelValue listModelValue27 = new org.jboss.dmr.ListModelValue(modelNodeList26);
        org.jboss.dmr.ModelNode modelNode28 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue27);
        org.jboss.dmr.ModelValue modelValue29 = listModelValue27.resolve();
        int int31 = listModelValue27.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList32 = listModelValue27.asPropertyList();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList33 = listModelValue27.asList();
        long long34 = listModelValue27.asLong();
        boolean boolean35 = listModelValue12.equals(listModelValue27);
        boolean boolean36 = intModelValue1.equals((java.lang.Object) listModelValue27);
        boolean boolean37 = intModelValue1.asBoolean();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 32L + "'", long3 == 32L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "32" + "'", str4, "32");
        org.junit.Assert.assertNotNull(bigInteger5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 0, 0, 32]");
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertNotNull(modelNodeList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str13, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertNotNull(modelNodeList26);
        org.junit.Assert.assertNotNull(modelValue29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(propertyList32);
        org.junit.Assert.assertNotNull(modelNodeList33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1L + "'", long34 == 1L);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test13450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13450");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isBigInteger();
        boolean boolean17 = modelReader15.isLong();
        boolean boolean18 = modelReader15.isBigDecimal();
        boolean boolean19 = modelReader15.isUndefined();
        boolean boolean20 = modelReader15.isUndefined();
        boolean boolean21 = modelReader15.hasNext();
        boolean boolean22 = modelReader15.isUndefined();
        boolean boolean23 = modelReader15.isType();
        boolean boolean24 = modelReader15.isLong();
        boolean boolean25 = modelReader15.isPropertyStart();
        boolean boolean26 = modelReader15.isBigInteger();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test13451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13451");
        org.jboss.dmr.ExpressionValue expressionValue1 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue3 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean4 = expressionValue1.equals(expressionValue3);
        org.jboss.dmr.ExpressionValue expressionValue6 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue8 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean9 = expressionValue6.equals(expressionValue8);
        boolean boolean10 = expressionValue1.equals(expressionValue8);
        org.jboss.dmr.ModelValue modelValue11 = expressionValue1.resolve();
        java.lang.String str12 = expressionValue1.asString();
        org.jboss.dmr.ModelValue modelValue13 = expressionValue1.resolve();
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory15 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream16 = null;
        org.jboss.dmr.Base64.InputStream inputStream18 = new org.jboss.dmr.Base64.InputStream(inputStream16, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream19 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream18);
        org.jboss.dmr.stream.ModelReader modelReader20 = modelStreamFactory15.newModelReader((java.io.InputStream) inputStream19);
        java.io.OutputStream outputStream21 = null;
        org.jboss.dmr.Base64.OutputStream outputStream22 = new org.jboss.dmr.Base64.OutputStream(outputStream21);
        org.jboss.dmr.Base64.OutputStream outputStream23 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream22);
        outputStream22.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter26 = modelStreamFactory15.newModelWriter((java.io.OutputStream) outputStream22);
        org.jboss.dmr.stream.ModelWriter modelWriter27 = modelWriter26.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter29 = modelWriter27.writeInt((int) (byte) 10);
        expressionValue1.write(modelWriter27);
        org.jboss.dmr.ModelNode modelNode32 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode35 = modelNode32.set("hi!", 0.0d);
        org.jboss.dmr.Property property36 = new org.jboss.dmr.Property("", modelNode35);
        java.lang.String[] strArray37 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode38 = modelNode35.get(strArray37);
        org.jboss.dmr.ModelNode modelNode39 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int40 = modelNode39.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode41 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode44 = modelNode41.setExpression("hi!", "hi!");
        java.lang.String str45 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode41);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList46 = modelNode41.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode47 = modelNode39.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList46);
        org.jboss.dmr.ModelNode modelNode48 = modelNode38.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList46);
        org.jboss.dmr.LongModelValue longModelValue50 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str51 = longModelValue50.asString();
        double double53 = longModelValue50.asDouble((double) 32L);
        org.jboss.dmr.ValueExpression valueExpression54 = longModelValue50.asExpression();
        byte[] byteArray55 = longModelValue50.asBytes();
        org.jboss.dmr.ModelNode modelNode56 = modelNode48.add(byteArray55);
        org.jboss.dmr.stream.ModelWriter modelWriter57 = modelWriter27.writeBytes(byteArray55);
        org.jboss.dmr.IntModelValue intModelValue59 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str60 = intModelValue59.asString();
        double double62 = intModelValue59.asDouble((double) 2);
        java.math.BigDecimal bigDecimal63 = intModelValue59.asBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue64 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal63);
        long long65 = bigDecimalModelValue64.asLong();
        long long66 = bigDecimalModelValue64.asLong();
        int int68 = bigDecimalModelValue64.asInt((-1));
        org.jboss.dmr.ModelValue modelValue69 = bigDecimalModelValue64.copy();
        boolean boolean71 = bigDecimalModelValue64.asBoolean(false);
        java.math.BigInteger bigInteger72 = bigDecimalModelValue64.asBigInteger();
        org.jboss.dmr.stream.ModelWriter modelWriter73 = modelWriter57.writeBigInteger(bigInteger72);
        org.jboss.dmr.stream.ModelWriter modelWriter74 = modelWriter57.writeObjectStart();
        // The following exception was thrown during execution in test generation
        try {
            modelWriter74.flush();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(modelValue11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(modelValue13);
        org.junit.Assert.assertNotNull(modelStreamFactory15);
        org.junit.Assert.assertNotNull(modelReader20);
        org.junit.Assert.assertNotNull(modelWriter26);
        org.junit.Assert.assertNotNull(modelWriter27);
        org.junit.Assert.assertNotNull(modelWriter29);
        org.junit.Assert.assertNotNull(modelNode35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(modelNode38);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(modelNode44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str45, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList46);
        org.junit.Assert.assertNotNull(modelNode47);
        org.junit.Assert.assertNotNull(modelNode48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1" + "'", str51, "1");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(valueExpression54);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(modelNode56);
        org.junit.Assert.assertNotNull(modelWriter57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "32" + "'", str60, "32");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 32.0d + "'", double62 == 32.0d);
        org.junit.Assert.assertNotNull(bigDecimal63);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 32L + "'", long65 == 32L);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 32L + "'", long66 == 32L);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 32 + "'", int68 == 32);
        org.junit.Assert.assertNotNull(modelValue69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(bigInteger72);
        org.junit.Assert.assertNotNull(modelWriter73);
        org.junit.Assert.assertNotNull(modelWriter74);
    }

    @Test
    public void test13452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13452");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode("EXPRESSION_VALUE");
        org.jboss.dmr.BooleanModelValue booleanModelValue4 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger5 = booleanModelValue4.asBigInteger();
        byte[] byteArray6 = booleanModelValue4.asBytes();
        org.jboss.dmr.ModelNode modelNode7 = modelNode1.set("expression \"hi!\"", byteArray6);
        org.jboss.dmr.ModelNode modelNode8 = modelNode7.resolve();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList9 = modelNode7.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode11 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode14 = modelNode11.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList15 = modelNode14.asList();
        org.jboss.dmr.ListModelValue listModelValue16 = new org.jboss.dmr.ListModelValue(modelNodeList15);
        org.jboss.dmr.ModelNode modelNode17 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue16);
        org.jboss.dmr.ModelNode modelNode19 = modelNode17.set("true");
        byte[] byteArray20 = modelNode17.asBytesOrNull();
        org.jboss.dmr.ModelNode modelNode21 = modelNode7.set("hi!", byteArray20);
        java.io.DataInputStream dataInputStream22 = null;
        // The following exception was thrown during execution in test generation
        try {
            modelNode21.readExternal(dataInputStream22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanModelValue4);
        org.junit.Assert.assertNotNull(bigInteger5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1]");
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNodeList9);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(modelNodeList15);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[116, 114, 117, 101]");
        org.junit.Assert.assertNotNull(modelNode21);
    }

    @Test
    public void test13453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13453");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        int int6 = bigIntegerModelValue4.asInt((int) (short) 1);
        org.jboss.dmr.BooleanModelValue booleanModelValue7 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double8 = booleanModelValue7.asDouble();
        org.jboss.dmr.ModelValue modelValue9 = booleanModelValue7.copy();
        java.math.BigInteger bigInteger10 = booleanModelValue7.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue11 = new org.jboss.dmr.BigIntegerModelValue(bigInteger10);
        java.lang.String str12 = bigIntegerModelValue11.asString();
        java.math.BigInteger bigInteger13 = bigIntegerModelValue11.asBigInteger();
        boolean boolean14 = bigIntegerModelValue4.equals(bigIntegerModelValue11);
        long long16 = bigIntegerModelValue11.asLong(35L);
        double double18 = bigIntegerModelValue11.asDouble((-1.0d));
        boolean boolean20 = bigIntegerModelValue11.asBoolean(true);
        double double22 = bigIntegerModelValue11.asDouble((double) 97L);
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanModelValue7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue9);
        org.junit.Assert.assertNotNull(bigInteger10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1" + "'", str12, "1");
        org.junit.Assert.assertNotNull(bigInteger13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
    }

    @Test
    public void test13454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13454");
        org.jboss.dmr.BooleanModelValue booleanModelValue1 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray2 = booleanModelValue1.asBytes();
        java.lang.String str3 = booleanModelValue1.asString();
        int int4 = booleanModelValue1.asInt();
        long long5 = booleanModelValue1.asLong();
        boolean boolean7 = booleanModelValue1.equals((java.lang.Object) '4');
        int int9 = booleanModelValue1.asInt((int) (short) 100);
        org.jboss.dmr.ModelNode modelNode11 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long12 = modelNode11.asLong();
        org.jboss.dmr.ValueExpression valueExpression13 = modelNode11.asExpression();
        java.math.BigDecimal bigDecimal14 = valueExpression13.resolveBigDecimal();
        java.lang.String str15 = valueExpression13.getExpressionString();
        java.math.BigDecimal bigDecimal16 = valueExpression13.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue17 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal16);
        boolean boolean18 = bigDecimalModelValue17.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression19 = bigDecimalModelValue17.asExpression();
        int int20 = bigDecimalModelValue17.asInt();
        double double22 = bigDecimalModelValue17.asDouble((double) 'l');
        org.jboss.dmr.ValueExpression valueExpression23 = bigDecimalModelValue17.asExpression();
        org.jboss.dmr.StringModelValue stringModelValue25 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.StringModelValue stringModelValue27 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.StringModelValue stringModelValue29 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        boolean boolean30 = stringModelValue27.equals(stringModelValue29);
        byte[] byteArray31 = stringModelValue29.asBytes();
        java.lang.Object obj32 = null;
        boolean boolean33 = stringModelValue29.equals(obj32);
        boolean boolean35 = stringModelValue29.equals((java.lang.Object) "TYPE_MODEL_VALUE");
        boolean boolean36 = stringModelValue25.equals(stringModelValue29);
        java.lang.String str37 = stringModelValue29.asString();
        org.jboss.dmr.ValueExpression valueExpression38 = stringModelValue29.asExpression();
        boolean boolean39 = valueExpression23.equals(valueExpression38);
        org.jboss.dmr.ExpressionValue expressionValue40 = new org.jboss.dmr.ExpressionValue(valueExpression23);
        java.lang.String str41 = valueExpression23.getExpressionString();
        boolean boolean42 = booleanModelValue1.equals((java.lang.Object) str41);
        long long44 = booleanModelValue1.asLong((long) 'u');
        org.junit.Assert.assertNotNull(booleanModelValue1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "true" + "'", str3, "true");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertNotNull(valueExpression13);
        org.junit.Assert.assertNotNull(bigDecimal14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1.0" + "'", str15, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(valueExpression19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(valueExpression23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[40, 34, 34, 32, 61, 62, 32, 40, 34, 104, 105, 33, 34, 32, 61, 62, 32, 48, 46, 48, 41, 41]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(\"\" => (\"hi!\" => 0.0))" + "'", str37, "(\"\" => (\"hi!\" => 0.0))");
        org.junit.Assert.assertNotNull(valueExpression38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1.0" + "'", str41, "1.0");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1L + "'", long44 == 1L);
    }

    @Test
    public void test13455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13455");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.removeChild("hi!");
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList5 = objectModelValue0.asList();
        org.jboss.dmr.ModelNode modelNode7 = objectModelValue0.getChild("\"bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }\"");
        org.jboss.dmr.ModelNode modelNode9 = modelNode7.add((long) 'a');
        int int11 = modelNode7.asInt((int) (byte) -1);
        org.jboss.dmr.ModelNode modelNode12 = modelNode7.clone();
        java.lang.String str13 = modelNode7.asStringOrNull();
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNodeList5);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97L]" + "'", str13, "[97L]");
    }

    @Test
    public void test13456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13456");
        byte[] byteArray1 = org.jboss.dmr.Base64.decode("true");
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode(byteArray1);
        org.jboss.dmr.ExpressionValue expressionValue4 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue6 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean7 = expressionValue4.equals(expressionValue6);
        org.jboss.dmr.ExpressionValue expressionValue9 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue11 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean12 = expressionValue9.equals(expressionValue11);
        boolean boolean13 = expressionValue4.equals(expressionValue11);
        org.jboss.dmr.ModelValue modelValue14 = expressionValue4.resolve();
        java.lang.String str15 = expressionValue4.asString();
        org.jboss.dmr.ModelValue modelValue16 = expressionValue4.resolve();
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory18 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream19 = null;
        org.jboss.dmr.Base64.InputStream inputStream21 = new org.jboss.dmr.Base64.InputStream(inputStream19, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream22 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream21);
        org.jboss.dmr.stream.ModelReader modelReader23 = modelStreamFactory18.newModelReader((java.io.InputStream) inputStream22);
        java.io.OutputStream outputStream24 = null;
        org.jboss.dmr.Base64.OutputStream outputStream25 = new org.jboss.dmr.Base64.OutputStream(outputStream24);
        org.jboss.dmr.Base64.OutputStream outputStream26 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream25);
        outputStream25.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter29 = modelStreamFactory18.newModelWriter((java.io.OutputStream) outputStream25);
        org.jboss.dmr.stream.ModelWriter modelWriter30 = modelWriter29.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter32 = modelWriter30.writeInt((int) (byte) 10);
        expressionValue4.write(modelWriter30);
        org.jboss.dmr.ModelNode modelNode35 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode38 = modelNode35.set("hi!", 0.0d);
        org.jboss.dmr.Property property39 = new org.jboss.dmr.Property("", modelNode38);
        java.lang.String[] strArray40 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode41 = modelNode38.get(strArray40);
        org.jboss.dmr.ModelNode modelNode42 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int43 = modelNode42.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode44 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode47 = modelNode44.setExpression("hi!", "hi!");
        java.lang.String str48 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode44);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList49 = modelNode44.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode50 = modelNode42.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList49);
        org.jboss.dmr.ModelNode modelNode51 = modelNode41.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList49);
        org.jboss.dmr.LongModelValue longModelValue53 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str54 = longModelValue53.asString();
        double double56 = longModelValue53.asDouble((double) 32L);
        org.jboss.dmr.ValueExpression valueExpression57 = longModelValue53.asExpression();
        byte[] byteArray58 = longModelValue53.asBytes();
        org.jboss.dmr.ModelNode modelNode59 = modelNode51.add(byteArray58);
        org.jboss.dmr.stream.ModelWriter modelWriter60 = modelWriter30.writeBytes(byteArray58);
        org.jboss.dmr.stream.ModelWriter modelWriter62 = modelWriter60.writeExpression("[]");
        modelNode2.write(modelWriter62);
        org.jboss.dmr.stream.ModelWriter modelWriter64 = modelWriter62.writeListStart();
        org.jboss.dmr.DoubleModelValue doubleModelValue66 = new org.jboss.dmr.DoubleModelValue((double) (short) 10);
        long long67 = doubleModelValue66.asLong();
        long long69 = doubleModelValue66.asLong((long) 32);
        org.jboss.dmr.ModelValue modelValue70 = doubleModelValue66.protect();
        byte[] byteArray71 = doubleModelValue66.asBytes();
        java.lang.String str72 = org.jboss.dmr.Base64.encodeBytes(byteArray71);
        org.jboss.dmr.stream.ModelWriter modelWriter73 = modelWriter64.writeBytes(byteArray71);
        // The following exception was thrown during execution in test generation
        try {
            modelWriter73.flush();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-74, -69, -98]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(modelValue14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(modelValue16);
        org.junit.Assert.assertNotNull(modelStreamFactory18);
        org.junit.Assert.assertNotNull(modelReader23);
        org.junit.Assert.assertNotNull(modelWriter29);
        org.junit.Assert.assertNotNull(modelWriter30);
        org.junit.Assert.assertNotNull(modelWriter32);
        org.junit.Assert.assertNotNull(modelNode38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(modelNode41);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(modelNode47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str48, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList49);
        org.junit.Assert.assertNotNull(modelNode50);
        org.junit.Assert.assertNotNull(modelNode51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1" + "'", str54, "1");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(valueExpression57);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(modelNode59);
        org.junit.Assert.assertNotNull(modelWriter60);
        org.junit.Assert.assertNotNull(modelWriter62);
        org.junit.Assert.assertNotNull(modelWriter64);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 10L + "'", long67 == 10L);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 10L + "'", long69 == 10L);
        org.junit.Assert.assertNotNull(modelValue70);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "QCQAAAAAAAA=" + "'", str72, "QCQAAAAAAAA=");
        org.junit.Assert.assertNotNull(modelWriter73);
    }

    @Test
    public void test13457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13457");
        org.jboss.dmr.ExpressionValue expressionValue1 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue3 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean4 = expressionValue1.equals(expressionValue3);
        org.jboss.dmr.ExpressionValue expressionValue6 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ExpressionValue expressionValue8 = new org.jboss.dmr.ExpressionValue("hi!");
        boolean boolean9 = expressionValue6.equals(expressionValue8);
        boolean boolean10 = expressionValue1.equals(expressionValue8);
        org.jboss.dmr.ExpressionValue expressionValue12 = new org.jboss.dmr.ExpressionValue("hi!");
        java.lang.String str13 = expressionValue12.asString();
        boolean boolean14 = expressionValue1.equals(expressionValue12);
        org.jboss.dmr.ModelValue modelValue15 = expressionValue1.resolve();
        org.jboss.dmr.ValueExpression valueExpression16 = expressionValue1.asExpression();
        boolean boolean18 = valueExpression16.equals((java.lang.Object) "{\n    \"rO0ABXNyABFqYXZhLmxhbmcuSW50ZWdlchLioKT3gYc4AgABSQAFdmFsdWV4cgAQamF2YS5sYW5n\\nLk51bWJlcoaslR0LlOCLAgAAeHAAAABk\" : {\n        \"TYPE_MODEL_VALUE\" : \"LONG\"\n    }\n}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(modelValue15);
        org.junit.Assert.assertNotNull(valueExpression16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test13458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13458");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.setExpression("hi!", "hi!");
        org.jboss.dmr.ModelNode modelNode4 = modelNode3.setEmptyList();
        org.jboss.dmr.ModelNode modelNode5 = modelNode3.asObject();
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        java.lang.String str12 = modelNode8.toString();
        org.jboss.dmr.ModelNode modelNode13 = modelNode8.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode15 = modelNode8.set(100);
        org.jboss.dmr.ModelNode modelNode16 = modelNode7.add(modelNode8);
        org.jboss.dmr.Property property17 = new org.jboss.dmr.Property("", modelNode8);
        java.lang.String str18 = property17.getName();
        org.jboss.dmr.ModelNode modelNode19 = modelNode5.set(property17);
        org.jboss.dmr.BooleanModelValue booleanModelValue22 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long23 = booleanModelValue22.asLong();
        org.jboss.dmr.ValueExpression valueExpression24 = booleanModelValue22.asExpression();
        org.jboss.dmr.ExpressionValue expressionValue25 = new org.jboss.dmr.ExpressionValue(valueExpression24);
        org.jboss.dmr.ModelNode modelNode26 = modelNode19.set("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3F3AADkV4cHJlc3Np\nb24gIjEiZQADaGkheA==", valueExpression24);
        java.lang.String str27 = modelNode26.asStringOrNull();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean29 = modelNode26.asBoolean(false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNode5);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(\"hi!\" => 0.0)" + "'", str12, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode15);
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(booleanModelValue22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertNotNull(valueExpression24);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(\"rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3F3AADkV4cHJlc3Np\nb24gIjEiZQADaGkheA==\" => expression \"true\")" + "'", str27, "(\"rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3F3AADkV4cHJlc3Np\nb24gIjEiZQADaGkheA==\" => expression \"true\")");
    }

    @Test
    public void test13459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13459");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        double double9 = bigDecimalModelValue7.asDouble((double) 'p');
        boolean boolean10 = bigDecimalModelValue7.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression11 = bigDecimalModelValue7.asExpression();
        org.jboss.dmr.ModelValue modelValue12 = bigDecimalModelValue7.resolve();
        double double14 = bigDecimalModelValue7.asDouble((double) ' ');
        long long15 = bigDecimalModelValue7.asLong();
        int int17 = bigDecimalModelValue7.asInt(10);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(valueExpression11);
        org.junit.Assert.assertNotNull(modelValue12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test13460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13460");
        org.jboss.dmr.ModelNodeFactory modelNodeFactory0 = org.jboss.dmr.ModelNodeFactory.INSTANCE;
        org.jboss.dmr.ModelNode modelNode3 = modelNodeFactory0.readFrom("PROPERTY", false);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory5 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream6 = null;
        org.jboss.dmr.Base64.InputStream inputStream8 = new org.jboss.dmr.Base64.InputStream(inputStream6, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream9 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream8);
        org.jboss.dmr.stream.ModelReader modelReader10 = modelStreamFactory5.newModelReader((java.io.InputStream) inputStream9);
        java.io.OutputStream outputStream11 = null;
        org.jboss.dmr.Base64.OutputStream outputStream12 = new org.jboss.dmr.Base64.OutputStream(outputStream11);
        org.jboss.dmr.Base64.OutputStream outputStream13 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream12);
        outputStream12.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter16 = modelStreamFactory5.newModelWriter((java.io.OutputStream) outputStream12);
        java.io.OutputStream outputStream17 = null;
        org.jboss.dmr.Base64.OutputStream outputStream18 = new org.jboss.dmr.Base64.OutputStream(outputStream17);
        outputStream18.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream20 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream18);
        org.jboss.dmr.Base64.OutputStream outputStream21 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream20);
        org.jboss.dmr.BooleanModelValue booleanModelValue23 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger24 = booleanModelValue23.asBigInteger();
        byte[] byteArray25 = booleanModelValue23.asBytes();
        boolean boolean27 = org.jboss.dmr.Base64.encodeToFile(byteArray25, "1L");
        boolean boolean29 = org.jboss.dmr.Base64.encodeToFile(byteArray25, "[(\"hi!\" => 0.0)]");
        outputStream21.write(byteArray25);
        outputStream21.write((int) (short) 0);
        outputStream21.resumeEncoding();
        org.jboss.dmr.stream.ModelWriter modelWriter34 = modelStreamFactory5.newModelWriter((java.io.OutputStream) outputStream21);
        java.io.InputStream inputStream35 = null;
        org.jboss.dmr.Base64.InputStream inputStream37 = new org.jboss.dmr.Base64.InputStream(inputStream35, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream38 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream37);
        org.jboss.dmr.Base64.InputStream inputStream40 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream38, 0);
        org.jboss.dmr.stream.ModelReader modelReader41 = modelStreamFactory5.newModelReader((java.io.InputStream) inputStream38);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode43 = modelNodeFactory0.readFrom((java.io.InputStream) inputStream38, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNodeFactory0);
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelStreamFactory5);
        org.junit.Assert.assertNotNull(modelReader10);
        org.junit.Assert.assertNotNull(modelWriter16);
        org.junit.Assert.assertNotNull(booleanModelValue23);
        org.junit.Assert.assertNotNull(bigInteger24);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(modelWriter34);
        org.junit.Assert.assertNotNull(modelReader41);
    }

    @Test
    public void test13461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13461");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        int int3 = longModelValue1.asInt((int) (byte) 0);
        org.jboss.dmr.LongModelValue longModelValue5 = new org.jboss.dmr.LongModelValue((-1L));
        long long7 = longModelValue5.asLong((long) (byte) -1);
        double double9 = longModelValue5.asDouble((double) 10.0f);
        boolean boolean10 = longModelValue1.equals(longModelValue5);
        double double11 = longModelValue5.asDouble();
        double double12 = longModelValue5.asDouble();
        boolean boolean13 = longModelValue5.asBoolean();
        org.jboss.dmr.ValueExpression valueExpression14 = longModelValue5.asExpression();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1.0d) + "'", double9 == (-1.0d));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-1.0d) + "'", double11 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1.0d) + "'", double12 == (-1.0d));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(valueExpression14);
    }

    @Test
    public void test13462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13462");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ModelNode modelNode5 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode8 = modelNode5.set("hi!", 0.0d);
        org.jboss.dmr.Property property9 = new org.jboss.dmr.Property("", modelNode8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.get(strArray10);
        org.jboss.dmr.ModelNode modelNode12 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode15 = modelNode12.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList16 = modelNode15.asList();
        org.jboss.dmr.ListModelValue listModelValue17 = new org.jboss.dmr.ListModelValue(modelNodeList16);
        org.jboss.dmr.ModelNode modelNode18 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue17);
        org.jboss.dmr.ModelValue modelValue19 = listModelValue17.resolve();
        int int21 = listModelValue17.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList22 = listModelValue17.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList23 = modelNode11.asPropertyList(propertyList22);
        org.jboss.dmr.ModelNode modelNode25 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode28 = modelNode25.set("hi!", 0.0d);
        org.jboss.dmr.Property property29 = new org.jboss.dmr.Property("", modelNode28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode31 = modelNode28.get(strArray30);
        org.jboss.dmr.ModelNode modelNode32 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode35 = modelNode32.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList36 = modelNode35.asList();
        org.jboss.dmr.ListModelValue listModelValue37 = new org.jboss.dmr.ListModelValue(modelNodeList36);
        org.jboss.dmr.ModelNode modelNode38 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue37);
        org.jboss.dmr.ModelValue modelValue39 = listModelValue37.resolve();
        int int41 = listModelValue37.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList42 = listModelValue37.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList43 = modelNode31.asPropertyList(propertyList42);
        modelNode11.setNoCopy(modelNode31);
        org.jboss.dmr.ModelNode modelNode45 = modelNode1.set("org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]", modelNode11);
        org.jboss.dmr.ModelNode modelNode47 = modelNode11.set(false);
        java.math.BigInteger bigInteger48 = modelNode47.asBigIntegerOrNull();
        org.jboss.dmr.ModelNode modelNode50 = new org.jboss.dmr.ModelNode((int) 'a');
        org.jboss.dmr.ModelNode modelNode51 = modelNode50.setEmptyList();
        org.jboss.dmr.ModelNode modelNode52 = new org.jboss.dmr.ModelNode();
        java.lang.Long long53 = modelNode52.asLongOrNull();
        org.jboss.dmr.BooleanModelValue booleanModelValue56 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger57 = booleanModelValue56.asBigInteger();
        byte[] byteArray58 = booleanModelValue56.asBytes();
        org.jboss.dmr.ModelNode modelNode59 = modelNode52.add("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=", byteArray58);
        org.jboss.dmr.ModelNode modelNode60 = modelNode51.add(byteArray58);
        modelNode47.setNoCopy(modelNode51);
        org.jboss.dmr.ModelNode modelNode63 = modelNode47.add((double) 10.0f);
        org.jboss.dmr.BooleanModelValue booleanModelValue66 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger67 = booleanModelValue66.asBigInteger();
        byte[] byteArray68 = booleanModelValue66.asBytes();
        boolean boolean69 = booleanModelValue66.asBoolean();
        double double71 = booleanModelValue66.asDouble(10.0d);
        org.jboss.dmr.ModelType modelType72 = booleanModelValue66.getType();
        org.jboss.dmr.ModelNode modelNode73 = modelNode47.set("rO0ABXNyAB1vcmcuamJvc3MuZG1yLlZhbHVlRXhwcmVzc2lvbvwmn+JujpBcDAAAeHB3BgAEMTAu\nMHg=", modelType72);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNode15);
        org.junit.Assert.assertNotNull(modelNodeList16);
        org.junit.Assert.assertNotNull(modelValue19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(propertyList22);
        org.junit.Assert.assertNotNull(propertyList23);
        org.junit.Assert.assertNotNull(modelNode28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(modelNode35);
        org.junit.Assert.assertNotNull(modelNodeList36);
        org.junit.Assert.assertNotNull(modelValue39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(propertyList42);
        org.junit.Assert.assertNotNull(propertyList43);
        org.junit.Assert.assertNotNull(modelNode45);
        org.junit.Assert.assertNotNull(modelNode47);
        org.junit.Assert.assertNotNull(bigInteger48);
        org.junit.Assert.assertNotNull(modelNode51);
        org.junit.Assert.assertNull(long53);
        org.junit.Assert.assertNotNull(booleanModelValue56);
        org.junit.Assert.assertNotNull(bigInteger57);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[1]");
        org.junit.Assert.assertNotNull(modelNode59);
        org.junit.Assert.assertNotNull(modelNode60);
        org.junit.Assert.assertNotNull(modelNode63);
        org.junit.Assert.assertNotNull(booleanModelValue66);
        org.junit.Assert.assertNotNull(bigInteger67);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[1]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertTrue("'" + modelType72 + "' != '" + org.jboss.dmr.ModelType.BOOLEAN + "'", modelType72.equals(org.jboss.dmr.ModelType.BOOLEAN));
        org.junit.Assert.assertNotNull(modelNode73);
    }

    @Test
    public void test13463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13463");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        org.jboss.dmr.ValueExpression valueExpression2 = stringModelValue1.asExpression();
        boolean boolean4 = stringModelValue1.equals((java.lang.Object) (-1.0d));
        java.lang.String str5 = stringModelValue1.asString();
        org.jboss.dmr.stream.ModelEvent modelEvent6 = org.jboss.dmr.stream.ModelEvent.UNDEFINED;
        boolean boolean7 = stringModelValue1.equals((java.lang.Object) modelEvent6);
        org.jboss.dmr.StringModelValue stringModelValue9 = new org.jboss.dmr.StringModelValue("");
        org.jboss.dmr.ModelNode modelNode11 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int12 = modelNode11.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long15 = modelNode14.asLong();
        org.jboss.dmr.ValueExpression valueExpression16 = modelNode14.asExpression();
        java.math.BigDecimal bigDecimal17 = valueExpression16.resolveBigDecimal();
        org.jboss.dmr.ModelNode modelNode18 = modelNode11.set(valueExpression16);
        org.jboss.dmr.Property property20 = new org.jboss.dmr.Property("\"1L\"", modelNode11, false);
        org.jboss.dmr.PropertyModelValue propertyModelValue21 = new org.jboss.dmr.PropertyModelValue(property20);
        boolean boolean22 = stringModelValue9.equals((java.lang.Object) property20);
        boolean boolean23 = stringModelValue1.equals(stringModelValue9);
        org.jboss.dmr.ModelValue modelValue24 = stringModelValue9.protect();
        // The following exception was thrown during execution in test generation
        try {
            java.math.BigDecimal bigDecimal25 = modelValue24.asBigDecimal();
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: null");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(valueExpression2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(\"\" => (\"hi!\" => 0.0))" + "'", str5, "(\"\" => (\"hi!\" => 0.0))");
        org.junit.Assert.assertTrue("'" + modelEvent6 + "' != '" + org.jboss.dmr.stream.ModelEvent.UNDEFINED + "'", modelEvent6.equals(org.jboss.dmr.stream.ModelEvent.UNDEFINED));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertNotNull(valueExpression16);
        org.junit.Assert.assertNotNull(bigDecimal17);
        org.junit.Assert.assertNotNull(modelNode18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(modelValue24);
    }

    @Test
    public void test13464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13464");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        java.lang.Long long1 = modelNode0.asLongOrNull();
        java.lang.String str2 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode0);
        org.jboss.dmr.ModelNode modelNode4 = modelNode0.add(10L);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory6 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream7 = null;
        org.jboss.dmr.Base64.InputStream inputStream9 = new org.jboss.dmr.Base64.InputStream(inputStream7, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream10 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream9);
        org.jboss.dmr.stream.ModelReader modelReader11 = modelStreamFactory6.newModelReader((java.io.InputStream) inputStream10);
        java.io.OutputStream outputStream12 = null;
        org.jboss.dmr.Base64.OutputStream outputStream13 = new org.jboss.dmr.Base64.OutputStream(outputStream12);
        org.jboss.dmr.Base64.OutputStream outputStream14 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream13);
        outputStream13.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter17 = modelStreamFactory6.newModelWriter((java.io.OutputStream) outputStream13);
        org.jboss.dmr.stream.ModelWriter modelWriter18 = modelWriter17.writeListStart();
        org.jboss.dmr.IntModelValue intModelValue20 = new org.jboss.dmr.IntModelValue(10);
        byte[] byteArray21 = intModelValue20.asBytes();
        int int23 = intModelValue20.asInt(0);
        java.math.BigInteger bigInteger24 = intModelValue20.asBigInteger();
        org.jboss.dmr.stream.ModelWriter modelWriter25 = modelWriter18.writeBigInteger(bigInteger24);
        org.jboss.dmr.stream.ModelWriter modelWriter26 = modelWriter18.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter28 = modelWriter26.writeLong((long) (short) -1);
        modelNode4.write(modelWriter26);
        org.jboss.dmr.stream.ModelWriter modelWriter31 = modelWriter26.writeDouble((double) 10);
        org.jboss.dmr.LongModelValue longModelValue33 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str34 = longModelValue33.asString();
        byte[] byteArray35 = longModelValue33.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue36 = new org.jboss.dmr.BytesModelValue(byteArray35);
        java.lang.String str37 = bytesModelValue36.asString();
        int int38 = bytesModelValue36.asInt();
        int int39 = bytesModelValue36.asInt();
        org.jboss.dmr.LongModelValue longModelValue41 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str42 = longModelValue41.asString();
        byte[] byteArray43 = longModelValue41.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue44 = new org.jboss.dmr.BytesModelValue(byteArray43);
        double double45 = bytesModelValue44.asDouble();
        boolean boolean46 = bytesModelValue36.equals(bytesModelValue44);
        byte[] byteArray47 = bytesModelValue44.asBytes();
        java.math.BigInteger bigInteger48 = bytesModelValue44.asBigInteger();
        org.jboss.dmr.LongModelValue longModelValue50 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str51 = longModelValue50.asString();
        byte[] byteArray52 = longModelValue50.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue53 = new org.jboss.dmr.BytesModelValue(byteArray52);
        double double54 = bytesModelValue53.asDouble();
        boolean boolean55 = bytesModelValue44.equals(bytesModelValue53);
        org.jboss.dmr.LongModelValue longModelValue57 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str58 = longModelValue57.asString();
        byte[] byteArray59 = longModelValue57.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue60 = new org.jboss.dmr.BytesModelValue(byteArray59);
        java.lang.String str61 = bytesModelValue60.asString();
        int int62 = bytesModelValue60.asInt();
        java.lang.String str63 = bytesModelValue60.asString();
        java.lang.String str64 = bytesModelValue60.asString();
        long long66 = bytesModelValue60.asLong((long) (byte) 10);
        boolean boolean67 = bytesModelValue44.equals(bytesModelValue60);
        long long68 = bytesModelValue44.asLong();
        java.math.BigInteger bigInteger69 = bytesModelValue44.asBigInteger();
        org.jboss.dmr.stream.ModelWriter modelWriter70 = modelWriter26.writeBigInteger(bigInteger69);
        org.jboss.dmr.stream.ModelWriter modelWriter72 = modelWriter70.writeString("(\"Expression \\\"true\\\"\" => (\"EXPRESSION_VALUE\" => 35))");
        org.jboss.dmr.stream.ModelWriter modelWriter73 = modelWriter72.writeObjectStart();
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4" + "'", str2, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4");
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(modelStreamFactory6);
        org.junit.Assert.assertNotNull(modelReader11);
        org.junit.Assert.assertNotNull(modelWriter17);
        org.junit.Assert.assertNotNull(modelWriter18);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertNotNull(bigInteger24);
        org.junit.Assert.assertNotNull(modelWriter25);
        org.junit.Assert.assertNotNull(modelWriter26);
        org.junit.Assert.assertNotNull(modelWriter28);
        org.junit.Assert.assertNotNull(modelWriter31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1" + "'", str34, "1");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str37, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1" + "'", str42, "1");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 4.9E-324d + "'", double45 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(bigInteger48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1" + "'", str51, "1");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4.9E-324d + "'", double54 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1" + "'", str58, "1");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str61, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str63, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str64, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 1L + "'", long66 == 1L);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 1L + "'", long68 == 1L);
        org.junit.Assert.assertNotNull(bigInteger69);
        org.junit.Assert.assertNotNull(modelWriter70);
        org.junit.Assert.assertNotNull(modelWriter72);
        org.junit.Assert.assertNotNull(modelWriter73);
    }

    @Test
    public void test13465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13465");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode("EXPRESSION_VALUE");
        org.jboss.dmr.BooleanModelValue booleanModelValue4 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger5 = booleanModelValue4.asBigInteger();
        byte[] byteArray6 = booleanModelValue4.asBytes();
        org.jboss.dmr.ModelNode modelNode7 = modelNode1.set("expression \"hi!\"", byteArray6);
        org.jboss.dmr.ModelNode modelNode8 = modelNode7.clear();
        org.jboss.dmr.ModelNode modelNode10 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long11 = modelNode10.asLong();
        org.jboss.dmr.ValueExpression valueExpression12 = modelNode10.asExpression();
        java.math.BigDecimal bigDecimal13 = valueExpression12.resolveBigDecimal();
        java.lang.String str14 = valueExpression12.getExpressionString();
        java.math.BigDecimal bigDecimal15 = valueExpression12.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue16 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal15);
        boolean boolean17 = bigDecimalModelValue16.asBoolean();
        long long18 = bigDecimalModelValue16.asLong();
        java.math.BigDecimal bigDecimal19 = bigDecimalModelValue16.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode20 = modelNode8.add(bigDecimal19);
        org.jboss.dmr.ModelNode modelNode23 = modelNode20.set("\"(\\\"expression \\\\\\\"hi!\\\\\\\"\\\" => bytes {\\n    0x01\\n})\"", true);
        // The following exception was thrown during execution in test generation
        try {
            double double25 = modelNode20.asDouble((double) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanModelValue4);
        org.junit.Assert.assertNotNull(bigInteger5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1]");
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertNotNull(valueExpression12);
        org.junit.Assert.assertNotNull(bigDecimal13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1.0" + "'", str14, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(bigDecimal19);
        org.junit.Assert.assertNotNull(modelNode20);
        org.junit.Assert.assertNotNull(modelNode23);
    }

    @Test
    public void test13466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13466");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        java.lang.String str5 = modelNode1.toString();
        org.jboss.dmr.ModelNode modelNode6 = modelNode1.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(100);
        org.jboss.dmr.ModelNode modelNode9 = modelNode0.add(modelNode1);
        org.jboss.dmr.ModelNode modelNode11 = modelNode9.set((double) (-1.0f));
        java.lang.String str12 = modelNode11.asString();
        org.jboss.dmr.ModelNode modelNode14 = modelNode11.setExpression("Expression \"hi!\"");
        org.jboss.dmr.ModelNode modelNode16 = modelNode14.set((long) 112);
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(\"hi!\" => 0.0)" + "'", str5, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1.0" + "'", str12, "-1.0");
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(modelNode16);
    }

    @Test
    public void test13467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13467");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        java.lang.Long long1 = modelNode0.asLongOrNull();
        java.lang.String str2 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode0);
        org.jboss.dmr.ModelNode modelNode4 = modelNode0.add(10L);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory6 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream7 = null;
        org.jboss.dmr.Base64.InputStream inputStream9 = new org.jboss.dmr.Base64.InputStream(inputStream7, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream10 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream9);
        org.jboss.dmr.stream.ModelReader modelReader11 = modelStreamFactory6.newModelReader((java.io.InputStream) inputStream10);
        java.io.OutputStream outputStream12 = null;
        org.jboss.dmr.Base64.OutputStream outputStream13 = new org.jboss.dmr.Base64.OutputStream(outputStream12);
        org.jboss.dmr.Base64.OutputStream outputStream14 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream13);
        outputStream13.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter17 = modelStreamFactory6.newModelWriter((java.io.OutputStream) outputStream13);
        org.jboss.dmr.stream.ModelWriter modelWriter18 = modelWriter17.writeListStart();
        org.jboss.dmr.IntModelValue intModelValue20 = new org.jboss.dmr.IntModelValue(10);
        byte[] byteArray21 = intModelValue20.asBytes();
        int int23 = intModelValue20.asInt(0);
        java.math.BigInteger bigInteger24 = intModelValue20.asBigInteger();
        org.jboss.dmr.stream.ModelWriter modelWriter25 = modelWriter18.writeBigInteger(bigInteger24);
        org.jboss.dmr.stream.ModelWriter modelWriter26 = modelWriter18.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter28 = modelWriter26.writeLong((long) (short) -1);
        modelNode4.write(modelWriter26);
        org.jboss.dmr.ModelNode modelNode31 = modelNode4.insert((int) (byte) 1);
        org.jboss.dmr.ModelNode modelNode33 = modelNode4.add((double) (short) 100);
        org.jboss.dmr.BooleanModelValue booleanModelValue36 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        java.math.BigInteger bigInteger37 = booleanModelValue36.asBigInteger();
        org.jboss.dmr.ValueExpression valueExpression38 = booleanModelValue36.asExpression();
        byte[] byteArray39 = booleanModelValue36.asBytes();
        byte[] byteArray40 = booleanModelValue36.asBytes();
        java.lang.String str41 = org.jboss.dmr.Base64.encodeBytes(byteArray40);
        org.jboss.dmr.ModelNode modelNode42 = modelNode4.add("(\"-1\" => bytes {\n    0x01\n})", byteArray40);
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4" + "'", str2, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4");
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(modelStreamFactory6);
        org.junit.Assert.assertNotNull(modelReader11);
        org.junit.Assert.assertNotNull(modelWriter17);
        org.junit.Assert.assertNotNull(modelWriter18);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertNotNull(bigInteger24);
        org.junit.Assert.assertNotNull(modelWriter25);
        org.junit.Assert.assertNotNull(modelWriter26);
        org.junit.Assert.assertNotNull(modelWriter28);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(modelNode33);
        org.junit.Assert.assertNotNull(booleanModelValue36);
        org.junit.Assert.assertNotNull(bigInteger37);
        org.junit.Assert.assertNotNull(valueExpression38);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AQ==" + "'", str41, "AQ==");
        org.junit.Assert.assertNotNull(modelNode42);
    }

    @Test
    public void test13468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13468");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isBigInteger();
        boolean boolean17 = modelReader15.isLong();
        boolean boolean18 = modelReader15.isBigDecimal();
        boolean boolean19 = modelReader15.isUndefined();
        boolean boolean20 = modelReader15.isUndefined();
        boolean boolean21 = modelReader15.isListStart();
        boolean boolean22 = modelReader15.isObjectStart();
        // The following exception was thrown during execution in test generation
        try {
            modelReader15.close();
            org.junit.Assert.fail("Expected exception of type org.jboss.dmr.stream.ModelException; message: Uncomplete DMR stream have been read");
        } catch (org.jboss.dmr.stream.ModelException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test13469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13469");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        org.jboss.dmr.ModelValue modelValue6 = objectModelValue0.copy(false);
        int int7 = objectModelValue0.asInt();
        java.lang.String str8 = objectModelValue0.asString();
        boolean boolean9 = objectModelValue0.asBoolean();
        java.util.Set<java.lang.String> strSet10 = objectModelValue0.getKeys();
        org.jboss.dmr.ObjectModelValue objectModelValue11 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode12 = objectModelValue11.asObject();
        java.util.Set<java.lang.String> strSet13 = objectModelValue11.getKeys();
        boolean boolean15 = objectModelValue11.has((int) 'a');
        boolean boolean17 = objectModelValue11.has("");
        org.jboss.dmr.ObjectModelValue objectModelValue18 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode19 = objectModelValue18.asObject();
        java.util.Set<java.lang.String> strSet20 = objectModelValue18.getKeys();
        boolean boolean22 = objectModelValue18.has((int) 'a');
        boolean boolean23 = objectModelValue11.equals(objectModelValue18);
        org.jboss.dmr.ModelNode modelNode25 = objectModelValue11.getChild("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AloAeA==");
        boolean boolean26 = objectModelValue0.equals(objectModelValue11);
        boolean boolean28 = objectModelValue11.has("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3BWwAAAAAeA==");
        org.jboss.dmr.ModelValue modelValue29 = objectModelValue11.copy();
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(modelNode4);
        org.junit.Assert.assertNotNull(modelValue6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{}" + "'", str8, "{}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(modelValue29);
    }

    @Test
    public void test13470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13470");
        org.jboss.dmr.DoubleModelValue doubleModelValue1 = new org.jboss.dmr.DoubleModelValue((double) (short) 0);
        double double2 = doubleModelValue1.asDouble();
        boolean boolean3 = doubleModelValue1.asBoolean();
        java.math.BigInteger bigInteger4 = doubleModelValue1.asBigInteger();
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(bigInteger4);
    }

    @Test
    public void test13471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13471");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        org.jboss.dmr.IntModelValue intModelValue7 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str8 = intModelValue7.asString();
        double double10 = intModelValue7.asDouble((double) 2);
        java.math.BigInteger bigInteger11 = intModelValue7.asBigInteger();
        boolean boolean12 = listModelValue5.equals((java.lang.Object) intModelValue7);
        boolean boolean14 = intModelValue7.asBoolean(true);
        java.lang.String str15 = intModelValue7.asString();
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "32" + "'", str8, "32");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 32.0d + "'", double10 == 32.0d);
        org.junit.Assert.assertNotNull(bigInteger11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "32" + "'", str15, "32");
    }

    @Test
    public void test13472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13472");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream5 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4);
        org.jboss.dmr.stream.ModelReader modelReader6 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream5);
        java.io.InputStream inputStream7 = null;
        org.jboss.dmr.Base64.InputStream inputStream9 = new org.jboss.dmr.Base64.InputStream(inputStream7, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream11 = new org.jboss.dmr.Base64.InputStream(inputStream7, (int) (byte) 100);
        org.jboss.dmr.Base64.InputStream inputStream12 = new org.jboss.dmr.Base64.InputStream(inputStream7);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream(inputStream7, 0);
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory17 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream18 = null;
        org.jboss.dmr.Base64.InputStream inputStream20 = new org.jboss.dmr.Base64.InputStream(inputStream18, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream21 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream20);
        org.jboss.dmr.stream.ModelReader modelReader22 = modelStreamFactory17.newModelReader((java.io.InputStream) inputStream21);
        java.io.OutputStream outputStream23 = null;
        org.jboss.dmr.Base64.OutputStream outputStream24 = new org.jboss.dmr.Base64.OutputStream(outputStream23);
        org.jboss.dmr.Base64.OutputStream outputStream25 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream24);
        outputStream24.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter28 = modelStreamFactory17.newModelWriter((java.io.OutputStream) outputStream24);
        java.io.OutputStream outputStream29 = null;
        org.jboss.dmr.Base64.OutputStream outputStream30 = new org.jboss.dmr.Base64.OutputStream(outputStream29);
        outputStream30.resumeEncoding();
        org.jboss.dmr.Base64.OutputStream outputStream32 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream30);
        org.jboss.dmr.Base64.OutputStream outputStream34 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream32, (int) (byte) -1);
        org.jboss.dmr.Base64.OutputStream outputStream35 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream34);
        outputStream35.resumeEncoding();
        outputStream35.flushBase64();
        org.jboss.dmr.stream.ModelWriter modelWriter38 = modelStreamFactory17.newModelWriter((java.io.OutputStream) outputStream35);
        java.io.InputStream inputStream39 = null;
        org.jboss.dmr.Base64.InputStream inputStream41 = new org.jboss.dmr.Base64.InputStream(inputStream39, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue43 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str44 = longModelValue43.asString();
        byte[] byteArray45 = longModelValue43.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue46 = new org.jboss.dmr.BytesModelValue(byteArray45);
        int int49 = inputStream41.read(byteArray45, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream51 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream41, (-1));
        org.jboss.dmr.Base64.InputStream inputStream53 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream41, (int) 'p');
        org.jboss.dmr.stream.ModelReader modelReader54 = modelStreamFactory17.newModelReader((java.io.InputStream) inputStream41);
        org.jboss.dmr.Base64.InputStream inputStream56 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream41, 10);
        org.jboss.dmr.stream.ModelReader modelReader57 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream56);
        org.jboss.dmr.Base64.InputStream inputStream59 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream56, (int) 's');
        org.jboss.dmr.Base64.InputStream inputStream61 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream56, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode62 = org.jboss.dmr.ModelNode.fromJSONStream((java.io.InputStream) inputStream61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertNotNull(modelReader6);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertNotNull(modelStreamFactory17);
        org.junit.Assert.assertNotNull(modelReader22);
        org.junit.Assert.assertNotNull(modelWriter28);
        org.junit.Assert.assertNotNull(modelWriter38);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1" + "'", str44, "1");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(modelReader54);
        org.junit.Assert.assertNotNull(modelReader57);
    }

    @Test
    public void test13473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13473");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(modelType0);
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode6 = modelNode3.set("hi!", 0.0d);
        org.jboss.dmr.Property property7 = new org.jboss.dmr.Property("", modelNode6);
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(property7);
        org.jboss.dmr.ModelNode modelNode9 = property7.getValue();
        org.jboss.dmr.PropertyModelValue propertyModelValue10 = new org.jboss.dmr.PropertyModelValue(property7);
        java.util.List<org.jboss.dmr.Property> propertyList11 = propertyModelValue10.asPropertyList();
        org.jboss.dmr.ModelNode modelNode13 = propertyModelValue10.getChild((int) (short) 0);
        org.jboss.dmr.ModelNode modelNode14 = modelNode13.setEmptyList();
        org.jboss.dmr.BooleanModelValue booleanModelValue17 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long18 = booleanModelValue17.asLong();
        org.jboss.dmr.ValueExpression valueExpression19 = booleanModelValue17.asExpression();
        java.lang.String str20 = valueExpression19.toString();
        org.jboss.dmr.ExpressionValue expressionValue22 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ValueExpression valueExpression23 = expressionValue22.asExpression();
        boolean boolean24 = valueExpression19.equals(valueExpression23);
        org.jboss.dmr.LongModelValue longModelValue26 = new org.jboss.dmr.LongModelValue((long) '4');
        java.math.BigDecimal bigDecimal27 = longModelValue26.asBigDecimal();
        int int28 = longModelValue26.asInt();
        org.jboss.dmr.ValueExpression valueExpression29 = longModelValue26.asExpression();
        boolean boolean30 = valueExpression23.equals(valueExpression29);
        int int31 = valueExpression29.resolveInt();
        org.jboss.dmr.ExpressionValue expressionValue33 = new org.jboss.dmr.ExpressionValue("1");
        org.jboss.dmr.ValueExpression valueExpression34 = expressionValue33.asExpression();
        org.jboss.dmr.ValueExpressionResolver valueExpressionResolver35 = new org.jboss.dmr.ValueExpressionResolver();
        java.lang.String str36 = valueExpression34.resolveString(valueExpressionResolver35);
        java.math.BigInteger bigInteger37 = valueExpression29.resolveBigInteger(valueExpressionResolver35);
        org.jboss.dmr.ModelNode modelNode38 = modelNode13.add("[(\"H4sIAAAAAAAAAAMAAAAAAAAAAAA=\" => big integer 32)]", valueExpression29);
        org.jboss.dmr.ModelNode modelNode41 = modelNode38.set("H4sIAAAAAAAAAAMAAAAAAAAAAAA=", 2);
        java.lang.String str42 = modelNode38.asString();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode44 = modelNode38.addExpression("rO0ABXQANEg0c0lBQUFBQUFBQUFIT3RLQ2hLTFM3T3pNOVRVQ29wS2sxVkFnQXU0OE5hRVFBQUFB\nPT0=");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType0.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(propertyList11);
        org.junit.Assert.assertNotNull(modelNode13);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertNotNull(booleanModelValue17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(valueExpression19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Expression \"true\"" + "'", str20, "Expression \"true\"");
        org.junit.Assert.assertNotNull(valueExpression23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(bigDecimal27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNotNull(valueExpression29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNotNull(valueExpression34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1" + "'", str36, "1");
        org.junit.Assert.assertNotNull(bigInteger37);
        org.junit.Assert.assertNotNull(modelNode38);
        org.junit.Assert.assertNotNull(modelNode41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(\"H4sIAAAAAAAAAAMAAAAAAAAAAAA=\" => 2)" + "'", str42, "(\"H4sIAAAAAAAAAAMAAAAAAAAAAAA=\" => 2)");
    }

    @Test
    public void test13474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13474");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue5);
        long long7 = listModelValue5.asLong();
        java.util.List<org.jboss.dmr.Property> propertyList8 = listModelValue5.asPropertyList();
        boolean boolean10 = listModelValue5.has(0);
        org.jboss.dmr.ModelValue modelValue11 = listModelValue5.copy();
        boolean boolean12 = listModelValue5.asBoolean();
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertNotNull(propertyList8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(modelValue11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test13475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13475");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue0.removeChild("1");
        java.util.Set<java.lang.String> strSet5 = objectModelValue0.getKeys();
        boolean boolean7 = objectModelValue0.has("org.jboss.dmr.stream.ModelException: rO0ABX5yABdvcmcuamJvc3MuZG1yLk1vZGVsVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5F\nbnVtAAAAAAAAAAASAAB4cHQACFBST1BFUlRZ");
        org.jboss.dmr.ModelNode modelNode9 = objectModelValue0.getChild("Expression \"32\"");
        org.jboss.dmr.ModelValue modelValue10 = objectModelValue0.copy();
        org.jboss.dmr.ModelValue modelValue11 = objectModelValue0.copy();
        org.jboss.dmr.Property property12 = objectModelValue0.asProperty();
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(modelNode4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(modelValue10);
        org.junit.Assert.assertNotNull(modelValue11);
        org.junit.Assert.assertNotNull(property12);
    }

    @Test
    public void test13476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13476");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long2 = modelNode1.asLong();
        org.jboss.dmr.ValueExpression valueExpression3 = modelNode1.asExpression();
        java.math.BigDecimal bigDecimal4 = valueExpression3.resolveBigDecimal();
        java.lang.String str5 = valueExpression3.getExpressionString();
        java.math.BigDecimal bigDecimal6 = valueExpression3.resolveBigDecimal();
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue7 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal6);
        boolean boolean8 = bigDecimalModelValue7.asBoolean();
        long long9 = bigDecimalModelValue7.asLong();
        boolean boolean11 = bigDecimalModelValue7.asBoolean(false);
        int int12 = bigDecimalModelValue7.asInt();
        org.jboss.dmr.ValueExpression valueExpression13 = bigDecimalModelValue7.asExpression();
        org.jboss.dmr.ValueExpression valueExpression14 = bigDecimalModelValue7.asExpression();
        java.math.BigDecimal bigDecimal15 = valueExpression14.resolveBigDecimal();
        org.jboss.dmr.ModelNode modelNode16 = new org.jboss.dmr.ModelNode(bigDecimal15);
        org.jboss.dmr.BigDecimalModelValue bigDecimalModelValue17 = new org.jboss.dmr.BigDecimalModelValue(bigDecimal15);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(valueExpression3);
        org.junit.Assert.assertNotNull(bigDecimal4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1.0" + "'", str5, "1.0");
        org.junit.Assert.assertNotNull(bigDecimal6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(valueExpression13);
        org.junit.Assert.assertNotNull(valueExpression14);
        org.junit.Assert.assertNotNull(bigDecimal15);
    }

    @Test
    public void test13477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13477");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isBigInteger();
        boolean boolean17 = modelReader15.isLong();
        boolean boolean18 = modelReader15.isBigDecimal();
        boolean boolean19 = modelReader15.isUndefined();
        boolean boolean20 = modelReader15.isUndefined();
        boolean boolean21 = modelReader15.hasNext();
        boolean boolean22 = modelReader15.isUndefined();
        boolean boolean23 = modelReader15.isObjectEnd();
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test13478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13478");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        java.util.Set<java.lang.String> strSet2 = objectModelValue0.getKeys();
        long long4 = objectModelValue0.asLong((long) 0);
        boolean boolean6 = objectModelValue0.has("[97L]");
        org.jboss.dmr.ModelNode modelNode7 = objectModelValue0.asObject();
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(modelNode7);
    }

    @Test
    public void test13479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13479");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str2 = longModelValue1.asString();
        byte[] byteArray3 = longModelValue1.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue4 = new org.jboss.dmr.BytesModelValue(byteArray3);
        java.lang.String str5 = bytesModelValue4.asString();
        int int6 = bytesModelValue4.asInt();
        int int7 = bytesModelValue4.asInt();
        org.jboss.dmr.LongModelValue longModelValue9 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str10 = longModelValue9.asString();
        byte[] byteArray11 = longModelValue9.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue12 = new org.jboss.dmr.BytesModelValue(byteArray11);
        double double13 = bytesModelValue12.asDouble();
        boolean boolean14 = bytesModelValue4.equals(bytesModelValue12);
        org.jboss.dmr.LongModelValue longModelValue16 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str17 = longModelValue16.asString();
        byte[] byteArray18 = longModelValue16.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue19 = new org.jboss.dmr.BytesModelValue(byteArray18);
        boolean boolean20 = bytesModelValue12.equals(bytesModelValue19);
        double double22 = bytesModelValue19.asDouble((double) 52);
        org.jboss.dmr.LongModelValue longModelValue24 = new org.jboss.dmr.LongModelValue((-1L));
        long long26 = longModelValue24.asLong((long) (byte) -1);
        java.math.BigDecimal bigDecimal27 = longModelValue24.asBigDecimal();
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory29 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream30 = null;
        org.jboss.dmr.Base64.InputStream inputStream32 = new org.jboss.dmr.Base64.InputStream(inputStream30, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream33 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream32);
        org.jboss.dmr.stream.ModelReader modelReader34 = modelStreamFactory29.newModelReader((java.io.InputStream) inputStream33);
        java.io.OutputStream outputStream35 = null;
        org.jboss.dmr.Base64.OutputStream outputStream36 = new org.jboss.dmr.Base64.OutputStream(outputStream35);
        org.jboss.dmr.Base64.OutputStream outputStream37 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream36);
        outputStream36.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter40 = modelStreamFactory29.newModelWriter((java.io.OutputStream) outputStream36);
        org.jboss.dmr.stream.ModelWriter modelWriter41 = modelWriter40.writeListStart();
        org.jboss.dmr.stream.ModelWriter modelWriter43 = modelWriter41.writeInt((int) (byte) 10);
        longModelValue24.write(modelWriter41);
        org.jboss.dmr.stream.ModelWriter modelWriter46 = modelWriter41.writeLong((long) 's');
        bytesModelValue19.write(modelWriter41);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.stream.ModelWriter modelWriter48 = modelWriter41.writePropertyEnd();
            org.junit.Assert.fail("Expected exception of type org.jboss.dmr.stream.ModelException; message: Expecting ',' or LIST_END");
        } catch (org.jboss.dmr.stream.ModelException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1" + "'", str2, "1");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str5, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1" + "'", str10, "1");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.9E-324d + "'", double13 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1" + "'", str17, "1");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.9E-324d + "'", double22 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(bigDecimal27);
        org.junit.Assert.assertNotNull(modelStreamFactory29);
        org.junit.Assert.assertNotNull(modelReader34);
        org.junit.Assert.assertNotNull(modelWriter40);
        org.junit.Assert.assertNotNull(modelWriter41);
        org.junit.Assert.assertNotNull(modelWriter43);
        org.junit.Assert.assertNotNull(modelWriter46);
    }

    @Test
    public void test13480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13480");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str2 = longModelValue1.asString();
        byte[] byteArray3 = longModelValue1.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue4 = new org.jboss.dmr.BytesModelValue(byteArray3);
        double double5 = bytesModelValue4.asDouble();
        org.jboss.dmr.ModelNode modelNode7 = new org.jboss.dmr.ModelNode((double) 100);
        org.jboss.dmr.ModelNode modelNode9 = modelNode7.set((int) '#');
        java.lang.Boolean boolean10 = modelNode7.asBooleanOrNull();
        java.lang.String str12 = modelNode7.asString("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        boolean boolean13 = bytesModelValue4.equals((java.lang.Object) modelNode7);
        int int15 = bytesModelValue4.asInt(52);
        double double16 = bytesModelValue4.asDouble();
        org.jboss.dmr.ModelNode modelNode17 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode18 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode21 = modelNode18.set("hi!", 0.0d);
        java.lang.String str22 = modelNode18.toString();
        org.jboss.dmr.ModelNode modelNode23 = modelNode18.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode25 = modelNode18.set(100);
        org.jboss.dmr.ModelNode modelNode26 = modelNode17.add(modelNode18);
        int int28 = modelNode18.asInt(2);
        org.jboss.dmr.ModelType modelType30 = org.jboss.dmr.ModelType.BYTES;
        org.jboss.dmr.ModelNode modelNode31 = modelNode18.set("[(\"hi!\" => 0.0)]", modelType30);
        org.jboss.dmr.TypeModelValue typeModelValue32 = org.jboss.dmr.TypeModelValue.of(modelType30);
        boolean boolean33 = bytesModelValue4.equals((java.lang.Object) modelType30);
        org.jboss.dmr.ObjectModelValue objectModelValue34 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode35 = objectModelValue34.asObject();
        java.util.Set<java.lang.String> strSet36 = objectModelValue34.getKeys();
        org.jboss.dmr.ModelNode modelNode38 = objectModelValue34.removeChild("hi!");
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList39 = objectModelValue34.asList();
        org.jboss.dmr.ModelValue modelValue40 = objectModelValue34.resolve();
        boolean boolean41 = bytesModelValue4.equals((java.lang.Object) modelValue40);
        int int42 = bytesModelValue4.asInt();
        long long44 = bytesModelValue4.asLong(52L);
        java.math.BigDecimal bigDecimal45 = bytesModelValue4.asBigDecimal();
        double double47 = bytesModelValue4.asDouble((double) 'd');
        java.math.BigInteger bigInteger48 = bytesModelValue4.asBigInteger();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1" + "'", str2, "1");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.9E-324d + "'", double5 == 4.9E-324d);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertEquals("'" + boolean10 + "' != '" + true + "'", boolean10, true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "35" + "'", str12, "35");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.9E-324d + "'", double16 == 4.9E-324d);
        org.junit.Assert.assertNotNull(modelNode21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(\"hi!\" => 0.0)" + "'", str22, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode23);
        org.junit.Assert.assertNotNull(modelNode25);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        org.junit.Assert.assertTrue("'" + modelType30 + "' != '" + org.jboss.dmr.ModelType.BYTES + "'", modelType30.equals(org.jboss.dmr.ModelType.BYTES));
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(typeModelValue32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(modelNode35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNull(modelNode38);
        org.junit.Assert.assertNotNull(modelNodeList39);
        org.junit.Assert.assertNotNull(modelValue40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1L + "'", long44 == 1L);
        org.junit.Assert.assertNotNull(bigDecimal45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4.9E-324d + "'", double47 == 4.9E-324d);
        org.junit.Assert.assertNotNull(bigInteger48);
    }

    @Test
    public void test13481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13481");
        org.jboss.dmr.ExpressionValue expressionValue1 = new org.jboss.dmr.ExpressionValue("\"rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3GXAAEGV4cHJlc3Np\\nb24gImhpISJiAAAAAQF4\"");
        org.jboss.dmr.ModelValue modelValue2 = expressionValue1.resolve();
        java.io.PrintWriter printWriter3 = null;
        // The following exception was thrown during execution in test generation
        try {
            expressionValue1.format(printWriter3, 0, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelValue2);
    }

    @Test
    public void test13482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13482");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        double double6 = bigIntegerModelValue4.asDouble((double) 'b');
        java.lang.String str7 = bigIntegerModelValue4.asString();
        org.jboss.dmr.ValueExpression valueExpression8 = bigIntegerModelValue4.asExpression();
        boolean boolean10 = bigIntegerModelValue4.asBoolean(true);
        org.jboss.dmr.BooleanModelValue booleanModelValue11 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double12 = booleanModelValue11.asDouble();
        org.jboss.dmr.ModelValue modelValue13 = booleanModelValue11.copy();
        java.math.BigInteger bigInteger14 = booleanModelValue11.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue15 = new org.jboss.dmr.BigIntegerModelValue(bigInteger14);
        java.lang.String str16 = bigIntegerModelValue15.asString();
        long long18 = bigIntegerModelValue15.asLong(32L);
        double double19 = bigIntegerModelValue15.asDouble();
        org.jboss.dmr.BooleanModelValue booleanModelValue20 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double21 = booleanModelValue20.asDouble();
        org.jboss.dmr.ModelValue modelValue22 = booleanModelValue20.copy();
        java.math.BigInteger bigInteger23 = booleanModelValue20.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue24 = new org.jboss.dmr.BigIntegerModelValue(bigInteger23);
        double double26 = bigIntegerModelValue24.asDouble((double) 'b');
        boolean boolean27 = bigIntegerModelValue15.equals(bigIntegerModelValue24);
        org.jboss.dmr.BooleanModelValue booleanModelValue28 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double29 = booleanModelValue28.asDouble();
        org.jboss.dmr.ModelValue modelValue30 = booleanModelValue28.copy();
        java.math.BigInteger bigInteger31 = booleanModelValue28.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue32 = new org.jboss.dmr.BigIntegerModelValue(bigInteger31);
        long long34 = bigIntegerModelValue32.asLong((long) 'b');
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue35 = null;
        boolean boolean36 = bigIntegerModelValue32.equals(bigIntegerModelValue35);
        boolean boolean37 = bigIntegerModelValue15.equals(bigIntegerModelValue32);
        java.math.BigDecimal bigDecimal38 = bigIntegerModelValue15.asBigDecimal();
        boolean boolean39 = bigIntegerModelValue4.equals(bigIntegerModelValue15);
        org.jboss.dmr.ValueExpression valueExpression40 = bigIntegerModelValue15.asExpression();
        java.lang.String str41 = bigIntegerModelValue15.toString();
        long long42 = bigIntegerModelValue15.asLong();
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(valueExpression8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(booleanModelValue11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue13);
        org.junit.Assert.assertNotNull(bigInteger14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1" + "'", str16, "1");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(booleanModelValue20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue22);
        org.junit.Assert.assertNotNull(bigInteger23);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(booleanModelValue28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue30);
        org.junit.Assert.assertNotNull(bigInteger31);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1L + "'", long34 == 1L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(bigDecimal38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(valueExpression40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "big integer 1" + "'", str41, "big integer 1");
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
    }

    @Test
    public void test13483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13483");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        org.jboss.dmr.ModelValue modelValue2 = objectModelValue0.copy();
        org.jboss.dmr.ObjectModelValue objectModelValue3 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue3.asObject();
        java.util.Set<java.lang.String> strSet5 = objectModelValue3.getKeys();
        org.jboss.dmr.ModelNode modelNode7 = objectModelValue3.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        boolean boolean8 = objectModelValue3.asBoolean();
        int int10 = objectModelValue3.asInt((int) 'b');
        org.jboss.dmr.ModelNode modelNode11 = objectModelValue3.asObject();
        boolean boolean12 = objectModelValue0.equals(objectModelValue3);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList13 = objectModelValue0.asList();
        int int14 = objectModelValue0.asInt();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList15 = objectModelValue0.asList();
        java.util.Set<java.lang.String> strSet16 = objectModelValue0.getKeys();
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(modelNode7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(modelNodeList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(modelNodeList15);
        org.junit.Assert.assertNotNull(strSet16);
    }

    @Test
    public void test13484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13484");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        boolean boolean16 = modelReader15.isBigInteger();
        boolean boolean17 = modelReader15.isLong();
        boolean boolean18 = modelReader15.isBigDecimal();
        boolean boolean19 = modelReader15.isUndefined();
        boolean boolean20 = modelReader15.isUndefined();
        boolean boolean21 = modelReader15.hasNext();
        boolean boolean22 = modelReader15.isExpression();
        boolean boolean23 = modelReader15.isBytes();
        // The following exception was thrown during execution in test generation
        try {
            long long24 = modelReader15.getLong();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Current event isn't long");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test13485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13485");
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory1 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream2 = null;
        org.jboss.dmr.Base64.InputStream inputStream4 = new org.jboss.dmr.Base64.InputStream(inputStream2, (int) ' ');
        org.jboss.dmr.LongModelValue longModelValue6 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str7 = longModelValue6.asString();
        byte[] byteArray8 = longModelValue6.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue9 = new org.jboss.dmr.BytesModelValue(byteArray8);
        int int12 = inputStream4.read(byteArray8, (int) (short) 1, (int) (byte) -1);
        org.jboss.dmr.Base64.InputStream inputStream14 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream4, (-1));
        org.jboss.dmr.stream.ModelReader modelReader15 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream14);
        java.io.InputStream inputStream16 = null;
        org.jboss.dmr.Base64.InputStream inputStream18 = new org.jboss.dmr.Base64.InputStream(inputStream16, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream19 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream18);
        byte[] byteArray21 = org.jboss.dmr.Base64.decode("true");
        boolean boolean23 = org.jboss.dmr.Base64.encodeToFile(byteArray21, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3R3AANW9yZy5qYm9z\ncy5kbXIuc3RyZWFtLk1vZGVsRXhjZXB0aW9uOiBbKCJoaSEiID0+IDAuMCldcAADaGkhRAAAAAAA\nAAAAeA==");
        int int26 = inputStream18.read(byteArray21, (int) 'l', 0);
        org.jboss.dmr.stream.ModelReader modelReader27 = modelStreamFactory1.newModelReader((java.io.InputStream) inputStream18);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode28 = org.jboss.dmr.ModelNode.fromJSONStream((java.io.InputStream) inputStream18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelStreamFactory1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(modelReader15);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-74, -69, -98]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(modelReader27);
    }

    @Test
    public void test13486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13486");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList5 = modelNode4.asList();
        java.lang.String str7 = modelNode4.asString("true");
        org.jboss.dmr.BooleanModelValue booleanModelValue10 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        long long11 = booleanModelValue10.asLong();
        org.jboss.dmr.ValueExpression valueExpression12 = booleanModelValue10.asExpression();
        java.lang.String str13 = valueExpression12.toString();
        org.jboss.dmr.ExpressionValue expressionValue15 = new org.jboss.dmr.ExpressionValue("hi!");
        org.jboss.dmr.ValueExpression valueExpression16 = expressionValue15.asExpression();
        boolean boolean17 = valueExpression12.equals(valueExpression16);
        java.lang.String str18 = valueExpression16.resolveString();
        org.jboss.dmr.ModelNode modelNode19 = modelNode4.set("Expression \"1\"", valueExpression16);
        java.lang.String str20 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode19);
        org.jboss.dmr.PropertyModelValue propertyModelValue22 = new org.jboss.dmr.PropertyModelValue("(\"org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\\\"hi!\\\" => 0.0)]\" => expression \"1.0\")", modelNode19, false);
        org.jboss.dmr.ModelNode modelNode24 = new org.jboss.dmr.ModelNode(10);
        org.jboss.dmr.ModelNode modelNode25 = modelNode24.clear();
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelNode modelNode26 = modelNode19.add(modelNode25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNodeList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(\"hi!\" => 0.0)" + "'", str7, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(booleanModelValue10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertNotNull(valueExpression12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Expression \"true\"" + "'", str13, "Expression \"true\"");
        org.junit.Assert.assertNotNull(valueExpression16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(modelNode19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3F3AADkV4cHJlc3Np\nb24gIjEiZQADaGkheA==" + "'", str20, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3F3AADkV4cHJlc3Np\nb24gIjEiZQADaGkheA==");
        org.junit.Assert.assertNotNull(modelNode25);
    }

    @Test
    public void test13487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13487");
        org.jboss.dmr.IntModelValue intModelValue1 = new org.jboss.dmr.IntModelValue((int) ' ');
        java.lang.String str2 = intModelValue1.asString();
        double double4 = intModelValue1.asDouble((double) 2);
        java.math.BigDecimal bigDecimal5 = intModelValue1.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode(bigDecimal5);
        org.jboss.dmr.ModelNode modelNode7 = modelNode6.clear();
        org.jboss.dmr.Validation.validate(modelNode6, "1L");
        org.jboss.dmr.BooleanModelValue booleanModelValue11 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double12 = booleanModelValue11.asDouble();
        org.jboss.dmr.ModelValue modelValue13 = booleanModelValue11.copy();
        java.math.BigInteger bigInteger14 = booleanModelValue11.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue15 = new org.jboss.dmr.BigIntegerModelValue(bigInteger14);
        int int17 = bigIntegerModelValue15.asInt((int) (short) 1);
        org.jboss.dmr.BooleanModelValue booleanModelValue18 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double19 = booleanModelValue18.asDouble();
        org.jboss.dmr.ModelValue modelValue20 = booleanModelValue18.copy();
        java.math.BigInteger bigInteger21 = booleanModelValue18.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue22 = new org.jboss.dmr.BigIntegerModelValue(bigInteger21);
        java.lang.String str23 = bigIntegerModelValue22.asString();
        java.math.BigInteger bigInteger24 = bigIntegerModelValue22.asBigInteger();
        boolean boolean25 = bigIntegerModelValue15.equals(bigIntegerModelValue22);
        double double27 = bigIntegerModelValue15.asDouble(0.0d);
        double double29 = bigIntegerModelValue15.asDouble((double) 100.0f);
        java.math.BigInteger bigInteger30 = bigIntegerModelValue15.asBigInteger();
        java.math.BigInteger bigInteger31 = bigIntegerModelValue15.asBigInteger();
        org.jboss.dmr.BooleanModelValue booleanModelValue33 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray34 = booleanModelValue33.asBytes();
        java.lang.String str35 = booleanModelValue33.asString();
        int int36 = booleanModelValue33.asInt();
        long long37 = booleanModelValue33.asLong();
        boolean boolean39 = booleanModelValue33.equals((java.lang.Object) '4');
        java.math.BigInteger bigInteger40 = booleanModelValue33.asBigInteger();
        java.math.BigInteger bigInteger41 = booleanModelValue33.asBigInteger();
        java.math.BigDecimal bigDecimal42 = booleanModelValue33.asBigDecimal();
        boolean boolean43 = bigIntegerModelValue15.equals((java.lang.Object) bigDecimal42);
        java.math.BigDecimal bigDecimal44 = bigIntegerModelValue15.asBigDecimal();
        org.jboss.dmr.ValueExpression valueExpression45 = bigIntegerModelValue15.asExpression();
        org.jboss.dmr.ModelNode modelNode46 = modelNode6.set("H4sIAAAAAAAAANv/gQEMALshig4IAAAA", valueExpression45);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "32" + "'", str2, "32");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 32.0d + "'", double4 == 32.0d);
        org.junit.Assert.assertNotNull(bigDecimal5);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(booleanModelValue11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue13);
        org.junit.Assert.assertNotNull(bigInteger14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(booleanModelValue18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue20);
        org.junit.Assert.assertNotNull(bigInteger21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1" + "'", str23, "1");
        org.junit.Assert.assertNotNull(bigInteger24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(bigInteger30);
        org.junit.Assert.assertNotNull(bigInteger31);
        org.junit.Assert.assertNotNull(booleanModelValue33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "true" + "'", str35, "true");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(bigInteger40);
        org.junit.Assert.assertNotNull(bigInteger41);
        org.junit.Assert.assertNotNull(bigDecimal42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(bigDecimal44);
        org.junit.Assert.assertNotNull(valueExpression45);
        org.junit.Assert.assertNotNull(modelNode46);
    }

    @Test
    public void test13488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13488");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode3 = modelNode0.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList4 = modelNode3.asList();
        org.jboss.dmr.ListModelValue listModelValue5 = new org.jboss.dmr.ListModelValue(modelNodeList4);
        java.lang.String str6 = listModelValue5.asString();
        boolean boolean8 = listModelValue5.equals((java.lang.Object) true);
        boolean boolean9 = listModelValue5.asBoolean();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList10 = listModelValue5.asList();
        org.jboss.dmr.ModelValue modelValue11 = listModelValue5.protect();
        org.jboss.dmr.ModelNode modelNode12 = listModelValue5.asObject();
        java.lang.Object obj13 = null;
        boolean boolean14 = listModelValue5.equals(obj13);
        org.jboss.dmr.ModelValue modelValue15 = listModelValue5.protect();
        long long16 = listModelValue5.asLong();
        org.junit.Assert.assertNotNull(modelNode3);
        org.junit.Assert.assertNotNull(modelNodeList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[(\"hi!\" => 0.0)]" + "'", str6, "[(\"hi!\" => 0.0)]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(modelNodeList10);
        org.junit.Assert.assertNotNull(modelValue11);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(modelValue15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
    }

    @Test
    public void test13489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13489");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        org.jboss.dmr.ModelValue modelValue2 = objectModelValue0.protect();
        long long3 = objectModelValue0.asLong();
        boolean boolean5 = objectModelValue0.has("(\"(\\\"\\\" => (\\\"hi!\\\" => 0.0))\" => expression \"\")");
        boolean boolean6 = objectModelValue0.asBoolean();
        org.jboss.dmr.ObjectModelValue objectModelValue7 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode8 = objectModelValue7.asObject();
        java.util.Set<java.lang.String> strSet9 = objectModelValue7.getKeys();
        boolean boolean11 = objectModelValue7.has((int) 'a');
        boolean boolean13 = objectModelValue7.has("");
        org.jboss.dmr.ObjectModelValue objectModelValue14 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode15 = objectModelValue14.asObject();
        java.util.Set<java.lang.String> strSet16 = objectModelValue14.getKeys();
        boolean boolean18 = objectModelValue14.has((int) 'a');
        boolean boolean19 = objectModelValue7.equals(objectModelValue14);
        int int20 = objectModelValue14.asInt();
        java.util.List<org.jboss.dmr.Property> propertyList21 = objectModelValue14.asPropertyList();
        org.jboss.dmr.ObjectModelValue objectModelValue22 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode23 = objectModelValue22.asObject();
        java.util.Set<java.lang.String> strSet24 = objectModelValue22.getKeys();
        org.jboss.dmr.ModelNode modelNode26 = objectModelValue22.removeChild("1");
        boolean boolean27 = objectModelValue22.asBoolean();
        boolean boolean28 = objectModelValue14.equals(objectModelValue22);
        boolean boolean29 = objectModelValue0.equals(objectModelValue14);
        long long31 = objectModelValue14.asLong((long) 3);
        boolean boolean33 = objectModelValue14.asBoolean(true);
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(modelNode15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(propertyList21);
        org.junit.Assert.assertNotNull(modelNode23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNull(modelNode26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test13490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13490");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        int int6 = bigIntegerModelValue4.asInt((int) (short) 1);
        org.jboss.dmr.BooleanModelValue booleanModelValue7 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double8 = booleanModelValue7.asDouble();
        org.jboss.dmr.ModelValue modelValue9 = booleanModelValue7.copy();
        java.math.BigInteger bigInteger10 = booleanModelValue7.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue11 = new org.jboss.dmr.BigIntegerModelValue(bigInteger10);
        java.lang.String str12 = bigIntegerModelValue11.asString();
        java.math.BigInteger bigInteger13 = bigIntegerModelValue11.asBigInteger();
        boolean boolean14 = bigIntegerModelValue4.equals(bigIntegerModelValue11);
        double double16 = bigIntegerModelValue4.asDouble(0.0d);
        double double18 = bigIntegerModelValue4.asDouble((double) 100.0f);
        java.math.BigInteger bigInteger19 = bigIntegerModelValue4.asBigInteger();
        java.math.BigInteger bigInteger20 = bigIntegerModelValue4.asBigInteger();
        org.jboss.dmr.BooleanModelValue booleanModelValue22 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray23 = booleanModelValue22.asBytes();
        java.lang.String str24 = booleanModelValue22.asString();
        int int25 = booleanModelValue22.asInt();
        long long26 = booleanModelValue22.asLong();
        boolean boolean28 = booleanModelValue22.equals((java.lang.Object) '4');
        java.math.BigInteger bigInteger29 = booleanModelValue22.asBigInteger();
        java.math.BigInteger bigInteger30 = booleanModelValue22.asBigInteger();
        java.math.BigDecimal bigDecimal31 = booleanModelValue22.asBigDecimal();
        boolean boolean32 = bigIntegerModelValue4.equals((java.lang.Object) bigDecimal31);
        java.math.BigDecimal bigDecimal33 = bigIntegerModelValue4.asBigDecimal();
        org.jboss.dmr.ValueExpression valueExpression34 = bigIntegerModelValue4.asExpression();
        long long35 = bigIntegerModelValue4.asLong();
        double double36 = bigIntegerModelValue4.asDouble();
        java.math.BigDecimal bigDecimal37 = bigIntegerModelValue4.asBigDecimal();
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanModelValue7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue9);
        org.junit.Assert.assertNotNull(bigInteger10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1" + "'", str12, "1");
        org.junit.Assert.assertNotNull(bigInteger13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(bigInteger19);
        org.junit.Assert.assertNotNull(bigInteger20);
        org.junit.Assert.assertNotNull(booleanModelValue22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "true" + "'", str24, "true");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(bigInteger29);
        org.junit.Assert.assertNotNull(bigInteger30);
        org.junit.Assert.assertNotNull(bigDecimal31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(bigDecimal33);
        org.junit.Assert.assertNotNull(valueExpression34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(bigDecimal37);
    }

    @Test
    public void test13491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13491");
        org.jboss.dmr.ModelType modelType0 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode(modelType0);
        org.jboss.dmr.ModelNode modelNode3 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode6 = modelNode3.set("hi!", 0.0d);
        org.jboss.dmr.Property property7 = new org.jboss.dmr.Property("", modelNode6);
        org.jboss.dmr.ModelNode modelNode8 = modelNode1.set(property7);
        org.jboss.dmr.PropertyModelValue propertyModelValue9 = new org.jboss.dmr.PropertyModelValue(property7);
        org.jboss.dmr.ModelNode modelNode10 = propertyModelValue9.asObject();
        java.lang.String str11 = propertyModelValue9.asString();
        org.jboss.dmr.ModelNode modelNode12 = propertyModelValue9.asObject();
        org.jboss.dmr.ModelNode modelNode13 = modelNode12.clear();
        modelNode13.protect();
        org.junit.Assert.assertTrue("'" + modelType0 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType0.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode6);
        org.junit.Assert.assertNotNull(modelNode8);
        org.junit.Assert.assertNotNull(modelNode10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(\"\" => (\"hi!\" => 0.0))" + "'", str11, "(\"\" => (\"hi!\" => 0.0))");
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNode13);
    }

    @Test
    public void test13492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13492");
        org.jboss.dmr.BooleanModelValue booleanModelValue1 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray2 = booleanModelValue1.asBytes();
        java.lang.String str3 = booleanModelValue1.asString();
        int int4 = booleanModelValue1.asInt();
        long long5 = booleanModelValue1.asLong();
        boolean boolean7 = booleanModelValue1.equals((java.lang.Object) '4');
        int int9 = booleanModelValue1.asInt((int) (short) 100);
        java.lang.String str10 = booleanModelValue1.asString();
        double double11 = booleanModelValue1.asDouble();
        org.junit.Assert.assertNotNull(booleanModelValue1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "true" + "'", str3, "true");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "true" + "'", str10, "true");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
    }

    @Test
    public void test13493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13493");
        org.jboss.dmr.ModelNode modelNode0 = new org.jboss.dmr.ModelNode();
        boolean boolean2 = modelNode0.hasDefined("(\"\" => (\"hi!\" => 0.0))");
        org.jboss.dmr.ModelNode modelNode4 = modelNode0.add((long) (byte) 1);
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode9 = modelNode6.setExpression("hi!", "hi!");
        org.jboss.dmr.ModelNode modelNode11 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode14 = modelNode11.set("hi!", 0.0d);
        org.jboss.dmr.Property property15 = new org.jboss.dmr.Property("", modelNode14);
        boolean boolean17 = modelNode14.equals((java.lang.Object) 100L);
        boolean boolean18 = modelNode6.equals(modelNode14);
        org.jboss.dmr.ModelNode modelNode20 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode23 = modelNode20.set("hi!", 0.0d);
        org.jboss.dmr.Property property24 = new org.jboss.dmr.Property("", modelNode23);
        java.lang.String[] strArray25 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode26 = modelNode23.get(strArray25);
        org.jboss.dmr.ModelNode modelNode27 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int28 = modelNode27.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode29 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode32 = modelNode29.setExpression("hi!", "hi!");
        java.lang.String str33 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode29);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList34 = modelNode29.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode35 = modelNode27.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList34);
        org.jboss.dmr.ModelNode modelNode36 = modelNode26.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList34);
        org.jboss.dmr.ModelNode modelNode37 = modelNode14.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList34);
        org.jboss.dmr.ModelNode modelNode39 = modelNode14.add("rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3AXV4");
        org.jboss.dmr.ModelNode modelNode41 = modelNode14.add(false);
        org.jboss.dmr.BooleanModelValue booleanModelValue43 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray44 = booleanModelValue43.asBytes();
        java.lang.String str45 = booleanModelValue43.asString();
        int int46 = booleanModelValue43.asInt();
        java.math.BigInteger bigInteger47 = booleanModelValue43.asBigInteger();
        org.jboss.dmr.ModelNode modelNode48 = modelNode14.set(bigInteger47);
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue49 = new org.jboss.dmr.BigIntegerModelValue(bigInteger47);
        long long50 = bigIntegerModelValue49.asLong();
        java.math.BigDecimal bigDecimal51 = bigIntegerModelValue49.asBigDecimal();
        org.jboss.dmr.ModelNode modelNode52 = modelNode4.add("(\"expression \\\"1\\\"\" => 73)", bigDecimal51);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(modelNode14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(modelNode23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(modelNode26);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str33, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList34);
        org.junit.Assert.assertNotNull(modelNode35);
        org.junit.Assert.assertNotNull(modelNode36);
        org.junit.Assert.assertNotNull(modelNode37);
        org.junit.Assert.assertNotNull(modelNode39);
        org.junit.Assert.assertNotNull(modelNode41);
        org.junit.Assert.assertNotNull(booleanModelValue43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "true" + "'", str45, "true");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(bigInteger47);
        org.junit.Assert.assertNotNull(modelNode48);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(bigDecimal51);
        org.junit.Assert.assertNotNull(modelNode52);
    }

    @Test
    public void test13494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13494");
        org.jboss.dmr.LongModelValue longModelValue1 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str2 = longModelValue1.asString();
        byte[] byteArray3 = longModelValue1.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue4 = new org.jboss.dmr.BytesModelValue(byteArray3);
        java.lang.String str5 = bytesModelValue4.asString();
        int int6 = bytesModelValue4.asInt();
        int int7 = bytesModelValue4.asInt();
        int int9 = bytesModelValue4.asInt(112);
        int int10 = bytesModelValue4.asInt();
        org.jboss.dmr.BooleanModelValue booleanModelValue12 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray13 = booleanModelValue12.asBytes();
        java.lang.String str14 = booleanModelValue12.asString();
        int int15 = booleanModelValue12.asInt();
        org.jboss.dmr.LongModelValue longModelValue17 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str18 = longModelValue17.asString();
        byte[] byteArray19 = longModelValue17.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue20 = new org.jboss.dmr.BytesModelValue(byteArray19);
        java.lang.String str21 = bytesModelValue20.asString();
        int int22 = bytesModelValue20.asInt();
        byte[] byteArray23 = bytesModelValue20.asBytes();
        org.jboss.dmr.LongModelValue longModelValue25 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str26 = longModelValue25.asString();
        byte[] byteArray27 = longModelValue25.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue28 = new org.jboss.dmr.BytesModelValue(byteArray27);
        java.lang.String str29 = bytesModelValue28.asString();
        int int30 = bytesModelValue28.asInt();
        int int31 = bytesModelValue28.asInt();
        org.jboss.dmr.LongModelValue longModelValue33 = new org.jboss.dmr.LongModelValue(1L);
        java.lang.String str34 = longModelValue33.asString();
        byte[] byteArray35 = longModelValue33.asBytes();
        org.jboss.dmr.BytesModelValue bytesModelValue36 = new org.jboss.dmr.BytesModelValue(byteArray35);
        double double37 = bytesModelValue36.asDouble();
        boolean boolean38 = bytesModelValue28.equals(bytesModelValue36);
        byte[] byteArray39 = bytesModelValue36.asBytes();
        java.math.BigInteger bigInteger40 = bytesModelValue36.asBigInteger();
        boolean boolean41 = bytesModelValue20.equals(bytesModelValue36);
        int int43 = bytesModelValue36.asInt((int) 'J');
        org.jboss.dmr.stream.ModelStreamFactory modelStreamFactory45 = org.jboss.dmr.stream.ModelStreamFactory.getInstance(false);
        java.io.InputStream inputStream46 = null;
        org.jboss.dmr.Base64.InputStream inputStream48 = new org.jboss.dmr.Base64.InputStream(inputStream46, (int) ' ');
        org.jboss.dmr.Base64.InputStream inputStream49 = new org.jboss.dmr.Base64.InputStream((java.io.InputStream) inputStream48);
        org.jboss.dmr.stream.ModelReader modelReader50 = modelStreamFactory45.newModelReader((java.io.InputStream) inputStream49);
        java.io.OutputStream outputStream51 = null;
        org.jboss.dmr.Base64.OutputStream outputStream52 = new org.jboss.dmr.Base64.OutputStream(outputStream51);
        org.jboss.dmr.Base64.OutputStream outputStream53 = new org.jboss.dmr.Base64.OutputStream((java.io.OutputStream) outputStream52);
        outputStream52.write((int) (byte) -1);
        org.jboss.dmr.stream.ModelWriter modelWriter56 = modelStreamFactory45.newModelWriter((java.io.OutputStream) outputStream52);
        org.jboss.dmr.stream.ModelWriter modelWriter57 = modelWriter56.writeListStart();
        bytesModelValue36.write(modelWriter57);
        org.jboss.dmr.BooleanModelValue booleanModelValue60 = org.jboss.dmr.BooleanModelValue.valueOf(true);
        byte[] byteArray61 = booleanModelValue60.asBytes();
        java.lang.String str62 = booleanModelValue60.asString();
        int int63 = booleanModelValue60.asInt();
        long long64 = booleanModelValue60.asLong();
        boolean boolean66 = booleanModelValue60.equals((java.lang.Object) '4');
        java.math.BigInteger bigInteger67 = booleanModelValue60.asBigInteger();
        java.lang.String str68 = booleanModelValue60.asString();
        byte[] byteArray69 = booleanModelValue60.asBytes();
        java.lang.String str71 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) byteArray69, 10);
        org.jboss.dmr.stream.ModelWriter modelWriter72 = modelWriter57.writeBytes(byteArray69);
        booleanModelValue12.write(modelWriter72);
        bytesModelValue4.write(modelWriter72);
        double double76 = bytesModelValue4.asDouble((double) 0L);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1" + "'", str2, "1");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str5, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(booleanModelValue12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "true" + "'", str14, "true");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1" + "'", str18, "1");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str21, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1" + "'", str26, "1");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }" + "'", str29, "bytes { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1" + "'", str34, "1");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.9E-324d + "'", double37 == 4.9E-324d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0, 0, 0, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(bigInteger40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(modelStreamFactory45);
        org.junit.Assert.assertNotNull(modelReader50);
        org.junit.Assert.assertNotNull(modelWriter56);
        org.junit.Assert.assertNotNull(modelWriter57);
        org.junit.Assert.assertNotNull(booleanModelValue60);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "true" + "'", str62, "true");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 1L + "'", long64 == 1L);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(bigInteger67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "true" + "'", str68, "true");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "H4sIAAAAAAAAAFvzloG1tIiBKdppzWfxH2wcIQ+YGBgqChgYGBgZASVtzhAcAAAA" + "'", str71, "H4sIAAAAAAAAAFvzloG1tIiBKdppzWfxH2wcIQ+YGBgqChgYGBgZASVtzhAcAAAA");
        org.junit.Assert.assertNotNull(modelWriter72);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 4.9E-324d + "'", double76 == 4.9E-324d);
    }

    @Test
    public void test13495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13495");
        org.jboss.dmr.ObjectModelValue objectModelValue0 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode1 = objectModelValue0.asObject();
        org.jboss.dmr.ModelValue modelValue2 = objectModelValue0.copy();
        org.jboss.dmr.ObjectModelValue objectModelValue3 = new org.jboss.dmr.ObjectModelValue();
        org.jboss.dmr.ModelNode modelNode4 = objectModelValue3.asObject();
        java.util.Set<java.lang.String> strSet5 = objectModelValue3.getKeys();
        org.jboss.dmr.ModelNode modelNode7 = objectModelValue3.removeChild("org.jboss.dmr.stream.ModelException: org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]");
        boolean boolean8 = objectModelValue3.asBoolean();
        int int10 = objectModelValue3.asInt((int) 'b');
        org.jboss.dmr.ModelNode modelNode11 = objectModelValue3.asObject();
        boolean boolean12 = objectModelValue0.equals(objectModelValue3);
        long long14 = objectModelValue0.asLong(11975582L);
        org.jboss.dmr.ModelNode modelNode16 = objectModelValue0.removeChild("");
        java.io.DataOutput dataOutput17 = null;
        // The following exception was thrown during execution in test generation
        try {
            objectModelValue0.writeExternal(dataOutput17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(modelNode1);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(modelNode7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNull(modelNode16);
    }

    @Test
    public void test13496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13496");
        org.jboss.dmr.BooleanModelValue booleanModelValue0 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double1 = booleanModelValue0.asDouble();
        org.jboss.dmr.ModelValue modelValue2 = booleanModelValue0.copy();
        java.math.BigInteger bigInteger3 = booleanModelValue0.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue4 = new org.jboss.dmr.BigIntegerModelValue(bigInteger3);
        double double6 = bigIntegerModelValue4.asDouble((double) 'b');
        java.lang.String str7 = bigIntegerModelValue4.asString();
        org.jboss.dmr.ValueExpression valueExpression8 = bigIntegerModelValue4.asExpression();
        boolean boolean10 = bigIntegerModelValue4.asBoolean(true);
        org.jboss.dmr.BooleanModelValue booleanModelValue11 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double12 = booleanModelValue11.asDouble();
        org.jboss.dmr.ModelValue modelValue13 = booleanModelValue11.copy();
        java.math.BigInteger bigInteger14 = booleanModelValue11.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue15 = new org.jboss.dmr.BigIntegerModelValue(bigInteger14);
        java.lang.String str16 = bigIntegerModelValue15.asString();
        long long18 = bigIntegerModelValue15.asLong(32L);
        double double19 = bigIntegerModelValue15.asDouble();
        org.jboss.dmr.BooleanModelValue booleanModelValue20 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double21 = booleanModelValue20.asDouble();
        org.jboss.dmr.ModelValue modelValue22 = booleanModelValue20.copy();
        java.math.BigInteger bigInteger23 = booleanModelValue20.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue24 = new org.jboss.dmr.BigIntegerModelValue(bigInteger23);
        double double26 = bigIntegerModelValue24.asDouble((double) 'b');
        boolean boolean27 = bigIntegerModelValue15.equals(bigIntegerModelValue24);
        org.jboss.dmr.BooleanModelValue booleanModelValue28 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double29 = booleanModelValue28.asDouble();
        org.jboss.dmr.ModelValue modelValue30 = booleanModelValue28.copy();
        java.math.BigInteger bigInteger31 = booleanModelValue28.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue32 = new org.jboss.dmr.BigIntegerModelValue(bigInteger31);
        long long34 = bigIntegerModelValue32.asLong((long) 'b');
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue35 = null;
        boolean boolean36 = bigIntegerModelValue32.equals(bigIntegerModelValue35);
        boolean boolean37 = bigIntegerModelValue15.equals(bigIntegerModelValue32);
        java.math.BigDecimal bigDecimal38 = bigIntegerModelValue15.asBigDecimal();
        boolean boolean39 = bigIntegerModelValue4.equals(bigIntegerModelValue15);
        double double40 = bigIntegerModelValue4.asDouble();
        org.jboss.dmr.BooleanModelValue booleanModelValue41 = org.jboss.dmr.BooleanModelValue.TRUE;
        double double42 = booleanModelValue41.asDouble();
        org.jboss.dmr.ModelValue modelValue43 = booleanModelValue41.copy();
        java.math.BigInteger bigInteger44 = booleanModelValue41.asBigInteger();
        org.jboss.dmr.BigIntegerModelValue bigIntegerModelValue45 = new org.jboss.dmr.BigIntegerModelValue(bigInteger44);
        int int47 = bigIntegerModelValue45.asInt((int) (short) 1);
        org.jboss.dmr.ModelNode modelNode48 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode51 = modelNode48.set("hi!", 0.0d);
        java.lang.String str52 = modelNode48.toString();
        org.jboss.dmr.ModelNode modelNode53 = modelNode48.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode55 = modelNode48.set(100);
        org.jboss.dmr.ModelNode modelNode56 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode59 = modelNode56.set("hi!", 0.0d);
        java.lang.String str60 = modelNode56.toString();
        org.jboss.dmr.ModelNode modelNode61 = modelNode56.setEmptyObject();
        org.jboss.dmr.ModelNode modelNode63 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode66 = modelNode63.set("hi!", 0.0d);
        org.jboss.dmr.Property property67 = new org.jboss.dmr.Property("", modelNode66);
        org.jboss.dmr.ModelNode modelNode68 = modelNode56.set(property67);
        java.lang.String str69 = modelNode68.asString();
        org.jboss.dmr.ModelNode modelNode70 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode73 = modelNode70.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList74 = modelNode73.asList();
        org.jboss.dmr.ListModelValue listModelValue75 = new org.jboss.dmr.ListModelValue(modelNodeList74);
        org.jboss.dmr.ModelNode modelNode76 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue75);
        org.jboss.dmr.ModelValue modelValue77 = listModelValue75.resolve();
        int int79 = listModelValue75.asInt((int) (byte) 100);
        boolean boolean80 = listModelValue75.asBoolean();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList81 = listModelValue75.asList();
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList82 = modelNode68.asList(modelNodeList81);
        org.jboss.dmr.ModelNode modelNode83 = modelNode55.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList81);
        boolean boolean84 = bigIntegerModelValue45.equals((java.lang.Object) modelNode55);
        double double85 = bigIntegerModelValue45.asDouble();
        org.jboss.dmr.LongModelValue longModelValue87 = new org.jboss.dmr.LongModelValue((-1L));
        long long89 = longModelValue87.asLong((long) (byte) -1);
        byte[] byteArray90 = longModelValue87.asBytes();
        boolean boolean91 = bigIntegerModelValue45.equals((java.lang.Object) byteArray90);
        boolean boolean92 = bigIntegerModelValue4.equals(bigIntegerModelValue45);
        int int93 = bigIntegerModelValue45.asInt();
        org.junit.Assert.assertNotNull(booleanModelValue0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(valueExpression8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(booleanModelValue11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue13);
        org.junit.Assert.assertNotNull(bigInteger14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1" + "'", str16, "1");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(booleanModelValue20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue22);
        org.junit.Assert.assertNotNull(bigInteger23);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(booleanModelValue28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue30);
        org.junit.Assert.assertNotNull(bigInteger31);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1L + "'", long34 == 1L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(bigDecimal38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(booleanModelValue41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(modelValue43);
        org.junit.Assert.assertNotNull(bigInteger44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(modelNode51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(\"hi!\" => 0.0)" + "'", str52, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode53);
        org.junit.Assert.assertNotNull(modelNode55);
        org.junit.Assert.assertNotNull(modelNode59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(\"hi!\" => 0.0)" + "'", str60, "(\"hi!\" => 0.0)");
        org.junit.Assert.assertNotNull(modelNode61);
        org.junit.Assert.assertNotNull(modelNode66);
        org.junit.Assert.assertNotNull(modelNode68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(\"\" => (\"hi!\" => 0.0))" + "'", str69, "(\"\" => (\"hi!\" => 0.0))");
        org.junit.Assert.assertNotNull(modelNode73);
        org.junit.Assert.assertNotNull(modelNodeList74);
        org.junit.Assert.assertNotNull(modelValue77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(modelNodeList81);
        org.junit.Assert.assertNotNull(modelNodeList82);
        org.junit.Assert.assertNotNull(modelNode83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0d + "'", double85 == 1.0d);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + (-1L) + "'", long89 == (-1L));
        org.junit.Assert.assertNotNull(byteArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray90), "[-1, -1, -1, -1, -1, -1, -1, -1]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
    }

    @Test
    public void test13497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13497");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("Expression \"hi!\"");
        org.jboss.dmr.StringModelValue stringModelValue3 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.StringModelValue stringModelValue5 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        boolean boolean6 = stringModelValue3.equals(stringModelValue5);
        byte[] byteArray7 = stringModelValue5.asBytes();
        java.lang.Object obj8 = null;
        boolean boolean9 = stringModelValue5.equals(obj8);
        boolean boolean11 = stringModelValue5.equals((java.lang.Object) "TYPE_MODEL_VALUE");
        boolean boolean12 = stringModelValue1.equals(stringModelValue5);
        java.io.PrintWriter printWriter13 = null;
        // The following exception was thrown during execution in test generation
        try {
            stringModelValue1.format(printWriter13, (int) 'p', true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[40, 34, 34, 32, 61, 62, 32, 40, 34, 104, 105, 33, 34, 32, 61, 62, 32, 48, 46, 48, 41, 41]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test13498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13498");
        org.jboss.dmr.StringModelValue stringModelValue1 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        org.jboss.dmr.ValueExpression valueExpression2 = stringModelValue1.asExpression();
        boolean boolean4 = stringModelValue1.equals((java.lang.Object) (-1.0d));
        java.lang.String str5 = stringModelValue1.asString();
        org.jboss.dmr.stream.ModelEvent modelEvent6 = org.jboss.dmr.stream.ModelEvent.UNDEFINED;
        boolean boolean7 = stringModelValue1.equals((java.lang.Object) modelEvent6);
        org.jboss.dmr.StringModelValue stringModelValue9 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.StringModelValue stringModelValue11 = new org.jboss.dmr.StringModelValue("Expression \"true\"");
        org.jboss.dmr.StringModelValue stringModelValue13 = new org.jboss.dmr.StringModelValue("(\"\" => (\"hi!\" => 0.0))");
        boolean boolean14 = stringModelValue11.equals(stringModelValue13);
        byte[] byteArray15 = stringModelValue13.asBytes();
        java.lang.Object obj16 = null;
        boolean boolean17 = stringModelValue13.equals(obj16);
        boolean boolean19 = stringModelValue13.equals((java.lang.Object) "TYPE_MODEL_VALUE");
        boolean boolean20 = stringModelValue9.equals(stringModelValue13);
        boolean boolean21 = stringModelValue1.equals(stringModelValue13);
        // The following exception was thrown during execution in test generation
        try {
            org.jboss.dmr.ModelType modelType22 = stringModelValue13.asType();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No enum constant org.jboss.dmr.ModelType.(\"\" => (\"hi!\" => 0.0))");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(valueExpression2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(\"\" => (\"hi!\" => 0.0))" + "'", str5, "(\"\" => (\"hi!\" => 0.0))");
        org.junit.Assert.assertTrue("'" + modelEvent6 + "' != '" + org.jboss.dmr.stream.ModelEvent.UNDEFINED + "'", modelEvent6.equals(org.jboss.dmr.stream.ModelEvent.UNDEFINED));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[40, 34, 34, 32, 61, 62, 32, 40, 34, 104, 105, 33, 34, 32, 61, 62, 32, 48, 46, 48, 41, 41]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test13499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13499");
        org.jboss.dmr.ModelNode modelNode2 = new org.jboss.dmr.ModelNode((double) (byte) 1);
        long long3 = modelNode2.asLong();
        org.jboss.dmr.ModelNode modelNode6 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode9 = modelNode6.set("hi!", 0.0d);
        org.jboss.dmr.Property property10 = new org.jboss.dmr.Property("", modelNode9);
        java.lang.String[] strArray11 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode12 = modelNode9.get(strArray11);
        org.jboss.dmr.ModelNode modelNode13 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode16 = modelNode13.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList17 = modelNode16.asList();
        org.jboss.dmr.ListModelValue listModelValue18 = new org.jboss.dmr.ListModelValue(modelNodeList17);
        org.jboss.dmr.ModelNode modelNode19 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue18);
        org.jboss.dmr.ModelValue modelValue20 = listModelValue18.resolve();
        int int22 = listModelValue18.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList23 = listModelValue18.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList24 = modelNode12.asPropertyList(propertyList23);
        org.jboss.dmr.ModelNode modelNode26 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode29 = modelNode26.set("hi!", 0.0d);
        org.jboss.dmr.Property property30 = new org.jboss.dmr.Property("", modelNode29);
        java.lang.String[] strArray31 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode32 = modelNode29.get(strArray31);
        org.jboss.dmr.ModelNode modelNode33 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode36 = modelNode33.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList37 = modelNode36.asList();
        org.jboss.dmr.ListModelValue listModelValue38 = new org.jboss.dmr.ListModelValue(modelNodeList37);
        org.jboss.dmr.ModelNode modelNode39 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue38);
        org.jboss.dmr.ModelValue modelValue40 = listModelValue38.resolve();
        int int42 = listModelValue38.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList43 = listModelValue38.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList44 = modelNode32.asPropertyList(propertyList43);
        modelNode12.setNoCopy(modelNode32);
        org.jboss.dmr.ModelNode modelNode46 = modelNode2.set("org.jboss.dmr.stream.ModelException: [(\"hi!\" => 0.0)]", modelNode12);
        org.jboss.dmr.ModelNode modelNode48 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode51 = modelNode48.set("hi!", 0.0d);
        org.jboss.dmr.Property property52 = new org.jboss.dmr.Property("", modelNode51);
        java.lang.String[] strArray53 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode54 = modelNode51.get(strArray53);
        org.jboss.dmr.ModelNode modelNode55 = new org.jboss.dmr.ModelNode();
        java.lang.Integer int56 = modelNode55.asIntOrNull();
        org.jboss.dmr.ModelNode modelNode57 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode60 = modelNode57.setExpression("hi!", "hi!");
        java.lang.String str61 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode57);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList62 = modelNode57.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode63 = modelNode55.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList62);
        org.jboss.dmr.ModelNode modelNode64 = modelNode54.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList62);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList65 = modelNode2.asList(modelNodeList62);
        org.jboss.dmr.PropertyModelValue propertyModelValue67 = new org.jboss.dmr.PropertyModelValue("Expression \"true\"", modelNode2, false);
        org.jboss.dmr.ModelType modelType68 = org.jboss.dmr.ModelType.INT;
        org.jboss.dmr.ModelNode modelNode69 = new org.jboss.dmr.ModelNode(modelType68);
        org.jboss.dmr.ModelNode modelNode71 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode74 = modelNode71.set("hi!", 0.0d);
        org.jboss.dmr.Property property75 = new org.jboss.dmr.Property("", modelNode74);
        org.jboss.dmr.ModelNode modelNode76 = modelNode69.set(property75);
        org.jboss.dmr.PropertyModelValue propertyModelValue77 = new org.jboss.dmr.PropertyModelValue(property75);
        org.jboss.dmr.ModelValue modelValue78 = propertyModelValue77.copy();
        boolean boolean79 = propertyModelValue67.equals(propertyModelValue77);
        org.jboss.dmr.ModelValue modelValue80 = propertyModelValue67.protect();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 1L + "'", long3 == 1L);
        org.junit.Assert.assertNotNull(modelNode9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(modelNode12);
        org.junit.Assert.assertNotNull(modelNode16);
        org.junit.Assert.assertNotNull(modelNodeList17);
        org.junit.Assert.assertNotNull(modelValue20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(propertyList23);
        org.junit.Assert.assertNotNull(propertyList24);
        org.junit.Assert.assertNotNull(modelNode29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(modelNode32);
        org.junit.Assert.assertNotNull(modelNode36);
        org.junit.Assert.assertNotNull(modelNodeList37);
        org.junit.Assert.assertNotNull(modelValue40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(propertyList43);
        org.junit.Assert.assertNotNull(propertyList44);
        org.junit.Assert.assertNotNull(modelNode46);
        org.junit.Assert.assertNotNull(modelNode51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(modelNode54);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(modelNode60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str61, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList62);
        org.junit.Assert.assertNotNull(modelNode63);
        org.junit.Assert.assertNotNull(modelNode64);
        org.junit.Assert.assertNotNull(modelNodeList65);
        org.junit.Assert.assertTrue("'" + modelType68 + "' != '" + org.jboss.dmr.ModelType.INT + "'", modelType68.equals(org.jboss.dmr.ModelType.INT));
        org.junit.Assert.assertNotNull(modelNode74);
        org.junit.Assert.assertNotNull(modelNode76);
        org.junit.Assert.assertNotNull(modelValue78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(modelValue80);
    }

    @Test
    public void test13500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13500");
        org.jboss.dmr.ModelNode modelNode1 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode4 = modelNode1.set("hi!", 0.0d);
        org.jboss.dmr.Property property5 = new org.jboss.dmr.Property("", modelNode4);
        java.lang.String[] strArray6 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode7 = modelNode4.get(strArray6);
        org.jboss.dmr.ModelNode modelNode8 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode11 = modelNode8.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList12 = modelNode11.asList();
        org.jboss.dmr.ListModelValue listModelValue13 = new org.jboss.dmr.ListModelValue(modelNodeList12);
        org.jboss.dmr.ModelNode modelNode14 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue13);
        org.jboss.dmr.ModelValue modelValue15 = listModelValue13.resolve();
        int int17 = listModelValue13.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList18 = listModelValue13.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList19 = modelNode7.asPropertyList(propertyList18);
        org.jboss.dmr.ModelNode modelNode21 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode24 = modelNode21.set("hi!", 0.0d);
        org.jboss.dmr.Property property25 = new org.jboss.dmr.Property("", modelNode24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        org.jboss.dmr.ModelNode modelNode27 = modelNode24.get(strArray26);
        org.jboss.dmr.ModelNode modelNode28 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode31 = modelNode28.set("hi!", 0.0d);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList32 = modelNode31.asList();
        org.jboss.dmr.ListModelValue listModelValue33 = new org.jboss.dmr.ListModelValue(modelNodeList32);
        org.jboss.dmr.ModelNode modelNode34 = new org.jboss.dmr.ModelNode((org.jboss.dmr.ModelValue) listModelValue33);
        org.jboss.dmr.ModelValue modelValue35 = listModelValue33.resolve();
        int int37 = listModelValue33.asInt((int) (byte) 100);
        java.util.List<org.jboss.dmr.Property> propertyList38 = listModelValue33.asPropertyList();
        java.util.List<org.jboss.dmr.Property> propertyList39 = modelNode27.asPropertyList(propertyList38);
        modelNode7.setNoCopy(modelNode27);
        org.jboss.dmr.ModelNode modelNode42 = modelNode27.set((long) 100);
        org.jboss.dmr.ModelType modelType43 = modelNode42.getType();
        long long45 = modelNode42.asLong((long) (short) 100);
        org.jboss.dmr.ValueExpression valueExpression46 = modelNode42.asExpression();
        org.jboss.dmr.ModelNode modelNode48 = new org.jboss.dmr.ModelNode(true);
        org.jboss.dmr.ModelNode modelNode49 = modelNode48.resolve();
        java.lang.String str50 = modelNode48.asString();
        org.jboss.dmr.ModelNode modelNode52 = modelNode48.set((long) 52);
        org.jboss.dmr.ModelNode modelNode54 = new org.jboss.dmr.ModelNode();
        org.jboss.dmr.ModelNode modelNode57 = modelNode54.setExpression("hi!", "hi!");
        java.lang.String str58 = org.jboss.dmr.Base64.encodeObject((java.io.Serializable) modelNode54);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList59 = modelNode54.asListOrEmpty();
        org.jboss.dmr.ModelNode modelNode61 = modelNode54.set((double) 0);
        org.jboss.dmr.ModelType modelType63 = org.jboss.dmr.ModelType.PROPERTY;
        char char64 = modelType63.getTypeChar();
        org.jboss.dmr.ModelNode modelNode65 = modelNode54.set("[(\"hi!\" => 0.0)]", modelType63);
        org.jboss.dmr.Property property66 = new org.jboss.dmr.Property("\"(\\\"hi!\\\" => 0.0)\"", modelNode65);
        org.jboss.dmr.ModelNode modelNode67 = modelNode52.set(property66);
        org.jboss.dmr.PropertyModelValue propertyModelValue68 = new org.jboss.dmr.PropertyModelValue(property66);
        java.util.List<org.jboss.dmr.ModelNode> modelNodeList69 = propertyModelValue68.asList();
        org.jboss.dmr.ModelNode modelNode70 = modelNode42.set((java.util.Collection<org.jboss.dmr.ModelNode>) modelNodeList69);
        org.junit.Assert.assertNotNull(modelNode4);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(modelNode7);
        org.junit.Assert.assertNotNull(modelNode11);
        org.junit.Assert.assertNotNull(modelNodeList12);
        org.junit.Assert.assertNotNull(modelValue15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(propertyList18);
        org.junit.Assert.assertNotNull(propertyList19);
        org.junit.Assert.assertNotNull(modelNode24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(modelNode27);
        org.junit.Assert.assertNotNull(modelNode31);
        org.junit.Assert.assertNotNull(modelNodeList32);
        org.junit.Assert.assertNotNull(modelValue35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(propertyList38);
        org.junit.Assert.assertNotNull(propertyList39);
        org.junit.Assert.assertNotNull(modelNode42);
        org.junit.Assert.assertTrue("'" + modelType43 + "' != '" + org.jboss.dmr.ModelType.LONG + "'", modelType43.equals(org.jboss.dmr.ModelType.LONG));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 100L + "'", long45 == 100L);
        org.junit.Assert.assertNotNull(valueExpression46);
        org.junit.Assert.assertNotNull(modelNode49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "true" + "'", str50, "true");
        org.junit.Assert.assertNotNull(modelNode52);
        org.junit.Assert.assertNotNull(modelNode57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=" + "'", str58, "rO0ABXNyABdvcmcuamJvc3MuZG1yLk1vZGVsTm9kZRwtoUSdo44/DAAAeHB3DHAAA2hpIWUAA2hp\nIXg=");
        org.junit.Assert.assertNotNull(modelNodeList59);
        org.junit.Assert.assertNotNull(modelNode61);
        org.junit.Assert.assertTrue("'" + modelType63 + "' != '" + org.jboss.dmr.ModelType.PROPERTY + "'", modelType63.equals(org.jboss.dmr.ModelType.PROPERTY));
        org.junit.Assert.assertTrue("'" + char64 + "' != '" + 'p' + "'", char64 == 'p');
        org.junit.Assert.assertNotNull(modelNode65);
        org.junit.Assert.assertNotNull(modelNode67);
        org.junit.Assert.assertNotNull(modelNodeList69);
        org.junit.Assert.assertNotNull(modelNode70);
    }
}
