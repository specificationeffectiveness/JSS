package foodev.jsondiff;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest29 {

    public static boolean debug = false;

    @Test
    public void test14501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14501");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.Visitor<?> wildcardVisitor19 = jsonDiff18.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor20 = jsonDiff18.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff18.create("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor23 = jsonDiff18.getVisitor();
        foodev.jsondiff.Node node24 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement25 = null;
        foodev.jsondiff.Leaf[] leafArray26 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList27 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList27, leafArray26);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap29 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf30 = jsonDiff18.findLeaves(node24, jzonElement25, (java.util.List<foodev.jsondiff.Leaf>) leafList27, intMap29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNull(wildcardVisitor19);
        org.junit.Assert.assertNull(wildcardVisitor20);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertNull(wildcardVisitor23);
        org.junit.Assert.assertNotNull(leafArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test14502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14502");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean6 = instruction5.isIndexed();
        foodev.jsondiff.Oper oper7 = null;
        instruction5.oper = oper7;
        instruction5.index = ' ';
        foodev.jsondiff.Oper oper11 = instruction5.oper;
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        java.lang.String str14 = instruction5.key;
        foodev.jsondiff.Oper oper15 = instruction5.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        int int19 = jsonDiff17.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff17.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean25 = instruction24.isIndexed();
        boolean boolean26 = instruction24.isIndexed();
        instruction24.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        foodev.jsondiff.Oper oper29 = instruction24.oper;
        instruction5.oper = oper29;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(oper11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str14, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertNull(oper15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + oper29 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper29.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14503");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = wrapper9.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test14504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14504");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int13 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff20.create("");
        int int24 = jsonDiff20.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff20.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff20.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction28.index = (short) 1;
        instruction28.index = (byte) 0;
        int int33 = instruction28.index;
        foodev.jsondiff.Oper oper34 = instruction28.oper;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement35 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement16, instruction28, jzonElement35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNull(wildcardVisitor15);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + oper34 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper34.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14505");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff9.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff9.getVisitor();
        int int13 = jsonDiff9.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = jsonDiff9.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test14506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14506");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff13.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject21 = jsonDiff13.diff(jzonElement19, jzonElement20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(wrapper18);
    }

    @Test
    public void test14507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14507");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int13 = instruction12.index;
        instruction12.index = (short) 0;
        instruction12.key = "";
        int int18 = instruction12.index;
        foodev.jsondiff.Oper oper19 = instruction12.oper;
        instruction12.index = (byte) 0;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + oper19 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper19.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14508");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        int int12 = jsonDiff3.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff3.getVisitor();
        int int15 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int17 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int19 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test14509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14509");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff10.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff12.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff12.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper16);
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper16);
        java.lang.Class<?> wildcardClass19 = jsonDiff18.getClass();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = wrapper3.wrap((java.lang.Object) wildcardClass19);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Class cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(wildcardVisitor13);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test14510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14510");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
    }

    @Test
    public void test14511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14511");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = jsonDiff9.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
    }

    @Test
    public void test14512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14512");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff8.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff8.factory;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(wrapper11);
    }

    @Test
    public void test14513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14513");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject14 = jsonDiff11.diff(jzonElement12, jzonElement13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test14514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14514");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction7.index = (short) 100;
        boolean boolean10 = instruction7.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff14.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction16.key = "hi!";
        foodev.jsondiff.Oper oper19 = instruction16.oper;
        instruction7.oper = oper19;
        foodev.jsondiff.Oper oper21 = instruction7.oper;
        foodev.jsondiff.Oper oper22 = instruction7.oper;
        instruction7.index = 100;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertTrue("'" + oper19 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper19.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper21 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper21.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper22 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper22.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14515");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction8.index = 100;
        instruction8.index = 0;
        foodev.jsondiff.Oper oper13 = instruction8.oper;
        instruction8.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + oper13 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper13.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14516");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        int int5 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = wrapper6.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
    }

    @Test
    public void test14517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14517");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper5);
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff6.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff8.create("");
        int int12 = jsonDiff8.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int16 = jsonDiff8.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff8.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff(wrapper20);
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff(wrapper20);
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper20);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement24 = jacksonWrapper0.wrap((java.lang.Object) jsonDiff23);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertNotNull(wrapper20);
    }

    @Test
    public void test14518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14518");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction4.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        int int7 = instruction4.index;
        int int8 = instruction4.index;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test14519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14519");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        boolean boolean6 = instruction5.isIndexed();
        instruction5.index = (byte) 10;
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction5.index = (byte) 10;
        instruction5.index = '4';
        instruction5.index = (-1);
        instruction5.index = (byte) 10;
        instruction5.index = (short) 10;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test14520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14520");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff10.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff10.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff10.factory;
        int int16 = jsonDiff10.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff10.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff10.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff19.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper22);
        int int25 = jsonDiff23.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor26 = jsonDiff23.getVisitor();
        int int28 = jsonDiff23.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction30 = jsonDiff23.create("");
        foodev.jsondiff.Oper oper31 = instruction30.oper;
        instruction21.oper = oper31;
        instruction21.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        boolean boolean35 = instruction21.isIndexed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement36 = gsonWrapper0.wrap((java.lang.Object) instruction21);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(instruction30);
        org.junit.Assert.assertTrue("'" + oper31 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper31.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test14521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14521");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement10, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test14522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14522");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException11);
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray14);
    }

    @Test
    public void test14523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14523");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("");
        boolean boolean16 = instruction15.isIndexed();
        instruction15.index = (byte) 10;
        boolean boolean19 = instruction15.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction20 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction20.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper23);
        int int26 = jsonDiff24.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper29 = instruction28.oper;
        instruction20.oper = oper29;
        instruction15.oper = oper29;
        int int32 = instruction15.index;
        instruction15.index = (byte) 100;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj36 = jsonDiff8.diff((java.lang.Object) (byte) 100, (java.lang.Object) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Byte cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertTrue("'" + oper29 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper29.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
    }

    @Test
    public void test14524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14524");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff11.checkIndex(jzonElement12, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test14525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14525");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        int int13 = jsonDiff11.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff11.checkIndex(jzonElement14, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test14526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14526");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException26);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException39.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray44 = jacksonWrapperException43.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException45);
        jacksonWrapperException39.addSuppressed((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray52 = jacksonWrapperException51.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException53);
        jacksonWrapperException45.addSuppressed((java.lang.Throwable) jacksonWrapperException53);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException53);
        java.lang.Throwable throwable60 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", throwable60);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException64);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException64);
        jacksonWrapperException61.addSuppressed((java.lang.Throwable) jacksonWrapperException66);
        jacksonWrapperException53.addSuppressed((java.lang.Throwable) jacksonWrapperException66);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException66);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException66);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException71 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException66);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray52);
    }

    @Test
    public void test14527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14527");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff10.create("");
        int int14 = jsonDiff10.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff10.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff10.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff10.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor21 = jsonDiff10.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff10.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff10.factory;
        int int25 = jsonDiff10.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper26 = jsonDiff10.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor27 = jsonDiff10.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff10.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction29.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        boolean boolean32 = instruction29.isIndexed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement33 = wrapper3.wrap((java.lang.Object) instruction29);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertNull(wildcardVisitor21);
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(wrapper26);
        org.junit.Assert.assertNull(wildcardVisitor27);
        org.junit.Assert.assertNotNull(instruction29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test14528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14528");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction7.index = (short) 100;
        boolean boolean10 = instruction7.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper12 = instruction11.oper;
        instruction11.key = "~";
        int int15 = instruction11.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        int int19 = jsonDiff17.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean22 = instruction21.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper23);
        int int26 = jsonDiff24.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper29 = instruction28.oper;
        instruction21.oper = oper29;
        instruction11.oper = oper29;
        foodev.jsondiff.Oper oper32 = instruction11.oper;
        instruction7.oper = oper32;
        instruction7.index = (-1);
        boolean boolean36 = instruction7.isIndexed();
        instruction7.key = "hi!";
        foodev.jsondiff.Oper oper39 = null;
        instruction7.oper = oper39;
        java.lang.String str41 = instruction7.key;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(oper12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertTrue("'" + oper29 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper29.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper32 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper32.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
    }

    @Test
    public void test14529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14529");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff9.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction13.index = (short) 100;
        int int16 = instruction13.index;
        instruction13.key = "";
        instruction13.index = (byte) 10;
        instruction13.index = 0;
        instruction13.key = "";
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement25 = gsonWrapper0.wrap((java.lang.Object) "");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
    }

    @Test
    public void test14530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14530");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException28.addSuppressed((java.lang.Throwable) jacksonWrapperException30);
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException30.getSuppressed();
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException36.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray41 = jacksonWrapperException40.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException42);
        jacksonWrapperException36.addSuppressed((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray49 = jacksonWrapperException48.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException48);
        jacksonWrapperException46.addSuppressed((java.lang.Throwable) jacksonWrapperException48);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException53);
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException54);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray49);
    }

    @Test
    public void test14531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14531");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff9.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        foodev.jsondiff.JsonDiff.Instruction instruction18 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction18.key = "";
        instruction18.index = 'a';
        instruction18.index = 1;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff26 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper25);
        foodev.jsondiff.jsonwrap.Wrapper wrapper27 = jsonDiff26.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff26.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction29.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.JsonDiff.Instruction instruction32 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction32.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff36 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper35);
        int int38 = jsonDiff36.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction40 = jsonDiff36.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper41 = instruction40.oper;
        instruction32.oper = oper41;
        instruction29.oper = oper41;
        instruction18.oper = oper41;
        java.lang.String str45 = instruction18.key;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement46 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff16.applyPartial(jzonElement17, instruction18, jzonElement46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper27);
        org.junit.Assert.assertNotNull(instruction29);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(instruction40);
        org.junit.Assert.assertTrue("'" + oper41 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper41.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
    }

    @Test
    public void test14532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14532");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException18);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement23 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException18);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray21);
    }

    @Test
    public void test14533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14533");
        foodev.jsondiff.JsonDiff.Instruction instruction0 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction0.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper3);
        int int6 = jsonDiff4.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper9 = instruction8.oper;
        instruction0.oper = oper9;
        int int11 = instruction0.index;
        int int12 = instruction0.index;
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + oper9 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper9.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test14534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14534");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(wrapper18);
    }

    @Test
    public void test14535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14535");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int15 = jsonDiff3.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement17, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(wrapper16);
    }

    @Test
    public void test14536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14536");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        int int13 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test14537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14537");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException31.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException35.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException37);
        jacksonWrapperException31.addSuppressed((java.lang.Throwable) jacksonWrapperException37);
        jacksonWrapperException29.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        java.lang.Throwable[] throwableArray41 = jacksonWrapperException31.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray45 = jacksonWrapperException44.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray49 = jacksonWrapperException48.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException50);
        jacksonWrapperException44.addSuppressed((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException50);
        java.lang.Throwable[] throwableArray54 = jacksonWrapperException50.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException57);
        jacksonWrapperException50.addSuppressed((java.lang.Throwable) jacksonWrapperException58);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray62 = jacksonWrapperException61.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException61);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray66 = jacksonWrapperException65.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException65);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException67);
        jacksonWrapperException61.addSuppressed((java.lang.Throwable) jacksonWrapperException67);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException67);
        java.lang.Throwable[] throwableArray71 = jacksonWrapperException67.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException74 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException75 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException74);
        jacksonWrapperException67.addSuppressed((java.lang.Throwable) jacksonWrapperException75);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException77 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException75);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException79 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray80 = jacksonWrapperException79.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException81 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException79);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException82 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException81);
        jacksonWrapperException77.addSuppressed((java.lang.Throwable) jacksonWrapperException81);
        jacksonWrapperException58.addSuppressed((java.lang.Throwable) jacksonWrapperException77);
        jacksonWrapperException42.addSuppressed((java.lang.Throwable) jacksonWrapperException58);
        jacksonWrapperException23.addSuppressed((java.lang.Throwable) jacksonWrapperException58);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException87 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException58);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertNotNull(throwableArray80);
    }

    @Test
    public void test14538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14538");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        int int9 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = jsonDiff1.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test14539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14539");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement11, jzonElement12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(instruction10);
    }

    @Test
    public void test14540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14540");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper1);
        int int4 = jsonDiff2.isIndexed("hi!");
        int int6 = jsonDiff2.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff2.factory;
        int int9 = jsonDiff2.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff2.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int13 = jsonDiff2.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff2.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = jacksonWrapper0.wrap((java.lang.Object) jsonDiff2);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
    }

    @Test
    public void test14541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14541");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        int int10 = jsonDiff1.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff13.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = wrapper16.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(wrapper16);
    }

    @Test
    public void test14542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14542");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff11.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction13.index = (-1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(instruction13);
    }

    @Test
    public void test14543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14543");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff1.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = wrapper14.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(wrapper14);
    }

    @Test
    public void test14544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14544");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        int int10 = jsonDiff1.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper11);
        int int18 = jsonDiff16.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test14545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14545");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        int int12 = jsonDiff3.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Leaf leaf16 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray17 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = jsonDiff3.accept(leaf16, jzonArray17, jzonObject18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor13);
        org.junit.Assert.assertNotNull(instruction15);
    }

    @Test
    public void test14546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14546");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException9);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException3);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        java.lang.String str22 = jacksonWrapperException3.toString();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str22, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test14547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14547");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        int int8 = jsonDiff6.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int10 = jsonDiff6.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = jsonDiff6.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test14548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14548");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("hi!");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test14549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14549");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        int int4 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int10 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = jsonDiff1.apply("", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test14550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14550");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException28);
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException35.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException39.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException41);
        jacksonWrapperException35.addSuppressed((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray47 = jacksonWrapperException46.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray51 = jacksonWrapperException50.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException46.addSuppressed((java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException45.addSuppressed((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException46);
        jacksonWrapperException28.addSuppressed((java.lang.Throwable) jacksonWrapperException46);
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException63);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray51);
    }

    @Test
    public void test14551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14551");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject9 = jsonDiff1.diff(jzonElement7, jzonElement8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
    }

    @Test
    public void test14552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14552");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray18);
    }

    @Test
    public void test14553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14553");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper4);
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff5.factory;
        int int8 = jsonDiff5.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff5.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = jacksonWrapper0.wrap((java.lang.Object) jsonDiff5);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test14554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14554");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff6.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff6.getVisitor();
        int int10 = jsonDiff6.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Leaf leaf11 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray12 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = jsonDiff6.accept(leaf11, jzonArray12, jzonObject13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test14555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14555");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        instruction6.key = "";
        foodev.jsondiff.Oper oper9 = instruction6.oper;
        int int10 = instruction6.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff14.create("");
        int int17 = instruction16.index;
        boolean boolean18 = instruction16.isIndexed();
        instruction16.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper21);
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff22.factory;
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff(wrapper23);
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff24.create("");
        boolean boolean27 = instruction26.isIndexed();
        instruction26.index = (short) -1;
        foodev.jsondiff.Oper oper30 = instruction26.oper;
        instruction16.oper = oper30;
        instruction16.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        instruction16.index = (byte) 1;
        foodev.jsondiff.JsonDiff.Instruction instruction36 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction36.key = "";
        instruction36.index = 'a';
        instruction36.index = 1;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff44 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper43);
        foodev.jsondiff.jsonwrap.Wrapper wrapper45 = jsonDiff44.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction47 = jsonDiff44.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction47.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.JsonDiff.Instruction instruction50 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction50.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff54 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper53);
        int int56 = jsonDiff54.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction58 = jsonDiff54.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper59 = instruction58.oper;
        instruction50.oper = oper59;
        instruction47.oper = oper59;
        instruction36.oper = oper59;
        foodev.jsondiff.Oper oper63 = instruction36.oper;
        instruction16.oper = oper63;
        instruction6.oper = oper63;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff67 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper66);
        foodev.jsondiff.JsonDiff.Instruction instruction69 = jsonDiff67.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction69.index = ' ';
        int int72 = instruction69.index;
        foodev.jsondiff.Oper oper73 = instruction69.oper;
        instruction6.oper = oper73;
        foodev.jsondiff.Oper oper75 = instruction6.oper;
        instruction6.key = "";
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + oper9 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper9.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + oper30 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper30.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper45);
        org.junit.Assert.assertNotNull(instruction47);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(instruction58);
        org.junit.Assert.assertTrue("'" + oper59 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper59.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper63 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper63.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(instruction69);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 32 + "'", int72 == 32);
        org.junit.Assert.assertTrue("'" + oper73 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper73.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper75 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper75.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14556");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        java.lang.String str26 = jacksonWrapperException17.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~" + "'", str26, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
    }

    @Test
    public void test14557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14557");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        int int18 = jsonDiff16.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff16.apply(jzonElement19, jzonElement20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test14558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14558");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException9);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException22);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException32.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException36.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException32.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException30.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException30);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException45.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray46);
    }

    @Test
    public void test14559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14559");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff6.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff6.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff6.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff15.create("");
        int int19 = jsonDiff15.isIndexed("");
        int int21 = jsonDiff15.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff15.create("~");
        int int24 = instruction23.index;
        foodev.jsondiff.Oper oper25 = instruction23.oper;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement26 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff6.applyPartial(jzonElement11, instruction23, jzonElement26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + oper25 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper25.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14560");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        int int10 = jsonDiff1.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor17 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement18, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertNull(wildcardVisitor17);
    }

    @Test
    public void test14561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14561");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int15 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int17 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test14562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14562");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        int int16 = jsonDiff14.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff14.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Leaf leaf19 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray20 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject21 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = jsonDiff14.accept(leaf19, jzonArray20, jzonObject21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(instruction18);
    }

    @Test
    public void test14563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14563");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Oper oper21 = instruction20.oper;
        java.lang.String str22 = instruction20.key;
        instruction20.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        foodev.jsondiff.Oper oper25 = instruction20.oper;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertTrue("'" + oper21 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper21.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str22, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        org.junit.Assert.assertTrue("'" + oper25 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper25.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14564");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException26);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException39.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray44 = jacksonWrapperException43.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException45);
        jacksonWrapperException39.addSuppressed((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray52 = jacksonWrapperException51.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException53);
        jacksonWrapperException45.addSuppressed((java.lang.Throwable) jacksonWrapperException53);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException57);
        java.lang.Throwable[] throwableArray59 = jacksonWrapperException57.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray59);
    }

    @Test
    public void test14565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14565");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("");
        int int8 = instruction7.index;
        java.lang.String str9 = instruction7.key;
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test14566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14566");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff3.getVisitor();
        int int13 = jsonDiff3.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int17 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~");
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException30);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException38.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray43 = jacksonWrapperException42.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException44);
        jacksonWrapperException38.addSuppressed((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException47);
        jacksonWrapperException34.addSuppressed((java.lang.Throwable) jacksonWrapperException49);
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException55);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray59 = jacksonWrapperException58.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException58);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray63 = jacksonWrapperException62.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException62);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException64);
        jacksonWrapperException58.addSuppressed((java.lang.Throwable) jacksonWrapperException64);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException64);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException64);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray71 = jacksonWrapperException70.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException72 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException70);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException73 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException72);
        jacksonWrapperException64.addSuppressed((java.lang.Throwable) jacksonWrapperException72);
        jacksonWrapperException55.addSuppressed((java.lang.Throwable) jacksonWrapperException72);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException76 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException72);
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException76);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException82 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray83 = jacksonWrapperException82.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException84 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException82);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException86 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray87 = jacksonWrapperException86.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException88 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException86);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException89 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException88);
        jacksonWrapperException82.addSuppressed((java.lang.Throwable) jacksonWrapperException88);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException91 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException88);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException92 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException91);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException93 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException92);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException94 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException92);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException95 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException92);
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException92);
        java.lang.Throwable[] throwableArray97 = jacksonWrapperException92.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException98 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException92);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement99 = wrapper18.wrap((java.lang.Object) jacksonWrapperException92);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertNotNull(throwableArray83);
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertNotNull(throwableArray97);
    }

    @Test
    public void test14567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14567");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int16 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor17 = jsonDiff1.getVisitor();
        java.lang.Class<?> wildcardClass18 = jsonDiff1.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test14568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14568");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction7.index = (short) 100;
        int int10 = instruction7.index;
        instruction7.key = "";
        instruction7.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        int int15 = instruction7.index;
        instruction7.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
    }

    @Test
    public void test14569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14569");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff11.getVisitor();
        int int14 = jsonDiff11.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int16 = jsonDiff11.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Node node17 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = null;
        foodev.jsondiff.Leaf[] leafArray19 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList20 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList20, leafArray19);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap22 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf23 = jsonDiff11.findLeaves(node17, jzonElement18, (java.util.List<foodev.jsondiff.Leaf>) leafList20, intMap22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(leafArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test14570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14570");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        int int14 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int16 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Leaf leaf17 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray18 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = jsonDiff3.accept(leaf17, jzonArray18, jzonObject19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test14571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14571");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("hi!");
        instruction10.index = 97;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff14.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.Visitor<?> wildcardVisitor17 = jsonDiff16.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff16.create("");
        int int21 = jsonDiff16.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff16.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper25 = instruction24.oper;
        instruction24.key = "~";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper28);
        foodev.jsondiff.jsonwrap.Wrapper wrapper30 = jsonDiff29.factory;
        foodev.jsondiff.JsonDiff jsonDiff31 = new foodev.jsondiff.JsonDiff(wrapper30);
        foodev.jsondiff.JsonDiff.Instruction instruction33 = jsonDiff31.create("");
        boolean boolean34 = instruction33.isIndexed();
        java.lang.String str35 = instruction33.key;
        foodev.jsondiff.Oper oper36 = instruction33.oper;
        instruction24.oper = oper36;
        foodev.jsondiff.Oper oper38 = instruction24.oper;
        instruction10.oper = oper38;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNull(wildcardVisitor17);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertTrue("'" + oper25 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper25.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper30);
        org.junit.Assert.assertNotNull(instruction33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + oper36 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper36.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper38 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper38.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14572");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException11);
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException23.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException21.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException39.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray44 = jacksonWrapperException43.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException45);
        jacksonWrapperException39.addSuppressed((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray53 = jacksonWrapperException52.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray57 = jacksonWrapperException56.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException56);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException58);
        jacksonWrapperException52.addSuppressed((java.lang.Throwable) jacksonWrapperException58);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException61);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray65 = jacksonWrapperException64.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException64);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException66);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray69 = jacksonWrapperException68.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException68);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException72 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray73 = jacksonWrapperException72.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException74 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException72);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException75 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException74);
        jacksonWrapperException68.addSuppressed((java.lang.Throwable) jacksonWrapperException74);
        jacksonWrapperException66.addSuppressed((java.lang.Throwable) jacksonWrapperException68);
        jacksonWrapperException61.addSuppressed((java.lang.Throwable) jacksonWrapperException66);
        jacksonWrapperException45.addSuppressed((java.lang.Throwable) jacksonWrapperException66);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException80 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException66);
        jacksonWrapperException34.addSuppressed((java.lang.Throwable) jacksonWrapperException66);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException83 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException84 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException83);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException85 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException84);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement86 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException84);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(throwableArray73);
    }

    @Test
    public void test14573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14573");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException6.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray9);
    }

    @Test
    public void test14574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14574");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException3.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray7);
    }

    @Test
    public void test14575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14575");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper4);
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper6);
        int int10 = jsonDiff8.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        instruction12.index = 32;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        int int18 = jsonDiff16.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff16.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction20.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        int int23 = instruction20.index;
        instruction20.index = 0;
        boolean boolean26 = instruction20.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper27);
        foodev.jsondiff.jsonwrap.Wrapper wrapper29 = jsonDiff28.factory;
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff(wrapper29);
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff30.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor33 = jsonDiff30.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction35 = jsonDiff30.create("hi!");
        instruction35.index = '4';
        foodev.jsondiff.Oper oper38 = instruction35.oper;
        instruction20.oper = oper38;
        instruction12.oper = oper38;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement41 = gsonWrapper0.wrap((java.lang.Object) oper38);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wrapper29);
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertNull(wildcardVisitor33);
        org.junit.Assert.assertNotNull(instruction35);
        org.junit.Assert.assertTrue("'" + oper38 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper38.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14576");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject15 = jsonDiff3.diff(jzonElement13, jzonElement14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test14577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14577");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.Visitor<?> wildcardVisitor18 = jsonDiff17.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff17.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff17.factory;
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff(wrapper20);
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff21.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff21.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff21.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int28 = instruction27.index;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNull(wildcardVisitor18);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test14578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14578");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement7, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test14579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14579");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff2.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor5 = jsonDiff2.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff8.getVisitor();
        int int12 = jsonDiff8.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff8.create("hi!");
        foodev.jsondiff.Oper oper16 = instruction15.oper;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff2.applyPartial(jzonElement6, instruction15, jzonElement17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNull(wildcardVisitor5);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + oper16 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper16.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14580");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        int int14 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wrapper15);
    }

    @Test
    public void test14581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14581");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int7 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean16 = instruction15.isIndexed();
        foodev.jsondiff.Oper oper17 = instruction15.oper;
        instruction9.oper = oper17;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + oper17 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper17.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14582");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException5);
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException18.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray21);
    }

    @Test
    public void test14583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14583");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff10.factory;
        foodev.jsondiff.Leaf leaf12 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray13 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = jsonDiff10.accept(leaf12, jzonArray13, jzonObject14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper11);
    }

    @Test
    public void test14584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14584");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff6.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff6.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff6.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = jsonDiff6.diff("", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(instruction10);
    }

    @Test
    public void test14585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14585");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff11.getVisitor();
        int int14 = jsonDiff11.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff11.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = jsonDiff11.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor15);
    }

    @Test
    public void test14586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14586");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper5);
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff6.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff8.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int14 = jsonDiff8.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff8.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff8.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int19 = instruction18.index;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = jacksonWrapper0.wrap((java.lang.Object) instruction18);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor15);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test14587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14587");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(instruction13);
    }

    @Test
    public void test14588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14588");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject14 = jsonDiff1.diff(jzonElement12, jzonElement13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(instruction11);
    }

    @Test
    public void test14589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14589");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException10);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException17);
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException30);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException34);
        jacksonWrapperException18.addSuppressed((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray43 = jacksonWrapperException42.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray47 = jacksonWrapperException46.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray51 = jacksonWrapperException50.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException46.addSuppressed((java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException44.addSuppressed((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException46);
        java.lang.Throwable[] throwableArray59 = jacksonWrapperException46.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException46);
        jacksonWrapperException34.addSuppressed((java.lang.Throwable) jacksonWrapperException60);
        java.lang.Throwable[] throwableArray62 = jacksonWrapperException60.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement63 = gsonWrapper0.wrap((java.lang.Object) throwableArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: [Ljava.lang.Throwable; cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(throwableArray62);
    }

    @Test
    public void test14590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14590");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff13.getVisitor();
        int int18 = jsonDiff13.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int22 = jsonDiff13.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int24 = jsonDiff13.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException32);
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply((java.lang.Object) jsonDiff13, (java.lang.Object) jacksonWrapperException32);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test14591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14591");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException14);
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException32.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException34);
        jacksonWrapperException28.addSuppressed((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray42 = jacksonWrapperException41.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException45.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException47);
        jacksonWrapperException41.addSuppressed((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray53 = jacksonWrapperException52.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray57 = jacksonWrapperException56.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException56);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException58);
        jacksonWrapperException52.addSuppressed((java.lang.Throwable) jacksonWrapperException58);
        jacksonWrapperException51.addSuppressed((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException34.addSuppressed((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException64);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray68 = jacksonWrapperException67.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException67);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException71 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray72 = jacksonWrapperException71.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException73 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException71);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException74 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException73);
        jacksonWrapperException67.addSuppressed((java.lang.Throwable) jacksonWrapperException73);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException76 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException67);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException77 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException76);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException79 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray80 = jacksonWrapperException79.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException81 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException79);
        jacksonWrapperException77.addSuppressed((java.lang.Throwable) jacksonWrapperException79);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException83 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException79);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException83);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement85 = gsonWrapper0.wrap((java.lang.Object) jacksonWrapperException25);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(throwableArray72);
        org.junit.Assert.assertNotNull(throwableArray80);
    }

    @Test
    public void test14592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14592");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff12.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff12.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff12.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff12.apply(jzonElement18, jzonElement19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertNotNull(wrapper17);
    }

    @Test
    public void test14593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14593");
        foodev.jsondiff.JsonDiff.Instruction instruction0 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper1 = instruction0.oper;
        instruction0.key = "~";
        instruction0.key = "";
        instruction0.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        boolean boolean8 = instruction0.isIndexed();
        org.junit.Assert.assertNull(oper1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test14594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14594");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        int int11 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        int int14 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test14595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14595");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper3);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = wrapper3.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNotNull(wrapper3);
    }

    @Test
    public void test14596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14596");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int16 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject21 = jsonDiff1.diff(jzonElement19, jzonElement20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(instruction18);
    }

    @Test
    public void test14597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14597");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = jsonDiff17.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
    }

    @Test
    public void test14598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14598");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int9 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply(jzonElement10, jzonElement11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test14599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14599");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff10.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = jsonDiff10.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper11);
    }

    @Test
    public void test14600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14600");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement17, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction16);
    }

    @Test
    public void test14601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14601");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException21.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException32.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException36.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException32.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException31.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException45.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray50 = jacksonWrapperException49.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException51);
        jacksonWrapperException45.addSuppressed((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray58 = jacksonWrapperException57.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException59);
        jacksonWrapperException51.addSuppressed((java.lang.Throwable) jacksonWrapperException59);
        jacksonWrapperException32.addSuppressed((java.lang.Throwable) jacksonWrapperException59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException63);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException63);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement66 = gsonWrapper0.wrap((java.lang.Object) jacksonWrapperException63);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray58);
    }

    @Test
    public void test14602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14602");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException2);
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray6);
    }

    @Test
    public void test14603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14603");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException23.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException36.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray37);
    }

    @Test
    public void test14604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14604");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper1);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.Visitor<?> wildcardVisitor5 = jsonDiff4.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff4.create("");
        int int9 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction12.index = '#';
        foodev.jsondiff.Oper oper15 = instruction12.oper;
        boolean boolean16 = instruction12.isIndexed();
        boolean boolean17 = instruction12.isIndexed();
        instruction12.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = jacksonWrapper0.wrap((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNull(wildcardVisitor5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + oper15 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper15.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test14605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14605");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff10.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff10.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper14);
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff15.factory;
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper16);
        foodev.jsondiff.Visitor<?> wildcardVisitor18 = jsonDiff17.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff17.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper21 = jsonDiff17.factory;
        int int23 = jsonDiff17.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff17.factory;
        int int26 = jsonDiff17.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff17.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper29 = jsonDiff17.factory;
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff(wrapper29);
        foodev.jsondiff.jsonwrap.Wrapper wrapper31 = jsonDiff30.factory;
        foodev.jsondiff.JsonDiff jsonDiff32 = new foodev.jsondiff.JsonDiff(wrapper31);
        foodev.jsondiff.Visitor<?> wildcardVisitor33 = jsonDiff32.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor34 = jsonDiff32.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction36 = jsonDiff32.create("~");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff38 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper37);
        foodev.jsondiff.jsonwrap.Wrapper wrapper39 = jsonDiff38.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction41 = jsonDiff38.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.String str42 = instruction41.key;
        int int43 = instruction41.index;
        foodev.jsondiff.Oper oper44 = instruction41.oper;
        int int45 = instruction41.index;
        boolean boolean46 = instruction41.isIndexed();
        foodev.jsondiff.Oper oper47 = instruction41.oper;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = jsonDiff10.diff((java.lang.Object) instruction36, (java.lang.Object) oper47);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNull(wildcardVisitor18);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertNotNull(wrapper21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(wrapper24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertNotNull(wrapper29);
        org.junit.Assert.assertNotNull(wrapper31);
        org.junit.Assert.assertNull(wildcardVisitor33);
        org.junit.Assert.assertNull(wildcardVisitor34);
        org.junit.Assert.assertNotNull(instruction36);
        org.junit.Assert.assertNotNull(wrapper39);
        org.junit.Assert.assertNotNull(instruction41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str42, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + oper44 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper44.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + oper47 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper47.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14606");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Oper oper12 = instruction11.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff14.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff16.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff16.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.String str21 = instruction20.key;
        int int22 = instruction20.index;
        instruction20.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        int int25 = instruction20.index;
        boolean boolean26 = instruction20.isIndexed();
        int int27 = instruction20.index;
        int int28 = instruction20.index;
        instruction20.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        instruction20.index = 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff34 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper33);
        foodev.jsondiff.jsonwrap.Wrapper wrapper35 = jsonDiff34.factory;
        foodev.jsondiff.JsonDiff jsonDiff36 = new foodev.jsondiff.JsonDiff(wrapper35);
        foodev.jsondiff.JsonDiff.Instruction instruction38 = jsonDiff36.create("");
        int int39 = instruction38.index;
        boolean boolean40 = instruction38.isIndexed();
        instruction38.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff44 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper43);
        foodev.jsondiff.jsonwrap.Wrapper wrapper45 = jsonDiff44.factory;
        foodev.jsondiff.JsonDiff jsonDiff46 = new foodev.jsondiff.JsonDiff(wrapper45);
        foodev.jsondiff.JsonDiff.Instruction instruction48 = jsonDiff46.create("");
        boolean boolean49 = instruction48.isIndexed();
        instruction48.index = (short) -1;
        foodev.jsondiff.Oper oper52 = instruction48.oper;
        instruction38.oper = oper52;
        foodev.jsondiff.JsonDiff.Instruction instruction54 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper55 = instruction54.oper;
        instruction54.key = "~";
        java.lang.String str58 = instruction54.key;
        foodev.jsondiff.JsonDiff.Instruction instruction59 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper60 = instruction59.oper;
        instruction59.index = (-1);
        java.lang.String str63 = instruction59.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff65 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper64);
        foodev.jsondiff.jsonwrap.Wrapper wrapper66 = jsonDiff65.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction68 = jsonDiff65.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction69 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction69.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper72 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff73 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper72);
        int int75 = jsonDiff73.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction77 = jsonDiff73.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper78 = instruction77.oper;
        instruction69.oper = oper78;
        instruction68.oper = oper78;
        instruction59.oper = oper78;
        instruction54.oper = oper78;
        instruction38.oper = oper78;
        int int84 = instruction38.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper85 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff86 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper85);
        foodev.jsondiff.jsonwrap.Wrapper wrapper87 = jsonDiff86.factory;
        foodev.jsondiff.JsonDiff jsonDiff88 = new foodev.jsondiff.JsonDiff(wrapper87);
        foodev.jsondiff.JsonDiff.Instruction instruction90 = jsonDiff88.create("");
        foodev.jsondiff.Oper oper91 = instruction90.oper;
        foodev.jsondiff.Oper oper92 = instruction90.oper;
        instruction38.oper = oper92;
        instruction20.oper = oper92;
        instruction11.oper = oper92;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + oper12 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper12.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str21, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(wrapper35);
        org.junit.Assert.assertNotNull(instruction38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wrapper45);
        org.junit.Assert.assertNotNull(instruction48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + oper52 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper52.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNull(oper55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "~" + "'", str58, "~");
        org.junit.Assert.assertNull(oper60);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(wrapper66);
        org.junit.Assert.assertNotNull(instruction68);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(instruction77);
        org.junit.Assert.assertTrue("'" + oper78 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper78.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 97 + "'", int84 == 97);
        org.junit.Assert.assertNotNull(wrapper87);
        org.junit.Assert.assertNotNull(instruction90);
        org.junit.Assert.assertTrue("'" + oper91 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper91.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper92 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper92.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14607");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        int int16 = jsonDiff3.isIndexed("");
        int int18 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff20.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff20.factory;
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff(wrapper23);
        int int26 = jsonDiff24.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement27 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement28 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject29 = jsonDiff24.diff(jzonElement27, jzonElement28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
    }

    @Test
    public void test14608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14608");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        int int10 = jsonDiff1.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        int int14 = jsonDiff12.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper15 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper15);
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper15);
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff18.factory;
        int int21 = jsonDiff18.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff18.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor24 = jsonDiff18.getVisitor();
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper25 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff26 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper25);
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper25);
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper25);
        foodev.jsondiff.jsonwrap.Wrapper wrapper29 = jsonDiff28.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper30 = jsonDiff28.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper31 = jsonDiff28.factory;
        foodev.jsondiff.JsonDiff jsonDiff32 = new foodev.jsondiff.JsonDiff(wrapper31);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = jsonDiff12.diff((java.lang.Object) wildcardVisitor24, (java.lang.Object) jsonDiff32);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertNull(wildcardVisitor24);
        org.junit.Assert.assertNotNull(wrapper29);
        org.junit.Assert.assertNotNull(wrapper30);
        org.junit.Assert.assertNotNull(wrapper31);
    }

    @Test
    public void test14609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14609");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        int int8 = jsonDiff6.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = jsonDiff6.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test14610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14610");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff.Instruction instruction8 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper9 = instruction8.oper;
        boolean boolean10 = instruction8.isIndexed();
        boolean boolean11 = instruction8.isIndexed();
        foodev.jsondiff.Oper oper12 = instruction8.oper;
        java.lang.String str13 = instruction8.key;
        int int14 = instruction8.index;
        instruction8.key = "hi!";
        boolean boolean17 = instruction8.isIndexed();
        boolean boolean18 = instruction8.isIndexed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = wrapper6.wrap((java.lang.Object) instruction8);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(oper9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(oper12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test14611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14611");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff2.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = jsonDiff8.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction10);
    }

    @Test
    public void test14612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14612");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper9 = instruction8.oper;
        java.lang.String str10 = instruction8.key;
        foodev.jsondiff.Oper oper11 = instruction8.oper;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + oper9 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper9.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str10, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + oper11 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper11.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14613");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int12 = jsonDiff8.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Leaf leaf13 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray14 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = jsonDiff8.accept(leaf13, jzonArray14, jzonObject15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test14614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14614");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("");
        int int12 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff1.factory;
        int int15 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.Object obj16 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        int int20 = jsonDiff18.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff18.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff18.create("");
        boolean boolean26 = instruction25.isIndexed();
        instruction25.index = (byte) 100;
        instruction25.key = "hi!";
        int int31 = instruction25.index;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = jsonDiff1.diff(obj16, (java.lang.Object) int31);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Integer cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
    }

    @Test
    public void test14615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14615");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        int int10 = jsonDiff8.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff8.factory;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
    }

    @Test
    public void test14616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14616");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.String str7 = instruction6.key;
        instruction6.index = 1;
        java.lang.String str10 = instruction6.key;
        boolean boolean11 = instruction6.isIndexed();
        instruction6.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str7, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str10, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test14617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14617");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException36.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray41 = jacksonWrapperException40.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException42);
        jacksonWrapperException36.addSuppressed((java.lang.Throwable) jacksonWrapperException42);
        jacksonWrapperException35.addSuppressed((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException36);
        jacksonWrapperException18.addSuppressed((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray50 = jacksonWrapperException49.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray54 = jacksonWrapperException53.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException55);
        jacksonWrapperException49.addSuppressed((java.lang.Throwable) jacksonWrapperException55);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException55);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException55);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray62 = jacksonWrapperException61.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException61);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException63);
        jacksonWrapperException55.addSuppressed((java.lang.Throwable) jacksonWrapperException63);
        jacksonWrapperException36.addSuppressed((java.lang.Throwable) jacksonWrapperException63);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException63);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException63);
        java.lang.Throwable throwable70 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException71 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", throwable70);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException74 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException75 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException74);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException76 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException74);
        jacksonWrapperException71.addSuppressed((java.lang.Throwable) jacksonWrapperException76);
        jacksonWrapperException63.addSuppressed((java.lang.Throwable) jacksonWrapperException76);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException79 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException76);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException80 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException76);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException76);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException82 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException76);
        java.lang.Throwable[] throwableArray83 = jacksonWrapperException76.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(throwableArray83);
    }

    @Test
    public void test14618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14618");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test14619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14619");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        int int16 = jsonDiff3.isIndexed("");
        int int18 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper19);
        int int22 = jsonDiff20.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff20.factory;
        int int25 = jsonDiff20.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff20.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper28 = jsonDiff20.factory;
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff(wrapper28);
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff(wrapper28);
        foodev.jsondiff.JsonDiff jsonDiff31 = new foodev.jsondiff.JsonDiff(wrapper28);
        foodev.jsondiff.jsonwrap.Wrapper wrapper32 = jsonDiff31.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper33 = jsonDiff31.factory;
        foodev.jsondiff.JsonDiff jsonDiff34 = new foodev.jsondiff.JsonDiff(wrapper33);
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff(wrapper33);
        java.lang.Object obj36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj37 = jsonDiff3.diff((java.lang.Object) wrapper33, obj36);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertNotNull(wrapper28);
        org.junit.Assert.assertNotNull(wrapper32);
        org.junit.Assert.assertNotNull(wrapper33);
    }

    @Test
    public void test14620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14620");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff7.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff7.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff7.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff7.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff7.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = wrapper13.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(wrapper13);
    }

    @Test
    public void test14621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14621");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff5.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff5.create("");
        instruction8.index = (short) 100;
        boolean boolean11 = instruction8.isIndexed();
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test14622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14622");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement6, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertNull(wrapper5);
    }

    @Test
    public void test14623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14623");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException30);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException35.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException39.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException41);
        jacksonWrapperException35.addSuppressed((java.lang.Throwable) jacksonWrapperException41);
        jacksonWrapperException34.addSuppressed((java.lang.Throwable) jacksonWrapperException35);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException35);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        java.lang.String str47 = jacksonWrapperException2.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str47, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test14624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14624");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff2.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper11 = instruction10.oper;
        java.lang.Class<?> wildcardClass12 = oper11.getClass();
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + oper11 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper11.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test14625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14625");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff9.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff9.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff9.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff9.create("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = jsonDiff9.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNull(wildcardVisitor15);
        org.junit.Assert.assertNotNull(instruction17);
    }

    @Test
    public void test14626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14626");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int13 = jsonDiff9.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Node node14 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        foodev.jsondiff.Leaf[] leafArray16 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList17 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList17, leafArray16);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap19 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf20 = jsonDiff9.findLeaves(node14, jzonElement15, (java.util.List<foodev.jsondiff.Leaf>) leafList17, intMap19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(leafArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test14627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14627");
        foodev.jsondiff.JsonDiff.Instruction instruction0 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper1 = instruction0.oper;
        instruction0.key = "~";
        instruction0.key = "";
        foodev.jsondiff.JsonDiff.Instruction instruction6 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction6.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        int int12 = jsonDiff10.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff10.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper15 = instruction14.oper;
        instruction6.oper = oper15;
        instruction0.oper = oper15;
        boolean boolean18 = instruction0.isIndexed();
        instruction0.index = ' ';
        int int21 = instruction0.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper22);
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff23.factory;
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff(wrapper24);
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff25.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff25.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.String str30 = instruction29.key;
        java.lang.String str31 = instruction29.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff33 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper32);
        foodev.jsondiff.jsonwrap.Wrapper wrapper34 = jsonDiff33.factory;
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff(wrapper34);
        foodev.jsondiff.Visitor<?> wildcardVisitor36 = jsonDiff35.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction38 = jsonDiff35.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper39 = jsonDiff35.factory;
        int int41 = jsonDiff35.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction43 = jsonDiff35.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor44 = jsonDiff35.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction46 = jsonDiff35.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction48 = jsonDiff35.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper49 = instruction48.oper;
        instruction29.oper = oper49;
        instruction0.oper = oper49;
        org.junit.Assert.assertNull(oper1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + oper15 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper15.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(wrapper24);
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertNotNull(instruction29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str30, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str31, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertNotNull(wrapper34);
        org.junit.Assert.assertNull(wildcardVisitor36);
        org.junit.Assert.assertNotNull(instruction38);
        org.junit.Assert.assertNotNull(wrapper39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(instruction43);
        org.junit.Assert.assertNull(wildcardVisitor44);
        org.junit.Assert.assertNotNull(instruction46);
        org.junit.Assert.assertNotNull(instruction48);
        org.junit.Assert.assertTrue("'" + oper49 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper49.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14628");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff.Instruction instruction3 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int4 = instruction3.index;
        instruction3.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        int int7 = instruction3.index;
        int int8 = instruction3.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff10.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff12.create("");
        boolean boolean15 = instruction14.isIndexed();
        instruction14.key = "~";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper18);
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff19.factory;
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff(wrapper20);
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff21.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff21.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction25.index = (short) 100;
        boolean boolean28 = instruction25.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction29 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper30 = instruction29.oper;
        instruction29.key = "~";
        int int33 = instruction29.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper34);
        int int37 = jsonDiff35.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction39 = jsonDiff35.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean40 = instruction39.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff42 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper41);
        int int44 = jsonDiff42.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction46 = jsonDiff42.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper47 = instruction46.oper;
        instruction39.oper = oper47;
        instruction29.oper = oper47;
        foodev.jsondiff.Oper oper50 = instruction29.oper;
        instruction25.oper = oper50;
        instruction14.oper = oper50;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff54 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper53);
        foodev.jsondiff.jsonwrap.Wrapper wrapper55 = jsonDiff54.factory;
        foodev.jsondiff.JsonDiff jsonDiff56 = new foodev.jsondiff.JsonDiff(wrapper55);
        foodev.jsondiff.JsonDiff.Instruction instruction58 = jsonDiff56.create("");
        instruction58.key = "hi!";
        int int61 = instruction58.index;
        int int62 = instruction58.index;
        int int63 = instruction58.index;
        foodev.jsondiff.Oper oper64 = instruction58.oper;
        instruction14.oper = oper64;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff67 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper66);
        foodev.jsondiff.jsonwrap.Wrapper wrapper68 = jsonDiff67.factory;
        foodev.jsondiff.JsonDiff jsonDiff69 = new foodev.jsondiff.JsonDiff(wrapper68);
        foodev.jsondiff.Visitor<?> wildcardVisitor70 = jsonDiff69.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction72 = jsonDiff69.create("");
        instruction72.key = "hi!";
        int int75 = instruction72.index;
        foodev.jsondiff.Oper oper76 = instruction72.oper;
        instruction14.oper = oper76;
        instruction3.oper = oper76;
        org.junit.Assert.assertNotNull(instruction3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(oper30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(instruction39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(instruction46);
        org.junit.Assert.assertTrue("'" + oper47 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper47.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper50 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper50.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper55);
        org.junit.Assert.assertNotNull(instruction58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + oper64 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper64.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper68);
        org.junit.Assert.assertNull(wildcardVisitor70);
        org.junit.Assert.assertNotNull(instruction72);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + oper76 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper76.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14629");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException30);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException35.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException39.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray44 = jacksonWrapperException43.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException45);
        jacksonWrapperException39.addSuppressed((java.lang.Throwable) jacksonWrapperException45);
        jacksonWrapperException37.addSuppressed((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException51);
        jacksonWrapperException39.addSuppressed((java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException33.addSuppressed((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException55);
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException56);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException56);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement59 = gsonWrapper0.wrap((java.lang.Object) jacksonWrapperException58);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray44);
    }

    @Test
    public void test14630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14630");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        java.lang.String str8 = jacksonWrapperException6.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str8, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test14631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14631");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff9.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff9.getVisitor();
        int int14 = jsonDiff9.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Leaf leaf15 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray16 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = jsonDiff9.accept(leaf15, jzonArray16, jzonObject17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test14632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14632");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper4 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper4);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper4);
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper4);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff11.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = gsonWrapper0.wrap((java.lang.Object) jsonDiff11);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction13);
    }

    @Test
    public void test14633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14633");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = wrapper5.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(wrapper5);
    }

    @Test
    public void test14634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14634");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.String str9 = instruction8.key;
        instruction8.key = "~";
        instruction8.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str9, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test14635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14635");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = wrapper5.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper5);
    }

    @Test
    public void test14636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14636");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement22 = wrapper20.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(wrapper20);
    }

    @Test
    public void test14637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14637");
        foodev.jsondiff.JsonDiff.Instruction instruction0 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper1 = instruction0.oper;
        instruction0.index = (-1);
        java.lang.String str4 = instruction0.key;
        instruction0.index = 32;
        instruction0.key = "~";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff10.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff10.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction13.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.JsonDiff.Instruction instruction16 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction16.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper19);
        int int22 = jsonDiff20.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff20.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper25 = instruction24.oper;
        instruction16.oper = oper25;
        instruction13.oper = oper25;
        instruction0.oper = oper25;
        instruction0.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        java.lang.String str31 = instruction0.key;
        org.junit.Assert.assertNull(oper1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertTrue("'" + oper25 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper25.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~" + "'", str31, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
    }

    @Test
    public void test14638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14638");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int6 = instruction5.index;
        boolean boolean7 = instruction5.isIndexed();
        instruction5.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("");
        boolean boolean16 = instruction15.isIndexed();
        instruction15.index = (short) -1;
        foodev.jsondiff.Oper oper19 = instruction15.oper;
        instruction5.oper = oper19;
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        instruction5.index = (byte) 1;
        boolean boolean25 = instruction5.isIndexed();
        instruction5.index = (byte) 0;
        java.lang.Class<?> wildcardClass28 = instruction5.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + oper19 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper19.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test14639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14639");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff1.getVisitor();
        int int14 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff1.getVisitor();
        int int17 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject20 = jsonDiff1.diff(jzonElement18, jzonElement19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test14640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14640");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException13);
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        java.lang.String str25 = jacksonWrapperException23.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str25, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test14641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14641");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int13 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int19 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Leaf leaf20 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray21 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject22 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = jsonDiff3.accept(leaf20, jzonArray21, jzonObject22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test14642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14642");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        int int13 = jsonDiff11.isIndexed("hi!");
        int int15 = jsonDiff11.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff11.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor17 = jsonDiff11.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff11.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor19 = jsonDiff11.getVisitor();
        int int21 = jsonDiff11.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper24);
        foodev.jsondiff.jsonwrap.Wrapper wrapper26 = jsonDiff25.factory;
        int int28 = jsonDiff25.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper29 = jsonDiff25.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction31 = jsonDiff25.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper32 = jsonDiff25.factory;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) wrapper22, (java.lang.Object) wrapper32);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNull(wildcardVisitor17);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNull(wildcardVisitor19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNotNull(wrapper26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(wrapper29);
        org.junit.Assert.assertNotNull(instruction31);
        org.junit.Assert.assertNotNull(wrapper32);
    }

    @Test
    public void test14643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14643");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        foodev.jsondiff.Oper oper12 = instruction11.oper;
        java.lang.Class<?> wildcardClass13 = oper12.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + oper12 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper12.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test14644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14644");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff10.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff10.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int16 = jsonDiff10.isIndexed("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor17 = jsonDiff10.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor18 = jsonDiff10.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff10.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.String str21 = instruction20.key;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement22 = gsonWrapper0.wrap((java.lang.Object) str21);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor17);
        org.junit.Assert.assertNull(wildcardVisitor18);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str21, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test14645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14645");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        instruction6.key = "hi!";
        int int9 = instruction6.index;
        foodev.jsondiff.Oper oper10 = instruction6.oper;
        java.lang.String str11 = instruction6.key;
        instruction6.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        boolean boolean14 = instruction6.isIndexed();
        java.lang.String str15 = instruction6.key;
        int int16 = instruction6.index;
        java.lang.String str17 = instruction6.key;
        int int18 = instruction6.index;
        int int19 = instruction6.index;
        foodev.jsondiff.Oper oper20 = instruction6.oper;
        instruction6.key = "";
        instruction6.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff26 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper25);
        int int28 = jsonDiff26.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor29 = jsonDiff26.getVisitor();
        int int31 = jsonDiff26.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper32 = jsonDiff26.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction34 = jsonDiff26.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper35 = jsonDiff26.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction37 = jsonDiff26.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int38 = instruction37.index;
        instruction37.index = (short) 0;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff42 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper41);
        foodev.jsondiff.jsonwrap.Wrapper wrapper43 = jsonDiff42.factory;
        foodev.jsondiff.JsonDiff jsonDiff44 = new foodev.jsondiff.JsonDiff(wrapper43);
        foodev.jsondiff.JsonDiff.Instruction instruction46 = jsonDiff44.create("");
        int int48 = jsonDiff44.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction50 = jsonDiff44.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        boolean boolean51 = instruction50.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction52 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction52.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff56 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper55);
        int int58 = jsonDiff56.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction60 = jsonDiff56.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper61 = instruction60.oper;
        instruction52.oper = oper61;
        boolean boolean63 = instruction52.isIndexed();
        foodev.jsondiff.Oper oper64 = instruction52.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff66 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper65);
        foodev.jsondiff.jsonwrap.Wrapper wrapper67 = jsonDiff66.factory;
        foodev.jsondiff.JsonDiff jsonDiff68 = new foodev.jsondiff.JsonDiff(wrapper67);
        foodev.jsondiff.Visitor<?> wildcardVisitor69 = jsonDiff68.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction71 = jsonDiff68.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper72 = jsonDiff68.factory;
        int int74 = jsonDiff68.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction76 = jsonDiff68.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor77 = jsonDiff68.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction79 = jsonDiff68.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction81 = jsonDiff68.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper82 = instruction81.oper;
        instruction52.oper = oper82;
        instruction50.oper = oper82;
        instruction37.oper = oper82;
        instruction6.oper = oper82;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + oper10 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper10.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str15, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str17, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + oper20 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper20.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(wrapper32);
        org.junit.Assert.assertNotNull(instruction34);
        org.junit.Assert.assertNotNull(wrapper35);
        org.junit.Assert.assertNotNull(instruction37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(wrapper43);
        org.junit.Assert.assertNotNull(instruction46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(instruction50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(instruction60);
        org.junit.Assert.assertTrue("'" + oper61 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper61.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + oper64 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper64.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper67);
        org.junit.Assert.assertNull(wildcardVisitor69);
        org.junit.Assert.assertNotNull(instruction71);
        org.junit.Assert.assertNotNull(wrapper72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(instruction76);
        org.junit.Assert.assertNull(wildcardVisitor77);
        org.junit.Assert.assertNotNull(instruction79);
        org.junit.Assert.assertNotNull(instruction81);
        org.junit.Assert.assertTrue("'" + oper82 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper82.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14646");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = wrapper13.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(wrapper13);
    }

    @Test
    public void test14647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14647");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff9.create("");
        int int13 = jsonDiff9.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff9.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor20 = jsonDiff9.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff9.create("");
        java.lang.String str23 = instruction22.key;
        foodev.jsondiff.Oper oper24 = instruction22.oper;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement25 = gsonWrapper0.wrap((java.lang.Object) oper24);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertNull(wildcardVisitor20);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + oper24 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper24.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14648");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff7.create("");
        java.lang.Class<?> wildcardClass11 = jsonDiff7.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test14649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14649");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean9 = instruction8.isIndexed();
        boolean boolean10 = instruction8.isIndexed();
        foodev.jsondiff.Oper oper11 = instruction8.oper;
        int int12 = instruction8.index;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + oper11 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper11.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test14650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14650");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.String str5 = instruction4.key;
        int int6 = instruction4.index;
        foodev.jsondiff.Oper oper7 = instruction4.oper;
        int int8 = instruction4.index;
        instruction4.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str5, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + oper7 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper7.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test14651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14651");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("");
        foodev.jsondiff.Oper oper11 = instruction10.oper;
        java.lang.Class<?> wildcardClass12 = instruction10.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + oper11 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper11.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test14652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14652");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int10 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException23.getSuppressed();
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement30 = wrapper11.wrap((java.lang.Object) jacksonWrapperException15);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray27);
    }

    @Test
    public void test14653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14653");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff7.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff7.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff7.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff7.getVisitor();
        int int14 = jsonDiff7.isIndexed("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = jsonDiff7.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test14654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14654");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException2);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
    }

    @Test
    public void test14655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14655");
        foodev.jsondiff.JsonDiff.Instruction instruction0 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper1 = instruction0.oper;
        instruction0.key = "~";
        java.lang.String str4 = instruction0.key;
        foodev.jsondiff.JsonDiff.Instruction instruction5 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper6 = instruction5.oper;
        instruction5.index = (-1);
        java.lang.String str9 = instruction5.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff11.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction15.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper18);
        int int21 = jsonDiff19.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff19.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper24 = instruction23.oper;
        instruction15.oper = oper24;
        instruction14.oper = oper24;
        instruction5.oper = oper24;
        instruction0.oper = oper24;
        instruction0.index = (-1);
        java.lang.String str31 = instruction0.key;
        boolean boolean32 = instruction0.isIndexed();
        org.junit.Assert.assertNull(oper1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "~" + "'", str4, "~");
        org.junit.Assert.assertNull(oper6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertTrue("'" + oper24 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper24.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "~" + "'", str31, "~");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test14656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14656");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        int int12 = jsonDiff10.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int14 = jsonDiff10.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = jsonDiff10.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test14657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14657");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff9.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff9.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff9.apply(jzonElement16, jzonElement17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNull(wildcardVisitor15);
    }

    @Test
    public void test14658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14658");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException6);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException21.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException32.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray41 = jacksonWrapperException40.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray45 = jacksonWrapperException44.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException46);
        jacksonWrapperException40.addSuppressed((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException40);
        jacksonWrapperException38.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException32.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray57 = jacksonWrapperException56.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException56);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException58);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray61 = jacksonWrapperException60.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException60);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray65 = jacksonWrapperException64.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException64);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException66);
        jacksonWrapperException60.addSuppressed((java.lang.Throwable) jacksonWrapperException66);
        jacksonWrapperException58.addSuppressed((java.lang.Throwable) jacksonWrapperException60);
        java.lang.Throwable[] throwableArray70 = jacksonWrapperException60.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException73 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException74 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException73);
        jacksonWrapperException60.addSuppressed((java.lang.Throwable) jacksonWrapperException73);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException76 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException60);
        jacksonWrapperException54.addSuppressed((java.lang.Throwable) jacksonWrapperException76);
        jacksonWrapperException30.addSuppressed((java.lang.Throwable) jacksonWrapperException54);
        jacksonWrapperException19.addSuppressed((java.lang.Throwable) jacksonWrapperException54);
        java.lang.String str80 = jacksonWrapperException19.toString();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str80, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test14659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14659");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff15.checkIndex(jzonElement16, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper13);
    }

    @Test
    public void test14660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14660");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        int int12 = jsonDiff1.isIndexed("");
        java.lang.Class<?> wildcardClass13 = jsonDiff1.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test14661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14661");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int12 = jsonDiff8.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        int int16 = jsonDiff14.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = jsonDiff14.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test14662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14662");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int13 = instruction12.index;
        instruction12.index = (short) 0;
        instruction12.key = "";
        boolean boolean18 = instruction12.isIndexed();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test14663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14663");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException22);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement27 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException9);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray19);
    }

    @Test
    public void test14664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14664");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = gsonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
    }

    @Test
    public void test14665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14665");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.Visitor<?> wildcardVisitor5 = jsonDiff4.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff4.factory;
        foodev.jsondiff.Leaf leaf7 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray8 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = jsonDiff4.accept(leaf7, jzonArray8, jzonObject9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNull(wildcardVisitor5);
        org.junit.Assert.assertNotNull(wrapper6);
    }

    @Test
    public void test14666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14666");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction9);
    }

    @Test
    public void test14667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14667");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException10);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException21.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException19.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException34);
        jacksonWrapperException21.addSuppressed((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException37);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException37);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement40 = gsonWrapper0.wrap((java.lang.Object) jacksonWrapperException37);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray31);
    }

    @Test
    public void test14668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14668");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException34.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray42 = jacksonWrapperException41.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException43);
        jacksonWrapperException37.addSuppressed((java.lang.Throwable) jacksonWrapperException43);
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray49 = jacksonWrapperException48.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray53 = jacksonWrapperException52.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException54);
        jacksonWrapperException48.addSuppressed((java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException54);
        java.lang.Throwable[] throwableArray58 = jacksonWrapperException54.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException61);
        jacksonWrapperException54.addSuppressed((java.lang.Throwable) jacksonWrapperException62);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException62);
        jacksonWrapperException37.addSuppressed((java.lang.Throwable) jacksonWrapperException64);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        jacksonWrapperException34.addSuppressed((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        java.lang.Throwable[] throwableArray69 = jacksonWrapperException68.getSuppressed();
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException68);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException71 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException68);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray69);
    }

    @Test
    public void test14669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14669");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException30);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException30.addSuppressed((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException36);
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException37);
        java.lang.Class<?> wildcardClass39 = jacksonWrapperException37.getClass();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test14670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14670");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement5 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff4.apply(jzonElement5, jzonElement6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper3);
    }

    @Test
    public void test14671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14671");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException32.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException34);
        jacksonWrapperException28.addSuppressed((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException39);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException39);
        jacksonWrapperException21.addSuppressed((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException21);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray33);
    }

    @Test
    public void test14672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14672");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        int int8 = instruction5.index;
        instruction5.index = 0;
        boolean boolean11 = instruction5.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff15.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor18 = jsonDiff15.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff15.create("hi!");
        instruction20.index = '4';
        foodev.jsondiff.Oper oper23 = instruction20.oper;
        instruction5.oper = oper23;
        java.lang.String str25 = instruction5.key;
        java.lang.String str26 = instruction5.key;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNull(wildcardVisitor18);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertTrue("'" + oper23 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper23.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str25, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str26, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test14673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14673");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff9.create("");
        int int13 = jsonDiff9.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff9.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper17 = instruction16.oper;
        instruction16.index = (-1);
        instruction16.index = (byte) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper22);
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff23.factory;
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff(wrapper24);
        foodev.jsondiff.Visitor<?> wildcardVisitor26 = jsonDiff25.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff25.create("");
        instruction28.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper31 = instruction28.oper;
        instruction16.oper = oper31;
        instruction15.oper = oper31;
        instruction5.oper = oper31;
        int int35 = instruction5.index;
        instruction5.index = 97;
        foodev.jsondiff.Oper oper38 = instruction5.oper;
        boolean boolean39 = instruction5.isIndexed();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNull(oper17);
        org.junit.Assert.assertNotNull(wrapper24);
        org.junit.Assert.assertNull(wildcardVisitor26);
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertTrue("'" + oper31 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper31.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + oper38 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper38.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test14674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14674");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean6 = instruction5.isIndexed();
        foodev.jsondiff.Oper oper7 = null;
        instruction5.oper = oper7;
        foodev.jsondiff.Oper oper9 = instruction5.oper;
        instruction5.key = "~";
        java.lang.String str12 = instruction5.key;
        boolean boolean13 = instruction5.isIndexed();
        boolean boolean14 = instruction5.isIndexed();
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        java.lang.String str17 = instruction5.key;
        instruction5.index = (-1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper20);
        int int23 = jsonDiff21.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff21.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean26 = instruction25.isIndexed();
        foodev.jsondiff.Oper oper27 = null;
        instruction25.oper = oper27;
        instruction25.index = ' ';
        java.lang.String str31 = instruction25.key;
        instruction25.index = 0;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper34);
        int int37 = jsonDiff35.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor38 = jsonDiff35.getVisitor();
        int int40 = jsonDiff35.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper41 = jsonDiff35.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction43 = jsonDiff35.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff45 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper44);
        foodev.jsondiff.jsonwrap.Wrapper wrapper46 = jsonDiff45.factory;
        foodev.jsondiff.JsonDiff jsonDiff47 = new foodev.jsondiff.JsonDiff(wrapper46);
        foodev.jsondiff.JsonDiff.Instruction instruction49 = jsonDiff47.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction51 = jsonDiff47.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction51.index = (short) 100;
        boolean boolean54 = instruction51.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction55 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper56 = instruction55.oper;
        instruction55.key = "~";
        int int59 = instruction55.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff61 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper60);
        int int63 = jsonDiff61.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction65 = jsonDiff61.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean66 = instruction65.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff68 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper67);
        int int70 = jsonDiff68.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction72 = jsonDiff68.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper73 = instruction72.oper;
        instruction65.oper = oper73;
        instruction55.oper = oper73;
        foodev.jsondiff.Oper oper76 = instruction55.oper;
        instruction51.oper = oper76;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper78 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff79 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper78);
        foodev.jsondiff.jsonwrap.Wrapper wrapper80 = jsonDiff79.factory;
        foodev.jsondiff.JsonDiff jsonDiff81 = new foodev.jsondiff.JsonDiff(wrapper80);
        foodev.jsondiff.Visitor<?> wildcardVisitor82 = jsonDiff81.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction84 = jsonDiff81.create("");
        instruction84.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper87 = instruction84.oper;
        instruction51.oper = oper87;
        foodev.jsondiff.Oper oper89 = instruction51.oper;
        foodev.jsondiff.Oper oper90 = instruction51.oper;
        java.lang.String str91 = instruction51.key;
        foodev.jsondiff.Oper oper92 = instruction51.oper;
        foodev.jsondiff.Oper oper93 = instruction51.oper;
        instruction43.oper = oper93;
        instruction25.oper = oper93;
        instruction5.oper = oper93;
        int int97 = instruction5.index;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(oper9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "~" + "'", str12, "~");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str17, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str31, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(wrapper41);
        org.junit.Assert.assertNotNull(instruction43);
        org.junit.Assert.assertNotNull(wrapper46);
        org.junit.Assert.assertNotNull(instruction49);
        org.junit.Assert.assertNotNull(instruction51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(oper56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(instruction65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(instruction72);
        org.junit.Assert.assertTrue("'" + oper73 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper73.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper76 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper76.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper80);
        org.junit.Assert.assertNull(wildcardVisitor82);
        org.junit.Assert.assertNotNull(instruction84);
        org.junit.Assert.assertTrue("'" + oper87 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper87.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper89 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper89.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper90 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper90.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str91, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + oper92 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper92.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper93 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper93.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
    }

    @Test
    public void test14675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14675");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException23.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException36.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray41 = jacksonWrapperException40.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException42);
        jacksonWrapperException36.addSuppressed((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray48 = jacksonWrapperException47.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray52 = jacksonWrapperException51.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException53);
        jacksonWrapperException47.addSuppressed((java.lang.Throwable) jacksonWrapperException53);
        jacksonWrapperException46.addSuppressed((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException47);
        jacksonWrapperException29.addSuppressed((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException47);
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException59);
        java.lang.Throwable[] throwableArray61 = jacksonWrapperException59.getSuppressed();
        java.lang.Class<?> wildcardClass62 = jacksonWrapperException59.getClass();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement63 = gsonWrapper0.wrap((java.lang.Object) wildcardClass62);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Class cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test14676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14676");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException31.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException33);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException19.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff46 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper45);
        foodev.jsondiff.jsonwrap.Wrapper wrapper47 = jsonDiff46.factory;
        foodev.jsondiff.JsonDiff jsonDiff48 = new foodev.jsondiff.JsonDiff(wrapper47);
        foodev.jsondiff.Visitor<?> wildcardVisitor49 = jsonDiff48.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction51 = jsonDiff48.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper52 = jsonDiff48.factory;
        int int54 = jsonDiff48.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction56 = jsonDiff48.create("hi!");
        java.lang.String str57 = instruction56.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff59 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper58);
        foodev.jsondiff.jsonwrap.Wrapper wrapper60 = jsonDiff59.factory;
        foodev.jsondiff.JsonDiff jsonDiff61 = new foodev.jsondiff.JsonDiff(wrapper60);
        foodev.jsondiff.JsonDiff.Instruction instruction63 = jsonDiff61.create("");
        int int64 = instruction63.index;
        boolean boolean65 = instruction63.isIndexed();
        instruction63.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff69 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper68);
        foodev.jsondiff.jsonwrap.Wrapper wrapper70 = jsonDiff69.factory;
        foodev.jsondiff.JsonDiff jsonDiff71 = new foodev.jsondiff.JsonDiff(wrapper70);
        foodev.jsondiff.JsonDiff.Instruction instruction73 = jsonDiff71.create("");
        boolean boolean74 = instruction73.isIndexed();
        instruction73.index = (short) -1;
        foodev.jsondiff.Oper oper77 = instruction73.oper;
        instruction63.oper = oper77;
        instruction56.oper = oper77;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj80 = jsonDiff3.diff((java.lang.Object) jacksonWrapperException44, (java.lang.Object) oper77);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(wrapper47);
        org.junit.Assert.assertNull(wildcardVisitor49);
        org.junit.Assert.assertNotNull(instruction51);
        org.junit.Assert.assertNotNull(wrapper52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(instruction56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(wrapper60);
        org.junit.Assert.assertNotNull(instruction63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wrapper70);
        org.junit.Assert.assertNotNull(instruction73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + oper77 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper77.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14677");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement14, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(instruction13);
    }

    @Test
    public void test14678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14678");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff3.create("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertNotNull(instruction18);
    }

    @Test
    public void test14679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14679");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = wrapper10.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test14680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14680");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff14.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff14.create("");
        instruction17.key = "hi!";
        int int20 = instruction17.index;
        foodev.jsondiff.Oper oper21 = instruction17.oper;
        java.lang.String str22 = instruction17.key;
        instruction17.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction17.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        foodev.jsondiff.jsonwrap.JzonElement jzonElement27 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff9.applyPartial(jzonElement10, instruction17, jzonElement27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNull(wildcardVisitor15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + oper21 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper21.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
    }

    @Test
    public void test14681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14681");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff9.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff9.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject21 = jsonDiff18.diff(jzonElement19, jzonElement20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper17);
    }

    @Test
    public void test14682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14682");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int10 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Node node11 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.Leaf[] leafArray13 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList14 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList14, leafArray13);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap16 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf17 = jsonDiff1.findLeaves(node11, jzonElement12, (java.util.List<foodev.jsondiff.Leaf>) leafList14, intMap16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(leafArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test14683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14683");
        foodev.jsondiff.JsonDiff.Instruction instruction0 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper1 = instruction0.oper;
        instruction0.key = "~";
        instruction0.key = "";
        foodev.jsondiff.JsonDiff.Instruction instruction6 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction6.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        int int12 = jsonDiff10.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff10.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper15 = instruction14.oper;
        instruction6.oper = oper15;
        instruction0.oper = oper15;
        instruction0.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        instruction0.index = (byte) 0;
        instruction0.index = 0;
        foodev.jsondiff.JsonDiff.Instruction instruction24 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper25 = instruction24.oper;
        instruction24.key = "~";
        java.lang.String str28 = instruction24.key;
        instruction24.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction24.index = (byte) 1;
        boolean boolean33 = instruction24.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper34);
        foodev.jsondiff.jsonwrap.Wrapper wrapper36 = jsonDiff35.factory;
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff(wrapper36);
        foodev.jsondiff.JsonDiff.Instruction instruction39 = jsonDiff37.create("");
        int int41 = jsonDiff37.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction43 = jsonDiff37.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int45 = jsonDiff37.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper46 = jsonDiff37.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction48 = jsonDiff37.create("");
        foodev.jsondiff.Oper oper49 = instruction48.oper;
        instruction24.oper = oper49;
        foodev.jsondiff.Oper oper51 = instruction24.oper;
        instruction0.oper = oper51;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff54 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper53);
        foodev.jsondiff.jsonwrap.Wrapper wrapper55 = jsonDiff54.factory;
        foodev.jsondiff.JsonDiff jsonDiff56 = new foodev.jsondiff.JsonDiff(wrapper55);
        foodev.jsondiff.JsonDiff.Instruction instruction58 = jsonDiff56.create("");
        int int60 = jsonDiff56.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction62 = jsonDiff56.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction64 = jsonDiff56.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction66 = jsonDiff56.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor67 = jsonDiff56.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper68 = jsonDiff56.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction70 = jsonDiff56.create("~");
        foodev.jsondiff.JsonDiff.Instruction instruction72 = jsonDiff56.create("");
        foodev.jsondiff.Oper oper73 = instruction72.oper;
        instruction0.oper = oper73;
        java.lang.String str75 = instruction0.key;
        org.junit.Assert.assertNull(oper1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + oper15 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper15.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNull(oper25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "~" + "'", str28, "~");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wrapper36);
        org.junit.Assert.assertNotNull(instruction39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(instruction43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(wrapper46);
        org.junit.Assert.assertNotNull(instruction48);
        org.junit.Assert.assertTrue("'" + oper49 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper49.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper51 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper51.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper55);
        org.junit.Assert.assertNotNull(instruction58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(instruction62);
        org.junit.Assert.assertNotNull(instruction64);
        org.junit.Assert.assertNotNull(instruction66);
        org.junit.Assert.assertNull(wildcardVisitor67);
        org.junit.Assert.assertNotNull(wrapper68);
        org.junit.Assert.assertNotNull(instruction70);
        org.junit.Assert.assertNotNull(instruction72);
        org.junit.Assert.assertTrue("'" + oper73 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper73.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str75, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test14684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14684");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper4);
        int int7 = jsonDiff5.isIndexed("hi!");
        int int9 = jsonDiff5.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff5.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff5.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        instruction14.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = jacksonWrapper0.wrap((java.lang.Object) instruction14);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
    }

    @Test
    public void test14685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14685");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray41 = jacksonWrapperException40.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray45 = jacksonWrapperException44.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray49 = jacksonWrapperException48.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException50);
        jacksonWrapperException44.addSuppressed((java.lang.Throwable) jacksonWrapperException50);
        jacksonWrapperException42.addSuppressed((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException42);
        jacksonWrapperException36.addSuppressed((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException59);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException60);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException2);
        java.lang.String str63 = jacksonWrapperException2.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str63, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test14686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14686");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        int int10 = jsonDiff1.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        foodev.jsondiff.JsonDiff.Instruction instruction16 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper17 = instruction16.oper;
        instruction16.key = "~";
        instruction16.key = "";
        foodev.jsondiff.Oper oper22 = instruction16.oper;
        boolean boolean23 = instruction16.isIndexed();
        java.lang.String str24 = instruction16.key;
        instruction16.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction16.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        int int29 = instruction16.index;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement30 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement15, instruction16, jzonElement30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNull(oper17);
        org.junit.Assert.assertNull(oper22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test14687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14687");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int10 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.Visitor<?> wildcardVisitor21 = jsonDiff20.getVisitor();
        int int23 = jsonDiff20.isIndexed("~");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException34.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray42 = jacksonWrapperException41.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException43);
        jacksonWrapperException37.addSuppressed((java.lang.Throwable) jacksonWrapperException43);
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray49 = jacksonWrapperException48.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray53 = jacksonWrapperException52.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException54);
        jacksonWrapperException48.addSuppressed((java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException54);
        java.lang.Throwable[] throwableArray58 = jacksonWrapperException54.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException61);
        jacksonWrapperException54.addSuppressed((java.lang.Throwable) jacksonWrapperException62);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException62);
        jacksonWrapperException37.addSuppressed((java.lang.Throwable) jacksonWrapperException64);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        jacksonWrapperException34.addSuppressed((java.lang.Throwable) jacksonWrapperException37);
        java.lang.Throwable[] throwableArray68 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        java.lang.Throwable[] throwableArray70 = jacksonWrapperException69.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff16.apply((java.lang.Object) "~", (java.lang.Object) throwableArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNull(wildcardVisitor21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(throwableArray70);
    }

    @Test
    public void test14688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14688");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        int int10 = jsonDiff1.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff13.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff20.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff20.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction24.index = (short) 100;
        boolean boolean27 = instruction24.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper28);
        foodev.jsondiff.jsonwrap.Wrapper wrapper30 = jsonDiff29.factory;
        foodev.jsondiff.JsonDiff jsonDiff31 = new foodev.jsondiff.JsonDiff(wrapper30);
        foodev.jsondiff.JsonDiff.Instruction instruction33 = jsonDiff31.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction33.key = "hi!";
        foodev.jsondiff.Oper oper36 = instruction33.oper;
        instruction24.oper = oper36;
        foodev.jsondiff.Oper oper38 = instruction24.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException45.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray50 = jacksonWrapperException49.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException51);
        jacksonWrapperException45.addSuppressed((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray58 = jacksonWrapperException57.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException59);
        jacksonWrapperException51.addSuppressed((java.lang.Throwable) jacksonWrapperException59);
        jacksonWrapperException42.addSuppressed((java.lang.Throwable) jacksonWrapperException59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray67 = jacksonWrapperException66.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException66);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray71 = jacksonWrapperException70.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException72 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException70);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException73 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException72);
        jacksonWrapperException66.addSuppressed((java.lang.Throwable) jacksonWrapperException72);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException75 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException72);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException76 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException75);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException77 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException76);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException78 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException76);
        java.lang.Throwable[] throwableArray79 = jacksonWrapperException76.getSuppressed();
        jacksonWrapperException59.addSuppressed((java.lang.Throwable) jacksonWrapperException76);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException81 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException76);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException82 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException81);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj83 = jsonDiff13.diff((java.lang.Object) instruction24, (java.lang.Object) jacksonWrapperException81);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wrapper30);
        org.junit.Assert.assertNotNull(instruction33);
        org.junit.Assert.assertTrue("'" + oper36 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper36.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper38 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper38.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertNotNull(throwableArray79);
    }

    @Test
    public void test14689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14689");
        foodev.jsondiff.JsonDiff.Instruction instruction0 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper1 = instruction0.oper;
        instruction0.key = "~";
        int int4 = instruction0.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper5);
        int int8 = jsonDiff6.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff6.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean11 = instruction10.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        int int15 = jsonDiff13.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper18 = instruction17.oper;
        instruction10.oper = oper18;
        instruction0.oper = oper18;
        foodev.jsondiff.Oper oper21 = instruction0.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper22);
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff23.factory;
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff(wrapper24);
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff25.create("");
        boolean boolean28 = instruction27.isIndexed();
        instruction27.index = (short) -1;
        int int31 = instruction27.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff33 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper32);
        int int35 = jsonDiff33.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction37 = jsonDiff33.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper38 = jsonDiff33.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction40 = jsonDiff33.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction41 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper42 = instruction41.oper;
        instruction41.index = (-1);
        java.lang.String str45 = instruction41.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff47 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper46);
        foodev.jsondiff.jsonwrap.Wrapper wrapper48 = jsonDiff47.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction50 = jsonDiff47.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction51 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction51.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff55 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper54);
        int int57 = jsonDiff55.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction59 = jsonDiff55.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper60 = instruction59.oper;
        instruction51.oper = oper60;
        instruction50.oper = oper60;
        instruction41.oper = oper60;
        instruction40.oper = oper60;
        instruction27.oper = oper60;
        instruction0.oper = oper60;
        boolean boolean67 = instruction0.isIndexed();
        int int68 = instruction0.index;
        instruction0.index = 10;
        foodev.jsondiff.Oper oper71 = instruction0.oper;
        foodev.jsondiff.Oper oper72 = instruction0.oper;
        java.lang.String str73 = instruction0.key;
        int int74 = instruction0.index;
        org.junit.Assert.assertNull(oper1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + oper18 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper18.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper21 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper21.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper24);
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(instruction37);
        org.junit.Assert.assertNotNull(wrapper38);
        org.junit.Assert.assertNotNull(instruction40);
        org.junit.Assert.assertNull(oper42);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(wrapper48);
        org.junit.Assert.assertNotNull(instruction50);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(instruction59);
        org.junit.Assert.assertTrue("'" + oper60 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper60.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + oper71 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper71.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper72 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper72.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "~" + "'", str73, "~");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 10 + "'", int74 == 10);
    }

    @Test
    public void test14690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14690");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff1.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = wrapper5.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertNotNull(wrapper5);
    }

    @Test
    public void test14691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14691");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException28);
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        java.lang.Throwable[] throwableArray35 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray55 = jacksonWrapperException54.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException56);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray59 = jacksonWrapperException58.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException58);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray63 = jacksonWrapperException62.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException62);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException64);
        jacksonWrapperException58.addSuppressed((java.lang.Throwable) jacksonWrapperException64);
        jacksonWrapperException56.addSuppressed((java.lang.Throwable) jacksonWrapperException58);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException56);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException56);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException56);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException71 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException56);
        jacksonWrapperException50.addSuppressed((java.lang.Throwable) jacksonWrapperException71);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException73 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException74 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException73);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException74);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException76 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException16);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement77 = wrapper12.wrap((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(throwableArray63);
    }

    @Test
    public void test14692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14692");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff5.getVisitor();
        foodev.jsondiff.Leaf leaf9 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray10 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = jsonDiff5.accept(leaf9, jzonArray10, jzonObject11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNull(wildcardVisitor8);
    }

    @Test
    public void test14693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14693");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int11 = instruction10.index;
        boolean boolean12 = instruction10.isIndexed();
        int int13 = instruction10.index;
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test14694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14694");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement17, jzonElement18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(instruction16);
    }

    @Test
    public void test14695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14695");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        int int15 = jsonDiff13.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff13.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff13.checkIndex(jzonElement17, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(wrapper16);
    }

    @Test
    public void test14696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14696");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor5 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = jsonDiff1.apply("", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertNull(wildcardVisitor5);
        org.junit.Assert.assertNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test14697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14697");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int7 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        instruction9.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
    }

    @Test
    public void test14698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14698");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff9.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff9.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff9.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff9.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = jsonDiff9.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNull(wildcardVisitor13);
    }

    @Test
    public void test14699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14699");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException24);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException31.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException35.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException37);
        jacksonWrapperException31.addSuppressed((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException41);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException47);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement49 = wrapper7.wrap((java.lang.Object) jacksonWrapperException48);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray36);
    }

    @Test
    public void test14700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14700");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int12 = jsonDiff1.isIndexed("");
        int int14 = jsonDiff1.isIndexed("");
        int int16 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor17 = jsonDiff1.getVisitor();
        int int19 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Node node20 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement21 = null;
        foodev.jsondiff.Leaf[] leafArray22 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList23 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList23, leafArray22);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap25 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf26 = jsonDiff1.findLeaves(node20, jzonElement21, (java.util.List<foodev.jsondiff.Leaf>) leafList23, intMap25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(leafArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test14701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14701");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        int int14 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement27 = wrapper15.wrap((java.lang.Object) throwableArray26);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: [Ljava.lang.Throwable; cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(throwableArray26);
    }

    @Test
    public void test14702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14702");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor5 = jsonDiff1.getVisitor();
        foodev.jsondiff.Leaf leaf6 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray7 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = jsonDiff1.accept(leaf6, jzonArray7, jzonObject8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNull(wildcardVisitor5);
    }

    @Test
    public void test14703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14703");
        foodev.jsondiff.JsonDiff.Instruction instruction0 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper1 = instruction0.oper;
        foodev.jsondiff.Oper oper2 = instruction0.oper;
        boolean boolean3 = instruction0.isIndexed();
        boolean boolean4 = instruction0.isIndexed();
        org.junit.Assert.assertNull(oper1);
        org.junit.Assert.assertNull(oper2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test14704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14704");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor10);
    }

    @Test
    public void test14705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14705");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException5);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException5);
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException26);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException19.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray37);
    }

    @Test
    public void test14706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14706");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper5);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = wrapper5.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper5);
    }

    @Test
    public void test14707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14707");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        int int12 = jsonDiff10.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int14 = jsonDiff10.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff10.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff10.factory;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor15);
        org.junit.Assert.assertNotNull(wrapper16);
    }

    @Test
    public void test14708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14708");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff19.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper21 = jsonDiff19.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff19.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Visitor<?> wildcardVisitor24 = jsonDiff19.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor25 = jsonDiff19.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor26 = jsonDiff19.getVisitor();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNotNull(wrapper21);
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertNull(wildcardVisitor24);
        org.junit.Assert.assertNull(wildcardVisitor25);
        org.junit.Assert.assertNull(wildcardVisitor26);
    }

    @Test
    public void test14709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14709");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper13);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper13);
    }

    @Test
    public void test14710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14710");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper20);
        int int23 = jsonDiff21.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff21.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean26 = instruction25.isIndexed();
        foodev.jsondiff.Oper oper27 = null;
        instruction25.oper = oper27;
        instruction25.index = ' ';
        foodev.jsondiff.Oper oper31 = instruction25.oper;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement32 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement19, instruction25, jzonElement32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(oper31);
    }

    @Test
    public void test14711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14711");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper1);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff4.create("");
        boolean boolean7 = instruction6.isIndexed();
        instruction6.index = (short) -1;
        instruction6.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        boolean boolean12 = instruction6.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff14.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.Visitor<?> wildcardVisitor17 = jsonDiff16.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff16.create("");
        instruction19.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper22 = instruction19.oper;
        instruction19.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff26 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper25);
        foodev.jsondiff.jsonwrap.Wrapper wrapper27 = jsonDiff26.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff26.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction30 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction30.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff34 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper33);
        int int36 = jsonDiff34.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction38 = jsonDiff34.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper39 = instruction38.oper;
        instruction30.oper = oper39;
        instruction29.oper = oper39;
        instruction19.oper = oper39;
        instruction6.oper = oper39;
        instruction6.index = 0;
        instruction6.index = 97;
        foodev.jsondiff.Oper oper48 = instruction6.oper;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement49 = jacksonWrapper0.wrap((java.lang.Object) oper48);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNull(wildcardVisitor17);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertTrue("'" + oper22 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper22.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper27);
        org.junit.Assert.assertNotNull(instruction29);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(instruction38);
        org.junit.Assert.assertTrue("'" + oper39 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper39.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper48 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper48.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14712");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        instruction6.key = "";
        foodev.jsondiff.Oper oper9 = instruction6.oper;
        int int10 = instruction6.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff14.create("");
        int int17 = instruction16.index;
        boolean boolean18 = instruction16.isIndexed();
        instruction16.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper21);
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff22.factory;
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff(wrapper23);
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff24.create("");
        boolean boolean27 = instruction26.isIndexed();
        instruction26.index = (short) -1;
        foodev.jsondiff.Oper oper30 = instruction26.oper;
        instruction16.oper = oper30;
        instruction16.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        instruction16.index = (byte) 1;
        foodev.jsondiff.JsonDiff.Instruction instruction36 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction36.key = "";
        instruction36.index = 'a';
        instruction36.index = 1;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff44 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper43);
        foodev.jsondiff.jsonwrap.Wrapper wrapper45 = jsonDiff44.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction47 = jsonDiff44.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction47.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.JsonDiff.Instruction instruction50 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction50.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff54 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper53);
        int int56 = jsonDiff54.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction58 = jsonDiff54.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper59 = instruction58.oper;
        instruction50.oper = oper59;
        instruction47.oper = oper59;
        instruction36.oper = oper59;
        foodev.jsondiff.Oper oper63 = instruction36.oper;
        instruction16.oper = oper63;
        instruction6.oper = oper63;
        foodev.jsondiff.Oper oper66 = instruction6.oper;
        foodev.jsondiff.Oper oper67 = instruction6.oper;
        boolean boolean68 = instruction6.isIndexed();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + oper9 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper9.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + oper30 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper30.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper45);
        org.junit.Assert.assertNotNull(instruction47);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(instruction58);
        org.junit.Assert.assertTrue("'" + oper59 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper59.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper63 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper63.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper66 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper66.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper67 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper67.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test14713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14713");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int11 = jsonDiff3.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff3.factory;
        java.lang.Class<?> wildcardClass15 = wrapper14.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test14714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14714");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException25);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement27 = wrapper10.wrap((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
    }

    @Test
    public void test14715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14715");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = jsonDiff11.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test14716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14716");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        int int13 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Node node14 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        foodev.jsondiff.Leaf[] leafArray16 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList17 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList17, leafArray16);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap19 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf20 = jsonDiff3.findLeaves(node14, jzonElement15, (java.util.List<foodev.jsondiff.Leaf>) leafList17, intMap19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(leafArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test14717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14717");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        int int8 = jsonDiff6.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff6.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff6.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff14.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff14.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff14.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff14.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper21);
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff22.factory;
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff(wrapper23);
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff24.create("");
        int int28 = jsonDiff24.isIndexed("");
        int int30 = jsonDiff24.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff24.create("~");
        foodev.jsondiff.Oper oper33 = instruction32.oper;
        instruction32.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper36 = instruction32.oper;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff6.apply((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Object) instruction32);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertTrue("'" + oper33 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper33.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper36 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper36.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14718");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper15 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper15);
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper15);
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff18.factory;
        java.lang.Class<?> wildcardClass20 = jsonDiff18.getClass();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException23.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException36.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray41 = jacksonWrapperException40.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException42);
        jacksonWrapperException36.addSuppressed((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray49 = jacksonWrapperException48.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray53 = jacksonWrapperException52.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray57 = jacksonWrapperException56.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException56);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException58);
        jacksonWrapperException52.addSuppressed((java.lang.Throwable) jacksonWrapperException58);
        jacksonWrapperException50.addSuppressed((java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException45.addSuppressed((java.lang.Throwable) jacksonWrapperException50);
        jacksonWrapperException29.addSuppressed((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException50);
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) wildcardClass20, (java.lang.Object) jacksonWrapperException65);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Class cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(throwableArray57);
    }

    @Test
    public void test14719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14719");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff15.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = wrapper16.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(wrapper16);
    }

    @Test
    public void test14720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14720");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper2);
        int int5 = jsonDiff3.isIndexed("hi!");
        int int7 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int14 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper15);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = jacksonWrapper0.wrap((java.lang.Object) wrapper15);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wrapper15);
    }

    @Test
    public void test14721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14721");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff19.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper21 = jsonDiff19.factory;
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff(wrapper21);
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff22.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = jsonDiff22.diff("", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNotNull(wrapper21);
        org.junit.Assert.assertNotNull(instruction24);
    }

    @Test
    public void test14722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14722");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        int int10 = jsonDiff3.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject14 = jsonDiff3.diff(jzonElement12, jzonElement13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
    }

    @Test
    public void test14723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14723");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException9);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = gsonWrapper0.wrap((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray6);
    }

    @Test
    public void test14724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14724");
        foodev.jsondiff.JsonDiff.Instruction instruction0 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper1 = instruction0.oper;
        instruction0.key = "~";
        java.lang.String str4 = instruction0.key;
        instruction0.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        boolean boolean7 = instruction0.isIndexed();
        foodev.jsondiff.Oper oper8 = instruction0.oper;
        instruction0.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        instruction0.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = null;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff14.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff14.getVisitor();
        int int18 = jsonDiff14.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff14.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff14.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Oper oper23 = instruction22.oper;
        instruction0.oper = oper23;
        org.junit.Assert.assertNull(oper1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "~" + "'", str4, "~");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(oper8);
        org.junit.Assert.assertNull(wrapper15);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertTrue("'" + oper23 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper23.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14725");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        int int9 = jsonDiff7.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int11 = jsonDiff7.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff7.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = jsonDiff7.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(instruction13);
    }

    @Test
    public void test14726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14726");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
    }

    @Test
    public void test14727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14727");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper16);
        int int19 = jsonDiff17.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement21 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject22 = jsonDiff17.diff(jzonElement20, jzonElement21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test14728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14728");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff4.create("hi!");
        int int8 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff4.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff14.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor17 = jsonDiff14.getVisitor();
        int int19 = jsonDiff14.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff14.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int22 = instruction21.index;
        instruction21.index = 35;
        int int25 = instruction21.index;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement26 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff4.applyPartial(jzonElement10, instruction21, jzonElement26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertNull(wildcardVisitor17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 35 + "'", int25 == 35);
    }

    @Test
    public void test14729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14729");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff10.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction12.index = (short) 0;
        java.lang.String str15 = instruction12.key;
        boolean boolean16 = instruction12.isIndexed();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str15, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test14730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14730");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff6.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int10 = jsonDiff6.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Leaf leaf11 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray12 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = jsonDiff6.accept(leaf11, jzonArray12, jzonObject13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test14731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14731");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff13.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = wrapper18.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(wrapper18);
    }

    @Test
    public void test14732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14732");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper1);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.Visitor<?> wildcardVisitor5 = jsonDiff4.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff4.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff4.factory;
        int int10 = jsonDiff4.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff4.factory;
        int int13 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff4.create("~");
        int int17 = jsonDiff4.isIndexed("");
        int int19 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff(wrapper20);
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff21.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement24 = gsonWrapper0.wrap((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNull(wildcardVisitor5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNotNull(instruction23);
    }

    @Test
    public void test14733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14733");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement13, jzonElement14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test14734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14734");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test14735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14735");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException26);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException24);
        jacksonWrapperException18.addSuppressed((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray43 = jacksonWrapperException42.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray47 = jacksonWrapperException46.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray51 = jacksonWrapperException50.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException46.addSuppressed((java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException44.addSuppressed((java.lang.Throwable) jacksonWrapperException46);
        java.lang.Throwable[] throwableArray56 = jacksonWrapperException46.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException59);
        jacksonWrapperException46.addSuppressed((java.lang.Throwable) jacksonWrapperException59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException46);
        jacksonWrapperException40.addSuppressed((java.lang.Throwable) jacksonWrapperException62);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray56);
    }

    @Test
    public void test14736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14736");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~");
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException26);
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException40);
        java.lang.String str43 = jacksonWrapperException42.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str43, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
    }

    @Test
    public void test14737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14737");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject11 = jsonDiff8.diff(jzonElement9, jzonElement10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper6);
    }

    @Test
    public void test14738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14738");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff3.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass14 = wildcardVisitor13.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNull(wildcardVisitor13);
    }

    @Test
    public void test14739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14739");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        int int6 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff4.getVisitor();
        int int11 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff4.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff4.factory;
        int int15 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff4.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff4.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = wrapper17.parse("~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(wrapper17);
    }

    @Test
    public void test14740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14740");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = wrapper5.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertNotNull(wrapper5);
    }

    @Test
    public void test14741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14741");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        instruction6.key = "hi!";
        int int9 = instruction6.index;
        foodev.jsondiff.Oper oper10 = instruction6.oper;
        java.lang.String str11 = instruction6.key;
        instruction6.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        boolean boolean14 = instruction6.isIndexed();
        java.lang.String str15 = instruction6.key;
        int int16 = instruction6.index;
        java.lang.String str17 = instruction6.key;
        int int18 = instruction6.index;
        instruction6.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.Oper oper21 = instruction6.oper;
        instruction6.key = "";
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + oper10 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper10.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str15, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str17, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + oper21 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper21.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14742");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper3);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff6.getVisitor();
        int int9 = jsonDiff6.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff6.getVisitor();
        int int12 = jsonDiff6.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff6.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = jacksonWrapper0.wrap((java.lang.Object) instruction14);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
    }

    @Test
    public void test14743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14743");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int12 = jsonDiff8.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff14.apply(jzonElement15, jzonElement16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
    }

    @Test
    public void test14744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14744");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.Leaf leaf8 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray9 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = jsonDiff3.accept(leaf8, jzonArray9, jzonObject10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
    }

    @Test
    public void test14745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14745");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff11.checkIndex(jzonElement13, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test14746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14746");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = jsonDiff1.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(instruction10);
    }

    @Test
    public void test14747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14747");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray35 = jacksonWrapperException34.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException36);
        jacksonWrapperException30.addSuppressed((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray42 = jacksonWrapperException41.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException45.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException47);
        jacksonWrapperException41.addSuppressed((java.lang.Throwable) jacksonWrapperException47);
        jacksonWrapperException40.addSuppressed((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException41);
        jacksonWrapperException23.addSuppressed((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray55 = jacksonWrapperException54.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray59 = jacksonWrapperException58.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException58);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException60);
        jacksonWrapperException54.addSuppressed((java.lang.Throwable) jacksonWrapperException60);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException60);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException60);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray67 = jacksonWrapperException66.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException66);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException68);
        jacksonWrapperException60.addSuppressed((java.lang.Throwable) jacksonWrapperException68);
        jacksonWrapperException41.addSuppressed((java.lang.Throwable) jacksonWrapperException68);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException72 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException68);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException73 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException68);
        java.lang.Throwable throwable75 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException76 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", throwable75);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException79 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException80 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException79);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException81 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException79);
        jacksonWrapperException76.addSuppressed((java.lang.Throwable) jacksonWrapperException81);
        jacksonWrapperException68.addSuppressed((java.lang.Throwable) jacksonWrapperException81);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException84 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException81);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException85 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException81);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException81);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException87 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException81);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement88 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException81);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(throwableArray67);
    }

    @Test
    public void test14748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14748");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        int int14 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = jsonDiff1.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test14749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14749");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
    }

    @Test
    public void test14750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14750");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        int int17 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor18 = jsonDiff3.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor18);
    }

    @Test
    public void test14751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14751");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException17);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = jacksonWrapper0.wrap((java.lang.Object) "");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
    }

    @Test
    public void test14752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14752");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper5 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper5);
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper5);
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper5);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff8.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = gsonWrapper0.wrap((java.lang.Object) jsonDiff12);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
    }

    @Test
    public void test14753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14753");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement13, jzonElement14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor12);
    }

    @Test
    public void test14754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14754");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff3.create("~");
        int int19 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int21 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement22 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement22, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test14755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14755");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        foodev.jsondiff.JsonDiff.Instruction instruction3 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement5 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff9.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction13.index = (short) 100;
        boolean boolean16 = instruction13.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction17 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper18 = instruction17.oper;
        instruction17.key = "~";
        int int21 = instruction17.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper22);
        int int25 = jsonDiff23.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff23.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean28 = instruction27.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper29);
        int int32 = jsonDiff30.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction34 = jsonDiff30.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper35 = instruction34.oper;
        instruction27.oper = oper35;
        instruction17.oper = oper35;
        foodev.jsondiff.Oper oper38 = instruction17.oper;
        instruction13.oper = oper38;
        instruction13.index = (-1);
        boolean boolean42 = instruction13.isIndexed();
        java.lang.String str43 = instruction13.key;
        instruction13.key = "";
        java.lang.String str46 = instruction13.key;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement47 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement5, instruction13, jzonElement47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(instruction3);
        org.junit.Assert.assertNull(wrapper4);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(oper18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(instruction34);
        org.junit.Assert.assertTrue("'" + oper35 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper35.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper38 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper38.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str43, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
    }

    @Test
    public void test14756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14756");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff6.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff6.getVisitor();
        int int10 = jsonDiff6.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff6.apply(jzonElement11, jzonElement12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test14757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14757");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper15 = instruction14.oper;
        instruction14.key = "~";
        instruction14.key = "";
        foodev.jsondiff.JsonDiff.Instruction instruction20 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction20.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper23);
        int int26 = jsonDiff24.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper29 = instruction28.oper;
        instruction20.oper = oper29;
        instruction14.oper = oper29;
        instruction14.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        instruction14.index = (byte) 0;
        instruction14.index = 0;
        instruction14.index = 97;
        foodev.jsondiff.Oper oper40 = instruction14.oper;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement41 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff12.applyPartial(jzonElement13, instruction14, jzonElement41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(oper15);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertTrue("'" + oper29 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper29.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper40 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper40.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14758");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper4);
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff7.create("");
        boolean boolean10 = instruction9.isIndexed();
        instruction9.index = (short) -1;
        instruction9.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        boolean boolean15 = instruction9.isIndexed();
        int int16 = instruction9.index;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = jacksonWrapper0.wrap((java.lang.Object) instruction9);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test14759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14759");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        int int16 = jsonDiff3.isIndexed("");
        int int18 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff20.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff20.factory;
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff(wrapper23);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement25 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement26 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject27 = jsonDiff24.diff(jzonElement25, jzonElement26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertNotNull(wrapper23);
    }

    @Test
    public void test14760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14760");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper10 = instruction9.oper;
        instruction9.index = (-1);
        java.lang.String str13 = instruction9.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper14);
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff15.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff15.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction19 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction19.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper22);
        int int25 = jsonDiff23.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff23.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper28 = instruction27.oper;
        instruction19.oper = oper28;
        instruction18.oper = oper28;
        instruction9.oper = oper28;
        instruction8.oper = oper28;
        boolean boolean33 = instruction8.isIndexed();
        instruction8.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        boolean boolean36 = instruction8.isIndexed();
        java.lang.Class<?> wildcardClass37 = instruction8.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(oper10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertTrue("'" + oper28 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper28.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test14761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14761");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff13.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor17 = jsonDiff13.getVisitor();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNull(wildcardVisitor17);
    }

    @Test
    public void test14762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14762");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff1.getVisitor();
        foodev.jsondiff.Leaf leaf9 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray10 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = jsonDiff1.accept(leaf9, jzonArray10, jzonObject11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNull(wildcardVisitor8);
    }

    @Test
    public void test14763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14763");
        foodev.jsondiff.JsonDiff.Instruction instruction0 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper1 = instruction0.oper;
        instruction0.key = "~";
        instruction0.key = "";
        instruction0.index = (short) 1;
        java.lang.String str8 = instruction0.key;
        boolean boolean9 = instruction0.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff11.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff11.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff11.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor18 = jsonDiff11.getVisitor();
        int int20 = jsonDiff11.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff11.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Oper oper23 = instruction22.oper;
        instruction0.oper = oper23;
        org.junit.Assert.assertNull(oper1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNull(wildcardVisitor15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNull(wildcardVisitor18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertTrue("'" + oper23 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper23.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14764");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        java.lang.String str11 = instruction10.key;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str11, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test14765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14765");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        int int16 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff3.factory;
        foodev.jsondiff.Node node18 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = null;
        foodev.jsondiff.Leaf[] leafArray20 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList21 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList21, leafArray20);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap23 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf24 = jsonDiff3.findLeaves(node18, jzonElement19, (java.util.List<foodev.jsondiff.Leaf>) leafList21, intMap23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(leafArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test14766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14766");
        foodev.jsondiff.JsonDiff.Instruction instruction0 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper1 = instruction0.oper;
        instruction0.key = "~";
        instruction0.key = "";
        foodev.jsondiff.JsonDiff.Instruction instruction6 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction6.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        int int12 = jsonDiff10.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff10.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper15 = instruction14.oper;
        instruction6.oper = oper15;
        instruction0.oper = oper15;
        instruction0.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        instruction0.index = '4';
        java.lang.String str22 = instruction0.key;
        boolean boolean23 = instruction0.isIndexed();
        java.lang.Class<?> wildcardClass24 = instruction0.getClass();
        org.junit.Assert.assertNull(oper1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + oper15 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper15.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str22, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test14767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14767");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        int int11 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int13 = jsonDiff1.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff1.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff1.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int21 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Node node22 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement23 = null;
        foodev.jsondiff.Leaf[] leafArray24 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList25 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList25, leafArray24);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap27 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf28 = jsonDiff1.findLeaves(node22, jzonElement23, (java.util.List<foodev.jsondiff.Leaf>) leafList25, intMap27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(leafArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test14768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14768");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException28);
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException33.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException39);
        jacksonWrapperException33.addSuppressed((java.lang.Throwable) jacksonWrapperException39);
        jacksonWrapperException32.addSuppressed((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException33);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException33);
        java.lang.Throwable[] throwableArray48 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException7);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement51 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException7);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray48);
    }

    @Test
    public void test14769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14769");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException9);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException16);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException32);
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException33.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException37.addSuppressed((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException42);
        jacksonWrapperException33.addSuppressed((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray53 = jacksonWrapperException52.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray57 = jacksonWrapperException56.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException56);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException58);
        jacksonWrapperException52.addSuppressed((java.lang.Throwable) jacksonWrapperException58);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException58);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException61);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException62);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray67 = jacksonWrapperException66.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException66);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray71 = jacksonWrapperException70.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException72 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException70);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException73 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException72);
        jacksonWrapperException66.addSuppressed((java.lang.Throwable) jacksonWrapperException72);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException75 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException66);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException76 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException75);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException77 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException75);
        jacksonWrapperException62.addSuppressed((java.lang.Throwable) jacksonWrapperException77);
        jacksonWrapperException49.addSuppressed((java.lang.Throwable) jacksonWrapperException77);
        jacksonWrapperException42.addSuppressed((java.lang.Throwable) jacksonWrapperException77);
        java.lang.Throwable[] throwableArray81 = jacksonWrapperException42.getSuppressed();
        jacksonWrapperException23.addSuppressed((java.lang.Throwable) jacksonWrapperException42);
        java.lang.String str83 = jacksonWrapperException23.toString();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertNotNull(throwableArray81);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str83, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test14770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14770");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException26);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException38.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException40);
        java.lang.Throwable[] throwableArray44 = jacksonWrapperException40.getSuppressed();
        java.lang.Throwable[] throwableArray45 = jacksonWrapperException40.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray45);
    }

    @Test
    public void test14771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14771");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException12);
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException37);
        jacksonWrapperException35.addSuppressed((java.lang.Throwable) jacksonWrapperException37);
        java.lang.Throwable[] throwableArray41 = jacksonWrapperException35.getSuppressed();
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray45 = jacksonWrapperException44.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray49 = jacksonWrapperException48.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException50);
        jacksonWrapperException44.addSuppressed((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray57 = jacksonWrapperException56.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException56.addSuppressed((java.lang.Throwable) jacksonWrapperException58);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException56);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException60);
        jacksonWrapperException53.addSuppressed((java.lang.Throwable) jacksonWrapperException61);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException53);
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException63);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException63);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException63);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray57);
    }

    @Test
    public void test14772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14772");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException9);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException16);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException21);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray20);
    }

    @Test
    public void test14773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14773");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        int int11 = jsonDiff9.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        int int16 = jsonDiff14.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff14.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff14.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff14.create("");
        boolean boolean22 = instruction21.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper23);
        foodev.jsondiff.jsonwrap.Wrapper wrapper25 = jsonDiff24.factory;
        foodev.jsondiff.JsonDiff jsonDiff26 = new foodev.jsondiff.JsonDiff(wrapper25);
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff26.create("");
        int int29 = instruction28.index;
        boolean boolean30 = instruction28.isIndexed();
        instruction28.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff34 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper33);
        foodev.jsondiff.jsonwrap.Wrapper wrapper35 = jsonDiff34.factory;
        foodev.jsondiff.JsonDiff jsonDiff36 = new foodev.jsondiff.JsonDiff(wrapper35);
        foodev.jsondiff.JsonDiff.Instruction instruction38 = jsonDiff36.create("");
        boolean boolean39 = instruction38.isIndexed();
        instruction38.index = (short) -1;
        foodev.jsondiff.Oper oper42 = instruction38.oper;
        instruction28.oper = oper42;
        foodev.jsondiff.JsonDiff.Instruction instruction44 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper45 = instruction44.oper;
        instruction44.key = "~";
        java.lang.String str48 = instruction44.key;
        foodev.jsondiff.JsonDiff.Instruction instruction49 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper50 = instruction49.oper;
        instruction49.index = (-1);
        java.lang.String str53 = instruction49.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff55 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper54);
        foodev.jsondiff.jsonwrap.Wrapper wrapper56 = jsonDiff55.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction58 = jsonDiff55.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction59 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction59.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff63 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper62);
        int int65 = jsonDiff63.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction67 = jsonDiff63.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper68 = instruction67.oper;
        instruction59.oper = oper68;
        instruction58.oper = oper68;
        instruction49.oper = oper68;
        instruction44.oper = oper68;
        instruction28.oper = oper68;
        instruction21.oper = oper68;
        instruction21.index = 0;
        int int77 = instruction21.index;
        java.lang.String str78 = instruction21.key;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement79 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff9.applyPartial(jzonElement12, instruction21, jzonElement79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wrapper25);
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wrapper35);
        org.junit.Assert.assertNotNull(instruction38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + oper42 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper42.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNull(oper45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "~" + "'", str48, "~");
        org.junit.Assert.assertNull(oper50);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(wrapper56);
        org.junit.Assert.assertNotNull(instruction58);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(instruction67);
        org.junit.Assert.assertTrue("'" + oper68 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper68.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
    }

    @Test
    public void test14774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14774");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Leaf leaf6 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray7 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = jsonDiff1.accept(leaf6, jzonArray7, jzonObject8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
    }

    @Test
    public void test14775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14775");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException9);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException23.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException21.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException34);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException38);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray28);
    }

    @Test
    public void test14776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14776");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean6 = instruction5.isIndexed();
        foodev.jsondiff.Oper oper7 = null;
        instruction5.oper = oper7;
        foodev.jsondiff.Oper oper9 = instruction5.oper;
        instruction5.key = "~";
        java.lang.String str12 = instruction5.key;
        instruction5.key = "hi!";
        java.lang.String str15 = instruction5.key;
        foodev.jsondiff.Oper oper16 = instruction5.oper;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(oper9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "~" + "'", str12, "~");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(oper16);
    }

    @Test
    public void test14777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14777");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff5.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff5.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff5.getVisitor();
        int int14 = jsonDiff5.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        foodev.jsondiff.JsonDiff.Instruction instruction16 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper17 = instruction16.oper;
        instruction16.key = "~";
        java.lang.String str20 = instruction16.key;
        foodev.jsondiff.JsonDiff.Instruction instruction21 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper22 = instruction21.oper;
        instruction21.index = (-1);
        java.lang.String str25 = instruction21.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper26);
        foodev.jsondiff.jsonwrap.Wrapper wrapper28 = jsonDiff27.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction30 = jsonDiff27.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction31 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction31.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper34);
        int int37 = jsonDiff35.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction39 = jsonDiff35.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper40 = instruction39.oper;
        instruction31.oper = oper40;
        instruction30.oper = oper40;
        instruction21.oper = oper40;
        instruction16.oper = oper40;
        java.lang.String str45 = instruction16.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff47 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper46);
        foodev.jsondiff.jsonwrap.Wrapper wrapper48 = jsonDiff47.factory;
        foodev.jsondiff.JsonDiff jsonDiff49 = new foodev.jsondiff.JsonDiff(wrapper48);
        foodev.jsondiff.JsonDiff.Instruction instruction51 = jsonDiff49.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction53 = jsonDiff49.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction53.index = (short) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff57 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper56);
        foodev.jsondiff.jsonwrap.Wrapper wrapper58 = jsonDiff57.factory;
        foodev.jsondiff.JsonDiff jsonDiff59 = new foodev.jsondiff.JsonDiff(wrapper58);
        foodev.jsondiff.JsonDiff.Instruction instruction61 = jsonDiff59.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction63 = jsonDiff59.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction63.index = (short) 100;
        boolean boolean66 = instruction63.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction67 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper68 = instruction67.oper;
        instruction67.key = "~";
        int int71 = instruction67.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper72 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff73 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper72);
        int int75 = jsonDiff73.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction77 = jsonDiff73.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean78 = instruction77.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper79 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff80 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper79);
        int int82 = jsonDiff80.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction84 = jsonDiff80.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper85 = instruction84.oper;
        instruction77.oper = oper85;
        instruction67.oper = oper85;
        foodev.jsondiff.Oper oper88 = instruction67.oper;
        instruction63.oper = oper88;
        instruction53.oper = oper88;
        instruction16.oper = oper88;
        foodev.jsondiff.Oper oper92 = instruction16.oper;
        boolean boolean93 = instruction16.isIndexed();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement94 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff5.applyPartial(jzonElement15, instruction16, jzonElement94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(oper17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "~" + "'", str20, "~");
        org.junit.Assert.assertNull(oper22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(wrapper28);
        org.junit.Assert.assertNotNull(instruction30);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(instruction39);
        org.junit.Assert.assertTrue("'" + oper40 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper40.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "~" + "'", str45, "~");
        org.junit.Assert.assertNotNull(wrapper48);
        org.junit.Assert.assertNotNull(instruction51);
        org.junit.Assert.assertNotNull(instruction53);
        org.junit.Assert.assertNotNull(wrapper58);
        org.junit.Assert.assertNotNull(instruction61);
        org.junit.Assert.assertNotNull(instruction63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(oper68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(instruction77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(instruction84);
        org.junit.Assert.assertTrue("'" + oper85 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper85.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper88 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper88.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper92 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper92.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test14778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14778");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int15 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject19 = jsonDiff3.diff(jzonElement17, jzonElement18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor16);
    }

    @Test
    public void test14779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14779");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        boolean boolean13 = instruction12.isIndexed();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test14780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14780");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = wrapper8.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(wrapper8);
    }

    @Test
    public void test14781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14781");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int12 = jsonDiff1.isIndexed("");
        int int14 = jsonDiff1.isIndexed("");
        int int16 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor17 = jsonDiff1.getVisitor();
        int int19 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.Class<?> wildcardClass20 = jsonDiff1.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test14782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14782");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException16);
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException10);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException24);
        java.lang.String str26 = jacksonWrapperException25.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str26, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test14783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14783");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int13 = jsonDiff9.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff15.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper18);
        int int21 = jsonDiff19.isIndexed("hi!");
        int int23 = jsonDiff19.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff19.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper25 = jsonDiff19.factory;
        foodev.jsondiff.JsonDiff jsonDiff26 = new foodev.jsondiff.JsonDiff(wrapper25);
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff(wrapper25);
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff27.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int31 = jsonDiff27.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction33 = jsonDiff27.create("~");
        instruction33.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper36);
        foodev.jsondiff.jsonwrap.Wrapper wrapper38 = jsonDiff37.factory;
        foodev.jsondiff.JsonDiff jsonDiff39 = new foodev.jsondiff.JsonDiff(wrapper38);
        foodev.jsondiff.JsonDiff.Instruction instruction41 = jsonDiff39.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction43 = jsonDiff39.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction45 = jsonDiff39.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction47 = jsonDiff39.create("hi!");
        instruction47.index = (short) 0;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff51 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper50);
        foodev.jsondiff.jsonwrap.Wrapper wrapper52 = jsonDiff51.factory;
        foodev.jsondiff.JsonDiff jsonDiff53 = new foodev.jsondiff.JsonDiff(wrapper52);
        foodev.jsondiff.JsonDiff.Instruction instruction55 = jsonDiff53.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction57 = jsonDiff53.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction57.index = (short) 100;
        boolean boolean60 = instruction57.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff62 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper61);
        foodev.jsondiff.jsonwrap.Wrapper wrapper63 = jsonDiff62.factory;
        foodev.jsondiff.JsonDiff jsonDiff64 = new foodev.jsondiff.JsonDiff(wrapper63);
        foodev.jsondiff.JsonDiff.Instruction instruction66 = jsonDiff64.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction66.key = "hi!";
        foodev.jsondiff.Oper oper69 = instruction66.oper;
        instruction57.oper = oper69;
        foodev.jsondiff.Oper oper71 = instruction57.oper;
        instruction47.oper = oper71;
        instruction33.oper = oper71;
        instruction17.oper = oper71;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(wrapper24);
        org.junit.Assert.assertNotNull(wrapper25);
        org.junit.Assert.assertNotNull(instruction29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(instruction33);
        org.junit.Assert.assertNotNull(wrapper38);
        org.junit.Assert.assertNotNull(instruction41);
        org.junit.Assert.assertNotNull(instruction43);
        org.junit.Assert.assertNotNull(instruction45);
        org.junit.Assert.assertNotNull(instruction47);
        org.junit.Assert.assertNotNull(wrapper52);
        org.junit.Assert.assertNotNull(instruction55);
        org.junit.Assert.assertNotNull(instruction57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wrapper63);
        org.junit.Assert.assertNotNull(instruction66);
        org.junit.Assert.assertTrue("'" + oper69 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper69.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper71 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper71.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14784");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = wrapper10.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test14785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14785");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.Visitor<?> wildcardVisitor17 = jsonDiff16.getVisitor();
        int int19 = jsonDiff16.isIndexed("hi!");
        int int21 = jsonDiff16.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNull(wildcardVisitor17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test14786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14786");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff3.getVisitor();
        int int13 = jsonDiff3.isIndexed("hi!");
        int int15 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Leaf leaf16 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray17 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = jsonDiff3.accept(leaf16, jzonArray17, jzonObject18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test14787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14787");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.String str8 = instruction7.key;
        instruction7.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction7.index = 100;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str8, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test14788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14788");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction7.index = (short) 100;
        boolean boolean10 = instruction7.isIndexed();
        instruction7.index = (short) 10;
        instruction7.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test14789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14789");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor17 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject21 = jsonDiff3.diff(jzonElement19, jzonElement20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertNull(wildcardVisitor17);
        org.junit.Assert.assertNotNull(wrapper18);
    }

    @Test
    public void test14790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14790");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        int int6 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff14.create("");
        int int17 = instruction16.index;
        boolean boolean18 = instruction16.isIndexed();
        instruction16.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper21);
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff22.factory;
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff(wrapper23);
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff24.create("");
        boolean boolean27 = instruction26.isIndexed();
        instruction26.index = (short) -1;
        foodev.jsondiff.Oper oper30 = instruction26.oper;
        instruction16.oper = oper30;
        foodev.jsondiff.JsonDiff.Instruction instruction32 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper33 = instruction32.oper;
        instruction32.key = "~";
        java.lang.String str36 = instruction32.key;
        foodev.jsondiff.JsonDiff.Instruction instruction37 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper38 = instruction37.oper;
        instruction37.index = (-1);
        java.lang.String str41 = instruction37.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff43 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper42);
        foodev.jsondiff.jsonwrap.Wrapper wrapper44 = jsonDiff43.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction46 = jsonDiff43.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction47 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction47.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff51 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper50);
        int int53 = jsonDiff51.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction55 = jsonDiff51.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper56 = instruction55.oper;
        instruction47.oper = oper56;
        instruction46.oper = oper56;
        instruction37.oper = oper56;
        instruction32.oper = oper56;
        instruction16.oper = oper56;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff63 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper62);
        foodev.jsondiff.jsonwrap.Wrapper wrapper64 = jsonDiff63.factory;
        foodev.jsondiff.JsonDiff jsonDiff65 = new foodev.jsondiff.JsonDiff(wrapper64);
        foodev.jsondiff.Visitor<?> wildcardVisitor66 = jsonDiff65.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction68 = jsonDiff65.create("");
        int int70 = jsonDiff65.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper71 = jsonDiff65.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction73 = jsonDiff65.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper74 = instruction73.oper;
        instruction16.oper = oper74;
        instruction16.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.Oper oper78 = instruction16.oper;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement79 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement10, instruction16, jzonElement79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + oper30 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper30.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNull(oper33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "~" + "'", str36, "~");
        org.junit.Assert.assertNull(oper38);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(wrapper44);
        org.junit.Assert.assertNotNull(instruction46);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(instruction55);
        org.junit.Assert.assertTrue("'" + oper56 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper56.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper64);
        org.junit.Assert.assertNull(wildcardVisitor66);
        org.junit.Assert.assertNotNull(instruction68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(wrapper71);
        org.junit.Assert.assertNotNull(instruction73);
        org.junit.Assert.assertTrue("'" + oper74 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper74.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper78 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper78.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14791");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int15 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff3.getVisitor();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor16);
    }

    @Test
    public void test14792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14792");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper3);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff6.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff6.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff6.factory;
        int int12 = jsonDiff6.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff6.factory;
        int int15 = jsonDiff6.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff6.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff6.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff6.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff6.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper21 = jsonDiff6.factory;
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff(wrapper21);
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper21);
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff23.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Oper oper26 = instruction25.oper;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement27 = jacksonWrapper0.wrap((java.lang.Object) oper26);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNotNull(wrapper21);
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertTrue("'" + oper26 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper26.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14793");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement5 = jacksonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
    }

    @Test
    public void test14794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14794");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff1.factory;
        int int15 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff17.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        foodev.jsondiff.Visitor<?> wildcardVisitor20 = jsonDiff19.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff19.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff19.factory;
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff(wrapper23);
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff(wrapper23);
        int int27 = jsonDiff25.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor28 = jsonDiff25.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException32.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException32.addSuppressed((java.lang.Throwable) jacksonWrapperException34);
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException34.getSuppressed();
        jacksonWrapperException29.addSuppressed((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray45 = jacksonWrapperException44.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray49 = jacksonWrapperException48.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException50);
        jacksonWrapperException44.addSuppressed((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException44);
        jacksonWrapperException42.addSuppressed((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException42);
        java.lang.Throwable[] throwableArray57 = jacksonWrapperException42.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        jacksonWrapperException29.addSuppressed((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray62 = jacksonWrapperException61.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException61);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray66 = jacksonWrapperException65.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException65);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException67);
        jacksonWrapperException61.addSuppressed((java.lang.Throwable) jacksonWrapperException67);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException61);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException72 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray73 = jacksonWrapperException72.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException74 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException72);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException76 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray77 = jacksonWrapperException76.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException78 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException76);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException79 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException78);
        jacksonWrapperException72.addSuppressed((java.lang.Throwable) jacksonWrapperException78);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException81 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException78);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException82 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException78);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException83 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray84 = jacksonWrapperException83.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException85 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException83);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException87 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray88 = jacksonWrapperException87.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException89 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException87);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException90 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException89);
        jacksonWrapperException83.addSuppressed((java.lang.Throwable) jacksonWrapperException89);
        jacksonWrapperException82.addSuppressed((java.lang.Throwable) jacksonWrapperException83);
        jacksonWrapperException70.addSuppressed((java.lang.Throwable) jacksonWrapperException83);
        java.lang.Throwable[] throwableArray94 = jacksonWrapperException70.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException95 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException70);
        jacksonWrapperException42.addSuppressed((java.lang.Throwable) jacksonWrapperException95);
        java.lang.Throwable[] throwableArray97 = jacksonWrapperException42.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj98 = jsonDiff1.diff((java.lang.Object) jsonDiff25, (java.lang.Object) jacksonWrapperException42);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNull(wildcardVisitor20);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor28);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertNotNull(throwableArray84);
        org.junit.Assert.assertNotNull(throwableArray88);
        org.junit.Assert.assertNotNull(throwableArray94);
        org.junit.Assert.assertNotNull(throwableArray97);
    }

    @Test
    public void test14795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14795");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        int int12 = jsonDiff3.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor13);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(wrapper15);
    }

    @Test
    public void test14796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14796");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff14.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff14.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff14.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper18);
        foodev.jsondiff.Visitor<?> wildcardVisitor21 = jsonDiff20.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor22 = jsonDiff20.getVisitor();
        int int24 = jsonDiff20.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff20.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement27 = wrapper9.wrap((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNull(wildcardVisitor15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNull(wildcardVisitor21);
        org.junit.Assert.assertNull(wildcardVisitor22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(instruction26);
    }

    @Test
    public void test14797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14797");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException31.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException35.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException37);
        jacksonWrapperException31.addSuppressed((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException29.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException23.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        java.lang.Throwable[] throwableArray45 = jacksonWrapperException23.getSuppressed();
        jacksonWrapperException21.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray48 = jacksonWrapperException47.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray52 = jacksonWrapperException51.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException53);
        jacksonWrapperException47.addSuppressed((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray60 = jacksonWrapperException59.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException61);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray64 = jacksonWrapperException63.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException63);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray68 = jacksonWrapperException67.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException67);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException69);
        jacksonWrapperException63.addSuppressed((java.lang.Throwable) jacksonWrapperException69);
        jacksonWrapperException61.addSuppressed((java.lang.Throwable) jacksonWrapperException63);
        java.lang.Throwable[] throwableArray73 = jacksonWrapperException63.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException74 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException63);
        java.lang.Throwable[] throwableArray75 = jacksonWrapperException74.getSuppressed();
        jacksonWrapperException56.addSuppressed((java.lang.Throwable) jacksonWrapperException74);
        jacksonWrapperException23.addSuppressed((java.lang.Throwable) jacksonWrapperException56);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException78 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException80 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray81 = jacksonWrapperException80.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException82 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException80);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException84 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray85 = jacksonWrapperException84.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException86 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException84);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException87 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException86);
        jacksonWrapperException80.addSuppressed((java.lang.Throwable) jacksonWrapperException86);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException89 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException80);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException90 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException89);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException92 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray93 = jacksonWrapperException92.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException94 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException92);
        jacksonWrapperException90.addSuppressed((java.lang.Throwable) jacksonWrapperException92);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException96 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException90);
        jacksonWrapperException78.addSuppressed((java.lang.Throwable) jacksonWrapperException96);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(throwableArray81);
        org.junit.Assert.assertNotNull(throwableArray85);
        org.junit.Assert.assertNotNull(throwableArray93);
    }

    @Test
    public void test14798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14798");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException22);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        java.lang.String str30 = jacksonWrapperException7.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str30, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test14799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14799");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        int int14 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper19);
        foodev.jsondiff.jsonwrap.Wrapper wrapper21 = jsonDiff20.factory;
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff(wrapper21);
        foodev.jsondiff.Visitor<?> wildcardVisitor23 = jsonDiff22.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff22.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper26 = jsonDiff22.factory;
        int int28 = jsonDiff22.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper29 = jsonDiff22.factory;
        int int31 = jsonDiff22.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction33 = jsonDiff22.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper34 = jsonDiff22.factory;
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff(wrapper34);
        foodev.jsondiff.jsonwrap.Wrapper wrapper36 = jsonDiff35.factory;
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff(wrapper36);
        foodev.jsondiff.JsonDiff jsonDiff38 = new foodev.jsondiff.JsonDiff(wrapper36);
        foodev.jsondiff.JsonDiff jsonDiff39 = new foodev.jsondiff.JsonDiff(wrapper36);
        foodev.jsondiff.Visitor<?> wildcardVisitor40 = jsonDiff39.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor41 = jsonDiff39.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff43 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper42);
        foodev.jsondiff.jsonwrap.Wrapper wrapper44 = jsonDiff43.factory;
        foodev.jsondiff.JsonDiff jsonDiff45 = new foodev.jsondiff.JsonDiff(wrapper44);
        foodev.jsondiff.Visitor<?> wildcardVisitor46 = jsonDiff45.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper47 = jsonDiff45.factory;
        foodev.jsondiff.JsonDiff jsonDiff48 = new foodev.jsondiff.JsonDiff(wrapper47);
        foodev.jsondiff.jsonwrap.Wrapper wrapper49 = jsonDiff48.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper50 = jsonDiff48.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor51 = jsonDiff48.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj52 = jsonDiff3.diff((java.lang.Object) wildcardVisitor41, (java.lang.Object) jsonDiff48);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertNotNull(wrapper21);
        org.junit.Assert.assertNull(wildcardVisitor23);
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertNotNull(wrapper26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(wrapper29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(instruction33);
        org.junit.Assert.assertNotNull(wrapper34);
        org.junit.Assert.assertNotNull(wrapper36);
        org.junit.Assert.assertNull(wildcardVisitor40);
        org.junit.Assert.assertNull(wildcardVisitor41);
        org.junit.Assert.assertNotNull(wrapper44);
        org.junit.Assert.assertNull(wildcardVisitor46);
        org.junit.Assert.assertNotNull(wrapper47);
        org.junit.Assert.assertNotNull(wrapper49);
        org.junit.Assert.assertNotNull(wrapper50);
        org.junit.Assert.assertNull(wildcardVisitor51);
    }

    @Test
    public void test14800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14800");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int13 = instruction12.index;
        instruction12.index = (short) 0;
        instruction12.key = "";
        instruction12.key = "hi!";
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test14801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14801");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = jsonDiff9.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
    }

    @Test
    public void test14802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14802");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        int int11 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int13 = jsonDiff1.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff1.create("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff19.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff19.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff19.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement25 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff19.checkIndex(jzonElement25, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertNotNull(instruction24);
    }

    @Test
    public void test14803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14803");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Oper oper15 = instruction14.oper;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + oper15 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper15.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14804");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff15.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject19 = jsonDiff15.diff(jzonElement17, jzonElement18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNull(wildcardVisitor16);
    }

    @Test
    public void test14805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14805");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor5 = jsonDiff4.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int9 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject12 = jsonDiff4.diff(jzonElement10, jzonElement11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test14806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14806");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int8 = instruction7.index;
        instruction7.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test14807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14807");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff12.getVisitor();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(wildcardVisitor13);
    }

    @Test
    public void test14808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14808");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int13 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int17 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff19.checkIndex(jzonElement20, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(wrapper18);
    }

    @Test
    public void test14809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14809");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("");
        foodev.jsondiff.Oper oper15 = instruction14.oper;
        instruction14.index = (short) 0;
        foodev.jsondiff.Oper oper18 = instruction14.oper;
        java.lang.Class<?> wildcardClass19 = oper18.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + oper15 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper15.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper18 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper18.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test14810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14810");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        org.junit.Assert.assertNotNull(throwableArray4);
    }

    @Test
    public void test14811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14811");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff9.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(wrapper17);
    }

    @Test
    public void test14812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14812");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff18.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int23 = jsonDiff18.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement24 = wrapper13.wrap((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test14813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14813");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        int int5 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        foodev.jsondiff.Node node12 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.Leaf[] leafArray14 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList15 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList15, leafArray14);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap17 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf18 = jsonDiff3.findLeaves(node12, jzonElement13, (java.util.List<foodev.jsondiff.Leaf>) leafList15, intMap17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(leafArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test14814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14814");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff10.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff10.getVisitor();
        int int14 = jsonDiff10.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff10.getVisitor();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor15);
    }

    @Test
    public void test14815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14815");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.String str8 = instruction7.key;
        int int9 = instruction7.index;
        instruction7.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        int int12 = instruction7.index;
        java.lang.String str13 = instruction7.key;
        instruction7.index = (byte) 10;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str8, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~" + "'", str13, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
    }

    @Test
    public void test14816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14816");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction7.index = (short) 100;
        boolean boolean10 = instruction7.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper12 = instruction11.oper;
        instruction11.key = "~";
        int int15 = instruction11.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        int int19 = jsonDiff17.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean22 = instruction21.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper23);
        int int26 = jsonDiff24.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper29 = instruction28.oper;
        instruction21.oper = oper29;
        instruction11.oper = oper29;
        foodev.jsondiff.Oper oper32 = instruction11.oper;
        instruction7.oper = oper32;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper34);
        foodev.jsondiff.jsonwrap.Wrapper wrapper36 = jsonDiff35.factory;
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff(wrapper36);
        foodev.jsondiff.Visitor<?> wildcardVisitor38 = jsonDiff37.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction40 = jsonDiff37.create("");
        instruction40.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper43 = instruction40.oper;
        instruction7.oper = oper43;
        java.lang.String str45 = instruction7.key;
        java.lang.String str46 = instruction7.key;
        boolean boolean47 = instruction7.isIndexed();
        int int48 = instruction7.index;
        instruction7.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(oper12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertTrue("'" + oper29 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper29.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper32 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper32.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper36);
        org.junit.Assert.assertNull(wildcardVisitor38);
        org.junit.Assert.assertNotNull(instruction40);
        org.junit.Assert.assertTrue("'" + oper43 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper43.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str45, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str46, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
    }

    @Test
    public void test14817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14817");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("");
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test14818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14818");
        foodev.jsondiff.JsonDiff.Instruction instruction0 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper1 = instruction0.oper;
        instruction0.key = "~";
        instruction0.key = "";
        foodev.jsondiff.JsonDiff.Instruction instruction6 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction6.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        int int12 = jsonDiff10.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff10.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper15 = instruction14.oper;
        instruction6.oper = oper15;
        instruction0.oper = oper15;
        instruction0.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        instruction0.index = (byte) 0;
        instruction0.index = 0;
        java.lang.String str24 = instruction0.key;
        instruction0.index = '#';
        org.junit.Assert.assertNull(oper1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + oper15 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper15.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str24, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test14819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14819");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("hi!");
        instruction8.index = '4';
        instruction8.index = 97;
        int int13 = instruction8.index;
        instruction8.index = ' ';
        instruction8.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        java.lang.String str18 = instruction8.key;
        java.lang.String str19 = instruction8.key;
        instruction8.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        java.lang.String str22 = instruction8.key;
        foodev.jsondiff.Oper oper23 = instruction8.oper;
        instruction8.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str18, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str19, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str22, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        org.junit.Assert.assertTrue("'" + oper23 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper23.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14820");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray35 = jacksonWrapperException34.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException38.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException40);
        jacksonWrapperException34.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException34);
        jacksonWrapperException32.addSuppressed((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        java.lang.Throwable[] throwableArray48 = jacksonWrapperException26.getSuppressed();
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray51 = jacksonWrapperException50.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray55 = jacksonWrapperException54.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException56);
        jacksonWrapperException50.addSuppressed((java.lang.Throwable) jacksonWrapperException56);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray63 = jacksonWrapperException62.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException62);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException64);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray67 = jacksonWrapperException66.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException66);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray71 = jacksonWrapperException70.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException72 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException70);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException73 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException72);
        jacksonWrapperException66.addSuppressed((java.lang.Throwable) jacksonWrapperException72);
        jacksonWrapperException64.addSuppressed((java.lang.Throwable) jacksonWrapperException66);
        java.lang.Throwable[] throwableArray76 = jacksonWrapperException66.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException77 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException66);
        java.lang.Throwable[] throwableArray78 = jacksonWrapperException77.getSuppressed();
        jacksonWrapperException59.addSuppressed((java.lang.Throwable) jacksonWrapperException77);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException81 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException82 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException83 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException59);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement84 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException59);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertNotNull(throwableArray76);
        org.junit.Assert.assertNotNull(throwableArray78);
    }

    @Test
    public void test14821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14821");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException19.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray35 = jacksonWrapperException34.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException36);
        jacksonWrapperException30.addSuppressed((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray42 = jacksonWrapperException41.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException45.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException47);
        jacksonWrapperException41.addSuppressed((java.lang.Throwable) jacksonWrapperException47);
        jacksonWrapperException40.addSuppressed((java.lang.Throwable) jacksonWrapperException41);
        jacksonWrapperException28.addSuppressed((java.lang.Throwable) jacksonWrapperException41);
        java.lang.Throwable[] throwableArray52 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException53);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray60 = jacksonWrapperException59.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException59.addSuppressed((java.lang.Throwable) jacksonWrapperException61);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException65);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException66);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException66);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException66);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray60);
    }

    @Test
    public void test14822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14822");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        int int13 = jsonDiff11.isIndexed("hi!");
        int int15 = jsonDiff11.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff11.factory;
        int int18 = jsonDiff11.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff11.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int22 = instruction21.index;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement23 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement9, instruction21, jzonElement23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test14823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14823");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff12.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff12.getVisitor();
        int int16 = jsonDiff12.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff12.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper18);
        int int21 = jsonDiff19.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff19.factory;
        int int24 = jsonDiff19.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff19.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper27 = jsonDiff19.factory;
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff(wrapper27);
        int int30 = jsonDiff28.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff28.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement33 = wrapper17.wrap((java.lang.Object) jsonDiff28);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertNotNull(wrapper27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(instruction32);
    }

    @Test
    public void test14824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14824");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        int int12 = jsonDiff10.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper15 = instruction14.oper;
        instruction14.index = (-1);
        java.lang.String str18 = instruction14.key;
        instruction14.key = "~";
        boolean boolean21 = instruction14.isIndexed();
        boolean boolean22 = instruction14.isIndexed();
        int int23 = instruction14.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper24);
        foodev.jsondiff.jsonwrap.Wrapper wrapper26 = jsonDiff25.factory;
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff(wrapper26);
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff27.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction31 = jsonDiff27.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction31.index = (short) 100;
        boolean boolean34 = instruction31.isIndexed();
        java.lang.String str35 = instruction31.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper36);
        foodev.jsondiff.jsonwrap.Wrapper wrapper38 = jsonDiff37.factory;
        foodev.jsondiff.JsonDiff jsonDiff39 = new foodev.jsondiff.JsonDiff(wrapper38);
        foodev.jsondiff.Visitor<?> wildcardVisitor40 = jsonDiff39.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction42 = jsonDiff39.create("");
        instruction42.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper45 = instruction42.oper;
        instruction42.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff49 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper48);
        foodev.jsondiff.jsonwrap.Wrapper wrapper50 = jsonDiff49.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction52 = jsonDiff49.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction53 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction53.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff57 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper56);
        int int59 = jsonDiff57.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction61 = jsonDiff57.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper62 = instruction61.oper;
        instruction53.oper = oper62;
        instruction52.oper = oper62;
        instruction42.oper = oper62;
        instruction31.oper = oper62;
        instruction14.oper = oper62;
        foodev.jsondiff.Oper oper68 = instruction14.oper;
        instruction14.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        instruction14.index = (short) 100;
        int int73 = instruction14.index;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement74 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff10.applyPartial(jzonElement13, instruction14, jzonElement74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(oper15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(wrapper26);
        org.junit.Assert.assertNotNull(instruction29);
        org.junit.Assert.assertNotNull(instruction31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str35, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertNotNull(wrapper38);
        org.junit.Assert.assertNull(wildcardVisitor40);
        org.junit.Assert.assertNotNull(instruction42);
        org.junit.Assert.assertTrue("'" + oper45 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper45.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper50);
        org.junit.Assert.assertNotNull(instruction52);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(instruction61);
        org.junit.Assert.assertTrue("'" + oper62 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper62.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper68 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper68.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
    }

    @Test
    public void test14825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14825");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException9);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException28);
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException20.getSuppressed();
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException20.getSuppressed();
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException39.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray44 = jacksonWrapperException43.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException45);
        jacksonWrapperException39.addSuppressed((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray51 = jacksonWrapperException50.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray55 = jacksonWrapperException54.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException56);
        jacksonWrapperException50.addSuppressed((java.lang.Throwable) jacksonWrapperException56);
        jacksonWrapperException49.addSuppressed((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException50);
        java.lang.Throwable[] throwableArray61 = jacksonWrapperException60.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException60);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException60);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException67);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException67);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException67);
        jacksonWrapperException60.addSuppressed((java.lang.Throwable) jacksonWrapperException70);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException72 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException70);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException72);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement74 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException15);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(throwableArray61);
    }

    @Test
    public void test14826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14826");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff10.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        int int16 = jsonDiff14.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff14.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean19 = instruction18.isIndexed();
        foodev.jsondiff.Oper oper20 = null;
        instruction18.oper = oper20;
        instruction18.index = ' ';
        foodev.jsondiff.Oper oper24 = instruction18.oper;
        instruction18.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        java.lang.String str27 = instruction18.key;
        int int28 = instruction18.index;
        java.lang.String str29 = instruction18.key;
        boolean boolean30 = instruction18.isIndexed();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement31 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff10.applyPartial(jzonElement12, instruction18, jzonElement31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(oper24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str27, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 32 + "'", int28 == 32);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str29, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test14827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14827");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        instruction14.key = "";
        boolean boolean17 = instruction14.isIndexed();
        foodev.jsondiff.Oper oper18 = instruction14.oper;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + oper18 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper18.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14828");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff4.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff4.getVisitor();
        int int9 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff4.getVisitor();
        int int12 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Node node13 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        java.util.List<foodev.jsondiff.Leaf> leafList15 = null;
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap16 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf17 = jsonDiff4.findLeaves(node13, jzonElement14, leafList15, intMap16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test14829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14829");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement13, jzonElement14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test14830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14830");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff2.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff2.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff2.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff2.apply(jzonElement10, jzonElement11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test14831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14831");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        int int5 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        java.lang.Class<?> wildcardClass6 = jsonDiff3.getClass();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test14832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14832");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        int int12 = jsonDiff3.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff3.getVisitor();
        int int15 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int17 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = null;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff19.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        java.lang.String str22 = instruction21.key;
        java.lang.Class<?> wildcardClass23 = instruction21.getClass();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException29.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj34 = jsonDiff3.diff((java.lang.Object) wildcardClass23, (java.lang.Object) throwableArray33);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Class cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str22, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(throwableArray33);
    }

    @Test
    public void test14833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14833");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper1);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff4.create("");
        boolean boolean7 = instruction6.isIndexed();
        instruction6.index = (short) -1;
        instruction6.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        boolean boolean12 = instruction6.isIndexed();
        boolean boolean13 = instruction6.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper14);
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff15.factory;
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper16);
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff17.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction21.index = (short) 100;
        boolean boolean24 = instruction21.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction25 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper26 = instruction25.oper;
        instruction25.key = "~";
        int int29 = instruction25.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff31 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper30);
        int int33 = jsonDiff31.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction35 = jsonDiff31.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean36 = instruction35.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff38 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper37);
        int int40 = jsonDiff38.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction42 = jsonDiff38.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper43 = instruction42.oper;
        instruction35.oper = oper43;
        instruction25.oper = oper43;
        foodev.jsondiff.Oper oper46 = instruction25.oper;
        instruction21.oper = oper46;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff49 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper48);
        foodev.jsondiff.jsonwrap.Wrapper wrapper50 = jsonDiff49.factory;
        foodev.jsondiff.JsonDiff jsonDiff51 = new foodev.jsondiff.JsonDiff(wrapper50);
        foodev.jsondiff.Visitor<?> wildcardVisitor52 = jsonDiff51.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction54 = jsonDiff51.create("");
        instruction54.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper57 = instruction54.oper;
        instruction21.oper = oper57;
        foodev.jsondiff.Oper oper59 = instruction21.oper;
        foodev.jsondiff.Oper oper60 = instruction21.oper;
        java.lang.String str61 = instruction21.key;
        foodev.jsondiff.Oper oper62 = instruction21.oper;
        instruction6.oper = oper62;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement64 = jacksonWrapper0.wrap((java.lang.Object) oper62);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(oper26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(instruction35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(instruction42);
        org.junit.Assert.assertTrue("'" + oper43 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper43.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper46 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper46.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper50);
        org.junit.Assert.assertNull(wildcardVisitor52);
        org.junit.Assert.assertNotNull(instruction54);
        org.junit.Assert.assertTrue("'" + oper57 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper57.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper59 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper59.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper60 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper60.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str61, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + oper62 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper62.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14834");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.Leaf leaf10 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray11 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = jsonDiff8.accept(leaf10, jzonArray11, jzonObject12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test14835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14835");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException28);
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException16);
        java.lang.Class<?> wildcardClass37 = jacksonWrapperException16.getClass();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test14836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14836");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException26);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        jacksonWrapperException0.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException0);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray31);
    }

    @Test
    public void test14837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14837");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction5.key = "hi!";
        instruction5.index = 100;
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
    }

    @Test
    public void test14838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14838");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException6);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException7);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray5);
    }

    @Test
    public void test14839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14839");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("hi!");
        instruction8.index = '4';
        int int11 = instruction8.index;
        int int12 = instruction8.index;
        instruction8.index = '4';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff16.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff16.factory;
        int int21 = jsonDiff16.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff16.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper24);
        int int27 = jsonDiff25.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper28 = jsonDiff25.factory;
        int int30 = jsonDiff25.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff25.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper33 = jsonDiff25.factory;
        foodev.jsondiff.JsonDiff jsonDiff34 = new foodev.jsondiff.JsonDiff(wrapper33);
        int int36 = jsonDiff34.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction38 = jsonDiff34.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        boolean boolean39 = instruction38.isIndexed();
        foodev.jsondiff.Oper oper40 = instruction38.oper;
        instruction23.oper = oper40;
        instruction8.oper = oper40;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(wrapper28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertNotNull(wrapper33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(instruction38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + oper40 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper40.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14840");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper5);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = wrapper5.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(wrapper5);
    }

    @Test
    public void test14841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14841");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper4);
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff7.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff7.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int13 = jsonDiff7.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff7.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int16 = instruction15.index;
        instruction15.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = jacksonWrapper0.wrap((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test14842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14842");
        java.lang.Throwable throwable1 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", throwable1);
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray3);
    }

    @Test
    public void test14843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14843");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int10 = jsonDiff3.isIndexed("");
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement13, jzonElement14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test14844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14844");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = gsonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
    }

    @Test
    public void test14845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14845");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff14.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff14.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction18.index = (short) 100;
        boolean boolean21 = instruction18.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction22 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper23 = instruction22.oper;
        instruction22.key = "~";
        int int26 = instruction22.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper27);
        int int30 = jsonDiff28.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff28.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean33 = instruction32.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper34);
        int int37 = jsonDiff35.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction39 = jsonDiff35.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper40 = instruction39.oper;
        instruction32.oper = oper40;
        instruction22.oper = oper40;
        foodev.jsondiff.Oper oper43 = instruction22.oper;
        instruction18.oper = oper43;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff46 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper45);
        foodev.jsondiff.jsonwrap.Wrapper wrapper47 = jsonDiff46.factory;
        foodev.jsondiff.JsonDiff jsonDiff48 = new foodev.jsondiff.JsonDiff(wrapper47);
        foodev.jsondiff.Visitor<?> wildcardVisitor49 = jsonDiff48.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction51 = jsonDiff48.create("");
        instruction51.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper54 = instruction51.oper;
        instruction18.oper = oper54;
        java.lang.String str56 = instruction18.key;
        java.lang.String str57 = instruction18.key;
        boolean boolean58 = instruction18.isIndexed();
        foodev.jsondiff.Oper oper59 = instruction18.oper;
        instruction10.oper = oper59;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(oper23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(instruction39);
        org.junit.Assert.assertTrue("'" + oper40 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper40.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper43 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper43.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper47);
        org.junit.Assert.assertNull(wildcardVisitor49);
        org.junit.Assert.assertNotNull(instruction51);
        org.junit.Assert.assertTrue("'" + oper54 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper54.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str56, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str57, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + oper59 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper59.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14846");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff14.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff14.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException21.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException19.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException33.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException33);
        java.lang.Object obj36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj37 = jsonDiff14.diff((java.lang.Object) jacksonWrapperException33, obj36);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray34);
    }

    @Test
    public void test14847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14847");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int13 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        int int17 = jsonDiff15.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test14848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14848");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff9.create("~");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff17.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff17.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement22 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff9.applyPartial(jzonElement14, instruction21, jzonElement22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(instruction21);
    }

    @Test
    public void test14849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14849");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper16);
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff17.factory;
        int int20 = jsonDiff17.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor25 = jsonDiff17.getVisitor();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertNull(wildcardVisitor25);
    }

    @Test
    public void test14850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14850");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException9);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException26);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException33.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray42 = jacksonWrapperException41.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException43);
        jacksonWrapperException37.addSuppressed((java.lang.Throwable) jacksonWrapperException43);
        jacksonWrapperException35.addSuppressed((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray49 = jacksonWrapperException48.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException50);
        jacksonWrapperException37.addSuppressed((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException37);
        jacksonWrapperException30.addSuppressed((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException62);
        jacksonWrapperException30.addSuppressed((java.lang.Throwable) jacksonWrapperException62);
        java.lang.String str65 = jacksonWrapperException30.toString();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~" + "'", str65, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
    }

    @Test
    public void test14851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14851");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = jacksonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
    }

    @Test
    public void test14852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14852");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper16);
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff17.factory;
        int int20 = jsonDiff17.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper25 = jsonDiff17.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement26 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement27 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff17.apply(jzonElement26, jzonElement27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertNotNull(wrapper25);
    }

    @Test
    public void test14853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14853");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff9.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction13.index = (short) 100;
        boolean boolean16 = instruction13.isIndexed();
        java.lang.String str17 = instruction13.key;
        instruction13.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = jacksonWrapper0.wrap((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str17, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test14854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14854");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff5.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff5.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff5.getVisitor();
        int int14 = jsonDiff5.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Node node15 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        foodev.jsondiff.Leaf[] leafArray17 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList18 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList18, leafArray17);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap20 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf21 = jsonDiff5.findLeaves(node15, jzonElement16, (java.util.List<foodev.jsondiff.Leaf>) leafList18, intMap20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(leafArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test14855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14855");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("hi!");
        instruction8.index = '4';
        int int11 = instruction8.index;
        java.lang.String str12 = instruction8.key;
        foodev.jsondiff.Oper oper13 = instruction8.oper;
        java.lang.String str14 = instruction8.key;
        foodev.jsondiff.Oper oper15 = instruction8.oper;
        instruction8.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        instruction8.index = (short) -1;
        foodev.jsondiff.Oper oper20 = instruction8.oper;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + oper13 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper13.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertTrue("'" + oper15 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper15.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper20 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper20.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14856");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException30);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray42 = jacksonWrapperException41.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException43);
        jacksonWrapperException37.addSuppressed((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray50 = jacksonWrapperException49.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray54 = jacksonWrapperException53.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray58 = jacksonWrapperException57.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException59);
        jacksonWrapperException53.addSuppressed((java.lang.Throwable) jacksonWrapperException59);
        jacksonWrapperException51.addSuppressed((java.lang.Throwable) jacksonWrapperException53);
        jacksonWrapperException46.addSuppressed((java.lang.Throwable) jacksonWrapperException51);
        jacksonWrapperException30.addSuppressed((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException51);
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException51);
        java.lang.String str67 = jacksonWrapperException51.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str67, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test14857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14857");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray1 = jacksonWrapperException0.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException5);
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException5.getSuppressed();
        jacksonWrapperException0.addSuppressed((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException21.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException0.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray1);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray30);
    }

    @Test
    public void test14858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14858");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        int int10 = jsonDiff1.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff17.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff19.create("");
        int int23 = jsonDiff19.isIndexed("");
        int int25 = jsonDiff19.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff19.create("~");
        foodev.jsondiff.Oper oper28 = instruction27.oper;
        instruction27.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction27.index = 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff34 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper33);
        foodev.jsondiff.jsonwrap.Wrapper wrapper35 = jsonDiff34.factory;
        foodev.jsondiff.JsonDiff jsonDiff36 = new foodev.jsondiff.JsonDiff(wrapper35);
        foodev.jsondiff.JsonDiff.Instruction instruction38 = jsonDiff36.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor39 = jsonDiff36.getVisitor();
        int int41 = jsonDiff36.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor42 = jsonDiff36.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper43 = jsonDiff36.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction45 = jsonDiff36.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction47 = jsonDiff36.create("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = jsonDiff13.diff((java.lang.Object) instruction27, (java.lang.Object) "");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertTrue("'" + oper28 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper28.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper35);
        org.junit.Assert.assertNotNull(instruction38);
        org.junit.Assert.assertNull(wildcardVisitor39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor42);
        org.junit.Assert.assertNotNull(wrapper43);
        org.junit.Assert.assertNotNull(instruction45);
        org.junit.Assert.assertNotNull(instruction47);
    }

    @Test
    public void test14859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14859");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("hi!");
        int int15 = instruction14.index;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test14860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14860");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        int int6 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff4.getVisitor();
        int int11 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject16 = jsonDiff13.diff(jzonElement14, jzonElement15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test14861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14861");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean6 = instruction5.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff10.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff10.create("");
        instruction13.key = "hi!";
        int int16 = instruction13.index;
        foodev.jsondiff.Oper oper17 = instruction13.oper;
        instruction5.oper = oper17;
        int int19 = instruction5.index;
        java.lang.Class<?> wildcardClass20 = instruction5.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + oper17 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper17.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test14862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14862");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        foodev.jsondiff.Oper oper12 = instruction11.oper;
        java.lang.String str13 = instruction11.key;
        int int14 = instruction11.index;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + oper12 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper12.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test14863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14863");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int6 = instruction5.index;
        java.lang.String str7 = instruction5.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper8);
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff11.create("");
        int int15 = jsonDiff11.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff11.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff11.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction19.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction19.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.JsonDiff.Instruction instruction24 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper25 = instruction24.oper;
        instruction24.key = "~";
        instruction24.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff31 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper30);
        foodev.jsondiff.jsonwrap.Wrapper wrapper32 = jsonDiff31.factory;
        foodev.jsondiff.JsonDiff jsonDiff33 = new foodev.jsondiff.JsonDiff(wrapper32);
        foodev.jsondiff.JsonDiff.Instruction instruction35 = jsonDiff33.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction37 = jsonDiff33.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction37.index = (short) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff41 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper40);
        foodev.jsondiff.jsonwrap.Wrapper wrapper42 = jsonDiff41.factory;
        foodev.jsondiff.JsonDiff jsonDiff43 = new foodev.jsondiff.JsonDiff(wrapper42);
        foodev.jsondiff.JsonDiff.Instruction instruction45 = jsonDiff43.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction47 = jsonDiff43.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction47.index = (short) 100;
        boolean boolean50 = instruction47.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction51 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper52 = instruction51.oper;
        instruction51.key = "~";
        int int55 = instruction51.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff57 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper56);
        int int59 = jsonDiff57.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction61 = jsonDiff57.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean62 = instruction61.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff64 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper63);
        int int66 = jsonDiff64.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction68 = jsonDiff64.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper69 = instruction68.oper;
        instruction61.oper = oper69;
        instruction51.oper = oper69;
        foodev.jsondiff.Oper oper72 = instruction51.oper;
        instruction47.oper = oper72;
        instruction37.oper = oper72;
        instruction24.oper = oper72;
        instruction19.oper = oper72;
        instruction5.oper = oper72;
        foodev.jsondiff.Oper oper78 = instruction5.oper;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str7, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertNull(oper25);
        org.junit.Assert.assertNotNull(wrapper32);
        org.junit.Assert.assertNotNull(instruction35);
        org.junit.Assert.assertNotNull(instruction37);
        org.junit.Assert.assertNotNull(wrapper42);
        org.junit.Assert.assertNotNull(instruction45);
        org.junit.Assert.assertNotNull(instruction47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(oper52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(instruction61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(instruction68);
        org.junit.Assert.assertTrue("'" + oper69 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper69.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper72 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper72.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper78 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper78.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14864");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction11.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        int int14 = instruction11.index;
        java.lang.String str15 = instruction11.key;
        int int16 = instruction11.index;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str15, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test14865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14865");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException14);
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
    }

    @Test
    public void test14866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14866");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff1.getVisitor();
        int int14 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement15, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test14867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14867");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int14 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        java.lang.Class<?> wildcardClass17 = jsonDiff16.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test14868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14868");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff7.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff7.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.Node node14 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        foodev.jsondiff.Leaf[] leafArray16 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList17 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList17, leafArray16);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap19 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf20 = jsonDiff12.findLeaves(node14, jzonElement15, (java.util.List<foodev.jsondiff.Leaf>) leafList17, intMap19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(leafArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test14869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14869");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff14.getVisitor();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNull(wildcardVisitor15);
    }

    @Test
    public void test14870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14870");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        int int11 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException15);
        java.lang.Class<?> wildcardClass24 = jacksonWrapperException23.getClass();
        java.lang.Object obj25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj26 = jsonDiff1.diff((java.lang.Object) jacksonWrapperException23, obj25);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test14871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14871");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int10 = jsonDiff3.isIndexed("");
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff14.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        java.lang.Class<?> wildcardClass17 = wrapper15.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test14872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14872");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException22);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException31.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException33);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException38.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray43 = jacksonWrapperException42.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException44);
        jacksonWrapperException38.addSuppressed((java.lang.Throwable) jacksonWrapperException44);
        jacksonWrapperException37.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        java.lang.String str51 = jacksonWrapperException12.toString();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str51, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test14873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14873");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int13 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement16, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
    }

    @Test
    public void test14874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14874");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException5);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement21 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException5);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
    }

    @Test
    public void test14875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14875");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        java.lang.Throwable throwable5 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", throwable5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException7);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = gsonWrapper0.wrap((java.lang.Object) jacksonWrapperException8);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test14876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14876");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff1.getVisitor();
        int int10 = jsonDiff1.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(instruction14);
    }

    @Test
    public void test14877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14877");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        int int11 = jsonDiff9.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        int int16 = jsonDiff14.isIndexed("hi!");
        int int18 = jsonDiff14.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff14.factory;
        int int21 = jsonDiff14.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff14.factory;
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper22);
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff(wrapper22);
        foodev.jsondiff.Visitor<?> wildcardVisitor25 = jsonDiff24.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper26);
        int int29 = jsonDiff27.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction31 = jsonDiff27.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean32 = instruction31.isIndexed();
        foodev.jsondiff.Oper oper33 = null;
        instruction31.oper = oper33;
        instruction31.index = ' ';
        foodev.jsondiff.Oper oper37 = instruction31.oper;
        instruction31.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        java.lang.String str40 = instruction31.key;
        int int41 = instruction31.index;
        int int42 = instruction31.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff44 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper43);
        foodev.jsondiff.jsonwrap.Wrapper wrapper45 = jsonDiff44.factory;
        foodev.jsondiff.JsonDiff jsonDiff46 = new foodev.jsondiff.JsonDiff(wrapper45);
        foodev.jsondiff.JsonDiff.Instruction instruction48 = jsonDiff46.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction50 = jsonDiff46.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction50.index = (short) 100;
        boolean boolean53 = instruction50.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction54 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper55 = instruction54.oper;
        instruction54.key = "~";
        int int58 = instruction54.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff60 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper59);
        int int62 = jsonDiff60.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction64 = jsonDiff60.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean65 = instruction64.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff67 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper66);
        int int69 = jsonDiff67.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction71 = jsonDiff67.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper72 = instruction71.oper;
        instruction64.oper = oper72;
        instruction54.oper = oper72;
        foodev.jsondiff.Oper oper75 = instruction54.oper;
        instruction50.oper = oper75;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper77 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff78 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper77);
        foodev.jsondiff.jsonwrap.Wrapper wrapper79 = jsonDiff78.factory;
        foodev.jsondiff.JsonDiff jsonDiff80 = new foodev.jsondiff.JsonDiff(wrapper79);
        foodev.jsondiff.Visitor<?> wildcardVisitor81 = jsonDiff80.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction83 = jsonDiff80.create("");
        instruction83.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper86 = instruction83.oper;
        instruction50.oper = oper86;
        foodev.jsondiff.Oper oper88 = instruction50.oper;
        foodev.jsondiff.Oper oper89 = instruction50.oper;
        java.lang.String str90 = instruction50.key;
        foodev.jsondiff.Oper oper91 = instruction50.oper;
        instruction31.oper = oper91;
        instruction31.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        int int95 = instruction31.index;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj96 = jsonDiff9.diff((java.lang.Object) wildcardVisitor25, (java.lang.Object) int95);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Integer cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNull(wildcardVisitor25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(instruction31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(oper37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str40, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 32 + "'", int41 == 32);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 32 + "'", int42 == 32);
        org.junit.Assert.assertNotNull(wrapper45);
        org.junit.Assert.assertNotNull(instruction48);
        org.junit.Assert.assertNotNull(instruction50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(oper55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(instruction64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(instruction71);
        org.junit.Assert.assertTrue("'" + oper72 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper72.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper75 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper75.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper79);
        org.junit.Assert.assertNull(wildcardVisitor81);
        org.junit.Assert.assertNotNull(instruction83);
        org.junit.Assert.assertTrue("'" + oper86 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper86.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper88 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper88.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper89 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper89.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str90, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + oper91 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper91.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 32 + "'", int95 == 32);
    }

    @Test
    public void test14878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14878");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int12 = jsonDiff1.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        instruction14.index = 'a';
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
    }

    @Test
    public void test14879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14879");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray42 = jacksonWrapperException41.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException43);
        jacksonWrapperException37.addSuppressed((java.lang.Throwable) jacksonWrapperException43);
        jacksonWrapperException36.addSuppressed((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException37);
        jacksonWrapperException19.addSuppressed((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray51 = jacksonWrapperException50.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray55 = jacksonWrapperException54.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException56);
        jacksonWrapperException50.addSuppressed((java.lang.Throwable) jacksonWrapperException56);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException56);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException56);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray63 = jacksonWrapperException62.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException62);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException64);
        jacksonWrapperException56.addSuppressed((java.lang.Throwable) jacksonWrapperException64);
        jacksonWrapperException37.addSuppressed((java.lang.Throwable) jacksonWrapperException64);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException68);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException68);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException70);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement72 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException70);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(throwableArray63);
    }

    @Test
    public void test14880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14880");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper14);
        int int17 = jsonDiff15.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff15.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff15.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff15.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff15.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor24 = jsonDiff15.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor25 = jsonDiff15.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff15.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Oper oper28 = instruction27.oper;
        foodev.jsondiff.Oper oper29 = instruction27.oper;
        instruction13.oper = oper29;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertNull(wildcardVisitor24);
        org.junit.Assert.assertNull(wildcardVisitor25);
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertTrue("'" + oper28 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper28.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper29 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper29.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14881");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff9.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = jsonDiff9.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test14882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14882");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction12);
    }

    @Test
    public void test14883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14883");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff3.create("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor18 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor20 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor21 = jsonDiff3.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNull(wildcardVisitor18);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNull(wildcardVisitor20);
        org.junit.Assert.assertNull(wildcardVisitor21);
    }

    @Test
    public void test14884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14884");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int14 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement16, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wrapper15);
    }

    @Test
    public void test14885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14885");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException14);
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException6);
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException28.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray30);
    }

    @Test
    public void test14886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14886");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff6.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff6.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff6.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff6.factory;
        int int13 = jsonDiff6.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test14887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14887");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean10 = instruction9.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff14.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int17 = instruction16.index;
        java.lang.String str18 = instruction16.key;
        int int19 = instruction16.index;
        foodev.jsondiff.Oper oper20 = instruction16.oper;
        foodev.jsondiff.Oper oper21 = instruction16.oper;
        instruction9.oper = oper21;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper23);
        int int26 = jsonDiff24.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper29 = instruction28.oper;
        boolean boolean30 = instruction28.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff32 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper31);
        int int34 = jsonDiff32.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction36 = jsonDiff32.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper37 = instruction36.oper;
        int int38 = instruction36.index;
        java.lang.String str39 = instruction36.key;
        int int40 = instruction36.index;
        instruction36.index = (short) 0;
        foodev.jsondiff.Oper oper43 = instruction36.oper;
        instruction28.oper = oper43;
        foodev.jsondiff.Oper oper45 = instruction28.oper;
        instruction9.oper = oper45;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str18, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + oper20 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper20.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper21 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper21.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertTrue("'" + oper29 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper29.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(instruction36);
        org.junit.Assert.assertTrue("'" + oper37 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper37.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str39, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + oper43 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper43.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper45 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper45.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14888");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException28);
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException37.addSuppressed((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray42 = jacksonWrapperException41.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException45.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException47);
        jacksonWrapperException41.addSuppressed((java.lang.Throwable) jacksonWrapperException47);
        jacksonWrapperException37.addSuppressed((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray53 = jacksonWrapperException52.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray57 = jacksonWrapperException56.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException56);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException58);
        jacksonWrapperException52.addSuppressed((java.lang.Throwable) jacksonWrapperException58);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException58);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException58);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray64 = jacksonWrapperException63.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException63);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray68 = jacksonWrapperException67.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException67);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException69);
        jacksonWrapperException63.addSuppressed((java.lang.Throwable) jacksonWrapperException69);
        jacksonWrapperException62.addSuppressed((java.lang.Throwable) jacksonWrapperException63);
        jacksonWrapperException37.addSuppressed((java.lang.Throwable) jacksonWrapperException63);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException74 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException63);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException74);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException76 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException11);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(throwableArray68);
    }

    @Test
    public void test14889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14889");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff12.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = wrapper15.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
    }

    @Test
    public void test14890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14890");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int6 = instruction5.index;
        boolean boolean7 = instruction5.isIndexed();
        instruction5.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("");
        boolean boolean16 = instruction15.isIndexed();
        instruction15.index = (short) -1;
        foodev.jsondiff.Oper oper19 = instruction15.oper;
        instruction5.oper = oper19;
        instruction5.index = '4';
        instruction5.index = 97;
        foodev.jsondiff.Oper oper25 = instruction5.oper;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + oper19 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper19.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper25 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper25.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14891");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff13.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = wrapper15.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(wrapper15);
    }

    @Test
    public void test14892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14892");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = jsonDiff6.diff("", "hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(wrapper5);
    }

    @Test
    public void test14893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14893");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean6 = instruction5.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        int int10 = jsonDiff8.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper13 = instruction12.oper;
        instruction5.oper = oper13;
        boolean boolean15 = instruction5.isIndexed();
        foodev.jsondiff.Oper oper16 = instruction5.oper;
        foodev.jsondiff.Oper oper17 = instruction5.oper;
        instruction5.index = (-1);
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + oper13 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper13.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + oper16 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper16.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper17 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper17.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14894");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff1.getVisitor();
        int int10 = jsonDiff1.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper15 = instruction14.oper;
        instruction14.index = (-1);
        java.lang.String str18 = instruction14.key;
        boolean boolean19 = instruction14.isIndexed();
        instruction14.index = (short) 0;
        foodev.jsondiff.Oper oper22 = instruction14.oper;
        boolean boolean23 = instruction14.isIndexed();
        int int24 = instruction14.index;
        instruction14.index = '4';
        instruction14.key = "";
        int int29 = instruction14.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff31 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper30);
        foodev.jsondiff.jsonwrap.Wrapper wrapper32 = jsonDiff31.factory;
        foodev.jsondiff.JsonDiff jsonDiff33 = new foodev.jsondiff.JsonDiff(wrapper32);
        foodev.jsondiff.JsonDiff.Instruction instruction35 = jsonDiff33.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction37 = jsonDiff33.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction39 = jsonDiff33.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction41 = jsonDiff33.create("hi!");
        instruction41.index = (short) 0;
        int int44 = instruction41.index;
        instruction41.index = (short) 10;
        java.lang.String str47 = instruction41.key;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = jsonDiff1.diff((java.lang.Object) instruction14, (java.lang.Object) instruction41);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(oper15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(oper22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertNotNull(wrapper32);
        org.junit.Assert.assertNotNull(instruction35);
        org.junit.Assert.assertNotNull(instruction37);
        org.junit.Assert.assertNotNull(instruction39);
        org.junit.Assert.assertNotNull(instruction41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
    }

    @Test
    public void test14895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14895");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        int int13 = jsonDiff11.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff11.factory;
        int int16 = jsonDiff11.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff11.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = wrapper17.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wrapper17);
    }

    @Test
    public void test14896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14896");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff10.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff12.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff12.create("");
        boolean boolean16 = instruction15.isIndexed();
        java.lang.String str17 = instruction15.key;
        foodev.jsondiff.Oper oper18 = instruction15.oper;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff5.applyPartial(jzonElement8, instruction15, jzonElement19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(wildcardVisitor13);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + oper18 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper18.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14897");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException9);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
    }

    @Test
    public void test14898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14898");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        boolean boolean9 = instruction8.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("");
        int int16 = instruction15.index;
        boolean boolean17 = instruction15.isIndexed();
        instruction15.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper20);
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff21.factory;
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper22);
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff23.create("");
        boolean boolean26 = instruction25.isIndexed();
        instruction25.index = (short) -1;
        foodev.jsondiff.Oper oper29 = instruction25.oper;
        instruction15.oper = oper29;
        foodev.jsondiff.JsonDiff.Instruction instruction31 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper32 = instruction31.oper;
        instruction31.key = "~";
        java.lang.String str35 = instruction31.key;
        foodev.jsondiff.JsonDiff.Instruction instruction36 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper37 = instruction36.oper;
        instruction36.index = (-1);
        java.lang.String str40 = instruction36.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff42 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper41);
        foodev.jsondiff.jsonwrap.Wrapper wrapper43 = jsonDiff42.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction45 = jsonDiff42.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction46 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction46.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff50 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper49);
        int int52 = jsonDiff50.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction54 = jsonDiff50.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper55 = instruction54.oper;
        instruction46.oper = oper55;
        instruction45.oper = oper55;
        instruction36.oper = oper55;
        instruction31.oper = oper55;
        instruction15.oper = oper55;
        instruction8.oper = oper55;
        instruction8.index = 0;
        instruction8.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        instruction8.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        instruction8.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        java.lang.String str70 = instruction8.key;
        boolean boolean71 = instruction8.isIndexed();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + oper29 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper29.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNull(oper32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "~" + "'", str35, "~");
        org.junit.Assert.assertNull(oper37);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(wrapper43);
        org.junit.Assert.assertNotNull(instruction45);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(instruction54);
        org.junit.Assert.assertTrue("'" + oper55 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper55.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str70, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test14899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14899");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction11.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction11.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
    }

    @Test
    public void test14900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14900");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = gsonWrapper0.wrap((java.lang.Object) jacksonWrapperException5);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray18);
    }

    @Test
    public void test14901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14901");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff9.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        int int14 = jsonDiff12.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff18.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff18.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction22.index = (short) 100;
        boolean boolean25 = instruction22.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction26 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper27 = instruction26.oper;
        instruction26.key = "~";
        int int30 = instruction26.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff32 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper31);
        int int34 = jsonDiff32.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction36 = jsonDiff32.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean37 = instruction36.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff39 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper38);
        int int41 = jsonDiff39.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction43 = jsonDiff39.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper44 = instruction43.oper;
        instruction36.oper = oper44;
        instruction26.oper = oper44;
        foodev.jsondiff.Oper oper47 = instruction26.oper;
        instruction22.oper = oper47;
        instruction22.index = (-1);
        boolean boolean51 = instruction22.isIndexed();
        boolean boolean52 = instruction22.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff54 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper53);
        foodev.jsondiff.jsonwrap.Wrapper wrapper55 = jsonDiff54.factory;
        foodev.jsondiff.JsonDiff jsonDiff56 = new foodev.jsondiff.JsonDiff(wrapper55);
        foodev.jsondiff.JsonDiff.Instruction instruction58 = jsonDiff56.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor59 = jsonDiff56.getVisitor();
        int int61 = jsonDiff56.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction63 = jsonDiff56.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor64 = jsonDiff56.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj65 = jsonDiff12.diff((java.lang.Object) boolean52, (java.lang.Object) wildcardVisitor64);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Boolean cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(oper27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(instruction36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(instruction43);
        org.junit.Assert.assertTrue("'" + oper44 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper44.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper47 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper47.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wrapper55);
        org.junit.Assert.assertNotNull(instruction58);
        org.junit.Assert.assertNull(wildcardVisitor59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(instruction63);
        org.junit.Assert.assertNull(wildcardVisitor64);
    }

    @Test
    public void test14902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14902");
        foodev.jsondiff.JsonDiff.Instruction instruction0 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper1 = instruction0.oper;
        instruction0.index = (-1);
        java.lang.String str4 = instruction0.key;
        instruction0.key = "~";
        int int7 = instruction0.index;
        int int8 = instruction0.index;
        int int9 = instruction0.index;
        instruction0.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        org.junit.Assert.assertNull(oper1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test14903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14903");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException35);
        jacksonWrapperException19.addSuppressed((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray44 = jacksonWrapperException43.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray48 = jacksonWrapperException47.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray52 = jacksonWrapperException51.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException53);
        jacksonWrapperException47.addSuppressed((java.lang.Throwable) jacksonWrapperException53);
        jacksonWrapperException45.addSuppressed((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException47);
        java.lang.Throwable[] throwableArray60 = jacksonWrapperException47.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException47);
        jacksonWrapperException35.addSuppressed((java.lang.Throwable) jacksonWrapperException61);
        java.lang.Class<?> wildcardClass63 = jacksonWrapperException61.getClass();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement64 = gsonWrapper0.wrap((java.lang.Object) wildcardClass63);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Class cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test14904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14904");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int14 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement15, jzonElement16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test14905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14905");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff3.create("~");
        int int19 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff3.factory;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertNotNull(wrapper22);
    }

    @Test
    public void test14906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14906");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper6 = instruction5.oper;
        instruction5.key = "~";
        instruction5.key = "";
        foodev.jsondiff.JsonDiff.Instruction instruction11 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction11.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper14);
        int int17 = jsonDiff15.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff15.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper20 = instruction19.oper;
        instruction11.oper = oper20;
        instruction5.oper = oper20;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement23 = jacksonWrapper0.wrap((java.lang.Object) instruction5);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(oper6);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertTrue("'" + oper20 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper20.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14907");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        int int9 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff14.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff14.checkIndex(jzonElement16, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper15);
    }

    @Test
    public void test14908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14908");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = wrapper9.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test14909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14909");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction13.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        instruction13.index = 0;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
    }

    @Test
    public void test14910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14910");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException23.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray35 = jacksonWrapperException34.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException38.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException40);
        jacksonWrapperException34.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        jacksonWrapperException33.addSuppressed((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException44);
        jacksonWrapperException19.addSuppressed((java.lang.Throwable) jacksonWrapperException44);
        java.lang.Throwable[] throwableArray47 = jacksonWrapperException19.getSuppressed();
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException15);
        java.lang.Throwable[] throwableArray50 = jacksonWrapperException49.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray50);
    }

    @Test
    public void test14911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14911");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException6.getSuppressed();
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException31.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException33);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException38.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray43 = jacksonWrapperException42.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException44);
        jacksonWrapperException38.addSuppressed((java.lang.Throwable) jacksonWrapperException44);
        jacksonWrapperException37.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray52 = jacksonWrapperException51.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray56 = jacksonWrapperException55.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException55);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException57);
        jacksonWrapperException51.addSuppressed((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray64 = jacksonWrapperException63.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException63);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException65);
        jacksonWrapperException57.addSuppressed((java.lang.Throwable) jacksonWrapperException65);
        jacksonWrapperException38.addSuppressed((java.lang.Throwable) jacksonWrapperException65);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException65);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException69);
        java.lang.Throwable[] throwableArray71 = jacksonWrapperException69.getSuppressed();
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException69);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException74 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray75 = jacksonWrapperException74.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException76 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException74);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException78 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray79 = jacksonWrapperException78.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException80 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException78);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException81 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException80);
        jacksonWrapperException74.addSuppressed((java.lang.Throwable) jacksonWrapperException80);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException83 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException80);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException87 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException88 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException87);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException89 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException87);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException90 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException89);
        jacksonWrapperException83.addSuppressed((java.lang.Throwable) jacksonWrapperException89);
        java.lang.Throwable[] throwableArray92 = jacksonWrapperException89.getSuppressed();
        jacksonWrapperException69.addSuppressed((java.lang.Throwable) jacksonWrapperException89);
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(throwableArray79);
        org.junit.Assert.assertNotNull(throwableArray92);
    }

    @Test
    public void test14912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14912");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        boolean boolean6 = instruction5.isIndexed();
        instruction5.index = (byte) 10;
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction5.index = (byte) 10;
        foodev.jsondiff.Oper oper13 = instruction5.oper;
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        int int16 = instruction5.index;
        int int17 = instruction5.index;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + oper13 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper13.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10 + "'", int17 == 10);
    }

    @Test
    public void test14913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14913");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff12.getVisitor();
        foodev.jsondiff.Node node14 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        foodev.jsondiff.Leaf[] leafArray16 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList17 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList17, leafArray16);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap19 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf20 = jsonDiff12.findLeaves(node14, jzonElement15, (java.util.List<foodev.jsondiff.Leaf>) leafList17, intMap19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor13);
        org.junit.Assert.assertNotNull(leafArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test14914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14914");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        int int9 = jsonDiff7.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff7.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff7.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = jsonDiff7.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(instruction12);
    }

    @Test
    public void test14915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14915");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException12);
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException15);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray16);
    }

    @Test
    public void test14916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14916");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException10);
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException5.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray12);
    }

    @Test
    public void test14917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14917");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = wrapper9.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test14918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14918");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff2.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff2.getVisitor();
        int int9 = jsonDiff2.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff18.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor21 = jsonDiff18.getVisitor();
        int int23 = jsonDiff18.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor24 = jsonDiff18.getVisitor();
        int int26 = jsonDiff18.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int28 = jsonDiff18.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement29 = wrapper10.wrap((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertNull(wildcardVisitor21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test14919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14919");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        java.lang.Class<?> wildcardClass10 = wrapper9.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test14920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14920");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff3.getVisitor();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNull(wildcardVisitor15);
    }

    @Test
    public void test14921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14921");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement13, jzonElement14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test14922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14922");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement9, jzonElement10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
    }

    @Test
    public void test14923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14923");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException16);
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException26.getSuppressed();
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException41);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray36);
    }

    @Test
    public void test14924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14924");
        foodev.jsondiff.JsonDiff.Instruction instruction0 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper1 = instruction0.oper;
        instruction0.index = (-1);
        java.lang.String str4 = instruction0.key;
        instruction0.key = "~";
        int int7 = instruction0.index;
        boolean boolean8 = instruction0.isIndexed();
        instruction0.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        boolean boolean11 = instruction0.isIndexed();
        org.junit.Assert.assertNull(oper1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test14925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14925");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff6.getVisitor();
        int int9 = jsonDiff6.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff6.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = jsonDiff6.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor10);
    }

    @Test
    public void test14926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14926");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("hi!");
        instruction8.index = '4';
        instruction8.index = 97;
        int int13 = instruction8.index;
        instruction8.index = ' ';
        foodev.jsondiff.Oper oper16 = instruction8.oper;
        instruction8.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        int int19 = instruction8.index;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertTrue("'" + oper16 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper16.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
    }

    @Test
    public void test14927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14927");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction14.key = "";
        instruction14.index = 'a';
        instruction14.index = 1;
        boolean boolean21 = instruction14.isIndexed();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement22 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement13, instruction14, jzonElement22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test14928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14928");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        boolean boolean6 = instruction5.isIndexed();
        boolean boolean7 = instruction5.isIndexed();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test14929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14929");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~");
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException28);
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException3);
        java.lang.Throwable throwable38 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", throwable38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException39);
        java.lang.Throwable[] throwableArray41 = jacksonWrapperException40.getSuppressed();
        jacksonWrapperException35.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray41);
    }

    @Test
    public void test14930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14930");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject12 = jsonDiff3.diff(jzonElement10, jzonElement11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
    }

    @Test
    public void test14931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14931");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper4);
        int int7 = jsonDiff5.isIndexed("hi!");
        int int9 = jsonDiff5.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff5.factory;
        int int12 = jsonDiff5.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff5.factory;
        int int15 = jsonDiff5.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int17 = jsonDiff5.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff5.create("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor20 = jsonDiff5.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper21 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff(wrapper21);
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper21);
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff(wrapper21);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement25 = jacksonWrapper0.wrap((java.lang.Object) wrapper21);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertNull(wildcardVisitor20);
        org.junit.Assert.assertNotNull(wrapper21);
    }

    @Test
    public void test14932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14932");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction7.index = (short) 100;
        boolean boolean10 = instruction7.isIndexed();
        instruction7.index = (short) 10;
        boolean boolean13 = instruction7.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper14);
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff15.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff15.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff15.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper21);
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff22.factory;
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff(wrapper23);
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int27 = instruction26.index;
        foodev.jsondiff.JsonDiff.Instruction instruction28 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper29 = instruction28.oper;
        boolean boolean30 = instruction28.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff32 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper31);
        foodev.jsondiff.jsonwrap.Wrapper wrapper33 = jsonDiff32.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction35 = jsonDiff32.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction36 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction36.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff40 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper39);
        int int42 = jsonDiff40.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction44 = jsonDiff40.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper45 = instruction44.oper;
        instruction36.oper = oper45;
        instruction35.oper = oper45;
        instruction28.oper = oper45;
        instruction26.oper = oper45;
        instruction20.oper = oper45;
        instruction7.oper = oper45;
        boolean boolean52 = instruction7.isIndexed();
        instruction7.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(oper29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wrapper33);
        org.junit.Assert.assertNotNull(instruction35);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(instruction44);
        org.junit.Assert.assertTrue("'" + oper45 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper45.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test14933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14933");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int12 = jsonDiff1.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Leaf leaf17 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray18 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = jsonDiff1.accept(leaf17, jzonArray18, jzonObject19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(instruction16);
    }

    @Test
    public void test14934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14934");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean6 = instruction5.isIndexed();
        foodev.jsondiff.Oper oper7 = null;
        instruction5.oper = oper7;
        instruction5.index = ' ';
        foodev.jsondiff.Oper oper11 = instruction5.oper;
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        java.lang.String str14 = instruction5.key;
        int int15 = instruction5.index;
        java.lang.String str16 = instruction5.key;
        boolean boolean17 = instruction5.isIndexed();
        foodev.jsondiff.Oper oper18 = instruction5.oper;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(oper11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str14, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 32 + "'", int15 == 32);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str16, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(oper18);
    }

    @Test
    public void test14935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14935");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException23.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException36);
        jacksonWrapperException29.addSuppressed((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray44 = jacksonWrapperException43.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray48 = jacksonWrapperException47.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException49);
        jacksonWrapperException43.addSuppressed((java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException53);
        jacksonWrapperException37.addSuppressed((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray62 = jacksonWrapperException61.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException61);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException63);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray66 = jacksonWrapperException65.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException65);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray70 = jacksonWrapperException69.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException71 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException69);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException72 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException71);
        jacksonWrapperException65.addSuppressed((java.lang.Throwable) jacksonWrapperException71);
        jacksonWrapperException63.addSuppressed((java.lang.Throwable) jacksonWrapperException65);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException75 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException65);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException76 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException65);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException77 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException65);
        java.lang.Throwable[] throwableArray78 = jacksonWrapperException65.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException79 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException65);
        jacksonWrapperException53.addSuppressed((java.lang.Throwable) jacksonWrapperException79);
        jacksonWrapperException21.addSuppressed((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException82 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException21);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertNotNull(throwableArray78);
    }

    @Test
    public void test14936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14936");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException21.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException30);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException36.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException36.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray41 = jacksonWrapperException40.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray45 = jacksonWrapperException44.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException46);
        jacksonWrapperException40.addSuppressed((java.lang.Throwable) jacksonWrapperException46);
        jacksonWrapperException36.addSuppressed((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException51);
        jacksonWrapperException32.addSuppressed((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        java.lang.String str55 = jacksonWrapperException32.toString();
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str55, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test14937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14937");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper6 = instruction5.oper;
        int int7 = instruction5.index;
        java.lang.String str8 = instruction5.key;
        int int9 = instruction5.index;
        foodev.jsondiff.Oper oper10 = instruction5.oper;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + oper6 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper6.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str8, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + oper10 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper10.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14938");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean6 = instruction5.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        int int10 = jsonDiff8.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper13 = instruction12.oper;
        instruction5.oper = oper13;
        int int15 = instruction5.index;
        java.lang.String str16 = instruction5.key;
        foodev.jsondiff.Oper oper17 = instruction5.oper;
        instruction5.index = (short) 100;
        boolean boolean20 = instruction5.isIndexed();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + oper13 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper13.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str16, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + oper17 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper17.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test14939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14939");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction7.index = (short) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction17.index = (short) 100;
        boolean boolean20 = instruction17.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction21 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper22 = instruction21.oper;
        instruction21.key = "~";
        int int25 = instruction21.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper26);
        int int29 = jsonDiff27.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction31 = jsonDiff27.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean32 = instruction31.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff34 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper33);
        int int36 = jsonDiff34.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction38 = jsonDiff34.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper39 = instruction38.oper;
        instruction31.oper = oper39;
        instruction21.oper = oper39;
        foodev.jsondiff.Oper oper42 = instruction21.oper;
        instruction17.oper = oper42;
        instruction7.oper = oper42;
        foodev.jsondiff.Oper oper45 = instruction7.oper;
        foodev.jsondiff.Oper oper46 = instruction7.oper;
        boolean boolean47 = instruction7.isIndexed();
        instruction7.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(oper22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(instruction31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(instruction38);
        org.junit.Assert.assertTrue("'" + oper39 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper39.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper42 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper42.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper45 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper45.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper46 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper46.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test14940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14940");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject14 = jsonDiff1.diff(jzonElement12, jzonElement13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
    }

    @Test
    public void test14941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14941");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException9);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException12);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
    }

    @Test
    public void test14942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14942");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = gsonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: hi!");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
    }

    @Test
    public void test14943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14943");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper8);
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
    }

    @Test
    public void test14944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14944");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int11 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject14 = jsonDiff1.diff(jzonElement12, jzonElement13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test14945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14945");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper3);
        int int6 = jsonDiff4.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff10.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = jacksonWrapper0.wrap((java.lang.Object) jsonDiff10);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor11);
    }

    @Test
    public void test14946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14946");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        int int12 = jsonDiff3.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException22);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException33.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException35);
        jacksonWrapperException29.addSuppressed((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray41 = jacksonWrapperException40.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray45 = jacksonWrapperException44.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException46);
        jacksonWrapperException40.addSuppressed((java.lang.Throwable) jacksonWrapperException46);
        jacksonWrapperException39.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException40);
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray54 = jacksonWrapperException53.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException53.addSuppressed((java.lang.Throwable) jacksonWrapperException55);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException53);
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException58);
        java.lang.Throwable[] throwableArray60 = jacksonWrapperException58.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray64 = jacksonWrapperException63.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException63);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException65);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray68 = jacksonWrapperException67.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException67);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException71 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray72 = jacksonWrapperException71.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException73 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException71);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException74 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException73);
        jacksonWrapperException67.addSuppressed((java.lang.Throwable) jacksonWrapperException73);
        jacksonWrapperException65.addSuppressed((java.lang.Throwable) jacksonWrapperException67);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException77 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException67);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException78 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException77);
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) jacksonWrapperException58, (java.lang.Object) "");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor13);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(throwableArray72);
    }

    @Test
    public void test14947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14947");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        int int5 = jsonDiff2.isIndexed("");
        int int7 = jsonDiff2.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff2.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.Leaf leaf12 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray13 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = jsonDiff11.accept(leaf12, jzonArray13, jzonObject14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test14948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14948");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        java.lang.String str20 = jacksonWrapperException13.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str20, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test14949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14949");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean6 = instruction5.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        int int10 = jsonDiff8.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper13 = instruction12.oper;
        instruction5.oper = oper13;
        int int15 = instruction5.index;
        instruction5.index = 97;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper18);
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff19.factory;
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff(wrapper20);
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff21.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff21.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction25.index = (byte) 10;
        foodev.jsondiff.Oper oper28 = instruction25.oper;
        instruction5.oper = oper28;
        java.lang.String str30 = instruction5.key;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + oper13 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper13.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertTrue("'" + oper28 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper28.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str30, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test14950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14950");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff4.create("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff4.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff4.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff4.create("hi!");
        int int14 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff4.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff4.checkIndex(jzonElement16, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor15);
    }

    @Test
    public void test14951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14951");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff6.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff6.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff6.getVisitor();
        foodev.jsondiff.Leaf leaf10 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray11 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = jsonDiff6.accept(leaf10, jzonArray11, jzonObject12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor9);
    }

    @Test
    public void test14952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14952");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff3.create("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor18 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor20 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor21 = jsonDiff3.getVisitor();
        int int23 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException39.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray44 = jacksonWrapperException43.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException45);
        jacksonWrapperException39.addSuppressed((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray51 = jacksonWrapperException50.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray55 = jacksonWrapperException54.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException56);
        jacksonWrapperException50.addSuppressed((java.lang.Throwable) jacksonWrapperException56);
        jacksonWrapperException49.addSuppressed((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException50);
        jacksonWrapperException32.addSuppressed((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray63 = jacksonWrapperException62.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException62);
        jacksonWrapperException50.addSuppressed((java.lang.Throwable) jacksonWrapperException64);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException64);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException64);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException67);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException68);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException68);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper71 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff72 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper71);
        int int74 = jsonDiff72.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor75 = jsonDiff72.getVisitor();
        int int77 = jsonDiff72.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper78 = jsonDiff72.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction80 = jsonDiff72.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper81 = jsonDiff72.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj82 = jsonDiff3.diff((java.lang.Object) jacksonWrapperException70, (java.lang.Object) jsonDiff72);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNull(wildcardVisitor18);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNull(wildcardVisitor20);
        org.junit.Assert.assertNull(wildcardVisitor21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(wrapper78);
        org.junit.Assert.assertNotNull(instruction80);
        org.junit.Assert.assertNotNull(wrapper81);
    }

    @Test
    public void test14953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14953");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        int int11 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int13 = jsonDiff1.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff1.create("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper17);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement22 = wrapper17.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(wrapper17);
    }

    @Test
    public void test14954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14954");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff5.create("");
        int int9 = jsonDiff5.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff5.create("");
        java.lang.String str13 = instruction12.key;
        foodev.jsondiff.Oper oper14 = instruction12.oper;
        instruction12.index = 52;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = jacksonWrapper0.wrap((java.lang.Object) 52);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Integer cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + oper14 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper14.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14955");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.Node node14 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        foodev.jsondiff.Leaf[] leafArray16 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList17 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList17, leafArray16);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap19 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf20 = jsonDiff13.findLeaves(node14, jzonElement15, (java.util.List<foodev.jsondiff.Leaf>) leafList17, intMap19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(leafArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test14956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14956");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException26);
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        java.lang.String str33 = jacksonWrapperException16.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str33, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test14957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14957");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int6 = instruction5.index;
        boolean boolean7 = instruction5.isIndexed();
        instruction5.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("");
        boolean boolean16 = instruction15.isIndexed();
        instruction15.index = (short) -1;
        foodev.jsondiff.Oper oper19 = instruction15.oper;
        instruction5.oper = oper19;
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        instruction5.index = (byte) 1;
        foodev.jsondiff.JsonDiff.Instruction instruction25 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction25.key = "";
        instruction25.index = 'a';
        instruction25.index = 1;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff33 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper32);
        foodev.jsondiff.jsonwrap.Wrapper wrapper34 = jsonDiff33.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction36 = jsonDiff33.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction36.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.JsonDiff.Instruction instruction39 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction39.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff43 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper42);
        int int45 = jsonDiff43.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction47 = jsonDiff43.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper48 = instruction47.oper;
        instruction39.oper = oper48;
        instruction36.oper = oper48;
        instruction25.oper = oper48;
        foodev.jsondiff.Oper oper52 = instruction25.oper;
        instruction5.oper = oper52;
        int int54 = instruction5.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff56 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper55);
        int int58 = jsonDiff56.isIndexed("hi!");
        int int60 = jsonDiff56.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper61 = jsonDiff56.factory;
        int int63 = jsonDiff56.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper64 = jsonDiff56.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction66 = jsonDiff56.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction67 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction67.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff71 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper70);
        int int73 = jsonDiff71.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction75 = jsonDiff71.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper76 = instruction75.oper;
        instruction67.oper = oper76;
        instruction66.oper = oper76;
        foodev.jsondiff.Oper oper79 = instruction66.oper;
        instruction5.oper = oper79;
        boolean boolean81 = instruction5.isIndexed();
        instruction5.key = "";
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + oper19 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper19.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper34);
        org.junit.Assert.assertNotNull(instruction36);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(instruction47);
        org.junit.Assert.assertTrue("'" + oper48 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper48.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper52 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper52.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(wrapper61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(wrapper64);
        org.junit.Assert.assertNotNull(instruction66);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(instruction75);
        org.junit.Assert.assertTrue("'" + oper76 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper76.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper79 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper79.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test14958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14958");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException10);
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException24);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException24);
        java.lang.String str27 = jacksonWrapperException1.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str27, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
    }

    @Test
    public void test14959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14959");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff9.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper14);
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff15.factory;
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper16);
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper16);
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff18.create("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper21 = jsonDiff18.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper22);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement24 = wrapper13.wrap((java.lang.Object) wrapper22);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertNotNull(wrapper21);
        org.junit.Assert.assertNotNull(wrapper22);
    }

    @Test
    public void test14960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14960");
        foodev.jsondiff.JsonDiff.Instruction instruction0 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper1 = instruction0.oper;
        instruction0.index = (-1);
        instruction0.index = (byte) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff9.create("");
        instruction12.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper15 = instruction12.oper;
        instruction0.oper = oper15;
        java.lang.String str17 = instruction0.key;
        int int18 = instruction0.index;
        org.junit.Assert.assertNull(oper1);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + oper15 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper15.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
    }

    @Test
    public void test14961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14961");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff10.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Leaf leaf13 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray14 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = jsonDiff10.accept(leaf13, jzonArray14, jzonObject15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(instruction12);
    }

    @Test
    public void test14962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14962");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff4.create("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff4.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff4.getVisitor();
        foodev.jsondiff.Node node9 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        java.util.List<foodev.jsondiff.Leaf> leafList11 = null;
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap12 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf13 = jsonDiff4.findLeaves(node9, jzonElement10, leafList11, intMap12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor8);
    }

    @Test
    public void test14963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14963");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper18);
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff19.factory;
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff(wrapper20);
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff21.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff21.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction25.index = (short) 100;
        int int28 = instruction25.index;
        instruction25.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException33.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException39);
        jacksonWrapperException33.addSuppressed((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException39);
        java.lang.Throwable[] throwableArray45 = jacksonWrapperException39.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff13.apply((java.lang.Object) instruction25, (java.lang.Object) throwableArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray45);
    }

    @Test
    public void test14964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14964");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement21 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement22 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff20.apply(jzonElement21, jzonElement22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper17);
    }

    @Test
    public void test14965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14965");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        int int18 = jsonDiff16.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int20 = jsonDiff16.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test14966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14966");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        int int11 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int13 = jsonDiff1.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff1.create("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper21);
        int int24 = jsonDiff22.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor25 = jsonDiff22.getVisitor();
        int int27 = jsonDiff22.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff22.create("");
        int int30 = instruction29.index;
        foodev.jsondiff.jsonwrap.Wrapper wrapper31 = null;
        foodev.jsondiff.JsonDiff jsonDiff32 = new foodev.jsondiff.JsonDiff(wrapper31);
        foodev.jsondiff.jsonwrap.Wrapper wrapper33 = jsonDiff32.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor34 = jsonDiff32.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction36 = jsonDiff32.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        boolean boolean37 = instruction36.isIndexed();
        boolean boolean38 = instruction36.isIndexed();
        boolean boolean39 = instruction36.isIndexed();
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff20.apply((java.lang.Object) instruction29, (java.lang.Object) boolean39);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(instruction29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(wrapper33);
        org.junit.Assert.assertNull(wildcardVisitor34);
        org.junit.Assert.assertNotNull(instruction36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test14967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14967");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        int int5 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Leaf leaf6 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray7 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = jsonDiff3.accept(leaf6, jzonArray7, jzonObject8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test14968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14968");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff3.getVisitor();
        int int13 = jsonDiff3.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int17 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        foodev.jsondiff.Visitor<?> wildcardVisitor20 = jsonDiff19.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = jsonDiff19.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNull(wildcardVisitor20);
    }

    @Test
    public void test14969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14969");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction7.index = (short) 100;
        boolean boolean10 = instruction7.isIndexed();
        instruction7.index = (short) 10;
        foodev.jsondiff.Oper oper13 = instruction7.oper;
        instruction7.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.Oper oper16 = instruction7.oper;
        boolean boolean17 = instruction7.isIndexed();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + oper13 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper13.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper16 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper16.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test14970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14970");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        int int10 = jsonDiff1.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor17 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor18 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff1.create("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = jsonDiff1.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertNull(wildcardVisitor17);
        org.junit.Assert.assertNull(wildcardVisitor18);
        org.junit.Assert.assertNotNull(instruction20);
    }

    @Test
    public void test14971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14971");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        org.junit.Assert.assertNotNull(throwableArray13);
    }

    @Test
    public void test14972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14972");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int13 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff18.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff18.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction22.index = (short) 100;
        boolean boolean25 = instruction22.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction26 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper27 = instruction26.oper;
        instruction26.key = "~";
        int int30 = instruction26.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff32 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper31);
        int int34 = jsonDiff32.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction36 = jsonDiff32.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean37 = instruction36.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff39 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper38);
        int int41 = jsonDiff39.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction43 = jsonDiff39.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper44 = instruction43.oper;
        instruction36.oper = oper44;
        instruction26.oper = oper44;
        foodev.jsondiff.Oper oper47 = instruction26.oper;
        instruction22.oper = oper47;
        instruction22.index = (-1);
        boolean boolean51 = instruction22.isIndexed();
        java.lang.String str52 = instruction22.key;
        foodev.jsondiff.JsonDiff.Instruction instruction53 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction53.key = "";
        instruction53.index = 'a';
        instruction53.index = 1;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff61 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper60);
        foodev.jsondiff.jsonwrap.Wrapper wrapper62 = jsonDiff61.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction64 = jsonDiff61.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction64.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.JsonDiff.Instruction instruction67 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction67.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff71 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper70);
        int int73 = jsonDiff71.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction75 = jsonDiff71.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper76 = instruction75.oper;
        instruction67.oper = oper76;
        instruction64.oper = oper76;
        instruction53.oper = oper76;
        instruction22.oper = oper76;
        instruction22.index = (short) 1;
        java.lang.String str83 = instruction22.key;
        java.lang.String str84 = instruction22.key;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement85 = wrapper14.wrap((java.lang.Object) instruction22);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(oper27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(instruction36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(instruction43);
        org.junit.Assert.assertTrue("'" + oper44 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper44.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper47 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper47.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str52, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertNotNull(wrapper62);
        org.junit.Assert.assertNotNull(instruction64);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(instruction75);
        org.junit.Assert.assertTrue("'" + oper76 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper76.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str83, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str84, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test14973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14973");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.String str8 = instruction7.key;
        int int9 = instruction7.index;
        instruction7.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        int int12 = instruction7.index;
        boolean boolean13 = instruction7.isIndexed();
        java.lang.String str14 = instruction7.key;
        instruction7.index = (short) 1;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str8, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~" + "'", str14, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
    }

    @Test
    public void test14974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14974");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException10);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException32.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException34);
        jacksonWrapperException28.addSuppressed((java.lang.Throwable) jacksonWrapperException34);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException28);
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray42 = jacksonWrapperException41.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException45.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException47);
        jacksonWrapperException41.addSuppressed((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray54 = jacksonWrapperException53.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException55);
        jacksonWrapperException47.addSuppressed((java.lang.Throwable) jacksonWrapperException55);
        jacksonWrapperException28.addSuppressed((java.lang.Throwable) jacksonWrapperException55);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException55);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException59);
        java.lang.Throwable[] throwableArray61 = jacksonWrapperException60.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement62 = gsonWrapper0.wrap((java.lang.Object) throwableArray61);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: [Ljava.lang.Throwable; cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray61);
    }

    @Test
    public void test14975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14975");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff1.getVisitor();
        foodev.jsondiff.Node node11 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.Leaf[] leafArray13 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList14 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList14, leafArray13);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap16 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf17 = jsonDiff1.findLeaves(node11, jzonElement12, (java.util.List<foodev.jsondiff.Leaf>) leafList14, intMap16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(leafArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test14976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14976");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        java.lang.String str16 = instruction15.key;
        int int17 = instruction15.index;
        int int18 = instruction15.index;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str16, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test14977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14977");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction11.index = (short) 1;
        int int14 = instruction11.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper17);
        int int21 = jsonDiff19.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff19.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper24);
        foodev.jsondiff.jsonwrap.Wrapper wrapper26 = jsonDiff25.factory;
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff(wrapper26);
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff27.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean30 = instruction29.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff32 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper31);
        int int34 = jsonDiff32.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction36 = jsonDiff32.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper37 = instruction36.oper;
        instruction29.oper = oper37;
        instruction23.oper = oper37;
        instruction11.oper = oper37;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff42 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper41);
        foodev.jsondiff.jsonwrap.Wrapper wrapper43 = jsonDiff42.factory;
        foodev.jsondiff.JsonDiff jsonDiff44 = new foodev.jsondiff.JsonDiff(wrapper43);
        foodev.jsondiff.JsonDiff jsonDiff45 = new foodev.jsondiff.JsonDiff(wrapper43);
        foodev.jsondiff.JsonDiff.Instruction instruction47 = jsonDiff45.create("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper48 = jsonDiff45.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper49 = jsonDiff45.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction51 = jsonDiff45.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction53 = jsonDiff45.create("~");
        foodev.jsondiff.Oper oper54 = instruction53.oper;
        instruction11.oper = oper54;
        foodev.jsondiff.Oper oper56 = instruction11.oper;
        instruction11.index = 0;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertNotNull(wrapper26);
        org.junit.Assert.assertNotNull(instruction29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(instruction36);
        org.junit.Assert.assertTrue("'" + oper37 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper37.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper43);
        org.junit.Assert.assertNotNull(instruction47);
        org.junit.Assert.assertNotNull(wrapper48);
        org.junit.Assert.assertNotNull(wrapper49);
        org.junit.Assert.assertNotNull(instruction51);
        org.junit.Assert.assertNotNull(instruction53);
        org.junit.Assert.assertTrue("'" + oper54 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper54.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper56 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper56.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14978");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean6 = instruction5.isIndexed();
        foodev.jsondiff.Oper oper7 = null;
        instruction5.oper = oper7;
        foodev.jsondiff.Oper oper9 = instruction5.oper;
        instruction5.key = "~";
        java.lang.String str12 = instruction5.key;
        boolean boolean13 = instruction5.isIndexed();
        boolean boolean14 = instruction5.isIndexed();
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(oper9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "~" + "'", str12, "~");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test14979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14979");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException18.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException18.getSuppressed();
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException31.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException33);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException39.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException39.addSuppressed((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException43);
        jacksonWrapperException36.addSuppressed((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException46);
        java.lang.String str48 = jacksonWrapperException46.toString();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str48, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test14980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14980");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int13 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int19 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper21);
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff22.factory;
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff(wrapper23);
        foodev.jsondiff.Visitor<?> wildcardVisitor25 = jsonDiff24.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff24.create("");
        int int29 = jsonDiff24.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper30 = jsonDiff24.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction32.index = (short) -1;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement35 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement20, instruction32, jzonElement35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertNull(wildcardVisitor25);
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(wrapper30);
        org.junit.Assert.assertNotNull(instruction32);
    }

    @Test
    public void test14981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14981");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        java.lang.String str12 = instruction11.key;
        boolean boolean13 = instruction11.isIndexed();
        java.lang.String str14 = instruction11.key;
        boolean boolean15 = instruction11.isIndexed();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test14982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14982");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Leaf leaf11 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray12 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = jsonDiff8.accept(leaf11, jzonArray12, jzonObject13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction10);
    }

    @Test
    public void test14983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14983");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper16);
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff17.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff17.apply(jzonElement19, jzonElement20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(wrapper18);
    }

    @Test
    public void test14984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14984");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(wrapper7);
    }

    @Test
    public void test14985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14985");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        int int11 = jsonDiff8.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Leaf leaf12 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray13 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = jsonDiff8.accept(leaf12, jzonArray13, jzonObject14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test14986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14986");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        instruction6.index = (short) 100;
        java.lang.String str9 = instruction6.key;
        int int10 = instruction6.index;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~" + "'", str9, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
    }

    @Test
    public void test14987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14987");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        instruction8.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction8.index = '#';
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
    }

    @Test
    public void test14988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14988");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException16);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException16.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray20);
    }

    @Test
    public void test14989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14989");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff1.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = wrapper13.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertNotNull(wrapper13);
    }

    @Test
    public void test14990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14990");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff3.getVisitor();
        int int14 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        int int20 = jsonDiff18.isIndexed("hi!");
        int int22 = jsonDiff18.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff18.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor24 = jsonDiff18.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper25 = jsonDiff18.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper26 = jsonDiff18.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper27 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff18.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException33.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException39);
        jacksonWrapperException33.addSuppressed((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        java.lang.Throwable[] throwableArray43 = jacksonWrapperException39.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException46);
        jacksonWrapperException39.addSuppressed((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray54 = jacksonWrapperException53.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray58 = jacksonWrapperException57.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException59);
        jacksonWrapperException53.addSuppressed((java.lang.Throwable) jacksonWrapperException59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException62);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException63);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException63);
        jacksonWrapperException47.addSuppressed((java.lang.Throwable) jacksonWrapperException63);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException47);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj69 = jsonDiff3.diff((java.lang.Object) instruction29, (java.lang.Object) jacksonWrapperException68);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertNull(wildcardVisitor24);
        org.junit.Assert.assertNotNull(wrapper25);
        org.junit.Assert.assertNotNull(wrapper26);
        org.junit.Assert.assertNotNull(wrapper27);
        org.junit.Assert.assertNotNull(instruction29);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray58);
    }

    @Test
    public void test14991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14991");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor17 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement22 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement23 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement22, jzonElement23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNull(wildcardVisitor17);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertNotNull(instruction21);
    }

    @Test
    public void test14992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14992");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int13 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int15 = jsonDiff3.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject21 = jsonDiff3.diff(jzonElement19, jzonElement20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(instruction18);
    }

    @Test
    public void test14993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14993");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement8, 35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
    }

    @Test
    public void test14994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14994");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
    }

    @Test
    public void test14995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14995");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper1);
        int int4 = jsonDiff2.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff2.factory;
        int int7 = jsonDiff2.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff2.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff2.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff2.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff2.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int17 = jsonDiff2.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff2.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction19.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        boolean boolean22 = instruction19.isIndexed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement23 = jacksonWrapper0.wrap((java.lang.Object) boolean22);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Boolean cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test14996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14996");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        instruction6.key = "hi!";
        int int9 = instruction6.index;
        foodev.jsondiff.Oper oper10 = instruction6.oper;
        java.lang.String str11 = instruction6.key;
        instruction6.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper14 = instruction6.oper;
        instruction6.index = '#';
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + oper10 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper10.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + oper14 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper14.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14997");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        int int18 = jsonDiff16.isIndexed("hi!");
        int int20 = jsonDiff16.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper21 = jsonDiff16.factory;
        int int23 = jsonDiff16.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff16.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper25 = jsonDiff16.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor26 = jsonDiff16.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper27 = jsonDiff16.factory;
        int int29 = jsonDiff16.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper30 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff31 = new foodev.jsondiff.JsonDiff(wrapper30);
        foodev.jsondiff.jsonwrap.Wrapper wrapper32 = jsonDiff31.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction34 = jsonDiff31.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Oper oper35 = instruction34.oper;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement36 = wrapper12.wrap((java.lang.Object) oper35);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(wrapper21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(wrapper24);
        org.junit.Assert.assertNotNull(wrapper25);
        org.junit.Assert.assertNull(wildcardVisitor26);
        org.junit.Assert.assertNotNull(wrapper27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(wrapper30);
        org.junit.Assert.assertNotNull(wrapper32);
        org.junit.Assert.assertNotNull(instruction34);
        org.junit.Assert.assertTrue("'" + oper35 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper35.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test14998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14998");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        int int9 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = jsonDiff3.diff("~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
    }

    @Test
    public void test14999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test14999");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int11 = jsonDiff3.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        int int17 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(instruction19);
    }

    @Test
    public void test15000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest29.test15000");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper14);
        int int17 = jsonDiff15.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff15.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff15.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff15.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor23 = jsonDiff15.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff15.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper26 = jsonDiff15.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement27 = wrapper13.wrap((java.lang.Object) jsonDiff15);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertNull(wildcardVisitor23);
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertNotNull(wrapper26);
    }
}

