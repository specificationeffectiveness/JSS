package foodev.jsondiff;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest11 {

    public static boolean debug = false;

    @Test
    public void test05501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05501");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = wrapper7.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
    }

    @Test
    public void test05502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05502");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement15, jzonElement16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
    }

    @Test
    public void test05503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05503");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int7 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper8);
        int int11 = jsonDiff9.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff9.factory;
        int int14 = jsonDiff9.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff9.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff9.factory;
        int int19 = jsonDiff9.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper20);
        int int23 = jsonDiff21.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff21.factory;
        int int26 = jsonDiff21.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff21.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper29 = jsonDiff21.factory;
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff(wrapper29);
        foodev.jsondiff.JsonDiff jsonDiff31 = new foodev.jsondiff.JsonDiff(wrapper29);
        foodev.jsondiff.JsonDiff jsonDiff32 = new foodev.jsondiff.JsonDiff(wrapper29);
        foodev.jsondiff.jsonwrap.Wrapper wrapper33 = jsonDiff32.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper34 = jsonDiff32.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper35 = jsonDiff32.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper36 = jsonDiff32.factory;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Object) jsonDiff32);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(wrapper24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertNotNull(wrapper29);
        org.junit.Assert.assertNotNull(wrapper33);
        org.junit.Assert.assertNotNull(wrapper34);
        org.junit.Assert.assertNotNull(wrapper35);
        org.junit.Assert.assertNotNull(wrapper36);
    }

    @Test
    public void test05504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05504");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int9 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement10, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test05505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05505");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException18);
        java.lang.Class<?> wildcardClass20 = jacksonWrapperException18.getClass();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test05506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05506");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = wrapper10.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test05507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05507");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff4.create("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff8.checkIndex(jzonElement9, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
    }

    @Test
    public void test05508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05508");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int12 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.Leaf leaf15 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray16 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = jsonDiff14.accept(leaf15, jzonArray16, jzonObject17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
    }

    @Test
    public void test05509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05509");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        int int12 = jsonDiff10.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff10.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject17 = jsonDiff10.diff(jzonElement15, jzonElement16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
    }

    @Test
    public void test05510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05510");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff1.getVisitor();
        int int14 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Node node15 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        foodev.jsondiff.Leaf[] leafArray17 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList18 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList18, leafArray17);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap20 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf21 = jsonDiff1.findLeaves(node15, jzonElement16, (java.util.List<foodev.jsondiff.Leaf>) leafList18, intMap20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(leafArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test05511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05511");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement4 = gsonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05512");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = jacksonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05513");
        foodev.jsondiff.JsonDiff.Instruction instruction0 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper1 = instruction0.oper;
        instruction0.key = "~";
        instruction0.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff9.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction13.index = (short) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff17.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff19.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff19.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction23.index = (short) 100;
        boolean boolean26 = instruction23.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction27 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper28 = instruction27.oper;
        instruction27.key = "~";
        int int31 = instruction27.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff33 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper32);
        int int35 = jsonDiff33.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction37 = jsonDiff33.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean38 = instruction37.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff40 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper39);
        int int42 = jsonDiff40.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction44 = jsonDiff40.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper45 = instruction44.oper;
        instruction37.oper = oper45;
        instruction27.oper = oper45;
        foodev.jsondiff.Oper oper48 = instruction27.oper;
        instruction23.oper = oper48;
        instruction13.oper = oper48;
        instruction0.oper = oper48;
        instruction0.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        instruction0.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        java.lang.String str56 = instruction0.key;
        instruction0.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        org.junit.Assert.assertNull(oper1);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(oper28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(instruction37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(instruction44);
        org.junit.Assert.assertTrue("'" + oper45 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper45.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper48 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper48.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~" + "'", str56, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
    }

    @Test
    public void test05514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05514");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        int int6 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff10.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean15 = instruction14.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        int int19 = jsonDiff17.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper22 = instruction21.oper;
        instruction14.oper = oper22;
        instruction8.oper = oper22;
        instruction8.index = (-1);
        int int27 = instruction8.index;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + oper22 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper22.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test05515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05515");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement8, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
    }

    @Test
    public void test05516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05516");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff9.create("hi!");
        boolean boolean13 = instruction12.isIndexed();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test05517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05517");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff11.apply(jzonElement12, jzonElement13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test05518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05518");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException9);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException14);
        java.lang.String str16 = jacksonWrapperException15.toString();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str16, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test05519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05519");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray1 = jacksonWrapperException0.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException6);
        jacksonWrapperException0.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException24);
        jacksonWrapperException18.addSuppressed((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException32.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException36.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException32.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException45.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray50 = jacksonWrapperException49.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException51);
        jacksonWrapperException45.addSuppressed((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray57 = jacksonWrapperException56.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException56);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray61 = jacksonWrapperException60.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException60);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException62);
        jacksonWrapperException56.addSuppressed((java.lang.Throwable) jacksonWrapperException62);
        jacksonWrapperException55.addSuppressed((java.lang.Throwable) jacksonWrapperException56);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException56);
        jacksonWrapperException38.addSuppressed((java.lang.Throwable) jacksonWrapperException56);
        jacksonWrapperException30.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray70 = jacksonWrapperException69.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException71 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException69.addSuppressed((java.lang.Throwable) jacksonWrapperException71);
        java.lang.Throwable[] throwableArray73 = jacksonWrapperException71.getSuppressed();
        jacksonWrapperException38.addSuppressed((java.lang.Throwable) jacksonWrapperException71);
        java.lang.Throwable[] throwableArray75 = jacksonWrapperException71.getSuppressed();
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException71);
        java.lang.Class<?> wildcardClass77 = jacksonWrapperException71.getClass();
        org.junit.Assert.assertNotNull(throwableArray1);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test05520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05520");
        foodev.jsondiff.JsonDiff.Instruction instruction0 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction0.key = "";
        instruction0.index = 'a';
        instruction0.index = 1;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction11.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.JsonDiff.Instruction instruction14 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction14.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        int int20 = jsonDiff18.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff18.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper23 = instruction22.oper;
        instruction14.oper = oper23;
        instruction11.oper = oper23;
        instruction0.oper = oper23;
        boolean boolean27 = instruction0.isIndexed();
        java.lang.String str28 = instruction0.key;
        instruction0.index = (short) 10;
        java.lang.Class<?> wildcardClass31 = instruction0.getClass();
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertTrue("'" + oper23 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper23.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test05521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05521");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int13 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement15, 52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(wrapper14);
    }

    @Test
    public void test05522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05522");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        int int11 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int13 = jsonDiff1.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff1.create("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor19 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper20);
        int int23 = jsonDiff21.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor24 = jsonDiff21.getVisitor();
        int int26 = jsonDiff21.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper27 = jsonDiff21.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff21.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper30 = jsonDiff21.factory;
        foodev.jsondiff.JsonDiff jsonDiff31 = new foodev.jsondiff.JsonDiff(wrapper30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray35 = jacksonWrapperException34.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException38.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray43 = jacksonWrapperException42.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException44);
        jacksonWrapperException38.addSuppressed((java.lang.Throwable) jacksonWrapperException44);
        jacksonWrapperException36.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException50);
        jacksonWrapperException38.addSuppressed((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException53);
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply((java.lang.Object) jsonDiff31, (java.lang.Object) jacksonWrapperException53);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNull(wildcardVisitor19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(wrapper27);
        org.junit.Assert.assertNotNull(instruction29);
        org.junit.Assert.assertNotNull(wrapper30);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray43);
    }

    @Test
    public void test05523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05523");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        boolean boolean6 = instruction5.isIndexed();
        instruction5.index = (short) -1;
        int int9 = instruction5.index;
        int int10 = instruction5.index;
        foodev.jsondiff.JsonDiff.Instruction instruction11 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper12 = instruction11.oper;
        instruction11.key = "~";
        instruction11.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff20.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff20.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction24.index = (short) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper27);
        foodev.jsondiff.jsonwrap.Wrapper wrapper29 = jsonDiff28.factory;
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff(wrapper29);
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff30.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction34 = jsonDiff30.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction34.index = (short) 100;
        boolean boolean37 = instruction34.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction38 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper39 = instruction38.oper;
        instruction38.key = "~";
        int int42 = instruction38.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff44 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper43);
        int int46 = jsonDiff44.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction48 = jsonDiff44.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean49 = instruction48.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff51 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper50);
        int int53 = jsonDiff51.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction55 = jsonDiff51.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper56 = instruction55.oper;
        instruction48.oper = oper56;
        instruction38.oper = oper56;
        foodev.jsondiff.Oper oper59 = instruction38.oper;
        instruction34.oper = oper59;
        instruction24.oper = oper59;
        instruction11.oper = oper59;
        instruction5.oper = oper59;
        instruction5.index = (byte) 10;
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        instruction5.index = (byte) 100;
        java.lang.String str70 = instruction5.key;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(oper12);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertNotNull(wrapper29);
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertNotNull(instruction34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(oper39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(instruction48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(instruction55);
        org.junit.Assert.assertTrue("'" + oper56 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper56.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper59 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper59.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str70, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
    }

    @Test
    public void test05524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05524");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        int int10 = jsonDiff1.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = jsonDiff1.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
    }

    @Test
    public void test05525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05525");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        int int10 = jsonDiff8.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff8.create("");
        java.lang.Class<?> wildcardClass14 = jsonDiff8.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test05526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05526");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = jsonDiff1.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
    }

    @Test
    public void test05527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05527");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException26);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException39.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray44 = jacksonWrapperException43.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException45);
        jacksonWrapperException39.addSuppressed((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray52 = jacksonWrapperException51.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException53);
        jacksonWrapperException45.addSuppressed((java.lang.Throwable) jacksonWrapperException53);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException53);
        java.lang.Throwable throwable60 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", throwable60);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException64);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException64);
        jacksonWrapperException61.addSuppressed((java.lang.Throwable) jacksonWrapperException66);
        jacksonWrapperException53.addSuppressed((java.lang.Throwable) jacksonWrapperException66);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException66);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException66);
        java.lang.Throwable[] throwableArray71 = jacksonWrapperException66.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException72 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException66);
        java.lang.String str73 = jacksonWrapperException72.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str73, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
    }

    @Test
    public void test05528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05528");
        java.lang.Throwable throwable2 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", throwable2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", throwable2);
        java.lang.Class<?> wildcardClass5 = jacksonWrapperException4.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test05529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05529");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException22);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray26);
    }

    @Test
    public void test05530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05530");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff18.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff18.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.String str23 = instruction22.key;
        instruction22.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction22.index = 1;
        instruction22.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        foodev.jsondiff.jsonwrap.JzonElement jzonElement30 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement14, instruction22, jzonElement30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNull(wildcardVisitor13);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str23, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test05531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05531");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.Leaf leaf12 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray13 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = jsonDiff3.accept(leaf12, jzonArray13, jzonObject14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper11);
    }

    @Test
    public void test05532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05532");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int7 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
    }

    @Test
    public void test05533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05533");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException5.getSuppressed();
        java.lang.Class<?> wildcardClass9 = throwableArray8.getClass();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test05534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05534");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        java.lang.Class<?> wildcardClass23 = throwableArray22.getClass();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement24 = gsonWrapper0.wrap((java.lang.Object) throwableArray22);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: [Ljava.lang.Throwable; cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test05535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05535");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction7.index = (short) 100;
        boolean boolean10 = instruction7.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper12 = instruction11.oper;
        instruction11.key = "~";
        int int15 = instruction11.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        int int19 = jsonDiff17.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean22 = instruction21.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper23);
        int int26 = jsonDiff24.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper29 = instruction28.oper;
        instruction21.oper = oper29;
        instruction11.oper = oper29;
        foodev.jsondiff.Oper oper32 = instruction11.oper;
        instruction7.oper = oper32;
        instruction7.index = (-1);
        java.lang.String str36 = instruction7.key;
        java.lang.String str37 = instruction7.key;
        instruction7.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        foodev.jsondiff.Oper oper40 = null;
        instruction7.oper = oper40;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff43 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper42);
        int int45 = jsonDiff43.isIndexed("hi!");
        int int47 = jsonDiff43.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper48 = jsonDiff43.factory;
        int int50 = jsonDiff43.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper51 = jsonDiff43.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction53 = jsonDiff43.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction55 = jsonDiff43.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Oper oper56 = instruction55.oper;
        instruction7.oper = oper56;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(oper12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertTrue("'" + oper29 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper29.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper32 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper32.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str36, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str37, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(wrapper48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(wrapper51);
        org.junit.Assert.assertNotNull(instruction53);
        org.junit.Assert.assertNotNull(instruction55);
        org.junit.Assert.assertTrue("'" + oper56 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper56.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05536");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int15 = jsonDiff3.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper18);
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff19.factory;
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff(wrapper20);
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff21.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff21.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction25.index = (short) 100;
        boolean boolean28 = instruction25.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction29 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper30 = instruction29.oper;
        instruction29.key = "~";
        int int33 = instruction29.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper34);
        int int37 = jsonDiff35.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction39 = jsonDiff35.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean40 = instruction39.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff42 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper41);
        int int44 = jsonDiff42.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction46 = jsonDiff42.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper47 = instruction46.oper;
        instruction39.oper = oper47;
        instruction29.oper = oper47;
        foodev.jsondiff.Oper oper50 = instruction29.oper;
        instruction25.oper = oper50;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff53 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper52);
        foodev.jsondiff.jsonwrap.Wrapper wrapper54 = jsonDiff53.factory;
        foodev.jsondiff.JsonDiff jsonDiff55 = new foodev.jsondiff.JsonDiff(wrapper54);
        foodev.jsondiff.Visitor<?> wildcardVisitor56 = jsonDiff55.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction58 = jsonDiff55.create("");
        instruction58.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper61 = instruction58.oper;
        instruction25.oper = oper61;
        java.lang.String str63 = instruction25.key;
        int int64 = instruction25.index;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement65 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement17, instruction25, jzonElement65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(oper30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(instruction39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(instruction46);
        org.junit.Assert.assertTrue("'" + oper47 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper47.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper50 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper50.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper54);
        org.junit.Assert.assertNull(wildcardVisitor56);
        org.junit.Assert.assertNotNull(instruction58);
        org.junit.Assert.assertTrue("'" + oper61 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper61.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str63, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
    }

    @Test
    public void test05537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05537");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException28);
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException33);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException38.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray43 = jacksonWrapperException42.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray47 = jacksonWrapperException46.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException48);
        jacksonWrapperException42.addSuppressed((java.lang.Throwable) jacksonWrapperException48);
        jacksonWrapperException40.addSuppressed((java.lang.Throwable) jacksonWrapperException42);
        java.lang.Throwable[] throwableArray52 = jacksonWrapperException42.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException55);
        jacksonWrapperException42.addSuppressed((java.lang.Throwable) jacksonWrapperException55);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException58);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException58);
        jacksonWrapperException34.addSuppressed((java.lang.Throwable) jacksonWrapperException60);
        java.lang.String str62 = jacksonWrapperException34.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str62, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test05538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05538");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test05539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05539");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException20);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement22 = gsonWrapper0.wrap((java.lang.Object) jacksonWrapperException21);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray19);
    }

    @Test
    public void test05540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05540");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test05541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05541");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = wrapper9.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test05542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05542");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        foodev.jsondiff.Node node11 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.Leaf[] leafArray13 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList14 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList14, leafArray13);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap16 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf17 = jsonDiff3.findLeaves(node11, jzonElement12, (java.util.List<foodev.jsondiff.Leaf>) leafList14, intMap16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(leafArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test05543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05543");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff11.getVisitor();
        int int14 = jsonDiff11.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int16 = jsonDiff11.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Leaf leaf17 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray18 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = jsonDiff11.accept(leaf17, jzonArray18, jzonObject19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test05544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05544");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int12 = jsonDiff1.isIndexed("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = jsonDiff1.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test05545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05545");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException3);
        java.lang.String str5 = jacksonWrapperException3.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str5, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test05546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05546");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff7.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff7.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff7.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff15.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff15.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff15.factory;
        int int21 = jsonDiff15.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff15.factory;
        int int24 = jsonDiff15.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff15.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper27 = jsonDiff15.factory;
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff(wrapper27);
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff(wrapper27);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement30 = wrapper11.wrap((java.lang.Object) wrapper27);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertNotNull(wrapper27);
    }

    @Test
    public void test05547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05547");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException21.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException30);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray42 = jacksonWrapperException41.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException45.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException47);
        jacksonWrapperException41.addSuppressed((java.lang.Throwable) jacksonWrapperException47);
        jacksonWrapperException39.addSuppressed((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException41);
        jacksonWrapperException32.addSuppressed((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException56);
        jacksonWrapperException32.addSuppressed((java.lang.Throwable) jacksonWrapperException57);
        java.lang.Throwable[] throwableArray59 = jacksonWrapperException57.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray59);
    }

    @Test
    public void test05548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05548");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException9);
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException9.getSuppressed();
        java.lang.String str12 = jacksonWrapperException9.toString();
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str12, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test05549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05549");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement4 = gsonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05550");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff6.checkIndex(jzonElement7, 35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
    }

    @Test
    public void test05551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05551");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int7 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test05552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05552");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        int int9 = jsonDiff7.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~");
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException33.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException35);
        jacksonWrapperException29.addSuppressed((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray47 = jacksonWrapperException46.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray51 = jacksonWrapperException50.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException46.addSuppressed((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray58 = jacksonWrapperException57.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray62 = jacksonWrapperException61.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException61);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException63);
        jacksonWrapperException57.addSuppressed((java.lang.Throwable) jacksonWrapperException63);
        jacksonWrapperException56.addSuppressed((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException67);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray70 = jacksonWrapperException69.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException71 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException69);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException72 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException71);
        jacksonWrapperException67.addSuppressed((java.lang.Throwable) jacksonWrapperException71);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException74 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException67);
        java.lang.Throwable[] throwableArray75 = jacksonWrapperException67.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj76 = jsonDiff7.diff((java.lang.Object) jacksonWrapperException43, (java.lang.Object) jacksonWrapperException67);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertNotNull(throwableArray75);
    }

    @Test
    public void test05553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05553");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement17, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(instruction16);
    }

    @Test
    public void test05554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05554");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.jsonwrap.Wrapper wrapper1 = null;
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff(wrapper1);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff2.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff2.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff2.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = jacksonWrapper0.wrap((java.lang.Object) jsonDiff2);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wrapper3);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNull(wildcardVisitor7);
    }

    @Test
    public void test05555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05555");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int10 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = jsonDiff1.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test05556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05556");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("hi!");
        instruction8.index = '4';
        instruction8.index = 97;
        int int13 = instruction8.index;
        instruction8.index = ' ';
        java.lang.Class<?> wildcardClass16 = instruction8.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test05557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05557");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff9.factory;
        int int13 = jsonDiff9.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff9.factory;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(wrapper14);
    }

    @Test
    public void test05558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05558");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper3);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff6.create("");
        boolean boolean9 = instruction8.isIndexed();
        instruction8.index = (short) -1;
        int int12 = instruction8.index;
        int int13 = instruction8.index;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper15 = instruction14.oper;
        instruction14.key = "~";
        instruction14.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper20);
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff21.factory;
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper22);
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff23.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff23.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction27.index = (short) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff31 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper30);
        foodev.jsondiff.jsonwrap.Wrapper wrapper32 = jsonDiff31.factory;
        foodev.jsondiff.JsonDiff jsonDiff33 = new foodev.jsondiff.JsonDiff(wrapper32);
        foodev.jsondiff.JsonDiff.Instruction instruction35 = jsonDiff33.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction37 = jsonDiff33.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction37.index = (short) 100;
        boolean boolean40 = instruction37.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction41 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper42 = instruction41.oper;
        instruction41.key = "~";
        int int45 = instruction41.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff47 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper46);
        int int49 = jsonDiff47.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction51 = jsonDiff47.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean52 = instruction51.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff54 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper53);
        int int56 = jsonDiff54.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction58 = jsonDiff54.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper59 = instruction58.oper;
        instruction51.oper = oper59;
        instruction41.oper = oper59;
        foodev.jsondiff.Oper oper62 = instruction41.oper;
        instruction37.oper = oper62;
        instruction27.oper = oper62;
        instruction14.oper = oper62;
        instruction8.oper = oper62;
        instruction8.index = (byte) 10;
        instruction8.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        instruction8.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement73 = jacksonWrapper0.wrap((java.lang.Object) instruction8);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(oper15);
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertNotNull(wrapper32);
        org.junit.Assert.assertNotNull(instruction35);
        org.junit.Assert.assertNotNull(instruction37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(oper42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(instruction51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(instruction58);
        org.junit.Assert.assertTrue("'" + oper59 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper59.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper62 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper62.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05559");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException19.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException34);
        jacksonWrapperException19.addSuppressed((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException19.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement39 = wrapper16.wrap((java.lang.Object) throwableArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: [Ljava.lang.Throwable; cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray38);
    }

    @Test
    public void test05560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05560");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement14, jzonElement15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNull(wildcardVisitor13);
    }

    @Test
    public void test05561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05561");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement3 = gsonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05562");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int7 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff10.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff12.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff12.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff12.create("hi!");
        instruction17.index = '4';
        instruction17.index = 97;
        int int22 = instruction17.index;
        instruction17.index = ' ';
        instruction17.index = 52;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper27);
        foodev.jsondiff.jsonwrap.Wrapper wrapper29 = jsonDiff28.factory;
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff(wrapper29);
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff30.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction34 = jsonDiff30.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction34.index = (short) 100;
        boolean boolean37 = instruction34.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction38 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper39 = instruction38.oper;
        instruction38.key = "~";
        int int42 = instruction38.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff44 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper43);
        int int46 = jsonDiff44.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction48 = jsonDiff44.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean49 = instruction48.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff51 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper50);
        int int53 = jsonDiff51.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction55 = jsonDiff51.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper56 = instruction55.oper;
        instruction48.oper = oper56;
        instruction38.oper = oper56;
        foodev.jsondiff.Oper oper59 = instruction38.oper;
        instruction34.oper = oper59;
        instruction34.index = (-1);
        boolean boolean63 = instruction34.isIndexed();
        java.lang.String str64 = instruction34.key;
        foodev.jsondiff.JsonDiff.Instruction instruction65 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction65.key = "";
        instruction65.index = 'a';
        instruction65.index = 1;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper72 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff73 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper72);
        foodev.jsondiff.jsonwrap.Wrapper wrapper74 = jsonDiff73.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction76 = jsonDiff73.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction76.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.JsonDiff.Instruction instruction79 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction79.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper82 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff83 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper82);
        int int85 = jsonDiff83.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction87 = jsonDiff83.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper88 = instruction87.oper;
        instruction79.oper = oper88;
        instruction76.oper = oper88;
        instruction65.oper = oper88;
        instruction34.oper = oper88;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj93 = jsonDiff3.diff((java.lang.Object) instruction17, (java.lang.Object) instruction34);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNull(wildcardVisitor15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 97 + "'", int22 == 97);
        org.junit.Assert.assertNotNull(wrapper29);
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertNotNull(instruction34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(oper39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(instruction48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(instruction55);
        org.junit.Assert.assertTrue("'" + oper56 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper56.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper59 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper59.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str64, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertNotNull(wrapper74);
        org.junit.Assert.assertNotNull(instruction76);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(instruction87);
        org.junit.Assert.assertTrue("'" + oper88 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper88.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05563");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper10);
        int int14 = jsonDiff12.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff12.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        int int20 = jsonDiff18.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff18.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean23 = instruction22.isIndexed();
        foodev.jsondiff.Oper oper24 = null;
        instruction22.oper = oper24;
        foodev.jsondiff.Oper oper26 = instruction22.oper;
        instruction22.key = "~";
        java.lang.String str29 = instruction22.key;
        boolean boolean30 = instruction22.isIndexed();
        boolean boolean31 = instruction22.isIndexed();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement32 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff12.applyPartial(jzonElement16, instruction22, jzonElement32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(oper26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "~" + "'", str29, "~");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test05564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05564");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Leaf leaf15 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray16 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = jsonDiff1.accept(leaf15, jzonArray16, jzonObject17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertNotNull(instruction14);
    }

    @Test
    public void test05565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05565");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper6 = instruction5.oper;
        int int7 = instruction5.index;
        java.lang.String str8 = instruction5.key;
        int int9 = instruction5.index;
        instruction5.index = (short) 0;
        foodev.jsondiff.Oper oper12 = instruction5.oper;
        foodev.jsondiff.Oper oper13 = instruction5.oper;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + oper6 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper6.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str8, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + oper12 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper12.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper13 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper13.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05566");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject16 = jsonDiff13.diff(jzonElement14, jzonElement15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test05567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05567");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff3.create("~");
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement20, 97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(instruction19);
    }

    @Test
    public void test05568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05568");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff9.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff9.getVisitor();
        int int13 = jsonDiff9.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = jsonDiff9.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test05569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05569");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff5.getVisitor();
        int int8 = jsonDiff5.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.Object obj9 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff13.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff13.create("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff13.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = jsonDiff5.diff(obj9, (java.lang.Object) jsonDiff13);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertNotNull(wrapper19);
    }

    @Test
    public void test05570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05570");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException20);
        java.lang.String str22 = jacksonWrapperException20.toString();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str22, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test05571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05571");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Node node9 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.Leaf[] leafArray11 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList12 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList12, leafArray11);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap14 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf15 = jsonDiff1.findLeaves(node9, jzonElement10, (java.util.List<foodev.jsondiff.Leaf>) leafList12, intMap14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(leafArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test05572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05572");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff10.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass12 = wildcardVisitor11.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor11);
    }

    @Test
    public void test05573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05573");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int11 = jsonDiff3.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff20.create("");
        boolean boolean23 = instruction22.isIndexed();
        instruction22.index = (byte) 10;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement26 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff15.applyPartial(jzonElement16, instruction22, jzonElement26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test05574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05574");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement3 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper4);
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff7.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff7.create("");
        instruction10.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper13 = instruction10.oper;
        instruction10.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction10.index = 10;
        boolean boolean18 = instruction10.isIndexed();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement3, instruction10, jzonElement19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + oper13 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper13.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test05575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05575");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff10.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff15.create("");
        boolean boolean18 = instruction17.isIndexed();
        instruction17.index = (short) -1;
        instruction17.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        boolean boolean23 = instruction17.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper24);
        foodev.jsondiff.jsonwrap.Wrapper wrapper26 = jsonDiff25.factory;
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff(wrapper26);
        foodev.jsondiff.Visitor<?> wildcardVisitor28 = jsonDiff27.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction30 = jsonDiff27.create("");
        instruction30.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper33 = instruction30.oper;
        instruction30.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper36);
        foodev.jsondiff.jsonwrap.Wrapper wrapper38 = jsonDiff37.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction40 = jsonDiff37.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction41 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction41.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff45 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper44);
        int int47 = jsonDiff45.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction49 = jsonDiff45.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper50 = instruction49.oper;
        instruction41.oper = oper50;
        instruction40.oper = oper50;
        instruction30.oper = oper50;
        instruction17.oper = oper50;
        instruction17.index = 0;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement57 = wrapper11.wrap((java.lang.Object) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Integer cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wrapper26);
        org.junit.Assert.assertNull(wildcardVisitor28);
        org.junit.Assert.assertNotNull(instruction30);
        org.junit.Assert.assertTrue("'" + oper33 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper33.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper38);
        org.junit.Assert.assertNotNull(instruction40);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(instruction49);
        org.junit.Assert.assertTrue("'" + oper50 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper50.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05576");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int13 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        boolean boolean16 = instruction15.isIndexed();
        instruction15.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        foodev.jsondiff.Oper oper19 = instruction15.oper;
        foodev.jsondiff.Oper oper20 = instruction15.oper;
        java.lang.String str21 = instruction15.key;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + oper19 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper19.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper20 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper20.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str21, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test05577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05577");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        int int5 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff10.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff12.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff12.create("hi!");
        instruction20.index = (short) 0;
        int int23 = instruction20.index;
        instruction20.index = (short) 10;
        java.lang.String str26 = instruction20.key;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement27 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement8, instruction20, jzonElement27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
    }

    @Test
    public void test05578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05578");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        int int14 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = jsonDiff1.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test05579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05579");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int13 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff3.factory;
        int int16 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement17, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test05580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05580");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff12.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = jsonDiff12.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor13);
    }

    @Test
    public void test05581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05581");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int12 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject18 = jsonDiff15.diff(jzonElement16, jzonElement17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
    }

    @Test
    public void test05582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05582");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        boolean boolean9 = instruction8.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("");
        int int16 = instruction15.index;
        boolean boolean17 = instruction15.isIndexed();
        instruction15.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper20);
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff21.factory;
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper22);
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff23.create("");
        boolean boolean26 = instruction25.isIndexed();
        instruction25.index = (short) -1;
        foodev.jsondiff.Oper oper29 = instruction25.oper;
        instruction15.oper = oper29;
        foodev.jsondiff.JsonDiff.Instruction instruction31 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper32 = instruction31.oper;
        instruction31.key = "~";
        java.lang.String str35 = instruction31.key;
        foodev.jsondiff.JsonDiff.Instruction instruction36 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper37 = instruction36.oper;
        instruction36.index = (-1);
        java.lang.String str40 = instruction36.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff42 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper41);
        foodev.jsondiff.jsonwrap.Wrapper wrapper43 = jsonDiff42.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction45 = jsonDiff42.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction46 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction46.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff50 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper49);
        int int52 = jsonDiff50.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction54 = jsonDiff50.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper55 = instruction54.oper;
        instruction46.oper = oper55;
        instruction45.oper = oper55;
        instruction36.oper = oper55;
        instruction31.oper = oper55;
        instruction15.oper = oper55;
        instruction8.oper = oper55;
        instruction8.index = 0;
        boolean boolean64 = instruction8.isIndexed();
        instruction8.index = (-1);
        instruction8.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        instruction8.key = "";
        boolean boolean71 = instruction8.isIndexed();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + oper29 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper29.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNull(oper32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "~" + "'", str35, "~");
        org.junit.Assert.assertNull(oper37);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(wrapper43);
        org.junit.Assert.assertNotNull(instruction45);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(instruction54);
        org.junit.Assert.assertTrue("'" + oper55 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper55.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test05583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05583");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper17);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = jsonDiff19.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper17);
    }

    @Test
    public void test05584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05584");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.JsonDiff.Instruction instruction12 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement11, instruction12, jzonElement13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor10);
    }

    @Test
    public void test05585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05585");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff5.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff5.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff5.factory;
        int int11 = jsonDiff5.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = jacksonWrapper0.wrap((java.lang.Object) wrapper14);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper14);
    }

    @Test
    public void test05586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05586");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject14 = jsonDiff11.diff(jzonElement12, jzonElement13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test05587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05587");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("~");
        foodev.jsondiff.Node node7 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = null;
        java.util.List<foodev.jsondiff.Leaf> leafList9 = null;
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap10 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf11 = jsonDiff3.findLeaves(node7, jzonElement8, leafList9, intMap10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction6);
    }

    @Test
    public void test05588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05588");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff11.create("hi!");
        instruction13.index = 0;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction13);
    }

    @Test
    public void test05589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05589");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff3.getVisitor();
        int int14 = jsonDiff3.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        int int20 = jsonDiff18.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor21 = jsonDiff18.getVisitor();
        int int23 = jsonDiff18.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff18.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int27 = instruction26.index;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement28 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement16, instruction26, jzonElement28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor15);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(wrapper24);
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test05590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05590");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException4);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException4);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05591");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean6 = instruction5.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        int int10 = jsonDiff8.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper13 = instruction12.oper;
        instruction5.oper = oper13;
        int int15 = instruction5.index;
        foodev.jsondiff.JsonDiff.Instruction instruction16 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction16.key = "";
        instruction16.index = 'a';
        instruction16.index = 1;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper23);
        foodev.jsondiff.jsonwrap.Wrapper wrapper25 = jsonDiff24.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction27.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.JsonDiff.Instruction instruction30 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction30.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff34 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper33);
        int int36 = jsonDiff34.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction38 = jsonDiff34.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper39 = instruction38.oper;
        instruction30.oper = oper39;
        instruction27.oper = oper39;
        instruction16.oper = oper39;
        instruction5.oper = oper39;
        instruction5.index = (short) 0;
        instruction5.index = (byte) 10;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + oper13 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper13.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(wrapper25);
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(instruction38);
        org.junit.Assert.assertTrue("'" + oper39 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper39.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05592");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException9);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException22);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException32.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException36.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException32.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException30.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException30);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        java.lang.String str47 = jacksonWrapperException30.toString();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str47, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test05593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05593");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int7 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = jsonDiff1.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test05594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05594");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper4);
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff7.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff7.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff13.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff13.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff13.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction18.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        int int21 = instruction18.index;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement22 = jacksonWrapper0.wrap((java.lang.Object) int21);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Integer cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test05595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05595");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = gsonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05596");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        java.lang.String str8 = jacksonWrapperException7.toString();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str8, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test05597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05597");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = wrapper12.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test05598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05598");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper12 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper12);
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper12);
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff15.factory;
        int int18 = jsonDiff15.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff15.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~");
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException23);
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Object) jacksonWrapperException23);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray25);
    }

    @Test
    public void test05599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05599");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject18 = jsonDiff1.diff(jzonElement16, jzonElement17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(instruction15);
    }

    @Test
    public void test05600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05600");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction7.index = (short) 100;
        boolean boolean10 = instruction7.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper12 = instruction11.oper;
        instruction11.key = "~";
        int int15 = instruction11.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        int int19 = jsonDiff17.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean22 = instruction21.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper23);
        int int26 = jsonDiff24.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper29 = instruction28.oper;
        instruction21.oper = oper29;
        instruction11.oper = oper29;
        foodev.jsondiff.Oper oper32 = instruction11.oper;
        instruction7.oper = oper32;
        instruction7.index = (-1);
        boolean boolean36 = instruction7.isIndexed();
        java.lang.String str37 = instruction7.key;
        java.lang.String str38 = instruction7.key;
        foodev.jsondiff.Oper oper39 = instruction7.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff41 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper40);
        foodev.jsondiff.jsonwrap.Wrapper wrapper42 = jsonDiff41.factory;
        foodev.jsondiff.JsonDiff jsonDiff43 = new foodev.jsondiff.JsonDiff(wrapper42);
        foodev.jsondiff.JsonDiff.Instruction instruction45 = jsonDiff43.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor46 = jsonDiff43.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction48 = jsonDiff43.create("hi!");
        instruction48.index = '4';
        int int51 = instruction48.index;
        java.lang.String str52 = instruction48.key;
        foodev.jsondiff.Oper oper53 = instruction48.oper;
        boolean boolean54 = instruction48.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff56 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper55);
        foodev.jsondiff.jsonwrap.Wrapper wrapper57 = jsonDiff56.factory;
        foodev.jsondiff.JsonDiff jsonDiff58 = new foodev.jsondiff.JsonDiff(wrapper57);
        foodev.jsondiff.JsonDiff.Instruction instruction60 = jsonDiff58.create("");
        boolean boolean61 = instruction60.isIndexed();
        instruction60.index = (short) -1;
        instruction60.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction60.key = "hi!";
        foodev.jsondiff.Oper oper68 = instruction60.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff70 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper69);
        foodev.jsondiff.jsonwrap.Wrapper wrapper71 = jsonDiff70.factory;
        foodev.jsondiff.JsonDiff jsonDiff72 = new foodev.jsondiff.JsonDiff(wrapper71);
        foodev.jsondiff.JsonDiff.Instruction instruction74 = jsonDiff72.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean75 = instruction74.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper76 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff77 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper76);
        int int79 = jsonDiff77.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction81 = jsonDiff77.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper82 = instruction81.oper;
        instruction74.oper = oper82;
        instruction60.oper = oper82;
        instruction48.oper = oper82;
        instruction7.oper = oper82;
        boolean boolean87 = instruction7.isIndexed();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(oper12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertTrue("'" + oper29 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper29.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper32 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper32.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str37, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str38, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + oper39 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper39.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper42);
        org.junit.Assert.assertNotNull(instruction45);
        org.junit.Assert.assertNull(wildcardVisitor46);
        org.junit.Assert.assertNotNull(instruction48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertTrue("'" + oper53 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper53.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wrapper57);
        org.junit.Assert.assertNotNull(instruction60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + oper68 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper68.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper71);
        org.junit.Assert.assertNotNull(instruction74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(instruction81);
        org.junit.Assert.assertTrue("'" + oper82 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper82.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test05601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05601");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean6 = instruction5.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        int int10 = jsonDiff8.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper13 = instruction12.oper;
        instruction5.oper = oper13;
        java.lang.String str15 = instruction5.key;
        java.lang.String str16 = instruction5.key;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + oper13 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper13.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str15, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str16, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test05602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05602");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        int int7 = jsonDiff5.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = jsonDiff5.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test05603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05603");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException6);
        java.lang.String str10 = jacksonWrapperException6.toString();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~" + "'", str10, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
    }

    @Test
    public void test05604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05604");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff3.getVisitor();
        int int14 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(instruction16);
    }

    @Test
    public void test05605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05605");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = jsonDiff3.apply("", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction13);
    }

    @Test
    public void test05606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05606");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff16.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction19.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        java.lang.String str22 = instruction19.key;
        int int23 = instruction19.index;
        java.lang.Object obj24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj25 = jsonDiff3.diff((java.lang.Object) instruction19, obj24);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~" + "'", str22, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test05607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05607");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int10 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff13.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff13.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper18);
        int int21 = jsonDiff19.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff19.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff19.factory;
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff(wrapper24);
        foodev.jsondiff.Visitor<?> wildcardVisitor26 = jsonDiff25.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper27 = jsonDiff25.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement28 = wrapper17.wrap((java.lang.Object) jsonDiff25);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertNotNull(wrapper24);
        org.junit.Assert.assertNull(wildcardVisitor26);
        org.junit.Assert.assertNotNull(wrapper27);
    }

    @Test
    public void test05608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05608");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper15 = instruction14.oper;
        instruction14.index = (-1);
        instruction14.index = 0;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper20);
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff21.factory;
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper22);
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff(wrapper22);
        int int26 = jsonDiff24.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper29);
        int int32 = jsonDiff30.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction34 = jsonDiff30.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper35 = jsonDiff30.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction37 = jsonDiff30.create("");
        boolean boolean38 = instruction37.isIndexed();
        foodev.jsondiff.Oper oper39 = instruction37.oper;
        instruction37.index = 97;
        foodev.jsondiff.Oper oper42 = instruction37.oper;
        instruction28.oper = oper42;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) 0, (java.lang.Object) instruction28);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Integer cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(oper15);
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(instruction34);
        org.junit.Assert.assertNotNull(wrapper35);
        org.junit.Assert.assertNotNull(instruction37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + oper39 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper39.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper42 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper42.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05609");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int11 = jsonDiff3.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff14.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.Visitor<?> wildcardVisitor17 = jsonDiff16.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff16.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff(wrapper20);
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff(wrapper20);
        foodev.jsondiff.Visitor<?> wildcardVisitor23 = jsonDiff22.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff22.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int26 = instruction25.index;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement27 = wrapper12.wrap((java.lang.Object) instruction25);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNull(wildcardVisitor17);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNull(wildcardVisitor23);
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
    }

    @Test
    public void test05610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05610");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = jsonDiff1.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertNotNull(instruction5);
    }

    @Test
    public void test05611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05611");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff.Instruction instruction3 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction3.key = "";
        instruction3.index = 'a';
        instruction3.index = 1;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff11.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction14.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.JsonDiff.Instruction instruction17 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction17.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper20);
        int int23 = jsonDiff21.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff21.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper26 = instruction25.oper;
        instruction17.oper = oper26;
        instruction14.oper = oper26;
        instruction3.oper = oper26;
        foodev.jsondiff.Oper oper30 = instruction3.oper;
        int int31 = instruction3.index;
        boolean boolean32 = instruction3.isIndexed();
        int int33 = instruction3.index;
        java.lang.String str34 = instruction3.key;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement35 = jacksonWrapper0.wrap((java.lang.Object) instruction3);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertTrue("'" + oper26 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper26.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper30 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper30.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
    }

    @Test
    public void test05612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05612");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff7.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff7.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff7.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff7.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff7.factory;
        int int15 = jsonDiff7.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = jsonDiff7.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test05613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05613");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor5 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNull(wildcardVisitor5);
        org.junit.Assert.assertNotNull(instruction7);
    }

    @Test
    public void test05614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05614");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Node node15 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        foodev.jsondiff.Leaf[] leafArray17 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList18 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList18, leafArray17);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap20 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf21 = jsonDiff3.findLeaves(node15, jzonElement16, (java.util.List<foodev.jsondiff.Leaf>) leafList18, intMap20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(leafArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test05615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05615");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper3);
        int int7 = jsonDiff5.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException36.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray41 = jacksonWrapperException40.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException42);
        jacksonWrapperException36.addSuppressed((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException42.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException49);
        jacksonWrapperException42.addSuppressed((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException50);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement57 = wrapper10.wrap((java.lang.Object) jacksonWrapperException22);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray46);
    }

    @Test
    public void test05616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05616");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int13 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = null;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff19.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff19.create("~");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper24);
        foodev.jsondiff.jsonwrap.Wrapper wrapper26 = jsonDiff25.factory;
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff(wrapper26);
        foodev.jsondiff.Visitor<?> wildcardVisitor28 = jsonDiff27.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction30 = jsonDiff27.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper31 = jsonDiff27.factory;
        foodev.jsondiff.JsonDiff jsonDiff32 = new foodev.jsondiff.JsonDiff(wrapper31);
        foodev.jsondiff.JsonDiff jsonDiff33 = new foodev.jsondiff.JsonDiff(wrapper31);
        foodev.jsondiff.Visitor<?> wildcardVisitor34 = jsonDiff33.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor35 = jsonDiff33.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction37 = jsonDiff33.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction39 = jsonDiff33.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper40 = instruction39.oper;
        instruction23.oper = oper40;
        instruction17.oper = oper40;
        java.lang.String str43 = instruction17.key;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertNotNull(wrapper26);
        org.junit.Assert.assertNull(wildcardVisitor28);
        org.junit.Assert.assertNotNull(instruction30);
        org.junit.Assert.assertNotNull(wrapper31);
        org.junit.Assert.assertNull(wildcardVisitor34);
        org.junit.Assert.assertNull(wildcardVisitor35);
        org.junit.Assert.assertNotNull(instruction37);
        org.junit.Assert.assertNotNull(instruction39);
        org.junit.Assert.assertTrue("'" + oper40 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper40.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str43, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test05617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05617");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction11.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction11.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.JsonDiff.Instruction instruction16 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper17 = instruction16.oper;
        instruction16.key = "~";
        instruction16.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper22);
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff23.factory;
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff(wrapper24);
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff25.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff25.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction29.index = (short) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff33 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper32);
        foodev.jsondiff.jsonwrap.Wrapper wrapper34 = jsonDiff33.factory;
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff(wrapper34);
        foodev.jsondiff.JsonDiff.Instruction instruction37 = jsonDiff35.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction39 = jsonDiff35.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction39.index = (short) 100;
        boolean boolean42 = instruction39.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction43 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper44 = instruction43.oper;
        instruction43.key = "~";
        int int47 = instruction43.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff49 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper48);
        int int51 = jsonDiff49.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction53 = jsonDiff49.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean54 = instruction53.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff56 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper55);
        int int58 = jsonDiff56.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction60 = jsonDiff56.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper61 = instruction60.oper;
        instruction53.oper = oper61;
        instruction43.oper = oper61;
        foodev.jsondiff.Oper oper64 = instruction43.oper;
        instruction39.oper = oper64;
        instruction29.oper = oper64;
        instruction16.oper = oper64;
        instruction11.oper = oper64;
        boolean boolean69 = instruction11.isIndexed();
        instruction11.index = (short) 1;
        java.lang.Class<?> wildcardClass72 = instruction11.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNull(oper17);
        org.junit.Assert.assertNotNull(wrapper24);
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertNotNull(instruction29);
        org.junit.Assert.assertNotNull(wrapper34);
        org.junit.Assert.assertNotNull(instruction37);
        org.junit.Assert.assertNotNull(instruction39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(oper44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(instruction53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(instruction60);
        org.junit.Assert.assertTrue("'" + oper61 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper61.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper64 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper64.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test05618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05618");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        int int9 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        int int14 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int16 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(wrapper18);
    }

    @Test
    public void test05619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05619");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException24);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        java.lang.String str27 = jacksonWrapperException6.toString();
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str27, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test05620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05620");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff3.factory;
        int int19 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = null;
        foodev.jsondiff.JsonDiff.Instruction instruction21 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper22 = instruction21.oper;
        boolean boolean23 = instruction21.isIndexed();
        boolean boolean24 = instruction21.isIndexed();
        foodev.jsondiff.Oper oper25 = instruction21.oper;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement26 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement20, instruction21, jzonElement26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(oper22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(oper25);
    }

    @Test
    public void test05621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05621");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = wrapper9.parse("hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test05622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05622");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff10.getVisitor();
        int int13 = jsonDiff10.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff10.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff10.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = jsonDiff10.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction16);
    }

    @Test
    public void test05623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05623");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        int int12 = jsonDiff10.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff10.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean15 = instruction14.isIndexed();
        foodev.jsondiff.Oper oper16 = null;
        instruction14.oper = oper16;
        instruction14.index = ' ';
        foodev.jsondiff.Oper oper20 = instruction14.oper;
        instruction14.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        java.lang.String str23 = instruction14.key;
        int int24 = instruction14.index;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement25 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement8, instruction14, jzonElement25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(oper20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str23, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 32 + "'", int24 == 32);
    }

    @Test
    public void test05624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05624");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper1);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.Visitor<?> wildcardVisitor5 = jsonDiff4.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff4.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff4.factory;
        int int10 = jsonDiff4.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff4.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff4.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff4.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = gsonWrapper0.wrap((java.lang.Object) instruction15);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNull(wildcardVisitor5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNull(wildcardVisitor13);
        org.junit.Assert.assertNotNull(instruction15);
    }

    @Test
    public void test05625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05625");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        int int6 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff10.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean15 = instruction14.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        int int19 = jsonDiff17.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper22 = instruction21.oper;
        instruction14.oper = oper22;
        instruction8.oper = oper22;
        foodev.jsondiff.Oper oper25 = instruction8.oper;
        boolean boolean26 = instruction8.isIndexed();
        boolean boolean27 = instruction8.isIndexed();
        foodev.jsondiff.Oper oper28 = instruction8.oper;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + oper22 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper22.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper25 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper25.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + oper28 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper28.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05626");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff5.create("");
        foodev.jsondiff.Oper oper8 = instruction7.oper;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = gsonWrapper0.wrap((java.lang.Object) instruction7);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + oper8 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper8.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05627");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int10 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Node node13 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.Leaf[] leafArray15 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList16 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList16, leafArray15);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap18 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf19 = jsonDiff3.findLeaves(node13, jzonElement14, (java.util.List<foodev.jsondiff.Leaf>) leafList16, intMap18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertNotNull(leafArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test05628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05628");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        int int5 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper8 = instruction7.oper;
        instruction7.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        int int11 = instruction7.index;
        java.lang.String str12 = instruction7.key;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + oper8 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper8.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str12, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test05629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05629");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException28);
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException18.addSuppressed((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException38.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray43 = jacksonWrapperException42.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray47 = jacksonWrapperException46.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException48);
        jacksonWrapperException42.addSuppressed((java.lang.Throwable) jacksonWrapperException48);
        jacksonWrapperException40.addSuppressed((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray54 = jacksonWrapperException53.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException55);
        jacksonWrapperException42.addSuppressed((java.lang.Throwable) jacksonWrapperException55);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException42);
        jacksonWrapperException35.addSuppressed((java.lang.Throwable) jacksonWrapperException42);
        java.lang.Throwable[] throwableArray60 = jacksonWrapperException35.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray63 = jacksonWrapperException62.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException62.addSuppressed((java.lang.Throwable) jacksonWrapperException64);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException62);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray69 = jacksonWrapperException68.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException68);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException72 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray73 = jacksonWrapperException72.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException74 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException72);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException75 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException74);
        jacksonWrapperException68.addSuppressed((java.lang.Throwable) jacksonWrapperException74);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException77 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException74);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException78 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException77);
        jacksonWrapperException62.addSuppressed((java.lang.Throwable) jacksonWrapperException77);
        jacksonWrapperException35.addSuppressed((java.lang.Throwable) jacksonWrapperException77);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement81 = wrapper3.wrap((java.lang.Object) jacksonWrapperException77);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(throwableArray73);
    }

    @Test
    public void test05630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05630");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException16);
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException10);
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException33.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException39);
        jacksonWrapperException33.addSuppressed((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException33);
        jacksonWrapperException31.addSuppressed((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        java.lang.Throwable[] throwableArray47 = jacksonWrapperException25.getSuppressed();
        jacksonWrapperException23.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray50 = jacksonWrapperException49.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray54 = jacksonWrapperException53.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException55);
        jacksonWrapperException49.addSuppressed((java.lang.Throwable) jacksonWrapperException55);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray62 = jacksonWrapperException61.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException61);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException63);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray66 = jacksonWrapperException65.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException65);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray70 = jacksonWrapperException69.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException71 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException69);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException72 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException71);
        jacksonWrapperException65.addSuppressed((java.lang.Throwable) jacksonWrapperException71);
        jacksonWrapperException63.addSuppressed((java.lang.Throwable) jacksonWrapperException65);
        java.lang.Throwable[] throwableArray75 = jacksonWrapperException65.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException76 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException65);
        java.lang.Throwable[] throwableArray77 = jacksonWrapperException76.getSuppressed();
        jacksonWrapperException58.addSuppressed((java.lang.Throwable) jacksonWrapperException76);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException58);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement80 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException25);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(throwableArray77);
    }

    @Test
    public void test05631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05631");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("");
        int int12 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        int int16 = jsonDiff14.isIndexed("hi!");
        int int18 = jsonDiff14.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff14.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor20 = jsonDiff14.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper21 = jsonDiff14.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper22);
        int int25 = jsonDiff23.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor26 = jsonDiff23.getVisitor();
        int int28 = jsonDiff23.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper29 = jsonDiff23.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction31 = jsonDiff23.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper32 = jsonDiff23.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction34 = jsonDiff23.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int35 = instruction34.index;
        instruction34.index = (short) 0;
        instruction34.key = "";
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply((java.lang.Object) jsonDiff14, (java.lang.Object) "");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNull(wildcardVisitor20);
        org.junit.Assert.assertNotNull(wrapper21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(wrapper29);
        org.junit.Assert.assertNotNull(instruction31);
        org.junit.Assert.assertNotNull(wrapper32);
        org.junit.Assert.assertNotNull(instruction34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test05632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05632");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int7 = jsonDiff1.isIndexed("");
        int int9 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff14.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff16.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff16.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction20.index = (short) 100;
        boolean boolean23 = instruction20.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction24 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper25 = instruction24.oper;
        instruction24.key = "~";
        int int28 = instruction24.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper29);
        int int32 = jsonDiff30.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction34 = jsonDiff30.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean35 = instruction34.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper36);
        int int39 = jsonDiff37.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction41 = jsonDiff37.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper42 = instruction41.oper;
        instruction34.oper = oper42;
        instruction24.oper = oper42;
        foodev.jsondiff.Oper oper45 = instruction24.oper;
        instruction20.oper = oper45;
        instruction20.index = (-1);
        java.lang.String str49 = instruction20.key;
        java.lang.String str50 = instruction20.key;
        java.lang.String str51 = instruction20.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff53 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper52);
        foodev.jsondiff.jsonwrap.Wrapper wrapper54 = jsonDiff53.factory;
        foodev.jsondiff.JsonDiff jsonDiff55 = new foodev.jsondiff.JsonDiff(wrapper54);
        foodev.jsondiff.JsonDiff.Instruction instruction57 = jsonDiff55.create("");
        int int59 = jsonDiff55.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction61 = jsonDiff55.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction63 = jsonDiff55.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction65 = jsonDiff55.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Oper oper66 = instruction65.oper;
        foodev.jsondiff.Oper oper67 = instruction65.oper;
        instruction20.oper = oper67;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement69 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement12, instruction20, jzonElement69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(oper25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(instruction34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(instruction41);
        org.junit.Assert.assertTrue("'" + oper42 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper42.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper45 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper45.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str49, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str50, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str51, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertNotNull(wrapper54);
        org.junit.Assert.assertNotNull(instruction57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(instruction61);
        org.junit.Assert.assertNotNull(instruction63);
        org.junit.Assert.assertNotNull(instruction65);
        org.junit.Assert.assertTrue("'" + oper66 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper66.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper67 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper67.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05633");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.JsonDiff.Instruction instruction11 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper12 = instruction11.oper;
        instruction11.key = "~";
        instruction11.key = "";
        foodev.jsondiff.JsonDiff.Instruction instruction17 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction17.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper20);
        int int23 = jsonDiff21.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff21.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper26 = instruction25.oper;
        instruction17.oper = oper26;
        instruction11.oper = oper26;
        boolean boolean29 = instruction11.isIndexed();
        instruction11.index = ' ';
        int int32 = instruction11.index;
        instruction11.index = 0;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement35 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff9.applyPartial(jzonElement10, instruction11, jzonElement35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(oper12);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertTrue("'" + oper26 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper26.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 32 + "'", int32 == 32);
    }

    @Test
    public void test05634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05634");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = jsonDiff3.apply("hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test05635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05635");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException33.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException35);
        jacksonWrapperException29.addSuppressed((java.lang.Throwable) jacksonWrapperException35);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException42);
        jacksonWrapperException29.addSuppressed((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException45);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException45);
        java.lang.String str48 = jacksonWrapperException8.toString();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str48, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test05636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05636");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff1.factory;
        java.lang.Class<?> wildcardClass14 = jsonDiff1.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test05637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05637");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.Visitor<?> wildcardVisitor18 = jsonDiff17.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff17.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement22 = wrapper19.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNull(wildcardVisitor18);
        org.junit.Assert.assertNotNull(wrapper19);
    }

    @Test
    public void test05638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05638");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = wrapper12.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test05639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05639");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int11 = jsonDiff3.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper16 = instruction15.oper;
        instruction15.key = "~";
        int int19 = instruction15.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper20);
        int int23 = jsonDiff21.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff21.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean26 = instruction25.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper27);
        int int30 = jsonDiff28.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff28.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper33 = instruction32.oper;
        instruction25.oper = oper33;
        instruction15.oper = oper33;
        foodev.jsondiff.Oper oper36 = instruction15.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff38 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper37);
        foodev.jsondiff.jsonwrap.Wrapper wrapper39 = jsonDiff38.factory;
        foodev.jsondiff.JsonDiff jsonDiff40 = new foodev.jsondiff.JsonDiff(wrapper39);
        foodev.jsondiff.JsonDiff.Instruction instruction42 = jsonDiff40.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction44 = jsonDiff40.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction44.index = (short) 100;
        boolean boolean47 = instruction44.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff49 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper48);
        foodev.jsondiff.jsonwrap.Wrapper wrapper50 = jsonDiff49.factory;
        foodev.jsondiff.JsonDiff jsonDiff51 = new foodev.jsondiff.JsonDiff(wrapper50);
        foodev.jsondiff.JsonDiff.Instruction instruction53 = jsonDiff51.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction53.key = "hi!";
        foodev.jsondiff.Oper oper56 = instruction53.oper;
        instruction44.oper = oper56;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff59 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper58);
        foodev.jsondiff.jsonwrap.Wrapper wrapper60 = jsonDiff59.factory;
        foodev.jsondiff.JsonDiff jsonDiff61 = new foodev.jsondiff.JsonDiff(wrapper60);
        foodev.jsondiff.JsonDiff.Instruction instruction63 = jsonDiff61.create("");
        int int65 = jsonDiff61.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction67 = jsonDiff61.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction69 = jsonDiff61.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction69.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        java.lang.String str72 = instruction69.key;
        boolean boolean73 = instruction69.isIndexed();
        foodev.jsondiff.Oper oper74 = instruction69.oper;
        instruction44.oper = oper74;
        foodev.jsondiff.Oper oper76 = instruction44.oper;
        instruction15.oper = oper76;
        foodev.jsondiff.Oper oper78 = instruction15.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException80 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException81 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException80);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException82 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException80);
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) oper78, (java.lang.Object) jacksonWrapperException80);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNull(oper16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertTrue("'" + oper33 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper33.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper36 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper36.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper39);
        org.junit.Assert.assertNotNull(instruction42);
        org.junit.Assert.assertNotNull(instruction44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wrapper50);
        org.junit.Assert.assertNotNull(instruction53);
        org.junit.Assert.assertTrue("'" + oper56 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper56.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper60);
        org.junit.Assert.assertNotNull(instruction63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(instruction67);
        org.junit.Assert.assertNotNull(instruction69);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str72, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + oper74 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper74.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper76 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper76.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper78 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper78.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05640");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
    }

    @Test
    public void test05641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05641");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper18);
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff19.factory;
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff(wrapper20);
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff21.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement24 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement17, instruction23, jzonElement24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNotNull(instruction23);
    }

    @Test
    public void test05642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05642");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject17 = jsonDiff3.diff(jzonElement15, jzonElement16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(wrapper14);
    }

    @Test
    public void test05643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05643");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff7.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff7.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = jsonDiff7.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(instruction12);
    }

    @Test
    public void test05644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05644");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff.Instruction instruction4 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction4.key = "";
        instruction4.index = 'a';
        java.lang.String str9 = instruction4.key;
        int int10 = instruction4.index;
        java.lang.String str11 = instruction4.key;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = gsonWrapper0.wrap((java.lang.Object) str11);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 97 + "'", int10 == 97);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test05645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05645");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff9.create("~");
        int int12 = instruction11.index;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test05646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05646");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement17, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
    }

    @Test
    public void test05647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05647");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff1.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = jsonDiff1.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
    }

    @Test
    public void test05648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05648");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement5 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply(jzonElement5, jzonElement6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
    }

    @Test
    public void test05649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05649");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff6.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff6.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject11 = jsonDiff6.diff(jzonElement9, jzonElement10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper8);
    }

    @Test
    public void test05650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05650");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        foodev.jsondiff.Node node8 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        foodev.jsondiff.Leaf[] leafArray10 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList11 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList11, leafArray10);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap13 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf14 = jsonDiff3.findLeaves(node8, jzonElement9, (java.util.List<foodev.jsondiff.Leaf>) leafList11, intMap13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(leafArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test05651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05651");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff14.create("");
        boolean boolean17 = instruction16.isIndexed();
        instruction16.index = (short) -1;
        int int20 = instruction16.index;
        int int21 = instruction16.index;
        java.lang.String str22 = instruction16.key;
        instruction16.index = 0;
        foodev.jsondiff.Oper oper25 = instruction16.oper;
        instruction16.index = '4';
        foodev.jsondiff.jsonwrap.JzonElement jzonElement28 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff8.applyPartial(jzonElement10, instruction16, jzonElement28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + oper25 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper25.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05652");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray1 = jacksonWrapperException0.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException0.addSuppressed((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException10);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException10);
        jacksonWrapperException0.addSuppressed((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException31.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray35 = jacksonWrapperException34.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException38.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException40);
        jacksonWrapperException34.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException45.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray50 = jacksonWrapperException49.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException51);
        jacksonWrapperException45.addSuppressed((java.lang.Throwable) jacksonWrapperException51);
        jacksonWrapperException44.addSuppressed((java.lang.Throwable) jacksonWrapperException45);
        jacksonWrapperException31.addSuppressed((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException44);
        jacksonWrapperException29.addSuppressed((java.lang.Throwable) jacksonWrapperException56);
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray61 = jacksonWrapperException60.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException60);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException62);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray65 = jacksonWrapperException64.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException64);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray69 = jacksonWrapperException68.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException68);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException71 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException70);
        jacksonWrapperException64.addSuppressed((java.lang.Throwable) jacksonWrapperException70);
        jacksonWrapperException62.addSuppressed((java.lang.Throwable) jacksonWrapperException64);
        java.lang.Throwable[] throwableArray74 = jacksonWrapperException62.getSuppressed();
        java.lang.Throwable[] throwableArray75 = jacksonWrapperException62.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException76 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray77 = jacksonWrapperException76.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException78 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException76);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException80 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray81 = jacksonWrapperException80.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException82 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException80);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException83 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException82);
        jacksonWrapperException76.addSuppressed((java.lang.Throwable) jacksonWrapperException82);
        java.lang.Throwable[] throwableArray85 = jacksonWrapperException76.getSuppressed();
        jacksonWrapperException62.addSuppressed((java.lang.Throwable) jacksonWrapperException76);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException89 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException90 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException89);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException91 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException90);
        java.lang.Throwable[] throwableArray92 = jacksonWrapperException90.getSuppressed();
        jacksonWrapperException62.addSuppressed((java.lang.Throwable) jacksonWrapperException90);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException94 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException62);
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException62);
        org.junit.Assert.assertNotNull(throwableArray1);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertNotNull(throwableArray81);
        org.junit.Assert.assertNotNull(throwableArray85);
        org.junit.Assert.assertNotNull(throwableArray92);
    }

    @Test
    public void test05653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05653");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = jsonDiff1.apply("hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test05654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05654");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff9.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = jsonDiff9.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(wrapper11);
    }

    @Test
    public void test05655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05655");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction11.index = (short) 1;
        int int14 = instruction11.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper17);
        int int21 = jsonDiff19.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff19.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper24);
        foodev.jsondiff.jsonwrap.Wrapper wrapper26 = jsonDiff25.factory;
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff(wrapper26);
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff27.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean30 = instruction29.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff32 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper31);
        int int34 = jsonDiff32.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction36 = jsonDiff32.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper37 = instruction36.oper;
        instruction29.oper = oper37;
        instruction23.oper = oper37;
        instruction11.oper = oper37;
        instruction11.index = (-1);
        boolean boolean43 = instruction11.isIndexed();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertNotNull(wrapper26);
        org.junit.Assert.assertNotNull(instruction29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(instruction36);
        org.junit.Assert.assertTrue("'" + oper37 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper37.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test05656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05656");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject11 = jsonDiff7.diff(jzonElement9, jzonElement10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
    }

    @Test
    public void test05657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05657");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int10 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff3.getVisitor();
        int int13 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int15 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = jsonDiff3.apply("", "");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonJsonNull cannot be cast to foodev.jsondiff.jsonwrap.JzonObject");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test05658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05658");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff13.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff13.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper21);
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff22.factory;
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff(wrapper23);
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff24.create("");
        int int28 = jsonDiff24.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction30 = jsonDiff24.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction32.index = (short) 1;
        int int35 = instruction32.index;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj36 = jsonDiff1.diff((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Object) instruction32);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNull(wildcardVisitor15);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(instruction30);
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
    }

    @Test
    public void test05659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05659");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int12 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff14.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = jsonDiff14.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(instruction16);
    }

    @Test
    public void test05660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05660");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff20.create("");
        int int24 = jsonDiff20.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper25 = jsonDiff20.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor26 = jsonDiff20.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper27 = jsonDiff20.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff20.create("hi!");
        foodev.jsondiff.Oper oper30 = instruction29.oper;
        java.lang.String str31 = instruction29.key;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = jsonDiff3.diff((java.lang.Object) jacksonWrapperException14, (java.lang.Object) str31);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(wrapper25);
        org.junit.Assert.assertNull(wildcardVisitor26);
        org.junit.Assert.assertNotNull(wrapper27);
        org.junit.Assert.assertNotNull(instruction29);
        org.junit.Assert.assertTrue("'" + oper30 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper30.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
    }

    @Test
    public void test05661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05661");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException23.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        java.lang.String str38 = jacksonWrapperException37.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str38, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test05662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05662");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper10);
        int int14 = jsonDiff12.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff12.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff17.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int24 = jsonDiff17.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper25 = jsonDiff17.factory;
        foodev.jsondiff.JsonDiff jsonDiff26 = new foodev.jsondiff.JsonDiff(wrapper25);
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff(wrapper25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper28);
        foodev.jsondiff.jsonwrap.Wrapper wrapper30 = jsonDiff29.factory;
        foodev.jsondiff.JsonDiff jsonDiff31 = new foodev.jsondiff.JsonDiff(wrapper30);
        foodev.jsondiff.JsonDiff jsonDiff32 = new foodev.jsondiff.JsonDiff(wrapper30);
        foodev.jsondiff.JsonDiff jsonDiff33 = new foodev.jsondiff.JsonDiff(wrapper30);
        foodev.jsondiff.JsonDiff.Instruction instruction35 = jsonDiff33.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff12.apply((java.lang.Object) wrapper25, (java.lang.Object) jsonDiff33);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(wrapper25);
        org.junit.Assert.assertNotNull(wrapper30);
        org.junit.Assert.assertNotNull(instruction35);
    }

    @Test
    public void test05663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05663");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff1.getVisitor();
        java.lang.Class<?> wildcardClass13 = jsonDiff1.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test05664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05664");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject15 = jsonDiff12.diff(jzonElement13, jzonElement14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(wrapper11);
    }

    @Test
    public void test05665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05665");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff2.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff2.getVisitor();
        int int9 = jsonDiff2.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        java.lang.Class<?> wildcardClass12 = wrapper10.getClass();
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test05666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05666");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff14.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff14.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff14.factory;
        int int19 = jsonDiff14.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor20 = jsonDiff14.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper21 = jsonDiff14.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff14.factory;
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper22);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement24 = wrapper11.wrap((java.lang.Object) wrapper22);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor20);
        org.junit.Assert.assertNotNull(wrapper21);
        org.junit.Assert.assertNotNull(wrapper22);
    }

    @Test
    public void test05667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05667");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        int int6 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper8);
        int int11 = jsonDiff9.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff9.create("");
        boolean boolean17 = instruction16.isIndexed();
        instruction16.index = (byte) 100;
        instruction16.key = "hi!";
        foodev.jsondiff.Oper oper22 = null;
        instruction16.oper = oper22;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement24 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff4.applyPartial(jzonElement7, instruction16, jzonElement24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test05668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05668");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff5.create("");
        int int8 = instruction7.index;
        boolean boolean9 = instruction7.isIndexed();
        instruction7.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff15.create("");
        boolean boolean18 = instruction17.isIndexed();
        instruction17.index = (short) -1;
        foodev.jsondiff.Oper oper21 = instruction17.oper;
        instruction7.oper = oper21;
        instruction7.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        instruction7.index = (byte) 1;
        instruction7.index = ' ';
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement29 = jacksonWrapper0.wrap((java.lang.Object) instruction7);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + oper21 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper21.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05669");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int15 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int17 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor18 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = null;
        foodev.jsondiff.JsonDiff.Instruction instruction20 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper21 = instruction20.oper;
        instruction20.index = (-1);
        java.lang.String str24 = instruction20.key;
        boolean boolean25 = instruction20.isIndexed();
        instruction20.index = (short) 1;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement28 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement19, instruction20, jzonElement28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor18);
        org.junit.Assert.assertNull(oper21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test05670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05670");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction9.key = "";
        instruction9.index = 'a';
        instruction9.index = 1;
        java.lang.String str16 = instruction9.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        int int20 = jsonDiff18.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff18.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff18.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction26 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper27 = instruction26.oper;
        instruction26.index = (-1);
        java.lang.String str30 = instruction26.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff32 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper31);
        foodev.jsondiff.jsonwrap.Wrapper wrapper33 = jsonDiff32.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction35 = jsonDiff32.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction36 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction36.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff40 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper39);
        int int42 = jsonDiff40.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction44 = jsonDiff40.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper45 = instruction44.oper;
        instruction36.oper = oper45;
        instruction35.oper = oper45;
        instruction26.oper = oper45;
        instruction25.oper = oper45;
        instruction9.oper = oper45;
        instruction8.oper = oper45;
        foodev.jsondiff.Oper oper52 = instruction8.oper;
        instruction8.index = 52;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertNull(oper27);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(wrapper33);
        org.junit.Assert.assertNotNull(instruction35);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(instruction44);
        org.junit.Assert.assertTrue("'" + oper45 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper45.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper52 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper52.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05671");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        int int7 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.JsonDiff.Instruction instruction11 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper12 = instruction11.oper;
        instruction11.key = "~";
        java.lang.String str15 = instruction11.key;
        instruction11.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction11.index = (byte) 1;
        boolean boolean20 = instruction11.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper21);
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff22.factory;
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff(wrapper23);
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff24.create("");
        int int28 = jsonDiff24.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction30 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int32 = jsonDiff24.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper33 = jsonDiff24.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction35 = jsonDiff24.create("");
        foodev.jsondiff.Oper oper36 = instruction35.oper;
        instruction11.oper = oper36;
        foodev.jsondiff.Oper oper38 = instruction11.oper;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement39 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement10, instruction11, jzonElement39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNull(oper12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "~" + "'", str15, "~");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(instruction30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(wrapper33);
        org.junit.Assert.assertNotNull(instruction35);
        org.junit.Assert.assertTrue("'" + oper36 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper36.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper38 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper38.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05672");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject16 = jsonDiff1.diff(jzonElement14, jzonElement15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(wrapper13);
    }

    @Test
    public void test05673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05673");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper4);
        int int7 = jsonDiff5.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff5.create("");
        boolean boolean13 = instruction12.isIndexed();
        instruction12.index = (byte) 100;
        instruction12.key = "hi!";
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = jacksonWrapper0.wrap((java.lang.Object) instruction12);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test05674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05674");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException2);
        java.lang.String str4 = jacksonWrapperException2.toString();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~" + "'", str4, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
    }

    @Test
    public void test05675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05675");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement2 = gsonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05676");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = wrapper12.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test05677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05677");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException9);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        java.lang.String str26 = jacksonWrapperException24.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str26, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
    }

    @Test
    public void test05678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05678");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException39);
        java.lang.String str41 = jacksonWrapperException39.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str41, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test05679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05679");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int11 = jsonDiff3.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff14.checkIndex(jzonElement15, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper13);
    }

    @Test
    public void test05680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05680");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        int int5 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.Node node6 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = null;
        foodev.jsondiff.Leaf[] leafArray8 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList9 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList9, leafArray8);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap11 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf12 = jsonDiff3.findLeaves(node6, jzonElement7, (java.util.List<foodev.jsondiff.Leaf>) leafList9, intMap11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(leafArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test05681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05681");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        int int16 = jsonDiff3.isIndexed("");
        int int18 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper20);
        int int23 = jsonDiff21.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor24 = jsonDiff21.getVisitor();
        int int26 = jsonDiff21.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff21.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.String str29 = instruction28.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff31 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper30);
        foodev.jsondiff.jsonwrap.Wrapper wrapper32 = jsonDiff31.factory;
        foodev.jsondiff.JsonDiff jsonDiff33 = new foodev.jsondiff.JsonDiff(wrapper32);
        foodev.jsondiff.JsonDiff.Instruction instruction35 = jsonDiff33.create("");
        int int36 = instruction35.index;
        boolean boolean37 = instruction35.isIndexed();
        instruction35.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff41 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper40);
        foodev.jsondiff.jsonwrap.Wrapper wrapper42 = jsonDiff41.factory;
        foodev.jsondiff.JsonDiff jsonDiff43 = new foodev.jsondiff.JsonDiff(wrapper42);
        foodev.jsondiff.JsonDiff.Instruction instruction45 = jsonDiff43.create("");
        boolean boolean46 = instruction45.isIndexed();
        instruction45.index = (short) -1;
        instruction45.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction45.key = "hi!";
        foodev.jsondiff.Oper oper53 = instruction45.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff55 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper54);
        foodev.jsondiff.jsonwrap.Wrapper wrapper56 = jsonDiff55.factory;
        foodev.jsondiff.JsonDiff jsonDiff57 = new foodev.jsondiff.JsonDiff(wrapper56);
        foodev.jsondiff.JsonDiff.Instruction instruction59 = jsonDiff57.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean60 = instruction59.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff62 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper61);
        int int64 = jsonDiff62.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction66 = jsonDiff62.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper67 = instruction66.oper;
        instruction59.oper = oper67;
        instruction45.oper = oper67;
        instruction35.oper = oper67;
        instruction28.oper = oper67;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement72 = wrapper19.wrap((java.lang.Object) oper67);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str29, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertNotNull(wrapper32);
        org.junit.Assert.assertNotNull(instruction35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wrapper42);
        org.junit.Assert.assertNotNull(instruction45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + oper53 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper53.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper56);
        org.junit.Assert.assertNotNull(instruction59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(instruction66);
        org.junit.Assert.assertTrue("'" + oper67 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper67.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05682");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper4);
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff7.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff7.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff7.create("hi!");
        instruction12.index = '4';
        int int15 = instruction12.index;
        int int16 = instruction12.index;
        boolean boolean17 = instruction12.isIndexed();
        int int18 = instruction12.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper19);
        foodev.jsondiff.jsonwrap.Wrapper wrapper21 = jsonDiff20.factory;
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff(wrapper21);
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff22.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff22.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction26.index = (short) 100;
        boolean boolean29 = instruction26.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff31 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper30);
        foodev.jsondiff.jsonwrap.Wrapper wrapper32 = jsonDiff31.factory;
        foodev.jsondiff.JsonDiff jsonDiff33 = new foodev.jsondiff.JsonDiff(wrapper32);
        foodev.jsondiff.JsonDiff.Instruction instruction35 = jsonDiff33.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction35.key = "hi!";
        foodev.jsondiff.Oper oper38 = instruction35.oper;
        instruction26.oper = oper38;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff41 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper40);
        foodev.jsondiff.jsonwrap.Wrapper wrapper42 = jsonDiff41.factory;
        foodev.jsondiff.JsonDiff jsonDiff43 = new foodev.jsondiff.JsonDiff(wrapper42);
        foodev.jsondiff.JsonDiff.Instruction instruction45 = jsonDiff43.create("");
        int int47 = jsonDiff43.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction49 = jsonDiff43.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction51 = jsonDiff43.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction51.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        java.lang.String str54 = instruction51.key;
        boolean boolean55 = instruction51.isIndexed();
        foodev.jsondiff.Oper oper56 = instruction51.oper;
        instruction26.oper = oper56;
        foodev.jsondiff.Oper oper58 = instruction26.oper;
        instruction12.oper = oper58;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement60 = jacksonWrapper0.wrap((java.lang.Object) instruction12);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(wrapper21);
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wrapper32);
        org.junit.Assert.assertNotNull(instruction35);
        org.junit.Assert.assertTrue("'" + oper38 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper38.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper42);
        org.junit.Assert.assertNotNull(instruction45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(instruction49);
        org.junit.Assert.assertNotNull(instruction51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str54, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + oper56 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper56.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper58 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper58.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05683");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        int int16 = jsonDiff3.isIndexed("");
        int int18 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper20);
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff21.factory;
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper22);
        foodev.jsondiff.Visitor<?> wildcardVisitor24 = jsonDiff23.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff23.create("");
        int int28 = jsonDiff23.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor29 = jsonDiff23.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper30 = jsonDiff23.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement31 = wrapper19.wrap((java.lang.Object) wrapper30);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNull(wildcardVisitor24);
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor29);
        org.junit.Assert.assertNotNull(wrapper30);
    }

    @Test
    public void test05684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05684");
        foodev.jsondiff.JsonDiff.Instruction instruction0 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper1 = instruction0.oper;
        instruction0.key = "~";
        java.lang.String str4 = instruction0.key;
        instruction0.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction0.index = (byte) 1;
        boolean boolean9 = instruction0.isIndexed();
        instruction0.index = 52;
        org.junit.Assert.assertNull(oper1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "~" + "'", str4, "~");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test05685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05685");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff9.create("");
        int int13 = jsonDiff9.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff9.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor20 = jsonDiff9.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff9.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff9.create("hi!");
        int int25 = instruction24.index;
        java.lang.Object obj26 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply((java.lang.Object) int25, obj26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertNull(wildcardVisitor20);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test05686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05686");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff3.getVisitor();
        int int14 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Node node19 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = null;
        foodev.jsondiff.Leaf[] leafArray21 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList22 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList22, leafArray21);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap24 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf25 = jsonDiff3.findLeaves(node19, jzonElement20, (java.util.List<foodev.jsondiff.Leaf>) leafList22, intMap24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertNotNull(leafArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test05687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05687");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException9);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException2);
        org.junit.Assert.assertNotNull(throwableArray7);
    }

    @Test
    public void test05688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05688");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = jsonDiff1.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test05689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05689");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        int int6 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff4.getVisitor();
        int int11 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff4.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff4.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper14);
        int int17 = jsonDiff15.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff15.factory;
        int int20 = jsonDiff15.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff15.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff15.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff15.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper25 = jsonDiff15.factory;
        java.lang.Class<?> wildcardClass26 = jsonDiff15.getClass();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray35 = jacksonWrapperException34.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException36);
        jacksonWrapperException30.addSuppressed((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        java.lang.Throwable[] throwableArray41 = jacksonWrapperException39.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException39);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj45 = jsonDiff4.diff((java.lang.Object) wildcardClass26, (java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Class cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertNotNull(wrapper24);
        org.junit.Assert.assertNotNull(wrapper25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray41);
    }

    @Test
    public void test05690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05690");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction4.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        java.lang.String str7 = instruction4.key;
        int int8 = instruction4.index;
        java.lang.String str9 = instruction4.key;
        instruction4.index = (byte) 10;
        foodev.jsondiff.Oper oper12 = instruction4.oper;
        instruction4.index = 35;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~" + "'", str7, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~" + "'", str9, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        org.junit.Assert.assertTrue("'" + oper12 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper12.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05691");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int12 = jsonDiff8.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper14);
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff15.factory;
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper16);
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff17.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction24 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper25 = instruction24.oper;
        instruction24.key = "~";
        instruction24.key = "";
        foodev.jsondiff.JsonDiff.Instruction instruction30 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction30.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff34 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper33);
        int int36 = jsonDiff34.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction38 = jsonDiff34.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper39 = instruction38.oper;
        instruction30.oper = oper39;
        instruction24.oper = oper39;
        instruction23.oper = oper39;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement43 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff8.applyPartial(jzonElement13, instruction23, jzonElement43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertNull(oper25);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(instruction38);
        org.junit.Assert.assertTrue("'" + oper39 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper39.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05692");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff14.create("");
        int int18 = jsonDiff14.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff14.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int22 = jsonDiff14.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff14.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff14.factory;
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff(wrapper24);
        foodev.jsondiff.JsonDiff jsonDiff26 = new foodev.jsondiff.JsonDiff(wrapper24);
        java.lang.Object obj27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = jsonDiff1.diff((java.lang.Object) wrapper24, obj27);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertNotNull(wrapper24);
    }

    @Test
    public void test05693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05693");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff14.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff14.factory;
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff11.apply((java.lang.Object) wrapper16, (java.lang.Object) jacksonWrapperException21);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
    }

    @Test
    public void test05694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05694");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        int int13 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement14, jzonElement15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test05695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05695");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int11 = jsonDiff3.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Node node16 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        foodev.jsondiff.Leaf[] leafArray18 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList19 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList19, leafArray18);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap21 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf22 = jsonDiff3.findLeaves(node16, jzonElement17, (java.util.List<foodev.jsondiff.Leaf>) leafList19, intMap21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(leafArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test05696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05696");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int18 = jsonDiff12.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = jsonDiff12.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test05697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05697");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = wrapper13.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
    }

    @Test
    public void test05698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05698");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        int int10 = jsonDiff1.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply(jzonElement12, jzonElement13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
    }

    @Test
    public void test05699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05699");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        int int4 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int10 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Leaf leaf11 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray12 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = jsonDiff1.accept(leaf11, jzonArray12, jzonObject13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test05700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05700");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement12, jzonElement13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
    }

    @Test
    public void test05701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05701");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff14.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff14.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff14.factory;
        int int20 = jsonDiff14.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper21 = jsonDiff14.factory;
        int int23 = jsonDiff14.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff14.create("~");
        java.lang.String str26 = instruction25.key;
        instruction25.key = "~";
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement29 = wrapper9.wrap((java.lang.Object) "~");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNull(wildcardVisitor15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(wrapper21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "~" + "'", str26, "~");
    }

    @Test
    public void test05702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05702");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int9 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int11 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply(jzonElement12, jzonElement13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test05703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05703");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper6);
        java.lang.Object obj9 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        int int13 = jsonDiff11.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff11.getVisitor();
        int int16 = jsonDiff11.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff11.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper20 = instruction19.oper;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj21 = jsonDiff8.diff(obj9, (java.lang.Object) oper20);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertTrue("'" + oper20 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper20.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05704");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int8 = jsonDiff1.isIndexed("hi!");
        int int10 = jsonDiff1.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject16 = jsonDiff1.diff(jzonElement14, jzonElement15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction13);
    }

    @Test
    public void test05705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05705");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement5 = gsonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05706");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor18 = jsonDiff3.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNull(wildcardVisitor18);
    }

    @Test
    public void test05707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05707");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("");
        boolean boolean16 = instruction15.isIndexed();
        instruction15.index = (short) -1;
        instruction15.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction15.key = "hi!";
        foodev.jsondiff.Oper oper23 = instruction15.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper24);
        foodev.jsondiff.jsonwrap.Wrapper wrapper26 = jsonDiff25.factory;
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff(wrapper26);
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff27.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean30 = instruction29.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff32 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper31);
        int int34 = jsonDiff32.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction36 = jsonDiff32.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper37 = instruction36.oper;
        instruction29.oper = oper37;
        instruction15.oper = oper37;
        instruction9.oper = oper37;
        instruction9.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        boolean boolean43 = instruction9.isIndexed();
        int int44 = instruction9.index;
        boolean boolean45 = instruction9.isIndexed();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + oper23 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper23.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper26);
        org.junit.Assert.assertNotNull(instruction29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(instruction36);
        org.junit.Assert.assertTrue("'" + oper37 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper37.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test05708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05708");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        int int11 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.Object obj12 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff14.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff16.create("");
        int int20 = jsonDiff16.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff16.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff16.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff16.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor27 = jsonDiff16.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper28 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff(wrapper28);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = jsonDiff1.diff(obj12, (java.lang.Object) wrapper28);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertNull(wildcardVisitor27);
        org.junit.Assert.assertNotNull(wrapper28);
    }

    @Test
    public void test05709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05709");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException19.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException31.getSuppressed();
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException31.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException28.addSuppressed((java.lang.Throwable) jacksonWrapperException34);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException34);
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException17.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray37);
    }

    @Test
    public void test05710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05710");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        int int10 = jsonDiff8.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff14.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff14.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction18.index = (short) 100;
        boolean boolean21 = instruction18.isIndexed();
        instruction18.index = (short) 10;
        foodev.jsondiff.Oper oper24 = instruction18.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff26 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper25);
        int int28 = jsonDiff26.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction30 = jsonDiff26.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff32 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper31);
        int int34 = jsonDiff32.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction36 = jsonDiff32.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean37 = instruction36.isIndexed();
        int int38 = instruction36.index;
        int int39 = instruction36.index;
        foodev.jsondiff.Oper oper40 = instruction36.oper;
        int int41 = instruction36.index;
        int int42 = instruction36.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff44 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper43);
        foodev.jsondiff.jsonwrap.Wrapper wrapper45 = jsonDiff44.factory;
        foodev.jsondiff.JsonDiff jsonDiff46 = new foodev.jsondiff.JsonDiff(wrapper45);
        foodev.jsondiff.JsonDiff.Instruction instruction48 = jsonDiff46.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor49 = jsonDiff46.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction51 = jsonDiff46.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction51.index = 100;
        instruction51.index = 0;
        foodev.jsondiff.Oper oper56 = instruction51.oper;
        instruction36.oper = oper56;
        instruction30.oper = oper56;
        instruction18.oper = oper56;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray62 = jacksonWrapperException61.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException61);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray65 = jacksonWrapperException64.getSuppressed();
        jacksonWrapperException63.addSuppressed((java.lang.Throwable) jacksonWrapperException64);
        java.lang.Throwable[] throwableArray67 = jacksonWrapperException64.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff8.apply((java.lang.Object) oper56, (java.lang.Object) throwableArray67);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + oper24 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper24.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(instruction30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(instruction36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + oper40 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper40.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(wrapper45);
        org.junit.Assert.assertNotNull(instruction48);
        org.junit.Assert.assertNull(wildcardVisitor49);
        org.junit.Assert.assertNotNull(instruction51);
        org.junit.Assert.assertTrue("'" + oper56 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper56.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(throwableArray67);
    }

    @Test
    public void test05711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05711");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff1.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction10.key = "";
        instruction10.index = 'a';
        instruction10.index = 1;
        boolean boolean17 = instruction10.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper18);
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff19.factory;
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff(wrapper20);
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff21.create("");
        boolean boolean24 = instruction23.isIndexed();
        instruction23.index = (short) -1;
        int int27 = instruction23.index;
        int int28 = instruction23.index;
        foodev.jsondiff.JsonDiff.Instruction instruction29 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper30 = instruction29.oper;
        instruction29.key = "~";
        instruction29.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff36 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper35);
        foodev.jsondiff.jsonwrap.Wrapper wrapper37 = jsonDiff36.factory;
        foodev.jsondiff.JsonDiff jsonDiff38 = new foodev.jsondiff.JsonDiff(wrapper37);
        foodev.jsondiff.JsonDiff.Instruction instruction40 = jsonDiff38.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction42 = jsonDiff38.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction42.index = (short) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff46 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper45);
        foodev.jsondiff.jsonwrap.Wrapper wrapper47 = jsonDiff46.factory;
        foodev.jsondiff.JsonDiff jsonDiff48 = new foodev.jsondiff.JsonDiff(wrapper47);
        foodev.jsondiff.JsonDiff.Instruction instruction50 = jsonDiff48.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction52 = jsonDiff48.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction52.index = (short) 100;
        boolean boolean55 = instruction52.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction56 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper57 = instruction56.oper;
        instruction56.key = "~";
        int int60 = instruction56.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff62 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper61);
        int int64 = jsonDiff62.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction66 = jsonDiff62.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean67 = instruction66.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff69 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper68);
        int int71 = jsonDiff69.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction73 = jsonDiff69.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper74 = instruction73.oper;
        instruction66.oper = oper74;
        instruction56.oper = oper74;
        foodev.jsondiff.Oper oper77 = instruction56.oper;
        instruction52.oper = oper77;
        instruction42.oper = oper77;
        instruction29.oper = oper77;
        instruction23.oper = oper77;
        foodev.jsondiff.Oper oper82 = instruction23.oper;
        instruction10.oper = oper82;
        java.lang.String str84 = instruction10.key;
        java.lang.String str85 = instruction10.key;
        java.lang.String str86 = instruction10.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper87 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff88 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper87);
        int int90 = jsonDiff88.isIndexed("hi!");
        int int92 = jsonDiff88.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper93 = jsonDiff88.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper94 = jsonDiff88.factory;
        foodev.jsondiff.JsonDiff jsonDiff95 = new foodev.jsondiff.JsonDiff(wrapper94);
        foodev.jsondiff.JsonDiff jsonDiff96 = new foodev.jsondiff.JsonDiff(wrapper94);
        foodev.jsondiff.JsonDiff.Instruction instruction98 = jsonDiff96.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply((java.lang.Object) str86, (java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(oper30);
        org.junit.Assert.assertNotNull(wrapper37);
        org.junit.Assert.assertNotNull(instruction40);
        org.junit.Assert.assertNotNull(instruction42);
        org.junit.Assert.assertNotNull(wrapper47);
        org.junit.Assert.assertNotNull(instruction50);
        org.junit.Assert.assertNotNull(instruction52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(oper57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(instruction66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(instruction73);
        org.junit.Assert.assertTrue("'" + oper74 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper74.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper77 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper77.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper82 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper82.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNotNull(wrapper93);
        org.junit.Assert.assertNotNull(wrapper94);
        org.junit.Assert.assertNotNull(instruction98);
    }

    @Test
    public void test05712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05712");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement3 = jacksonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05713");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        int int12 = jsonDiff10.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff10.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = wrapper13.parse("hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
    }

    @Test
    public void test05714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05714");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper8);
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff11.create("");
        int int15 = jsonDiff11.isIndexed("");
        int int17 = jsonDiff11.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff11.create("~");
        foodev.jsondiff.Oper oper20 = instruction19.oper;
        int int21 = instruction19.index;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement22 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement7, instruction19, jzonElement22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertTrue("'" + oper20 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper20.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test05715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05715");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply(jzonElement6, jzonElement7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(instruction5);
    }

    @Test
    public void test05716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05716");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement11, jzonElement12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNull(wildcardVisitor10);
    }

    @Test
    public void test05717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05717");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff9.apply(jzonElement10, jzonElement11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(wrapper8);
    }

    @Test
    public void test05718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05718");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement25 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException22);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray16);
    }

    @Test
    public void test05719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05719");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement11, jzonElement12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(instruction10);
    }

    @Test
    public void test05720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05720");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper2);
        int int5 = jsonDiff3.isIndexed("hi!");
        int int7 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = jacksonWrapper0.wrap((java.lang.Object) jsonDiff15);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(wrapper14);
    }

    @Test
    public void test05721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05721");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff10.checkIndex(jzonElement11, 32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test05722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05722");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff5.getVisitor();
        foodev.jsondiff.Leaf leaf9 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray10 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = jsonDiff5.accept(leaf9, jzonArray10, jzonObject11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNull(wildcardVisitor8);
    }

    @Test
    public void test05723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05723");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        int int12 = jsonDiff9.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        java.lang.Class<?> wildcardClass13 = jsonDiff9.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test05724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05724");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int12 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff1.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = jsonDiff1.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
    }

    @Test
    public void test05725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05725");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        int int9 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        int int14 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int16 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff3.factory;
        foodev.jsondiff.Node node18 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = null;
        foodev.jsondiff.Leaf[] leafArray20 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList21 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList21, leafArray20);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap23 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf24 = jsonDiff3.findLeaves(node18, jzonElement19, (java.util.List<foodev.jsondiff.Leaf>) leafList21, intMap23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(leafArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test05726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05726");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff6.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException25);
        java.lang.Class<?> wildcardClass27 = jacksonWrapperException25.getClass();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement28 = wrapper7.wrap((java.lang.Object) jacksonWrapperException25);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test05727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05727");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int12 = jsonDiff1.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff18.create("");
        int int21 = instruction20.index;
        boolean boolean22 = instruction20.isIndexed();
        instruction20.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff26 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper25);
        foodev.jsondiff.jsonwrap.Wrapper wrapper27 = jsonDiff26.factory;
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff(wrapper27);
        foodev.jsondiff.JsonDiff.Instruction instruction30 = jsonDiff28.create("");
        boolean boolean31 = instruction30.isIndexed();
        instruction30.index = (short) -1;
        foodev.jsondiff.Oper oper34 = instruction30.oper;
        instruction20.oper = oper34;
        foodev.jsondiff.JsonDiff.Instruction instruction36 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper37 = instruction36.oper;
        instruction36.key = "~";
        java.lang.String str40 = instruction36.key;
        foodev.jsondiff.JsonDiff.Instruction instruction41 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper42 = instruction41.oper;
        instruction41.index = (-1);
        java.lang.String str45 = instruction41.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff47 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper46);
        foodev.jsondiff.jsonwrap.Wrapper wrapper48 = jsonDiff47.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction50 = jsonDiff47.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction51 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction51.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff55 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper54);
        int int57 = jsonDiff55.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction59 = jsonDiff55.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper60 = instruction59.oper;
        instruction51.oper = oper60;
        instruction50.oper = oper60;
        instruction41.oper = oper60;
        instruction36.oper = oper60;
        instruction20.oper = oper60;
        foodev.jsondiff.Oper oper66 = instruction20.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff68 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper67);
        foodev.jsondiff.jsonwrap.Wrapper wrapper69 = jsonDiff68.factory;
        foodev.jsondiff.JsonDiff jsonDiff70 = new foodev.jsondiff.JsonDiff(wrapper69);
        foodev.jsondiff.JsonDiff.Instruction instruction72 = jsonDiff70.create("");
        int int74 = jsonDiff70.isIndexed("");
        int int76 = jsonDiff70.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction78 = jsonDiff70.create("~");
        foodev.jsondiff.Oper oper79 = instruction78.oper;
        instruction20.oper = oper79;
        foodev.jsondiff.Oper oper81 = instruction20.oper;
        java.lang.String str82 = instruction20.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper83 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff84 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper83);
        foodev.jsondiff.jsonwrap.Wrapper wrapper85 = jsonDiff84.factory;
        foodev.jsondiff.JsonDiff jsonDiff86 = new foodev.jsondiff.JsonDiff(wrapper85);
        foodev.jsondiff.JsonDiff.Instruction instruction88 = jsonDiff86.create("");
        int int90 = jsonDiff86.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction92 = jsonDiff86.create("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor93 = jsonDiff86.getVisitor();
        int int95 = jsonDiff86.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj96 = jsonDiff1.diff((java.lang.Object) str82, (java.lang.Object) jsonDiff86);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wrapper27);
        org.junit.Assert.assertNotNull(instruction30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + oper34 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper34.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNull(oper37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "~" + "'", str40, "~");
        org.junit.Assert.assertNull(oper42);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(wrapper48);
        org.junit.Assert.assertNotNull(instruction50);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(instruction59);
        org.junit.Assert.assertTrue("'" + oper60 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper60.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper66 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper66.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper69);
        org.junit.Assert.assertNotNull(instruction72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(instruction78);
        org.junit.Assert.assertTrue("'" + oper79 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper79.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper81 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper81.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertNotNull(wrapper85);
        org.junit.Assert.assertNotNull(instruction88);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertNotNull(instruction92);
        org.junit.Assert.assertNull(wildcardVisitor93);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
    }

    @Test
    public void test05728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05728");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = wrapper16.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(wrapper16);
    }

    @Test
    public void test05729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05729");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        int int12 = jsonDiff9.isIndexed("~");
        foodev.jsondiff.Leaf leaf13 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray14 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = jsonDiff9.accept(leaf13, jzonArray14, jzonObject15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test05730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05730");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException30);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException37);
        jacksonWrapperException30.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException45.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray50 = jacksonWrapperException49.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException51);
        jacksonWrapperException45.addSuppressed((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException51.addSuppressed((java.lang.Throwable) jacksonWrapperException55);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray60 = jacksonWrapperException59.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray63 = jacksonWrapperException62.getSuppressed();
        jacksonWrapperException61.addSuppressed((java.lang.Throwable) jacksonWrapperException62);
        jacksonWrapperException57.addSuppressed((java.lang.Throwable) jacksonWrapperException62);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException57);
        java.lang.String str67 = jacksonWrapperException13.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str67, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test05731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05731");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper5);
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff6.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff8.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff8.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff8.factory;
        int int14 = jsonDiff8.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff8.factory;
        int int17 = jsonDiff8.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff8.create("");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = gsonWrapper0.wrap((java.lang.Object) jsonDiff8);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(instruction19);
    }

    @Test
    public void test05732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05732");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException38);
        java.lang.Throwable[] throwableArray41 = jacksonWrapperException40.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray47 = jacksonWrapperException46.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray51 = jacksonWrapperException50.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray55 = jacksonWrapperException54.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException56);
        jacksonWrapperException50.addSuppressed((java.lang.Throwable) jacksonWrapperException56);
        jacksonWrapperException48.addSuppressed((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray64 = jacksonWrapperException63.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException63);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray68 = jacksonWrapperException67.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException67);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException69);
        jacksonWrapperException63.addSuppressed((java.lang.Throwable) jacksonWrapperException69);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException72 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException63);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException73 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException72);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException75 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray76 = jacksonWrapperException75.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException77 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException75);
        jacksonWrapperException73.addSuppressed((java.lang.Throwable) jacksonWrapperException75);
        jacksonWrapperException50.addSuppressed((java.lang.Throwable) jacksonWrapperException73);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException80 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException73);
        jacksonWrapperException40.addSuppressed((java.lang.Throwable) jacksonWrapperException80);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement82 = wrapper11.wrap((java.lang.Object) jacksonWrapperException80);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(throwableArray76);
    }

    @Test
    public void test05733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05733");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper6);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = jsonDiff8.diff("", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
    }

    @Test
    public void test05734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05734");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement3 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement3, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
    }

    @Test
    public void test05735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05735");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException23);
        java.lang.String str25 = jacksonWrapperException23.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str25, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test05736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05736");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int15 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Node node20 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement21 = null;
        foodev.jsondiff.Leaf[] leafArray22 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList23 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList23, leafArray22);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap25 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf26 = jsonDiff3.findLeaves(node20, jzonElement21, (java.util.List<foodev.jsondiff.Leaf>) leafList23, intMap25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertNotNull(leafArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test05737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05737");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException30);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException35.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException39.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException41);
        jacksonWrapperException35.addSuppressed((java.lang.Throwable) jacksonWrapperException41);
        jacksonWrapperException34.addSuppressed((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException35);
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException45.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        java.lang.Throwable[] throwableArray48 = jacksonWrapperException47.getSuppressed();
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        java.lang.String str51 = jacksonWrapperException50.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str51, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test05738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05738");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException24);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException24);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement28 = gsonWrapper0.wrap((java.lang.Object) jacksonWrapperException12);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
    }

    @Test
    public void test05739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05739");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff12.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement21 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff19.apply(jzonElement20, jzonElement21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(wrapper18);
    }

    @Test
    public void test05740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05740");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException23);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj25 = jsonDiff5.diff((java.lang.Object) jacksonWrapperException12, (java.lang.Object) "");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(instruction7);
    }

    @Test
    public void test05741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05741");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff9.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff9.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int16 = jsonDiff9.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor17 = jsonDiff9.getVisitor();
        foodev.jsondiff.Node node18 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = null;
        foodev.jsondiff.Leaf[] leafArray20 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList21 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList21, leafArray20);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap23 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf24 = jsonDiff9.findLeaves(node18, jzonElement19, (java.util.List<foodev.jsondiff.Leaf>) leafList21, intMap23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor17);
        org.junit.Assert.assertNotNull(leafArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test05742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05742");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper8);
        int int11 = jsonDiff9.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff9.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor17 = jsonDiff9.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper22);
        foodev.jsondiff.Visitor<?> wildcardVisitor24 = jsonDiff23.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor25 = jsonDiff23.getVisitor();
        int int27 = jsonDiff23.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper28 = jsonDiff23.factory;
        int int30 = jsonDiff23.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff23.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) jsonDiff9, (java.lang.Object) jsonDiff23);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertNull(wildcardVisitor17);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertNull(wildcardVisitor24);
        org.junit.Assert.assertNull(wildcardVisitor25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(wrapper28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(instruction32);
    }

    @Test
    public void test05743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05743");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff3.factory;
        foodev.jsondiff.Node node14 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        foodev.jsondiff.Leaf[] leafArray16 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList17 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList17, leafArray16);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap19 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf20 = jsonDiff3.findLeaves(node14, jzonElement15, (java.util.List<foodev.jsondiff.Leaf>) leafList17, intMap19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(leafArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test05744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05744");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        int int10 = jsonDiff8.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff8.create("");
        foodev.jsondiff.Node node14 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        foodev.jsondiff.Leaf[] leafArray16 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList17 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList17, leafArray16);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap19 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf20 = jsonDiff8.findLeaves(node14, jzonElement15, (java.util.List<foodev.jsondiff.Leaf>) leafList17, intMap19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(leafArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test05745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05745");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(instruction9);
    }

    @Test
    public void test05746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05746");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        int int13 = jsonDiff11.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff11.factory;
        int int16 = jsonDiff11.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff11.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor18 = jsonDiff11.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass19 = wildcardVisitor18.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNull(wildcardVisitor18);
    }

    @Test
    public void test05747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05747");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement10, jzonElement11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNull(wildcardVisitor9);
    }

    @Test
    public void test05748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05748");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException12);
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray17);
    }

    @Test
    public void test05749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05749");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = wrapper9.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test05750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05750");
        java.lang.Throwable throwable1 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException(throwable1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", throwable1);
    }

    @Test
    public void test05751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05751");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException30);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException37);
        jacksonWrapperException30.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        java.lang.String str44 = jacksonWrapperException13.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str44, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test05752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05752");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        int int6 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff4.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject12 = jsonDiff4.diff(jzonElement10, jzonElement11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
    }

    @Test
    public void test05753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05753");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException30.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException36.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray41 = jacksonWrapperException40.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException42);
        jacksonWrapperException36.addSuppressed((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException45);
        jacksonWrapperException30.addSuppressed((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException48);
        jacksonWrapperException28.addSuppressed((java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException48);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement52 = wrapper11.wrap((java.lang.Object) jacksonWrapperException51);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray41);
    }

    @Test
    public void test05754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05754");
        foodev.jsondiff.JsonDiff.Instruction instruction0 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction0.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper3);
        int int6 = jsonDiff4.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper9 = instruction8.oper;
        instruction0.oper = oper9;
        boolean boolean11 = instruction0.isIndexed();
        foodev.jsondiff.Oper oper12 = instruction0.oper;
        java.lang.String str13 = instruction0.key;
        boolean boolean14 = instruction0.isIndexed();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + oper9 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper9.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + oper12 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper12.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test05755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05755");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff14.create("");
        boolean boolean17 = instruction16.isIndexed();
        instruction16.index = (short) -1;
        int int20 = instruction16.index;
        int int21 = instruction16.index;
        foodev.jsondiff.JsonDiff.Instruction instruction22 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper23 = instruction22.oper;
        instruction22.key = "~";
        instruction22.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper28);
        foodev.jsondiff.jsonwrap.Wrapper wrapper30 = jsonDiff29.factory;
        foodev.jsondiff.JsonDiff jsonDiff31 = new foodev.jsondiff.JsonDiff(wrapper30);
        foodev.jsondiff.JsonDiff.Instruction instruction33 = jsonDiff31.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction35 = jsonDiff31.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction35.index = (short) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff39 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper38);
        foodev.jsondiff.jsonwrap.Wrapper wrapper40 = jsonDiff39.factory;
        foodev.jsondiff.JsonDiff jsonDiff41 = new foodev.jsondiff.JsonDiff(wrapper40);
        foodev.jsondiff.JsonDiff.Instruction instruction43 = jsonDiff41.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction45 = jsonDiff41.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction45.index = (short) 100;
        boolean boolean48 = instruction45.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction49 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper50 = instruction49.oper;
        instruction49.key = "~";
        int int53 = instruction49.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff55 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper54);
        int int57 = jsonDiff55.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction59 = jsonDiff55.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean60 = instruction59.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff62 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper61);
        int int64 = jsonDiff62.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction66 = jsonDiff62.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper67 = instruction66.oper;
        instruction59.oper = oper67;
        instruction49.oper = oper67;
        foodev.jsondiff.Oper oper70 = instruction49.oper;
        instruction45.oper = oper70;
        instruction35.oper = oper70;
        instruction22.oper = oper70;
        instruction16.oper = oper70;
        foodev.jsondiff.Oper oper75 = instruction16.oper;
        foodev.jsondiff.Oper oper76 = instruction16.oper;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement77 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff8.applyPartial(jzonElement10, instruction16, jzonElement77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(oper23);
        org.junit.Assert.assertNotNull(wrapper30);
        org.junit.Assert.assertNotNull(instruction33);
        org.junit.Assert.assertNotNull(instruction35);
        org.junit.Assert.assertNotNull(wrapper40);
        org.junit.Assert.assertNotNull(instruction43);
        org.junit.Assert.assertNotNull(instruction45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(oper50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(instruction59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(instruction66);
        org.junit.Assert.assertTrue("'" + oper67 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper67.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper70 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper70.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper75 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper75.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper76 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper76.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05756");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test05757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05757");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.Node node8 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        foodev.jsondiff.Leaf[] leafArray10 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList11 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList11, leafArray10);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap13 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf14 = jsonDiff1.findLeaves(node8, jzonElement9, (java.util.List<foodev.jsondiff.Leaf>) leafList11, intMap13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(leafArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test05758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05758");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = jsonDiff1.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(instruction5);
    }

    @Test
    public void test05759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05759");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff14.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff16.create("");
        boolean boolean19 = instruction18.isIndexed();
        instruction18.key = "~";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper22);
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff23.factory;
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff(wrapper24);
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff25.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff25.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction29.index = (short) 100;
        boolean boolean32 = instruction29.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction33 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper34 = instruction33.oper;
        instruction33.key = "~";
        int int37 = instruction33.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff39 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper38);
        int int41 = jsonDiff39.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction43 = jsonDiff39.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean44 = instruction43.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff46 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper45);
        int int48 = jsonDiff46.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction50 = jsonDiff46.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper51 = instruction50.oper;
        instruction43.oper = oper51;
        instruction33.oper = oper51;
        foodev.jsondiff.Oper oper54 = instruction33.oper;
        instruction29.oper = oper54;
        instruction18.oper = oper54;
        foodev.jsondiff.JsonDiff.Instruction instruction57 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper58 = instruction57.oper;
        instruction57.key = "~";
        instruction57.key = "";
        foodev.jsondiff.JsonDiff.Instruction instruction63 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction63.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff67 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper66);
        int int69 = jsonDiff67.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction71 = jsonDiff67.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper72 = instruction71.oper;
        instruction63.oper = oper72;
        instruction57.oper = oper72;
        instruction18.oper = oper72;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper76 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff77 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper76);
        foodev.jsondiff.jsonwrap.Wrapper wrapper78 = jsonDiff77.factory;
        foodev.jsondiff.JsonDiff jsonDiff79 = new foodev.jsondiff.JsonDiff(wrapper78);
        foodev.jsondiff.Visitor<?> wildcardVisitor80 = jsonDiff79.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction82 = jsonDiff79.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper83 = jsonDiff79.factory;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) oper72, (java.lang.Object) wrapper83);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wrapper24);
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertNotNull(instruction29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(oper34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(instruction43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(instruction50);
        org.junit.Assert.assertTrue("'" + oper51 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper51.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper54 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper54.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNull(oper58);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(instruction71);
        org.junit.Assert.assertTrue("'" + oper72 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper72.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper78);
        org.junit.Assert.assertNull(wildcardVisitor80);
        org.junit.Assert.assertNotNull(instruction82);
        org.junit.Assert.assertNotNull(wrapper83);
    }

    @Test
    public void test05760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05760");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException14);
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException32.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException34);
        jacksonWrapperException28.addSuppressed((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray42 = jacksonWrapperException41.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException45.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException47);
        jacksonWrapperException41.addSuppressed((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray53 = jacksonWrapperException52.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray57 = jacksonWrapperException56.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException56);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException58);
        jacksonWrapperException52.addSuppressed((java.lang.Throwable) jacksonWrapperException58);
        jacksonWrapperException51.addSuppressed((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException34.addSuppressed((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException64);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray68 = jacksonWrapperException67.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException67);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException71 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray72 = jacksonWrapperException71.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException73 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException71);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException74 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException73);
        jacksonWrapperException67.addSuppressed((java.lang.Throwable) jacksonWrapperException73);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException76 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException67);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException77 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException76);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException79 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray80 = jacksonWrapperException79.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException81 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException79);
        jacksonWrapperException77.addSuppressed((java.lang.Throwable) jacksonWrapperException79);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException83 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException79);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException83);
        java.lang.Throwable[] throwableArray85 = jacksonWrapperException25.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement86 = wrapper6.wrap((java.lang.Object) throwableArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: [Ljava.lang.Throwable; cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(throwableArray72);
        org.junit.Assert.assertNotNull(throwableArray80);
        org.junit.Assert.assertNotNull(throwableArray85);
    }

    @Test
    public void test05761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05761");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor4);
    }

    @Test
    public void test05762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05762");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        boolean boolean9 = instruction8.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("");
        int int16 = instruction15.index;
        boolean boolean17 = instruction15.isIndexed();
        instruction15.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper20);
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff21.factory;
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper22);
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff23.create("");
        boolean boolean26 = instruction25.isIndexed();
        instruction25.index = (short) -1;
        foodev.jsondiff.Oper oper29 = instruction25.oper;
        instruction15.oper = oper29;
        foodev.jsondiff.JsonDiff.Instruction instruction31 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper32 = instruction31.oper;
        instruction31.key = "~";
        java.lang.String str35 = instruction31.key;
        foodev.jsondiff.JsonDiff.Instruction instruction36 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper37 = instruction36.oper;
        instruction36.index = (-1);
        java.lang.String str40 = instruction36.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff42 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper41);
        foodev.jsondiff.jsonwrap.Wrapper wrapper43 = jsonDiff42.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction45 = jsonDiff42.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction46 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction46.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff50 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper49);
        int int52 = jsonDiff50.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction54 = jsonDiff50.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper55 = instruction54.oper;
        instruction46.oper = oper55;
        instruction45.oper = oper55;
        instruction36.oper = oper55;
        instruction31.oper = oper55;
        instruction15.oper = oper55;
        instruction8.oper = oper55;
        instruction8.index = 0;
        java.lang.Class<?> wildcardClass64 = instruction8.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + oper29 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper29.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNull(oper32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "~" + "'", str35, "~");
        org.junit.Assert.assertNull(oper37);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(wrapper43);
        org.junit.Assert.assertNotNull(instruction45);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(instruction54);
        org.junit.Assert.assertTrue("'" + oper55 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper55.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test05763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05763");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff1.getVisitor();
        int int14 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff17.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff19.create("");
        boolean boolean22 = instruction21.isIndexed();
        instruction21.key = "~";
        boolean boolean25 = instruction21.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper26);
        foodev.jsondiff.jsonwrap.Wrapper wrapper28 = jsonDiff27.factory;
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff(wrapper28);
        foodev.jsondiff.JsonDiff.Instruction instruction31 = jsonDiff29.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction33 = jsonDiff29.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction33.index = (short) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper36);
        foodev.jsondiff.jsonwrap.Wrapper wrapper38 = jsonDiff37.factory;
        foodev.jsondiff.JsonDiff jsonDiff39 = new foodev.jsondiff.JsonDiff(wrapper38);
        foodev.jsondiff.JsonDiff.Instruction instruction41 = jsonDiff39.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction43 = jsonDiff39.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction43.index = (short) 100;
        boolean boolean46 = instruction43.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction47 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper48 = instruction47.oper;
        instruction47.key = "~";
        int int51 = instruction47.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff53 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper52);
        int int55 = jsonDiff53.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction57 = jsonDiff53.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean58 = instruction57.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff60 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper59);
        int int62 = jsonDiff60.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction64 = jsonDiff60.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper65 = instruction64.oper;
        instruction57.oper = oper65;
        instruction47.oper = oper65;
        foodev.jsondiff.Oper oper68 = instruction47.oper;
        instruction43.oper = oper68;
        instruction33.oper = oper68;
        foodev.jsondiff.Oper oper71 = instruction33.oper;
        instruction21.oper = oper71;
        int int73 = instruction21.index;
        boolean boolean74 = instruction21.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper75 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff76 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper75);
        foodev.jsondiff.jsonwrap.Wrapper wrapper77 = jsonDiff76.factory;
        foodev.jsondiff.JsonDiff jsonDiff78 = new foodev.jsondiff.JsonDiff(wrapper77);
        foodev.jsondiff.Visitor<?> wildcardVisitor79 = jsonDiff78.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction81 = jsonDiff78.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper82 = jsonDiff78.factory;
        int int84 = jsonDiff78.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper85 = jsonDiff78.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper86 = jsonDiff78.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor87 = jsonDiff78.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction89 = jsonDiff78.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply((java.lang.Object) boolean74, (java.lang.Object) instruction89);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Boolean cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wrapper28);
        org.junit.Assert.assertNotNull(instruction31);
        org.junit.Assert.assertNotNull(instruction33);
        org.junit.Assert.assertNotNull(wrapper38);
        org.junit.Assert.assertNotNull(instruction41);
        org.junit.Assert.assertNotNull(instruction43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(oper48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(instruction57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(instruction64);
        org.junit.Assert.assertTrue("'" + oper65 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper65.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper68 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper68.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper71 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper71.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wrapper77);
        org.junit.Assert.assertNull(wildcardVisitor79);
        org.junit.Assert.assertNotNull(instruction81);
        org.junit.Assert.assertNotNull(wrapper82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(wrapper85);
        org.junit.Assert.assertNotNull(wrapper86);
        org.junit.Assert.assertNull(wildcardVisitor87);
        org.junit.Assert.assertNotNull(instruction89);
    }

    @Test
    public void test05764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05764");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff15.create("");
        int int19 = jsonDiff15.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff15.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int23 = jsonDiff15.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff15.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff15.create("");
        java.lang.String str27 = instruction26.key;
        instruction26.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.JsonDiff.Instruction instruction30 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper31 = instruction30.oper;
        instruction30.index = (-1);
        java.lang.String str34 = instruction30.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff36 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper35);
        foodev.jsondiff.jsonwrap.Wrapper wrapper37 = jsonDiff36.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction39 = jsonDiff36.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction40 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction40.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff44 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper43);
        int int46 = jsonDiff44.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction48 = jsonDiff44.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper49 = instruction48.oper;
        instruction40.oper = oper49;
        instruction39.oper = oper49;
        instruction30.oper = oper49;
        instruction26.oper = oper49;
        instruction26.index = 0;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement56 = wrapper10.wrap((java.lang.Object) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Integer cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(wrapper24);
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(oper31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(wrapper37);
        org.junit.Assert.assertNotNull(instruction39);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(instruction48);
        org.junit.Assert.assertTrue("'" + oper49 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper49.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05765");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement2 = jacksonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05766");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        int int13 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Node node14 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        foodev.jsondiff.Leaf[] leafArray16 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList17 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList17, leafArray16);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap19 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf20 = jsonDiff3.findLeaves(node14, jzonElement15, (java.util.List<foodev.jsondiff.Leaf>) leafList17, intMap19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(leafArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test05767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05767");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int11 = jsonDiff3.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        java.lang.Class<?> wildcardClass13 = jsonDiff3.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test05768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05768");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement4 = gsonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05769");
        foodev.jsondiff.JsonDiff.Instruction instruction0 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper1 = instruction0.oper;
        instruction0.key = "~";
        java.lang.String str4 = instruction0.key;
        instruction0.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        boolean boolean7 = instruction0.isIndexed();
        foodev.jsondiff.Oper oper8 = instruction0.oper;
        java.lang.String str9 = instruction0.key;
        org.junit.Assert.assertNull(oper1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "~" + "'", str4, "~");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(oper8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str9, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test05770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05770");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff5.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff5.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff5.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.Class<?> wildcardClass13 = jsonDiff5.getClass();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = gsonWrapper0.wrap((java.lang.Object) jsonDiff5);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test05771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05771");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff4.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff4.checkIndex(jzonElement7, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNull(wildcardVisitor6);
    }

    @Test
    public void test05772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05772");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff12.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        int int19 = jsonDiff17.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean22 = instruction21.isIndexed();
        int int23 = instruction21.index;
        int int24 = instruction21.index;
        instruction21.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction21.index = 'a';
        java.lang.String str29 = instruction21.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff31 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper30);
        foodev.jsondiff.jsonwrap.Wrapper wrapper32 = jsonDiff31.factory;
        foodev.jsondiff.JsonDiff jsonDiff33 = new foodev.jsondiff.JsonDiff(wrapper32);
        foodev.jsondiff.JsonDiff.Instruction instruction35 = jsonDiff33.create("");
        boolean boolean36 = instruction35.isIndexed();
        instruction35.index = (short) -1;
        instruction35.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        boolean boolean41 = instruction35.isIndexed();
        foodev.jsondiff.jsonwrap.Wrapper wrapper42 = null;
        foodev.jsondiff.JsonDiff jsonDiff43 = new foodev.jsondiff.JsonDiff(wrapper42);
        foodev.jsondiff.JsonDiff.Instruction instruction45 = jsonDiff43.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction47 = jsonDiff43.create("~");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff49 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper48);
        foodev.jsondiff.jsonwrap.Wrapper wrapper50 = jsonDiff49.factory;
        foodev.jsondiff.JsonDiff jsonDiff51 = new foodev.jsondiff.JsonDiff(wrapper50);
        foodev.jsondiff.Visitor<?> wildcardVisitor52 = jsonDiff51.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction54 = jsonDiff51.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper55 = jsonDiff51.factory;
        foodev.jsondiff.JsonDiff jsonDiff56 = new foodev.jsondiff.JsonDiff(wrapper55);
        foodev.jsondiff.JsonDiff jsonDiff57 = new foodev.jsondiff.JsonDiff(wrapper55);
        foodev.jsondiff.Visitor<?> wildcardVisitor58 = jsonDiff57.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor59 = jsonDiff57.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction61 = jsonDiff57.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction63 = jsonDiff57.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper64 = instruction63.oper;
        instruction47.oper = oper64;
        instruction35.oper = oper64;
        instruction21.oper = oper64;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff69 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper68);
        foodev.jsondiff.jsonwrap.Wrapper wrapper70 = jsonDiff69.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper71 = jsonDiff69.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper72 = jsonDiff69.factory;
        int int74 = jsonDiff69.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction76 = jsonDiff69.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff12.apply((java.lang.Object) oper64, (java.lang.Object) jsonDiff69);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str29, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertNotNull(wrapper32);
        org.junit.Assert.assertNotNull(instruction35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(instruction45);
        org.junit.Assert.assertNotNull(instruction47);
        org.junit.Assert.assertNotNull(wrapper50);
        org.junit.Assert.assertNull(wildcardVisitor52);
        org.junit.Assert.assertNotNull(instruction54);
        org.junit.Assert.assertNotNull(wrapper55);
        org.junit.Assert.assertNull(wildcardVisitor58);
        org.junit.Assert.assertNull(wildcardVisitor59);
        org.junit.Assert.assertNotNull(instruction61);
        org.junit.Assert.assertNotNull(instruction63);
        org.junit.Assert.assertTrue("'" + oper64 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper64.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper70);
        org.junit.Assert.assertNotNull(wrapper71);
        org.junit.Assert.assertNotNull(wrapper72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(instruction76);
    }

    @Test
    public void test05773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05773");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject10 = jsonDiff3.diff(jzonElement8, jzonElement9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
    }

    @Test
    public void test05774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05774");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff2.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff2.getVisitor();
        int int9 = jsonDiff2.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff2.apply(jzonElement10, jzonElement11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test05775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05775");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException20);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray19);
    }

    @Test
    public void test05776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05776");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff5.create("");
        int int9 = jsonDiff5.isIndexed("");
        int int11 = jsonDiff5.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff5.create("~");
        foodev.jsondiff.Oper oper14 = instruction13.oper;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = gsonWrapper0.wrap((java.lang.Object) oper14);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + oper14 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper14.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05777");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff13.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff18.create("");
        int int22 = jsonDiff18.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff18.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff18.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff18.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor29 = jsonDiff18.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction31 = jsonDiff18.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction33 = jsonDiff18.create("hi!");
        java.lang.Class<?> wildcardClass34 = jsonDiff18.getClass();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff36 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper35);
        foodev.jsondiff.jsonwrap.Wrapper wrapper37 = jsonDiff36.factory;
        foodev.jsondiff.JsonDiff jsonDiff38 = new foodev.jsondiff.JsonDiff(wrapper37);
        foodev.jsondiff.JsonDiff.Instruction instruction40 = jsonDiff38.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor41 = jsonDiff38.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction43 = jsonDiff38.create("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper44 = jsonDiff38.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj45 = jsonDiff13.diff((java.lang.Object) jsonDiff18, (java.lang.Object) jsonDiff38);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertNull(wildcardVisitor29);
        org.junit.Assert.assertNotNull(instruction31);
        org.junit.Assert.assertNotNull(instruction33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wrapper37);
        org.junit.Assert.assertNotNull(instruction40);
        org.junit.Assert.assertNull(wildcardVisitor41);
        org.junit.Assert.assertNotNull(instruction43);
        org.junit.Assert.assertNotNull(wrapper44);
    }

    @Test
    public void test05778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05778");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException2);
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement23 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException20);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray8);
    }

    @Test
    public void test05779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05779");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        int int16 = jsonDiff14.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor17 = jsonDiff14.getVisitor();
        int int19 = jsonDiff14.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff14.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff14.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff14.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff14.create("~");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper26);
        foodev.jsondiff.jsonwrap.Wrapper wrapper28 = jsonDiff27.factory;
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff(wrapper28);
        foodev.jsondiff.JsonDiff.Instruction instruction31 = jsonDiff29.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper32 = jsonDiff29.factory;
        foodev.jsondiff.JsonDiff jsonDiff33 = new foodev.jsondiff.JsonDiff(wrapper32);
        foodev.jsondiff.JsonDiff jsonDiff34 = new foodev.jsondiff.JsonDiff(wrapper32);
        foodev.jsondiff.jsonwrap.Wrapper wrapper35 = jsonDiff34.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper36 = jsonDiff34.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj37 = jsonDiff3.diff((java.lang.Object) instruction25, (java.lang.Object) jsonDiff34);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertNotNull(wrapper28);
        org.junit.Assert.assertNotNull(instruction31);
        org.junit.Assert.assertNotNull(wrapper32);
        org.junit.Assert.assertNotNull(wrapper35);
        org.junit.Assert.assertNotNull(wrapper36);
    }

    @Test
    public void test05780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05780");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        java.lang.Object obj12 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException19.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException19);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj31 = jsonDiff1.diff(obj12, (java.lang.Object) jacksonWrapperException30);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray29);
    }

    @Test
    public void test05781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05781");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper5);
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff6.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff8.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction12.index = (short) 100;
        boolean boolean15 = instruction12.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction16 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper17 = instruction16.oper;
        instruction16.key = "~";
        int int20 = instruction16.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper21);
        int int24 = jsonDiff22.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff22.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean27 = instruction26.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper28);
        int int31 = jsonDiff29.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction33 = jsonDiff29.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper34 = instruction33.oper;
        instruction26.oper = oper34;
        instruction16.oper = oper34;
        foodev.jsondiff.Oper oper37 = instruction16.oper;
        instruction12.oper = oper37;
        instruction12.index = (-1);
        boolean boolean41 = instruction12.isIndexed();
        instruction12.key = "hi!";
        int int44 = instruction12.index;
        java.lang.String str45 = instruction12.key;
        java.lang.String str46 = instruction12.key;
        instruction12.index = 0;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement49 = jacksonWrapper0.wrap((java.lang.Object) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Integer cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(oper17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(instruction33);
        org.junit.Assert.assertTrue("'" + oper34 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper34.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper37 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper37.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
    }

    @Test
    public void test05782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05782");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff17.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction20.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.JsonDiff.Instruction instruction23 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction23.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper26);
        int int29 = jsonDiff27.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction31 = jsonDiff27.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper32 = instruction31.oper;
        instruction23.oper = oper32;
        instruction20.oper = oper32;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement35 = wrapper14.wrap((java.lang.Object) oper32);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(instruction31);
        org.junit.Assert.assertTrue("'" + oper32 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper32.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05783");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("");
        int int12 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff1.getVisitor();
        int int15 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        int int19 = jsonDiff17.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff17.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff17.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper27);
        foodev.jsondiff.jsonwrap.Wrapper wrapper29 = jsonDiff28.factory;
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff(wrapper29);
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff30.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper33 = jsonDiff30.factory;
        foodev.jsondiff.JsonDiff jsonDiff34 = new foodev.jsondiff.JsonDiff(wrapper33);
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff(wrapper33);
        foodev.jsondiff.jsonwrap.Wrapper wrapper36 = jsonDiff35.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper37 = jsonDiff35.factory;
        foodev.jsondiff.JsonDiff jsonDiff38 = new foodev.jsondiff.JsonDiff(wrapper37);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj39 = jsonDiff1.diff((java.lang.Object) jsonDiff17, (java.lang.Object) jsonDiff38);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertNotNull(wrapper29);
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertNotNull(wrapper33);
        org.junit.Assert.assertNotNull(wrapper36);
        org.junit.Assert.assertNotNull(wrapper37);
    }

    @Test
    public void test05784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05784");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper8);
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff11.create("");
        int int15 = jsonDiff11.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff11.create("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper18);
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff19.factory;
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff(wrapper20);
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff21.create("");
        boolean boolean24 = instruction23.isIndexed();
        instruction23.index = (short) -1;
        instruction23.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction23.key = "hi!";
        foodev.jsondiff.Oper oper31 = instruction23.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff33 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper32);
        foodev.jsondiff.jsonwrap.Wrapper wrapper34 = jsonDiff33.factory;
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff(wrapper34);
        foodev.jsondiff.JsonDiff.Instruction instruction37 = jsonDiff35.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean38 = instruction37.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff40 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper39);
        int int42 = jsonDiff40.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction44 = jsonDiff40.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper45 = instruction44.oper;
        instruction37.oper = oper45;
        instruction23.oper = oper45;
        instruction17.oper = oper45;
        java.lang.String str49 = instruction17.key;
        foodev.jsondiff.Oper oper50 = instruction17.oper;
        foodev.jsondiff.Oper oper51 = instruction17.oper;
        boolean boolean52 = instruction17.isIndexed();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement53 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement7, instruction17, jzonElement53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + oper31 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper31.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper34);
        org.junit.Assert.assertNotNull(instruction37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(instruction44);
        org.junit.Assert.assertTrue("'" + oper45 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper45.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + oper50 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper50.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper51 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper51.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test05785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05785");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement13, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test05786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05786");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = wrapper16.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
    }

    @Test
    public void test05787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05787");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff2.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor5 = jsonDiff2.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff2.apply(jzonElement6, jzonElement7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNull(wildcardVisitor5);
    }

    @Test
    public void test05788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05788");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement16, jzonElement17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(instruction15);
    }

    @Test
    public void test05789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05789");
        foodev.jsondiff.JsonDiff.Instruction instruction0 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper1 = instruction0.oper;
        instruction0.key = "~";
        instruction0.key = "";
        foodev.jsondiff.Oper oper6 = instruction0.oper;
        instruction0.index = '#';
        java.lang.String str9 = instruction0.key;
        foodev.jsondiff.Oper oper10 = instruction0.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff14.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor17 = jsonDiff14.getVisitor();
        int int19 = jsonDiff14.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor20 = jsonDiff14.getVisitor();
        int int22 = jsonDiff14.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int24 = jsonDiff14.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff14.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        boolean boolean27 = instruction26.isIndexed();
        instruction26.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        foodev.jsondiff.Oper oper30 = instruction26.oper;
        foodev.jsondiff.Oper oper31 = instruction26.oper;
        instruction0.oper = oper31;
        org.junit.Assert.assertNull(oper1);
        org.junit.Assert.assertNull(oper6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(oper10);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertNull(wildcardVisitor17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + oper30 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper30.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper31 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper31.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05790");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        int int4 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction6.index = 97;
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(instruction6);
    }

    @Test
    public void test05791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05791");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject15 = jsonDiff1.diff(jzonElement13, jzonElement14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction12);
    }

    @Test
    public void test05792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05792");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("");
        boolean boolean16 = instruction15.isIndexed();
        instruction15.index = (short) -1;
        instruction15.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction15.key = "hi!";
        foodev.jsondiff.Oper oper23 = instruction15.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper24);
        foodev.jsondiff.jsonwrap.Wrapper wrapper26 = jsonDiff25.factory;
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff(wrapper26);
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff27.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean30 = instruction29.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff32 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper31);
        int int34 = jsonDiff32.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction36 = jsonDiff32.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper37 = instruction36.oper;
        instruction29.oper = oper37;
        instruction15.oper = oper37;
        instruction9.oper = oper37;
        java.lang.String str41 = instruction9.key;
        foodev.jsondiff.Oper oper42 = instruction9.oper;
        instruction9.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        java.lang.Class<?> wildcardClass45 = instruction9.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + oper23 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper23.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper26);
        org.junit.Assert.assertNotNull(instruction29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(instruction36);
        org.junit.Assert.assertTrue("'" + oper37 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper37.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertTrue("'" + oper42 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper42.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test05793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05793");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.JsonDiff.Instruction instruction15 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff13.applyPartial(jzonElement14, instruction15, jzonElement16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(wrapper11);
    }

    @Test
    public void test05794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05794");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        int int11 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int13 = jsonDiff1.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff1.create("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff19.checkIndex(jzonElement20, 97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(wrapper18);
    }

    @Test
    public void test05795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05795");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        int int13 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff18.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor21 = jsonDiff18.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff18.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction23.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper26 = instruction23.oper;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement27 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement14, instruction23, jzonElement27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertNull(wildcardVisitor21);
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertTrue("'" + oper26 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper26.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05796");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff10.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject15 = jsonDiff10.diff(jzonElement13, jzonElement14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(instruction12);
    }

    @Test
    public void test05797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05797");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = jsonDiff3.diff("", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(instruction14);
    }

    @Test
    public void test05798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05798");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = jsonDiff9.diff("", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
    }

    @Test
    public void test05799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05799");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        int int8 = jsonDiff6.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException23.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException21.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff6.apply((java.lang.Object) jacksonWrapperException14, (java.lang.Object) jacksonWrapperException34);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray28);
    }

    @Test
    public void test05800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05800");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException24);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException36.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray41 = jacksonWrapperException40.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException42);
        jacksonWrapperException36.addSuppressed((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException48);
        jacksonWrapperException32.addSuppressed((java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray55 = jacksonWrapperException54.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException56);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray59 = jacksonWrapperException58.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException58);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray63 = jacksonWrapperException62.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException62);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException64);
        jacksonWrapperException58.addSuppressed((java.lang.Throwable) jacksonWrapperException64);
        jacksonWrapperException56.addSuppressed((java.lang.Throwable) jacksonWrapperException58);
        java.lang.Throwable[] throwableArray68 = jacksonWrapperException58.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException58);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException69);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException71 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException69);
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) jacksonWrapperException49, (java.lang.Object) jacksonWrapperException71);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray68);
    }

    @Test
    public void test05801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05801");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int10 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction16.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        java.lang.String str19 = instruction16.key;
        int int20 = instruction16.index;
        java.lang.String str21 = instruction16.key;
        instruction16.index = (byte) 10;
        foodev.jsondiff.Oper oper24 = instruction16.oper;
        foodev.jsondiff.Oper oper25 = instruction16.oper;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement26 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement11, instruction16, jzonElement26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~" + "'", str19, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~" + "'", str21, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        org.junit.Assert.assertTrue("'" + oper24 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper24.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper25 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper25.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05802");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
    }

    @Test
    public void test05803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05803");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = wrapper9.wrap((java.lang.Object) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Short cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test05804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05804");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        int int5 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(instruction7);
    }

    @Test
    public void test05805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05805");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement27 = wrapper15.wrap((java.lang.Object) jacksonWrapperException17);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray22);
    }

    @Test
    public void test05806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05806");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = wrapper11.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper11);
    }

    @Test
    public void test05807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05807");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray1 = jacksonWrapperException0.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException6);
        jacksonWrapperException0.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException28);
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        jacksonWrapperException21.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException38.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray43 = jacksonWrapperException42.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException44);
        jacksonWrapperException38.addSuppressed((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException44);
        java.lang.Throwable[] throwableArray48 = jacksonWrapperException44.getSuppressed();
        jacksonWrapperException36.addSuppressed((java.lang.Throwable) jacksonWrapperException44);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        java.lang.Throwable[] throwableArray52 = jacksonWrapperException51.getSuppressed();
        java.lang.Class<?> wildcardClass53 = jacksonWrapperException51.getClass();
        org.junit.Assert.assertNotNull(throwableArray1);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test05808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05808");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        int int6 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        foodev.jsondiff.JsonDiff.Instruction instruction10 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement9, instruction10, jzonElement11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
    }

    @Test
    public void test05809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05809");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException12.getSuppressed();
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException28);
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException22);
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        java.lang.Throwable[] throwableArray35 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        java.lang.Throwable throwable40 = null;
        // The following exception was thrown during execution in test generation
        try {
            jacksonWrapperException39.addSuppressed(throwable40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray35);
    }

    @Test
    public void test05810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05810");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        boolean boolean9 = instruction8.isIndexed();
        foodev.jsondiff.Oper oper10 = instruction8.oper;
        boolean boolean11 = instruction8.isIndexed();
        int int12 = instruction8.index;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + oper10 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper10.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test05811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05811");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        int int10 = jsonDiff8.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff8.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = wrapper11.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
    }

    @Test
    public void test05812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05812");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNotNull(wrapper6);
    }

    @Test
    public void test05813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05813");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Node node9 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.Leaf[] leafArray11 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList12 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList12, leafArray11);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap14 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf15 = jsonDiff8.findLeaves(node9, jzonElement10, (java.util.List<foodev.jsondiff.Leaf>) leafList12, intMap14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(leafArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test05814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05814");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject12 = jsonDiff3.diff(jzonElement10, jzonElement11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test05815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05815");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05816");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff10.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException21.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException19.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff36 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper35);
        foodev.jsondiff.jsonwrap.Wrapper wrapper37 = jsonDiff36.factory;
        foodev.jsondiff.JsonDiff jsonDiff38 = new foodev.jsondiff.JsonDiff(wrapper37);
        foodev.jsondiff.JsonDiff.Instruction instruction40 = jsonDiff38.create("");
        int int41 = instruction40.index;
        boolean boolean42 = instruction40.isIndexed();
        instruction40.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff46 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper45);
        foodev.jsondiff.jsonwrap.Wrapper wrapper47 = jsonDiff46.factory;
        foodev.jsondiff.JsonDiff jsonDiff48 = new foodev.jsondiff.JsonDiff(wrapper47);
        foodev.jsondiff.JsonDiff.Instruction instruction50 = jsonDiff48.create("");
        boolean boolean51 = instruction50.isIndexed();
        instruction50.index = (short) -1;
        foodev.jsondiff.Oper oper54 = instruction50.oper;
        instruction40.oper = oper54;
        instruction40.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        instruction40.index = (byte) 1;
        boolean boolean60 = instruction40.isIndexed();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj61 = jsonDiff10.diff((java.lang.Object) jacksonWrapperException13, (java.lang.Object) instruction40);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(wrapper37);
        org.junit.Assert.assertNotNull(instruction40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wrapper47);
        org.junit.Assert.assertNotNull(instruction50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + oper54 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper54.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test05817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05817");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        java.lang.String str21 = jacksonWrapperException20.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str21, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
    }

    @Test
    public void test05818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05818");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException10);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException15);
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException15);
        java.lang.String str19 = jacksonWrapperException18.toString();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str19, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
    }

    @Test
    public void test05819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05819");
        foodev.jsondiff.JsonDiff.Instruction instruction0 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper1 = instruction0.oper;
        boolean boolean2 = instruction0.isIndexed();
        boolean boolean3 = instruction0.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper4);
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff7.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff7.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff7.create("hi!");
        instruction12.index = '4';
        int int15 = instruction12.index;
        java.lang.String str16 = instruction12.key;
        foodev.jsondiff.Oper oper17 = instruction12.oper;
        boolean boolean18 = instruction12.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper19);
        foodev.jsondiff.jsonwrap.Wrapper wrapper21 = jsonDiff20.factory;
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff(wrapper21);
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff22.create("");
        boolean boolean25 = instruction24.isIndexed();
        instruction24.index = (short) -1;
        instruction24.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction24.key = "hi!";
        foodev.jsondiff.Oper oper32 = instruction24.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff34 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper33);
        foodev.jsondiff.jsonwrap.Wrapper wrapper35 = jsonDiff34.factory;
        foodev.jsondiff.JsonDiff jsonDiff36 = new foodev.jsondiff.JsonDiff(wrapper35);
        foodev.jsondiff.JsonDiff.Instruction instruction38 = jsonDiff36.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean39 = instruction38.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff41 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper40);
        int int43 = jsonDiff41.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction45 = jsonDiff41.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper46 = instruction45.oper;
        instruction38.oper = oper46;
        instruction24.oper = oper46;
        instruction12.oper = oper46;
        instruction0.oper = oper46;
        instruction0.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        org.junit.Assert.assertNull(oper1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertTrue("'" + oper17 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper17.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wrapper21);
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + oper32 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper32.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper35);
        org.junit.Assert.assertNotNull(instruction38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(instruction45);
        org.junit.Assert.assertTrue("'" + oper46 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper46.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05820");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff5.create("");
        boolean boolean8 = instruction7.isIndexed();
        instruction7.index = 97;
        int int11 = instruction7.index;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = gsonWrapper0.wrap((java.lang.Object) instruction7);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 97 + "'", int11 == 97);
    }

    @Test
    public void test05821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05821");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException19.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException36.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray41 = jacksonWrapperException40.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray45 = jacksonWrapperException44.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException46);
        jacksonWrapperException40.addSuppressed((java.lang.Throwable) jacksonWrapperException46);
        jacksonWrapperException38.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray53 = jacksonWrapperException52.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray56 = jacksonWrapperException55.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException55);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray60 = jacksonWrapperException59.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException61);
        jacksonWrapperException55.addSuppressed((java.lang.Throwable) jacksonWrapperException61);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException61);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException61);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray67 = jacksonWrapperException66.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException66);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray71 = jacksonWrapperException70.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException72 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException70);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException73 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException72);
        jacksonWrapperException66.addSuppressed((java.lang.Throwable) jacksonWrapperException72);
        jacksonWrapperException65.addSuppressed((java.lang.Throwable) jacksonWrapperException66);
        jacksonWrapperException52.addSuppressed((java.lang.Throwable) jacksonWrapperException65);
        jacksonWrapperException51.addSuppressed((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException78 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException33.addSuppressed((java.lang.Throwable) jacksonWrapperException78);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement80 = wrapper9.wrap((java.lang.Object) jacksonWrapperException33);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertNotNull(throwableArray71);
    }

    @Test
    public void test05822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05822");
        foodev.jsondiff.JsonDiff.Instruction instruction0 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction0.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper3);
        int int6 = jsonDiff4.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper9 = instruction8.oper;
        instruction0.oper = oper9;
        java.lang.String str11 = instruction0.key;
        instruction0.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + oper9 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper9.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test05823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05823");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        java.lang.String str21 = jacksonWrapperException9.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str21, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
    }

    @Test
    public void test05824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05824");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff2.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff2.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff2.apply(jzonElement9, jzonElement10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(instruction8);
    }

    @Test
    public void test05825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05825");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        int int11 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int13 = jsonDiff1.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff1.create("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement19, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(wrapper18);
    }

    @Test
    public void test05826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05826");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException24);
        jacksonWrapperException18.addSuppressed((java.lang.Throwable) jacksonWrapperException24);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException31.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException35.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException37);
        jacksonWrapperException31.addSuppressed((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException29.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException42);
        java.lang.Throwable[] throwableArray44 = jacksonWrapperException42.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray44);
    }

    @Test
    public void test05827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05827");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff12.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff12.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        int int18 = jsonDiff16.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff16.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean21 = instruction20.isIndexed();
        int int22 = instruction20.index;
        int int23 = instruction20.index;
        foodev.jsondiff.Oper oper24 = instruction20.oper;
        int int25 = instruction20.index;
        instruction20.index = (short) -1;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper28);
        int int31 = jsonDiff29.isIndexed("hi!");
        int int33 = jsonDiff29.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper34 = jsonDiff29.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper35 = jsonDiff29.factory;
        foodev.jsondiff.JsonDiff jsonDiff36 = new foodev.jsondiff.JsonDiff(wrapper35);
        java.lang.Class<?> wildcardClass37 = wrapper35.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = jsonDiff12.diff((java.lang.Object) (short) -1, (java.lang.Object) wrapper35);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Short cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + oper24 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper24.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(wrapper34);
        org.junit.Assert.assertNotNull(wrapper35);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test05828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05828");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply(jzonElement11, jzonElement12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor10);
    }

    @Test
    public void test05829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05829");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException24);
        jacksonWrapperException18.addSuppressed((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException33.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException35);
        jacksonWrapperException29.addSuppressed((java.lang.Throwable) jacksonWrapperException35);
        jacksonWrapperException28.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement42 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException3);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray34);
    }

    @Test
    public void test05830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05830");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor5 = jsonDiff3.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass6 = wildcardVisitor5.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNull(wildcardVisitor5);
    }

    @Test
    public void test05831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05831");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = wrapper9.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test05832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05832");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff9.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff9.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff9.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper19);
        foodev.jsondiff.jsonwrap.Wrapper wrapper21 = jsonDiff20.factory;
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff(wrapper21);
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff22.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor25 = jsonDiff22.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff22.create("hi!");
        instruction27.index = '4';
        instruction27.index = 97;
        int int32 = instruction27.index;
        instruction27.index = ' ';
        instruction27.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        int int37 = instruction27.index;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement38 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff9.applyPartial(jzonElement18, instruction27, jzonElement38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNull(wildcardVisitor15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(wrapper21);
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertNull(wildcardVisitor25);
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 97 + "'", int32 == 97);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 32 + "'", int37 == 32);
    }

    @Test
    public void test05833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05833");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        int int13 = jsonDiff11.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff11.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean16 = instruction15.isIndexed();
        foodev.jsondiff.Oper oper17 = null;
        instruction15.oper = oper17;
        foodev.jsondiff.Oper oper19 = instruction15.oper;
        instruction15.key = "~";
        foodev.jsondiff.Oper oper22 = instruction15.oper;
        boolean boolean23 = instruction15.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper24);
        int int27 = jsonDiff25.isIndexed("hi!");
        int int29 = jsonDiff25.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper30 = jsonDiff25.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor31 = jsonDiff25.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper32 = jsonDiff25.factory;
        int int34 = jsonDiff25.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper35 = jsonDiff25.factory;
        foodev.jsondiff.JsonDiff jsonDiff36 = new foodev.jsondiff.JsonDiff(wrapper35);
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff(wrapper35);
        foodev.jsondiff.JsonDiff jsonDiff38 = new foodev.jsondiff.JsonDiff(wrapper35);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj39 = jsonDiff3.diff((java.lang.Object) instruction15, (java.lang.Object) wrapper35);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(oper19);
        org.junit.Assert.assertNull(oper22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(wrapper30);
        org.junit.Assert.assertNull(wildcardVisitor31);
        org.junit.Assert.assertNotNull(wrapper32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(wrapper35);
    }

    @Test
    public void test05834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05834");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        int int9 = jsonDiff7.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int11 = jsonDiff7.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = jsonDiff7.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test05835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05835");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper4);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper4);
        java.lang.Class<?> wildcardClass7 = jsonDiff6.getClass();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = gsonWrapper0.wrap((java.lang.Object) wildcardClass7);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Class cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test05836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05836");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper10 = instruction9.oper;
        instruction9.index = (-1);
        java.lang.String str13 = instruction9.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper14);
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff15.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff15.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction19 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction19.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper22);
        int int25 = jsonDiff23.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff23.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper28 = instruction27.oper;
        instruction19.oper = oper28;
        instruction18.oper = oper28;
        instruction9.oper = oper28;
        instruction8.oper = oper28;
        boolean boolean33 = instruction8.isIndexed();
        java.lang.String str34 = instruction8.key;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(oper10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertTrue("'" + oper28 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper28.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
    }

    @Test
    public void test05837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05837");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff14.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff16.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff16.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff16.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff16.create("hi!");
        instruction24.index = (short) 0;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper27);
        foodev.jsondiff.jsonwrap.Wrapper wrapper29 = jsonDiff28.factory;
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff(wrapper29);
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff30.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction34 = jsonDiff30.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction34.index = (short) 100;
        boolean boolean37 = instruction34.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff39 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper38);
        foodev.jsondiff.jsonwrap.Wrapper wrapper40 = jsonDiff39.factory;
        foodev.jsondiff.JsonDiff jsonDiff41 = new foodev.jsondiff.JsonDiff(wrapper40);
        foodev.jsondiff.JsonDiff.Instruction instruction43 = jsonDiff41.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction43.key = "hi!";
        foodev.jsondiff.Oper oper46 = instruction43.oper;
        instruction34.oper = oper46;
        foodev.jsondiff.Oper oper48 = instruction34.oper;
        instruction24.oper = oper48;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray52 = jacksonWrapperException51.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException51.addSuppressed((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException57);
        jacksonWrapperException55.addSuppressed((java.lang.Throwable) jacksonWrapperException58);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj60 = jsonDiff3.diff((java.lang.Object) instruction24, (java.lang.Object) jacksonWrapperException55);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertNotNull(wrapper29);
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertNotNull(instruction34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wrapper40);
        org.junit.Assert.assertNotNull(instruction43);
        org.junit.Assert.assertTrue("'" + oper46 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper46.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper48 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper48.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(throwableArray52);
    }

    @Test
    public void test05838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05838");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff5.checkIndex(jzonElement6, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
    }

    @Test
    public void test05839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05839");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        int int13 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Leaf leaf14 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray15 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = jsonDiff3.accept(leaf14, jzonArray15, jzonObject16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test05840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05840");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff9.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper16 = instruction15.oper;
        instruction15.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + oper16 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper16.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05841");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        int int4 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Node node5 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = null;
        foodev.jsondiff.Leaf[] leafArray7 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList8 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList8, leafArray7);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap10 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf11 = jsonDiff1.findLeaves(node5, jzonElement6, (java.util.List<foodev.jsondiff.Leaf>) leafList8, intMap10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(leafArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test05842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05842");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        int int10 = jsonDiff1.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff20.create("");
        boolean boolean23 = instruction22.isIndexed();
        instruction22.key = "~";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper26);
        foodev.jsondiff.jsonwrap.Wrapper wrapper28 = jsonDiff27.factory;
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff(wrapper28);
        foodev.jsondiff.JsonDiff.Instruction instruction31 = jsonDiff29.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction33 = jsonDiff29.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction33.index = (short) 100;
        boolean boolean36 = instruction33.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction37 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper38 = instruction37.oper;
        instruction37.key = "~";
        int int41 = instruction37.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff43 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper42);
        int int45 = jsonDiff43.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction47 = jsonDiff43.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean48 = instruction47.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff50 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper49);
        int int52 = jsonDiff50.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction54 = jsonDiff50.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper55 = instruction54.oper;
        instruction47.oper = oper55;
        instruction37.oper = oper55;
        foodev.jsondiff.Oper oper58 = instruction37.oper;
        instruction33.oper = oper58;
        instruction22.oper = oper58;
        java.lang.String str61 = instruction22.key;
        int int62 = instruction22.index;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement63 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff13.applyPartial(jzonElement16, instruction22, jzonElement63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wrapper28);
        org.junit.Assert.assertNotNull(instruction31);
        org.junit.Assert.assertNotNull(instruction33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(oper38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(instruction47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(instruction54);
        org.junit.Assert.assertTrue("'" + oper55 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper55.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper58 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper58.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "~" + "'", str61, "~");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
    }

    @Test
    public void test05843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05843");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        int int12 = jsonDiff9.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff9.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.JsonDiff.Instruction instruction15 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper16 = instruction15.oper;
        instruction15.index = (-1);
        java.lang.String str19 = instruction15.key;
        boolean boolean20 = instruction15.isIndexed();
        instruction15.index = (short) 0;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement23 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff9.applyPartial(jzonElement14, instruction15, jzonElement23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNull(oper16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test05844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05844");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper3);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff6.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff6.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff6.create("hi!");
        instruction11.index = '4';
        int int14 = instruction11.index;
        java.lang.String str15 = instruction11.key;
        foodev.jsondiff.Oper oper16 = instruction11.oper;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = jacksonWrapper0.wrap((java.lang.Object) oper16);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + oper16 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper16.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05845");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff10.apply(jzonElement11, jzonElement12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test05846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05846");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff10.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff12.create("");
        int int16 = jsonDiff12.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff12.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor23 = jsonDiff12.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff12.create("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor27 = jsonDiff12.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper28 = jsonDiff12.factory;
        int int30 = jsonDiff12.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff12.create("");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        jacksonWrapperException35.addSuppressed((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException35);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj40 = jsonDiff3.diff((java.lang.Object) "", (java.lang.Object) jacksonWrapperException35);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertNull(wildcardVisitor23);
        org.junit.Assert.assertNotNull(wrapper24);
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertNull(wildcardVisitor27);
        org.junit.Assert.assertNotNull(wrapper28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(instruction32);
    }

    @Test
    public void test05847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05847");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff3.getVisitor();
        int int14 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        java.lang.Throwable[] throwableArray35 = jacksonWrapperException34.getSuppressed();
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException34);
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException38.getSuppressed();
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException38.getSuppressed();
        java.lang.Throwable[] throwableArray41 = jacksonWrapperException38.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff43 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper42);
        foodev.jsondiff.jsonwrap.Wrapper wrapper44 = jsonDiff43.factory;
        foodev.jsondiff.JsonDiff jsonDiff45 = new foodev.jsondiff.JsonDiff(wrapper44);
        foodev.jsondiff.JsonDiff.Instruction instruction47 = jsonDiff45.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction49 = jsonDiff45.create("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = jsonDiff3.diff((java.lang.Object) jacksonWrapperException38, (java.lang.Object) instruction49);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(wrapper44);
        org.junit.Assert.assertNotNull(instruction47);
        org.junit.Assert.assertNotNull(instruction49);
    }

    @Test
    public void test05848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05848");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Leaf leaf6 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray7 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = jsonDiff3.accept(leaf6, jzonArray7, jzonObject8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
    }

    @Test
    public void test05849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05849");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int6 = instruction5.index;
        boolean boolean7 = instruction5.isIndexed();
        instruction5.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("");
        boolean boolean16 = instruction15.isIndexed();
        instruction15.index = (short) -1;
        foodev.jsondiff.Oper oper19 = instruction15.oper;
        instruction5.oper = oper19;
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        int int23 = instruction5.index;
        boolean boolean24 = instruction5.isIndexed();
        foodev.jsondiff.Oper oper25 = instruction5.oper;
        int int26 = instruction5.index;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + oper19 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper19.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 97 + "'", int23 == 97);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + oper25 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper25.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 97 + "'", int26 == 97);
    }

    @Test
    public void test05850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05850");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor17 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper22);
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff23.factory;
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff(wrapper24);
        foodev.jsondiff.Visitor<?> wildcardVisitor26 = jsonDiff25.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff25.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper29 = jsonDiff25.factory;
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff(wrapper29);
        foodev.jsondiff.JsonDiff jsonDiff31 = new foodev.jsondiff.JsonDiff(wrapper29);
        foodev.jsondiff.Visitor<?> wildcardVisitor32 = jsonDiff31.getVisitor();
        int int34 = jsonDiff31.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper35 = jsonDiff31.factory;
        foodev.jsondiff.JsonDiff jsonDiff36 = new foodev.jsondiff.JsonDiff(wrapper35);
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff(wrapper35);
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) jacksonWrapperException21, (java.lang.Object) wrapper35);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNull(wildcardVisitor17);
        org.junit.Assert.assertNotNull(wrapper24);
        org.junit.Assert.assertNull(wildcardVisitor26);
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertNotNull(wrapper29);
        org.junit.Assert.assertNull(wildcardVisitor32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(wrapper35);
    }

    @Test
    public void test05851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05851");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        int int17 = jsonDiff3.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor18 = jsonDiff3.getVisitor();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor18);
    }

    @Test
    public void test05852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05852");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor5 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Node node8 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        foodev.jsondiff.Leaf[] leafArray10 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList11 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList11, leafArray10);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap13 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf14 = jsonDiff1.findLeaves(node8, jzonElement9, (java.util.List<foodev.jsondiff.Leaf>) leafList11, intMap13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertNull(wildcardVisitor5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(leafArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test05853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05853");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        int int16 = jsonDiff14.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff14.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean19 = instruction18.isIndexed();
        int int20 = instruction18.index;
        int int21 = instruction18.index;
        instruction18.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction18.index = (byte) 1;
        instruction18.index = 35;
        boolean boolean28 = instruction18.isIndexed();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement29 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement12, instruction18, jzonElement29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test05854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05854");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int15 = jsonDiff3.isIndexed("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test05855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05855");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.Node node12 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.Leaf[] leafArray14 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList15 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList15, leafArray14);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap17 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf18 = jsonDiff11.findLeaves(node12, jzonElement13, (java.util.List<foodev.jsondiff.Leaf>) leafList15, intMap17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(leafArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test05856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05856");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        foodev.jsondiff.Leaf leaf13 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray14 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = jsonDiff1.accept(leaf13, jzonArray14, jzonObject15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test05857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05857");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper2);
        int int5 = jsonDiff3.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = jacksonWrapper0.wrap((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction10);
    }

    @Test
    public void test05858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05858");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Leaf leaf8 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray9 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = jsonDiff1.accept(leaf8, jzonArray9, jzonObject10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
    }

    @Test
    public void test05859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05859");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        int int15 = jsonDiff13.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        instruction17.index = 100;
        int int20 = instruction17.index;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
    }

    @Test
    public void test05860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05860");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper4);
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff7.create("");
        int int11 = jsonDiff7.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff7.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int14 = instruction13.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff18.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff18.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction22.index = (short) 100;
        boolean boolean25 = instruction22.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction26 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper27 = instruction26.oper;
        instruction26.key = "~";
        int int30 = instruction26.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff32 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper31);
        int int34 = jsonDiff32.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction36 = jsonDiff32.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean37 = instruction36.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff39 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper38);
        int int41 = jsonDiff39.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction43 = jsonDiff39.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper44 = instruction43.oper;
        instruction36.oper = oper44;
        instruction26.oper = oper44;
        foodev.jsondiff.Oper oper47 = instruction26.oper;
        instruction22.oper = oper47;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff50 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper49);
        foodev.jsondiff.jsonwrap.Wrapper wrapper51 = jsonDiff50.factory;
        foodev.jsondiff.JsonDiff jsonDiff52 = new foodev.jsondiff.JsonDiff(wrapper51);
        foodev.jsondiff.Visitor<?> wildcardVisitor53 = jsonDiff52.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction55 = jsonDiff52.create("");
        instruction55.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper58 = instruction55.oper;
        instruction22.oper = oper58;
        foodev.jsondiff.Oper oper60 = instruction22.oper;
        foodev.jsondiff.Oper oper61 = instruction22.oper;
        instruction13.oper = oper61;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff64 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper63);
        foodev.jsondiff.jsonwrap.Wrapper wrapper65 = jsonDiff64.factory;
        foodev.jsondiff.JsonDiff jsonDiff66 = new foodev.jsondiff.JsonDiff(wrapper65);
        foodev.jsondiff.JsonDiff.Instruction instruction68 = jsonDiff66.create("");
        int int70 = jsonDiff66.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction72 = jsonDiff66.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction74 = jsonDiff66.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction76 = jsonDiff66.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor77 = jsonDiff66.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper78 = jsonDiff66.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper79 = jsonDiff66.factory;
        foodev.jsondiff.JsonDiff jsonDiff80 = new foodev.jsondiff.JsonDiff(wrapper79);
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) instruction13, (java.lang.Object) wrapper79);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(oper27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(instruction36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(instruction43);
        org.junit.Assert.assertTrue("'" + oper44 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper44.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper47 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper47.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper51);
        org.junit.Assert.assertNull(wildcardVisitor53);
        org.junit.Assert.assertNotNull(instruction55);
        org.junit.Assert.assertTrue("'" + oper58 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper58.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper60 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper60.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper61 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper61.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper65);
        org.junit.Assert.assertNotNull(instruction68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(instruction72);
        org.junit.Assert.assertNotNull(instruction74);
        org.junit.Assert.assertNotNull(instruction76);
        org.junit.Assert.assertNull(wildcardVisitor77);
        org.junit.Assert.assertNotNull(wrapper78);
        org.junit.Assert.assertNotNull(wrapper79);
    }

    @Test
    public void test05861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05861");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException19.getSuppressed();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException19.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement27 = jacksonWrapper0.wrap((java.lang.Object) throwableArray26);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: [Ljava.lang.Throwable; cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray26);
    }

    @Test
    public void test05862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05862");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException17);
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException17.getSuppressed();
        java.lang.Class<?> wildcardClass32 = throwableArray31.getClass();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray35 = jacksonWrapperException34.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException38.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray43 = jacksonWrapperException42.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException44);
        jacksonWrapperException38.addSuppressed((java.lang.Throwable) jacksonWrapperException44);
        jacksonWrapperException36.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray50 = jacksonWrapperException49.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException51);
        jacksonWrapperException38.addSuppressed((java.lang.Throwable) jacksonWrapperException51);
        java.lang.Throwable[] throwableArray54 = jacksonWrapperException51.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        jacksonWrapperException51.addSuppressed((java.lang.Throwable) jacksonWrapperException57);
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff8.apply((java.lang.Object) wildcardClass32, (java.lang.Object) jacksonWrapperException57);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Class cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray54);
    }

    @Test
    public void test05863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05863");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        int int11 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int13 = jsonDiff1.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff1.create("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = wrapper17.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(wrapper17);
    }

    @Test
    public void test05864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05864");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = jsonDiff3.diff("hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction10);
    }

    @Test
    public void test05865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05865");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff3.create("~");
        int int19 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int21 = jsonDiff3.isIndexed("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test05866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05866");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException29.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException33.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException39);
        jacksonWrapperException33.addSuppressed((java.lang.Throwable) jacksonWrapperException39);
        jacksonWrapperException29.addSuppressed((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray45 = jacksonWrapperException44.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray49 = jacksonWrapperException48.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException50);
        jacksonWrapperException44.addSuppressed((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray56 = jacksonWrapperException55.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException55);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray60 = jacksonWrapperException59.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException61);
        jacksonWrapperException55.addSuppressed((java.lang.Throwable) jacksonWrapperException61);
        jacksonWrapperException54.addSuppressed((java.lang.Throwable) jacksonWrapperException55);
        jacksonWrapperException29.addSuppressed((java.lang.Throwable) jacksonWrapperException55);
        jacksonWrapperException28.addSuppressed((java.lang.Throwable) jacksonWrapperException55);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException55);
        java.lang.Throwable[] throwableArray68 = jacksonWrapperException55.getSuppressed();
        java.lang.Class<?> wildcardClass69 = throwableArray68.getClass();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement70 = gsonWrapper0.wrap((java.lang.Object) wildcardClass69);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Class cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test05867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05867");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper2);
        int int5 = jsonDiff3.isIndexed("hi!");
        int int7 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        int int10 = jsonDiff3.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = jacksonWrapper0.wrap((java.lang.Object) jsonDiff3);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
    }

    @Test
    public void test05868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05868");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException24);
        jacksonWrapperException18.addSuppressed((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException33.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException39);
        jacksonWrapperException33.addSuppressed((java.lang.Throwable) jacksonWrapperException39);
        jacksonWrapperException31.addSuppressed((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException45);
        jacksonWrapperException33.addSuppressed((java.lang.Throwable) jacksonWrapperException46);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement51 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException27);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray38);
    }

    @Test
    public void test05869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05869");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor5 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = wrapper6.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertNull(wildcardVisitor5);
        org.junit.Assert.assertNotNull(wrapper6);
    }

    @Test
    public void test05870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05870");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int10 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = jsonDiff1.diff("~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test05871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05871");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.JsonDiff.Instruction instruction19 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper20 = instruction19.oper;
        instruction19.key = "~";
        instruction19.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff26 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper25);
        foodev.jsondiff.jsonwrap.Wrapper wrapper27 = jsonDiff26.factory;
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff(wrapper27);
        foodev.jsondiff.JsonDiff.Instruction instruction30 = jsonDiff28.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff28.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction32.index = (short) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff36 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper35);
        foodev.jsondiff.jsonwrap.Wrapper wrapper37 = jsonDiff36.factory;
        foodev.jsondiff.JsonDiff jsonDiff38 = new foodev.jsondiff.JsonDiff(wrapper37);
        foodev.jsondiff.JsonDiff.Instruction instruction40 = jsonDiff38.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction42 = jsonDiff38.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction42.index = (short) 100;
        boolean boolean45 = instruction42.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction46 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper47 = instruction46.oper;
        instruction46.key = "~";
        int int50 = instruction46.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff52 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper51);
        int int54 = jsonDiff52.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction56 = jsonDiff52.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean57 = instruction56.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff59 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper58);
        int int61 = jsonDiff59.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction63 = jsonDiff59.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper64 = instruction63.oper;
        instruction56.oper = oper64;
        instruction46.oper = oper64;
        foodev.jsondiff.Oper oper67 = instruction46.oper;
        instruction42.oper = oper67;
        instruction32.oper = oper67;
        instruction19.oper = oper67;
        instruction19.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        instruction19.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        java.lang.String str75 = instruction19.key;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply((java.lang.Object) jacksonWrapperException16, (java.lang.Object) instruction19);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNull(oper20);
        org.junit.Assert.assertNotNull(wrapper27);
        org.junit.Assert.assertNotNull(instruction30);
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertNotNull(wrapper37);
        org.junit.Assert.assertNotNull(instruction40);
        org.junit.Assert.assertNotNull(instruction42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(oper47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(instruction56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(instruction63);
        org.junit.Assert.assertTrue("'" + oper64 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper64.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper67 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper67.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~" + "'", str75, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
    }

    @Test
    public void test05872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05872");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff7.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff7.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff7.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff18.create("");
        instruction20.key = "hi!";
        int int23 = instruction20.index;
        int int24 = instruction20.index;
        int int25 = instruction20.index;
        foodev.jsondiff.Oper oper26 = instruction20.oper;
        int int27 = instruction20.index;
        instruction20.key = "~";
        foodev.jsondiff.jsonwrap.JzonElement jzonElement30 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff13.applyPartial(jzonElement14, instruction20, jzonElement30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + oper26 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper26.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test05873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05873");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject11 = jsonDiff3.diff(jzonElement9, jzonElement10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
    }

    @Test
    public void test05874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05874");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        int int10 = jsonDiff1.isIndexed("");
        foodev.jsondiff.Leaf leaf11 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray12 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = jsonDiff1.accept(leaf11, jzonArray12, jzonObject13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test05875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05875");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement11, jzonElement12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNull(wildcardVisitor10);
    }

    @Test
    public void test05876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05876");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper8);
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff11.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean14 = instruction13.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        int int18 = jsonDiff16.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff16.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper21 = instruction20.oper;
        instruction13.oper = oper21;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement23 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement7, instruction13, jzonElement23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertTrue("'" + oper21 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper21.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05877");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException38.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray43 = jacksonWrapperException42.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException44);
        jacksonWrapperException38.addSuppressed((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray51 = jacksonWrapperException50.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException44.addSuppressed((java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray63 = jacksonWrapperException62.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException62);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray67 = jacksonWrapperException66.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException66);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException68);
        jacksonWrapperException62.addSuppressed((java.lang.Throwable) jacksonWrapperException68);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException71 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException62);
        jacksonWrapperException60.addSuppressed((java.lang.Throwable) jacksonWrapperException62);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException73 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException60);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException74 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException60);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException60);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException76 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException60);
        java.lang.String str77 = jacksonWrapperException60.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str77, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
    }

    @Test
    public void test05878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05878");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement12, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test05879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05879");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff14.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.Visitor<?> wildcardVisitor17 = jsonDiff16.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff16.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff16.factory;
        int int22 = jsonDiff16.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff16.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff16.create("");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement27 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement12, instruction26, jzonElement27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNull(wildcardVisitor17);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertNotNull(wrapper24);
        org.junit.Assert.assertNotNull(instruction26);
    }

    @Test
    public void test05880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05880");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        int int8 = jsonDiff6.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        foodev.jsondiff.JsonDiff.Instruction instruction10 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff6.applyPartial(jzonElement9, instruction10, jzonElement11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test05881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05881");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException9);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException22);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException31.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException33);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException33);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray41 = jacksonWrapperException40.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray45 = jacksonWrapperException44.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException46);
        jacksonWrapperException40.addSuppressed((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray53 = jacksonWrapperException52.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException54);
        jacksonWrapperException46.addSuppressed((java.lang.Throwable) jacksonWrapperException54);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray62 = jacksonWrapperException61.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException61);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException63);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException64);
        java.lang.Throwable[] throwableArray66 = jacksonWrapperException65.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException65);
        jacksonWrapperException54.addSuppressed((java.lang.Throwable) jacksonWrapperException67);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException67);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException67);
        java.lang.Class<?> wildcardClass71 = jacksonWrapperException70.getClass();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test05882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05882");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff9.checkIndex(jzonElement14, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
    }

    @Test
    public void test05883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05883");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int13 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff15.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff20.create("");
        int int24 = jsonDiff20.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff20.create("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor27 = jsonDiff20.getVisitor();
        int int29 = jsonDiff20.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement30 = wrapper16.wrap((java.lang.Object) jsonDiff20);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertNull(wildcardVisitor27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test05884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05884");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        int int8 = jsonDiff6.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff6.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff14.create("");
        foodev.jsondiff.Oper oper17 = instruction16.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper18);
        int int21 = jsonDiff19.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff19.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean24 = instruction23.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff26 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper25);
        int int28 = jsonDiff26.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction30 = jsonDiff26.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper31 = instruction30.oper;
        instruction23.oper = oper31;
        instruction16.oper = oper31;
        instruction16.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.Oper oper36 = instruction16.oper;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement37 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff6.applyPartial(jzonElement10, instruction16, jzonElement37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertTrue("'" + oper17 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper17.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(instruction30);
        org.junit.Assert.assertTrue("'" + oper31 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper31.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper36 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper36.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05885");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper8);
        int int11 = jsonDiff9.isIndexed("hi!");
        int int13 = jsonDiff9.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff9.factory;
        int int16 = jsonDiff9.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction20 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction20.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper23);
        int int26 = jsonDiff24.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper29 = instruction28.oper;
        instruction20.oper = oper29;
        instruction19.oper = oper29;
        java.lang.String str32 = instruction19.key;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement33 = wrapper7.wrap((java.lang.Object) str32);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertTrue("'" + oper29 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper29.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str32, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test05886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05886");
        java.lang.Throwable throwable1 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", throwable1);
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray3);
    }

    @Test
    public void test05887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05887");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction5.key = "hi!";
        boolean boolean8 = instruction5.isIndexed();
        instruction5.index = 0;
        instruction5.index = (byte) 100;
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        int int15 = instruction5.index;
        int int16 = instruction5.index;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
    }

    @Test
    public void test05888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05888");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff15.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff15.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff15.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.Visitor<?> wildcardVisitor22 = jsonDiff21.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor23 = jsonDiff21.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff21.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff26 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper25);
        foodev.jsondiff.jsonwrap.Wrapper wrapper27 = jsonDiff26.factory;
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff(wrapper27);
        foodev.jsondiff.JsonDiff.Instruction instruction30 = jsonDiff28.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff28.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction32.index = (short) 100;
        boolean boolean35 = instruction32.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction36 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper37 = instruction36.oper;
        instruction36.key = "~";
        int int40 = instruction36.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff42 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper41);
        int int44 = jsonDiff42.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction46 = jsonDiff42.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean47 = instruction46.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff49 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper48);
        int int51 = jsonDiff49.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction53 = jsonDiff49.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper54 = instruction53.oper;
        instruction46.oper = oper54;
        instruction36.oper = oper54;
        foodev.jsondiff.Oper oper57 = instruction36.oper;
        instruction32.oper = oper57;
        instruction32.index = (-1);
        boolean boolean61 = instruction32.isIndexed();
        java.lang.String str62 = instruction32.key;
        java.lang.String str63 = instruction32.key;
        foodev.jsondiff.Oper oper64 = instruction32.oper;
        java.lang.Class<?> wildcardClass65 = instruction32.getClass();
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) jsonDiff21, (java.lang.Object) instruction32);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNull(wildcardVisitor22);
        org.junit.Assert.assertNull(wildcardVisitor23);
        org.junit.Assert.assertNotNull(wrapper24);
        org.junit.Assert.assertNotNull(wrapper27);
        org.junit.Assert.assertNotNull(instruction30);
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(oper37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(instruction46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(instruction53);
        org.junit.Assert.assertTrue("'" + oper54 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper54.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper57 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper57.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str62, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str63, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + oper64 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper64.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test05889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05889");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement3 = gsonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05890");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        int int15 = jsonDiff13.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff13.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff13.checkIndex(jzonElement17, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(wrapper16);
    }

    @Test
    public void test05891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05891");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject14 = jsonDiff3.diff(jzonElement12, jzonElement13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test05892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05892");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        foodev.jsondiff.Leaf leaf6 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray7 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = jsonDiff4.accept(leaf6, jzonArray7, jzonObject8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper5);
    }

    @Test
    public void test05893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05893");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.Node node6 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = null;
        foodev.jsondiff.Leaf[] leafArray8 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList9 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList9, leafArray8);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap11 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf12 = jsonDiff5.findLeaves(node6, jzonElement7, (java.util.List<foodev.jsondiff.Leaf>) leafList9, intMap11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(leafArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test05894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05894");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int13 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply(jzonElement16, jzonElement17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNull(wildcardVisitor15);
    }

    @Test
    public void test05895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05895");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = wrapper10.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test05896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05896");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff10.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff10.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = jsonDiff10.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test05897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05897");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply(jzonElement10, jzonElement11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test05898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05898");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = wrapper8.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
    }

    @Test
    public void test05899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05899");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = gsonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05900");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int7 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("");
        boolean boolean16 = instruction15.isIndexed();
        instruction15.index = (short) -1;
        int int19 = instruction15.index;
        int int20 = instruction15.index;
        foodev.jsondiff.JsonDiff.Instruction instruction21 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper22 = instruction21.oper;
        instruction21.key = "~";
        instruction21.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper27);
        foodev.jsondiff.jsonwrap.Wrapper wrapper29 = jsonDiff28.factory;
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff(wrapper29);
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff30.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction34 = jsonDiff30.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction34.index = (short) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff38 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper37);
        foodev.jsondiff.jsonwrap.Wrapper wrapper39 = jsonDiff38.factory;
        foodev.jsondiff.JsonDiff jsonDiff40 = new foodev.jsondiff.JsonDiff(wrapper39);
        foodev.jsondiff.JsonDiff.Instruction instruction42 = jsonDiff40.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction44 = jsonDiff40.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction44.index = (short) 100;
        boolean boolean47 = instruction44.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction48 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper49 = instruction48.oper;
        instruction48.key = "~";
        int int52 = instruction48.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff54 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper53);
        int int56 = jsonDiff54.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction58 = jsonDiff54.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean59 = instruction58.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff61 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper60);
        int int63 = jsonDiff61.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction65 = jsonDiff61.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper66 = instruction65.oper;
        instruction58.oper = oper66;
        instruction48.oper = oper66;
        foodev.jsondiff.Oper oper69 = instruction48.oper;
        instruction44.oper = oper69;
        instruction34.oper = oper69;
        instruction21.oper = oper69;
        instruction15.oper = oper69;
        foodev.jsondiff.Oper oper74 = instruction15.oper;
        boolean boolean75 = instruction15.isIndexed();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement76 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement9, instruction15, jzonElement76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(oper22);
        org.junit.Assert.assertNotNull(wrapper29);
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertNotNull(instruction34);
        org.junit.Assert.assertNotNull(wrapper39);
        org.junit.Assert.assertNotNull(instruction42);
        org.junit.Assert.assertNotNull(instruction44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(oper49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(instruction58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(instruction65);
        org.junit.Assert.assertTrue("'" + oper66 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper66.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper69 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper69.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper74 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper74.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test05901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05901");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement12, 35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
    }

    @Test
    public void test05902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05902");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        java.lang.String str33 = jacksonWrapperException3.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str33, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test05903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05903");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException26);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        jacksonWrapperException0.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        java.lang.Throwable throwable39 = null;
        // The following exception was thrown during execution in test generation
        try {
            jacksonWrapperException0.addSuppressed(throwable39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray31);
    }

    @Test
    public void test05904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05904");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray18);
    }

    @Test
    public void test05905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05905");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff10.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff15.create("");
        int int19 = jsonDiff15.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff15.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Oper oper22 = instruction21.oper;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement23 = wrapper11.wrap((java.lang.Object) oper22);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + oper22 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper22.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05906");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff9.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff9.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff16.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = jsonDiff16.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(instruction18);
    }

    @Test
    public void test05907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05907");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean6 = instruction5.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        int int10 = jsonDiff8.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper13 = instruction12.oper;
        instruction5.oper = oper13;
        int int15 = instruction5.index;
        foodev.jsondiff.JsonDiff.Instruction instruction16 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction16.key = "";
        instruction16.index = 'a';
        instruction16.index = 1;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper23);
        foodev.jsondiff.jsonwrap.Wrapper wrapper25 = jsonDiff24.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction27.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.JsonDiff.Instruction instruction30 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction30.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff34 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper33);
        int int36 = jsonDiff34.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction38 = jsonDiff34.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper39 = instruction38.oper;
        instruction30.oper = oper39;
        instruction27.oper = oper39;
        instruction16.oper = oper39;
        instruction5.oper = oper39;
        foodev.jsondiff.Oper oper44 = instruction5.oper;
        boolean boolean45 = instruction5.isIndexed();
        boolean boolean46 = instruction5.isIndexed();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + oper13 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper13.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(wrapper25);
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(instruction38);
        org.junit.Assert.assertTrue("'" + oper39 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper39.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper44 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper44.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test05908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05908");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = wrapper17.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(wrapper17);
    }

    @Test
    public void test05909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05909");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        int int6 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff4.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = wrapper9.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test05910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05910");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff6.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = jsonDiff6.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNull(wildcardVisitor7);
    }

    @Test
    public void test05911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05911");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException7);
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        java.lang.Class<?> wildcardClass20 = throwableArray19.getClass();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test05912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05912");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int8 = instruction7.index;
        int int9 = instruction7.index;
        boolean boolean10 = instruction7.isIndexed();
        boolean boolean11 = instruction7.isIndexed();
        instruction7.index = (byte) 100;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test05913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05913");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff6.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff6.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException16);
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException22);
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        jacksonWrapperException29.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException29.getSuppressed();
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException35.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException39.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException41);
        jacksonWrapperException35.addSuppressed((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray47 = jacksonWrapperException46.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray51 = jacksonWrapperException50.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException46.addSuppressed((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray58 = jacksonWrapperException57.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray62 = jacksonWrapperException61.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException61);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException63);
        jacksonWrapperException57.addSuppressed((java.lang.Throwable) jacksonWrapperException63);
        jacksonWrapperException56.addSuppressed((java.lang.Throwable) jacksonWrapperException57);
        jacksonWrapperException44.addSuppressed((java.lang.Throwable) jacksonWrapperException57);
        java.lang.Throwable[] throwableArray68 = jacksonWrapperException44.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException71 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException72 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException71);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException73 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray74 = jacksonWrapperException73.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException75 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException73);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException77 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray78 = jacksonWrapperException77.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException79 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException77);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException80 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException79);
        jacksonWrapperException73.addSuppressed((java.lang.Throwable) jacksonWrapperException79);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException82 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException79);
        java.lang.Throwable[] throwableArray83 = jacksonWrapperException79.getSuppressed();
        jacksonWrapperException71.addSuppressed((java.lang.Throwable) jacksonWrapperException79);
        jacksonWrapperException44.addSuppressed((java.lang.Throwable) jacksonWrapperException71);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException71);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement87 = wrapper8.wrap((java.lang.Object) jacksonWrapperException71);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertNotNull(throwableArray78);
        org.junit.Assert.assertNotNull(throwableArray83);
    }

    @Test
    public void test05914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05914");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff11.getVisitor();
        int int14 = jsonDiff11.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff17.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff19.create("");
        boolean boolean22 = instruction21.isIndexed();
        instruction21.index = (short) -1;
        int int25 = instruction21.index;
        int int26 = instruction21.index;
        java.lang.String str27 = instruction21.key;
        instruction21.index = 0;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff31 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper30);
        foodev.jsondiff.jsonwrap.Wrapper wrapper32 = jsonDiff31.factory;
        foodev.jsondiff.JsonDiff jsonDiff33 = new foodev.jsondiff.JsonDiff(wrapper32);
        foodev.jsondiff.Visitor<?> wildcardVisitor34 = jsonDiff33.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction36 = jsonDiff33.create("");
        instruction36.index = ' ';
        foodev.jsondiff.Oper oper39 = instruction36.oper;
        instruction21.oper = oper39;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement41 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff11.applyPartial(jzonElement15, instruction21, jzonElement41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(wrapper32);
        org.junit.Assert.assertNull(wildcardVisitor34);
        org.junit.Assert.assertNotNull(instruction36);
        org.junit.Assert.assertTrue("'" + oper39 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper39.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05915");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("hi!");
        int int6 = instruction5.index;
        foodev.jsondiff.Oper oper7 = instruction5.oper;
        java.lang.String str8 = instruction5.key;
        int int9 = instruction5.index;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + oper7 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper7.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test05916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05916");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        int int4 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int10 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff15.create("");
        int int19 = jsonDiff15.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff15.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff15.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction23.index = (short) 1;
        int int26 = instruction23.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper27);
        foodev.jsondiff.jsonwrap.Wrapper wrapper29 = jsonDiff28.factory;
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff(wrapper29);
        foodev.jsondiff.JsonDiff jsonDiff31 = new foodev.jsondiff.JsonDiff(wrapper29);
        int int33 = jsonDiff31.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction35 = jsonDiff31.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper36);
        foodev.jsondiff.jsonwrap.Wrapper wrapper38 = jsonDiff37.factory;
        foodev.jsondiff.JsonDiff jsonDiff39 = new foodev.jsondiff.JsonDiff(wrapper38);
        foodev.jsondiff.JsonDiff.Instruction instruction41 = jsonDiff39.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean42 = instruction41.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff44 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper43);
        int int46 = jsonDiff44.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction48 = jsonDiff44.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper49 = instruction48.oper;
        instruction41.oper = oper49;
        instruction35.oper = oper49;
        instruction23.oper = oper49;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement53 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement11, instruction23, jzonElement53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(wrapper29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(instruction35);
        org.junit.Assert.assertNotNull(wrapper38);
        org.junit.Assert.assertNotNull(instruction41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(instruction48);
        org.junit.Assert.assertTrue("'" + oper49 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper49.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05917");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        int int6 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = wrapper9.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test05918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05918");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper3);
        int int6 = jsonDiff4.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean9 = instruction8.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff13.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff13.create("");
        instruction16.key = "hi!";
        int int19 = instruction16.index;
        foodev.jsondiff.Oper oper20 = instruction16.oper;
        instruction8.oper = oper20;
        int int22 = instruction8.index;
        java.lang.String str23 = instruction8.key;
        java.lang.String str24 = instruction8.key;
        foodev.jsondiff.Oper oper25 = null;
        instruction8.oper = oper25;
        java.lang.String str27 = instruction8.key;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement28 = gsonWrapper0.wrap((java.lang.Object) instruction8);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + oper20 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper20.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str23, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str24, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str27, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test05919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05919");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff9.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff9.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff9.getVisitor();
        java.lang.Class<?> wildcardClass13 = jsonDiff9.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test05920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05920");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff1.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = jsonDiff1.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNull(wildcardVisitor15);
    }

    @Test
    public void test05921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05921");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        int int5 = jsonDiff2.isIndexed("");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff2.apply(jzonElement6, jzonElement7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test05922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05922");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int13 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int15 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper21);
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff22.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor24 = jsonDiff22.getVisitor();
        int int26 = jsonDiff22.isIndexed("~");
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply((java.lang.Object) jacksonWrapperException20, (java.lang.Object) int26);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertNull(wildcardVisitor24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
    }

    @Test
    public void test05923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05923");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        int int11 = jsonDiff3.isIndexed("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff3.getVisitor();
        int int14 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff16.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff16.factory;
        int int21 = jsonDiff16.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor22 = jsonDiff16.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff16.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff16.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff26 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper25);
        foodev.jsondiff.jsonwrap.Wrapper wrapper27 = jsonDiff26.factory;
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff(wrapper27);
        foodev.jsondiff.JsonDiff.Instruction instruction30 = jsonDiff28.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff28.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction32.index = (short) 100;
        boolean boolean35 = instruction32.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction36 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper37 = instruction36.oper;
        instruction36.key = "~";
        int int40 = instruction36.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff42 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper41);
        int int44 = jsonDiff42.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction46 = jsonDiff42.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean47 = instruction46.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff49 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper48);
        int int51 = jsonDiff49.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction53 = jsonDiff49.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper54 = instruction53.oper;
        instruction46.oper = oper54;
        instruction36.oper = oper54;
        foodev.jsondiff.Oper oper57 = instruction36.oper;
        instruction32.oper = oper57;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff60 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper59);
        foodev.jsondiff.jsonwrap.Wrapper wrapper61 = jsonDiff60.factory;
        foodev.jsondiff.JsonDiff jsonDiff62 = new foodev.jsondiff.JsonDiff(wrapper61);
        foodev.jsondiff.Visitor<?> wildcardVisitor63 = jsonDiff62.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction65 = jsonDiff62.create("");
        instruction65.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper68 = instruction65.oper;
        instruction32.oper = oper68;
        boolean boolean70 = instruction32.isIndexed();
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) jsonDiff16, (java.lang.Object) boolean70);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor22);
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertNotNull(wrapper24);
        org.junit.Assert.assertNotNull(wrapper27);
        org.junit.Assert.assertNotNull(instruction30);
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(oper37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(instruction46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(instruction53);
        org.junit.Assert.assertTrue("'" + oper54 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper54.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper57 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper57.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper61);
        org.junit.Assert.assertNull(wildcardVisitor63);
        org.junit.Assert.assertNotNull(instruction65);
        org.junit.Assert.assertTrue("'" + oper68 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper68.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test05924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05924");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        int int12 = jsonDiff3.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement14, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor13);
    }

    @Test
    public void test05925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05925");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException10);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException33.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException39);
        jacksonWrapperException33.addSuppressed((java.lang.Throwable) jacksonWrapperException39);
        jacksonWrapperException31.addSuppressed((java.lang.Throwable) jacksonWrapperException33);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException31);
        java.lang.Class<?> wildcardClass46 = jacksonWrapperException31.getClass();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement47 = gsonWrapper0.wrap((java.lang.Object) jacksonWrapperException31);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test05926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05926");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        instruction10.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        java.lang.Class<?> wildcardClass13 = instruction10.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test05927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05927");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("~");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper5);
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff6.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff8.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int14 = jsonDiff8.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff8.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff8.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper19);
        foodev.jsondiff.jsonwrap.Wrapper wrapper21 = jsonDiff20.factory;
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff(wrapper21);
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper21);
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff(wrapper21);
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Oper oper27 = null;
        instruction26.oper = oper27;
        int int29 = instruction26.index;
        java.lang.String str30 = instruction26.key;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply((java.lang.Object) jsonDiff18, (java.lang.Object) str30);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor15);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(wrapper21);
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str30, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test05928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05928");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff3.factory;
        java.lang.Class<?> wildcardClass14 = jsonDiff3.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test05929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05929");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        int int14 = jsonDiff12.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean20 = instruction19.isIndexed();
        boolean boolean21 = instruction19.isIndexed();
        instruction19.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        foodev.jsondiff.jsonwrap.JzonElement jzonElement24 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement10, instruction19, jzonElement24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test05930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05930");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException9);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException9);
        java.lang.Class<?> wildcardClass15 = jacksonWrapperException9.getClass();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException9);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test05931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05931");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff7.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff7.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff7.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff7.getVisitor();
        int int14 = jsonDiff7.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException22);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper28);
        int int31 = jsonDiff29.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction33 = jsonDiff29.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean34 = instruction33.isIndexed();
        int int35 = instruction33.index;
        int int36 = instruction33.index;
        foodev.jsondiff.Oper oper37 = instruction33.oper;
        int int38 = instruction33.index;
        int int39 = instruction33.index;
        foodev.jsondiff.Oper oper40 = instruction33.oper;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff7.apply((java.lang.Object) jacksonWrapperException27, (java.lang.Object) oper40);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(instruction33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + oper37 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper37.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + oper40 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper40.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05932");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement4 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement5 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject6 = jsonDiff3.diff(jzonElement4, jzonElement5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05933");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNull(wildcardVisitor7);
    }

    @Test
    public void test05934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05934");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Node node11 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.Leaf[] leafArray13 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList14 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList14, leafArray13);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap16 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf17 = jsonDiff8.findLeaves(node11, jzonElement12, (java.util.List<foodev.jsondiff.Leaf>) leafList14, intMap16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(leafArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test05935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05935");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff11.apply(jzonElement12, jzonElement13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test05936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05936");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        java.lang.String str15 = instruction14.key;
        instruction14.index = '#';
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "~" + "'", str15, "~");
    }

    @Test
    public void test05937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05937");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff3.create("hi!");
        foodev.jsondiff.Oper oper13 = instruction12.oper;
        instruction12.index = (short) 1;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + oper13 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper13.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05938");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int10 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper14);
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff15.factory;
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper16);
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean20 = instruction19.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper21);
        int int24 = jsonDiff22.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff22.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper27 = instruction26.oper;
        instruction19.oper = oper27;
        int int29 = instruction19.index;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement30 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff12.applyPartial(jzonElement13, instruction19, jzonElement30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertTrue("'" + oper27 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper27.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test05939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05939");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        int int16 = jsonDiff3.isIndexed("");
        int int18 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor20 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor21 = jsonDiff3.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNull(wildcardVisitor20);
        org.junit.Assert.assertNull(wildcardVisitor21);
    }

    @Test
    public void test05940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05940");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement3 = gsonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05941");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        int int6 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff4.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject10 = jsonDiff4.diff(jzonElement8, jzonElement9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
    }

    @Test
    public void test05942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05942");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException31.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException33);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException36);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException36);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException36);
        java.lang.Throwable[] throwableArray42 = jacksonWrapperException41.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff44 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper43);
        foodev.jsondiff.jsonwrap.Wrapper wrapper45 = jsonDiff44.factory;
        foodev.jsondiff.JsonDiff jsonDiff46 = new foodev.jsondiff.JsonDiff(wrapper45);
        foodev.jsondiff.JsonDiff.Instruction instruction48 = jsonDiff46.create("");
        int int50 = jsonDiff46.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction52 = jsonDiff46.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction54 = jsonDiff46.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction56 = jsonDiff46.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor57 = jsonDiff46.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper58 = jsonDiff46.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj59 = jsonDiff3.diff((java.lang.Object) throwableArray42, (java.lang.Object) jsonDiff46);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: [Ljava.lang.Throwable; cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(wrapper45);
        org.junit.Assert.assertNotNull(instruction48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(instruction52);
        org.junit.Assert.assertNotNull(instruction54);
        org.junit.Assert.assertNotNull(instruction56);
        org.junit.Assert.assertNull(wildcardVisitor57);
        org.junit.Assert.assertNotNull(wrapper58);
    }

    @Test
    public void test05943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05943");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff10.getVisitor();
        int int13 = jsonDiff10.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        java.lang.Object obj14 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff18.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor21 = jsonDiff18.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff18.create("hi!");
        instruction23.index = '4';
        java.lang.String str26 = instruction23.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper27);
        int int30 = jsonDiff28.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff28.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper33 = instruction32.oper;
        int int34 = instruction32.index;
        foodev.jsondiff.Oper oper35 = instruction32.oper;
        instruction23.oper = oper35;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff10.apply(obj14, (java.lang.Object) oper35);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertNull(wildcardVisitor21);
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertTrue("'" + oper33 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper33.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + oper35 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper35.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05944");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff8.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject13 = jsonDiff8.diff(jzonElement11, jzonElement12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor10);
    }

    @Test
    public void test05945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05945");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException17);
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException10);
        java.lang.String str33 = jacksonWrapperException10.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str33, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test05946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05946");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        int int12 = jsonDiff3.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor13);
        org.junit.Assert.assertNotNull(instruction15);
    }

    @Test
    public void test05947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05947");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff3.getVisitor();
        int int10 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper12 = instruction11.oper;
        instruction11.key = "~";
        instruction11.key = "";
        foodev.jsondiff.JsonDiff.Instruction instruction17 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction17.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper20);
        int int23 = jsonDiff21.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff21.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper26 = instruction25.oper;
        instruction17.oper = oper26;
        instruction11.oper = oper26;
        instruction11.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        instruction11.index = (byte) 0;
        instruction11.index = 0;
        foodev.jsondiff.JsonDiff.Instruction instruction35 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction35.key = "";
        instruction35.index = 'a';
        instruction35.index = 1;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff43 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper42);
        foodev.jsondiff.jsonwrap.Wrapper wrapper44 = jsonDiff43.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction46 = jsonDiff43.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction46.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.JsonDiff.Instruction instruction49 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction49.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff53 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper52);
        int int55 = jsonDiff53.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction57 = jsonDiff53.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper58 = instruction57.oper;
        instruction49.oper = oper58;
        instruction46.oper = oper58;
        instruction35.oper = oper58;
        boolean boolean62 = instruction35.isIndexed();
        java.lang.String str63 = instruction35.key;
        instruction35.index = (short) 10;
        int int66 = instruction35.index;
        foodev.jsondiff.Oper oper67 = instruction35.oper;
        instruction11.oper = oper67;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException71 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException72 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException71);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException73 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException72);
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) oper67, (java.lang.Object) jacksonWrapperException72);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(oper12);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertTrue("'" + oper26 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper26.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper44);
        org.junit.Assert.assertNotNull(instruction46);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(instruction57);
        org.junit.Assert.assertTrue("'" + oper58 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper58.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 10 + "'", int66 == 10);
        org.junit.Assert.assertTrue("'" + oper67 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper67.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05948");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        int int6 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException33.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException35);
        jacksonWrapperException29.addSuppressed((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff44 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper43);
        foodev.jsondiff.jsonwrap.Wrapper wrapper45 = jsonDiff44.factory;
        foodev.jsondiff.JsonDiff jsonDiff46 = new foodev.jsondiff.JsonDiff(wrapper45);
        foodev.jsondiff.Visitor<?> wildcardVisitor47 = jsonDiff46.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction49 = jsonDiff46.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper50 = jsonDiff46.factory;
        int int52 = jsonDiff46.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper53 = jsonDiff46.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor54 = jsonDiff46.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper55 = jsonDiff46.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj56 = jsonDiff11.diff((java.lang.Object) jacksonWrapperException42, (java.lang.Object) jsonDiff46);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(wrapper45);
        org.junit.Assert.assertNull(wildcardVisitor47);
        org.junit.Assert.assertNotNull(instruction49);
        org.junit.Assert.assertNotNull(wrapper50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(wrapper53);
        org.junit.Assert.assertNull(wildcardVisitor54);
        org.junit.Assert.assertNotNull(wrapper55);
    }

    @Test
    public void test05949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05949");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        boolean boolean6 = instruction5.isIndexed();
        instruction5.index = (short) -1;
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        boolean boolean11 = instruction5.isIndexed();
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        java.lang.String str14 = instruction5.key;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str14, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
    }

    @Test
    public void test05950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05950");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff9.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff9.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff16.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        java.lang.Class<?> wildcardClass19 = jsonDiff16.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test05951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05951");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff4.create("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff4.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        int int13 = jsonDiff11.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff11.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean16 = instruction15.isIndexed();
        foodev.jsondiff.Oper oper17 = null;
        instruction15.oper = oper17;
        instruction15.index = ' ';
        java.lang.String str21 = instruction15.key;
        instruction15.index = 0;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper24);
        int int27 = jsonDiff25.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor28 = jsonDiff25.getVisitor();
        int int30 = jsonDiff25.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper31 = jsonDiff25.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction33 = jsonDiff25.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper34);
        foodev.jsondiff.jsonwrap.Wrapper wrapper36 = jsonDiff35.factory;
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff(wrapper36);
        foodev.jsondiff.JsonDiff.Instruction instruction39 = jsonDiff37.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction41 = jsonDiff37.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction41.index = (short) 100;
        boolean boolean44 = instruction41.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction45 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper46 = instruction45.oper;
        instruction45.key = "~";
        int int49 = instruction45.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff51 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper50);
        int int53 = jsonDiff51.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction55 = jsonDiff51.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean56 = instruction55.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff58 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper57);
        int int60 = jsonDiff58.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction62 = jsonDiff58.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper63 = instruction62.oper;
        instruction55.oper = oper63;
        instruction45.oper = oper63;
        foodev.jsondiff.Oper oper66 = instruction45.oper;
        instruction41.oper = oper66;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff69 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper68);
        foodev.jsondiff.jsonwrap.Wrapper wrapper70 = jsonDiff69.factory;
        foodev.jsondiff.JsonDiff jsonDiff71 = new foodev.jsondiff.JsonDiff(wrapper70);
        foodev.jsondiff.Visitor<?> wildcardVisitor72 = jsonDiff71.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction74 = jsonDiff71.create("");
        instruction74.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper77 = instruction74.oper;
        instruction41.oper = oper77;
        foodev.jsondiff.Oper oper79 = instruction41.oper;
        foodev.jsondiff.Oper oper80 = instruction41.oper;
        java.lang.String str81 = instruction41.key;
        foodev.jsondiff.Oper oper82 = instruction41.oper;
        foodev.jsondiff.Oper oper83 = instruction41.oper;
        instruction33.oper = oper83;
        instruction15.oper = oper83;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper86 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff87 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper86);
        foodev.jsondiff.jsonwrap.Wrapper wrapper88 = jsonDiff87.factory;
        foodev.jsondiff.JsonDiff jsonDiff89 = new foodev.jsondiff.JsonDiff(wrapper88);
        foodev.jsondiff.JsonDiff.Instruction instruction91 = jsonDiff89.create("");
        int int93 = jsonDiff89.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction95 = jsonDiff89.create("");
        int int97 = jsonDiff89.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff9.apply((java.lang.Object) instruction15, (java.lang.Object) int97);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str21, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(wrapper31);
        org.junit.Assert.assertNotNull(instruction33);
        org.junit.Assert.assertNotNull(wrapper36);
        org.junit.Assert.assertNotNull(instruction39);
        org.junit.Assert.assertNotNull(instruction41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(oper46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(instruction55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(instruction62);
        org.junit.Assert.assertTrue("'" + oper63 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper63.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper66 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper66.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper70);
        org.junit.Assert.assertNull(wildcardVisitor72);
        org.junit.Assert.assertNotNull(instruction74);
        org.junit.Assert.assertTrue("'" + oper77 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper77.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper79 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper79.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper80 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper80.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str81, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + oper82 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper82.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper83 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper83.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper88);
        org.junit.Assert.assertNotNull(instruction91);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertNotNull(instruction95);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
    }

    @Test
    public void test05952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05952");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException23.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException36.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException36.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException36);
        java.lang.Throwable[] throwableArray41 = jacksonWrapperException36.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray49 = jacksonWrapperException48.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray57 = jacksonWrapperException56.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException56);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray61 = jacksonWrapperException60.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException60);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException62);
        jacksonWrapperException56.addSuppressed((java.lang.Throwable) jacksonWrapperException62);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException56);
        jacksonWrapperException54.addSuppressed((java.lang.Throwable) jacksonWrapperException56);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException54);
        jacksonWrapperException48.addSuppressed((java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException71 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException70);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException72 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException70);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException74 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray75 = jacksonWrapperException74.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException76 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException74);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException78 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray79 = jacksonWrapperException78.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException80 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException78);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException81 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException80);
        jacksonWrapperException74.addSuppressed((java.lang.Throwable) jacksonWrapperException80);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException83 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException80);
        java.lang.Throwable[] throwableArray84 = jacksonWrapperException80.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException87 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException88 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException87);
        jacksonWrapperException80.addSuppressed((java.lang.Throwable) jacksonWrapperException88);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException90 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException88);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException92 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray93 = jacksonWrapperException92.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException94 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException92);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException95 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException94);
        jacksonWrapperException90.addSuppressed((java.lang.Throwable) jacksonWrapperException94);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException97 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException90);
        jacksonWrapperException72.addSuppressed((java.lang.Throwable) jacksonWrapperException90);
        jacksonWrapperException43.addSuppressed((java.lang.Throwable) jacksonWrapperException90);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(throwableArray79);
        org.junit.Assert.assertNotNull(throwableArray84);
        org.junit.Assert.assertNotNull(throwableArray93);
    }

    @Test
    public void test05953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05953");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff2.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff2.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = jsonDiff2.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNull(wildcardVisitor7);
    }

    @Test
    public void test05954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05954");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        int int13 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Node node14 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        foodev.jsondiff.Leaf[] leafArray16 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList17 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList17, leafArray16);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap19 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf20 = jsonDiff3.findLeaves(node14, jzonElement15, (java.util.List<foodev.jsondiff.Leaf>) leafList17, intMap19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(leafArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test05955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05955");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException26);
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException18.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray35 = jacksonWrapperException34.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException38.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException40);
        jacksonWrapperException34.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray48 = jacksonWrapperException47.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray52 = jacksonWrapperException51.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException53);
        jacksonWrapperException47.addSuppressed((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray59 = jacksonWrapperException58.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException58);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray63 = jacksonWrapperException62.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException62);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException64);
        jacksonWrapperException58.addSuppressed((java.lang.Throwable) jacksonWrapperException64);
        jacksonWrapperException57.addSuppressed((java.lang.Throwable) jacksonWrapperException58);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException58);
        jacksonWrapperException40.addSuppressed((java.lang.Throwable) jacksonWrapperException58);
        jacksonWrapperException32.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        java.lang.String str72 = jacksonWrapperException40.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str72, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test05956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05956");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff10.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff10.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = wrapper12.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test05957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05957");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff7.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff7.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff12.factory;
        foodev.jsondiff.Leaf leaf15 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray16 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = jsonDiff12.accept(leaf15, jzonArray16, jzonObject17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(wrapper14);
    }

    @Test
    public void test05958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05958");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = wrapper6.wrap((java.lang.Object) jacksonWrapperException9);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(throwableArray10);
    }

    @Test
    public void test05959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05959");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff7.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff7.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff7.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper14);
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff15.factory;
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper16);
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper16);
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff18.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff18.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException33.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException35);
        jacksonWrapperException29.addSuppressed((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException40);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray57 = jacksonWrapperException56.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException56);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray61 = jacksonWrapperException60.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException60);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException62);
        jacksonWrapperException56.addSuppressed((java.lang.Throwable) jacksonWrapperException62);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException62);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException65);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray69 = jacksonWrapperException68.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException68.addSuppressed((java.lang.Throwable) jacksonWrapperException70);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException72 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException68);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException73 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException72);
        jacksonWrapperException65.addSuppressed((java.lang.Throwable) jacksonWrapperException73);
        java.lang.Throwable[] throwableArray75 = jacksonWrapperException65.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException77 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray78 = jacksonWrapperException77.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException79 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException77.addSuppressed((java.lang.Throwable) jacksonWrapperException79);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException81 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException79);
        jacksonWrapperException65.addSuppressed((java.lang.Throwable) jacksonWrapperException81);
        jacksonWrapperException54.addSuppressed((java.lang.Throwable) jacksonWrapperException81);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException81);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj85 = jsonDiff13.diff((java.lang.Object) jsonDiff18, (java.lang.Object) jacksonWrapperException81);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(throwableArray78);
    }

    @Test
    public void test05960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05960");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Leaf leaf11 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray12 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = jsonDiff8.accept(leaf11, jzonArray12, jzonObject13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction10);
    }

    @Test
    public void test05961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05961");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper5);
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff6.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff6.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff6.factory;
        int int11 = jsonDiff6.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff6.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff6.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff6.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper14);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = jacksonWrapper0.wrap((java.lang.Object) wrapper14);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(wrapper14);
    }

    @Test
    public void test05962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05962");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        int int12 = jsonDiff9.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = wrapper13.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
    }

    @Test
    public void test05963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05963");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException9);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException13.getSuppressed();
        java.lang.String str23 = jacksonWrapperException13.toString();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~" + "'", str23, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
    }

    @Test
    public void test05964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05964");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff2.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor5 = jsonDiff2.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff2.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException23.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff39 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper38);
        int int41 = jsonDiff39.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction43 = jsonDiff39.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper44 = jsonDiff39.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction46 = jsonDiff39.create("");
        boolean boolean47 = instruction46.isIndexed();
        instruction46.index = (byte) 100;
        instruction46.key = "hi!";
        boolean boolean52 = instruction46.isIndexed();
        instruction46.index = 97;
        instruction46.index = 35;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff2.apply((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Object) instruction46);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNull(wildcardVisitor5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(instruction43);
        org.junit.Assert.assertNotNull(wrapper44);
        org.junit.Assert.assertNotNull(instruction46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test05965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05965");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean6 = instruction5.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        int int10 = jsonDiff8.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper13 = instruction12.oper;
        instruction5.oper = oper13;
        foodev.jsondiff.Oper oper15 = instruction5.oper;
        java.lang.Class<?> wildcardClass16 = oper15.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + oper13 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper13.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper15 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper15.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test05966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05966");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        int int5 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = jsonDiff1.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test05967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05967");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor5 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int8 = instruction7.index;
        int int9 = instruction7.index;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertNull(wildcardVisitor5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test05968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05968");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException18.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement26 = gsonWrapper0.wrap((java.lang.Object) jacksonWrapperException18);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray19);
    }

    @Test
    public void test05969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05969");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction5.index = (short) 0;
        instruction5.index = 0;
        instruction5.index = (short) 1;
        instruction5.key = "~";
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
    }

    @Test
    public void test05970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05970");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff11.getVisitor();
        foodev.jsondiff.Leaf leaf13 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray14 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = jsonDiff11.accept(leaf13, jzonArray14, jzonObject15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor12);
    }

    @Test
    public void test05971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05971");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff1.getVisitor();
        int int12 = jsonDiff1.isIndexed("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = jsonDiff1.apply("", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test05972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05972");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement4 = jacksonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05973");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper3);
        int int6 = jsonDiff4.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean9 = instruction8.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff13.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff13.create("");
        instruction16.key = "hi!";
        int int19 = instruction16.index;
        foodev.jsondiff.Oper oper20 = instruction16.oper;
        instruction8.oper = oper20;
        int int22 = instruction8.index;
        java.lang.String str23 = instruction8.key;
        java.lang.String str24 = instruction8.key;
        foodev.jsondiff.Oper oper25 = null;
        instruction8.oper = oper25;
        foodev.jsondiff.JsonDiff.Instruction instruction27 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper28 = instruction27.oper;
        instruction27.key = "~";
        instruction27.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff34 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper33);
        foodev.jsondiff.jsonwrap.Wrapper wrapper35 = jsonDiff34.factory;
        foodev.jsondiff.JsonDiff jsonDiff36 = new foodev.jsondiff.JsonDiff(wrapper35);
        foodev.jsondiff.JsonDiff.Instruction instruction38 = jsonDiff36.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction40 = jsonDiff36.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction40.index = (short) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff44 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper43);
        foodev.jsondiff.jsonwrap.Wrapper wrapper45 = jsonDiff44.factory;
        foodev.jsondiff.JsonDiff jsonDiff46 = new foodev.jsondiff.JsonDiff(wrapper45);
        foodev.jsondiff.JsonDiff.Instruction instruction48 = jsonDiff46.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction50 = jsonDiff46.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction50.index = (short) 100;
        boolean boolean53 = instruction50.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction54 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper55 = instruction54.oper;
        instruction54.key = "~";
        int int58 = instruction54.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff60 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper59);
        int int62 = jsonDiff60.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction64 = jsonDiff60.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean65 = instruction64.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff67 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper66);
        int int69 = jsonDiff67.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction71 = jsonDiff67.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper72 = instruction71.oper;
        instruction64.oper = oper72;
        instruction54.oper = oper72;
        foodev.jsondiff.Oper oper75 = instruction54.oper;
        instruction50.oper = oper75;
        instruction40.oper = oper75;
        instruction27.oper = oper75;
        foodev.jsondiff.Oper oper79 = instruction27.oper;
        instruction8.oper = oper79;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement81 = jacksonWrapper0.wrap((java.lang.Object) instruction8);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + oper20 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper20.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str23, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str24, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertNull(oper28);
        org.junit.Assert.assertNotNull(wrapper35);
        org.junit.Assert.assertNotNull(instruction38);
        org.junit.Assert.assertNotNull(instruction40);
        org.junit.Assert.assertNotNull(wrapper45);
        org.junit.Assert.assertNotNull(instruction48);
        org.junit.Assert.assertNotNull(instruction50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(oper55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(instruction64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(instruction71);
        org.junit.Assert.assertTrue("'" + oper72 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper72.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper75 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper75.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper79 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper79.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05974");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff7.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = jsonDiff7.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction9);
    }

    @Test
    public void test05975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05975");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement10, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
    }

    @Test
    public void test05976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05976");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        boolean boolean6 = instruction5.isIndexed();
        instruction5.key = "~";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff10.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff12.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction16.index = (short) 100;
        boolean boolean19 = instruction16.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction20 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper21 = instruction20.oper;
        instruction20.key = "~";
        int int24 = instruction20.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff26 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper25);
        int int28 = jsonDiff26.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction30 = jsonDiff26.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean31 = instruction30.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff33 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper32);
        int int35 = jsonDiff33.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction37 = jsonDiff33.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper38 = instruction37.oper;
        instruction30.oper = oper38;
        instruction20.oper = oper38;
        foodev.jsondiff.Oper oper41 = instruction20.oper;
        instruction16.oper = oper41;
        instruction5.oper = oper41;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff45 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper44);
        foodev.jsondiff.jsonwrap.Wrapper wrapper46 = jsonDiff45.factory;
        foodev.jsondiff.JsonDiff jsonDiff47 = new foodev.jsondiff.JsonDiff(wrapper46);
        foodev.jsondiff.JsonDiff.Instruction instruction49 = jsonDiff47.create("");
        instruction49.key = "hi!";
        int int52 = instruction49.index;
        int int53 = instruction49.index;
        int int54 = instruction49.index;
        foodev.jsondiff.Oper oper55 = instruction49.oper;
        instruction5.oper = oper55;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff58 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper57);
        foodev.jsondiff.jsonwrap.Wrapper wrapper59 = jsonDiff58.factory;
        foodev.jsondiff.JsonDiff jsonDiff60 = new foodev.jsondiff.JsonDiff(wrapper59);
        foodev.jsondiff.Visitor<?> wildcardVisitor61 = jsonDiff60.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction63 = jsonDiff60.create("");
        instruction63.key = "hi!";
        int int66 = instruction63.index;
        foodev.jsondiff.Oper oper67 = instruction63.oper;
        instruction5.oper = oper67;
        java.lang.Class<?> wildcardClass69 = instruction5.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(oper21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(instruction30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(instruction37);
        org.junit.Assert.assertTrue("'" + oper38 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper38.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper41 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper41.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper46);
        org.junit.Assert.assertNotNull(instruction49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + oper55 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper55.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper59);
        org.junit.Assert.assertNull(wildcardVisitor61);
        org.junit.Assert.assertNotNull(instruction63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + oper67 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper67.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test05977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05977");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement13, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor12);
    }

    @Test
    public void test05978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05978");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException8);
        java.lang.String str15 = jacksonWrapperException14.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str15, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test05979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05979");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff3.create("hi!");
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(instruction16);
    }

    @Test
    public void test05980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05980");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper11);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = wrapper11.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
    }

    @Test
    public void test05981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05981");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff12.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper14);
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff15.factory;
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper16);
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff17.create("");
        int int21 = jsonDiff17.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff17.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction27.index = 100;
        int int30 = instruction27.index;
        foodev.jsondiff.Oper oper31 = instruction27.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff33 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper32);
        foodev.jsondiff.jsonwrap.Wrapper wrapper34 = jsonDiff33.factory;
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff(wrapper34);
        foodev.jsondiff.JsonDiff.Instruction instruction37 = jsonDiff35.create("");
        boolean boolean38 = instruction37.isIndexed();
        instruction37.index = (short) -1;
        instruction37.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction37.key = "hi!";
        int int45 = instruction37.index;
        foodev.jsondiff.Oper oper46 = instruction37.oper;
        foodev.jsondiff.Oper oper47 = instruction37.oper;
        instruction37.index = (byte) 0;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = jsonDiff12.diff((java.lang.Object) instruction27, (java.lang.Object) instruction37);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor13);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertTrue("'" + oper31 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper31.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper34);
        org.junit.Assert.assertNotNull(instruction37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + oper46 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper46.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper47 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper47.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05982");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff11.apply(jzonElement13, jzonElement14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test05983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05983");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        int int14 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        int int19 = jsonDiff17.isIndexed("hi!");
        int int21 = jsonDiff17.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff17.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff17.factory;
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff(wrapper23);
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff(wrapper23);
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff25.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int29 = jsonDiff25.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction31 = jsonDiff25.create("~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement32 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement15, instruction31, jzonElement32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(instruction31);
    }

    @Test
    public void test05984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05984");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Leaf leaf9 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray10 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = jsonDiff1.accept(leaf9, jzonArray10, jzonObject11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
    }

    @Test
    public void test05985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05985");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor18 = jsonDiff13.getVisitor();
        int int20 = jsonDiff13.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement25 = wrapper10.wrap((java.lang.Object) instruction24);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNull(wildcardVisitor18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertNotNull(instruction24);
    }

    @Test
    public void test05986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05986");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff.Instruction instruction2 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper3 = instruction2.oper;
        instruction2.index = (-1);
        java.lang.String str6 = instruction2.key;
        instruction2.key = "~";
        boolean boolean9 = instruction2.isIndexed();
        boolean boolean10 = instruction2.isIndexed();
        int int11 = instruction2.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff15.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff15.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction19.index = (short) 100;
        boolean boolean22 = instruction19.isIndexed();
        java.lang.String str23 = instruction19.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper24);
        foodev.jsondiff.jsonwrap.Wrapper wrapper26 = jsonDiff25.factory;
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff(wrapper26);
        foodev.jsondiff.Visitor<?> wildcardVisitor28 = jsonDiff27.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction30 = jsonDiff27.create("");
        instruction30.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper33 = instruction30.oper;
        instruction30.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper36);
        foodev.jsondiff.jsonwrap.Wrapper wrapper38 = jsonDiff37.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction40 = jsonDiff37.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction41 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction41.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff45 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper44);
        int int47 = jsonDiff45.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction49 = jsonDiff45.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper50 = instruction49.oper;
        instruction41.oper = oper50;
        instruction40.oper = oper50;
        instruction30.oper = oper50;
        instruction19.oper = oper50;
        instruction2.oper = oper50;
        instruction2.index = 0;
        instruction2.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement60 = gsonWrapper0.wrap((java.lang.Object) instruction2);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(oper3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str23, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertNotNull(wrapper26);
        org.junit.Assert.assertNull(wildcardVisitor28);
        org.junit.Assert.assertNotNull(instruction30);
        org.junit.Assert.assertTrue("'" + oper33 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper33.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper38);
        org.junit.Assert.assertNotNull(instruction40);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(instruction49);
        org.junit.Assert.assertTrue("'" + oper50 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper50.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05987");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff10.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff12.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff12.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff12.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction19.index = 'a';
        foodev.jsondiff.jsonwrap.JzonElement jzonElement22 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement8, instruction19, jzonElement22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(wildcardVisitor13);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(instruction19);
    }

    @Test
    public void test05988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05988");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int10 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = jsonDiff3.diff("~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(instruction12);
    }

    @Test
    public void test05989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05989");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = jsonDiff1.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertNotNull(instruction6);
    }

    @Test
    public void test05990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05990");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        java.lang.Class<?> wildcardClass6 = jsonDiff5.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test05991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05991");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff4.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff4.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff4.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = wrapper8.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
    }

    @Test
    public void test05992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05992");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~");
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException32.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException34);
        jacksonWrapperException28.addSuppressed((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray41 = jacksonWrapperException40.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray45 = jacksonWrapperException44.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray49 = jacksonWrapperException48.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException50);
        jacksonWrapperException44.addSuppressed((java.lang.Throwable) jacksonWrapperException50);
        jacksonWrapperException42.addSuppressed((java.lang.Throwable) jacksonWrapperException44);
        jacksonWrapperException37.addSuppressed((java.lang.Throwable) jacksonWrapperException42);
        jacksonWrapperException21.addSuppressed((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) jacksonWrapperException11, (java.lang.Object) jacksonWrapperException58);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray49);
    }

    @Test
    public void test05993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05993");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException21.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException32.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException36.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException32.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException31.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray45 = jacksonWrapperException44.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException46);
        jacksonWrapperException42.addSuppressed((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException42);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff54 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper53);
        foodev.jsondiff.jsonwrap.Wrapper wrapper55 = jsonDiff54.factory;
        foodev.jsondiff.JsonDiff jsonDiff56 = new foodev.jsondiff.JsonDiff(wrapper55);
        foodev.jsondiff.Visitor<?> wildcardVisitor57 = jsonDiff56.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction59 = jsonDiff56.create("");
        int int60 = instruction59.index;
        foodev.jsondiff.Oper oper61 = instruction59.oper;
        java.lang.Class<?> wildcardClass62 = oper61.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj63 = jsonDiff13.diff((java.lang.Object) jacksonWrapperException15, (java.lang.Object) wildcardClass62);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(wrapper55);
        org.junit.Assert.assertNull(wildcardVisitor57);
        org.junit.Assert.assertNotNull(instruction59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + oper61 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper61.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test05994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05994");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff3.create("");
        foodev.jsondiff.Leaf leaf17 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray18 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = jsonDiff3.accept(leaf17, jzonArray18, jzonObject19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(instruction16);
    }

    @Test
    public void test05995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05995");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = wrapper7.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
    }

    @Test
    public void test05996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05996");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray1 = jacksonWrapperException0.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException17);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException2.getSuppressed();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException2.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray1);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray22);
    }

    @Test
    public void test05997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05997");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException28);
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException35);
        jacksonWrapperException28.addSuppressed((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException39.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray44 = jacksonWrapperException43.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException45);
        jacksonWrapperException39.addSuppressed((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        java.lang.Throwable[] throwableArray49 = jacksonWrapperException45.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException45.addSuppressed((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray58 = jacksonWrapperException57.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException59);
        jacksonWrapperException55.addSuppressed((java.lang.Throwable) jacksonWrapperException59);
        jacksonWrapperException36.addSuppressed((java.lang.Throwable) jacksonWrapperException55);
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException36);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement64 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException36);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray58);
    }

    @Test
    public void test05998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05998");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff.Instruction instruction11 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper12 = instruction11.oper;
        instruction11.key = "~";
        instruction11.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff20.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff20.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction24.index = (short) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper27);
        foodev.jsondiff.jsonwrap.Wrapper wrapper29 = jsonDiff28.factory;
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff(wrapper29);
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff30.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction34 = jsonDiff30.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction34.index = (short) 100;
        boolean boolean37 = instruction34.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction38 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper39 = instruction38.oper;
        instruction38.key = "~";
        int int42 = instruction38.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff44 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper43);
        int int46 = jsonDiff44.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction48 = jsonDiff44.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean49 = instruction48.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff51 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper50);
        int int53 = jsonDiff51.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction55 = jsonDiff51.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper56 = instruction55.oper;
        instruction48.oper = oper56;
        instruction38.oper = oper56;
        foodev.jsondiff.Oper oper59 = instruction38.oper;
        instruction34.oper = oper59;
        instruction24.oper = oper59;
        instruction11.oper = oper59;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement63 = wrapper8.wrap((java.lang.Object) instruction11);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(oper12);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertNotNull(wrapper29);
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertNotNull(instruction34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(oper39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(instruction48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(instruction55);
        org.junit.Assert.assertTrue("'" + oper56 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper56.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper59 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper59.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test05999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05999");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray1 = jacksonWrapperException0.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException6);
        jacksonWrapperException0.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException31.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException33);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException27.getSuppressed();
        jacksonWrapperException23.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        java.lang.String str40 = jacksonWrapperException27.toString();
        org.junit.Assert.assertNotNull(throwableArray1);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str40, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test06000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test06000");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement6, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
    }
}

